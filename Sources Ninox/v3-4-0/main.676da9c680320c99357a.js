/*! For license information please see main.676da9c680320c99357a.js.LICENSE.txt */
var libs = (function (e) {
  function t(t) {
    for (
      var o, s, r = t[0], l = t[1], c = t[2], d = 0, p = [];
      d < r.length;
      d++
    )
      (s = r[d]),
        Object.prototype.hasOwnProperty.call(a, s) && a[s] && p.push(a[s][0]),
        (a[s] = 0);
    for (o in l) Object.prototype.hasOwnProperty.call(l, o) && (e[o] = l[o]);
    for (u && u(t); p.length; ) p.shift()();
    return n.push.apply(n, c || []), i();
  }
  function i() {
    for (var e, t = 0; t < n.length; t++) {
      for (var i = n[t], o = !0, s = 1; s < i.length; s++) {
        var l = i[s];
        0 !== a[l] && (o = !1);
      }
      o && (n.splice(t--, 1), (e = r((r.s = i[0]))));
    }
    return e;
  }
  var o = {},
    a = { main: 0 },
    n = [];
  function s(e) {
    return (
      r.p +
      "" +
      ({ "vendors~pdfjsWorker": "vendors~pdfjsWorker" }[e] || e) +
      ".676da9c680320c99357a.js"
    );
  }
  function r(t) {
    if (o[t]) return o[t].exports;
    var i = (o[t] = { i: t, l: !1, exports: {} });
    return e[t].call(i.exports, i, i.exports, r), (i.l = !0), i.exports;
  }
  (r.e = function (e) {
    var t = [],
      i = a[e];
    if (0 !== i)
      if (i) t.push(i[2]);
      else {
        var o = new Promise(function (t, o) {
          i = a[e] = [t, o];
        });
        t.push((i[2] = o));
        var n,
          l = document.createElement("script");
        (l.charset = "utf-8"),
          (l.timeout = 120),
          r.nc && l.setAttribute("nonce", r.nc),
          (l.src = s(e));
        var c = new Error();
        n = function (t) {
          (l.onerror = l.onload = null), clearTimeout(d);
          var i = a[e];
          if (0 !== i) {
            if (i) {
              var o = t && ("load" === t.type ? "missing" : t.type),
                n = t && t.target && t.target.src;
              (c.message =
                "Loading chunk " + e + " failed.\n(" + o + ": " + n + ")"),
                (c.name = "ChunkLoadError"),
                (c.type = o),
                (c.request = n),
                i[1](c);
            }
            a[e] = void 0;
          }
        };
        var d = setTimeout(function () {
          n({ type: "timeout", target: l });
        }, 12e4);
        (l.onerror = l.onload = n), document.head.appendChild(l);
      }
    return Promise.all(t);
  }),
    (r.m = e),
    (r.c = o),
    (r.d = function (e, t, i) {
      r.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: i });
    }),
    (r.r = function (e) {
      "undefined" != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
        Object.defineProperty(e, "__esModule", { value: !0 });
    }),
    (r.t = function (e, t) {
      if ((1 & t && (e = r(e)), 8 & t)) return e;
      if (4 & t && "object" == typeof e && e && e.__esModule) return e;
      var i = Object.create(null);
      if (
        (r.r(i),
        Object.defineProperty(i, "default", { enumerable: !0, value: e }),
        2 & t && "string" != typeof e)
      )
        for (var o in e)
          r.d(
            i,
            o,
            function (t) {
              return e[t];
            }.bind(null, o)
          );
      return i;
    }),
    (r.n = function (e) {
      var t =
        e && e.__esModule
          ? function () {
              return e.default;
            }
          : function () {
              return e;
            };
      return r.d(t, "a", t), t;
    }),
    (r.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (r.p = ""),
    (r.oe = function (e) {
      throw (console.error(e), e);
    });
  var l = (window.webpackJsonplibs = window.webpackJsonplibs || []),
    c = l.push.bind(l);
  (l.push = t), (l = l.slice());
  for (var d = 0; d < l.length; d++) t(l[d]);
  var u = c;
  return n.push([0, "defaultVendors~main", "css~main"]), i();
})({
  "./node_modules/moment/locale sync recursive ^\\.\\/.*$": function (e, t, i) {
    var o = {
      "./af": "./node_modules/moment/locale/af.js",
      "./af.js": "./node_modules/moment/locale/af.js",
      "./ar": "./node_modules/moment/locale/ar.js",
      "./ar-dz": "./node_modules/moment/locale/ar-dz.js",
      "./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
      "./ar-kw": "./node_modules/moment/locale/ar-kw.js",
      "./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
      "./ar-ly": "./node_modules/moment/locale/ar-ly.js",
      "./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
      "./ar-ma": "./node_modules/moment/locale/ar-ma.js",
      "./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
      "./ar-sa": "./node_modules/moment/locale/ar-sa.js",
      "./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
      "./ar-tn": "./node_modules/moment/locale/ar-tn.js",
      "./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
      "./ar.js": "./node_modules/moment/locale/ar.js",
      "./az": "./node_modules/moment/locale/az.js",
      "./az.js": "./node_modules/moment/locale/az.js",
      "./be": "./node_modules/moment/locale/be.js",
      "./be.js": "./node_modules/moment/locale/be.js",
      "./bg": "./node_modules/moment/locale/bg.js",
      "./bg.js": "./node_modules/moment/locale/bg.js",
      "./bm": "./node_modules/moment/locale/bm.js",
      "./bm.js": "./node_modules/moment/locale/bm.js",
      "./bn": "./node_modules/moment/locale/bn.js",
      "./bn.js": "./node_modules/moment/locale/bn.js",
      "./bo": "./node_modules/moment/locale/bo.js",
      "./bo.js": "./node_modules/moment/locale/bo.js",
      "./br": "./node_modules/moment/locale/br.js",
      "./br.js": "./node_modules/moment/locale/br.js",
      "./bs": "./node_modules/moment/locale/bs.js",
      "./bs.js": "./node_modules/moment/locale/bs.js",
      "./ca": "./node_modules/moment/locale/ca.js",
      "./ca.js": "./node_modules/moment/locale/ca.js",
      "./cs": "./node_modules/moment/locale/cs.js",
      "./cs.js": "./node_modules/moment/locale/cs.js",
      "./cv": "./node_modules/moment/locale/cv.js",
      "./cv.js": "./node_modules/moment/locale/cv.js",
      "./cy": "./node_modules/moment/locale/cy.js",
      "./cy.js": "./node_modules/moment/locale/cy.js",
      "./da": "./node_modules/moment/locale/da.js",
      "./da.js": "./node_modules/moment/locale/da.js",
      "./de": "./node_modules/moment/locale/de.js",
      "./de-at": "./node_modules/moment/locale/de-at.js",
      "./de-at.js": "./node_modules/moment/locale/de-at.js",
      "./de-ch": "./node_modules/moment/locale/de-ch.js",
      "./de-ch.js": "./node_modules/moment/locale/de-ch.js",
      "./de.js": "./node_modules/moment/locale/de.js",
      "./dv": "./node_modules/moment/locale/dv.js",
      "./dv.js": "./node_modules/moment/locale/dv.js",
      "./el": "./node_modules/moment/locale/el.js",
      "./el.js": "./node_modules/moment/locale/el.js",
      "./en-SG": "./node_modules/moment/locale/en-SG.js",
      "./en-SG.js": "./node_modules/moment/locale/en-SG.js",
      "./en-au": "./node_modules/moment/locale/en-au.js",
      "./en-au.js": "./node_modules/moment/locale/en-au.js",
      "./en-ca": "./node_modules/moment/locale/en-ca.js",
      "./en-ca.js": "./node_modules/moment/locale/en-ca.js",
      "./en-gb": "./node_modules/moment/locale/en-gb.js",
      "./en-gb.js": "./node_modules/moment/locale/en-gb.js",
      "./en-ie": "./node_modules/moment/locale/en-ie.js",
      "./en-ie.js": "./node_modules/moment/locale/en-ie.js",
      "./en-il": "./node_modules/moment/locale/en-il.js",
      "./en-il.js": "./node_modules/moment/locale/en-il.js",
      "./en-nz": "./node_modules/moment/locale/en-nz.js",
      "./en-nz.js": "./node_modules/moment/locale/en-nz.js",
      "./eo": "./node_modules/moment/locale/eo.js",
      "./eo.js": "./node_modules/moment/locale/eo.js",
      "./es": "./node_modules/moment/locale/es.js",
      "./es-do": "./node_modules/moment/locale/es-do.js",
      "./es-do.js": "./node_modules/moment/locale/es-do.js",
      "./es-us": "./node_modules/moment/locale/es-us.js",
      "./es-us.js": "./node_modules/moment/locale/es-us.js",
      "./es.js": "./node_modules/moment/locale/es.js",
      "./et": "./node_modules/moment/locale/et.js",
      "./et.js": "./node_modules/moment/locale/et.js",
      "./eu": "./node_modules/moment/locale/eu.js",
      "./eu.js": "./node_modules/moment/locale/eu.js",
      "./fa": "./node_modules/moment/locale/fa.js",
      "./fa.js": "./node_modules/moment/locale/fa.js",
      "./fi": "./node_modules/moment/locale/fi.js",
      "./fi.js": "./node_modules/moment/locale/fi.js",
      "./fo": "./node_modules/moment/locale/fo.js",
      "./fo.js": "./node_modules/moment/locale/fo.js",
      "./fr": "./node_modules/moment/locale/fr.js",
      "./fr-ca": "./node_modules/moment/locale/fr-ca.js",
      "./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
      "./fr-ch": "./node_modules/moment/locale/fr-ch.js",
      "./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
      "./fr.js": "./node_modules/moment/locale/fr.js",
      "./fy": "./node_modules/moment/locale/fy.js",
      "./fy.js": "./node_modules/moment/locale/fy.js",
      "./ga": "./node_modules/moment/locale/ga.js",
      "./ga.js": "./node_modules/moment/locale/ga.js",
      "./gd": "./node_modules/moment/locale/gd.js",
      "./gd.js": "./node_modules/moment/locale/gd.js",
      "./gl": "./node_modules/moment/locale/gl.js",
      "./gl.js": "./node_modules/moment/locale/gl.js",
      "./gom-latn": "./node_modules/moment/locale/gom-latn.js",
      "./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
      "./gu": "./node_modules/moment/locale/gu.js",
      "./gu.js": "./node_modules/moment/locale/gu.js",
      "./he": "./node_modules/moment/locale/he.js",
      "./he.js": "./node_modules/moment/locale/he.js",
      "./hi": "./node_modules/moment/locale/hi.js",
      "./hi.js": "./node_modules/moment/locale/hi.js",
      "./hr": "./node_modules/moment/locale/hr.js",
      "./hr.js": "./node_modules/moment/locale/hr.js",
      "./hu": "./node_modules/moment/locale/hu.js",
      "./hu.js": "./node_modules/moment/locale/hu.js",
      "./hy-am": "./node_modules/moment/locale/hy-am.js",
      "./hy-am.js": "./node_modules/moment/locale/hy-am.js",
      "./id": "./node_modules/moment/locale/id.js",
      "./id.js": "./node_modules/moment/locale/id.js",
      "./is": "./node_modules/moment/locale/is.js",
      "./is.js": "./node_modules/moment/locale/is.js",
      "./it": "./node_modules/moment/locale/it.js",
      "./it-ch": "./node_modules/moment/locale/it-ch.js",
      "./it-ch.js": "./node_modules/moment/locale/it-ch.js",
      "./it.js": "./node_modules/moment/locale/it.js",
      "./ja": "./node_modules/moment/locale/ja.js",
      "./ja.js": "./node_modules/moment/locale/ja.js",
      "./jv": "./node_modules/moment/locale/jv.js",
      "./jv.js": "./node_modules/moment/locale/jv.js",
      "./ka": "./node_modules/moment/locale/ka.js",
      "./ka.js": "./node_modules/moment/locale/ka.js",
      "./kk": "./node_modules/moment/locale/kk.js",
      "./kk.js": "./node_modules/moment/locale/kk.js",
      "./km": "./node_modules/moment/locale/km.js",
      "./km.js": "./node_modules/moment/locale/km.js",
      "./kn": "./node_modules/moment/locale/kn.js",
      "./kn.js": "./node_modules/moment/locale/kn.js",
      "./ko": "./node_modules/moment/locale/ko.js",
      "./ko.js": "./node_modules/moment/locale/ko.js",
      "./ku": "./node_modules/moment/locale/ku.js",
      "./ku.js": "./node_modules/moment/locale/ku.js",
      "./ky": "./node_modules/moment/locale/ky.js",
      "./ky.js": "./node_modules/moment/locale/ky.js",
      "./lb": "./node_modules/moment/locale/lb.js",
      "./lb.js": "./node_modules/moment/locale/lb.js",
      "./lo": "./node_modules/moment/locale/lo.js",
      "./lo.js": "./node_modules/moment/locale/lo.js",
      "./lt": "./node_modules/moment/locale/lt.js",
      "./lt.js": "./node_modules/moment/locale/lt.js",
      "./lv": "./node_modules/moment/locale/lv.js",
      "./lv.js": "./node_modules/moment/locale/lv.js",
      "./me": "./node_modules/moment/locale/me.js",
      "./me.js": "./node_modules/moment/locale/me.js",
      "./mi": "./node_modules/moment/locale/mi.js",
      "./mi.js": "./node_modules/moment/locale/mi.js",
      "./mk": "./node_modules/moment/locale/mk.js",
      "./mk.js": "./node_modules/moment/locale/mk.js",
      "./ml": "./node_modules/moment/locale/ml.js",
      "./ml.js": "./node_modules/moment/locale/ml.js",
      "./mn": "./node_modules/moment/locale/mn.js",
      "./mn.js": "./node_modules/moment/locale/mn.js",
      "./mr": "./node_modules/moment/locale/mr.js",
      "./mr.js": "./node_modules/moment/locale/mr.js",
      "./ms": "./node_modules/moment/locale/ms.js",
      "./ms-my": "./node_modules/moment/locale/ms-my.js",
      "./ms-my.js": "./node_modules/moment/locale/ms-my.js",
      "./ms.js": "./node_modules/moment/locale/ms.js",
      "./mt": "./node_modules/moment/locale/mt.js",
      "./mt.js": "./node_modules/moment/locale/mt.js",
      "./my": "./node_modules/moment/locale/my.js",
      "./my.js": "./node_modules/moment/locale/my.js",
      "./nb": "./node_modules/moment/locale/nb.js",
      "./nb.js": "./node_modules/moment/locale/nb.js",
      "./ne": "./node_modules/moment/locale/ne.js",
      "./ne.js": "./node_modules/moment/locale/ne.js",
      "./nl": "./node_modules/moment/locale/nl.js",
      "./nl-be": "./node_modules/moment/locale/nl-be.js",
      "./nl-be.js": "./node_modules/moment/locale/nl-be.js",
      "./nl.js": "./node_modules/moment/locale/nl.js",
      "./nn": "./node_modules/moment/locale/nn.js",
      "./nn.js": "./node_modules/moment/locale/nn.js",
      "./pa-in": "./node_modules/moment/locale/pa-in.js",
      "./pa-in.js": "./node_modules/moment/locale/pa-in.js",
      "./pl": "./node_modules/moment/locale/pl.js",
      "./pl.js": "./node_modules/moment/locale/pl.js",
      "./pt": "./node_modules/moment/locale/pt.js",
      "./pt-br": "./node_modules/moment/locale/pt-br.js",
      "./pt-br.js": "./node_modules/moment/locale/pt-br.js",
      "./pt.js": "./node_modules/moment/locale/pt.js",
      "./ro": "./node_modules/moment/locale/ro.js",
      "./ro.js": "./node_modules/moment/locale/ro.js",
      "./ru": "./node_modules/moment/locale/ru.js",
      "./ru.js": "./node_modules/moment/locale/ru.js",
      "./sd": "./node_modules/moment/locale/sd.js",
      "./sd.js": "./node_modules/moment/locale/sd.js",
      "./se": "./node_modules/moment/locale/se.js",
      "./se.js": "./node_modules/moment/locale/se.js",
      "./si": "./node_modules/moment/locale/si.js",
      "./si.js": "./node_modules/moment/locale/si.js",
      "./sk": "./node_modules/moment/locale/sk.js",
      "./sk.js": "./node_modules/moment/locale/sk.js",
      "./sl": "./node_modules/moment/locale/sl.js",
      "./sl.js": "./node_modules/moment/locale/sl.js",
      "./sq": "./node_modules/moment/locale/sq.js",
      "./sq.js": "./node_modules/moment/locale/sq.js",
      "./sr": "./node_modules/moment/locale/sr.js",
      "./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
      "./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
      "./sr.js": "./node_modules/moment/locale/sr.js",
      "./ss": "./node_modules/moment/locale/ss.js",
      "./ss.js": "./node_modules/moment/locale/ss.js",
      "./sv": "./node_modules/moment/locale/sv.js",
      "./sv.js": "./node_modules/moment/locale/sv.js",
      "./sw": "./node_modules/moment/locale/sw.js",
      "./sw.js": "./node_modules/moment/locale/sw.js",
      "./ta": "./node_modules/moment/locale/ta.js",
      "./ta.js": "./node_modules/moment/locale/ta.js",
      "./te": "./node_modules/moment/locale/te.js",
      "./te.js": "./node_modules/moment/locale/te.js",
      "./tet": "./node_modules/moment/locale/tet.js",
      "./tet.js": "./node_modules/moment/locale/tet.js",
      "./tg": "./node_modules/moment/locale/tg.js",
      "./tg.js": "./node_modules/moment/locale/tg.js",
      "./th": "./node_modules/moment/locale/th.js",
      "./th.js": "./node_modules/moment/locale/th.js",
      "./tl-ph": "./node_modules/moment/locale/tl-ph.js",
      "./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
      "./tlh": "./node_modules/moment/locale/tlh.js",
      "./tlh.js": "./node_modules/moment/locale/tlh.js",
      "./tr": "./node_modules/moment/locale/tr.js",
      "./tr.js": "./node_modules/moment/locale/tr.js",
      "./tzl": "./node_modules/moment/locale/tzl.js",
      "./tzl.js": "./node_modules/moment/locale/tzl.js",
      "./tzm": "./node_modules/moment/locale/tzm.js",
      "./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
      "./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
      "./tzm.js": "./node_modules/moment/locale/tzm.js",
      "./ug-cn": "./node_modules/moment/locale/ug-cn.js",
      "./ug-cn.js": "./node_modules/moment/locale/ug-cn.js",
      "./uk": "./node_modules/moment/locale/uk.js",
      "./uk.js": "./node_modules/moment/locale/uk.js",
      "./ur": "./node_modules/moment/locale/ur.js",
      "./ur.js": "./node_modules/moment/locale/ur.js",
      "./uz": "./node_modules/moment/locale/uz.js",
      "./uz-latn": "./node_modules/moment/locale/uz-latn.js",
      "./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
      "./uz.js": "./node_modules/moment/locale/uz.js",
      "./vi": "./node_modules/moment/locale/vi.js",
      "./vi.js": "./node_modules/moment/locale/vi.js",
      "./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
      "./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
      "./yo": "./node_modules/moment/locale/yo.js",
      "./yo.js": "./node_modules/moment/locale/yo.js",
      "./zh-cn": "./node_modules/moment/locale/zh-cn.js",
      "./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
      "./zh-hk": "./node_modules/moment/locale/zh-hk.js",
      "./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
      "./zh-tw": "./node_modules/moment/locale/zh-tw.js",
      "./zh-tw.js": "./node_modules/moment/locale/zh-tw.js",
    };
    function a(e) {
      var t = n(e);
      return i(t);
    }
    function n(e) {
      if (!i.o(o, e)) {
        var t = new Error("Cannot find module '" + e + "'");
        throw ((t.code = "MODULE_NOT_FOUND"), t);
      }
      return o[e];
    }
    (a.keys = function () {
      return Object.keys(o);
    }),
      (a.resolve = n),
      (e.exports = a),
      (a.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$");
  },
  "./node_modules/raw-loader/index.js!./node_modules/babel-loader/lib/index.js?!./node_modules/ifdef-loader/ifdef-loader.js?!./src/lib/jqueryui/jquery-ui-i18n.js":
    function (e, t) {
      e.exports =
        "/*! jQuery UI - v1.10.4 - 2014-01-29\n* http://jqueryui.com\n* Includes: jquery.ui.datepicker-af.js, jquery.ui.datepicker-ar-DZ.js, jquery.ui.datepicker-ar.js, jquery.ui.datepicker-az.js, jquery.ui.datepicker-bg.js, jquery.ui.datepicker-bs.js, jquery.ui.datepicker-ca.js, jquery.ui.datepicker-cs.js, jquery.ui.datepicker-cy-GB.js, jquery.ui.datepicker-da.js, jquery.ui.datepicker-de.js, jquery.ui.datepicker-el.js, jquery.ui.datepicker-en-AU.js, jquery.ui.datepicker-en-GB.js, jquery.ui.datepicker-en-NZ.js, jquery.ui.datepicker-eo.js, jquery.ui.datepicker-es.js, jquery.ui.datepicker-et.js, jquery.ui.datepicker-eu.js, jquery.ui.datepicker-fa.js, jquery.ui.datepicker-fi.js, jquery.ui.datepicker-fo.js, jquery.ui.datepicker-fr-CH.js, jquery.ui.datepicker-fr.js, jquery.ui.datepicker-gl.js, jquery.ui.datepicker-he.js, jquery.ui.datepicker-hi.js, jquery.ui.datepicker-hr.js, jquery.ui.datepicker-hu.js, jquery.ui.datepicker-hy.js, jquery.ui.datepicker-id.js, jquery.ui.datepicker-is.js, jquery.ui.datepicker-it.js, jquery.ui.datepicker-ja.js, jquery.ui.datepicker-ka.js, jquery.ui.datepicker-kk.js, jquery.ui.datepicker-km.js, jquery.ui.datepicker-ko.js, jquery.ui.datepicker-lb.js, jquery.ui.datepicker-lt.js, jquery.ui.datepicker-lv.js, jquery.ui.datepicker-mk.js, jquery.ui.datepicker-ml.js, jquery.ui.datepicker-ms.js, jquery.ui.datepicker-nl-BE.js, jquery.ui.datepicker-nl.js, jquery.ui.datepicker-no.js, jquery.ui.datepicker-pl.js, jquery.ui.datepicker-pt-BR.js, jquery.ui.datepicker-pt.js, jquery.ui.datepicker-rm.js, jquery.ui.datepicker-ro.js, jquery.ui.datepicker-ru.js, jquery.ui.datepicker-sk.js, jquery.ui.datepicker-sl.js, jquery.ui.datepicker-sq.js, jquery.ui.datepicker-sr-SR.js, jquery.ui.datepicker-sr.js, jquery.ui.datepicker-sv.js, jquery.ui.datepicker-ta.js, jquery.ui.datepicker-th.js, jquery.ui.datepicker-tj.js, jquery.ui.datepicker-tr.js, jquery.ui.datepicker-uk.js, jquery.ui.datepicker-vi.js, jquery.ui.datepicker-zh-CN.js, jquery.ui.datepicker-zh-HK.js, jquery.ui.datepicker-zh-TW.js, jquery.ui.datepicker-be.js, jquery.ui.datepicker-fr-CA.js, jquery.ui.datepicker-ky.js, jquery.ui.datepicker-nb.js, jquery.ui.datepicker-nn.js\n* Copyright 2014 jQuery Foundation and other contributors; Licensed MIT */\n\n/* Written by Renier Pretorius. */\n(function ($) {\n  $.datepicker.regional['af'] = {\n    closeText: 'Selekteer',\n    prevText: 'Vorige',\n    nextText: 'Volgende',\n    currentText: 'Vandag',\n    monthNames: ['Januarie', 'Februarie', 'Maart', 'April', 'Mei', 'Junie', 'Julie', 'Augustus', 'September', 'Oktober', 'November', 'Desember'],\n    monthNamesShort: ['Jan', 'Feb', 'Mrt', 'Apr', 'Mei', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Des'],\n    dayNames: ['Sondag', 'Maandag', 'Dinsdag', 'Woensdag', 'Donderdag', 'Vrydag', 'Saterdag'],\n    dayNamesShort: ['Son', 'Maa', 'Din', 'Woe', 'Don', 'Vry', 'Sat'],\n    dayNamesMin: ['So', 'Ma', 'Di', 'Wo', 'Do', 'Vr', 'Sa'],\n    weekHeader: 'Wk',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['af']);\n\n  /* Mohamed Cherif BOUCHELAGHEM -- cherifbouchelaghem@yahoo.fr */\n\n  $.datepicker.regional['ar-DZ'] = {\n    closeText: 'إغلاق',\n    prevText: '&#x3C;السابق',\n    nextText: 'التالي&#x3E;',\n    currentText: 'اليوم',\n    monthNames: ['جانفي', 'فيفري', 'مارس', 'أفريل', 'ماي', 'جوان', 'جويلية', 'أوت', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],\n    monthNamesShort: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\n    dayNames: ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    dayNamesShort: ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    dayNamesMin: ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    weekHeader: 'أسبوع',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 6,\n    isRTL: true,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['ar-DZ']);\n\n  /* Khaled Alhourani -- me@khaledalhourani.com */\n\n  /* NOTE: monthNames are the original months names and they are the Arabic names, not the new months name فبراير - يناير and there isn't any Arabic roots for these months */\n\n  $.datepicker.regional['ar'] = {\n    closeText: 'إغلاق',\n    prevText: '&#x3C;السابق',\n    nextText: 'التالي&#x3E;',\n    currentText: 'اليوم',\n    monthNames: ['كانون الثاني', 'شباط', 'آذار', 'نيسان', 'مايو', 'حزيران', 'تموز', 'آب', 'أيلول', 'تشرين الأول', 'تشرين الثاني', 'كانون الأول'],\n    monthNamesShort: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\n    dayNames: ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    dayNamesShort: ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت'],\n    dayNamesMin: ['ح', 'ن', 'ث', 'ر', 'خ', 'ج', 'س'],\n    weekHeader: 'أسبوع',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 6,\n    isRTL: true,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['ar']);\n\n  /* Written by Jamil Najafov (necefov33@gmail.com). */\n\n  $.datepicker.regional['az'] = {\n    closeText: 'Bağla',\n    prevText: '&#x3C;Geri',\n    nextText: 'İrəli&#x3E;',\n    currentText: 'Bugün',\n    monthNames: ['Yanvar', 'Fevral', 'Mart', 'Aprel', 'May', 'İyun', 'İyul', 'Avqust', 'Sentyabr', 'Oktyabr', 'Noyabr', 'Dekabr'],\n    monthNamesShort: ['Yan', 'Fev', 'Mar', 'Apr', 'May', 'İyun', 'İyul', 'Avq', 'Sen', 'Okt', 'Noy', 'Dek'],\n    dayNames: ['Bazar', 'Bazar ertəsi', 'Çərşənbə axşamı', 'Çərşənbə', 'Cümə axşamı', 'Cümə', 'Şənbə'],\n    dayNamesShort: ['B', 'Be', 'Ça', 'Ç', 'Ca', 'C', 'Ş'],\n    dayNamesMin: ['B', 'B', 'Ç', 'С', 'Ç', 'C', 'Ş'],\n    weekHeader: 'Hf',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['az']);\n\n  /* Written by Stoyan Kyosev (http://svest.org). */\n\n  $.datepicker.regional['bg'] = {\n    closeText: 'затвори',\n    prevText: '&#x3C;назад',\n    nextText: 'напред&#x3E;',\n    nextBigText: '&#x3E;&#x3E;',\n    currentText: 'днес',\n    monthNames: ['Януари', 'Февруари', 'Март', 'Април', 'Май', 'Юни', 'Юли', 'Август', 'Септември', 'Октомври', 'Ноември', 'Декември'],\n    monthNamesShort: ['Яну', 'Фев', 'Мар', 'Апр', 'Май', 'Юни', 'Юли', 'Авг', 'Сеп', 'Окт', 'Нов', 'Дек'],\n    dayNames: ['Неделя', 'Понеделник', 'Вторник', 'Сряда', 'Четвъртък', 'Петък', 'Събота'],\n    dayNamesShort: ['Нед', 'Пон', 'Вто', 'Сря', 'Чет', 'Пет', 'Съб'],\n    dayNamesMin: ['Не', 'По', 'Вт', 'Ср', 'Че', 'Пе', 'Съ'],\n    weekHeader: 'Wk',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['bg']);\n\n  /* Written by Kenan Konjo. */\n\n  $.datepicker.regional['bs'] = {\n    closeText: 'Zatvori',\n    prevText: '&#x3C;',\n    nextText: '&#x3E;',\n    currentText: 'Danas',\n    monthNames: ['Januar', 'Februar', 'Mart', 'April', 'Maj', 'Juni', 'Juli', 'August', 'Septembar', 'Oktobar', 'Novembar', 'Decembar'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'],\n    dayNames: ['Nedelja', 'Ponedeljak', 'Utorak', 'Srijeda', 'Četvrtak', 'Petak', 'Subota'],\n    dayNamesShort: ['Ned', 'Pon', 'Uto', 'Sri', 'Čet', 'Pet', 'Sub'],\n    dayNamesMin: ['Ne', 'Po', 'Ut', 'Sr', 'Če', 'Pe', 'Su'],\n    weekHeader: 'Wk',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['bs']);\n\n  /* Writers: (joan.leon@gmail.com). */\n\n  $.datepicker.regional['ca'] = {\n    closeText: 'Tanca',\n    prevText: 'Anterior',\n    nextText: 'Següent',\n    currentText: 'Avui',\n    monthNames: ['gener', 'febrer', 'març', 'abril', 'maig', 'juny', 'juliol', 'agost', 'setembre', 'octubre', 'novembre', 'desembre'],\n    monthNamesShort: ['gen', 'feb', 'març', 'abr', 'maig', 'juny', 'jul', 'ag', 'set', 'oct', 'nov', 'des'],\n    dayNames: ['diumenge', 'dilluns', 'dimarts', 'dimecres', 'dijous', 'divendres', 'dissabte'],\n    dayNamesShort: ['dg', 'dl', 'dt', 'dc', 'dj', 'dv', 'ds'],\n    dayNamesMin: ['dg', 'dl', 'dt', 'dc', 'dj', 'dv', 'ds'],\n    weekHeader: 'Set',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['ca']);\n\n  /* Written by Tomas Muller (tomas@tomas-muller.net). */\n\n  $.datepicker.regional['cs'] = {\n    closeText: 'Zavřít',\n    prevText: '&#x3C;Dříve',\n    nextText: 'Později&#x3E;',\n    currentText: 'Nyní',\n    monthNames: ['leden', 'únor', 'březen', 'duben', 'květen', 'červen', 'červenec', 'srpen', 'září', 'říjen', 'listopad', 'prosinec'],\n    monthNamesShort: ['led', 'úno', 'bře', 'dub', 'kvě', 'čer', 'čvc', 'srp', 'zář', 'říj', 'lis', 'pro'],\n    dayNames: ['neděle', 'pondělí', 'úterý', 'středa', 'čtvrtek', 'pátek', 'sobota'],\n    dayNamesShort: ['ne', 'po', 'út', 'st', 'čt', 'pá', 'so'],\n    dayNamesMin: ['ne', 'po', 'út', 'st', 'čt', 'pá', 'so'],\n    weekHeader: 'Týd',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['cs']);\n\n  /* Written by William Griffiths. */\n\n  $.datepicker.regional['cy-GB'] = {\n    closeText: 'Done',\n    prevText: 'Prev',\n    nextText: 'Next',\n    currentText: 'Today',\n    monthNames: ['Ionawr', 'Chwefror', 'Mawrth', 'Ebrill', 'Mai', 'Mehefin', 'Gorffennaf', 'Awst', 'Medi', 'Hydref', 'Tachwedd', 'Rhagfyr'],\n    monthNamesShort: ['Ion', 'Chw', 'Maw', 'Ebr', 'Mai', 'Meh', 'Gor', 'Aws', 'Med', 'Hyd', 'Tac', 'Rha'],\n    dayNames: ['Dydd Sul', 'Dydd Llun', 'Dydd Mawrth', 'Dydd Mercher', 'Dydd Iau', 'Dydd Gwener', 'Dydd Sadwrn'],\n    dayNamesShort: ['Sul', 'Llu', 'Maw', 'Mer', 'Iau', 'Gwe', 'Sad'],\n    dayNamesMin: ['Su', 'Ll', 'Ma', 'Me', 'Ia', 'Gw', 'Sa'],\n    weekHeader: 'Wy',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['cy-GB']);\n\n  /* Written by Jan Christensen ( deletestuff@gmail.com). */\n\n  $.datepicker.regional['da'] = {\n    closeText: 'Luk',\n    prevText: '&#x3C;Forrige',\n    nextText: 'Næste&#x3E;',\n    currentText: 'Idag',\n    monthNames: ['Januar', 'Februar', 'Marts', 'April', 'Maj', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'December'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'],\n    dayNames: ['Søndag', 'Mandag', 'Tirsdag', 'Onsdag', 'Torsdag', 'Fredag', 'Lørdag'],\n    dayNamesShort: ['Søn', 'Man', 'Tir', 'Ons', 'Tor', 'Fre', 'Lør'],\n    dayNamesMin: ['Sø', 'Ma', 'Ti', 'On', 'To', 'Fr', 'Lø'],\n    weekHeader: 'Uge',\n    dateFormat: 'dd-mm-yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['da']);\n\n  /* Written by Milian Wolff (mail@milianw.de). */\n\n  $.datepicker.regional['de'] = {\n    closeText: 'Schließen',\n    prevText: '&#x3C;Zurück',\n    nextText: 'Vor&#x3E;',\n    currentText: 'Heute',\n    monthNames: ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'],\n    monthNamesShort: ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\n    dayNames: ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'],\n    dayNamesShort: ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n    dayNamesMin: ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n    weekHeader: 'KW',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['de']);\n\n  /* Written by Alex Cicovic (http://www.alexcicovic.com) */\n\n  $.datepicker.regional['el'] = {\n    closeText: 'Κλείσιμο',\n    prevText: 'Προηγούμενος',\n    nextText: 'Επόμενος',\n    currentText: 'Τρέχων Μήνας',\n    monthNames: ['Ιανουάριος', 'Φεβρουάριος', 'Μάρτιος', 'Απρίλιος', 'Μάιος', 'Ιούνιος', 'Ιούλιος', 'Αύγουστος', 'Σεπτέμβριος', 'Οκτώβριος', 'Νοέμβριος', 'Δεκέμβριος'],\n    monthNamesShort: ['Ιαν', 'Φεβ', 'Μαρ', 'Απρ', 'Μαι', 'Ιουν', 'Ιουλ', 'Αυγ', 'Σεπ', 'Οκτ', 'Νοε', 'Δεκ'],\n    dayNames: ['Κυριακή', 'Δευτέρα', 'Τρίτη', 'Τετάρτη', 'Πέμπτη', 'Παρασκευή', 'Σάββατο'],\n    dayNamesShort: ['Κυρ', 'Δευ', 'Τρι', 'Τετ', 'Πεμ', 'Παρ', 'Σαβ'],\n    dayNamesMin: ['Κυ', 'Δε', 'Τρ', 'Τε', 'Πε', 'Πα', 'Σα'],\n    weekHeader: 'Εβδ',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['el']);\n\n  /* Based on the en-GB initialisation. */\n\n  $.datepicker.regional['en-AU'] = {\n    closeText: 'Done',\n    prevText: 'Prev',\n    nextText: 'Next',\n    currentText: 'Today',\n    monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n    weekHeader: 'Wk',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['en-AU']);\n\n  /* Written by Stuart. */\n\n  $.datepicker.regional['en-GB'] = {\n    closeText: 'Done',\n    prevText: 'Prev',\n    nextText: 'Next',\n    currentText: 'Today',\n    monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n    weekHeader: 'Wk',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['en-GB']);\n\n  /* Based on the en-GB initialisation. */\n\n  $.datepicker.regional['en-NZ'] = {\n    closeText: 'Done',\n    prevText: 'Prev',\n    nextText: 'Next',\n    currentText: 'Today',\n    monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n    weekHeader: 'Wk',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['en-NZ']);\n\n  /* Written by Olivier M. (olivierweb@ifrance.com). */\n\n  $.datepicker.regional['eo'] = {\n    closeText: 'Fermi',\n    prevText: '&#x3C;Anta',\n    nextText: 'Sekv&#x3E;',\n    currentText: 'Nuna',\n    monthNames: ['Januaro', 'Februaro', 'Marto', 'Aprilo', 'Majo', 'Junio', 'Julio', 'Aŭgusto', 'Septembro', 'Oktobro', 'Novembro', 'Decembro'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Aŭg', 'Sep', 'Okt', 'Nov', 'Dec'],\n    dayNames: ['Dimanĉo', 'Lundo', 'Mardo', 'Merkredo', 'Ĵaŭdo', 'Vendredo', 'Sabato'],\n    dayNamesShort: ['Dim', 'Lun', 'Mar', 'Mer', 'Ĵaŭ', 'Ven', 'Sab'],\n    dayNamesMin: ['Di', 'Lu', 'Ma', 'Me', 'Ĵa', 'Ve', 'Sa'],\n    weekHeader: 'Sb',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 0,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['eo']);\n\n  /* Traducido por Vester (xvester@gmail.com). */\n\n  $.datepicker.regional['es'] = {\n    closeText: 'Cerrar',\n    prevText: '&#x3C;Ant',\n    nextText: 'Sig&#x3E;',\n    currentText: 'Hoy',\n    monthNames: ['enero', 'febrero', 'marzo', 'abril', 'mayo', 'junio', 'julio', 'agosto', 'septiembre', 'octubre', 'noviembre', 'diciembre'],\n    monthNamesShort: ['ene', 'feb', 'mar', 'abr', 'may', 'jun', 'jul', 'ogo', 'sep', 'oct', 'nov', 'dic'],\n    dayNames: ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado'],\n    dayNamesShort: ['dom', 'lun', 'mar', 'mié', 'juv', 'vie', 'sáb'],\n    dayNamesMin: ['D', 'L', 'M', 'X', 'J', 'V', 'S'],\n    weekHeader: 'Sm',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['es']);\n\n  /* Written by Mart Sõmermaa (mrts.pydev at gmail com). */\n\n  $.datepicker.regional['et'] = {\n    closeText: 'Sulge',\n    prevText: 'Eelnev',\n    nextText: 'Järgnev',\n    currentText: 'Täna',\n    monthNames: ['Jaanuar', 'Veebruar', 'Märts', 'Aprill', 'Mai', 'Juuni', 'Juuli', 'August', 'September', 'Oktoober', 'November', 'Detsember'],\n    monthNamesShort: ['Jaan', 'Veebr', 'Märts', 'Apr', 'Mai', 'Juuni', 'Juuli', 'Aug', 'Sept', 'Okt', 'Nov', 'Dets'],\n    dayNames: ['Pühapäev', 'Esmaspäev', 'Teisipäev', 'Kolmapäev', 'Neljapäev', 'Reede', 'Laupäev'],\n    dayNamesShort: ['Pühap', 'Esmasp', 'Teisip', 'Kolmap', 'Neljap', 'Reede', 'Laup'],\n    dayNamesMin: ['P', 'E', 'T', 'K', 'N', 'R', 'L'],\n    weekHeader: 'näd',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['et']);\n\n  /* Karrikas-ek itzulia (karrikas@karrikas.com) */\n\n  $.datepicker.regional['eu'] = {\n    closeText: 'Egina',\n    prevText: '&#x3C;Aur',\n    nextText: 'Hur&#x3E;',\n    currentText: 'Gaur',\n    monthNames: ['urtarrila', 'otsaila', 'martxoa', 'apirila', 'maiatza', 'ekaina', 'uztaila', 'abuztua', 'iraila', 'urria', 'azaroa', 'abendua'],\n    monthNamesShort: ['urt.', 'ots.', 'mar.', 'api.', 'mai.', 'eka.', 'uzt.', 'abu.', 'ira.', 'urr.', 'aza.', 'abe.'],\n    dayNames: ['igandea', 'astelehena', 'asteartea', 'asteazkena', 'osteguna', 'ostirala', 'larunbata'],\n    dayNamesShort: ['ig.', 'al.', 'ar.', 'az.', 'og.', 'ol.', 'lr.'],\n    dayNamesMin: ['ig', 'al', 'ar', 'az', 'og', 'ol', 'lr'],\n    weekHeader: 'As',\n    dateFormat: 'yy-mm-dd',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['eu']);\n\n  /* Javad Mowlanezhad -- jmowla@gmail.com */\n\n  /* Jalali calendar should supported soon! (Its implemented but I have to test it) */\n\n  $.datepicker.regional['fa'] = {\n    closeText: 'بستن',\n    prevText: '&#x3C;قبلی',\n    nextText: 'بعدی&#x3E;',\n    currentText: 'امروز',\n    monthNames: ['فروردين', 'ارديبهشت', 'خرداد', 'تير', 'مرداد', 'شهريور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'],\n    monthNamesShort: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],\n    dayNames: ['يکشنبه', 'دوشنبه', 'سه‌شنبه', 'چهارشنبه', 'پنجشنبه', 'جمعه', 'شنبه'],\n    dayNamesShort: ['ی', 'د', 'س', 'چ', 'پ', 'ج', 'ش'],\n    dayNamesMin: ['ی', 'د', 'س', 'چ', 'پ', 'ج', 'ش'],\n    weekHeader: 'هف',\n    dateFormat: 'yy/mm/dd',\n    firstDay: 6,\n    isRTL: true,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['fa']);\n\n  /* Written by Harri Kilpiö (harrikilpio@gmail.com). */\n\n  $.datepicker.regional['fi'] = {\n    closeText: 'Sulje',\n    prevText: '&#xAB;Edellinen',\n    nextText: 'Seuraava&#xBB;',\n    currentText: 'Tänään',\n    monthNames: ['Tammikuu', 'Helmikuu', 'Maaliskuu', 'Huhtikuu', 'Toukokuu', 'Kesäkuu', 'Heinäkuu', 'Elokuu', 'Syyskuu', 'Lokakuu', 'Marraskuu', 'Joulukuu'],\n    monthNamesShort: ['Tammi', 'Helmi', 'Maalis', 'Huhti', 'Touko', 'Kesä', 'Heinä', 'Elo', 'Syys', 'Loka', 'Marras', 'Joulu'],\n    dayNamesShort: ['Su', 'Ma', 'Ti', 'Ke', 'To', 'Pe', 'La'],\n    dayNames: ['Sunnuntai', 'Maanantai', 'Tiistai', 'Keskiviikko', 'Torstai', 'Perjantai', 'Lauantai'],\n    dayNamesMin: ['Su', 'Ma', 'Ti', 'Ke', 'To', 'Pe', 'La'],\n    weekHeader: 'Vk',\n    dateFormat: 'd.m.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['fi']);\n\n  /* Written by Sverri Mohr Olsen, sverrimo@gmail.com */\n\n  $.datepicker.regional['fo'] = {\n    closeText: 'Lat aftur',\n    prevText: '&#x3C;Fyrra',\n    nextText: 'Næsta&#x3E;',\n    currentText: 'Í dag',\n    monthNames: ['Januar', 'Februar', 'Mars', 'Apríl', 'Mei', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Desember'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Des'],\n    dayNames: ['Sunnudagur', 'Mánadagur', 'Týsdagur', 'Mikudagur', 'Hósdagur', 'Fríggjadagur', 'Leyardagur'],\n    dayNamesShort: ['Sun', 'Mán', 'Týs', 'Mik', 'Hós', 'Frí', 'Ley'],\n    dayNamesMin: ['Su', 'Má', 'Tý', 'Mi', 'Hó', 'Fr', 'Le'],\n    weekHeader: 'Vk',\n    dateFormat: 'dd-mm-yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['fo']);\n\n  /* Written Martin Voelkle (martin.voelkle@e-tc.ch). */\n\n  $.datepicker.regional['fr-CH'] = {\n    closeText: 'Fermer',\n    prevText: '&#x3C;Préc',\n    nextText: 'Suiv&#x3E;',\n    currentText: 'Courant',\n    monthNames: ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'],\n    monthNamesShort: ['janv.', 'févr.', 'mars', 'avril', 'mai', 'juin', 'juil.', 'août', 'sept.', 'oct.', 'nov.', 'déc.'],\n    dayNames: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],\n    dayNamesShort: ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'],\n    dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],\n    weekHeader: 'Sm',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['fr-CH']);\n\n  /* Written by Keith Wood (kbwood{at}iinet.com.au),\n  \t\t\t  Stéphane Nahmani (sholby@sholby.net),\n  \t\t\t  Stéphane Raimbault <stephane.raimbault@gmail.com> */\n\n  $.datepicker.regional['fr'] = {\n    closeText: 'Fermer',\n    prevText: 'Précédent',\n    nextText: 'Suivant',\n    currentText: 'Aujourd\\'hui',\n    monthNames: ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'],\n    monthNamesShort: ['janv.', 'févr.', 'mars', 'avril', 'mai', 'juin', 'juil.', 'août', 'sept.', 'oct.', 'nov.', 'déc.'],\n    dayNames: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],\n    dayNamesShort: ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'],\n    dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],\n    weekHeader: 'Sem.',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['fr']);\n\n  /* Translated by Jorge Barreiro <yortx.barry@gmail.com>. */\n\n  $.datepicker.regional['gl'] = {\n    closeText: 'Pechar',\n    prevText: '&#x3C;Ant',\n    nextText: 'Seg&#x3E;',\n    currentText: 'Hoxe',\n    monthNames: ['Xaneiro', 'Febreiro', 'Marzo', 'Abril', 'Maio', 'Xuño', 'Xullo', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Decembro'],\n    monthNamesShort: ['Xan', 'Feb', 'Mar', 'Abr', 'Mai', 'Xuñ', 'Xul', 'Ago', 'Set', 'Out', 'Nov', 'Dec'],\n    dayNames: ['Domingo', 'Luns', 'Martes', 'Mércores', 'Xoves', 'Venres', 'Sábado'],\n    dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mér', 'Xov', 'Ven', 'Sáb'],\n    dayNamesMin: ['Do', 'Lu', 'Ma', 'Mé', 'Xo', 'Ve', 'Sá'],\n    weekHeader: 'Sm',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['gl']);\n\n  /* Written by Amir Hardon (ahardon at gmail dot com). */\n\n  $.datepicker.regional['he'] = {\n    closeText: 'סגור',\n    prevText: '&#x3C;הקודם',\n    nextText: 'הבא&#x3E;',\n    currentText: 'היום',\n    monthNames: ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר'],\n    monthNamesShort: ['ינו', 'פבר', 'מרץ', 'אפר', 'מאי', 'יוני', 'יולי', 'אוג', 'ספט', 'אוק', 'נוב', 'דצמ'],\n    dayNames: ['ראשון', 'שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת'],\n    dayNamesShort: ['א\\'', 'ב\\'', 'ג\\'', 'ד\\'', 'ה\\'', 'ו\\'', 'שבת'],\n    dayNamesMin: ['א\\'', 'ב\\'', 'ג\\'', 'ד\\'', 'ה\\'', 'ו\\'', 'שבת'],\n    weekHeader: 'Wk',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 0,\n    isRTL: true,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['he']);\n\n  /* Written by Michael Dawart. */\n\n  $.datepicker.regional['hi'] = {\n    closeText: 'बंद',\n    prevText: 'पिछला',\n    nextText: 'अगला',\n    currentText: 'आज',\n    monthNames: ['जनवरी ', 'फरवरी', 'मार्च', 'अप्रेल', 'मई', 'जून', 'जूलाई', 'अगस्त ', 'सितम्बर', 'अक्टूबर', 'नवम्बर', 'दिसम्बर'],\n    monthNamesShort: ['जन', 'फर', 'मार्च', 'अप्रेल', 'मई', 'जून', 'जूलाई', 'अग', 'सित', 'अक्ट', 'नव', 'दि'],\n    dayNames: ['रविवार', 'सोमवार', 'मंगलवार', 'बुधवार', 'गुरुवार', 'शुक्रवार', 'शनिवार'],\n    dayNamesShort: ['रवि', 'सोम', 'मंगल', 'बुध', 'गुरु', 'शुक्र', 'शनि'],\n    dayNamesMin: ['रवि', 'सोम', 'मंगल', 'बुध', 'गुरु', 'शुक्र', 'शनि'],\n    weekHeader: 'हफ्ता',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['hi']);\n\n  /* Written by Vjekoslav Nesek. */\n\n  $.datepicker.regional['hr'] = {\n    closeText: 'Zatvori',\n    prevText: '&#x3C;',\n    nextText: '&#x3E;',\n    currentText: 'Danas',\n    monthNames: ['Siječanj', 'Veljača', 'Ožujak', 'Travanj', 'Svibanj', 'Lipanj', 'Srpanj', 'Kolovoz', 'Rujan', 'Listopad', 'Studeni', 'Prosinac'],\n    monthNamesShort: ['Sij', 'Velj', 'Ožu', 'Tra', 'Svi', 'Lip', 'Srp', 'Kol', 'Ruj', 'Lis', 'Stu', 'Pro'],\n    dayNames: ['Nedjelja', 'Ponedjeljak', 'Utorak', 'Srijeda', 'Četvrtak', 'Petak', 'Subota'],\n    dayNamesShort: ['Ned', 'Pon', 'Uto', 'Sri', 'Čet', 'Pet', 'Sub'],\n    dayNamesMin: ['Ne', 'Po', 'Ut', 'Sr', 'Če', 'Pe', 'Su'],\n    weekHeader: 'Tje',\n    dateFormat: 'dd.mm.yy.',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['hr']);\n\n  /* Written by Istvan Karaszi (jquery@spam.raszi.hu). */\n\n  $.datepicker.regional['hu'] = {\n    closeText: 'bezár',\n    prevText: 'vissza',\n    nextText: 'előre',\n    currentText: 'ma',\n    monthNames: ['Január', 'Február', 'Március', 'Április', 'Május', 'Június', 'Július', 'Augusztus', 'Szeptember', 'Október', 'November', 'December'],\n    monthNamesShort: ['Jan', 'Feb', 'Már', 'Ápr', 'Máj', 'Jún', 'Júl', 'Aug', 'Szep', 'Okt', 'Nov', 'Dec'],\n    dayNames: ['Vasárnap', 'Hétfő', 'Kedd', 'Szerda', 'Csütörtök', 'Péntek', 'Szombat'],\n    dayNamesShort: ['Vas', 'Hét', 'Ked', 'Sze', 'Csü', 'Pén', 'Szo'],\n    dayNamesMin: ['V', 'H', 'K', 'Sze', 'Cs', 'P', 'Szo'],\n    weekHeader: 'Hét',\n    dateFormat: 'yy.mm.dd.',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: true,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['hu']);\n\n  /* Written by Levon Zakaryan (levon.zakaryan@gmail.com)*/\n\n  $.datepicker.regional['hy'] = {\n    closeText: 'Փակել',\n    prevText: '&#x3C;Նախ.',\n    nextText: 'Հաջ.&#x3E;',\n    currentText: 'Այսօր',\n    monthNames: ['Հունվար', 'Փետրվար', 'Մարտ', 'Ապրիլ', 'Մայիս', 'Հունիս', 'Հուլիս', 'Օգոստոս', 'Սեպտեմբեր', 'Հոկտեմբեր', 'Նոյեմբեր', 'Դեկտեմբեր'],\n    monthNamesShort: ['Հունվ', 'Փետր', 'Մարտ', 'Ապր', 'Մայիս', 'Հունիս', 'Հուլ', 'Օգս', 'Սեպ', 'Հոկ', 'Նոյ', 'Դեկ'],\n    dayNames: ['կիրակի', 'եկուշաբթի', 'երեքշաբթի', 'չորեքշաբթի', 'հինգշաբթի', 'ուրբաթ', 'շաբաթ'],\n    dayNamesShort: ['կիր', 'երկ', 'երք', 'չրք', 'հնգ', 'ուրբ', 'շբթ'],\n    dayNamesMin: ['կիր', 'երկ', 'երք', 'չրք', 'հնգ', 'ուրբ', 'շբթ'],\n    weekHeader: 'ՇԲՏ',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['hy']);\n\n  /* Written by Deden Fathurahman (dedenf@gmail.com). */\n\n  $.datepicker.regional['id'] = {\n    closeText: 'Tutup',\n    prevText: '&#x3C;mundur',\n    nextText: 'maju&#x3E;',\n    currentText: 'hari ini',\n    monthNames: ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'Nopember', 'Desember'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Agus', 'Sep', 'Okt', 'Nop', 'Des'],\n    dayNames: ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu'],\n    dayNamesShort: ['Min', 'Sen', 'Sel', 'Rab', 'kam', 'Jum', 'Sab'],\n    dayNamesMin: ['Mg', 'Sn', 'Sl', 'Rb', 'Km', 'jm', 'Sb'],\n    weekHeader: 'Mg',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 0,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['id']);\n\n  /* Written by Haukur H. Thorsson (haukur@eskill.is). */\n\n  $.datepicker.regional['is'] = {\n    closeText: 'Loka',\n    prevText: '&#x3C; Fyrri',\n    nextText: 'Næsti &#x3E;',\n    currentText: 'Í dag',\n    monthNames: ['Janúar', 'Febrúar', 'Mars', 'Apríl', 'Maí', 'Júní', 'Júlí', 'Ágúst', 'September', 'Október', 'Nóvember', 'Desember'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Maí', 'Jún', 'Júl', 'Ágú', 'Sep', 'Okt', 'Nóv', 'Des'],\n    dayNames: ['Sunnudagur', 'Mánudagur', 'Þriðjudagur', 'Miðvikudagur', 'Fimmtudagur', 'Föstudagur', 'Laugardagur'],\n    dayNamesShort: ['Sun', 'Mán', 'Þri', 'Mið', 'Fim', 'Fös', 'Lau'],\n    dayNamesMin: ['Su', 'Má', 'Þr', 'Mi', 'Fi', 'Fö', 'La'],\n    weekHeader: 'Vika',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 0,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['is']);\n\n  /* Written by Antonello Pasella (antonello.pasella@gmail.com). */\n\n  $.datepicker.regional['it'] = {\n    closeText: 'Chiudi',\n    prevText: '&#x3C;Prec',\n    nextText: 'Succ&#x3E;',\n    currentText: 'Oggi',\n    monthNames: ['Gennaio', 'Febbraio', 'Marzo', 'Aprile', 'Maggio', 'Giugno', 'Luglio', 'Agosto', 'Settembre', 'Ottobre', 'Novembre', 'Dicembre'],\n    monthNamesShort: ['Gen', 'Feb', 'Mar', 'Apr', 'Mag', 'Giu', 'Lug', 'Ago', 'Set', 'Ott', 'Nov', 'Dic'],\n    dayNames: ['Domenica', 'Lunedì', 'Martedì', 'Mercoledì', 'Giovedì', 'Venerdì', 'Sabato'],\n    dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mer', 'Gio', 'Ven', 'Sab'],\n    dayNamesMin: ['Do', 'Lu', 'Ma', 'Me', 'Gi', 'Ve', 'Sa'],\n    weekHeader: 'Sm',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['it']);\n\n  /* Written by Kentaro SATO (kentaro@ranvis.com). */\n\n  $.datepicker.regional['ja'] = {\n    closeText: '閉じる',\n    prevText: '&#x3C;前',\n    nextText: '次&#x3E;',\n    currentText: '今日',\n    monthNames: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    monthNamesShort: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    dayNames: ['日曜日', '月曜日', '火曜日', '水曜日', '木曜日', '金曜日', '土曜日'],\n    dayNamesShort: ['日', '月', '火', '水', '木', '金', '土'],\n    dayNamesMin: ['日', '月', '火', '水', '木', '金', '土'],\n    weekHeader: '週',\n    dateFormat: 'yy/mm/dd',\n    firstDay: 0,\n    isRTL: false,\n    showMonthAfterYear: true,\n    yearSuffix: '年'\n  }; //$.datepicker.setDefaults($.datepicker.regional['ja']);\n\n  /* Written by Lado Lomidze (lado.lomidze@gmail.com). */\n\n  $.datepicker.regional['ka'] = {\n    closeText: 'დახურვა',\n    prevText: '&#x3c; წინა',\n    nextText: 'შემდეგი &#x3e;',\n    currentText: 'დღეს',\n    monthNames: ['იანვარი', 'თებერვალი', 'მარტი', 'აპრილი', 'მაისი', 'ივნისი', 'ივლისი', 'აგვისტო', 'სექტემბერი', 'ოქტომბერი', 'ნოემბერი', 'დეკემბერი'],\n    monthNamesShort: ['იან', 'თებ', 'მარ', 'აპრ', 'მაი', 'ივნ', 'ივლ', 'აგვ', 'სექ', 'ოქტ', 'ნოე', 'დეკ'],\n    dayNames: ['კვირა', 'ორშაბათი', 'სამშაბათი', 'ოთხშაბათი', 'ხუთშაბათი', 'პარასკევი', 'შაბათი'],\n    dayNamesShort: ['კვ', 'ორშ', 'სამ', 'ოთხ', 'ხუთ', 'პარ', 'შაბ'],\n    dayNamesMin: ['კვ', 'ორშ', 'სამ', 'ოთხ', 'ხუთ', 'პარ', 'შაბ'],\n    weekHeader: 'კვირა',\n    dateFormat: 'dd-mm-yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['ka']);\n\n  /* Written by Dmitriy Karasyov (dmitriy.karasyov@gmail.com). */\n\n  $.datepicker.regional['kk'] = {\n    closeText: 'Жабу',\n    prevText: '&#x3C;Алдыңғы',\n    nextText: 'Келесі&#x3E;',\n    currentText: 'Бүгін',\n    monthNames: ['Қаңтар', 'Ақпан', 'Наурыз', 'Сәуір', 'Мамыр', 'Маусым', 'Шілде', 'Тамыз', 'Қыркүйек', 'Қазан', 'Қараша', 'Желтоқсан'],\n    monthNamesShort: ['Қаң', 'Ақп', 'Нау', 'Сәу', 'Мам', 'Мау', 'Шіл', 'Там', 'Қыр', 'Қаз', 'Қар', 'Жел'],\n    dayNames: ['Жексенбі', 'Дүйсенбі', 'Сейсенбі', 'Сәрсенбі', 'Бейсенбі', 'Жұма', 'Сенбі'],\n    dayNamesShort: ['жкс', 'дсн', 'ссн', 'срс', 'бсн', 'жма', 'снб'],\n    dayNamesMin: ['Жк', 'Дс', 'Сс', 'Ср', 'Бс', 'Жм', 'Сн'],\n    weekHeader: 'Не',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['kk']);\n\n  /* Written by Chandara Om (chandara.teacher@gmail.com). */\n\n  $.datepicker.regional['km'] = {\n    closeText: 'ធ្វើ​រួច',\n    prevText: 'មុន',\n    nextText: 'បន្ទាប់',\n    currentText: 'ថ្ងៃ​នេះ',\n    monthNames: ['មករា', 'កុម្ភៈ', 'មីនា', 'មេសា', 'ឧសភា', 'មិថុនា', 'កក្កដា', 'សីហា', 'កញ្ញា', 'តុលា', 'វិច្ឆិកា', 'ធ្នូ'],\n    monthNamesShort: ['មករា', 'កុម្ភៈ', 'មីនា', 'មេសា', 'ឧសភា', 'មិថុនា', 'កក្កដា', 'សីហា', 'កញ្ញា', 'តុលា', 'វិច្ឆិកា', 'ធ្នូ'],\n    dayNames: ['អាទិត្យ', 'ចន្ទ', 'អង្គារ', 'ពុធ', 'ព្រហស្បតិ៍', 'សុក្រ', 'សៅរ៍'],\n    dayNamesShort: ['អា', 'ច', 'អ', 'ពុ', 'ព្រហ', 'សុ', 'សៅ'],\n    dayNamesMin: ['អា', 'ច', 'អ', 'ពុ', 'ព្រហ', 'សុ', 'សៅ'],\n    weekHeader: 'សប្ដាហ៍',\n    dateFormat: 'dd-mm-yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['km']);\n\n  /* Written by DaeKwon Kang (ncrash.dk@gmail.com), Edited by Genie. */\n\n  $.datepicker.regional['ko'] = {\n    closeText: '닫기',\n    prevText: '이전달',\n    nextText: '다음달',\n    currentText: '오늘',\n    monthNames: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],\n    monthNamesShort: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],\n    dayNames: ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'],\n    dayNamesShort: ['일', '월', '화', '수', '목', '금', '토'],\n    dayNamesMin: ['일', '월', '화', '수', '목', '금', '토'],\n    weekHeader: 'Wk',\n    dateFormat: 'yy-mm-dd',\n    firstDay: 0,\n    isRTL: false,\n    showMonthAfterYear: true,\n    yearSuffix: '년'\n  }; //$.datepicker.setDefaults($.datepicker.regional['ko']);\n\n  /* Written by Michel Weimerskirch <michel@weimerskirch.net> */\n\n  $.datepicker.regional['lb'] = {\n    closeText: 'Fäerdeg',\n    prevText: 'Zréck',\n    nextText: 'Weider',\n    currentText: 'Haut',\n    monthNames: ['Januar', 'Februar', 'Mäerz', 'Abrëll', 'Mee', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember'],\n    monthNamesShort: ['Jan', 'Feb', 'Mäe', 'Abr', 'Mee', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\n    dayNames: ['Sonndeg', 'Méindeg', 'Dënschdeg', 'Mëttwoch', 'Donneschdeg', 'Freideg', 'Samschdeg'],\n    dayNamesShort: ['Son', 'Méi', 'Dën', 'Mët', 'Don', 'Fre', 'Sam'],\n    dayNamesMin: ['So', 'Mé', 'Dë', 'Më', 'Do', 'Fr', 'Sa'],\n    weekHeader: 'W',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['lb']);\n\n  /* @author Arturas Paleicikas <arturas@avalon.lt> */\n\n  $.datepicker.regional['lt'] = {\n    closeText: 'Uždaryti',\n    prevText: '&#x3C;Atgal',\n    nextText: 'Pirmyn&#x3E;',\n    currentText: 'Šiandien',\n    monthNames: ['Sausis', 'Vasaris', 'Kovas', 'Balandis', 'Gegužė', 'Birželis', 'Liepa', 'Rugpjūtis', 'Rugsėjis', 'Spalis', 'Lapkritis', 'Gruodis'],\n    monthNamesShort: ['Sau', 'Vas', 'Kov', 'Bal', 'Geg', 'Bir', 'Lie', 'Rugp', 'Rugs', 'Spa', 'Lap', 'Gru'],\n    dayNames: ['sekmadienis', 'pirmadienis', 'antradienis', 'trečiadienis', 'ketvirtadienis', 'penktadienis', 'šeštadienis'],\n    dayNamesShort: ['sek', 'pir', 'ant', 'tre', 'ket', 'pen', 'šeš'],\n    dayNamesMin: ['Se', 'Pr', 'An', 'Tr', 'Ke', 'Pe', 'Še'],\n    weekHeader: 'SAV',\n    dateFormat: 'yy-mm-dd',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: true,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['lt']);\n\n  /* @author Arturas Paleicikas <arturas.paleicikas@metasite.net> */\n\n  $.datepicker.regional['lv'] = {\n    closeText: 'Aizvērt',\n    prevText: 'Iepr.',\n    nextText: 'Nāk.',\n    currentText: 'Šodien',\n    monthNames: ['Janvāris', 'Februāris', 'Marts', 'Aprīlis', 'Maijs', 'Jūnijs', 'Jūlijs', 'Augusts', 'Septembris', 'Oktobris', 'Novembris', 'Decembris'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jūn', 'Jūl', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'],\n    dayNames: ['svētdiena', 'pirmdiena', 'otrdiena', 'trešdiena', 'ceturtdiena', 'piektdiena', 'sestdiena'],\n    dayNamesShort: ['svt', 'prm', 'otr', 'tre', 'ctr', 'pkt', 'sst'],\n    dayNamesMin: ['Sv', 'Pr', 'Ot', 'Tr', 'Ct', 'Pk', 'Ss'],\n    weekHeader: 'Ned.',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['lv']);\n\n  /* Written by Stojce Slavkovski. */\n\n  $.datepicker.regional['mk'] = {\n    closeText: 'Затвори',\n    prevText: '&#x3C;',\n    nextText: '&#x3E;',\n    currentText: 'Денес',\n    monthNames: ['Јануари', 'Февруари', 'Март', 'Април', 'Мај', 'Јуни', 'Јули', 'Август', 'Септември', 'Октомври', 'Ноември', 'Декември'],\n    monthNamesShort: ['Јан', 'Фев', 'Мар', 'Апр', 'Мај', 'Јун', 'Јул', 'Авг', 'Сеп', 'Окт', 'Ное', 'Дек'],\n    dayNames: ['Недела', 'Понеделник', 'Вторник', 'Среда', 'Четврток', 'Петок', 'Сабота'],\n    dayNamesShort: ['Нед', 'Пон', 'Вто', 'Сре', 'Чет', 'Пет', 'Саб'],\n    dayNamesMin: ['Не', 'По', 'Вт', 'Ср', 'Че', 'Пе', 'Са'],\n    weekHeader: 'Сед',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['mk']);\n\n  /* Written by Saji Nediyanchath (saji89@gmail.com). */\n\n  $.datepicker.regional['ml'] = {\n    closeText: 'ശരി',\n    prevText: 'മുന്നത്തെ',\n    nextText: 'അടുത്തത് ',\n    currentText: 'ഇന്ന്',\n    monthNames: ['ജനുവരി', 'ഫെബ്രുവരി', 'മാര്‍ച്ച്', 'ഏപ്രില്‍', 'മേയ്', 'ജൂണ്‍', 'ജൂലൈ', 'ആഗസ്റ്റ്', 'സെപ്റ്റംബര്‍', 'ഒക്ടോബര്‍', 'നവംബര്‍', 'ഡിസംബര്‍'],\n    monthNamesShort: ['ജനു', 'ഫെബ്', 'മാര്‍', 'ഏപ്രി', 'മേയ്', 'ജൂണ്‍', 'ജൂലാ', 'ആഗ', 'സെപ്', 'ഒക്ടോ', 'നവം', 'ഡിസ'],\n    dayNames: ['ഞായര്‍', 'തിങ്കള്‍', 'ചൊവ്വ', 'ബുധന്‍', 'വ്യാഴം', 'വെള്ളി', 'ശനി'],\n    dayNamesShort: ['ഞായ', 'തിങ്ക', 'ചൊവ്വ', 'ബുധ', 'വ്യാഴം', 'വെള്ളി', 'ശനി'],\n    dayNamesMin: ['ഞാ', 'തി', 'ചൊ', 'ബു', 'വ്യാ', 'വെ', 'ശ'],\n    weekHeader: 'ആ',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['ml']);\n\n  /* Written by Mohd Nawawi Mohamad Jamili (nawawi@ronggeng.net). */\n\n  $.datepicker.regional['ms'] = {\n    closeText: 'Tutup',\n    prevText: '&#x3C;Sebelum',\n    nextText: 'Selepas&#x3E;',\n    currentText: 'hari ini',\n    monthNames: ['Januari', 'Februari', 'Mac', 'April', 'Mei', 'Jun', 'Julai', 'Ogos', 'September', 'Oktober', 'November', 'Disember'],\n    monthNamesShort: ['Jan', 'Feb', 'Mac', 'Apr', 'Mei', 'Jun', 'Jul', 'Ogo', 'Sep', 'Okt', 'Nov', 'Dis'],\n    dayNames: ['Ahad', 'Isnin', 'Selasa', 'Rabu', 'Khamis', 'Jumaat', 'Sabtu'],\n    dayNamesShort: ['Aha', 'Isn', 'Sel', 'Rab', 'kha', 'Jum', 'Sab'],\n    dayNamesMin: ['Ah', 'Is', 'Se', 'Ra', 'Kh', 'Ju', 'Sa'],\n    weekHeader: 'Mg',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 0,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['ms']);\n\n  /* David De Sloovere @DavidDeSloovere */\n\n  $.datepicker.regional['nl-BE'] = {\n    closeText: 'Sluiten',\n    prevText: '←',\n    nextText: '→',\n    currentText: 'Vandaag',\n    monthNames: ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december'],\n    monthNamesShort: ['jan', 'feb', 'mrt', 'apr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],\n    dayNames: ['zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag'],\n    dayNamesShort: ['zon', 'maa', 'din', 'woe', 'don', 'vri', 'zat'],\n    dayNamesMin: ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],\n    weekHeader: 'Wk',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['nl-BE']);\n\n  /* Written by Mathias Bynens <http://mathiasbynens.be/> */\n\n  $.datepicker.regional.nl = {\n    closeText: 'Sluiten',\n    prevText: '←',\n    nextText: '→',\n    currentText: 'Vandaag',\n    monthNames: ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december'],\n    monthNamesShort: ['jan', 'feb', 'mrt', 'apr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],\n    dayNames: ['zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag'],\n    dayNamesShort: ['zon', 'maa', 'din', 'woe', 'don', 'vri', 'zat'],\n    dayNamesMin: ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],\n    weekHeader: 'Wk',\n    dateFormat: 'dd-mm-yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional.nl);\n\n  /* Written by Naimdjon Takhirov (naimdjon@gmail.com). */\n\n  $.datepicker.regional['no'] = {\n    closeText: 'Lukk',\n    prevText: '&#xAB;Forrige',\n    nextText: 'Neste&#xBB;',\n    currentText: 'I dag',\n    monthNames: ['januar', 'februar', 'mars', 'april', 'mai', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'desember'],\n    monthNamesShort: ['jan', 'feb', 'mar', 'apr', 'mai', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'des'],\n    dayNamesShort: ['søn', 'man', 'tir', 'ons', 'tor', 'fre', 'lør'],\n    dayNames: ['søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag'],\n    dayNamesMin: ['sø', 'ma', 'ti', 'on', 'to', 'fr', 'lø'],\n    weekHeader: 'Uke',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['no']);\n\n  /* Written by Jacek Wysocki (jacek.wysocki@gmail.com). */\n\n  $.datepicker.regional['pl'] = {\n    closeText: 'Zamknij',\n    prevText: '&#x3C;Poprzedni',\n    nextText: 'Następny&#x3E;',\n    currentText: 'Dziś',\n    monthNames: ['Styczeń', 'Luty', 'Marzec', 'Kwiecień', 'Maj', 'Czerwiec', 'Lipiec', 'Sierpień', 'Wrzesień', 'Październik', 'Listopad', 'Grudzień'],\n    monthNamesShort: ['Sty', 'Lu', 'Mar', 'Kw', 'Maj', 'Cze', 'Lip', 'Sie', 'Wrz', 'Pa', 'Lis', 'Gru'],\n    dayNames: ['Niedziela', 'Poniedziałek', 'Wtorek', 'Środa', 'Czwartek', 'Piątek', 'Sobota'],\n    dayNamesShort: ['Nie', 'Pn', 'Wt', 'Śr', 'Czw', 'Pt', 'So'],\n    dayNamesMin: ['N', 'Pn', 'Wt', 'Śr', 'Cz', 'Pt', 'So'],\n    weekHeader: 'Tydz',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['pl']);\n\n  /* Written by Leonildo Costa Silva (leocsilva@gmail.com). */\n\n  $.datepicker.regional['pt-BR'] = {\n    closeText: 'Fechar',\n    prevText: '&#x3C;Anterior',\n    nextText: 'Próximo&#x3E;',\n    currentText: 'Hoje',\n    monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\n    monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\n    dayNames: ['Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'Sábado'],\n    dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],\n    dayNamesMin: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],\n    weekHeader: 'Sm',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 0,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['pt-BR']);\n\n  $.datepicker.regional['pt'] = {\n    closeText: 'Fechar',\n    prevText: 'Anterior',\n    nextText: 'Seguinte',\n    currentText: 'Hoje',\n    monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\n    monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],\n    dayNames: ['Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'Sábado'],\n    dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],\n    dayNamesMin: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],\n    weekHeader: 'Sem',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 0,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['pt']);\n\n  /* Written by Yvonne Gienal (yvonne.gienal@educa.ch). */\n\n  $.datepicker.regional['rm'] = {\n    closeText: 'Serrar',\n    prevText: '&#x3C;Suandant',\n    nextText: 'Precedent&#x3E;',\n    currentText: 'Actual',\n    monthNames: ['Schaner', 'Favrer', 'Mars', 'Avrigl', 'Matg', 'Zercladur', 'Fanadur', 'Avust', 'Settember', 'October', 'November', 'December'],\n    monthNamesShort: ['Scha', 'Fev', 'Mar', 'Avr', 'Matg', 'Zer', 'Fan', 'Avu', 'Sett', 'Oct', 'Nov', 'Dec'],\n    dayNames: ['Dumengia', 'Glindesdi', 'Mardi', 'Mesemna', 'Gievgia', 'Venderdi', 'Sonda'],\n    dayNamesShort: ['Dum', 'Gli', 'Mar', 'Mes', 'Gie', 'Ven', 'Som'],\n    dayNamesMin: ['Du', 'Gl', 'Ma', 'Me', 'Gi', 'Ve', 'So'],\n    weekHeader: 'emna',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['rm']);\n\n  $.datepicker.regional['ro'] = {\n    closeText: 'Închide',\n    prevText: '&#xAB; Luna precedentă',\n    nextText: 'Luna următoare &#xBB;',\n    currentText: 'Azi',\n    monthNames: ['Ianuarie', 'Februarie', 'Martie', 'Aprilie', 'Mai', 'Iunie', 'Iulie', 'August', 'Septembrie', 'Octombrie', 'Noiembrie', 'Decembrie'],\n    monthNamesShort: ['Ian', 'Feb', 'Mar', 'Apr', 'Mai', 'Iun', 'Iul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    dayNames: ['Duminică', 'Luni', 'Marţi', 'Miercuri', 'Joi', 'Vineri', 'Sâmbătă'],\n    dayNamesShort: ['Dum', 'Lun', 'Mar', 'Mie', 'Joi', 'Vin', 'Sâm'],\n    dayNamesMin: ['Du', 'Lu', 'Ma', 'Mi', 'Jo', 'Vi', 'Sâ'],\n    weekHeader: 'Săpt',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['ro']);\n\n  /* Written by Andrew Stromnov (stromnov@gmail.com). */\n\n  $.datepicker.regional['ru'] = {\n    closeText: 'Закрыть',\n    prevText: '&#x3C;Пред',\n    nextText: 'След&#x3E;',\n    currentText: 'Сегодня',\n    monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n    monthNamesShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n    dayNames: ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота'],\n    dayNamesShort: ['вск', 'пнд', 'втр', 'срд', 'чтв', 'птн', 'сбт'],\n    dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n    weekHeader: 'Нед',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['ru']);\n\n  /* Written by Vojtech Rinik (vojto@hmm.sk). */\n\n  $.datepicker.regional['sk'] = {\n    closeText: 'Zavrieť',\n    prevText: '&#x3C;Predchádzajúci',\n    nextText: 'Nasledujúci&#x3E;',\n    currentText: 'Dnes',\n    monthNames: ['január', 'február', 'marec', 'apríl', 'máj', 'jún', 'júl', 'august', 'september', 'október', 'november', 'december'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Máj', 'Jún', 'Júl', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'],\n    dayNames: ['nedeľa', 'pondelok', 'utorok', 'streda', 'štvrtok', 'piatok', 'sobota'],\n    dayNamesShort: ['Ned', 'Pon', 'Uto', 'Str', 'Štv', 'Pia', 'Sob'],\n    dayNamesMin: ['Ne', 'Po', 'Ut', 'St', 'Št', 'Pia', 'So'],\n    weekHeader: 'Ty',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['sk']);\n\n  /* Written by Jaka Jancar (jaka@kubje.org). */\n\n  /* c = č, s = š z = ž C = Č S = Š Z = Ž */\n\n  $.datepicker.regional['sl'] = {\n    closeText: 'Zapri',\n    prevText: '&#x3C;Prejšnji',\n    nextText: 'Naslednji&#x3E;',\n    currentText: 'Trenutni',\n    monthNames: ['Januar', 'Februar', 'Marec', 'April', 'Maj', 'Junij', 'Julij', 'Avgust', 'September', 'Oktober', 'November', 'December'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Avg', 'Sep', 'Okt', 'Nov', 'Dec'],\n    dayNames: ['Nedelja', 'Ponedeljek', 'Torek', 'Sreda', 'Četrtek', 'Petek', 'Sobota'],\n    dayNamesShort: ['Ned', 'Pon', 'Tor', 'Sre', 'Čet', 'Pet', 'Sob'],\n    dayNamesMin: ['Ne', 'Po', 'To', 'Sr', 'Če', 'Pe', 'So'],\n    weekHeader: 'Teden',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['sl']);\n\n  /* Written by Flakron Bytyqi (flakron@gmail.com). */\n\n  $.datepicker.regional['sq'] = {\n    closeText: 'mbylle',\n    prevText: '&#x3C;mbrapa',\n    nextText: 'Përpara&#x3E;',\n    currentText: 'sot',\n    monthNames: ['Janar', 'Shkurt', 'Mars', 'Prill', 'Maj', 'Qershor', 'Korrik', 'Gusht', 'Shtator', 'Tetor', 'Nëntor', 'Dhjetor'],\n    monthNamesShort: ['Jan', 'Shk', 'Mar', 'Pri', 'Maj', 'Qer', 'Kor', 'Gus', 'Sht', 'Tet', 'Nën', 'Dhj'],\n    dayNames: ['E Diel', 'E Hënë', 'E Martë', 'E Mërkurë', 'E Enjte', 'E Premte', 'E Shtune'],\n    dayNamesShort: ['Di', 'Hë', 'Ma', 'Më', 'En', 'Pr', 'Sh'],\n    dayNamesMin: ['Di', 'Hë', 'Ma', 'Më', 'En', 'Pr', 'Sh'],\n    weekHeader: 'Ja',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['sq']);\n\n  /* Written by Dejan Dimić. */\n\n  $.datepicker.regional['sr-SR'] = {\n    closeText: 'Zatvori',\n    prevText: '&#x3C;',\n    nextText: '&#x3E;',\n    currentText: 'Danas',\n    monthNames: ['Januar', 'Februar', 'Mart', 'April', 'Maj', 'Jun', 'Jul', 'Avgust', 'Septembar', 'Oktobar', 'Novembar', 'Decembar'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Avg', 'Sep', 'Okt', 'Nov', 'Dec'],\n    dayNames: ['Nedelja', 'Ponedeljak', 'Utorak', 'Sreda', 'Četvrtak', 'Petak', 'Subota'],\n    dayNamesShort: ['Ned', 'Pon', 'Uto', 'Sre', 'Čet', 'Pet', 'Sub'],\n    dayNamesMin: ['Ne', 'Po', 'Ut', 'Sr', 'Če', 'Pe', 'Su'],\n    weekHeader: 'Sed',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['sr-SR']);\n\n  /* Written by Dejan Dimić. */\n\n  $.datepicker.regional['sr'] = {\n    closeText: 'Затвори',\n    prevText: '&#x3C;',\n    nextText: '&#x3E;',\n    currentText: 'Данас',\n    monthNames: ['Јануар', 'Фебруар', 'Март', 'Април', 'Мај', 'Јун', 'Јул', 'Август', 'Септембар', 'Октобар', 'Новембар', 'Децембар'],\n    monthNamesShort: ['Јан', 'Феб', 'Мар', 'Апр', 'Мај', 'Јун', 'Јул', 'Авг', 'Сеп', 'Окт', 'Нов', 'Дец'],\n    dayNames: ['Недеља', 'Понедељак', 'Уторак', 'Среда', 'Четвртак', 'Петак', 'Субота'],\n    dayNamesShort: ['Нед', 'Пон', 'Уто', 'Сре', 'Чет', 'Пет', 'Суб'],\n    dayNamesMin: ['Не', 'По', 'Ут', 'Ср', 'Че', 'Пе', 'Су'],\n    weekHeader: 'Сед',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['sr']);\n\n  /* Written by Anders Ekdahl ( anders@nomadiz.se). */\n\n  $.datepicker.regional['sv'] = {\n    closeText: 'Stäng',\n    prevText: '&#xAB;Förra',\n    nextText: 'Nästa&#xBB;',\n    currentText: 'Idag',\n    monthNames: ['Januari', 'Februari', 'Mars', 'April', 'Maj', 'Juni', 'Juli', 'Augusti', 'September', 'Oktober', 'November', 'December'],\n    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Maj', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dec'],\n    dayNamesShort: ['Sön', 'Mån', 'Tis', 'Ons', 'Tor', 'Fre', 'Lör'],\n    dayNames: ['Söndag', 'Måndag', 'Tisdag', 'Onsdag', 'Torsdag', 'Fredag', 'Lördag'],\n    dayNamesMin: ['Sö', 'Må', 'Ti', 'On', 'To', 'Fr', 'Lö'],\n    weekHeader: 'Ve',\n    dateFormat: 'yy-mm-dd',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['sv']);\n\n  /* Written by S A Sureshkumar (saskumar@live.com). */\n\n  $.datepicker.regional['ta'] = {\n    closeText: 'மூடு',\n    prevText: 'முன்னையது',\n    nextText: 'அடுத்தது',\n    currentText: 'இன்று',\n    monthNames: ['தை', 'மாசி', 'பங்குனி', 'சித்திரை', 'வைகாசி', 'ஆனி', 'ஆடி', 'ஆவணி', 'புரட்டாசி', 'ஐப்பசி', 'கார்த்திகை', 'மார்கழி'],\n    monthNamesShort: ['தை', 'மாசி', 'பங்', 'சித்', 'வைகா', 'ஆனி', 'ஆடி', 'ஆவ', 'புர', 'ஐப்', 'கார்', 'மார்'],\n    dayNames: ['ஞாயிற்றுக்கிழமை', 'திங்கட்கிழமை', 'செவ்வாய்க்கிழமை', 'புதன்கிழமை', 'வியாழக்கிழமை', 'வெள்ளிக்கிழமை', 'சனிக்கிழமை'],\n    dayNamesShort: ['ஞாயிறு', 'திங்கள்', 'செவ்வாய்', 'புதன்', 'வியாழன்', 'வெள்ளி', 'சனி'],\n    dayNamesMin: ['ஞா', 'தி', 'செ', 'பு', 'வி', 'வெ', 'ச'],\n    weekHeader: 'Не',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['ta']);\n\n  /* Written by pipo (pipo@sixhead.com). */\n\n  $.datepicker.regional['th'] = {\n    closeText: 'ปิด',\n    prevText: '&#xAB;&#xA0;ย้อน',\n    nextText: 'ถัดไป&#xA0;&#xBB;',\n    currentText: 'วันนี้',\n    monthNames: ['มกราคม', 'กุมภาพันธ์', 'มีนาคม', 'เมษายน', 'พฤษภาคม', 'มิถุนายน', 'กรกฎาคม', 'สิงหาคม', 'กันยายน', 'ตุลาคม', 'พฤศจิกายน', 'ธันวาคม'],\n    monthNamesShort: ['ม.ค.', 'ก.พ.', 'มี.ค.', 'เม.ย.', 'พ.ค.', 'มิ.ย.', 'ก.ค.', 'ส.ค.', 'ก.ย.', 'ต.ค.', 'พ.ย.', 'ธ.ค.'],\n    dayNames: ['อาทิตย์', 'จันทร์', 'อังคาร', 'พุธ', 'พฤหัสบดี', 'ศุกร์', 'เสาร์'],\n    dayNamesShort: ['อา.', 'จ.', 'อ.', 'พ.', 'พฤ.', 'ศ.', 'ส.'],\n    dayNamesMin: ['อา.', 'จ.', 'อ.', 'พ.', 'พฤ.', 'ศ.', 'ส.'],\n    weekHeader: 'Wk',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 0,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['th']);\n\n  /* Written by Abdurahmon Saidov (saidovab@gmail.com). */\n\n  $.datepicker.regional['tj'] = {\n    closeText: 'Идома',\n    prevText: '&#x3c;Қафо',\n    nextText: 'Пеш&#x3e;',\n    currentText: 'Имрӯз',\n    monthNames: ['Январ', 'Феврал', 'Март', 'Апрел', 'Май', 'Июн', 'Июл', 'Август', 'Сентябр', 'Октябр', 'Ноябр', 'Декабр'],\n    monthNamesShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n    dayNames: ['якшанбе', 'душанбе', 'сешанбе', 'чоршанбе', 'панҷшанбе', 'ҷумъа', 'шанбе'],\n    dayNamesShort: ['якш', 'душ', 'сеш', 'чор', 'пан', 'ҷум', 'шан'],\n    dayNamesMin: ['Як', 'Дш', 'Сш', 'Чш', 'Пш', 'Ҷм', 'Шн'],\n    weekHeader: 'Хф',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['tj']);\n\n  /* Written by Izzet Emre Erkan (kara@karalamalar.net). */\n\n  $.datepicker.regional['tr'] = {\n    closeText: 'kapat',\n    prevText: '&#x3C;geri',\n    nextText: 'ileri&#x3e',\n    currentText: 'bugün',\n    monthNames: ['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'],\n    monthNamesShort: ['Oca', 'Şub', 'Mar', 'Nis', 'May', 'Haz', 'Tem', 'Ağu', 'Eyl', 'Eki', 'Kas', 'Ara'],\n    dayNames: ['Pazar', 'Pazartesi', 'Salı', 'Çarşamba', 'Perşembe', 'Cuma', 'Cumartesi'],\n    dayNamesShort: ['Pz', 'Pt', 'Sa', 'Ça', 'Pe', 'Cu', 'Ct'],\n    dayNamesMin: ['Pz', 'Pt', 'Sa', 'Ça', 'Pe', 'Cu', 'Ct'],\n    weekHeader: 'Hf',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['tr']);\n\n  /* Written by Maxim Drogobitskiy (maxdao@gmail.com). */\n\n  /* Corrected by Igor Milla (igor.fsp.milla@gmail.com). */\n\n  $.datepicker.regional['uk'] = {\n    closeText: 'Закрити',\n    prevText: '&#x3C;',\n    nextText: '&#x3E;',\n    currentText: 'Сьогодні',\n    monthNames: ['Січень', 'Лютий', 'Березень', 'Квітень', 'Травень', 'Червень', 'Липень', 'Серпень', 'Вересень', 'Жовтень', 'Листопад', 'Грудень'],\n    monthNamesShort: ['Січ', 'Лют', 'Бер', 'Кві', 'Тра', 'Чер', 'Лип', 'Сер', 'Вер', 'Жов', 'Лис', 'Гру'],\n    dayNames: ['неділя', 'понеділок', 'вівторок', 'середа', 'четвер', 'п’ятниця', 'субота'],\n    dayNamesShort: ['нед', 'пнд', 'вів', 'срд', 'чтв', 'птн', 'сбт'],\n    dayNamesMin: ['Нд', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\n    weekHeader: 'Тиж',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['uk']);\n\n  /* Translated by Le Thanh Huy (lthanhhuy@cit.ctu.edu.vn). */\n\n  $.datepicker.regional['vi'] = {\n    closeText: 'Đóng',\n    prevText: '&#x3C;Trước',\n    nextText: 'Tiếp&#x3E;',\n    currentText: 'Hôm nay',\n    monthNames: ['Tháng Một', 'Tháng Hai', 'Tháng Ba', 'Tháng Tư', 'Tháng Năm', 'Tháng Sáu', 'Tháng Bảy', 'Tháng Tám', 'Tháng Chín', 'Tháng Mười', 'Tháng Mười Một', 'Tháng Mười Hai'],\n    monthNamesShort: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],\n    dayNames: ['Chủ Nhật', 'Thứ Hai', 'Thứ Ba', 'Thứ Tư', 'Thứ Năm', 'Thứ Sáu', 'Thứ Bảy'],\n    dayNamesShort: ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],\n    dayNamesMin: ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],\n    weekHeader: 'Tu',\n    dateFormat: 'dd/mm/yy',\n    firstDay: 0,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['vi']);\n\n  /* Written by Cloudream (cloudream@gmail.com). */\n\n  $.datepicker.regional['zh-CN'] = {\n    closeText: '关闭',\n    prevText: '&#x3C;上月',\n    nextText: '下月&#x3E;',\n    currentText: '今天',\n    monthNames: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n    monthNamesShort: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n    dayNames: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n    dayNamesShort: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n    dayNamesMin: ['日', '一', '二', '三', '四', '五', '六'],\n    weekHeader: '周',\n    dateFormat: 'yy-mm-dd',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: true,\n    yearSuffix: '年'\n  }; //$.datepicker.setDefaults($.datepicker.regional['zh-CN']);\n\n  /* Written by SCCY (samuelcychan@gmail.com). */\n\n  $.datepicker.regional['zh-HK'] = {\n    closeText: '關閉',\n    prevText: '&#x3C;上月',\n    nextText: '下月&#x3E;',\n    currentText: '今天',\n    monthNames: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n    monthNamesShort: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n    dayNames: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n    dayNamesShort: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n    dayNamesMin: ['日', '一', '二', '三', '四', '五', '六'],\n    weekHeader: '周',\n    dateFormat: 'dd-mm-yy',\n    firstDay: 0,\n    isRTL: false,\n    showMonthAfterYear: true,\n    yearSuffix: '年'\n  }; //$.datepicker.setDefaults($.datepicker.regional['zh-HK']);\n\n  /* Written by Ressol (ressol@gmail.com). */\n\n  $.datepicker.regional['zh-TW'] = {\n    closeText: '關閉',\n    prevText: '&#x3C;上月',\n    nextText: '下月&#x3E;',\n    currentText: '今天',\n    monthNames: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n    monthNamesShort: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n    dayNames: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n    dayNamesShort: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n    dayNamesMin: ['日', '一', '二', '三', '四', '五', '六'],\n    weekHeader: '周',\n    dateFormat: 'yy/mm/dd',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: true,\n    yearSuffix: '年'\n  }; //$.datepicker.setDefaults($.datepicker.regional['zh-TW']);\n\n  /* Written by Pavel Selitskas <p.selitskas@gmail.com> */\n\n  $.datepicker.regional['be'] = {\n    closeText: 'Зачыніць',\n    prevText: '&larr;Папяр.',\n    nextText: 'Наст.&rarr;',\n    currentText: 'Сёньня',\n    monthNames: ['Студзень', 'Люты', 'Сакавік', 'Красавік', 'Травень', 'Чэрвень', 'Ліпень', 'Жнівень', 'Верасень', 'Кастрычнік', 'Лістапад', 'Сьнежань'],\n    monthNamesShort: ['Сту', 'Лют', 'Сак', 'Кра', 'Тра', 'Чэр', 'Ліп', 'Жні', 'Вер', 'Кас', 'Ліс', 'Сьн'],\n    dayNames: ['нядзеля', 'панядзелак', 'аўторак', 'серада', 'чацьвер', 'пятніца', 'субота'],\n    dayNamesShort: ['ндз', 'пнд', 'аўт', 'срд', 'чцв', 'птн', 'сбт'],\n    dayNamesMin: ['Нд', 'Пн', 'Аў', 'Ср', 'Чц', 'Пт', 'Сб'],\n    weekHeader: 'Тд',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['be']);\n\n  $.datepicker.regional['fr-CA'] = {\n    closeText: 'Fermer',\n    prevText: 'Précédent',\n    nextText: 'Suivant',\n    currentText: 'Aujourd\\'hui',\n    monthNames: ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'],\n    monthNamesShort: ['janv.', 'févr.', 'mars', 'avril', 'mai', 'juin', 'juil.', 'août', 'sept.', 'oct.', 'nov.', 'déc.'],\n    dayNames: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],\n    dayNamesShort: ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'],\n    dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],\n    weekHeader: 'Sem.',\n    dateFormat: 'yy-mm-dd',\n    firstDay: 0,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['fr-CA']);\n\n  /* Written by Sergey Kartashov (ebishkek@yandex.ru). */\n\n  $.datepicker.regional['ky'] = {\n    closeText: 'Жабуу',\n    prevText: '&#x3c;Мур',\n    nextText: 'Кий&#x3e;',\n    currentText: 'Бүгүн',\n    monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\n    monthNamesShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\n    dayNames: ['жекшемби', 'дүйшөмбү', 'шейшемби', 'шаршемби', 'бейшемби', 'жума', 'ишемби'],\n    dayNamesShort: ['жек', 'дүй', 'шей', 'шар', 'бей', 'жум', 'ише'],\n    dayNamesMin: ['Жк', 'Дш', 'Шш', 'Шр', 'Бш', 'Жм', 'Иш'],\n    weekHeader: 'Жум',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['ky']);\n\n  /* Written by Bjørn Johansen (post@bjornjohansen.no). */\n\n  $.datepicker.regional['nb'] = {\n    closeText: 'Lukk',\n    prevText: '&#xAB;Forrige',\n    nextText: 'Neste&#xBB;',\n    currentText: 'I dag',\n    monthNames: ['januar', 'februar', 'mars', 'april', 'mai', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'desember'],\n    monthNamesShort: ['jan', 'feb', 'mar', 'apr', 'mai', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'des'],\n    dayNamesShort: ['søn', 'man', 'tir', 'ons', 'tor', 'fre', 'lør'],\n    dayNames: ['søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag'],\n    dayNamesMin: ['sø', 'ma', 'ti', 'on', 'to', 'fr', 'lø'],\n    weekHeader: 'Uke',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['nb']);\n\n  /* Written by Bjørn Johansen (post@bjornjohansen.no). */\n\n  $.datepicker.regional['nn'] = {\n    closeText: 'Lukk',\n    prevText: '&#xAB;Førre',\n    nextText: 'Neste&#xBB;',\n    currentText: 'I dag',\n    monthNames: ['januar', 'februar', 'mars', 'april', 'mai', 'juni', 'juli', 'august', 'september', 'oktober', 'november', 'desember'],\n    monthNamesShort: ['jan', 'feb', 'mar', 'apr', 'mai', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'des'],\n    dayNamesShort: ['sun', 'mån', 'tys', 'ons', 'tor', 'fre', 'lau'],\n    dayNames: ['sundag', 'måndag', 'tysdag', 'onsdag', 'torsdag', 'fredag', 'laurdag'],\n    dayNamesMin: ['su', 'må', 'ty', 'on', 'to', 'fr', 'la'],\n    weekHeader: 'Veke',\n    dateFormat: 'dd.mm.yy',\n    firstDay: 1,\n    isRTL: false,\n    showMonthAfterYear: false,\n    yearSuffix: ''\n  }; //$.datepicker.setDefaults($.datepicker.regional['nn']);\n})(jQuery);";
    },
  "./node_modules/raw-loader/index.js!./node_modules/babel-loader/lib/index.js?!./node_modules/ifdef-loader/ifdef-loader.js?!./src/lib/jqueryui/jquery.ui.touch-punch.min.js":
    function (e, t) {
      e.exports =
        '/*\n * jQuery UI Touch Punch 0.2.2\n *\n * Copyright 2011, Dave Furfero\n * Dual licensed under the MIT or GPL Version 2 licenses.\n *\n * Depends:\n *  jquery.ui.widget.js\n *  jquery.ui.mouse.js\n */\n(function (b) {\n  b.support.touch = "ontouchend" in document;\n\n  if (!b.support.touch) {\n    return;\n  }\n\n  var c = b.ui.mouse.prototype,\n      e = c._mouseInit,\n      a;\n\n  function d(g, h) {\n    if (g.originalEvent.touches.length > 1) {\n      return;\n    }\n\n    g.preventDefault();\n    var i = g.originalEvent.changedTouches[0],\n        f = document.createEvent("MouseEvents");\n    f.initMouseEvent(h, true, true, window, 1, i.screenX, i.screenY, i.clientX, i.clientY, false, false, false, false, 0, null);\n    g.target.dispatchEvent(f);\n  }\n\n  c._touchStart = function (g) {\n    var f = this;\n\n    if (a || !f._mouseCapture(g.originalEvent.changedTouches[0])) {\n      return;\n    }\n\n    a = true;\n    f._touchMoved = false;\n    d(g, "mouseover");\n    d(g, "mousemove");\n    d(g, "mousedown");\n  };\n\n  c._touchMove = function (f) {\n    if (!a) {\n      return;\n    }\n\n    this._touchMoved = true;\n    d(f, "mousemove");\n  };\n\n  c._touchEnd = function (f) {\n    if (!a) {\n      return;\n    }\n\n    d(f, "mouseup");\n    d(f, "mouseout");\n\n    if (!this._touchMoved) {\n      d(f, "click");\n    }\n\n    a = false;\n  };\n\n  c._mouseInit = function () {\n    var f = this;\n    f.element.bind("touchstart", b.proxy(f, "_touchStart")).bind("touchmove", b.proxy(f, "_touchMove")).bind("touchend", b.proxy(f, "_touchEnd"));\n    e.call(f);\n  };\n})(jQuery);';
    },
  "./node_modules/script-loader/index.js!./src/lib/jqueryui/jquery-ui-i18n.js":
    function (e, t, i) {
      i("./node_modules/script-loader/addScript.js")(
        i(
          "./node_modules/raw-loader/index.js!./node_modules/babel-loader/lib/index.js?!./node_modules/ifdef-loader/ifdef-loader.js?!./src/lib/jqueryui/jquery-ui-i18n.js"
        )
      );
    },
  "./node_modules/script-loader/index.js!./src/lib/jqueryui/jquery.ui.touch-punch.min.js":
    function (e, t, i) {
      i("./node_modules/script-loader/addScript.js")(
        i(
          "./node_modules/raw-loader/index.js!./node_modules/babel-loader/lib/index.js?!./node_modules/ifdef-loader/ifdef-loader.js?!./src/lib/jqueryui/jquery.ui.touch-punch.min.js"
        )
      );
    },
  "./src/assets/allIcons/icons-facelift.css": function (e, t, i) {},
  "./src/css/browser-not-supported-view.scss": function (e, t, i) {},
  "./src/css/database-icons.css": function (e, t, i) {},
  "./src/init.js": function (e, t, o) {
    "use strict";
    o.r(t);
    var a = o("./node_modules/react-dom/index.js"),
      n = o.n(a),
      s = o("./node_modules/react/index.js"),
      r = o.n(s),
      l = o("./src/react/util/Track.ts"),
      c = o("./src/js/ui/ui-util.js");
    const d = /^nx_(mac|ipad|iphone)_(1m|1y)_([0-9]+)$/;
    function u(e) {
      var t,
        i = (e = e || {}).users || [],
        o = {};
      for (t = 0; t < i.length; t++) {
        var a = p(i[t]);
        a && (o[a.id] = a);
      }
      var n = e.teams || [],
        s = {};
      for (t = 0; t < n.length; t++) {
        var r = h(n[t], o);
        r && (s[r.id] = r);
      }
      (this.token =
        e.token && e.token.token ? "USER-" + e.token.token : void 0),
        (this.user = p(e.user) || {
          id: "#NO-USER-ID#",
          name: "Anonymous",
          displayName: "Anonymous",
          email: "user@example.com",
        }),
        (this.accounts = s),
        (this.users = o);
    }
    function p(e) {
      if (e && e.id)
        return {
          id: e.id,
          plan: e.plan,
          name: (e.profile && e.profile.displayName) || e.email || "Anonymous",
          displayName:
            (e.profile && e.profile.displayName) || e.email || "Anonymous",
          firstName: (e.profile && e.profile.firstName) || e.firstName,
          lastName: (e.profile && e.profile.lastName) || e.lastName,
          email: e.email || "user@example.com",
          verified: !!e.verified,
          isRoot: !!e.isRoot,
          language:
            (e.profile && (e.profile.language || e.profile.locale)) || "en",
          accounts: {},
          photo: (e.profile && e.profile.photo) || void 0,
          active: !1 !== e.active,
          experimentT: e.experimentT,
          passwordExpired: e.passwordExpired,
          journey: e.journey || {},
          createdAt: e.createdAt,
        };
    }
    function h(e, t) {
      if (e && e.id && !e.stoppedAt) {
        var i = {
          id: e.id,
          name: e.name || locale.unnamed,
          owner: e.owner,
          invitations: {},
          host: e.host,
          roles: {},
        };
        m(i.roles, ["admin", "editor"]), m(i.roles, e.roles);
        for (var o = e.users || [], a = {}, n = 0; n < o.length; n++) {
          var s = o[n],
            r = t[s.user];
          if (r) {
            var l = {
              id: r.id,
              name: r.name,
              email: r.email,
              firstName: r.firstName,
              lastName: r.lastName,
              verified: r.verified,
              language: r.language,
              roles: g(s.role),
              photo: r.photo,
              active: r.active,
            };
            (r.accounts[i.id] = i),
              (a[r.id] = l),
              m(i.roles, s.roles || s.role ? v(s.role) : []);
          }
        }
        i.users = a;
        var c = e.invitations;
        if (c)
          for (var d = 0; d < c.length; d++) {
            var u = c[d],
              p = {
                email: u.recipient,
                roles: g(u.role),
                createdAt: new Date(u.createdAt),
                user: t[u.sender],
                inviteCode: u.id,
              };
            (i.invitations[p.inviteCode] = p), u.role && m(i.roles, v(u.role));
          }
        return i;
      }
    }
    function m(e, t) {
      if (t)
        for (var i = 0; i < t.length; i++) {
          var o = t[i];
          "string" == typeof o &&
            o.length &&
            (e[o] || (e[o] = { id: o, caption: f(o) }));
        }
    }
    function f(e) {
      return e;
    }
    function g(e) {
      if (!e) return {};
      var t = {};
      "string" == typeof e && (e = v(e));
      for (var i = 0; i < e.length; i++) t[e[i]] = !0;
      return t;
    }
    function v(e) {
      if (!e) return [];
      for (var t = e.split(","), i = [], o = 0; o < t.length; o++) {
        var a = t[o].trim();
        a && i.push(a);
      }
      return i;
    }
    (u.prototype.getCurrentUser = function () {
      return this.user;
    }),
      (u.prototype.getCurrentAccountUser = function (e) {
        var t = this.accounts[e];
        if (t) {
          var i = this.user;
          if (i) return t.users[i.id];
        }
      }),
      (u.prototype.isAdmin = function (e) {
        var t = this.getCurrentAccountUser(e);
        return !(!t || !t.roles.admin);
      }),
      (u.prototype.getUser = function (e) {
        return this.users[e];
      }),
      (u.prototype.getUsers = function () {
        return this.users;
      }),
      (u.prototype.getRoles = function (e) {
        var t = this.accounts[e];
        return t ? t.roles : {};
      }),
      (u.prototype.addRole = function (e, t) {
        var i = this.accounts[e];
        i && (i.roles[t.id] = t);
      }),
      (u.prototype.getAccountUser = function (e, t) {
        var i = this.accounts[e];
        if (i) return i.users[t];
      }),
      (u.prototype.getAccount = function (e) {
        return this.accounts[e];
      }),
      (u.prototype.getAccounts = function () {
        return this.accounts;
      }),
      (u.prototype.listAccounts = function () {
        return util.localeSortBy(this.accounts, "name");
      }),
      (u.prototype.listAccountUsers = function (e) {
        var t = this.accounts[e];
        return t ? util.localeSortBy(t.users, "name") : [];
      }),
      (u.prototype.listInvitations = function (e) {
        var t = this.accounts[e];
        return t ? util.localeSortBy(t.invitations, "email") : [];
      }),
      (u.prototype.getInvitation = function (e, t) {
        var i = this.accounts[e];
        if (i) return i.invitations[t];
      }),
      (u.prototype.canCreateTestAccount = function () {
        return !0;
      }),
      (u.prototype.canRemoveAccount = function (e) {
        var t = this.accounts[e];
        return !!t && t.owner === this.user.id;
      }),
      (u.prototype.canInvite = function (e) {
        var t = this.getCurrentAccountUser(e);
        return !!t && !!t.roles.admin && !!t.verified;
      }),
      (u.prototype.hasOtherAdmins = function (e, t) {
        var i = this.accounts[e];
        if (!i) return !1;
        var o = i.users;
        if (!o[t]) return !1;
        var a = 0;
        for (var n in o) {
          if (o.hasOwnProperty(n)) if (n != t) o[n].roles.admin && a++;
        }
        return a > 0;
      }),
      (u.prototype.getPlan = function () {
        var e = this.accounts,
          t = 0,
          i = 0,
          o = 0,
          a = 0,
          n = {};
        for (var s in e)
          if (e.hasOwnProperty(s)) {
            var r = e[s];
            if (r.owner === this.user.id) {
              var l = r.users;
              for (var c in (a++, l))
                if (l.hasOwnProperty(c)) {
                  var u = this.users[c];
                  u &&
                    !n[c] &&
                    ((n[c] = u),
                    o++,
                    u.plan && "basic" === u.plan.name ? t++ : i++);
                }
            }
          }
        var p,
          h,
          m,
          f = this.user.plan || {},
          g = f.name || "none",
          v = f.provider || "none";
        if ("apple" === v) {
          var b = d.exec(f.product);
          b && ((p = b[1]), (h = b[2]), (m = parseInt(b[3])));
        }
        return {
          name: g,
          provider: v,
          collaborators: f.collaborators,
          product: f.product,
          productDevice: p,
          productPeriod: h,
          productCount: m,
          expiresAt: f.expiresAt && new Date(f.expiresAt),
          ownAccountsCount: a,
          totalUserCount: o,
          accountableUserCount: i,
          freeUserCount: t,
          uniqueUsers: n,
        };
      }),
      (u.prototype.hasPlan = function (e) {
        var t = this.accounts[e];
        if (!t) return !1;
        var i = this.users[t.owner];
        return (i && i.plan && "none" !== i.plan.name) || !1;
      }),
      (u.prototype.getOwner = function (e) {
        var t = this.accounts[e];
        if (!t) return { email: "unknown" };
        var i = this.users[t.owner];
        return i || { email: "unknown" };
      });
    var b = o("./node_modules/@ninox/ninox-core/dist/ninox-core.es5.js");
    function y(e) {
      return new Promise((t, i) => {
        const o = window.open(e, "windowname1", "width=800, height=600"),
          a = setInterval(() => {
            if (!o) return console.warn("no window");
            try {
              if (o.closed) return clearInterval(a), t(null);
              if (-1 !== o.document.URL.indexOf("userId")) {
                clearInterval(a);
                const e = o.document.URL.split(/[?&]/).slice(1);
                if (e.length) {
                  const i = e
                    .map((e) => e.split("="))
                    .reduce(
                      (e, t) => ((e[t[0]] = decodeURIComponent(t[1])), e),
                      {}
                    );
                  t(i);
                } else
                  i(new Error("Impossible case: no parameters in redirect"));
                o.close();
              }
            } catch (e) {}
          }, 100);
      });
    }
    o("./node_modules/core-js/modules/es.string.replace.js");
    const w = {};
    let x, T;
    const C = { error: "", token: "" },
      k = { error: "", token: "" },
      S = /(?:\#)?\/saml\/callback(?:\?)?(.*)/,
      _ = /(?:\#)?\/oidc\/callback(?:\?)?(.*)/;
    function E() {
      const e = S.exec(window.location.hash);
      e && z(e[1]);
      const t = _.exec(window.location.hash);
      t && L(t[1]),
        (T = B()),
        (x = I(P())),
        A(x),
        O(void 0, x),
        window.addEventListener("popstate", D);
    }
    function D(e) {
      const t = M(window.location.hash),
        i = x;
      j(t), O(i, t);
    }
    const N = {
      teams: "teamId",
      database: "dbId",
      module: "moduleId",
      view: "vid",
      node: "nid",
      tab: "tabId",
    };
    function M(e) {
      const t = (e || "").split("/"),
        i = {};
      for (let e = 1; e < t.length; e += 2) {
        const o = N[(t[e] || "").trim()],
          a = (t[e + 1] || "").trim();
        o && a && (i[o] = decodeURIComponent(a));
      }
      return i;
    }
    function I(e) {
      return (
        void 0 !== e.dbId &&
          (void 0 === e.moduleId && (e.moduleId = "default"),
          void 0 === e.vid && (e.vid = "default"),
          void 0 !== e.nid && void 0 === e.tabId && (e.tabId = "default")),
        e
      );
    }
    function R(e) {
      return (
        (e.teamId ? "/teams/" + encodeURIComponent(e.teamId) : "") +
        (e.dbId ? "/database/" + encodeURIComponent(e.dbId) : "") +
        (e.moduleId ? "/module/" + encodeURIComponent(e.moduleId) : "") +
        (e.vid ? "/view/" + encodeURIComponent(e.vid) : "") +
        (e.nid ? "/node/" + encodeURIComponent(e.nid) : "") +
        (e.tabId ? "/tab/" + encodeURIComponent(e.tabId) : "")
      );
    }
    function F(e) {
      const t = x,
        i = I(e);
      j(i),
        window.location.assign(window.location.pathname + "#" + R(i)),
        O(t, i);
    }
    function A(e) {
      j(I(e)), window.location.replace(window.location.pathname + "#" + R(e));
    }
    function O(e, t) {
      e
        ? e.nid !== t.nid || e.tabId !== t.tabId
          ? W("tab", t)
          : e.dbId !== t.dbId || e.moduleId !== t.moduleId || e.vid !== t.vid
          ? W("view", t)
          : e.teamId !== t.teamId && W("team", t)
        : W("team", t);
    }
    function z(e) {
      const t = e.split("&");
      for (const e of t) {
        const [t, i] = e.split("=");
        "token" === t
          ? (C.token = decodeURIComponent(i))
          : "error" === t && (C.error = decodeURIComponent(i));
      }
    }
    function L(e) {
      const t = e.split("&");
      for (const e of t) {
        const [t, i] = e.split("=");
        "token" === t
          ? (k.token = decodeURIComponent(i))
          : "error" === t && (k.error = decodeURIComponent(i));
      }
    }
    function j(e) {
      window.NinoxDocumentInteraction.setUserDefault(
        "ui.navigation.state" +
          ("prod" === window.NINOX_ENV ? "" : "." + window.NINOX_ENV),
        JSON.stringify(e) || ""
      ),
        (x = e);
    }
    function P() {
      const e = window.location.hash;
      if (e && "#" !== e) return I(M(window.location.hash));
      {
        let e;
        const t = window.NinoxDocumentInteraction.getUserDefault(
          "ui.navigation.state" +
            ("prod" === window.NINOX_ENV ? "" : "." + window.NINOX_ENV)
        );
        if (t && "{}" !== t)
          try {
            const i = JSON.parse(t);
            null != i && "object" == typeof i && (e = i);
          } catch (e) {
            console.log("Invalid navigation state", e);
          }
        return e || { teamId: "default" };
      }
    }
    function H() {
      if (!x) throw new Error("Router not initialized");
      return x;
    }
    function U(e, t, i) {
      const o = w[e];
      w[e] = o
        ? o.concat([{ callback: t, context: i }])
        : [{ callback: t, context: i }];
    }
    function V(e, t, i) {
      const o = w[e];
      o && (w[e] = o.filter((e) => e.callback !== t && e.context !== i));
    }
    function W(e, t) {
      const i = w[e];
      if (i) for (const e of i) e.callback.apply(e.context, [t]);
    }
    function B() {
      let e = null;
      const t = /template=(.*)/.exec(window.location.hash);
      return t && (e = decodeURIComponent(t[1])), e;
    }
    function q() {
      return T;
    }
    function Y() {
      return C;
    }
    function G() {
      return k;
    }
    const X = {
        dev: "http://localhost:7000",
        qs: "https://q-ums.ninox.com",
        prod: "https://ums.ninox.com",
        server: "/ums",
      },
      K = {
        NEED_RELOGIN: "NEED_RELOGIN",
        RELOGIN_SUCCESSFUL: "RELOGIN_SUCCESSFUL",
        RELOGIN_CANCELLED: "RELOGIN_CANCELLED",
      };
    function J() {
      (this.serverConfig = {}),
        (this.requestQueue = []),
        (this.reloginCallbacks = []),
        (this.reloginActive = !1);
      var e = NinoxDocumentInteraction.getUserDefault("nx.server");
      if (
        ((this.baseURL = e ? "https://" + e + "/ums" : X.prod), !this.baseURL)
      )
        throw new Error("Invalid configuration: prod");
      (this.apiURL = this.baseURL + "/api"),
        (this.signupURL = this.apiURL + "/self/user"),
        (this.loginURL = this.apiURL + "/credentials/signin"),
        (this.logoutURL = this.apiURL + "/credentials/signout"),
        (this.refreshURL = this.apiURL + "/self/session/current"),
        (this.createAccountURL = this.apiURL + "/self/team"),
        (this.forgotPasswordURL =
          this.apiURL + "/credentials/requestResetPassword"),
        (this.resendVerificationMailURL =
          this.apiURL + "/user/requestEmailVerification"),
        (this.sessionKey = "nx.session");
      var t,
        i = NinoxDocumentInteraction.getUserDefault(this.sessionKey) || "";
      if (i)
        try {
          t = JSON.parse(i);
        } catch (e) {
          console.warn("Invalid session object", e);
        }
      (this.session = t),
        (this.sessionInfo = new u(t)),
        this.session &&
          location.hash.startsWith("/verification/callback?email=") &&
          this.sessionInfo.user.email !== window.location.hash.substr(29) &&
          this.logout(),
        (this.device = "web:" + navigator.userAgent),
        this.isLoggedIn() && l.c(this.sessionInfo.user),
        this.on(K.RELOGIN_SUCCESSFUL, () => this.onReloginSuccess()),
        this.on(K.RELOGIN_CANCELLED, () => this.onReloginCancelled());
    }
    Object.assign(J.prototype, b.util.events),
      (J.prototype.init = async function () {
        try {
          this.serverConfig = await this.fetchServerConfig();
        } catch (e) {
          (this.serverConfig = {}),
            console.warn("Error while fetching server config", e);
        }
      }),
      (J.prototype.getServerConfig = function (e = "") {
        const t = this.serverConfig || {};
        return e ? t[e] : t;
      }),
      (J.prototype.isSamlEnabled = function () {
        return Object(c.g)() && this.getServerConfig("saml");
      }),
      (J.prototype.isOidcEnabled = function () {
        return Object(c.g)() && this.getServerConfig("oidc");
      }),
      (J.prototype.isAddsEnabled = function () {
        return Object(c.g)() && this.getServerConfig("adds");
      }),
      (J.prototype.shouldLogRocket = function () {
        return !0;
      }),
      (J.prototype.isLoggedIn = function () {
        return !!this.session;
      }),
      (J.prototype.getToken = function () {
        return this.sessionInfo ? this.sessionInfo.token : void 0;
      }),
      (J.prototype.ensureToken = function (e) {
        var t = this;
        if (t.sessionInfo && t.sessionInfo.token)
          return e(void 0, t.sessionInfo.token);
        t.login(function (i) {
          return i
            ? e(i)
            : t.sessionInfo && t.sessionInfo.token
            ? e(void 0, t.sessionInfo.token)
            : void e("Login failed.");
        });
      }),
      (J.prototype.signup = function (e, t) {
        var i = this,
          o = this.signupURL,
          a = JSON.stringify({
            email: e.email,
            password: e.password,
            newsletter: e.newsletter,
            device: this.device,
            uuid: void 0,
            nxVersion: NINOX_VERSION,
            language: locale.LOCALE,
            iadAttributionDetails: e.iadAttributionDetails,
          });
        $.ajax({
          type: "POST",
          url: o,
          data: a,
          contentType: "application/json",
          processData: !1,
          xhrFields: { withCredentials: !0 },
          headers: {},
          success: function (e, o, a) {
            i.saveSession(e), l.a(i.sessionInfo.user);
            var n = i.getUserId();
            if (n)
              try {
                ga("send", "event", "signup", n, "user_id", { dimension4: n });
              } catch (e) {
                console.log(e);
              }
            t(null, n);
          },
          error: function (e, i, o) {
            console.warn(i, o), t(locale.emailAlreadyRegistered);
          },
        });
      }),
      (J.prototype.addsLogin = function (e, t, i) {
        var o = this,
          a = this.baseURL + "/adds/login",
          n = JSON.stringify({
            email: e,
            password: t,
            device: this.device,
            uuid: void 0,
            nxVersion: NINOX_VERSION,
            language: locale.LOCALE,
          });
        $.ajax({
          type: "POST",
          url: a,
          data: n,
          contentType: "application/json",
          processData: !1,
          xhrFields: { withCredentials: !0 },
          headers: {},
          success: function (e, t, a) {
            o.saveSession(e), l.c(o.sessionInfo.user), i();
          },
          error: function (e, t, o) {
            console.warn(t, o), i(locale.wrongUserPassword);
          },
        });
      }),
      (J.prototype.login = function (e, t, i) {
        var o = this,
          a = this.loginURL,
          n = JSON.stringify({
            email: e,
            password: t,
            device: this.device,
            uuid: void 0,
            nxVersion: NINOX_VERSION,
            language: locale.LOCALE,
          });
        $.ajax({
          type: "POST",
          url: a,
          data: n,
          contentType: "application/json",
          processData: !1,
          xhrFields: { withCredentials: !0 },
          headers: {},
          success: function (e, t, a) {
            o.saveSession(e), l.c(o.sessionInfo.user);
            var n = o.getUserId();
            if (n)
              try {
                ga("send", "event", "login", n, "user_id", { dimension7: n });
              } catch (e) {
                console.log(e);
              }
            i();
          },
          error: function (e, t, o) {
            console.warn(t, o), i(e.responseText);
          },
        });
      }),
      (J.prototype.refreshPromisified = function (e) {
        return new Promise((t) => this.refresh(t, e));
      }),
      (J.prototype.refresh = function (e, t) {
        var i = this,
          o = this.refreshURL,
          a = this.session;
        if (t || a)
          if (this.reloginActive) e && e();
          else {
            var n = {};
            i.sessionInfo &&
              i.sessionInfo.token &&
              (n.authorization = "Bearer " + i.sessionInfo.token),
              $.ajax({
                type: "GET",
                url: o,
                processData: !1,
                xhrFields: { withCredentials: !0 },
                headers: n,
                success: function (t, o, a) {
                  i.saveSession(t), l.c(i.sessionInfo.user), e && e();
                },
                error: function (o, a, n) {
                  console.warn("Cannot get session info.", a, n),
                    o.status >= 400 && o.status < 500 && !t
                      ? i.relogin(e)
                      : e && e();
                },
              });
          }
        else e && e();
      }),
      (J.prototype.logout = function (e) {
        var t = this,
          i = this.logoutURL;
        if (!this.session) return e();
        var o = t.sessionInfo.token;
        this.clearSession(),
          $.ajax({
            type: "POST",
            url: i,
            data: { device: this.device },
            processData: !1,
            xhrFields: { withCredentials: !0 },
            headers: { authorization: "Bearer " + o },
            success: function (t, i, o) {
              e();
            },
            error: function (t, i, o) {
              console.warn(i, o), e();
            },
          });
      }),
      (J.prototype.forgotPassword = function (e, t) {
        var i = this.forgotPasswordURL,
          o = JSON.stringify({
            email: e.email,
            device: this.device,
            uuid: void 0,
            nxVersion: NINOX_VERSION,
            language: locale.LOCALE,
          });
        $.ajax({
          type: "POST",
          url: i,
          data: o,
          contentType: "application/json",
          processData: !1,
          xhrFields: { withCredentials: !0 },
          headers: {},
          success: function (e, i, o) {
            t();
          },
          error: function (e, i, o) {
            console.warn(i, o), t(locale.emailNotRegistered);
          },
        });
      }),
      (J.prototype.changePassword = function (e, t) {
        var i = this;
        if (!this.session) return t("Not logged in.");
        var o = this.apiURL + "/self/user/password",
          a = JSON.stringify({
            oldPassword: e.oldPassword,
            newPassword: e.newPassword,
            device: this.device,
            uuid: void 0,
            nxVersion: NINOX_VERSION,
            language: locale.LOCALE,
          });
        $.loading(!0),
          $.ajax({
            type: "PUT",
            url: o,
            data: a,
            contentType: "application/json",
            processData: !1,
            xhrFields: { withCredentials: !0 },
            headers: { authorization: "Bearer " + i.sessionInfo.token },
            success: function (e, i, o) {
              $.loading(!1), t(null, o.responseText);
            },
            error: function (e, i, o) {
              $.loading(!1), t(e.responseText);
            },
          });
      }),
      (J.prototype.changeExpiredPassword = function (e, t) {
        var i = this.apiURL + "/self/user/expired-password",
          o = JSON.stringify({
            oldPassword: e.oldPassword,
            newPassword: e.newPassword,
            id: e.userId,
            device: this.device,
            uuid: void 0,
            nxVersion: NINOX_VERSION,
            language: locale.LOCALE,
          });
        $.loading(!0),
          $.ajax({
            type: "PUT",
            url: i,
            data: o,
            contentType: "application/json",
            processData: !1,
            xhrFields: { withCredentials: !0 },
            success: function (e, i, o) {
              $.loading(!1), t(null, o.responseText);
            },
            error: function (e, i, o) {
              $.loading(!1), t(e.responseText);
            },
          });
      }),
      (J.prototype.resendVerificationMail = function (e, t) {
        var i = this,
          o = this.resendVerificationMailURL;
        if (!this.session) return t("Not logged in.");
        var a = this.getCurrentUser().email,
          n = JSON.stringify({
            email: a,
            device: this.device,
            uuid: void 0,
            nxVersion: NINOX_VERSION,
            language: locale.LOCALE,
          });
        $.ajax({
          type: "POST",
          url: o,
          data: n,
          contentType: "application/json",
          processData: !1,
          xhrFields: { withCredentials: !0 },
          headers: { authorization: "Bearer " + i.sessionInfo.token },
          success: function (e, i, o) {
            t();
          },
          error: function (e, i, o) {
            console.warn("verification error -> ", i, o),
              t(locale.wrongUserPassword);
          },
        });
      }),
      (J.prototype.createAccount = function (e, t) {
        var i = this;
        i.request(
          "POST",
          this.createAccountURL,
          { name: e.name, device: this.device },
          function (e, o) {
            if (e) return t(e);
            i.refresh(function (e) {
              t(e, o && o.id);
            });
          }
        );
      }),
      (J.prototype.sendReceipt = function (e, t) {
        var i = this;
        i.request(
          "POST",
          this.apiURL + "/self/payment/apple",
          { receipt: e, device: this.device },
          function (e, o) {
            if (e) return t(e);
            i.refresh(t);
          }
        );
      }),
      (J.prototype.checkReceipt = function (e, t) {
        this.request(
          "POST",
          this.apiURL + "/self/payment/checkReceipt",
          { receipt: e, device: this.device },
          function (e, i) {
            if (e) return t(e);
            t(void 0, i);
          }
        );
      }),
      (J.prototype.invite = function (e, t) {
        const i = this,
          o = e.email,
          a = e.accountId,
          n = e.locale,
          s = (e.roles && e.roles.join(", ")) || "editor";
        i.request(
          "POST",
          this.apiURL + "/self/invitation",
          { recipient: o, role: s, teamId: a, device: this.device, locale: n },
          function (e) {
            if (e) return t(e);
            i.refresh(t);
          }
        );
      }),
      (J.prototype.cancelInvitation = function (e, t, i) {
        var o = this;
        o.request(
          "DELETE",
          this.apiURL + "/self/invitation/" + encodeURIComponent(t),
          void 0,
          function (e) {
            if (e) return i(e);
            o.refresh(i);
          }
        );
      }),
      (J.prototype.resendInvitation = function (e, t, i) {
        var o = this;
        o.request(
          "PUT",
          this.apiURL + "/self/invitation/" + encodeURIComponent(t) + ":resend",
          {},
          function (e) {
            if (e) return i(e);
            o.refresh(i);
          }
        );
      }),
      (J.prototype.removeAccountUser = function (e, t, i) {
        var o = this;
        o.request(
          "DELETE",
          this.apiURL +
            "/self/team/" +
            encodeURIComponent(e) +
            "/member/" +
            encodeURIComponent(t),
          void 0,
          function (e) {
            if (e) return i(e);
            o.refresh(i);
          }
        );
      }),
      (J.prototype.updateAccountUser = function (e, t, i) {
        var o = this,
          a = (t.roles && t.roles.join(", ")) || "editor";
        o.request(
          "PUT",
          this.apiURL +
            "/self/team/" +
            encodeURIComponent(e) +
            "/member/" +
            encodeURIComponent(t.id),
          { role: a },
          function (e) {
            if (e) return i(e);
            o.refresh(i);
          }
        );
      }),
      (J.prototype.updateUserProfile = function (e, t) {
        var i = this;
        if (!i.getCurrentUser()) return t("Not logged in");
        i.request("PUT", this.apiURL + "/self/user", e, function (e) {
          if (e) return t(e);
          i.refresh(t);
        });
      }),
      (J.prototype.updateUserJourney = function (e, t) {
        var i = this;
        if (!i.getCurrentUser()) return t("Not logged in");
        i.request("POST", this.apiURL + "/self/user/journey", e, function (e) {
          if (e) return t(e);
          i.refresh(t);
        });
      }),
      (J.prototype.updateAccount = function (e, t) {
        var i = this;
        if (!i.getCurrentUser()) return t("Not logged in");
        i.request(
          "PUT",
          this.apiURL + "/self/team/" + encodeURIComponent(e.id),
          { name: e.name },
          function (e) {
            if (e) return t(e);
            i.refresh(t);
          }
        );
      }),
      (J.prototype.changeEmail = function (e, t) {
        const i = this;
        if (!this.session) return t("Not logged in.");
        const o = this.apiURL + "/self/user/email",
          a = JSON.stringify({ email: e });
        $.loading(!0),
          $.ajax({
            type: "PUT",
            url: o,
            data: a,
            contentType: "application/json",
            processData: !1,
            xhrFields: { withCredentials: !0 },
            headers: { authorization: "Bearer " + i.sessionInfo.token },
            success: function (e, o, a) {
              $.loading(!1), i.refresh(t);
            },
            error: function (e, i, o) {
              $.loading(!1), t(e.responseText);
            },
          });
      }),
      (J.prototype.canRemoveAccount = function (e) {
        return this.sessionInfo.canRemoveAccount(e);
      }),
      (J.prototype.removeAccount = function (e, t) {
        var i = this;
        i.request(
          "DELETE",
          this.apiURL + "/self/team/" + encodeURIComponent(e),
          void 0,
          function (e) {
            if (e) return t(e);
            i.refresh(t);
          }
        );
      }),
      (J.prototype.saveSession = function (e) {
        b.util.equals(e, this.session) ||
          ((this.session = e),
          (this.sessionInfo = new u(e)),
          NinoxDocumentInteraction.setUserDefault(
            this.sessionKey,
            JSON.stringify(this.session)
          ),
          this.trigger("change", e));
      }),
      (J.prototype.clearSession = function () {
        this.session &&
          ((this.session = void 0),
          (this.sessionInfo = new u({})),
          NinoxDocumentInteraction.setUserDefault(this.sessionKey, ""),
          this.trigger("change", void 0));
      }),
      (J.prototype.getUserId = function () {
        if (this.session) return this.sessionInfo.user.id;
      }),
      (J.prototype.getUserName = function () {
        return this.session
          ? this.sessionInfo.user.name || "Anonymous"
          : "Not Logged In";
      }),
      (J.prototype.getAccounts = function () {
        return this.sessionInfo.getAccounts();
      }),
      (J.prototype.listAccounts = function () {
        return this.sessionInfo.listAccounts();
      }),
      (J.prototype.getAccount = function (e) {
        return this.sessionInfo.getAccount(e);
      }),
      (J.prototype.getAccountName = function (e) {
        var t = this.sessionInfo.getAccount(e);
        return (t && t.name) || locale.unknown;
      }),
      (J.prototype.getFirstAccount = function () {
        var e = this.sessionInfo.listAccounts();
        return e.length ? e[0] : void 0;
      }),
      (J.prototype.getSessionInfo = function () {
        return this.sessionInfo;
      }),
      (J.prototype.getUpgradeURL = function (e) {
        return this.apiURL + "/self/payment:link";
      }),
      (J.prototype.listAccountUsers = function (e) {
        return this.sessionInfo.listAccountUsers(e);
      }),
      (J.prototype.listInvitations = function (e) {
        return this.sessionInfo.listInvitations(e);
      }),
      (J.prototype.getAccountUser = function (e, t) {
        return this.sessionInfo.getAccountUser(e, t);
      }),
      (J.prototype.getCurrentUser = function () {
        return this.sessionInfo.getCurrentUser();
      }),
      (J.prototype.getCurrentAccountUser = function (e) {
        return this.sessionInfo.getAccountUser(
          e,
          this.sessionInfo.getCurrentUser().id
        );
      }),
      (J.prototype.getInvitation = function (e, t) {
        return this.sessionInfo.getInvitation(e, t);
      }),
      (J.prototype.isAdmin = function (e) {
        return this.sessionInfo.isAdmin(e);
      }),
      (J.prototype.canCreateTestAccount = function () {
        return this.isLoggedIn() && this.sessionInfo.canCreateTestAccount();
      }),
      (J.prototype.hasOtherAdmins = function (e, t) {
        return this.isLoggedIn() && this.sessionInfo.hasOtherAdmins(e, t);
      }),
      (J.prototype.canInvite = function (e) {
        return this.isLoggedIn() && this.sessionInfo.canInvite(e);
      }),
      (J.prototype.request = function (e, t, i, o) {
        var a = this,
          n = a.sessionInfo ? a.sessionInfo.token : void 0,
          s = n ? "Bearer " + n : void 0,
          r = {};
        s && (r.authorization = s);
        var l = i ? JSON.stringify(i) : void 0,
          c = l ? "application/json" : void 0;
        $.ajax({
          type: e,
          url: t,
          contentType: c,
          data: l,
          headers: r,
          xhrFields: { withCredentials: !0 },
          processData: !1,
          success: function (e, t, i) {
            o(void 0, e);
          },
          error: function (n, s, r) {
            console.warn(s, r),
              401 === n.status
                ? (a.requestQueue.push([e, t, i, o]), a.relogin())
                : o(
                    "Request error: " +
                      e +
                      " " +
                      t +
                      ": " +
                      s +
                      "\n - " +
                      r +
                      ":\n " +
                      n.status +
                      " " +
                      n.statusText +
                      "\n " +
                      n.responseText
                  );
          },
        });
      }),
      (J.prototype.relogin = function (e) {
        const t = this;
        if ((e && t.reloginCallbacks.push(e), !t.reloginActive))
          return (t.reloginActive = !0), t.trigger(K.NEED_RELOGIN);
      }),
      (J.prototype.onReloginSuccess = function () {
        const e = this;
        e.reloginActive = !1;
        const t = e.reloginCallbacks;
        (e.reloginCallbacks = []),
          setTimeout(() => {
            for (const e of t) e(!0);
            e.rerequest();
          }, 0);
      }),
      (J.prototype.onReloginCancelled = function () {
        const e = this;
        e.clearSession(), e.cancelRequests();
        const t = e.reloginCallbacks;
        (e.reloginCallbacks = []),
          setTimeout(() => {
            for (const e of t) e(!1);
          }, 0);
      }),
      (J.prototype.rerequest = function () {
        var e = this.requestQueue;
        this.requestQueue = [];
        for (var t = 0; t < e.length; t++) {
          var i = e[t];
          this.request.apply(this, i);
        }
      }),
      (J.prototype.cancelRequests = function () {
        var e = this.requestQueue;
        this.requestQueue = [];
        for (var t = 0; t < e.length; t++) {
          (0, e[t][3])("Logged out");
        }
      }),
      (J.prototype.uploadProfileImage = function (e, t) {
        var i = this,
          o = this.apiURL + "/self/user/photo",
          a = i.sessionInfo ? i.sessionInfo.token : void 0,
          n = a ? "Bearer " + a : void 0,
          s = {};
        n && (s.authorization = n);
        var r = new FormData();
        r.append("file", e.file);
        var l = $.progress({ caption: "Uploading image...", cancel: u }),
          c = $.ajax({
            url: o,
            type: "POST",
            headers: s,
            processData: !1,
            xhrFields: { withCredentials: !0 },
            xhr: function () {
              var e = $.ajaxSettings.xhr();
              return (
                e.upload && e.upload.addEventListener("progress", d, !1), e
              );
            },
            success: function (e, o, a) {
              l.close(), i.refresh(), t();
            },
            error: function () {
              l.close(), t("Failed to upload image.");
            },
            data: r,
            cache: !1,
            contentType: !1,
          });
        function d(e) {
          var t = e.loaded / e.total;
          l.update(t);
        }
        function u() {
          c.abort();
        }
      }),
      (J.prototype.fetchAPIKeys = function (e) {
        var t = this;
        if (t.isLoggedIn()) {
          var i = t.getUserId();
          if (i) {
            var o = this.apiURL + "/self/user/" + i + "/tokens";
            t.request("GET", o, null, a);
          } else console.warn("No user id");
        } else console.warn("User not logged in");
        function a(t, i) {
          return t ? e(t) : e(null, i);
        }
      }),
      (J.prototype.updateApiKey = function (e, t) {
        var i = this;
        if (i.isLoggedIn())
          if (i.getUserId()) {
            var o = this.apiURL + "/self/tokens";
            i.request("PUT", o, { token: e.token, roles: e.roles }, a);
          } else console.warn("No user id");
        else console.warn("User not logged in");
        function a(e, i) {
          return e ? t(e) : t(null, i);
        }
      }),
      (J.prototype.deleteAPIKey = function (e, t) {
        var i = this;
        if (i.isLoggedIn()) {
          var o = i.getUserId();
          if (o) {
            var a = this.apiURL + "/self/user/" + o + "/tokens/" + e;
            i.request("DELETE", a, null, n);
          } else console.warn("No user id");
        } else console.warn("User not logged in");
        function n(e, i) {
          return e ? t(e) : t(null, i);
        }
      }),
      (J.prototype.generateAPIKey = function (e) {
        var t = this;
        if (t.isLoggedIn()) {
          var i = t.getUserId();
          if (i) {
            var o = this.apiURL + "/self/user/" + i + "/tokens";
            t.request("POST", o, null, a);
          } else console.warn("No user id");
        } else console.warn("User not logged in");
        function a(t, i) {
          return t ? e(t) : e(null, i);
        }
      }),
      (J.prototype.getPlanInfo = function (e, t) {
        var i = this;
        if (!i.isLoggedIn()) return t();
        i.request(
          "GET",
          this.baseURL + "/api/self/planinfo/" + encodeURIComponent(e),
          {},
          t
        );
      }),
      (J.prototype.ssoLogin = function () {
        const e = this,
          t = "WEB",
          i = e.isSamlEnabled()
            ? "saml/login"
            : e.isOidcEnabled
            ? "oidc/login"
            : "";
        if (!i) return console.warn("No login path for sso");
        const o = `${this.baseURL}/${i}?RelayState=${t}`;
        "APP" === t
          ? NinoxDocumentInteraction.openBrowser(o)
          : (window.location.href = o);
      }),
      (J.prototype.afterSSORedirect = function (e, t) {
        const i = this;
        if (!i.isSamlEnabled() && !i.isOidcEnabled())
          return t("Not a private cloud or not configured with SSO");
        const { error: o, token: a } = e;
        if (o || !a) return t(o || "SSO Token not present");
        i.fetchSession(a, (e, o) => {
          if (e || !o)
            return t(e || "Could not retreive session info using SSO token");
          i.saveSession(o), t();
        });
      }),
      (J.prototype.googleLogin = async function () {
        const e = this,
          t = "de" === locale.LOCALE ? "de" : "en";
        let i = "https://ninox.com";
        ["qs", "alpha"].includes("prod") && (i = "https://q-www.ninox.com");
        const o = "WEB_APP",
          a = `${i}/api/auth/google/${"123456.1"}/${t}?source=${o}`;
        let n;
        try {
          if (
            ((n = "APP" === o ? await s(a) : await y(a)),
            n && n.token && n.token !== e.sessionInfo.token)
          ) {
            const t = await e.fetchSessionPromisified(n.token);
            e.saveSession(t);
          }
        } catch (e) {
          throw e;
        }
        return await e.refreshPromisified(!0), n;
        function s(e) {
          return new Promise((t) => {
            (window.googleLoginCallback = (...e) => {
              (window.googleLoginCallback = () =>
                console.warn("Dummy Google Login called")),
                t(...e);
            }),
              NinoxDocumentInteraction.openBrowser(e);
          });
        }
      }),
      (J.prototype.fetchServerConfig = function () {
        const e = this;
        return new Promise((t, i) => {
          if (!NinoxDocumentInteraction.isOnline() || !Object(c.g)())
            return t({});
          e.request("GET", this.baseURL + "/server-config", null, (e, o) => {
            if (e) return i(e);
            t(o);
          });
        });
      }),
      (J.prototype.fetchSessionPromisified = function (e) {
        return new Promise((t, i) => {
          this.fetchSession(e, function (e, o) {
            if (e) return i(e);
            t(o);
          });
        });
      }),
      (J.prototype.fetchSession = function (e, t) {
        let i = this.refreshURL,
          o = { authorization: `Bearer USER-${e}` };
        $.ajax({
          type: "GET",
          url: i,
          processData: !1,
          xhrFields: { withCredentials: !0 },
          headers: o,
          success: function (e, i, o) {
            t && t(null, e);
          },
          error: function (e, i, o) {
            console.warn("Cannot get session info.", i, o),
              e.status >= 400 && e.status < 500 && t(o);
          },
        });
      });
    var Z = o("./node_modules/socket.io-client/dist/socket.io.slim.js"),
      Q = o("./node_modules/underscore/underscore.js");
    function ee(e) {
      (this.remoteChanged = $.proxy(this.remoteChanged, this)),
        (this.messageReceived = $.proxy(this.messageReceived, this)),
        (this.messagesRecieved = $.proxy(this.messagesRecieved, this)),
        (this.onMessageRead = $.proxy(this.onMessageRead, this)),
        (this.socketConnected = $.proxy(this.socketConnected, this)),
        (this.socketDisconnected = $.proxy(this.socketDisconnected, this)),
        (this.dbms = e),
        (this.token = null),
        (this.userId = null),
        (this.isAuthenticated = !1),
        (this.socket = null),
        (this.capSize = 2),
        (this.messages = []),
        (this.conversations = []),
        (this.msServices = {
          dev: "http://ms.ninoxdb.test",
          qs: "https://q-ms.ninox.com",
          prod: "https://ms.ninox.com",
        }),
        e.getRemoteConnection().on("change", this.remoteChanged),
        this.remoteChanged();
    }
    Object.assign(ee.prototype, util.events),
      (ee.prototype.connect = function () {
        this.socket ||
          (this.msServices.prod &&
            (Object(c.g)() ||
              (this.dbms.getRemoteConnection().isLoggedIn() &&
                ((this.socket = Z(this.msServices.prod, {
                  transports: ["websocket"],
                })),
                this.socket.on("MESSAGE.PUSH", this.messageReceived),
                this.socket.on("MESSAGE.FETCH", this.messagesRecieved),
                this.socket.on("MESSAGE.READ", this.onMessageRead),
                this.socket.on("connect", this.socketConnected),
                this.socket.on("disconnect", this.socketDisconnected),
                this.remoteChanged()))));
      }),
      (ee.prototype.disconnect = function () {
        this.socket &&
          (this.socket.disconnect(),
          (this.socket = null),
          (this.token = null),
          (this.user = null),
          (this.isAuthenticated = !1));
      }),
      (ee.prototype.getSessionToken = function () {
        var e = dbms.getRemoteConnection().getSessionInfo(),
          t = e && e.token;
        return "USER-" === t.substr(0, 5) && (t = t.substr(5)), t;
      }),
      (ee.prototype.socketConnected = function () {
        this.remoteChanged();
      }),
      (ee.prototype.socketDisconnected = function () {
        (this.token = null), (this.user = null), (this.isAuthenticated = !1);
      }),
      (ee.prototype.remoteChanged = function () {
        this.dbms.getRemoteConnection().isLoggedIn()
          ? this.socket
            ? (this.isAuthenticated && this.token == this.getSessionToken()) ||
              this.authenticate()
            : this.connect()
          : this.disconnect();
      }),
      (ee.prototype.authenticate = function () {
        if (this.socket) {
          var e = this,
            t = this.getSessionToken();
          (e.isAuthenticated = !1),
            e.socket.emit("CLIENT.AUTHENTICATE", { token: t }, function (i) {
              i
                ? console.log("MessageService.authenticate error", i)
                : ((e.token = t),
                  (e.isAuthenticated = !0),
                  (e.user = e.dbms.getRemoteConnection().session.user.id),
                  e.fetchMessages({ user: e.user }));
            });
        }
      }),
      (ee.prototype.logout = function () {
        if (this.socket) {
          var e = this;
          (e.isAuthenticated = !1),
            (e.token = null),
            (e.user = null),
            e.trigger("logout"),
            e.socket.emit("CLIENT.LOGOUT", {}, function (e) {
              e && console.log("MessageService.logout err", e);
            });
        }
      }),
      (ee.prototype.getCappedMessages = function () {
        return this.messages.slice(0, this.capSize);
      }),
      (ee.prototype.fetchMessages = function (e) {
        this.socket &&
          (e.user
            ? ((e = Object.assign(
                {
                  start: 0,
                  limit: 5,
                  sort: "createdAt",
                  filter: { readAt: null, deletedAt: null },
                },
                e
              )),
              this.isAuthenticated && this.socket.emit("MESSAGE.FETCH", e))
            : console.error("Not a valid criteria for fetching messages"));
      }),
      (ee.prototype.messagesRecieved = function (e) {
        var t = this;
        e.error
          ? console.warn("Could not fetch messages for user")
          : e.data.messages &&
            e.data.messages.length &&
            ((t.messages = e.data.messages),
            t.trigger("messages", t.getCappedMessages()));
      }),
      (ee.prototype.messageReceived = function (e) {
        var t = this;
        t.messages.unshift(e), t.trigger("message", { message: e, latest: !0 });
      }),
      (ee.prototype.markMessageAsRead = function (e) {
        if (this.socket) {
          var t = this;
          t.isAuthenticated && t.socket.emit("MESSAGE.READ", { id: e });
        }
      }),
      (ee.prototype.onMessageRead = function (e) {
        var t = this,
          i = t.getCappedMessages();
        if (t.isAuthenticated) {
          if (e.error)
            return (
              console.warn("Could not mark message " + o + " as read."),
              void t.trigger("removeMessageError")
            );
          var o = e.data.messageId,
            a = -1;
          if (
            (Q.each(t.messages, function (e, t) {
              e._id === o && (a = t);
            }),
            -1 !== a)
          ) {
            t.messages.splice(a, 1);
            var n = t.getCappedMessages(),
              s = Q.last(n),
              r = Q.last(i);
            i.length === n.length &&
              s._id !== r._id &&
              t.trigger("message", { message: s, latest: !1 });
          }
        }
      }),
      (ee.prototype.markMessageAsDeleted = function (e) {
        this.socket &&
          this.isAuthenticated &&
          this.socket.emit("MESSAGE.DELETE", { id: e });
      }),
      (ee.prototype.sendMessage = function (e) {
        this.socket &&
          this.isAuthenticated &&
          this.socket.emit("MESSAGE.PUSH", e);
      }),
      (ee.prototype.fetchConversations = function (e, t, i, o) {
        this.socket &&
          this.isAuthenticated &&
          this.socket.emit("CONVERSATION.FETCH", {
            user: e,
            start: t || 0,
            limit: i || 5,
            sort: o || "latestMessageAt",
          });
      }),
      (ee.prototype.conversationsRecieved = function (e) {
        (this.conversations = this.conversations.concat(e)),
          this.trigger("conversations", e);
      });
    const te = schemas.RE_FILE_REF;
    function ie(e) {
      this.connection = e;
      var t = NinoxDocumentInteraction.getUserDefault("nx.server");
      t
        ? (this.baseURL = "https://" + t + e.path)
        : e.host
        ? (this.baseURL =
            (e.ssl ? "https://" : "http://") +
            e.host +
            (e.ssl
              ? 443 == e.port
                ? ""
                : ":" + e.port
              : 80 == e.port
              ? ""
              : ":" + e.port) +
            e.path)
        : (this.baseURL = e.path),
        /https?\:/.test(this.baseURL)
          ? (this.absoluteBaseURL = this.baseURL)
          : (this.absoluteBaseURL =
              window.location.protocol +
              "//" +
              window.location.host +
              this.baseURL),
        (this.dontShowErrors = !!e.dontShowErrors),
        (this.reloginActive = !1),
        (this.requestQueue = []);
    }
    function oe(e, t) {
      (this.root = e),
        (this.dbid = t),
        (this.baseURL = e.baseURL + "/" + encodeURIComponent(t)),
        (this.fileModCount = Date.now());
    }
    (ie.prototype.getToken = function () {
      return dbms.getRemoteConnection().getToken();
    }),
      (ie.prototype.getAuthorization = function () {
        var e = dbms.getRemoteConnection().getToken();
        return e ? "Bearer " + e : "";
      }),
      (ie.prototype.getDBServer = function (e) {
        return new oe(this, e);
      }),
      (ie.prototype.loadDatabases = function (e) {
        this.GET(this.baseURL + "/root/databases/list", {}, e);
      }),
      (ie.prototype.loadAccount = function (e) {
        this.GET(this.baseURL + "/root/account", {}, e);
      }),
      (ie.prototype.getProcesses = function (e) {
        this.GET(this.baseURL + "/root/processes", {}, e);
      }),
      (ie.prototype.createBackup = function (e, t) {
        this.POST(
          this.baseURL + "/" + encodeURIComponent(e.dbid) + "/createbackup",
          void 0,
          e,
          t
        );
      }),
      (ie.prototype.listBackups = function (e) {
        this.GET(this.baseURL + "/root/backups/list", {}, e);
      }),
      (ie.prototype.listSnapshots = function (e) {
        this.GET(this.baseURL + "/root/snapshots/list", {}, e);
      }),
      (ie.prototype.restoreBackup = function (e, t) {
        this.POST(this.baseURL + "/root/backups/restore", void 0, { id: e }, t);
      }),
      (ie.prototype.restoreSnapshot = function (e, t, i) {
        this.POST(
          this.baseURL + "/root/snapshots/restore",
          void 0,
          { dbid: e, timestamp: t },
          i
        );
      }),
      (ie.prototype.removeBackup = function (e, t) {
        this.POST(this.baseURL + "/root/backups/remove", void 0, { id: e }, t);
      }),
      (ie.prototype.removeSnapshot = function (e, t, i) {
        this.POST(
          this.baseURL + "/root/snapshots/remove",
          void 0,
          { dbid: e, timestamp: t },
          i
        );
      }),
      (ie.prototype.downloadBackupURL = function (e, t) {
        return (
          this.baseURL +
          "/root/backups/download/" +
          encodeURIComponent(t) +
          "?id=" +
          encodeURIComponent(e) +
          "&XT=" +
          encodeURIComponent(this.getToken())
        );
      }),
      (ie.prototype.createArchive = function (e, t) {
        this.POST(
          this.baseURL + "/" + encodeURIComponent(e.dbid) + "/createarchive",
          void 0,
          e,
          t
        );
      }),
      (ie.prototype.listArchives = function (e) {
        this.GET(this.baseURL + "/root/databases/listarchives", {}, e);
      }),
      (ie.prototype.removeArchive = function (e, t) {
        this.POST(
          this.baseURL + "/root/databases/removearchive",
          void 0,
          String(e),
          t
        );
      }),
      (ie.prototype.downloadArchiveURL = function (e) {
        return (
          this.baseURL +
          "/root/databases/downloadarchive/" +
          encodeURIComponent(e.name)
        );
      }),
      (ie.prototype.createDatabase = function (e, t) {
        this.POST(
          this.baseURL + "/root/databases/create",
          void 0,
          { dbname: e.dbname || e.name, icon: e.icon, color: e.color },
          t
        );
      }),
      (ie.prototype.exportArchiveURL = function (e) {
        return this.baseURL + "/" + encodeURIComponent(e) + "/exportarchive";
      }),
      (ie.prototype.removeDatabase = function (e, t) {
        this.POST(
          this.baseURL + "/root/databases/remove",
          void 0,
          { dbid: e },
          t
        );
      }),
      (ie.prototype.loadArchive = function (e, t) {
        this.POST(this.baseURL + "/root/databases/loadarchive", void 0, e, t);
      }),
      (ie.prototype.uploadArchive = function (e, t) {
        var i = this.baseURL + "/root/databases/uploadarchive",
          o = new FormData();
        o.append("name", e.name), o.append("file", e.file);
        var a = $.progress({ caption: "Uploading Archive File...", cancel: r }),
          n = $.ajax({
            url: i,
            type: "POST",
            headers: this.getHeaders(),
            xhrFields: { withCredentials: !0 },
            xhr: function () {
              var e = $.ajaxSettings.xhr();
              return (
                e.upload && e.upload.addEventListener("progress", s, !1), e
              );
            },
            success: function (e) {
              a.close();
              try {
                var i = JSON.parse(e);
                t(void 0, i);
              } catch (e) {
                t(e);
              }
            },
            error: function () {
              a.close(), t("Failed to upload archive.");
            },
            data: o,
            cache: !1,
            contentType: !1,
            processData: !1,
          });
        function s(e) {
          var t = e.loaded / e.total;
          a.update(t);
        }
        function r() {
          n.abort();
        }
      }),
      (ie.prototype.updateSettings = function (e, t) {
        this.POST(this.baseURL + "/root/settings", void 0, e, t);
      }),
      (ie.prototype.backgroundURL = function (e) {
        return this.baseURL + "/root/background.jpg?T=" + (e || 0);
      }),
      (ie.prototype.deleteBackground = function (e) {
        this.DELETE(this.baseURL + "/root/clear-background", {}, e);
      }),
      (ie.prototype.uploadBackground = function (e, t) {
        var i = this.baseURL + "/root/upload-background",
          o = new FormData();
        o.append("file", e.file);
        var a = $.progress({
            caption: "Uploading Background Image...",
            cancel: r,
          }),
          n = $.ajax({
            url: i,
            type: "POST",
            headers: this.getHeaders(),
            xhrFields: { withCredentials: !0 },
            xhr: function () {
              var e = $.ajaxSettings.xhr();
              return (
                e.upload && e.upload.addEventListener("progress", s, !1), e
              );
            },
            success: function (e) {
              a.close(), t();
            },
            error: function () {
              a.close(), t("Failed to upload background image.");
            },
            data: o,
            cache: !1,
            contentType: !1,
            processData: !1,
          });
        function s(e) {
          var t = e.loaded / e.total;
          a.update(t);
        }
        function r() {
          n.abort();
        }
      }),
      (ie.prototype.exportArchiveURL = function (e) {
        return (
          this.baseURL +
          "/" +
          encodeURIComponent(e.dbid) +
          "/exportarchive?data=" +
          e.data +
          "&files=" +
          e.files +
          "&comments=" +
          e.comments +
          "&history=" +
          e.history +
          "&messages=" +
          e.messages
        );
      }),
      (oe.prototype.getHeaders = function () {
        return this.root.getHeaders();
      }),
      (oe.prototype.uploadBackground = function (e, t) {
        var i = this.baseURL + "/files/background.jpg",
          o = new FormData();
        o.append("file", e.file);
        var a = $.progress({
            caption: "Uploading Background File...",
            cancel: r,
          }),
          n = $.ajax({
            url: i,
            type: "POST",
            headers: this.getHeaders(),
            xhrFields: { withCredentials: !0 },
            xhr: function () {
              var e = $.ajaxSettings.xhr();
              return (
                e.upload && e.upload.addEventListener("progress", s, !1), e
              );
            },
            success: function (e) {
              a.close();
              try {
                var i = JSON.parse(e);
                t(void 0, i);
              } catch (e) {
                t(e);
              }
            },
            error: function () {
              a.close(), t("Failed to upload image.");
            },
            data: o,
            cache: !1,
            contentType: !1,
            processData: !1,
          });
        function s(e) {
          var t = e.loaded / e.total;
          a.update(t);
        }
        function r() {
          n.abort();
        }
      }),
      (oe.prototype.loadNodes = function (e, t, i) {
        this.root.POST(
          this.baseURL + "/json/nodes2",
          void 0,
          { nids: e, deps: t },
          i
        );
      }),
      (oe.prototype.sendCreate = function (e, t, i) {
        this.root.POST(
          this.baseURL + "/json/create2",
          void 0,
          { tid: e, values: t },
          i
        );
      }),
      (oe.prototype.sendRemove = function (e, t) {
        this.root.POST(this.baseURL + "/json/remove", void 0, [e], t);
      }),
      (oe.prototype.sendRemoveAll = function (e, t) {
        this.root.POST(this.baseURL + "/json/remove", void 0, e, t);
      }),
      (oe.prototype.sendUpdate = function (e, t, i, o) {
        this.root.POST(
          this.baseURL + "/json/update2",
          void 0,
          { nid: e, fid: t, val: i },
          o
        );
      }),
      (oe.prototype.sendUpdateNodes = function (e, t) {
        this.root.POST(this.baseURL + "/json/updatenodes", void 0, e, t);
      }),
      (oe.prototype.sendDuplicate = function (e, t) {
        this.root.POST(this.baseURL + "/json/duplicate", void 0, { nid: e }, t);
      }),
      (oe.prototype.sendFind = function (e, t, i) {
        this.root.POST(
          this.baseURL + "/json/find",
          void 0,
          { select: e, find: t },
          i
        );
      }),
      (oe.prototype.sendSelects = function (e, t) {
        this.root.POST(this.baseURL + "/json/selects", void 0, e, t);
      }),
      (oe.prototype.loadCalendar = function (e, t, i) {
        this.root.POST(
          this.baseURL + "/json/calendar",
          void 0,
          { start: e, end: t },
          i
        );
      }),
      (oe.prototype.loadComments = function (e, t) {
        this.root.POST(this.baseURL + "/json/comments", void 0, { nid: e }, t);
      }),
      (oe.prototype.postComment = function (e, t, i, o) {
        this.root.POST(
          this.baseURL + "/json/comment",
          void 0,
          { nid: e, cid: t, comment: i },
          o
        );
      }),
      (oe.prototype.removeComment = function (e, t, i) {
        this.root.POST(
          this.baseURL + "/json/removecomment",
          void 0,
          { nid: e, cid: t },
          i
        );
      }),
      (oe.prototype.loadFiles = function (e, t) {
        this.root.POST(this.baseURL + "/json/files", void 0, { nid: e }, t);
      }),
      (oe.prototype.loadFile = function (e, t, i) {
        this.root.POST(
          this.baseURL + "/json/file",
          void 0,
          { nid: e, name: t },
          i
        );
      }),
      (oe.prototype.removeFile = function (e, t, i) {
        this.root.POST(
          this.baseURL + "/files/remove",
          void 0,
          { nid: e, file: t },
          i
        );
      }),
      (oe.prototype.previewURL = function (e, t) {
        if (t)
          return (
            this.baseURL +
            "/files/preview/" +
            encodeURIComponent(e) +
            "/" +
            encodeURIComponent(t) +
            "?T=" +
            this.fileModCount +
            "&XT=" +
            encodeURIComponent(this.getToken())
          );
      }),
      (oe.prototype.thumbURL1 = function (e) {
        if (e) {
          var t = te.exec(e);
          if (t) {
            var i = t[1],
              o = t[2],
              a = t[3];
            return (
              this.baseURL +
              "/files/preview/" +
              encodeURIComponent(i + o) +
              "/" +
              encodeURIComponent(a) +
              "?T=" +
              this.fileModCount +
              "&XT=" +
              encodeURIComponent(this.getToken())
            );
          }
        }
      }),
      (oe.prototype.thumbURL2 = function (e, t) {
        if (t)
          return (
            this.baseURL +
            "/files/preview/" +
            encodeURIComponent(e) +
            "/" +
            encodeURIComponent(t) +
            "?T=" +
            this.fileModCount +
            "&XT=" +
            encodeURIComponent(this.getToken())
          );
      }),
      (oe.prototype.thumb2URL1 = function (e) {
        if (e) {
          var t = te.exec(e);
          if (t) {
            var i = t[1],
              o = t[2],
              a = t[3];
            return (
              this.baseURL +
              "/files/preview/" +
              encodeURIComponent(i + o) +
              "/" +
              encodeURIComponent(a) +
              "?T=" +
              this.fileModCount +
              "&XT=" +
              encodeURIComponent(this.getToken())
            );
          }
        }
      }),
      (oe.prototype.thumb2URL2 = function (e, t) {
        if (t)
          return (
            this.baseURL +
            "/files/preview/" +
            encodeURIComponent(e) +
            "/" +
            encodeURIComponent(t) +
            "?T=" +
            this.fileModCount +
            "&XT=" +
            encodeURIComponent(this.getToken())
          );
      }),
      (oe.prototype.fileURL1 = function (e) {
        if (e) {
          var t = te.exec(e);
          if (t) {
            var i = t[1],
              o = t[2],
              a = t[3];
            return (
              this.baseURL +
              "/files/download/" +
              encodeURIComponent(i + o) +
              "/" +
              encodeURIComponent(a) +
              "?T=" +
              this.fileModCount +
              "&XT=" +
              encodeURIComponent(this.getToken())
            );
          }
        }
      }),
      (oe.prototype.fileURL2 = function (e, t) {
        if (t)
          return (
            this.baseURL +
            "/files/download/" +
            encodeURIComponent(e) +
            "/" +
            encodeURIComponent(t) +
            "?T=" +
            this.fileModCount +
            "&XT=" +
            encodeURIComponent(this.getToken())
          );
      }),
      (oe.prototype.downloadURL = function (e, t) {
        if (t)
          return (
            this.baseURL +
            "/files/download/" +
            encodeURIComponent(e) +
            "/" +
            encodeURIComponent(t) +
            "?T=" +
            this.fileModCount +
            "&XT=" +
            encodeURIComponent(this.getToken())
          );
      }),
      (oe.prototype.uploadURL = function (e) {
        return this.baseURL + "/files/upload?nid=" + encodeURIComponent(e);
      }),
      (oe.prototype.loadHistory = function (e) {
        this.root.GET(this.baseURL + "/json/history", void 0, e);
      }),
      (oe.prototype.loadNodeHistory = function (e, t) {
        this.root.POST(this.baseURL + "/json/history", void 0, { nid: e }, t);
      }),
      (oe.prototype.loadViews = function (e) {
        this.root.GET(this.baseURL + "/json/views/list", void 0, e);
      }),
      (oe.prototype.saveView = function (e, t) {
        this.root.POST(this.baseURL + "/json/views/update", void 0, e, t);
      }),
      (oe.prototype.removeView = function (e, t) {
        this.root.POST(this.baseURL + "/json/views/remove", void 0, e, t);
      }),
      (oe.prototype.loadBootstrap = function (e) {
        this.root.GET(
          this.baseURL + "/json/bootstrap",
          void 0,
          function (t, i) {
            if (t) return e(t);
            e(void 0, i);
          }
        );
      }),
      (oe.prototype.loadChanges = function (e, t) {
        this.root.POST(
          this.baseURL + "/json/changes",
          { $timeout: 4e4 },
          { since: e || 0 },
          t
        );
      }),
      (oe.prototype.sendUpdateSchema = function (e, t) {
        this.root.POST(this.baseURL + "/json/updateschema", void 0, e, t);
      }),
      (oe.prototype.sendPatchSchema = function (e, t) {
        this.root.POST(this.baseURL + "/json/patchschema", void 0, e, t);
      }),
      (oe.prototype.reindex = function (e) {
        this.root.POST(this.baseURL + "/json/reindex", void 0, void 0, e);
      }),
      (oe.prototype.reIndexFiles = function (e) {
        this.root.POST(this.baseURL + "/json/reindex-files", void 0, void 0, e);
      }),
      (oe.prototype.rebuildThumbs = function (e) {
        this.root.POST(
          this.baseURL + "/json/rebuild-thumbs",
          void 0,
          void 0,
          e
        );
      }),
      (oe.prototype.clearHistory = function (e) {
        this.root.POST(this.baseURL + "/json/clearhistory", void 0, void 0, e);
      }),
      (oe.prototype.setBackground = function (e, t) {
        this.root.POST(
          this.baseURL + "/settings/background-class",
          void 0,
          e,
          t
        );
      }),
      (oe.prototype.backgroundURL = function (e) {
        return (
          this.baseURL +
          "/files/background.jpg" +
          (e ? "?_refresh=" + Math.floor(1e6 * Math.random()) : "")
        );
      }),
      (oe.prototype.updateSettings = function (e, t) {
        this.root.POST(this.baseURL + "/settings/update", void 0, e, t);
      }),
      (oe.prototype.listReports = function (e) {
        this.root.GET(this.baseURL + "/reports/list", void 0, e);
      }),
      (oe.prototype.updateReport = function (e, t) {
        this.root.POST(this.baseURL + "/reports/update", void 0, e, t);
      }),
      (oe.prototype.removeReport = function (e, t) {
        this.root.POST(
          this.baseURL + "/reports/remove",
          void 0,
          { reportId: e },
          t
        );
      }),
      (oe.prototype.removeReportFile = function (e, t, i) {
        this.root.POST(
          this.baseURL + "/reports/removeFile",
          void 0,
          { reportId: e, file: t },
          i
        );
      }),
      (oe.prototype.cleanReportFiles = function (e, t, i) {
        this.root.POST(
          this.baseURL + "/reports/cleanFiles",
          void 0,
          { reportId: e, retain: t },
          i
        );
      }),
      (oe.prototype.copyReportFiles = function (e, t, i) {
        this.root.POST(
          this.baseURL + "/reports/copyFiles",
          void 0,
          { sourceId: e, targetId: t },
          i
        );
      }),
      (oe.prototype.reportFileURL = function (e, t) {
        return (
          this.baseURL +
          "/reports/file?report=" +
          encodeURIComponent(e) +
          "&file=" +
          encodeURIComponent(t) +
          "&XT=" +
          encodeURIComponent(this.getToken())
        );
      }),
      (oe.prototype.importReportFile = function (e, t, i) {
        var o = this,
          a = /\.([a-zA-Z0-9]+)$/.exec(t.name);
        if (!a) return i("Invalid file name: " + t.name);
        var n = a[1],
          s = util.createLowerUUID(12) + "." + n,
          r = new FormData();
        r.append("file", t);
        var l = $.progress({ caption: "Uploading File...", cancel: u }),
          c = $.ajax({
            url:
              this.baseURL +
              "/reports/uploadFile?report=" +
              encodeURIComponent(e) +
              "&file=" +
              encodeURIComponent(s),
            type: "POST",
            headers: this.getHeaders(),
            xhrFields: { withCredentials: !0 },
            xhr: function () {
              var e = $.ajaxSettings.xhr();
              return (
                e.upload && e.upload.addEventListener("progress", d, !1), e
              );
            },
            success: function () {
              o.fileModCount++, l.close(), i(void 0, s);
            },
            error: function () {
              o.fileModCount++, l.close(), i("Failed to upload image");
            },
            data: r,
            cache: !1,
            contentType: !1,
            processData: !1,
          });
        function d(e) {
          var t = e.loaded / e.total;
          l.update(t);
        }
        function u() {
          c.abort();
        }
      }),
      (oe.prototype.importFile = function (e, t, i, o) {
        "function" == typeof i && ((o = i), (i = void 0)),
          null == i && (i = (t.renameTo ? t.renameTo : t.name) || "unnamed"),
          (i = i.normalize("NFC"));
        var a = this,
          n = new FormData();
        i ? n.append("file", t, i) : n.append("file", t);
        var s = $.progress({ caption: "Uploading File...", cancel: c }),
          r = $.ajax({
            url:
              this.baseURL +
              "/files/upload?nid=" +
              encodeURIComponent(e) +
              (t.renameTo ? "&renameTo=" + encodeURIComponent(t.renameTo) : ""),
            type: "POST",
            headers: this.getHeaders(),
            xhrFields: { withCredentials: !0 },
            xhr: function () {
              var e = $.ajaxSettings.xhr();
              return (
                e.upload && e.upload.addEventListener("progress", l, !1), e
              );
            },
            success: function () {
              a.fileModCount++, s.close(), o(void 0, i || t.renameTo || t.name);
            },
            error: function () {
              a.fileModCount++, s.close(), o("Failed to upload file");
            },
            data: n,
            cache: !1,
            contentType: !1,
            processData: !1,
          });
        function l(e) {
          var t = e.loaded / e.total;
          s.update(t);
        }
        function c() {
          r.abort();
        }
      }),
      (oe.prototype.importFileFromURL = function (e, t, i, o) {
        this.fileModCount++,
          this.root.POST(
            this.baseURL + "/files/import",
            void 0,
            { nid: e, url: t, name: i },
            o
          );
      }),
      (oe.prototype.renameFile = function (e, t, i, o) {
        this.fileModCount++,
          this.root.POST(
            this.baseURL + "/files/rename",
            void 0,
            { nid: e, name: t, name2: i },
            o
          );
      }),
      (oe.prototype.saveFileURL = function (e, t, i) {
        return (
          this.root.baseURL +
          "/root/savefile?name=" +
          encodeURIComponent(e) +
          "&ct=" +
          encodeURIComponent(t) +
          (i ? "&isBase64=true" : "") +
          "&XT=" +
          encodeURIComponent(this.getToken())
        );
      }),
      (oe.prototype.loadFileURL = function (e, t, i, o) {
        return (
          this.root.absoluteBaseURL +
          "/root/loadfile/" +
          encodeURIComponent(t) +
          "?id=" +
          encodeURIComponent(e) +
          "&ct=" +
          encodeURIComponent(i) +
          (o ? "&download=1" : "") +
          "&t=" +
          Date.now() +
          "&XT=" +
          encodeURIComponent(this.getToken())
        );
      }),
      (oe.prototype.printSimple = function (e, t) {
        this.root.POST(this.baseURL + "/print/print-simple", void 0, e, t);
      }),
      (oe.prototype.printRich = function (e, t) {
        this.root.POST(this.baseURL + "/print/print-rich", void 0, e, t);
      }),
      (oe.prototype.syncEvents = function (e, t) {
        this.root.GET(this.baseURL + "/sync/events/" + e, {}, t);
      }),
      (oe.prototype.syncInit = function (e) {
        this.root.GET(
          this.baseURL + "/sync/init",
          { $showProgress: !0, $showProgressTitle: "Loading data..." },
          e
        );
      }),
      (oe.prototype.syncPull = function (e, t) {
        this.root.GET(this.baseURL + "/sync/pull2/" + e, {}, t);
      }),
      (oe.prototype.syncPush = function (e, t, i) {
        this.root.POST(this.baseURL + "/sync/push/" + e, void 0, t, i);
      }),
      (oe.prototype.getToken = function () {
        return this.root.getToken();
      }),
      (oe.prototype.getAuthorization = function () {
        return this.root.getAuthorization();
      }),
      (oe.prototype.evaluateOnServer = function (e, t, i) {
        this.root.POST(
          this.baseURL + "/json/evaluate",
          void 0,
          { nid: e, exp: t.toString() },
          i
        );
      }),
      (oe.prototype.sendEmail = function (e, t) {
        this.root.POST(this.baseURL + "/services/sendemail", void 0, e, t);
      }),
      (oe.prototype.shareFile = function (e, t, i) {
        this.root.POST(
          this.baseURL + "/share/file",
          void 0,
          { nid: e, file: t },
          i
        );
      }),
      (oe.prototype.unshareFile = function (e, t, i) {
        this.root.DELETE(
          this.baseURL +
            "/share/file/" +
            encodeURIComponent(e) +
            "/" +
            encodeURIComponent(t),
          {},
          i
        );
      }),
      (oe.prototype.loadSharedFile = function (e, t, i) {
        this.root.GET(
          this.baseURL +
            "/share/file/" +
            encodeURIComponent(e) +
            "/" +
            encodeURIComponent(t),
          {},
          i
        );
      }),
      (oe.prototype.shareView = function (e, t, i) {
        this.root.POST(
          this.baseURL + "/share/view",
          void 0,
          { viewid: e, options: t },
          i
        );
      }),
      (oe.prototype.unshareView = function (e, t) {
        this.root.DELETE(
          this.baseURL + "/share/view/" + encodeURIComponent(e),
          {},
          t
        );
      }),
      (oe.prototype.loadSharedView = function (e, t) {
        this.root.GET(
          this.baseURL + "/share/view/" + encodeURIComponent(e),
          {},
          t
        );
      }),
      (oe.prototype.exportSchemaURL = function () {
        return this.baseURL + "/exportschema";
      }),
      (oe.prototype.importSchema = function (e, t) {
        this.root.POST(this.baseURL + "/importschema", void 0, e, t);
      }),
      (ie.prototype.request = function (e, t, i, o, a) {
        var n = this,
          s = !1,
          r = null;
        if (n.reloginActive) n.requestQueue.push([e, t, i, o, a]);
        else {
          var l = void 0;
          if (i) {
            i.contentType && (l = i.contentType), i.$showProgress && (s = !0);
            var c = !0;
            for (var d in i)
              if (i.hasOwnProperty(d) && "contentType" !== d && "$" !== d[0]) {
                var u = i[d];
                null != u &&
                  ((t +=
                    (c ? "?" : "&") + d + "=" + encodeURIComponent(String(u))),
                  (c = !1));
              }
          }
          s && (r = $.progress({ caption: i.$showProgressTitle, cancel: m }));
          var p = $.ajax({
            type: e,
            url: t,
            headers: this.getHeaders(),
            data: null == o ? void 0 : l ? o : JSON.stringify(o),
            processData: !1,
            contentType: null == o ? void 0 : l || "text/plain",
            timeout: i ? i.$timeout : void 0,
            xhrFields: { withCredentials: !0 },
            xhr: function () {
              var e = $.ajaxSettings.xhr();
              return (
                s && e.upload && e.upload.addEventListener("progress", h, !1), e
              );
            },
            success: function (e, t, i) {
              if ((r && r.close(), e)) {
                var o,
                  n = null;
                try {
                  (e = e.replace(/((?:\\\\)*(?:[^\\]))\\u0000/g, "$1")),
                    (o = JSON.parse(e));
                } catch (e) {
                  n = e;
                }
                a(n, o);
              } else a(void 0, void 0);
            },
            error: function (s, l, c) {
              if ((r && r.close(), 401 === s.status))
                n.requestQueue.push([e, t, i, o, a]), n.relogin();
              else {
                var d = s.responseText || locale.errorServerNotResponding;
                Q.isArray(d) &&
                  (d = 0 === d.length ? locale.unknowError : d.join(", ")),
                  n.dontShowErrors || log(d),
                  a(d);
              }
            },
          });
        }
        function h(e) {
          var t = e.loaded / e.total;
          r.update(t);
        }
        function m() {
          p.abort();
        }
      }),
      (ie.prototype.GET = function (e, t, i) {
        this.request("GET", e, t, void 0, i);
      }),
      (ie.prototype.POST = function (e, t, i, o) {
        this.request("POST", e, t, i, o);
      }),
      (ie.prototype.PUT = function (e, t, i, o) {
        this.request("PUT", e, t, i, o);
      }),
      (ie.prototype.DELETE = function (e, t, i) {
        this.request("DELETE", e, t, void 0, i);
      }),
      (ie.prototype.relogin = function () {
        var e = this;
        function t() {
          dbms.getRemoteConnection().relogin(i);
        }
        function i(i) {
          i
            ? ((e.reloginActive = !1),
              setTimeout(function () {
                e.rerequest();
              }, 0))
            : setTimeout(t, 0);
        }
        e.reloginActive || ((e.reloginActive = !0), setTimeout(t, 0));
      }),
      (ie.prototype.rerequest = function () {
        var e = this.requestQueue;
        this.requestQueue = [];
        for (var t = 0; t < e.length; t++) {
          var i = e[t];
          this.request.apply(this, i);
        }
      }),
      (ie.prototype.getHeaders = function () {
        var e = dbms.getRemoteConnection().getToken();
        return { authorization: e ? "Bearer " + e : void 0 };
      });
    var ae = o("./src/js/client/RemoteDB.js");
    function ne(e, t) {
      (this.dbms = e),
        (this.id = t.id),
        (this.name = t.name),
        (this.settings = {}),
        (this.databases = {}),
        (this.isSyncInProgress = !1),
        (this._syncCallbacks = []),
        (this.isCacheLoaded = !1);
      var i = dbms.getRemoteConnection().getAccount(this.id);
      if (i) {
        var o = i.host,
          a = i.port,
          n = !1 !== i.ssl,
          s = "/" + this.id;
        a || (a = n ? 443 : 80),
          (this.server = new ie({
            host: o,
            port: a,
            path: s,
            ssl: n,
            dontShowErrors: !0,
          }));
      }
    }
    Object.assign(ne.prototype, util.events),
      (ne.prototype.base = "remote"),
      (ne.prototype.drop = function () {}),
      (ne.prototype.save = function () {}),
      (ne.prototype.update = function (e) {
        this.name = e.name;
      }),
      (ne.prototype.listDatabases = function () {
        return Q.filter(
          util.localeSortBy(this.databases, "name"),
          function (e) {
            return e.isOpenable;
          }
        );
      }),
      (ne.prototype.getDatabaseNames = function () {
        var e = {},
          t = this.databases;
        for (var i in t) {
          if (t.hasOwnProperty(i)) e[t[i].name] = !0;
        }
        return e;
      }),
      (ne.prototype.getDatabase = function (e) {
        return this.databases[e];
      }),
      (ne.prototype.ensureDatabase = function (e, t) {
        var i = this,
          o = i.databases[e];
        if (o) return t(void 0, o);
        i.sync(!1, function () {
          var o = i.databases[e];
          t(void 0, o);
        });
      }),
      (ne.prototype.resetSync = function (e) {}),
      (ne.prototype.loadRemoteAccount = function (e) {
        var t = this;
        return NinoxDocumentInteraction.isOnline()
          ? dbms.getRemoteConnection().getToken()
            ? void t.server.loadAccount(e)
            : e("NOT_SIGNED_ID")
          : e("OFFLINE");
      }),
      (ne.prototype._callSyncCallbacks = function () {
        console.log(
          "AccountRemote._callSyncCallbacks",
          this._syncCallbacks.length
        );
        var e = this._syncCallbacks;
        this._syncCallbacks = [];
        for (var t = 0; t < e.length; t++) setTimeout(e[t], 0);
      }),
      (ne.prototype.sync = function (e, t) {
        var i = this;
        if ((t && i._syncCallbacks.push(t), !i.isSyncInProgress)) {
          i.isSyncInProgress = !0;
          var o = dbms.getRemoteConnection().getAccount(this.id);
          if ((o && (i.name = o.name), !i.isCacheLoaded)) {
            i.isCacheLoaded = !0;
            var a = null,
              n = window.localStorage && window.localStorage["account." + i.id];
            if (n)
              try {
                a = JSON.parse(n);
              } catch (e) {
                console.log("Failed to parse cached account", e);
              }
            if (a) {
              i.settings = a.settings || {};
              for (
                var s = a.databases || [], r = {}, l = 0;
                l < s.length;
                l++
              ) {
                var c = s[l],
                  d = c.id;
                (c.isOpenable = i.canOpenDatabase(c)),
                  (c.account = i.id),
                  (c.isStored = !0),
                  (r[d] = c);
              }
              i.databases = r;
            } else console.log("No cached account");
          }
          i.trigger("change"),
            i.loadRemoteAccount(function (e, t) {
              if (e) $.alert(e);
              else if (t) {
                window.localStorage &&
                  (window.localStorage["account." + i.id] = JSON.stringify(t)),
                  (i.settings = t.settings || {});
                for (
                  var o = t.databases || [], a = {}, n = 0;
                  n < o.length;
                  n++
                ) {
                  var s = o[n],
                    r = s.id;
                  (s.isOpenable = i.canOpenDatabase(s)),
                    (s.account = i.id),
                    (s.isStored = !0),
                    (a[r] = s);
                }
                i.databases = a;
              }
              (i.isSyncInProgress = !1),
                i.trigger("change"),
                i._callSyncCallbacks();
            });
        }
      }),
      (ne.prototype.removeStoredDatabase = function (e) {}),
      (ne.prototype.canOpenDatabase = function (e) {
        var t = e.settings;
        if (!t) return !0;
        var i = t.rolesOpen;
        if (!i || !i.length) return !0;
        var o = dbms.getRemoteConnection().getCurrentAccountUser(this.id);
        if (o.roles.admin) return !0;
        for (var a = 0; a < i.length; a++) {
          var n = i[a];
          if (o.roles[n]) return !0;
        }
        return !1;
      }),
      (ne.prototype.openDatabase = function (e, t) {
        var i = this;
        if ("string" == typeof e) {
          var o = e;
          if (!(e = i.databases[o]))
            return t("Database not found: " + o + " in account " + i.id);
        }
        if (!i.canOpenDatabase(e)) return t("Not authorized.");
        var a = i.server.getDBServer(e.id),
          n = new ae.a(e, this, a);
        n.openDatabase(!1, function (e) {
          if (e) return t(e);
          (window.database = n), t(void 0, n);
        });
      }),
      (ne.prototype.openAnotherDatabase = function (e, t) {
        var i = this,
          o = i.databases[e];
        if (!o) return t("Database not found: " + e);
        if (!i.canOpenDatabase(o)) return t("Not authorized.");
        var a = i.server.getDBServer(o.id),
          n = new ae.a(o, this, a);
        n.openDatabase(!0, function (e) {
          if (e) return t(e);
          t(void 0, n);
        });
      }),
      (ne.prototype.createDatabase = function (e, t) {
        var i = this;
        i.server.createDatabase(e, function (e, o) {
          i.sync(), t(e, o);
        });
      }),
      (ne.prototype.renameDatabase = function (e, t, i) {
        var o = this;
        o.server.getDBServer(e.id).updateSettings(t, function (e, t) {
          o.sync(), i(e, t);
        });
      }),
      (ne.prototype.removeDatabase = function (e, t) {
        var i = this;
        i.server.removeDatabase(e.id, function (o) {
          o || (delete i.databases[e.id], i.trigger("change")), t(o);
        });
      }),
      (ne.prototype.duplicateDatabase = function () {}),
      (ne.prototype.isAdmin = function () {
        return dbms.getRemoteConnection().isAdmin(this.id);
      }),
      (ne.prototype.loadArchive = function (e, t) {
        var i = this;
        i.server.loadArchive(e, function (e, o) {
          i.sync(), t(e, o);
        });
      }),
      (ne.prototype.getRoles = function () {
        return dbms.getRemoteConnection().getSessionInfo().getRoles(this.id);
      }),
      (ne.prototype.createBackup = function (e, t) {
        this.server.createBackup(e, t);
      }),
      (ne.prototype.listBackups = function (e) {
        this.server.listBackups(e);
      }),
      (ne.prototype.listSnapshots = function (e) {
        this.server.listSnapshots(e);
      }),
      (ne.prototype.removeBackup = function (e, t) {
        this.server.removeBackup(e, t);
      }),
      (ne.prototype.removeSnapshot = function (e, t, i) {
        this.server.removeSnapshot(e, t, i);
      }),
      (ne.prototype.restoreBackup = function (e, t) {
        var i = this;
        i.server.restoreBackup(e, function (e) {
          i.sync(), t(e);
        });
      }),
      (ne.prototype.restoreSnapshot = function (e, t, i) {
        var o = this;
        o.server.restoreSnapshot(e, t, function (e) {
          o.sync(!0), i(e);
        });
      }),
      (ne.prototype.downloadBackupURL = function (e, t) {
        return this.server.downloadBackupURL(e, t);
      }),
      (ne.prototype.backgroundURL = function () {
        return this.server
          ? this.server.backgroundURL(this.settings.backgroundTimestamp || 0)
          : void 0;
      }),
      (ne.prototype.isOwner = function () {
        var e = dbms.getRemoteConnection(),
          t = e.getAccount(this.id);
        return t && t.owner === e.getUserId();
      }),
      (ne.prototype.getPlan = function () {
        return dbms.getRemoteConnection().getSessionInfo().getPlan();
      }),
      (ne.prototype.getInvitations = function () {
        return dbms.getRemoteConnection().listInvitations(this.id);
      }),
      (ne.prototype.getMembers = function () {
        return dbms.getRemoteConnection().listAccountUsers(this.id);
      }),
      (ne.prototype.getOwnerId = function () {
        return dbms.getRemoteConnection().getAccount(this.id).owner;
      }),
      (ne.prototype.getCurrentUser = function () {
        return dbms.getRemoteConnection().getCurrentUser();
      }),
      (ne.prototype.getCurrentUserId = function () {
        const e = this.getCurrentUser();
        return e ? e.id : void 0;
      }),
      (ne.prototype.isRootUser = function () {
        return dbms.getRemoteConnection().getSessionInfo().user.isRoot;
      }),
      (ne.prototype.getProcesses = function (e) {
        return this.server.getProcesses(e);
      });
    function se() {
      (this.localAccount = null), (this.remoteAccounts = {});
    }
    Object.assign(se.prototype, util.events),
      (se.prototype.bootstrap = async function (e) {
        const t = this;
        try {
          (t.remote = new J()),
            await t.remote.init(),
            (t.messageService = new ee(t)),
            (t.remoteAccounts = {});
        } catch (t) {
          return console.log("Error while initialising remote", t), e(t);
        }
        function i(e) {
          const t = dbms.getRemoteConnection(),
            i = t.isSamlEnabled() ? Y() : t.isOidcEnabled() ? G() : void 0;
          i
            ? t.afterSSORedirect(i, (i) => {
                i && console.warn("Error while processing SSO redirect", i),
                  t.refresh(e, !0);
              })
            : t.refresh(e, !0);
        }
        ui.setupListeners(),
          i(function (i) {
            t.syncAccounts(function () {
              t.fasttrackOnboarding(function () {
                t.remote.on("change", $.proxy(t.remoteChanged, t)), e();
              });
            });
          });
      }),
      (se.prototype.fasttrackOnboarding = function (e) {
        var t = this.listAccounts();
        if (1 !== t.length) return e();
        var i = t[0];
        console.log("fasttrack 0"), i.sync(!1, e);
      }),
      (se.prototype.getRemoteConnection = function () {
        return this.remote;
      }),
      (se.prototype.listAccounts = function () {
        return util.localeSortBy(this.remoteAccounts, "name");
      }),
      (se.prototype.getRemoteAccounts = function () {
        return this.remoteAccounts;
      }),
      (se.prototype.getLocalAccount = function () {
        return this.localAccount;
      }),
      (se.prototype.getDefaultAccount = function () {
        return this.listAccounts()[0];
      }),
      (se.prototype.getDefaultAccountId = function () {
        var e = this.listAccounts()[0];
        return e ? e.id : void 0;
      }),
      (se.prototype.getAccount = function (e) {
        return "local" === e ? this.localAccount : this.remoteAccounts[e];
      }),
      (se.prototype.getRemoteAccount = function (e) {
        return this.remoteAccounts[e];
      }),
      (se.prototype.syncAccounts = function (e) {
        var t,
          i = this.remoteAccounts,
          o = this.remote.getAccounts();
        if (o) {
          for (t in i) {
            if (!o.hasOwnProperty(t)) i[t].drop(), delete i[t];
          }
          for (t in o)
            if (o.hasOwnProperty(t)) {
              var a = i[t],
                n = o[t];
              a ? a.update(n) : ((a = new ne(this, n)).save(), (i[t] = a));
            }
        }
        e && e();
      }),
      (se.prototype.remoteChanged = function () {
        var e = this;
        e.syncAccounts(function () {
          e.trigger("change");
        });
      }),
      (se.prototype.closeDatabase = function (e) {
        window.database
          ? window.database.closeDatabase(function () {
              (window.database = null), e();
            })
          : e();
      }),
      (se.prototype.getAllDatabases = function () {
        var e = [],
          t = this.remoteAccounts;
        for (var i in t)
          if (t.hasOwnProperty(i)) {
            var o = t[i];
            e = e.concat(o.listDatabases());
          }
        return e;
      }),
      (se.prototype.getLocalDatabases = function () {
        return [];
      }),
      (se.prototype.openAnotherDatabase = function (e, t, i) {
        var o;
        if (!(o = "local" === e ? this.localAccount : this.remoteAccounts[e]))
          return i("Account not found: " + e);
        o.openAnotherDatabase(t, i);
      });
    var re = o("./src/js/printer/printNode.js"),
      le = o("./src/js/printer/printTable.js"),
      ce = o("./src/js/printer/renderNodeHTML.js"),
      de = o("./src/js/printer/renderTableHTML.js");
    function ue() {
      const e = {
        printNode: re.a,
        printTable: le.a,
        renderNodeHTML: ce.a,
        renderTableHTML: de.a,
      };
      return (
        (e.aggSymbol = pe),
        (e.cellTypeAlign = he),
        (e.DPI = 72),
        (e.MM = 0.0393700787 * e.DPI),
        e
      );
    }
    function pe(e) {
      return "";
    }
    function he(e) {
      switch (e.base) {
        case "number":
        case "nid":
          return "right";
        case "date":
        case "datx":
        case "time":
        case "appointment":
        case "timeinterval":
        case "boolean":
          return "center";
        default:
          return "left";
      }
    }
    var me = o("./src/js/reports/ActionMenu.js"),
      fe = o("./src/js/reports/Designer.jsx"),
      ge = o("./src/js/reports/RDHTML.js"),
      ve = o("./src/js/reports/RDImage.js"),
      be = o("./src/js/reports/RDImageField.js"),
      ye = o("./src/js/reports/RDObject.js"),
      we = o("./src/js/reports/RDReverse.js"),
      xe = o("./src/js/reports/RDText.js"),
      Te = o("./src/js/reports/ColorMenu.js"),
      Ce = o("./src/js/reports/ObjectMenu.js"),
      ke = o("./src/js/reports/PaperMenu.js"),
      Se = o("./src/js/reports/TextMenu.js");
    function $e() {
      const e = {
        ActionMenu: me.a,
        ColorMenu: Te.a,
        Designer: fe.a,
        ObjectMenu: Ce.a,
        PaperMenu: ke.a,
        TextMenu: Se.a,
        RDHTML: ge.a,
        RDImage: ve.a,
        RDImageField: be.a,
        RDObject: ye.a,
        RDReverse: we.a,
        RDText: xe.a,
        printAllRecords: !1,
        designer: void 0,
        openDesigner: function (e) {
          if (e.nid) {
            var t = database.typeOf(e.nid);
            if (t) {
              var i = e.reportName,
                o = e.reportId;
              if (null === o) {
                var a = new fe.a(
                  { tid: t.id, caption: e.caption },
                  { nid: e.nid, empty: e.empty, nids: e.nids }
                );
                NinoxDocumentInteraction.setUserDefault(
                  "ui.report.id:" + database.id + "/" + t.id,
                  a.id
                );
              } else
                database.listReports(function (a, n) {
                  if (a) return $.alert(a);
                  if (i)
                    for (var s in n) {
                      if ((d = n[s]).caption == i && d.tid === t.id) {
                        o = s;
                        break;
                      }
                    }
                  var r =
                    n[
                      o ||
                        NinoxDocumentInteraction.getUserDefault(
                          "ui.report.id:" + database.id + "/" + t.id
                        )
                    ];
                  if ((r && r.tid !== t.id && (r = void 0), !r))
                    for (
                      var l = util.localeSortBy(n, "caption"), c = 0;
                      c < l.length;
                      c++
                    ) {
                      var d;
                      if ((d = l[c]).tid === t.id) {
                        r = d;
                        break;
                      }
                    }
                  r || (r = { tid: t.id, caption: e.caption });
                  var u = new fe.a(r, {
                    nid: e.nid,
                    nids: e.nids,
                    printOneAndClose: e.printOneAndClose,
                    printAllAndClose: e.printAllAndClose,
                    saveToFileAndClose: e.saveToFileAndClose,
                  });
                  NinoxDocumentInteraction.setUserDefault(
                    "ui.report.id:" + database.id + "/" + t.id,
                    u.id
                  );
                });
            }
          }
        },
      };
      return e;
    }
    var _e = o("./src/js/localesEngine/localesManager.ts");
    o("./src/react/views/BrowserNotSupportedView.scss");
    const Ee = () => {
      const e = Object(_e.a)();
      return s.createElement(
        s.Fragment,
        null,
        s.createElement(
          "div",
          { className: "root" },
          s.createElement("div", { className: "root-controls" }),
          s.createElement(
            "div",
            { className: "root-body browser-support-page" },
            s.createElement(
              "div",
              { className: "caption" },
              e.browserUnsupported
            ),
            s.createElement(
              "div",
              { className: "subheader" },
              e.supportedBrowsers
            ),
            s.createElement(
              "div",
              { className: "browser-links" },
              s.createElement(
                "a",
                {
                  href: "https://www.google.com/chrome/",
                  className: "browser-link chrome",
                },
                "Chrome"
              ),
              s.createElement(
                "a",
                {
                  href: "https://support.apple.com/downloads/safari",
                  className: "browser-link safari",
                },
                "Safari"
              ),
              s.createElement(
                "a",
                {
                  href: "https://www.microsoft.com/edge",
                  className: "browser-link edge",
                },
                "Edge"
              ),
              s.createElement(
                "a",
                {
                  href: "https://www.mozilla.org/firefox/new/",
                  className: "browser-link firefox",
                },
                "Firefox"
              )
            )
          )
        )
      );
    };
    o("./node_modules/core-js/modules/web.immediate.js");
    function De() {
      !(function () {
        function e(e) {
          var t,
            i,
            o,
            a,
            n,
            s = 0,
            r = 0;
          return (
            "number" == typeof e.selectionStart &&
            "number" == typeof e.selectionEnd
              ? ((s = e.selectionStart), (r = e.selectionEnd))
              : (i = document.selection.createRange()) &&
                i.parentElement() == e &&
                ((a = e.value.length),
                (t = e.value.replace(/\r\n/g, "\n")),
                (o = e.createTextRange()).moveToBookmark(i.getBookmark()),
                (n = e.createTextRange()).collapse(!1),
                o.compareEndPoints("StartToEnd", n) > -1
                  ? (s = r = a)
                  : ((s = -o.moveStart("character", -a)),
                    (s += t.slice(0, s).split("\n").length - 1),
                    o.compareEndPoints("EndToEnd", n) > -1
                      ? (r = a)
                      : ((r = -o.moveEnd("character", -a)),
                        (r += t.slice(0, r).split("\n").length - 1)))),
            { start: s, end: r }
          );
        }
        function t(t, i) {
          var o = e(t),
            a = t.value;
          t.value = a.slice(0, o.start) + i + a.slice(o.end);
        }
        function i() {
          return (
            window.getSelection &&
            "None" !== window.getSelection().type &&
            "" !== window.getSelection().toString()
          );
        }
        (window.htmlEscape = function (e) {
          return null == e
            ? ""
            : "string" != typeof e
            ? String(e)
            : e.replace(/[&<>'"]/g, function (e) {
                return {
                  "&": "&amp;",
                  "<": "&lt;",
                  ">": "&gt;",
                  "'": "&apos;",
                  '"': "&quot;",
                }[e];
              });
        }),
          (window.$EL = function (e, t, i, o, a) {
            var n = document.createElement(e);
            if ((t && (n.className = t), o))
              for (var s in o) o.hasOwnProperty(s) && n.setAttribute(s, o[s]);
            if (a) for (var s in a) a.hasOwnProperty(s) && (n.style[s] = a[s]);
            return i && i.appendChild(n), n;
          }),
          (window.$DIV = function (e, t, i, o) {
            return $EL("div", e, t, i, o);
          }),
          (window.$EMPTY = function (e) {
            return (e.innerHTML = ""), e;
          }),
          (window.$REMOVE = function (e) {
            var t = e.parentNode;
            t && t.removeChild(e);
          }),
          (function () {
            var e = [],
              t = [],
              i = !1;
            function o(o) {
              for (var a, n, s, r; e.length; )
                for (a = e, e = [], s = 0, r = a.length; s < r; s++)
                  (n = a[s])[0].apply(void 0, n.slice(1));
              for (; t.length; )
                for (a = t, t = [], s = 0, r = a.length; s < r; s++)
                  (n = a[s])[0].apply(void 0, n.slice(1));
              i = !1;
            }
            function a() {
              for (var t = [], o = 0; o < arguments.length; o++)
                t[o] = arguments[o];
              (e[e.length] = t), i || ((i = !0), postMessage("si", "*"));
            }
            function n() {
              for (var e = [], o = 0, a = arguments.length; o < a; o++)
                e[o] = arguments[o];
              (t[t.length] = e), i || ((i = !0), postMessage("si", "*"));
            }
            window.addEventListener("message", o, !1),
              (window.setImmediate = a),
              (window.setFinally = n);
          })(),
          (function () {
            var e = 0,
              o = void 0,
              a = {},
              n = null;
            ($.chooseFile = function (e, t) {
              var i = document.getElementById("NinoxDocumentInteraction-file");
              i && i.parentNode.removeChild(i),
                ((i = document.createElement("input")).id =
                  "NinoxDocumentInteraction-file"),
                (i.type = "file"),
                (i.style.display = "none"),
                (i.style.position = "absolute"),
                (i.style.left = (e.clientX || 0) + "px"),
                (i.style.top = (e.clientY || 0) + "px"),
                document.body.appendChild(i),
                i.addEventListener("change", $.fileChoosen),
                (n = t),
                (i.value = null),
                i.click();
            }),
              ($.chooseFileWithExtensions = function (e, t) {
                var i = document.getElementById(
                  "NinoxDocumentInteraction-file"
                );
                i && i.parentNode.removeChild(i),
                  ((i = document.createElement("input")).id =
                    "NinoxDocumentInteraction-file"),
                  (i.type = "file"),
                  (i.style.display = "none");
                for (var o = "", a = 0; a < e.length; a++)
                  o += (a > 0 ? "," : "") + "." + e[a];
                (i.accept = o),
                  document.body.appendChild(i),
                  i.addEventListener("change", $.fileChoosen),
                  (n = t),
                  (i.value = null),
                  i.click();
              }),
              ($.fileChoosen = function (e) {
                var t = document.getElementById(
                  "NinoxDocumentInteraction-file"
                );
                if (t) {
                  var i = n;
                  if (((n = null), i)) {
                    var o = t.files;
                    if (o && 1 === o.length) i(void 0, o[0]);
                  }
                }
              }),
              ($.loading = function (t) {
                t
                  ? (0 === e &&
                      ($.pushInputHandler(a),
                      (o = $(
                        '<div class="nx-backplane nx-backplane-loading"><div class="spinner" style="position:absolute;left:50%;top:50%;margin:-24px 0 0 -24px"></div></div>'
                      ).appendTo($(document.body)))),
                    e++)
                  : 0 === --e &&
                    ($.popInputHandler(a), o.remove(), (o = void 0));
              }),
              ($.backplane = function (e) {
                var t = !1,
                  i = (e = e || {}).inputHandler || { keydown: s };
                $.pushInputHandler(i);
                var o = $(
                  '<div class="nx-backplane nx-anim-fade-hidden' +
                    (e.scrollable ? " nx-vscrollable" : "") +
                    (e.cls ? " " + e.cls : "") +
                    '">'
                ).appendTo($(document.body));
                return (
                  !1 !== e.closable &&
                    o.on(TOUCH ? EVENT_touchstart : "mousedown", a),
                  null != e.zIndex && o.css("z-index", e.zIndex),
                  setTimeout(function () {
                    o.addClass("nx-anim-fade-in"),
                      setTimeout(function () {
                        o.removeClass("nx-anim-fade-hidden nx-anim-fade-in");
                      }, 300);
                  }, 0),
                  (o.close = n),
                  o
                );
                function a(e) {
                  var t = $(e.target);
                  (t.is(".nx-backplane") || t.is(".nx-popdown-container")) &&
                    n();
                }
                function n(a) {
                  if (t) return;
                  (t = !0), e.beforeClose && e.beforeClose();
                  const n = () => {
                    o.remove(), e.close && e.close(), a && a();
                  };
                  $.popInputHandler(i),
                    e.closeImmediately
                      ? n()
                      : (o.addClass("nx-anim-fade-out"), setTimeout(n, 300));
                }
                function s(t) {
                  switch (t.which) {
                    case 27:
                      e.escape
                        ? e.escape(t)
                        : !1 !== e.closable && (n(), t.preventDefault());
                      break;
                    case 13:
                      e.enter
                        ? e.enter(t)
                        : !1 !== e.closable && (n(), t.preventDefault());
                  }
                }
              }),
              ($.progress = function (e) {
                var t = $.backplane({ closable: !1 }),
                  i = 48 + (e.caption ? 32 : 0) + (e.cancel ? 48 : 0),
                  o = 16 + (e.caption ? 32 : 0),
                  a = $(
                    '<div style="position:absolute;top:50%;left:50%;width:320px;height:' +
                      i +
                      "px;margin-left:-160px;margin-top:-" +
                      i / 2 +
                      'px;background-color:#000;border-radius:8px">'
                  ).appendTo(t);
                e.caption &&
                  $(
                    '<div style="color:#ccc;text-align:center;position:absolute;top:8px;left:8px;right:8px;overflow:hidden;line-height:32px">'
                  )
                    .text(e.caption)
                    .appendTo(a);
                $(
                  '<div style="position:absolute;left:16px;width:288px;height:16px;top:' +
                    o +
                    'px;background-color:#555;border-radius:4px">'
                ).appendTo(a);
                var n = $(
                  '<div style="position:absolute;left:16px;width:0px;height:16px;top:' +
                    o +
                    'px;background-color:#fff;border-radius:4px">'
                ).appendTo(a);
                function s(e) {
                  n[0].style.width = Math.floor(288 * e) + "px";
                }
                function r() {
                  t.close();
                }
                function l() {
                  r(), e.cancel && e.cancel();
                }
                return (
                  e.cancel &&
                    $(
                      '<div style="position:absolute;bottom:16px;right:16px;padding:0 16px;line-height:32px;height:32px;border-radius:4px;background-color:#aaa">'
                    )
                      .text(locale.cancel)
                      .appendTo(a)
                      .touch(l),
                  { update: s, close: r }
                );
              }),
              ($.fn.animFadeIn = function (e) {
                var t = this;
                return (
                  t.addClass("nx-anim-fade-hidden"),
                  setTimeout(function () {
                    t.addClass("nx-anim-fade-in"),
                      setTimeout(function () {
                        t.removeClass("nx-anim-fade-hidden nx-anim-fade-in"),
                          e && e();
                      }, 300);
                  }, 0),
                  this
                );
              }),
              ($.fn.animFadeOut = function (e) {
                var t = this;
                return (
                  t.addClass("nx-anim-fade-out"),
                  setTimeout(function () {
                    t.removeClass("nx-anim-fade-out"), e && e();
                  }, 300),
                  this
                );
              }),
              ($.popdown = function (e) {
                e = e || {};
                var t = {};
                $.pushInputHandler(t);
                var i = $('<div class="nx-backplane">')
                    .appendTo($(document.body))
                    .on(TOUCH ? EVENT_touchstart : "mousedown", d),
                  o = $('<div class="nx-popdown-container">').appendTo(i),
                  a = $(
                    '<div class="nx-popdown ' +
                      (e.cls || "large") +
                      ' nx-anim-hidden-up">'
                  ).appendTo(o),
                  n = void 0,
                  s = void 0,
                  r = void 0;
                if (
                  (e.head &&
                    $('<div class="nx-section-head">').text(e.head).appendTo(a),
                  e.buttons)
                ) {
                  (n = $('<div class="nx-section-pane">').appendTo(a)),
                    (s = $("<div>").appendTo(n)),
                    (r = $('<div class="nx-button-bar">').appendTo(n));
                  for (var l = 0; l < e.buttons.length; l++) {
                    var c = e.buttons[l];
                    " " === c
                      ? $('<div class="nx-hspace-small">').appendTo(r)
                      : "-" === c
                      ? $('<div class="nx-hspace-flex">').appendTo(r)
                      : "cancel" === c
                      ? $('<div class="nx-button-text grey">')
                          .text(locale.cancel)
                          .touch(u)
                          .appendTo(r)
                      : "okay" === c
                      ? $('<div class="nx-button-text blue">')
                          .text(locale.okay)
                          .touch(u)
                          .appendTo(r)
                      : $(
                          '<div class="nx-button-text ' +
                            (c.cls || "grey") +
                            '">'
                        )
                          .text(c.caption)
                          .touch(c.click)
                          .appendTo(r);
                  }
                }
                return (
                  setTimeout(function () {
                    a.addClass("nx-anim-show-down"),
                      setTimeout(function () {
                        requestAnimationFrame(function () {
                          a.removeClass("nx-anim-hidden-up nx-anim-hidden-up");
                        });
                      }, 300);
                  }, 0),
                  {
                    $backplane: i,
                    $container: o,
                    $pane: a,
                    $section: n,
                    $content: s,
                    $buttons: r,
                    close: p,
                  }
                );
                function d(t) {
                  if (!1 !== e.closable) {
                    var i = $(t.target);
                    (i.is(".nx-backplane") || i.is(".nx-popdown-container")) &&
                      u();
                  }
                }
                function u() {
                  p(e.close);
                }
                function p(e) {
                  a.addClass("nx-anim-hide-up"),
                    setTimeout(function () {
                      $.popInputHandler(t), i.remove(), e && e();
                    }, 300);
                }
              }),
              ($.buttons = function (e) {
                var t = (e = e || {}).items || [],
                  i = e.style || "",
                  o = e.classes ? " " + e.classes : "",
                  a = $(
                    '<div class="nx-button-bar' + o + '" style="' + i + '">'
                  );
                e.$container && a.appendTo(e.$container);
                for (var n = 0; n < t.length; n++) {
                  var s = t[n];
                  " " === s
                    ? $('<div class="nx-hspace-small">').appendTo(a)
                    : "-" === s
                    ? $('<div class="nx-hspace-flex">').appendTo(a)
                    : $(
                        '<div class="nx-button-text ' + (s.cls || "grey") + '">'
                      )
                        .text(s.caption)
                        .touch(s.click)
                        .appendTo(a);
                }
                return { $pane: a };
              }),
              ($.input = function (e) {
                (e = e || {}).type;
                var t = $(
                  '<div class="component editor editor-string" style="width:' +
                    (e.width || "100%") +
                    '">'
                );
                e.caption && $("<label>").text(e.caption).appendTo(t);
                var i = $('<input type="' + (e.type || "text") + '">').appendTo(
                  $('<div class="stringeditor">').appendTo(t)
                );
                return (
                  e.val && i.val(e.val),
                  e.placeholder && i.attr("placeholder", e.placeholder),
                  e.$container && t.appendTo(e.$container),
                  e.focus &&
                    setTimeout(function () {
                      i.focus();
                    }, 400),
                  i.keypress(function (t) {
                    13 === t.which && e.enter && e.enter(),
                      27 === t.which && e.escape && e.escape();
                  }),
                  {
                    $el: t,
                    $input: i,
                    val: $.proxy(i.val, i),
                    focus: function () {
                      i.focus();
                    },
                  }
                );
              }),
              ($.field = function (e) {
                (e = e || {}).type;
                var t = $(
                  '<div class="component editor editor-string" style="width:' +
                    (e.width || "100%") +
                    '">'
                );
                e.caption && $("<label>").text(e.caption).appendTo(t);
                var i = $('<div class="input-text">')
                  .text(e.val)
                  .appendTo(
                    $('<div class="stringeditor stringeditor-fn">').appendTo(t)
                  );
                return (
                  e.$container && t.appendTo(e.$container),
                  e.touch && i.css("cursor", "pointer").touch(e.touch),
                  {
                    $el: t,
                    val: function (e) {
                      i.text(e);
                    },
                  }
                );
              }),
              ($.tabs = function (e) {
                for (
                  var t = $("<div>").appendTo(e.$parent),
                    i = $('<div class="nx-switch-big">').appendTo(t),
                    o = e.selected || 0,
                    a = [],
                    n = e.tabs || [],
                    s = 0;
                  s < n.length;
                  s++
                ) {
                  var r = n[s],
                    l = $(
                      '<div class="nx-switch-big-item" data-index="' + s + '">'
                    )
                      .text(r.caption)
                      .appendTo(i),
                    c = $('<div class="nx-section-pane">').appendTo(t);
                  s === o ? l.addClass("selected") : c.hide(),
                    a.push({ index: s, $tab: l, $pane: c });
                }
                function d(t) {
                  t != o &&
                    (a[o].$tab.removeClass("selected"),
                    a[o].$pane.hide(),
                    a[t].$tab.addClass("selected"),
                    a[t].$pane.show(),
                    (o = t),
                    e.onSelect && e.onSelect(t));
                }
                return (
                  i.touch(function (e) {
                    var t = $(e.target)
                      .closest(".nx-switch-big-item")
                      .attr("data-index");
                    t && d(parseInt(t));
                  }),
                  { $pane: t, tabs: a, select: d }
                );
              }),
              ($.switchpane = function (e) {
                var t = $('<div class="nx-switchpane">').touch(a),
                  i = e.value,
                  o = {};
                return (
                  Q.each(e.items, function (e) {
                    var a = $('<div class="nx-switchpane-item">')
                      .append(
                        $('<div class="nx-switchpane-item-pane">').append(
                          $(
                            '<div class="nx-switchpane-item-pane-icon ' +
                              e.icon +
                              '">'
                          )
                        )
                      )
                      .append(
                        $('<div class="nx-switchpane-item-label">').text(
                          e.caption
                        )
                      )
                      .appendTo(t)
                      .attr("data-id", e.id);
                    (o[e.id] = a), i === e.id && a.addClass("selected");
                  }),
                  t
                );
                function a(t) {
                  var a = $(t.target)
                    .closest(".nx-switchpane-item")
                    .attr("data-id");
                  a &&
                    a !== i &&
                    (null != i && o[i].removeClass("selected"),
                    o[(i = a)].addClass("selected"),
                    e.update(i));
                }
              }),
              ($.alert = function (e) {
                $("#nx-alert-backplane").remove();
                var t = $(
                    '<div class="nx-backplane nx-backplane-dark" id="nx-alert-backplane">'
                  ).click(function (e) {
                    $(e.target).is(".nx-backplane") && a();
                  }),
                  i = $('<div class="nx-alert">').appendTo(t);
                $('<div class="nx-alert-pane">').text(String(e)).appendTo(i);
                var o = $('<div class="nx-alert-buttons">').appendTo(i);
                function a() {
                  t.remove();
                }
                $('<div class="nx-hspace-flex">').appendTo(o),
                  $('<div class="nx-button-text blue">')
                    .text(locale.okay)
                    .appendTo(o)
                    .touch(a),
                  t.appendTo($(document.body));
              }),
              ($.notify = function (e) {
                "string" == typeof e && (e = { message: e }),
                  $(".notification").remove();
                var t = $('<div class="notification">')
                  .append(
                    $('<div class="notification-message">').text(e.message)
                  )
                  .appendTo($(document.body))
                  .css({
                    opacity: 0,
                    transition: "opacity .5s",
                    zIndex: 999999,
                  })
                  .on("touchstart mousedown", o);
                setTimeout(function () {
                  t.css({ opacity: 1 });
                }, 100);
                var i = !1;
                function o() {
                  i ||
                    ((i = !0),
                    t.css({ opacity: 0 }),
                    setTimeout(function () {
                      t.remove();
                    }, 500));
                }
                setTimeout(o, 1500);
              }),
              ($.fn.button = function (e, t, i, o) {
                var a = $('<div class="button">')
                  .appendTo(this)
                  .touch(o)
                  .keypress(function (e) {
                    (32 !== e.which && 13 !== e.which) || o();
                  });
                return (
                  e &&
                    (i
                      ? $(
                          '<div class="icon-big-white icon-big-' + e + '">'
                        ).appendTo(a)
                      : $(
                          '<div class="icon-big-black icon-big-' + e + '">'
                        ).appendTo(a)),
                  t && (a.addClass("text"), $("<span>").text(t).appendTo(a)),
                  i && a.addClass(i),
                  this
                );
              }),
              ($.fn.button2 = function (e, t) {
                return this.append($.button(e));
              }),
              ($.button = function (e) {
                var t = $('<div class="button">')
                  .touch(e.click)
                  .keypress(function (e) {
                    (32 !== e.which && 13 !== e.which) || callback();
                  });
                return (
                  e.icon && $("<div>").addClass(e.icon).appendTo(t),
                  e.caption &&
                    (t.addClass("text"),
                    $("<span>").text(e.caption).appendTo(t)),
                  e.color && t.addClass(e.color),
                  e.cls && t.addClass(e.cls),
                  e.tip && t.attr("title", e.tip),
                  t
                );
              }),
              ($.contextmenu = function (e, t) {
                for (
                  var i = $.backplane({}),
                    o = $(
                      '<div class="nx-menu-popup" style="overflow:auto">'
                    ).appendTo(i),
                    a = t.items,
                    n = "",
                    s = 0;
                  s < a.length;
                  s++
                ) {
                  var r = a[s];
                  n +=
                    "-" === r
                      ? "<hr>"
                      : '<div class="nx-menu-item" data-index="' +
                        s +
                        '">' +
                        (r.icon
                          ? '<div class="nx-menu-icon ' + r.icon + '"></div>'
                          : "") +
                        '<div class="nx-menu-label">' +
                        htmlEscape(r.caption) +
                        "</div></div>";
                }
                o.html(n),
                  o.touch(function (e) {
                    var t = $(e.target)
                      .closest(".nx-menu-item")
                      .attr("data-index");
                    if (null != t) {
                      var i = a[parseInt(t)];
                      i && i.click && (v(), i.click());
                    }
                  });
                var l = window.getWidth(),
                  c = window.getHeight(),
                  d = o.outerWidth(),
                  u = o.outerHeight();
                const p = 14,
                  h = ui.fullWidth <= 640 ? 48 + ui.footHeight : 48;
                u + p > c - h - 20 && ((u = c - h - p - 20), o.outerHeight(u));
                let m = e.clientX,
                  f = e.clientY;
                TOUCH &&
                  ((m = e.changedTouches[0].clientX),
                  (f = e.changedTouches[0].clientY));
                var g = { left: m, top: f };
                function v() {
                  i.close();
                }
                g.left + d > l && (g.left = l - d),
                  g.top + u + p > c && (g.top = c - u - h - p),
                  o.offset(g),
                  $(
                    `<div\n            style="width: 0;\n                   height: 0;\n                   border-left: 17px solid transparent;\n                   border-right: 17px solid transparent;\n                   border-top: 17px solid #ececec;\n                   top: ${
                      g.top + (u - 3)
                    }px;\n                   left: ${
                      m + 1
                    }px;\n                   position: absolute;"\n               >\n        `
                  ).appendTo(i),
                  e.preventDefault();
              }),
              ($.dialog = function (e) {
                var t = {
                  keydown: function (t) {
                    switch (t.which) {
                      case 13:
                        e.buttons &&
                          e.buttons.length &&
                          (s(),
                          e.buttons[e.buttons.length - 1].callback &&
                            e.buttons[e.buttons.length - 1].callback(),
                          t.preventDefault());
                        break;
                      case 27:
                        e.closable && (s(), t.preventDefault());
                    }
                  },
                };
                $.pushInputHandler(t);
                var i = $(
                    '<div class="nx-backplane nx-backplane-dark">'
                  ).appendTo($(document.body)),
                  o = $('<div class="nx-alert">').appendTo(i);
                if (
                  (e.closable &&
                    i.touch(function (e) {
                      $(e.target).is(".nx-backplane") && s();
                    }),
                  e.caption)
                )
                  $('<div class="nx-alert-head">').text(e.caption).appendTo(o);
                $('<div class="nx-alert-pane">').html(e.message).appendTo(o);
                var a = $('<div class="nx-alert-buttons">').appendTo(o),
                  n = !0;
                function s() {
                  i.remove(), $.popInputHandler(t);
                }
                $('<div class="nx-hspace-flex">').appendTo(a),
                  e.closable &&
                    ($('<div class="nx-button-text grey">')
                      .text(locale.cancel)
                      .appendTo(a)
                      .touch(function () {
                        s();
                      }),
                    (n = !1)),
                  Q.each(e.buttons, function (e) {
                    n || $('<div class="nx-hspace-small">').appendTo(a),
                      (n = !1),
                      $(
                        '<div class="nx-button-text ' +
                          (e.color || "grey") +
                          '">'
                      )
                        .text(e.caption)
                        .appendTo(a)
                        .touch(function () {
                          s(), e.callback && e.callback();
                        });
                  });
              }),
              ($.clearSelection = function () {
                window.getSelection
                  ? window.getSelection().empty
                    ? window.getSelection().empty()
                    : window.getSelection().removeAllRanges &&
                      window.getSelection().removeAllRanges()
                  : document.selection && document.selection.empty();
              }),
              ($.fn.nxdraggable = function (e) {
                e = e || {};
                for (var t = 0; t < this.length; t++)
                  this[t].addEventListener(
                    TOUCH ? EVENT_touchstart : "mousedown",
                    i
                  );
                return this;
                function i(t) {
                  if (!TOUCH || 1 === t.touches.length) {
                    var i = $(t.target);
                    if (!e.dismiss || !i.is(e.dismiss)) {
                      var o = e.selector ? i.closest(e.selector) : i;
                      if (o.length) {
                        var a = TOUCH ? t.touches[0].clientX : t.clientX,
                          n = TOUCH ? t.touches[0].clientY : t.clientY,
                          s = a,
                          r = n,
                          l = !1;
                        TOUCH
                          ? (EVENT_target(t).addEventListener(
                              EVENT_touchmove,
                              c,
                              !1
                            ),
                            EVENT_target(t).addEventListener(
                              EVENT_touchend,
                              d,
                              !1
                            ))
                          : (window.addEventListener("mousemove", c, !0),
                            window.addEventListener("mouseup", d, !0)),
                          t.preventDefault(),
                          t.stopPropagation();
                      }
                    }
                  }
                  function c(t) {
                    if (!TOUCH || 1 === t.touches.length) {
                      var i = TOUCH ? t.touches[0].clientX : t.clientX,
                        c = TOUCH ? t.touches[0].clientY : t.clientY,
                        d = i - a,
                        u = c - n;
                      l
                        ? e.drag &&
                          e.drag({
                            $el: o,
                            x0: a,
                            y0: n,
                            x1: s,
                            y1: r,
                            x2: i,
                            y2: c,
                          })
                        : d * d + u * u > 10 &&
                          ((l = !0),
                          e.dragStart &&
                            e.dragStart({
                              $el: o,
                              x0: a,
                              y0: n,
                              x1: s,
                              y1: r,
                              x2: i,
                              y2: c,
                            })),
                        (s = i),
                        (r = c),
                        t.preventDefault(),
                        t.stopPropagation();
                    }
                  }
                  function d(t) {
                    (TOUCH && 0 !== t.touches.length) ||
                      (TOUCH
                        ? (EVENT_target(t).removeEventListener(
                            EVENT_touchmove,
                            c,
                            !1
                          ),
                          EVENT_target(t).removeEventListener(
                            EVENT_touchend,
                            d,
                            !1
                          ))
                        : (window.removeEventListener("mousemove", c, !0),
                          window.removeEventListener("mouseup", d, !0)),
                      t.preventDefault(),
                      t.stopPropagation(),
                      l
                        ? e.dragEnd &&
                          e.dragEnd({
                            $el: o,
                            x0: a,
                            y0: n,
                            x1: s,
                            y1: r,
                            x2: s,
                            y2: r,
                          })
                        : e.click && e.click({ $el: o, x0: a, y0: n }));
                  }
                }
              }),
              ($.event.special.destroyed = {
                remove: function (e) {
                  e.handler && e.handler();
                },
              });
            var s = [];
            $(window).on("resize", function () {
              var e = s;
              (s = []),
                Q.each(e, function (e) {
                  var t = document.getElementById(e);
                  if (t) {
                    s.push(e);
                    var i = $(t),
                      o = i.offset,
                      a = Math.max(
                        20,
                        (window.getHeight() - i.outerHeight()) / 3
                      );
                    a > o.top && (a = o.top);
                    var n = Math.max(
                      0,
                      (window.getWidth() - i.outerWidth()) / 2
                    );
                    i.css("transition", "top .5s"),
                      i.offset({ top: a, left: n });
                  }
                });
            }),
              window.NINOX_IE &&
                $(window).on("click", function () {
                  document.activeElement
                    ? document.activeElement.focus()
                    : window.focus();
                }),
              ($.fn.setHidden = function (e) {
                return (
                  e ? this.css("display", "none") : this.css("display", ""),
                  this
                );
              }),
              ($.fn.center = function () {
                var e = this.uniqueId().attr("id");
                -1 === s.indexOf(e) && s.push(e);
                var t = Math.max(
                    20,
                    (window.getHeight() -
                      $(this).outerHeight() -
                      (TOUCH ? 352 : 0)) /
                      3
                  ),
                  i = Math.max(
                    0,
                    (window.getWidth() - $(this).outerWidth()) / 2
                  );
                return this.offset({ top: t, left: i }), this;
              });
            var r = [];
            function l(e) {
              return !1;
            }
            function d(e) {
              if (!e) return !1;
              var t = e.localName;
              if ("input" === t || "textarea" === t) return !0;
              for (; e && e !== document.body; ) {
                if ("true" == e.contentEditable) return !0;
                e = e.parentNode;
              }
              return !1;
            }
            function u(e) {
              if (!l(e) && r.length) {
                var t = r[0];
                if (t.keydown && !d(e.target)) return t.keydown(e);
              }
            }
            function p(e) {
              if (!l(e) && r.length) {
                var t = r[0];
                if (t.keyup) return t.keyup(e);
              }
            }
            function h(e) {
              if (!l(e) && r.length) {
                var t = r[0];
                if (t.keypress) return t.keypress(e);
              }
            }
            window.addEventListener("cut", function (e) {
              if ((console.log("EVENT: cut()"), !i() && !d(e.target))) {
                console.log("EVENT: cut() - not an editor");
                const t = r[0];
                if (t && t.cut) {
                  console.log("EVENT: cut() - got a handler");
                  const i = t.cut();
                  i &&
                    (console.log("EVENT: cut() - have some data", i),
                    e.clipboardData.setData("text/plain", i),
                    console.log("EVENT: cut() - stored the data"),
                    e.preventDefault());
                }
              }
            }),
              window.addEventListener("copy", function (e) {
                if ((console.log("EVENT: copy()"), !i() && !d(e.target))) {
                  console.log("EVENT: copy() - not an editor");
                  const t = r[0];
                  if (t && t.copy) {
                    console.log("EVENT: copy() - got a handler");
                    const i = t.copy();
                    i &&
                      (console.log("EVENT: copy() - have some data", i),
                      e.clipboardData.setData("text/plain", i),
                      console.log("EVENT: copy() - stored the data"),
                      e.preventDefault());
                  }
                }
              }),
              window.addEventListener("paste", function (e) {
                if ((console.log("EVENT: paste()"), !i() && !d(e.target))) {
                  console.log("EVENT: paste() - not an editor");
                  const t = r[0];
                  if (t && t.paste) {
                    console.log("EVENT: copy() - got a handler");
                    const i = e.clipboardData.getData("text/plain");
                    i && (t.paste(i), e.preventDefault());
                  }
                }
              }),
              ($.pushInputHandler = function (e) {
                (r = [e].concat(r)), Object(c.k)();
              }),
              ($.popInputHandler = function (e) {
                var t = r.indexOf(e);
                t >= 0
                  ? (r = r.slice(0, t).concat(r.slice(t + 1)))
                  : console.log("Unbalanced push/pop keydown listener"),
                  Object(c.k)();
              }),
              ($.currentInputHandler = function () {
                return r[0];
              }),
              ($.fn.replaceSelectedText = function (e) {
                return 1 === this.length && t(this[0], e), this;
              }),
              $(function () {
                window.addEventListener("keydown", u, !1),
                  window.addEventListener("keyup", p, !1),
                  window.addEventListener("keypress", h, !1);
              });
          })();
      })();
    }
    function Ne() {
      $.fn.nxmenu = function (e) {
        var t = this;
        return this.addClass("nx-menu-button").click(i), this;
        function i() {
          t.addClass("nx-selected");
          var i = $('<div class="nx-backplane nx-backplane-dark">')
              .appendTo($(document.body))
              .click(r),
            o = $('<div class="nx-menu-popup">').appendTo(i);
          Q.each(e.items, function (t) {
            if ("string" == typeof t)
              "-" === t ? $("<hr>").appendTo(o) : $("<h1>").text(t).appendTo(o);
            else if ("object" == typeof t) {
              var i = $('<div class="nx-menu-item">').appendTo(o);
              if (e.icon)
                $('<div class="nx-menu-icon">').addClass(e.icon).appendTo(i);
              $('<div class="nx-menu-label">').text(t.caption).appendTo(i);
              i.click(t.click);
            }
          });
          var a = o.outerWidth(),
            n = o.outerHeight(),
            s = t.offset();
          function r() {
            i.remove(), t.removeClass("nx-selected");
          }
          return (
            (s.top += t.outerHeight() + 16),
            (s.left -= 16),
            s.left + a > window.innerWidth && (s.left = window.innerWidth - a),
            s.top + n > window.innerHeight && (s.top = window.innerHeight - n),
            o.offset(s),
            !1
          );
        }
      };
    }
    var Me = o("./node_modules/@babel/runtime/helpers/defineProperty.js"),
      Ie = o.n(Me),
      Re = o("./node_modules/react-swipeable-views/lib/index.js"),
      Fe = o.n(Re),
      Ae =
        (o("./src/react/FeatureHighlightSlides.css"),
        o("./node_modules/assert-never/index.js")),
      Oe = o.n(Ae),
      ze =
        (o("./src/react/ToggleComponent.css"),
        o("./src/react/util/FastClickContainer.tsx"));
    function Le(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function je(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? Le(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : Le(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    let Pe;
    Pe || (Pe = {});
    class He extends s.Component {
      constructor(e) {
        super(e), (this.state = { isOn: this.props.defaultValue });
      }
      render() {
        switch (this.props.options.type) {
          case "CHECKBOX":
          case "SLIDING_TOGGLE":
            return s.createElement(
              ze.a,
              {
                onFastClick: () =>
                  this.setState(
                    (e) => je({}, e, { isOn: !e.isOn }),
                    () => this.props.onChange(this.state.isOn)
                  ),
                className: this.getRootClass(),
              },
              this.getBody()
            );
          default:
            return Oe()(this.props.options);
        }
      }
      getRootClass() {
        switch (this.props.options.type) {
          case "CHECKBOX":
            return "ToggleComponent_checkbox";
          case "SLIDING_TOGGLE":
            return "ToggleComponent_switch";
          default:
            return Oe()(this.props.options);
        }
      }
      getBody() {
        switch (this.props.options.type) {
          case "CHECKBOX":
            return s.createElement(
              s.Fragment,
              null,
              s.createElement(
                "div",
                { className: "ToggleComponent_checkContainer" },
                s.createElement(
                  "div",
                  {
                    className:
                      "ToggleComponent_check " +
                      (this.state.isOn ? "ToggleComponent_checkOn" : ""),
                  },
                  this.state.isOn
                    ? s.createElement(
                        s.Fragment,
                        null,
                        s.createElement("div", {
                          className: "ToggleComponent_checkKick",
                        }),
                        s.createElement("div", {
                          className: "ToggleComponent_checkStem",
                        })
                      )
                    : null
                ),
                s.createElement(
                  "p",
                  { className: "ToggleComponent_label" },
                  this.props.options.label
                )
              )
            );
          case "SLIDING_TOGGLE":
            return s.createElement("div", {
              className:
                "ToggleComponent_slide " +
                (this.state.isOn ? "ToggleComponent_slideChecked" : ""),
            });
          default:
            return Oe()(this.props.options);
        }
      }
    }
    s.Component;
    function Ue(e) {
      (this.messageService = e),
        (this.renderers = { HTML: $.proxy(this.renderHTML, this) }),
        (this.capSize = 2),
        (this.messageInDisplay = null),
        (this.messageMaxHeight = 471),
        (this.messagePreviewHeight = 90),
        (this.$el = $('<div class="messages" style="display:none">').appendTo(
          document.body
        )),
        (this.$list = $('<div class="messages-list">').appendTo(this.$el)),
        e.on("logout", $.proxy(this.hideMessageList, this, !0)),
        e.on("messages", $.proxy(this.onMessages, this)),
        e.on("message", $.proxy(this.onMessage, this)),
        e.on("removeMessageError", $.proxy(this.removeMessageError, this));
    }
    (Ue.prototype.onMessages = function (e, t) {
      var i = this;
      t.length
        ? (i.$list.empty(),
          Q.each(t, function (e) {
            i.renderMessage(e);
          }))
        : i.hideMessageList(!0);
    }),
      (Ue.prototype.onMessage = function (e, t) {
        var i = this,
          o = t.message,
          a = t.latest,
          n = i.$list.children().length === i.capSize;
        function s() {
          var e = i.$list.find(".messages-message-container").last();
          i.messageInDisplay ||
            e.removeClass("fadein").toggleClass("fadeout").toggle(100),
            setTimeout(function () {
              e.remove();
            }, 100);
        }
        a && n && s(), i.renderMessage(o, a);
      }),
      (Ue.prototype.renderMessage = function (e, t) {
        var i = this;
        t = t || !1;
        e.type
          ? i.renderers[e.type]
            ? i.renderers[e.type](e, t)
            : console.warn(e.type + " type messages cannot be rendered yet")
          : console.warn(
              "Message data does not have a type attribute to proceed with"
            );
      }),
      (Ue.prototype.show = function () {
        this.$el.css("display", "");
      }),
      (Ue.prototype.markMessageAsRead = function (e) {
        var t = this;
        t.messageService.markMessageAsRead(e), t.removeMessage(e);
      }),
      (Ue.prototype.hideMessageList = function (e) {
        var t = this;
        e && t.$list.empty(),
          t.$list.children().length || t.$el.css("display", "none");
      }),
      (Ue.prototype.messageContainer = function (e, t) {
        var i = this,
          o = e(),
          a = o.messageWrapper,
          n = o.controls,
          s = $('<span class="messages-message-container-utils-link">').text(
            locale.showMore
          ),
          r = $('<div class="messages-message-container-utils">').append(s),
          l = $('<div class="messages-message-container-inner">')
            .append(n)
            .append(a)
            .append(r),
          c = $(
            '<div class="messages-message-container drawer-rev" id="' + t + '">'
          ).append(l);
        return (
          s.touch($.proxy(i.toggleMessageState, i, t)),
          { messageContainer: c, utils: r }
        );
      }),
      (Ue.prototype.renderHTML = function (e, t) {
        var i = this;
        if ("string" == typeof e.message) {
          var o = $(
              '<span class="messages-message-controls-control button icon-big-grey icon-big-close">'
            ),
            a = $('<div class="messages-message-controls">').append(o),
            n = $('<div class="messages-message-wrapper">').html(e.message),
            s = i.messageContainer(function () {
              return { controls: a, messageWrapper: n };
            }, e._id),
            r = s.messageContainer,
            l = s.utils;
          o.touch($.proxy(i.markMessageAsRead, i, e._id)),
            i.show(),
            t ? i.$list.prepend(r) : i.$list.append(r),
            l.css({
              display:
                n[0].scrollHeight < i.messagePreviewHeight ? "none" : "flex",
            }),
            r.css({ display: i.messageInDisplay ? "none" : "block" }),
            r.addClass("fadein");
        } else
          console.warn("Cannot display message! Wrong format detected", null);
      }),
      (Ue.prototype.toggleContainersOtherThan = function (e) {
        this.$list.find(".messages-message-container").each(function () {
          var t = this;
          $(t).prop("id") !== e && $(t).removeClass("fadein").toggle(10);
        });
      }),
      (Ue.prototype.toggleMessageState = function (e) {
        var t = this,
          i = t.$list.find("#" + e).find(".messages-message-container-inner"),
          o = i.find(".messages-message-wrapper"),
          a =
            (i.find(".messages-message-container-utils"),
            i.find(".messages-message-container-utils-link")),
          n = i[0].scrollHeight,
          s = n - 10 >= o[0].scrollHeight ? n - 10 : n;
        if (t.messageInDisplay === e)
          i.css({ overflow: "hidden" }),
            i.animate({ height: t.messagePreviewHeight, scrollTop: 0 }, 200),
            a.text(locale.showMore),
            t.toggleContainersOtherThan(e),
            (t.messageInDisplay = null);
        else if (t.messageInDisplay) {
          var r = t.$list
              .find("#" + t.messageInDisplay)
              .find(".messages-message-container-inner"),
            l =
              (r.find(".messages-message-container-utils"),
              r.find(".messages-message-container-utils-link"));
          r.animate({ height: t.messagePreviewHeight, scrollTop: 0 }, 150),
            l.text(locale.showMore),
            t.toggleContainersOtherThan(e),
            (t.messageInDisplay = e),
            i.animate({ height: s }),
            a.text(locale.showLess);
        } else
          i.css({
            overflow: "auto",
            paddingBottom: s > t.messageMaxHeight ? 32 : 20,
          }),
            i.animate({ height: s }, 200),
            a.text(locale.showLess),
            t.toggleContainersOtherThan(e),
            (t.messageInDisplay = e);
      }),
      (Ue.prototype.removeMessage = function (e) {
        var t = this,
          i = t.$list.find("#" + e);
        t.messageInDisplay === e &&
          ((t.messageInDisplay = null), t.toggleContainersOtherThan(e)),
          t.messageInDisplay || i.toggle(10),
          setTimeout(function () {
            i.remove(), t.hideMessageList();
          }, 100);
      }),
      (Ue.prototype.removeMessageError = function (e) {
        $.notify(
          "Sorry we couldn't take care of that. Please try again later."
        );
      });
    o("./src/react/SSO.scss");
    function Ve(e) {
      const { onTryAgain: t } = e;
      return r.a.createElement(
        "div",
        { className: "sso-error--container" },
        r.a.createElement("span", { className: "logo" }),
        r.a.createElement(
          "p",
          { className: "message" },
          Object(b.getLocale)().ssoErrorHeader
        ),
        r.a.createElement(
          "p",
          { className: "details" },
          Object(b.getLocale)().ssoErrorMessage
        ),
        r.a.createElement(
          ze.a,
          { behaviour: "PREVENT_RIPPLE", className: "cta", onFastClick: t },
          Object(b.getLocale)().ssoErrorCta
        ),
        r.a.createElement(
          "div",
          { className: "support" },
          r.a.createElement(
            ze.a,
            {
              behaviour: "PREVENT_RIPPLE",
              className: "support-email",
              onFastClick: () =>
                NinoxDocumentInteraction.openBrowser(
                  `mailto:support@ninox.com?subject=${encodeURIComponent(
                    "Unable to SSO login"
                  )}`
                ),
            },
            Object(b.getLocale)().ssoErrorSupportCta
          )
        )
      );
    }
    function We() {
      var e = null;
      function t(e) {
        return this;
      }
      function i() {
        0;
      }
      function o() {
        window.console || (window.console = {}),
          console.log || (console.log = function () {}),
          console.warn || (console.warn = function () {});
      }
      window.ninox_init = async function () {
        window.database = null;
        var e = "web";
        l.d(), l.e({ device: e });
        try {
          ga(function (e) {
            e.get("clientId");
          });
        } catch (e) {
          console.log(e);
        }
        function a() {
          var e = /^([a-z]+)(?:\-([a-z]+))?$/i.exec(navigator.language);
          if (e) {
            var t = (e[1] || "").toLowerCase(),
              i = (e[2] || "").toUpperCase(),
              o =
                $.datepicker.regional[t + "-" + i] || $.datepicker.regional[t];
            o && $.datepicker.setDefaults(o),
              (locale.weekStartMonday = 1 === $.datepicker._defaults.firstDay),
              (locale.firstDayOfWeek = locale.weekStartMonday ? 1 : 0);
          }
          ($.datepicker.formatDate = function (e, t, i) {
            return t ? b.util.moment(t).format(locale.dateFormat) : "";
          }),
            ($.datepicker.parseDate = function (e, t, i) {
              if (t) return b.util.moment(t, locale.dateFormat).toDate();
            });
        }
        function n() {
          (window.trackPageView = s), (window.trackEvent = d);
        }
        function s(t) {
          ga("send", "pageview", "/" + e + "/" + t);
        }
        function d(t, i, o) {
          ga("send", "event", t, i, e, o);
        }
        function u() {
          $.loading(!0),
            setTimeout(function () {
              E(),
                dbms.bootstrap(function (e) {
                  if (($.loading(!1), e)) return $.alert(String(e));
                  const t = dbms.getRemoteConnection(),
                    i = t.getServerConfig("settings") || {},
                    o = t.getServerConfig("passwordPolicy") || {},
                    a = i.localeOverrides;
                  a &&
                    (Object(_e.d)(a),
                    (window.locale = Object(_e.a)()),
                    (window.LOCALE = Object(b.getUserLanguage)())),
                    $(document.head)
                      .find("title")
                      .text(
                        (window.database && window.database.name) ||
                          "Ninox Database"
                      ),
                    o.idleTimeoutInMinutes &&
                      Object(c.f)(60 * o.idleTimeoutInMinutes * 1e3),
                    p();
                });
            }, 0);
        }
        async function p() {
          if (
            (await localFileSystem.cachedURL(
              "https://ninox.com/api/templates",
              864e5
            ),
            Object(c.g)())
          ) {
            const e = NinoxDocumentInteraction.getUserDefault("nx.server"),
              t = (e ? "https://" + e : "") + "/_custom/custom.css",
              i = document.createElement("link");
            (i.rel = "stylesheet"),
              (i.href = (await localFileSystem.cachedURL(t, 6e4)) || t),
              document.head.appendChild(i);
            const o = (e ? "https://" + e : "") + "/_custom/custom.js",
              a = document.createElement("script");
            (a.type = "text/javascript"),
              (a.src = (await localFileSystem.cachedURL(o, 6e4)) || o),
              document.head.appendChild(a);
          }
          ui.initRoot && ui.initRoot(),
            i(),
            setTimeout(function () {
              $("#bootscreen").addClass("fade-out"),
                setTimeout(function () {
                  $("#bootscreen").remove();
                }, 300);
            }, 100),
            new Ue(dbms.messageService);
        }
        String.prototype.normalize || (String.prototype.normalize = t),
          o(),
          r(),
          a(),
          n(),
          u();
      };
      var n = {};
      function r() {
        0;
      }
      (n["-M-PL0jBisit-PCFunUO"] = {
        init: function (e) {
          console.log("Appcues flow Enter Data: init"),
            database && database.on("update", this.onUpdate, this);
        },
        reset: function (e) {
          console.log("Appcues flow Enter Data: reset"),
            database && database.off("update", this.onUpdate, this);
        },
        onUpdate: function (e) {
          console.log("Appcues flow Enter Data: record updated"),
            Appcues.track("Record Modified", {});
        },
      }),
        (window.getWidth = function () {
          return window.innerWidth;
        }),
        (window.getHeight = function () {
          return window.innerHeight;
        }),
        (window.ninox_barcode = function (t) {
          if (e) {
            var i = e.value,
              o = e.selectionStart,
              a = e.selectionEnd;
            o > 0 || (o = 0),
              a > o || (a = o),
              (i = i.substr(0, o) + t + i.substr(a)),
              (e.value = i),
              $(e).trigger("change");
          }
        }),
        (window.ninox_openURL = function (e) {
          NinoxViewController.clearLaunchURL(), root.handleOpenURL(e);
        }),
        (window.ninox_saveListeners = []),
        (window.registerSaveListener = function (e) {
          ninox_saveListeners = ninox_saveListeners.concat(e);
        }),
        (window.unregisterSaveListener = function (e) {
          var t = ninox_saveListeners.indexOf(e);
          t >= 0 &&
            (ninox_saveListeners = ninox_saveListeners
              .slice(0, t)
              .concat(ninox_saveListeners.slice(t + 1)));
        }),
        (window.ninox_saveEverything = function () {
          for (var e = ninox_saveListeners, t = 0; t < e.length; t++) e[t]();
          window.database
            ? window.database.saveEverything(function (e) {
                e && console.log("ninox_saveEverything database err", e),
                  NinoxViewController.everythingSaved();
              })
            : NinoxViewController.everythingSaved();
        }),
        (window.ninox_cutEnabled = function () {
          var e = $.currentInputHandler();
          return (e && e.cutEnabled && e.cutEnabled()) || !1;
        }),
        (window.ninox_copyEnabled = function () {
          var e = $.currentInputHandler();
          return (e && e.copyEnabled && e.copyEnabled()) || !1;
        }),
        (window.ninox_pasteEnabled = function () {
          var e = $.currentInputHandler();
          return (e && e.pasteEnabled && e.pasteEnabled()) || !1;
        }),
        (window.ninox_cut = function () {
          var e = $.currentInputHandler();
          return (e && e.cut && e.cut()) || "";
        }),
        (window.ninox_copy = function () {
          var e = $.currentInputHandler();
          return (e && e.copy && e.copy()) || "";
        }),
        (window.ninox_paste = function (e) {
          var t = $.currentInputHandler();
          t && t.paste && t.paste(e);
        }),
        (window.ninox_menuEnabled = function (e) {
          switch (e) {
            case "menuNewDatabase":
            case "menuImportArchive":
              return !ui.isInitialized;
            case "menuSaveArchiveAs":
            case "menuDuplicateDatabase":
              return (
                !!ui.isInitialized && window.database && !window.database.sql
              );
            case "menuRenameDatabase":
              return !!ui.isInitialized;
            case "menuReorganizeDatabase":
              return !!(ui.isInitialized && window.database && database.cloud);
            case "menuDeleteDatabase":
            case "menuCloseDatabase":
              return !!ui.isInitialized;
            default:
              var t = $.currentInputHandler();
              return (
                !(!t || "function" != typeof t[e + "Enabled"]) &&
                t[e + "Enabled"]()
              );
          }
        }),
        (window.ninox_menuAction = function (e) {
          switch (e) {
            case "menuNewDatabase":
              ui.createDatabase();
              break;
            case "menuImportArchive":
              ui.importArchive();
              break;
            case "menuSaveArchiveAs":
              ui.isInitialized && ui.saveArchiveAs({});
              break;
            case "menuDuplicateDatabase":
              ui.isInitialized && ui.duplicateDatabase();
              break;
            case "menuRenameDatabase":
              ui.isInitialized && ui.renameDatabase();
              break;
            case "menuReorganizeDatabase":
              ui.isInitialized && database.cloud && ui.reorganizeDatabase();
              break;
            case "menuDeleteDatabase":
              ui.isInitialized && ui.dropDatabase();
              break;
            case "menuCloseDatabase":
              ui.isInitialized && ui.backToRoot();
              break;
            default:
              var t = $.currentInputHandler();
              t && "function" == typeof t[e] && t[e]();
          }
          setTimeout(() => Object(c.k)(), 10);
        }),
        (window.ninox_undoChanged = function () {
          ui.recordNavigation && ui.recordNavigation.updateUndo();
        }),
        (window.ninox_decrypt = function (e, t) {
          console.log("ninox_decrypt", e, t);
          var i = b.util.AESDecrypt(e, t);
          return console.log("ninox_decrypt > ", i), i;
        }),
        (window.ssoLoginCallback = function (e, t) {
          console.log("ssoLoginCallback", e, t);
          const i = dbms.getRemoteConnection(),
            o =
              i.isSamlEnabled() || i.isOidcEnabled()
                ? () => i.ssoLogin()
                : $.alert("Bad SSO Strategy");
          if (e) {
            const e = () => a.unmountComponentAtNode(t[0]),
              t = $.backplane({
                close: e,
                scrollable: !0,
                closable: !1,
                cls: "sso-error",
              });
            return a.render(
              s.createElement(Ve, {
                onTryAgain: () => {
                  t.close(), setTimeout(o, 0);
                },
              }),
              t[0]
            );
          }
          (i.isLoggedIn() && !i.reloginActive) ||
            i.fetchSession(t, function (e, t) {
              t && (i.saveSession(t), i.onReloginSuccess()),
                i.refresh(() => root.afterLogin());
            });
        });
    }
    o("./src/react/ResizeDragHandle.css");
    const Be = (e) =>
      s.createElement(
        "div",
        { className: "ResizeDragHandle_container" },
        s.createElement(
          "div",
          {
            className:
              "ResizeDragHandle_handleContainer" +
              (e.adminMode ? " ResizeDragHandle_handleContainerAdminMode" : ""),
          },
          s.createElement("div", {
            className: "i-24-24 i-lighter-grey i-resize-handle",
          })
        )
      );
    function qe() {
      (this.nextUndoId = 1),
        (this._undoOperations = {}),
        (this.undoImplementation =
          void 0 !== window.UNDO_IMPLEMENTATION
            ? window.UNDO_IMPLEMENTATION
            : new Ye()),
        this.undoImplementation.cancelUndo();
    }
    function Ye() {
      (this.isUndoing = !1),
        (this.isRedoing = !1),
        (this.undoStack = []),
        (this.redoStack = []);
    }
    (qe.prototype.cancel = function () {
      (this._undoOperations = {}), this.undoImplementation.cancelUndo();
    }),
      (qe.prototype.push = function (e) {
        var t = String(this.nextUndoId++);
        (this._undoOperations[t] = e),
          this.undoImplementation.pushUndoOperation({ id: t, title: e.title });
      }),
      (qe.prototype.performUndo = function (e, t = () => {}) {
        var i = this._undoOperations[e];
        console.log(i),
          i &&
            ($.loading(!0),
            i.exec(function (e) {
              $.loading(!1), e && $.alert(e), t();
            }));
      }),
      (qe.prototype.canExecUndo = function (e) {
        this.undoImplementation.canExecUndo(e);
      }),
      (qe.prototype.canExecRedo = function (e) {
        this.undoImplementation.canExecRedo(e);
      }),
      (qe.prototype.execUndo = function () {
        this.undoImplementation.execUndo();
      }),
      (qe.prototype.execRedo = function () {
        this.undoImplementation.execRedo();
      }),
      (Ye.prototype.pushUndoOperation = function (e) {
        this.isUndoing ? this.redoStack.push(e) : this.undoStack.push(e),
          ui.recordNavigation && ui.recordNavigation.updateUndo();
      }),
      (Ye.prototype.cancelUndo = function () {
        (this.undoStack = []),
          (this.redoStack = []),
          ui.recordNavigation && ui.recordNavigation.updateUndo();
      }),
      (Ye.prototype.canExecUndo = function (e) {
        e(void 0, this.undoStack.length > 0);
      }),
      (Ye.prototype.canExecRedo = function (e) {
        e(void 0, this.redoStack.length > 0);
      }),
      (Ye.prototype.execUndo = function () {
        var e = this;
        if (e.undoStack.length) {
          var t = e.undoStack.pop();
          ui.undoManager &&
            ((e.isUndoing = !0),
            ui.undoManager.performUndo(t.id, function (t) {
              e.isUndoing = !1;
            })),
            ui.recordNavigation && ui.recordNavigation.updateUndo();
        }
      }),
      (Ye.prototype.execRedo = function () {
        var e = this;
        if (e.redoStack.length) {
          var t = e.redoStack.pop();
          ui.undoManager &&
            ((e.isRedoing = !0),
            ui.undoManager.performUndo(t.id, function (t) {
              e.isRedoing = !1;
            })),
            ui.recordNavigation && ui.recordNavigation.updateUndo();
        }
      });
    o("./src/react/database/CondensedHudLeftHeader.css");
    class Ge extends s.Component {
      constructor(e) {
        super(e);
      }
      render() {
        return null === this.props.onBurgerMenuClicked
          ? null
          : s.createElement(
              ze.a,
              {
                className: "hud-menu-group CondensedHudLeftHeader_leftHud",
                onFastClick: this.props.onBurgerMenuClicked,
              },
              s.createElement("div", {
                className: "i-32-24 i-white i-setting-side-menu-left",
              })
            );
      }
    }
    var Xe = o(
      "./node_modules/react-sortable-hoc/dist/react-sortable-hoc.umd.js"
    );
    o("./src/react/database/Hud.css");
    function Ke(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function Je(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? Ke(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : Ke(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    const Ze = Object(Xe.SortableHandle)(() =>
        s.createElement(
          "div",
          { className: "Hud_sortingHandleContainer" },
          s.createElement("div", {
            className: "i-24-24 i-lighter-grey i-drag-handle",
          })
        )
      ),
      Qe = Object(Xe.SortableElement)(({ value: e }) =>
        s.createElement("div", { className: "Hud_sortableElement" }, e)
      ),
      et = Object(Xe.SortableContainer)(({ children: e, className: t }) =>
        s.createElement("div", { className: t }, e)
      ),
      tt = (e) => {
        const [t, i] = s.useState({ currentlyExpanded: {}, isSorting: !1 }),
          o = () => {
            const i = [];
            for (const o of e.items) {
              const e = o.children.length > 0,
                a = t.currentlyExpanded[o.id];
              i.push(
                s.createElement(
                  "div",
                  { key: "container" + o.id, className: "Hud_rowContainer" },
                  n(o, e),
                  a
                    ? u(
                        o.children.map((e) => n(e, !1)),
                        o
                      )
                    : null
                )
              );
            }
            return u(i, null);
          },
          a = (e) => {
            const o = t.currentlyExpanded;
            o.hasOwnProperty(e) ? delete o[e] : (o[e] = !0),
              i(Je({}, t, { currentlyExpanded: o }));
          },
          n = (i, o) => {
            var n;
            const l = i.id === e.selection,
              d = t.currentlyExpanded.hasOwnProperty(i.id),
              u = e.isAdmin && i.hasExpressionErrors();
            return s.createElement(
              ze.a,
              {
                onFastClick: () => e.onTableClick(i.id),
                key: i.id,
                className:
                  "nav-item" +
                  (l ? " selected" : "") +
                  (t.isSorting ? " Hud_sorting" : "") +
                  (u ? " error" : ""),
                style: {
                  width: "100%",
                  overflow: "hidden",
                  paddingLeft: i.hasParent ? 32 : void 0,
                },
              },
              l
                ? s.createElement("div", {
                    className: "nav-item-selected-indicator",
                  })
                : null,
              s.createElement("div", {
                className: null !== (n = i.icon) && void 0 !== n ? n : "",
                style: { opacity: l ? 1 : 0.7 },
              }),
              u
                ? s.createElement("div", {
                    className: "nav-item-icon-error i-red i-warning",
                  })
                : null,
              s.createElement(
                "div",
                { className: "nav-item-text" },
                i.caption || Object(_e.a)().unnamed
              ),
              r(i, o)
                ? s.createElement(
                    "span",
                    { className: "Hud_actionIconsContainer" },
                    o
                      ? s.createElement(ze.a, {
                          className:
                            "nav-item-expand i-32-12 i-white i-line-down-thick " +
                            (d ? "expanded" : "collapsed"),
                          onFastClick: () => a(i.id),
                        })
                      : null,
                    i.isHidden ? c() : "",
                    e.isAdmin && e.isAdminEnabled
                      ? s.createElement(Ze, null)
                      : null
                  )
                : null
            );
          },
          r = (t, i) => i || t.isHidden || (e.isAdmin && e.isAdminEnabled),
          c = () =>
            s.createElement(
              "span",
              { className: "Hud_hiddenTag" },
              Object(_e.a)().hidden
            ),
          d = (o, a, n) => {
            Object(l.f)("Table", "Rearrange"),
              o !== a && e.onSortEnd(o, a, n),
              i(Je({}, t, { isSorting: !1 }));
          },
          u = (o, a) =>
            s.createElement(
              et,
              {
                className: e.containerClassName,
                onSortEnd: (e) => d(e.oldIndex, e.newIndex, a),
                useDragHandle: !0,
                onSortStart: () => i(Je({}, t, { isSorting: !1 })),
                helperClass: "Hud_helperClass",
              },
              o.map((e, t) =>
                s.createElement(Qe, { key: `item-${t}`, index: t, value: e })
              )
            );
        return o();
      };
    o("./src/react/database/HudContainer.css"),
      o("./src/react/database/HudLeftHeader.css");
    class it extends s.Component {
      constructor(e) {
        super(e);
      }
      render() {
        const e = this.props.stickySettings;
        return s.createElement(
          "div",
          { className: "HudLeftHeader_root" },
          window.ui.fullWidth <= 640 || null === e
            ? null
            : s.createElement(
                ze.a,
                {
                  onFastClick: () => {
                    e.toggleSticky();
                  },
                  className: "HudLeftHeader_toggle",
                },
                s.createElement("div", {
                  className:
                    "i-40-24 i-white " +
                    (e.isSticky ? "i-setting-pin-on" : "i-setting-pin-off"),
                })
              ),
          s.createElement(
            "div",
            { className: "HudLeftHeader_backContainer" },
            s.createElement(
              ze.a,
              {
                onFastClick: this.props.onCloseClick,
                className: "nav-item head HudLeftHeader_backButton",
              },
              s.createElement("div", {
                className: "nav-item-icon i-24-24 i-white i-arrow-back",
              }),
              s.createElement(
                "div",
                { className: "nav-item-text head" },
                window.database.account.name
              )
            )
          ),
          s.createElement(
            ze.a,
            {
              onFastClick: () => this.props.onItemClick("home"),
              className:
                "nav-item head" +
                ("home" === this.props.selection ? " selected" : ""),
              title: this.props.database.name,
            },
            "home" === this.props.selection
              ? s.createElement("div", {
                  className: "nav-item-selected-indicator",
                })
              : null,
            s.createElement("div", {
              className: "nav-item-icon i-24-24 i-white i-home",
            }),
            s.createElement(
              "div",
              { className: "nav-item-text head" },
              this.props.database.name
            ),
            void 0 === this.props.cloudState
              ? null
              : s.createElement(ze.a, {
                  onFastClick: this.props.cloudState.onClick,
                  className:
                    "HudLeftHeader_cloudContainer i-32-24 i-white i-cloud-" +
                    this.props.cloudState.state,
                  title:
                    "cloud" === this.props.cloudState.type
                      ? Object(_e.a)().resyncCloudDatabases
                      : Object(_e.a)().ninoxCloudSync,
                })
          ),
          s.createElement(
            ze.a,
            {
              onFastClick: () => this.props.onItemClick("search"),
              className:
                "nav-item head" +
                ("search" === this.props.selection ? " selected" : ""),
              title: Object(_e.a)().search,
            },
            "search" === this.props.selection
              ? s.createElement("div", {
                  className: "nav-item-selected-indicator",
                })
              : null,
            s.createElement("div", {
              className: "nav-item-icon i-24-24 i-white i-search",
            }),
            s.createElement(
              "div",
              { className: "nav-item-text head" },
              Object(_e.a)().search
            )
          ),
          s.createElement(
            ze.a,
            {
              onFastClick: () => this.props.onItemClick("calendar"),
              className:
                "nav-item head" +
                ("calendar" === this.props.selection ? " selected" : ""),
              title: Object(_e.a)().calendar,
            },
            "calendar" === this.props.selection
              ? s.createElement("div", {
                  className: "nav-item-selected-indicator",
                })
              : null,
            s.createElement("div", {
              className: "nav-item-icon i-24-24 i-white i-calendar",
              title: Object(_e.a)().calendar,
            }),
            s.createElement(
              "div",
              { className: "nav-item-text head" },
              Object(_e.a)().calendar
            )
          ),
          s.createElement("div", { className: "HudLeftHeader_divider" })
        );
      }
    }
    class ot extends s.Component {
      constructor(e) {
        super(e),
          Ie()(this, "onHeaderClick", (e) => {
            switch (e) {
              case "search":
                this.props.openSearch();
                break;
              case "home":
                this.props.openHome();
                break;
              case "calendar":
                this.props.openCalendar();
                break;
              default:
                Oe()(e);
            }
          }),
          Ie()(this, "onTableClick", (e) => {
            this.props.openTable(e);
          }),
          Ie()(this, "getHudItems", (e) =>
            e.map((e) => ({
              children: this.getHudItems(e.children),
              id: e.id,
              caption: e.caption,
              isHidden: e.hidden,
              icon: e.icon
                ? "nav-item-icon ic ic-" + e.icon
                : "nav-item-icon i-32-24 i-white i-setting-table",
              hasExpressionErrors: () => e.hasExpressionErrors(),
              hasParent: e.master,
            }))
          );
      }
      render() {
        return s.createElement(
          "div",
          { className: "HudContainer_root" },
          s.createElement(it, {
            cloudState: this.props.cloudState,
            onItemClick: this.onHeaderClick,
            onCloseClick: this.props.onCloseClick,
            selection: this.props.selection,
            database: this.props.database,
            stickySettings: this.props.stickySettings,
          }),
          s.createElement(
            "div",
            { className: "HudContainer_body" },
            s.createElement(tt, {
              selection: this.props.selection,
              onTableClick: this.onTableClick,
              isAdmin: this.props.database.adminMode,
              isAdminEnabled: this.props.database.isAdminEnabled(),
              items: this.getHudItems(window.ui.getAvailableTypes()),
              onSortEnd: (e, t, i) =>
                this.props.database.schema.updateTypeOrder(e, t, i),
            })
          ),
          this.props.database.adminMode && this.props.database.isAdminEnabled()
            ? s.createElement(
                ze.a,
                {
                  rippleStyle: "LIGHT",
                  onFastClick: this.props.createTable,
                  className: "nav-item nav-item-add-table",
                  title: Object(_e.a)().addTable,
                },
                s.createElement("div", {
                  className: "nav-item-icon i-32-24 i-white i-plus",
                }),
                s.createElement(
                  "div",
                  { className: "nav-item-text", style: { color: "white" } },
                  Object(_e.a)().addTable
                )
              )
            : null
        );
      }
    }
    var at = o("./node_modules/react-burger-menu/lib/BurgerMenu.js");
    const nt = 640;
    function st(e) {
      (this.$el = $('<div class="nav-container">').appendTo(ui.$left)),
        (this.$slidingHeader = $(
          '<div id="react-root-sliding-header">'
        ).appendTo(ui.$overlays)),
        this.attachCondensed(),
        (this.selection = void 0),
        database.on("admin", void 0, $.proxy(this.updateUI, this)),
        database.on("schema", void 0, $.proxy(this.updateUI, this)),
        (this.cloudState = "okay");
    }
    function rt() {
      var e = this;
      (this.controllers = []),
        (this.$actions = $(
          '<div class="hud-menu-group" style="margin:0 8px 0 0;display:none">'
        )),
        (this.$print = $(
          '<div class="hud-menu-button i-32-24 i-light-grey i-setting-print disabled" title="' +
            htmlEscape(locale.print) +
            '" style="margin-right: 2px;">'
        )
          .touch($.proxy(this.print, this))
          .appendTo(this.$actions)),
        (this.$remove = $(
          '<div class="hud-menu-button i-32-24 i-light-grey i-setting-trash disabled" title="' +
            htmlEscape(locale.removeRecord) +
            '" style="margin-right: 2px;">'
        )
          .touch($.proxy(this.remove, this))
          .appendTo(this.$actions)),
        (this.$duplicate = $(
          '<div class="hud-menu-button i-32-24 i-light-grey i-setting-copy disabled" title="' +
            htmlEscape(locale.duplicateRecord) +
            '" style="margin-right: 2px;">'
        )
          .touch($.proxy(this.duplicate, this))
          .appendTo(this.$actions)),
        (this.$add = $(
          '<div class="hud-menu-button i-32-24 i-light-grey i-setting-add disabled" title="' +
            htmlEscape(locale.createRecord) +
            '">'
        )
          .touch($.proxy(this.add, this))
          .appendTo(this.$actions)),
        (this.$navs = $(
          '<div class="hud-menu-group" style="margin:0 0px 0 9px">'
        ).appendTo(ui.$menuRight)),
        (this.$first = $(
          '<div class="hud-menu-button menu-nav i-32-24 i-light-grey i-arrow-solid-first disabled" title="' +
            htmlEscape(locale.gotoFirst) +
            '">'
        ).appendTo(this.$navs)),
        (this.$prev = $(
          '<div class="hud-menu-button menu-nav i-32-24 i-light-grey i-arrow-solid-left disabled" title="' +
            htmlEscape(locale.gotoPrev) +
            '">'
        ).appendTo(this.$navs)),
        (this.$next = $(
          '<div class="hud-menu-button menu-nav i-32-24 i-light-grey i-arrow-solid-right disabled" title="' +
            htmlEscape(locale.gotoNext) +
            '">'
        ).appendTo(this.$navs)),
        (this.$last = $(
          '<div class="hud-menu-button menu-nav i-32-24 i-light-grey i-arrow-solid-last disabled" title="' +
            htmlEscape(locale.gotoLast) +
            '">'
        ).appendTo(this.$navs)),
        (this.$actionsSmall = $('<div class="hud-menu-group">')),
        (this.$printSmall = $(
          '<div class="hud-menu-button i-32-24 i-light-grey i-setting-print disabled" title="' +
            htmlEscape(locale.print) +
            '">'
        )
          .touch($.proxy(this.print, this))
          .appendTo(this.$actionsSmall)),
        (this.$removeSmall = $(
          '<div class="hud-menu-button i-32-24 i-light-grey i-setting-trash disabled" title="' +
            htmlEscape(locale.removeRecord) +
            '">'
        )
          .touch($.proxy(this.remove, this))
          .appendTo(this.$actionsSmall)),
        (this.$duplicateSmall = $(
          '<div class="hud-menu-button i-32-24 i-light-grey i-setting-copy disabled" title="' +
            htmlEscape(locale.duplicateRecord) +
            '">'
        )
          .touch($.proxy(this.duplicate, this))
          .appendTo(this.$actionsSmall)),
        (this.$addSmall = $(
          '<div class="hud-menu-button i-32-24 i-light-grey i-setting-add disabled" title="' +
            htmlEscape(locale.createRecord) +
            '">'
        )
          .touch($.proxy(this.add, this))
          .appendTo(this.$actionsSmall)),
        (this.$navsSmall = $('<div class="hud-menu-group">').appendTo(
          ui.$foot
        )),
        (this.$firstSmall = $(
          '<div class="hud-menu-button i-32-24 i-light-grey i-arrow-solid-first disabled" title="' +
            htmlEscape(locale.gotoFirst) +
            '">'
        ).appendTo(this.$navsSmall)),
        (this.$prevSmall = $(
          '<div class="hud-menu-button i-32-24 i-light-grey i-arrow-solid-left disabled" title="' +
            htmlEscape(locale.gotoPrev) +
            '">'
        ).appendTo(this.$navsSmall)),
        (this.$nextSmall = $(
          '<div class="hud-menu-button i-32-24 i-light-grey i-arrow-solid-right disabled" title="' +
            htmlEscape(locale.gotoNext) +
            '">'
        ).appendTo(this.$navsSmall)),
        (this.$lastSmall = $(
          '<div class="hud-menu-button i-32-24 i-light-grey i-arrow-solid-last disabled" title="' +
            htmlEscape(locale.gotoLast) +
            '">'
        ).appendTo(this.$navsSmall)),
        this.$first.on("contextmenu", function (e) {
          e.preventDefault();
        }),
        this.$first.touch($.proxy(this.first, this)),
        this.$prev.on("contextmenu", function (e) {
          e.preventDefault();
        }),
        this.$prev[0].addEventListener(
          TOUCH ? EVENT_touchstart : "mousedown",
          a
        ),
        this.$next.on("contextmenu", function (e) {
          e.preventDefault();
        }),
        this.$next[0].addEventListener(
          TOUCH ? EVENT_touchstart : "mousedown",
          o
        ),
        this.$last.on("contextmenu", function (e) {
          e.preventDefault();
        }),
        this.$last.touch($.proxy(this.last, this)),
        this.$firstSmall.on("contextmenu", function (e) {
          e.preventDefault();
        }),
        this.$firstSmall.touch($.proxy(this.first, this)),
        this.$prevSmall.on("contextmenu", function (e) {
          e.preventDefault();
        }),
        this.$prevSmall[0].addEventListener(
          TOUCH ? EVENT_touchstart : "mousedown",
          a
        ),
        this.$nextSmall.on("contextmenu", function (e) {
          e.preventDefault();
        }),
        this.$nextSmall[0].addEventListener(
          TOUCH ? EVENT_touchstart : "mousedown",
          o
        ),
        this.$lastSmall.on("contextmenu", function (e) {
          e.preventDefault();
        }),
        this.$lastSmall.touch($.proxy(this.last, this)),
        (rt.$actions = this.$actions),
        (rt.$navs = this.$navs),
        (rt.$actionsSmall = this.$actionsSmall),
        (rt.$navsSmall = this.$navsSmall),
        rt.$actionsSmall.appendTo(ui.$foot),
        rt.$navsSmall.appendTo(ui.$foot),
        rt.$navs.prependTo(ui.$menuRight),
        rt.$actions.prependTo(ui.$menuRight),
        this.updateUI();
      var t = null,
        i = null;
      function o(e) {
        return n("next", e), e.preventDefault(), !1;
      }
      function a(e) {
        return n("prev", e), e.preventDefault(), !1;
      }
      function n(o, a) {
        i ||
          ((i = o),
          TOUCH
            ? (EVENT_target(a).addEventListener(EVENT_touchend, s),
              EVENT_target(a).addEventListener("touchcancel", s))
            : window.addEventListener("mouseup", s),
          "next" === i ? e.next() : e.prev(),
          (t = setTimeout(r, 400)),
          a.preventDefault());
      }
      function s(e) {
        i &&
          ((i = null),
          TOUCH
            ? (EVENT_target(e).removeEventListener(EVENT_touchend, s),
              EVENT_target(e).removeEventListener("touchcancel", s))
            : window.removeEventListener("mouseup", s),
          t && (clearTimeout(t), (t = null)),
          e.preventDefault());
      }
      function r() {
        "next" === i
          ? (e.next(), (t = setTimeout(r, 10)))
          : "prev" === i
          ? (e.prev(), (t = setTimeout(r, 10)))
          : (t = null);
      }
    }
    (st.prototype.attachCondensed = function () {
      this.$menu = $(
        '<div id="react-root-condensed-hud-left-header">'
      ).appendTo(ui.$headerContainer);
    }),
      (st.prototype.initialResize = function () {
        ui.fullWidth <= nt && ui.hideLeftPanel(),
          (this.lastWidth = ui.fullWidth),
          (this.lastLeftWidth = ui.leftWidth),
          this.updateUI();
      }),
      (st.prototype.resize = function () {
        this.lastWidth >= nt &&
          ui.fullWidth <= nt &&
          (ui.hideLeftPanel(), this.updateUI()),
          this.lastWidth <= nt &&
            ui.fullWidth > nt &&
            (ui.showLeftPanel({}), this.updateUI()),
          ((!this.lastLeftWidth && ui.leftWidth) ||
            (this.lastLeftWidth && !ui.leftWidth)) &&
            this.updateUI(),
          ui.leftWidth &&
            ui.isLeftOpen &&
            (a.unmountComponentAtNode(this.$menu[0]),
            a.unmountComponentAtNode(this.$slidingHeader[0])),
          (this.lastWidth = ui.fullWidth),
          (this.lastLeftWidth = ui.leftWidth);
      }),
      (st.prototype.updateState = function (e) {
        if (e)
          switch (e.base) {
            case "table":
              this.selection = e.tid;
              break;
            case "calendar":
              this.selection = "calendar";
              break;
            case "search":
              this.selection = "search";
              break;
            case "home":
              this.selection = "home";
          }
        else this.selection = void 0;
        this.updateUI();
      }),
      (st.prototype.isOpen = !1),
      (st.prototype.handleBurgerMenuClickLarge = function () {
        ui.showLeftPanel({ shouldResetWidth: !0 });
      }),
      (st.prototype.handleBurgerMenuClickSmall = function () {
        (this.isOpen = !this.isOpen), this.updateUI();
      }),
      (st.prototype.handleStateChange = function (e) {
        this.isOpen !== e.isOpen && ((this.isOpen = e.isOpen), this.updateUI());
      }),
      (st.prototype.closeMenu = function () {
        (this.isOpen = !1), this.updateUI();
      }),
      (st.prototype.toggleSticky = function () {
        ui.fullWidth > nt &&
          (ui.showLeftPanel({ shouldResetWidth: !0 }),
          (this.isOpen = !1),
          this.updateUI());
      }),
      (st.prototype.renderCondensedHeader = function (e) {
        a.render(
          s.createElement(Ge, { onBurgerMenuClicked: () => e() }),
          this.$menu[0]
        );
      }),
      (st.prototype.reloadDatabase = function () {
        dbms.closeDatabase(function () {
          window.location.reload();
        });
      }),
      (st.prototype.setCloudSyncState = function (e) {
        (this.cloudState = e), this.updateUI();
      }),
      (st.prototype.renderHudContainerLarge = function () {
        a.render(
          s.createElement(ot, {
            cloudState: this.getCloudState(),
            stickySettings: null,
            onCloseClick: () => ui.backToRoot(),
            selection: this.selection,
            database: database,
            openSearch: () => ui.openSearch(),
            openHome: () => ui.openHome(),
            openCalendar: () => ui.openCalendar(),
            openTable: (e) => ui.openTable(e),
            createTable: () => ui.createTable(),
          }),
          this.$el[0]
        );
      }),
      (st.prototype.getCloudState = function () {
        return database.cloud
          ? {
              onClick: () => this.reloadDatabase(),
              state: this.cloudState,
              type: "cloud",
            }
          : database.sql
          ? {
              onClick: () => this.popupSyncState(),
              state: this.cloudState,
              type: "sql",
            }
          : void 0;
      }),
      (st.prototype.renderHudContainerSmall = function () {
        a.render(
          s.createElement(
            at.slide,
            {
              isOpen: this.isOpen,
              customBurgerIcon: !1,
              customCrossIcon: !1,
              styles: {
                bmMenu: { background: "#566eb1" },
                bmMenuWrap: { transition: "all 0.3s ease 0s" },
                bmOverlay: { transition: "opacity 0.3s ease 0s" },
              },
              onStateChange: (e) => this.handleStateChange(e),
            },
            s.createElement(ot, {
              cloudState: this.getCloudState(),
              stickySettings: {
                isSticky: !1,
                toggleSticky: () => this.toggleSticky(),
              },
              selection: this.selection,
              database: database,
              onCloseClick: () => ui.backToRoot(),
              openSearch: () => {
                this.closeMenu(), ui.openSearch();
              },
              openHome: () => {
                this.closeMenu(), ui.openHome();
              },
              openCalendar: () => {
                this.closeMenu(), ui.openCalendar();
              },
              openTable: (e) => {
                this.closeMenu(), ui.openTable(e);
              },
              createTable: () => {
                this.closeMenu(), ui.createTable();
              },
            })
          ),
          this.$slidingHeader[0]
        );
      }),
      (st.prototype.updateUI = function () {
        ui.isLeftOpen && ui.leftWidth
          ? (this.renderHudContainerLarge(),
            (this.isOpen = !1),
            a.unmountComponentAtNode(this.$slidingHeader[0]))
          : (this.renderCondensedHeader(() => {
              this.handleBurgerMenuClickSmall();
            }),
            a.unmountComponentAtNode(this.$el[0]),
            this.renderHudContainerSmall());
      }),
      (st.prototype.popupSyncState = function () {
        const e = this;
        if (database.sql) {
          var t = $.popdown({
            head: locale.syncState,
            close: o,
            buttons: [
              {
                caption: locale.syncProblemCheck,
                click: function () {
                  t.close(),
                    $.loading(!0),
                    database.checkSynchornizationProblems(function (t, i) {
                      if (($.loading(!1), t)) return $.alert(t);
                      e.popupSynchronizationProblems(i);
                    });
                },
              },
              " ",
              {
                caption: locale.syncNow,
                click: function () {
                  t.close(),
                    database.syncTrigger(function (e) {
                      e && $.alert(e);
                    });
                },
              },
              "-",
              "okay",
            ],
          });
          a();
          var i = setInterval(a, 1e3);
        }
        function o() {
          i && clearInterval(i), (i = null);
        }
        async function a() {
          var e = await database.getSyncState().catch((e) => ($.alert(e), {}));
          t.$content.html(
            '<div style="padding:0 16px"><p>' +
              htmlEscape(locale.syncSeq) +
              " " +
              e.seq +
              "</p><p>" +
              htmlEscape(locale.syncFilesToDownload) +
              ": " +
              e.syncFilesDownload +
              (e.syncFilesDownloadError
                ? " (" +
                  e.syncFilesDownloadError +
                  " " +
                  htmlEscape(locale.syncFilesFailed) +
                  ")"
                : "") +
              "</p><p>" +
              htmlEscape(locale.syncFilesToUpload) +
              ": " +
              e.syncFilesUpload +
              (e.syncFilesUploadError
                ? " (" +
                  e.syncFilesUploadError +
                  " " +
                  htmlEscape(locale.syncFilesFailed) +
                  ")"
                : "") +
              "</p>" +
              (database.syncError
                ? '<p style="color:red">' +
                  htmlEscape(String(database.syncError)) +
                  "</p>"
                : "") +
              "</div>"
          );
        }
      }),
      (st.prototype.popupSynchronizationProblems = function (e) {
        const t = {
          "file-download": "Save file as...",
          "file-delete": "Delete file",
          "file-rename": "Rename file...",
          "file-pull": "Download file",
          "file-push": "Upload file",
          "file-entry-add": "Synchronize",
          "file-entry-remove": "Remove from sync",
          "file-entry-pull": "Download again",
        };
        var i = database.schema.types,
          o = $.popdown({ head: locale.syncProblems, buttons: ["-", "okay"] }),
          a = "";
        a += '<div class="syncproblems">';
        var n = e.files;
        if (n && n.length) {
          a += '<div class="syncproblems-files">';
          for (var s = 0; s < n.length; s++) {
            var r = n[s],
              l = i[r.tid];
            (a +=
              '<div class="syncproblems-file" data-index="' +
              s +
              '"><div class="syncproblems-file-item"><div class="syncproblems-file-name">' +
              htmlEscape(l ? l.caption : r.tid) +
              htmlEscape(r.rid ? "/" + r.rid : "") +
              htmlEscape(r.name ? "/" + r.name : "") +
              '</div><div class="syncproblems-file-description">' +
              htmlEscape(r.size ? r.size + " byte " : "") +
              htmlEscape(r.err ? " - " + r.err : "") +
              "</div></div>"),
              (a += '<div class="syncproblems-file-actions">');
            var c = r.actions;
            c &&
              c.length &&
              (a +=
                '<div class="button i-32-24 i-grey i-setting-settings"></div>'),
              (a += "</div>"),
              (a += "</div>");
          }
          a += "</div>";
        } else a += htmlEscape(locale.fileSync + ": " + locale.noProblems);
        function d(e, t) {
          var i = $.popdown({
              head: locale.rename,
              buttons: [
                "-",
                "cancel",
                " ",
                { cls: "blue", caption: locale.rename, click: n },
              ],
            }),
            o = $(
              '<div class="component editor editor-string" style="width:100%">'
            ).appendTo(i.$content);
          $("<label>").text(locale.name).appendTo(o);
          var a = $('<input type="text">')
            .val(e.name)
            .appendTo($('<div class="stringeditor">').appendTo(o))
            .keydown(function (e) {
              13 === e.which && n(), 27 === e.which && s(!1);
            });
          function n() {
            var t = a.val();
            return e.name === t
              ? s(!1)
              : b.util.isValidFileName(t)
              ? ($.loading(!0),
                void database.renameFile(
                  e.tid + e.rid,
                  e.name,
                  t,
                  function (i) {
                    if (i)
                      return (
                        $.loading(!1), void $.alert(locale.couldntRenameFile)
                      );
                    e.fid
                      ? database.update(e.tid + e.rid, e.fid, t, function (e) {
                          $.loading(!1), e && $.alert(e), s(!0);
                        })
                      : ($.loading(!1), s(!0));
                  }
                ))
              : $.alert(locale.invalidFileName);
          }
          function s(e) {
            i.close(), t(e);
          }
        }
        function u(e) {
          var t = database.downloadURL(e.tid + e.rid, e.name);
          NinoxDocumentInteraction.saveFile(e.name, "", function (e, i) {
            if (e) return $.alert(e);
            i && localFileSystem.copyURL(t, i).catch((e) => $.alert(e));
          });
        }
        (a += "</div>"),
          o.$content.html(a),
          o.$content.touch(function (i) {
            var o = $(i.target).closest(".syncproblems-file"),
              a = o.attr("data-index");
            if (a) {
              var n = e.files[a];
              if (n) {
                var s = n.actions;
                if (s && s.length) {
                  var r = $.backplane({ close: closed }),
                    l = $('<div class="nx-menu-popup">').appendTo(r);
                  Q.each(s, function (e) {
                    $('<div class="nx-menu-item">')
                      .append($('<div class="nx-menu-label">').text(t[e] || e))
                      .appendTo(l)
                      .touch(function () {
                        r.close(),
                          "file-rename" === e
                            ? d(n, function (e) {
                                e && o.hide("fast");
                              })
                            : "file-download" === e
                            ? u(n)
                            : ($.loading(!0),
                              database.repairSynchronizationProblem(
                                n,
                                e,
                                function (e, t) {
                                  $.loading(!1),
                                    e ? $.alert(e) : t && o.hide("fast");
                                }
                              ));
                      });
                  });
                  var c = l.outerWidth(),
                    p = l.outerHeight(),
                    h = { left: i.clientX, top: i.clientY };
                  h.left + c > window.getWidth() &&
                    (h.left = window.getWidth() - c),
                    h.top + p > window.getHeight() &&
                      (h.top = window.getHeight() - p),
                    l.offset(h);
                }
              }
            }
          });
      }),
      (rt.$actions = void 0),
      (rt.$navs = void 0),
      (rt.$actionsSmall = void 0),
      (rt.$navsSmall = void 0),
      (rt.prototype.pushController = function (e) {
        this.controllers.unshift(e), this.updateUI();
      }),
      (rt.prototype.popController = function (e) {
        var t = this.controllers.indexOf(e);
        -1 !== t && this.controllers.splice(t, 1), this.updateUI();
      }),
      (rt.prototype.updateUI = function () {
        var e = this.controllers[0];
        ui.fullWidth <= 640
          ? ((this.$navsSmall[0].style.display = e ? "" : "none"),
            (this.$actionsSmall[0].style.display = e ? "" : "none"),
            (this.$actions[0].style.display = "none"),
            (this.$navs[0].style.display = "none"))
          : ((this.$navs[0].style.display =
              ui.fullWidth - ui.leftWidth < 800 || !e ? "none" : ""),
            (this.$actions[0].style.display = e ? "" : "none"),
            (this.$navsSmall[0].style.display = "none"),
            (this.$actionsSmall[0].style.display = "none"));
        var t = !(e && e.hasPrevRecord && e.hasPrevRecord()),
          i = !(e && e.hasNextRecord && e.hasNextRecord()),
          o = !(e && e.hasAddRecord && e.hasAddRecord()),
          a = !(e && e.hasDuplicateRecord && e.hasDuplicateRecord()),
          n = !(e && e.hasRemoveRecord && e.hasRemoveRecord()),
          s = !(e && e.hasPrintRecord && e.hasPrintRecord());
        this.$first.toggleClass("disabled", t),
          this.$prev.toggleClass("disabled", t),
          this.$next.toggleClass("disabled", i),
          this.$last.toggleClass("disabled", i),
          this.$add.toggleClass("disabled", o),
          this.$duplicate.toggleClass("disabled", a),
          this.$remove.toggleClass("disabled", n),
          this.$print.toggleClass("disabled", s),
          this.$firstSmall.toggleClass("disabled", t),
          this.$prevSmall.toggleClass("disabled", t),
          this.$nextSmall.toggleClass("disabled", i),
          this.$lastSmall.toggleClass("disabled", i),
          this.$addSmall.toggleClass("disabled", o),
          this.$duplicateSmall.toggleClass("disabled", a),
          this.$removeSmall.toggleClass("disabled", n),
          this.$printSmall.toggleClass("disabled", s),
          this.updateUndo();
      }),
      (rt.prototype.updateUndo = function () {
        this.$undo &&
          (this.$undo.toggleClass("disabled", !0),
          ui.undoManager.canExecUndo((e, t) => {
            e && console.log(e), this.$undo.toggleClass("disabled", !t);
          })),
          this.$redo &&
            (this.$redo.toggleClass("disabled", !0),
            ui.undoManager.canExecRedo((e, t) => {
              e && console.log(e), this.$redo.toggleClass("disabled", !t);
            }));
      }),
      (rt.prototype.first = function () {
        var e = this.controllers[0];
        e && e.firstRecord && e.firstRecord();
      }),
      (rt.prototype.last = function () {
        var e = this.controllers[0];
        e && e.lastRecord && e.lastRecord();
      }),
      (rt.prototype.prev = function () {
        var e = this.controllers[0];
        e &&
          e.hasPrevRecord &&
          e.hasPrevRecord() &&
          e.prevRecord &&
          e.prevRecord();
      }),
      (rt.prototype.next = function () {
        var e = this.controllers[0];
        e &&
          e.hasNextRecord &&
          e.hasNextRecord() &&
          e.nextRecord &&
          e.nextRecord();
      }),
      (rt.prototype.add = function () {
        Object(l.f)("Form", "CreateRecord");
        var e = this.controllers[0];
        e && e.hasAddRecord && e.hasAddRecord() && e.addRecord && e.addRecord();
      }),
      (rt.prototype.duplicate = function () {
        Object(l.f)("Form", "DuplicateRecord");
        var e = this.controllers[0];
        e &&
          e.hasDuplicateRecord &&
          e.hasDuplicateRecord() &&
          e.duplicateRecord &&
          e.duplicateRecord();
      }),
      (rt.prototype.remove = function () {
        Object(l.f)("Form", "DeleteRecord");
        var e = this.controllers[0];
        e &&
          e.hasRemoveRecord &&
          e.hasRemoveRecord() &&
          e.removeRecord &&
          e.removeRecord();
      }),
      (rt.prototype.print = function () {
        Object(l.f)("Form", "Print");
        var e = this.controllers[0];
        e &&
          e.hasPrintRecord &&
          e.hasPrintRecord() &&
          e.printRecord &&
          e.printRecord();
      }),
      (rt.prototype.resize = function () {
        this.updateUI();
      });
    var lt = o("./src/react/SimpleTabSelectionRow.tsx"),
      ct = o("./src/js/widgets/Field.js");
    const dt = {
      csvHeaderDefault: !0,
      csvFooterDefault: !1,
      csvSepHeaderDefault: !1,
      csvLinefeedDefault: "\r\n",
      csvQuoteDefault: '"',
      csvEncodingDefault: "utf8",
      csvDateFormatDefault: "locale",
      csvNumberFormatDefault: void 0,
      csvSeparatorDefault: void 0,
    };
    function ut() {
      void 0 === dt.csvNumberFormatDefault &&
        (NinoxDocumentInteraction.defaultDecimalSymbolIsComma()
          ? ((dt.csvNumberFormatDefault = "comma"),
            (dt.csvSeparatorDefault = ";"))
          : ((dt.csvNumberFormatDefault = "point"),
            (dt.csvSeparatorDefault = ",")));
    }
    function pt(e, t) {
      return null != e ? e : t;
    }
    function ht(e) {
      ut();
      var t = e.$container;
      function i() {
        e.onUpdate && e.onUpdate();
      }
      e.types &&
        ((this.csvType = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.chooseTypeToExport,
            values: e.types,
            formWidth: 1,
          })
        )),
        this.csvType.onUpdate(i),
        (this.csvTypeField = new ct.a(void 0, this.csvType, t))),
        (this.csvHeader = new util.SimpleModel(
          new schemas.TBoolean(void 0, void 0, {
            caption: locale.csvHeader,
            required: !0,
            formWidth: 1 / 3,
          })
        )),
        (this.csvHeader.value = pt(e.header, dt.csvHeaderDefault)),
        this.csvHeader.onUpdate(i),
        (this.csvHeaderField = new ct.a(void 0, this.csvHeader, t)),
        (this.csvSepHeader = new util.SimpleModel(
          new schemas.TBoolean(void 0, void 0, {
            caption: locale.csvSepHeader,
            required: !0,
            formWidth: 1 / 3,
          })
        )),
        (this.csvSepHeader.value = pt(e.sepHeader, dt.csvSepHeaderDefault)),
        this.csvSepHeader.onUpdate(i),
        (this.csvSepHeaderField = new ct.a(void 0, this.csvSepHeader, t)),
        (this.csvSeparator = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.csvSeparator,
            required: !0,
            formWidth: 1 / 3,
            values: {
              ",": { caption: ",", order: 1 },
              ";": { caption: ";", order: 2 },
              "|": { caption: "|", order: 3 },
              "\t": { caption: locale.csvSeparatorTab, order: 4 },
            },
          })
        )),
        (this.csvSeparator.value = pt(e.sep, dt.csvSeparatorDefault)),
        this.csvSeparator.onUpdate(i),
        (this.csvSeparatorField = new ct.a(void 0, this.csvSeparator, t)),
        (this.csvQuote = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.csvQuote,
            required: !0,
            formWidth: 1 / 3,
            values: { '"': { caption: '"' }, "'": { caption: "'" } },
          })
        )),
        (this.csvQuote.value = pt(e.qut, dt.csvQuoteDefault)),
        this.csvQuote.onUpdate(i),
        (this.csvQuoteField = new ct.a(void 0, this.csvQuote, t)),
        (this.csvLinefeed = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.csvLinefeed,
            required: !0,
            formWidth: 1 / 3,
            values: { "\r\n": { caption: "CRLF" }, "\n": { caption: "LF" } },
          })
        )),
        (this.csvLinefeed.value = pt(e.lf, dt.csvLinefeedDefault)),
        this.csvLinefeed.onUpdate(i),
        (this.csvLinefeedField = new ct.a(void 0, this.csvLinefeed, t)),
        (this.csvNumberFormat = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.csvNumberFormat,
            required: !0,
            formWidth: 1 / 3,
            values: {
              point: { caption: locale.csvNumberFormatPoint, order: 1 },
              comma: { caption: locale.csvNumberFormatComma, order: 2 },
              field: { caption: locale.csvNumberFormatField, order: 3 },
            },
          })
        )),
        (this.csvNumberFormat.value = pt(
          e.numberFormat,
          dt.csvNumberFormatDefault
        )),
        this.csvNumberFormat.onUpdate(i),
        (this.csvNumberFormatField = new ct.a(void 0, this.csvNumberFormat, t)),
        (this.csvDateFormat = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.csvDateFormat,
            required: !0,
            formWidth: 1 / 3,
            values: {
              locale: { caption: locale.csvDateFormatLocal, order: 1 },
              iso: { caption: "ISO 8601", order: 2 },
              gmt: { caption: "GMT", order: 3 },
              timestamp: { caption: "UNIX Timestamp", order: 4 },
            },
          })
        )),
        (this.csvDateFormat.value = pt(e.dateFormat, dt.csvDateFormatDefault)),
        this.csvDateFormat.onUpdate(i),
        (this.csvDateFormatField = new ct.a(void 0, this.csvDateFormat, t)),
        (this.csvEncoding = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.csvEncoding,
            required: !0,
            formWidth: 2 / 3,
            values: {
              utf8: { caption: "UTF-8 (Unicode)", order: 1 },
              utf16: { caption: "UTF-16 (Unicode)", order: 13 },
              ascii: { caption: "ASCII", order: 14 },
              "mac-roman": { caption: "Mac Roman", order: 2 },
              "windows-cp1252": { caption: "Windows Latin 1 CP1252", order: 3 },
              "windows-cp1250": { caption: "Windows Latin 2 CP1250", order: 4 },
              "windows-cp1251": {
                caption: "Windows Cyrillic CP1251",
                order: 5,
              },
              "windows-cp1253": { caption: "Windows Greek CP1253", order: 6 },
              "windows-cp1254": { caption: "Windows Turkish CP1254", order: 7 },
              "iso-latin1": { caption: "ISO Latin 1", order: 8 },
              "iso-latin2": { caption: "ISO Latin 2", order: 9 },
              "japanese-euc": { caption: "Japanese EUC", order: 10 },
              "japanese-shift": { caption: "Japanese SHIFT", order: 11 },
              "japanese-iso": { caption: "Japanese ISO", order: 12 },
            },
          })
        )),
        (this.csvEncoding.value = pt(e.encoding, dt.csvEncodingDefault)),
        this.csvEncoding.onUpdate(i),
        (this.csvEncodingField = new ct.a(void 0, this.csvEncoding, t));
    }
    function mt(e) {
      if (!database.authorizationExport) return $.alert(locale.notAuthorized);
      var t = $.popdown({ close: k }),
        i = t.$pane;
      Object(l.f)("DatabaseHomeExportData", "Open"),
        $('<div class="nx-section-head">').text(locale.exportData).appendTo(i);
      var o = $('<div class="nx-switch-big">').appendTo(i),
        a = $('<div class="nx-switch-big-item selected">')
          .text(locale.exportCSV)
          .appendTo(o),
        n = $('<div class="nx-section-pane">').appendTo(i),
        s = {},
        r = database.schema.types;
      for (var c in r)
        if (r.hasOwnProperty(c)) {
          var d = r[c];
          database.canRead(d) && (s[c] = d);
        }
      var u = new ht({ $container: n, types: s }),
        p = $('<div class="nx-button-bar">').appendTo(n);
      p.append(
        $('<div class="nx-button-text grey">').text(locale.cancel).touch(C)
      ),
        p.append($('<div class="nx-hspace-flex">')),
        p.append($('<div class="nx-hspace-small">')),
        p.append(
          $('<div class="nx-button-text blue">')
            .text(locale.csvExportOpen)
            .touch(T)
        );
      var h,
        m = $('<div class="nx-switch-big-item">')
          .text(locale.exportXLS)
          .appendTo(o),
        f = $('<div class="nx-section-pane">').hide().appendTo(i),
        g = $(
          '<div class="nx-list" style="padding:0 16px;height:204px;overflow-x:hidden;overflow-y:auto">'
        ).appendTo($('<div class="nx-list-container">').appendTo(f));
      if (tables.xlsExportTids) {
        h = {};
        for (var v = 0; v < tables.xlsExportTids.length; v++)
          h[tables.xlsExportTids[v]] = !0;
      }
      Q.each(util.localeSortBy(s, "caption"), function (e) {
        $('<div style="line-height:32px">')
          .append(
            $(
              '<input type="checkbox"' +
                (void 0 === h || h[e.id] ? ' checked="checked"' : "") +
                ">"
            ).data("tid", e.id)
          )
          .append($("<label>").text(e.caption))
          .appendTo(g);
      });
      var b = $('<div class="nx-button-bar">').appendTo(f);
      function y() {
        var e = [],
          t = g.find("input:checked");
        return (
          Q.each(t, function (t) {
            e.push($(t).data("tid"));
          }),
          e
        );
      }
      function w() {
        tables.xlsExportTids = y();
      }
      async function x() {
        try {
          var e;
          w(),
            (e =
              "data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64," +
              (await ft(tables.xlsExportTids))),
            window.open(e);
        } catch (e) {
          $.alert(e);
        }
      }
      async function T() {
        try {
          var e = u.getType();
          if (!e) return $.alert(locale.chooseTypeToExport);
          var t = database.schema.types[e];
          if (!t) return $.alert(locale.chooseTypeToExport);
          Object(l.f)("ExportData", "DatabaseHomeCSVOpen"),
            u.saveCSVExportOptions();
          var i,
            o = u.getCSVExportOptions();
          (i = "data:text/csv;charset=utf-8," + (await gt(t, o))),
            window.open(i);
        } catch (e) {
          return $.alert(e);
        }
      }
      function C() {
        t.close(k);
      }
      function k() {
        u.destroy();
      }
      b.append(
        $('<div class="nx-button-text grey">').text(locale.cancel).touch(C)
      ),
        b.append($('<div class="nx-hspace-flex">')),
        b.append($('<div class="nx-hspace-small">')),
        b.append(
          $('<div class="nx-button-text blue">')
            .text(locale.xlsExportOpen)
            .touch(x)
        ),
        a.touch(function () {
          a.addClass("selected"), m.removeClass("selected"), n.show(), f.hide();
        }),
        m.touch(function () {
          a.removeClass("selected"), m.addClass("selected"), n.hide(), f.show();
        });
    }
    async function ft(e) {
      for (var t = [], i = 0; i < e.length; i++) {
        var o = e[i],
          a = database.schema.types[o];
        a && database.canRead(a) && t.push(await n(a));
      }
      return xlsx({ worksheets: t }).base64;
      async function n(e) {
        var t,
          i = e.sorted,
          o = [],
          a = [],
          n = [];
        a.push(n), n.push({ value: "Id", autoWidth: !0 });
        var r,
          l,
          c,
          d = { id: !0 };
        for (l = 0; l < i.length; l++)
          if (
            (((t = i[l]).isField && "fn" !== t.base) || t.isReference) &&
            database.canRead(t)
          ) {
            o.push(t);
            for (
              var u = util.escapeXLSColumnHead(t.caption, l), p = u, h = 2;
              d[p.toLocaleLowerCase()];
              h++
            )
              p = u + h;
            (d[p.toLocaleLowerCase()] = !0),
              n.push({ value: p, autoWidth: !0 });
          }
        var m = e.id,
          f = await database.getRowIds(m);
        if (f && f.length)
          for (
            f.sort(function (e, t) {
              return e - t;
            }),
              await s(f.map((e) => m + e)),
              r = 0;
            r < f.length;
            r++
          ) {
            var g = f[r],
              v = database.loadNodeSync2(m, g);
            for (n = [], a.push(n), n.push(g), l = 0; l < o.length; l++)
              if ((t = o[l]).isReference)
                (c = null == (c = v[t.id]) || "" === c ? "" : parseInt(c)),
                  n.push(c);
              else {
                switch (((c = v[t.id]), t.base)) {
                  case "number":
                    break;
                  case "date":
                  case "timestamp":
                    null != c && (c = new Date(c));
                    break;
                  case "datx":
                    null != c &&
                      ((c = new Date(c)),
                      (c = new Date(
                        c.getUTCFullYear(),
                        c.getUTCMonth(),
                        c.getUTCDate()
                      )));
                    break;
                  case "html":
                    c = c ? String(c) : "";
                    break;
                  default:
                    c = t.format(c);
                }
                null == c && (c = ""), n.push(c);
              }
          }
        else for (n = [], a.push(n), l = 0; l < i.length; l++) n[l] = "";
        return {
          table: !0,
          name: util.escapeFileName(e.caption).substr(0, 30),
          data: a,
        };
      }
      function s(e) {
        return new Promise((t, i) => {
          database.loadNodes(e, () => {
            t();
          });
        });
      }
    }
    async function gt(e, t) {
      var i,
        o,
        a,
        n = e.sorted,
        s = [],
        r = t.sep || ",",
        l = (new RegExp("\\" + r, "g"), t.lf || "\r\n"),
        c = t.qut || '"',
        d = new RegExp("\\" + c, "g"),
        u = (t.encoding, t.numberFormat || "point"),
        p = t.dateFormat || "locale",
        h = t.header || !0,
        m = "";
      if (((t.sepHeader || !1) && (m += "sep=" + r + l), h)) {
        for (m += "Id", a = 0; a < n.length; a++)
          (i = n[a]).isField &&
            "fn" !== i.base &&
            database.canRead(i) &&
            (s.push(i), (m += r + w(i.caption)));
        m += l;
      }
      var f = e.id,
        g = await database.getRowIds(f);
      if (g)
        for (
          g.sort(function (e, t) {
            return e - t;
          }),
            o = 0;
          o < g.length;
          o++
        ) {
          var v = g[o],
            b = database.loadNodeSync2(f, v);
          for (m += v, a = 0; a < s.length; a++) {
            var y = b[(i = s[a]).id];
            switch (i.base) {
              case "number":
                y = x(y);
                break;
              case "date":
                y = T(y);
                break;
              case "datx":
                y = C(y);
                break;
              case "timestamp":
                y = k(y);
                break;
              case "html":
                y = y ? String(y) : "";
                break;
              default:
                y = i.format(y);
            }
            null == y && (y = ""), (m += r + w(y));
          }
          m += l;
        }
      return m;
      function w(e) {
        return null == e
          ? ""
          : ("string" != typeof e && (e = String(e)),
            -1 !== e.indexOf(c) || -1 !== e.indexOf(r) || -1 !== e.indexOf("\n")
              ? c + e.replace(d, c + c) + c
              : e);
      }
      function x(e, t) {
        if (null == e || "number" != typeof e || isNaN(e)) return "";
        switch (u) {
          case "field":
            return t.format(e);
          case "comma":
            return String(e).replace(".", ",");
          default:
            return String(e);
        }
      }
      function T(e) {
        switch (p) {
          case "iso":
            return util.formatISODate(e);
          case "gmt":
            return null == e ? "" : new Date(e).toString();
          case "timestamp":
            return null == e ? "" : String(e);
          default:
            return util.formatLocaleDate(e);
        }
      }
      function C(e) {
        switch (p) {
          case "iso":
            return util.formatISODatx(e);
          case "gmt":
            return null == e ? "" : new Date(e).toString();
          case "timestamp":
            return null == e ? "" : String(e);
          default:
            return util.formatLocaleDatx(e);
        }
      }
      function k(e) {
        switch (p) {
          case "iso":
            return util.formatISODateTime(e);
          case "gmt":
            return null == e ? "" : new Date(e).toString();
          case "timestamp":
            return null == e ? "" : String(e);
          default:
            return util.formatLocaleDateTime(e);
        }
      }
    }
    (ht.prototype.destroy = function () {
      this.csvTypeField && this.csvTypeField.destroy(),
        this.csvHeaderField.destroy(),
        this.csvSepHeaderField.destroy(),
        this.csvSeparatorField.destroy(),
        this.csvQuoteField.destroy(),
        this.csvLinefeedField.destroy(),
        this.csvNumberFormatField.destroy(),
        this.csvDateFormatField.destroy(),
        this.csvEncodingField.destroy();
    }),
      (ht.prototype.getType = function () {
        return this.csvType ? this.csvType.value : void 0;
      }),
      (ht.prototype.getCSVExportOptions = function () {
        return {
          sep: this.csvSeparator.value,
          qut: this.csvQuote.value,
          lf: this.csvLinefeed.value,
          numberFormat: this.csvNumberFormat.value,
          dateFormat: this.csvDateFormat.value,
          header: this.csvHeader.value,
          sepHeader: this.csvSepHeader.value,
          encoding: this.csvEncoding.value,
        };
      }),
      (ht.prototype.saveCSVExportOptions = function () {
        (dt.csvHeaderDefault = this.csvHeader.value),
          (dt.csvSepHeaderDefault = this.csvSepHeader.value),
          (dt.csvLinefeedDefault = this.csvLinefeed.value),
          (dt.csvSeparatorDefault = this.csvSeparator.value),
          (dt.csvQuoteDefault = this.csvQuote.value),
          (dt.csvEncodingDefault = this.csvEncoding.value),
          (dt.csvDateFormatDefault = this.csvDateFormat.value),
          (dt.csvNumberFormatDefault = this.csvNumberFormat.value);
      });
    o("./node_modules/core-js/modules/web.url.to-json.js");
    const vt = {
      importCSVEncodingDefault: "utf8",
      importCSVHeaderDefault: !0,
      importCSVQuoteDefault: '"',
      importCSVSeparatorDefault: void 0,
      importCSVNumberFormatDefault: void 0,
      importCSVDateFormatDefault: "auto",
      importTypeDefault: void 0,
      importModeDefault: "all",
      importAmbiguousDefault: "skip",
    };
    function bt(e) {
      void 0 === vt.importCSVNumberFormatDefault &&
        (NinoxDocumentInteraction.defaultDecimalSymbolIsComma()
          ? ((vt.importCSVNumberFormatDefault = "comma"),
            (vt.importCSVSeparatorDefault = ";"))
          : ((vt.importCSVNumberFormatDefault = "point"),
            (vt.importCSVSeparatorDefault = ",")));
      var t = null,
        i = null,
        o = "",
        a = [],
        n = [],
        s = [],
        r = !1,
        c = null,
        d = null,
        u = null;
      function p() {
        return database
          ? h()
          : $.alert(
              "Please open a database. Then try again to open a CSV file with Ninox to import it into that database."
            );
      }
      function h() {
        if (!database.authorizationImport) return $.alert(locale.notAuthorized);
        if (e.url) return (i = e.url), void setTimeout(m, 0);
        var o = $.popdown(),
          a = o.$pane;
        (t = null),
          (i = null),
          $('<div class="nx-section-head">')
            .text(locale.importData)
            .appendTo(a);
        var n = $.tabs({ $parent: a, tabs: [{ caption: "CSV" }] });
        {
          var s = $('<div class="editor center" style="width:100%">').appendTo(
            n.tabs[0].$pane
          );
          const e = $('<div class="import-choose-from">')
            .text(locale.importChooseCSVFile)
            .appendTo(s);
          $('<input type="file" class="import-assistant-file">')
            .appendTo(e)
            .touch(() => Object(l.f)("ImportData", "ChooseCSV"))
            .change(r);
        }
        function r(e) {
          Object(l.f)("ImportData", "FileSelected");
          var o = e.target.files;
          if (o && 0 !== o.length) {
            if (o.length > 1) return $.alert(locale.importTooManyFilesSelected);
            (t = o[0]), (i = null), c();
          }
        }
        function c() {
          Object(l.f)("ImportData", "ChooseSourceConfirm"),
            d(),
            setTimeout(m, 0);
        }
        function d() {
          o.close();
        }
        $('<div class="nx-button-bar">')
          .appendTo(n.tabs[0].$pane)
          .append(
            $('<div class="nx-button-text grey">').text(locale.cancel).touch(d)
          );
      }
      function m() {
        var t = $.popdown(),
          i = t.$pane;
        $('<div class="nx-section-head">')
          .text(locale.importSourceSettings)
          .appendTo(i);
        var o = $('<div class="nx-section-pane">').appendTo(i),
          a = new b.util.SimpleModel(
            new schemas.TChoice(void 0, void 0, {
              caption: locale.csvEncoding,
              required: !0,
              formWidth: 2 / 3,
              values: {
                utf8: { caption: "UTF-8 (Unicode)", order: 1 },
                utf16: { caption: "UTF-16 (Unicode)", order: 13 },
                ascii: { caption: "ASCII", order: 14 },
                "mac-roman": { caption: "Mac Roman", order: 2 },
                "windows-cp1252": {
                  caption: "Windows Latin 1 CP1252",
                  order: 3,
                },
                "windows-cp1250": {
                  caption: "Windows Latin 2 CP1250",
                  order: 4,
                },
                "windows-cp1251": {
                  caption: "Windows Cyrillic CP1251",
                  order: 5,
                },
                "windows-cp1253": { caption: "Windows Greek CP1253", order: 6 },
                "windows-cp1254": {
                  caption: "Windows Turkish CP1254",
                  order: 7,
                },
                "iso-latin1": { caption: "ISO Latin 1", order: 8 },
                "iso-latin2": { caption: "ISO Latin 2", order: 9 },
                "japanese-euc": { caption: "Japanese EUC", order: 10 },
                "japanese-shift": { caption: "Japanese SHIFT", order: 11 },
                "japanese-iso": { caption: "Japanese ISO", order: 12 },
              },
            })
          );
        a.value = vt.importCSVEncodingDefault;
        new ct.a(void 0, a, o);
        var n = new b.util.SimpleModel(
          new schemas.TBoolean(void 0, void 0, {
            caption: locale.importHeader,
            booleanDefault: !0,
            required: !0,
            formWidth: 1 / 3,
          })
        );
        n.value = vt.importCSVHeaderDefault;
        new ct.a(void 0, n, o);
        var s = new b.util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.csvSeparator,
            required: !0,
            formWidth: 1 / 4,
            values: {
              ",": { caption: ",", order: 1 },
              ";": { caption: ";", order: 2 },
              "|": { caption: "|", order: 3 },
              "\t": { caption: locale.csvSeparatorTab, order: 4 },
            },
          })
        );
        s.value = vt.importCSVSeparatorDefault;
        new ct.a(void 0, s, o);
        var u = new b.util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.csvQuote,
            required: !0,
            formWidth: 1 / 4,
            values: { '"': { caption: '"' }, "'": { caption: "'" } },
          })
        );
        u.value = vt.importCSVQuoteDefault;
        new ct.a(void 0, u, o);
        var p = new b.util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.csvNumberFormat,
            required: !0,
            formWidth: 1 / 4,
            values: {
              point: { caption: locale.csvNumberFormatPoint, order: 1 },
              comma: { caption: locale.csvNumberFormatComma, order: 2 },
            },
          })
        );
        p.value = vt.importCSVNumberFormatDefault;
        new ct.a(void 0, p, o);
        var m = new b.util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.csvDateFormat,
            required: !0,
            formWidth: 1 / 4,
            values: {
              auto: { caption: "auto", order: 1 },
              "YYYY-MM-DD": { caption: "YYYY-MM-DD", order: 2 },
              "DD/MM/YY": { caption: "DD/MM/YY", order: 3 },
              "DD/MM/YYYY": { caption: "DD/MM/YYYY", order: 4 },
              "MM/DD/YY": { caption: "MM/DD/YY", order: 5 },
              "MM/DD/YYYY": { caption: "MM/DD/YYYY", order: 6 },
              "MMM, DD YYYY": { caption: "MMM, DD YYYY", order: 7 },
              "DD.MM.YYYY": { caption: "DD.MM.YYYY", order: 8 },
            },
          })
        );
        m.value = vt.importCSVDateFormatDefault;
        new ct.a(void 0, m, o);
        $('<div class="nx-section-head">')
          .text(locale.importTargetSettings)
          .appendTo(i),
          (o = $('<div class="nx-section-pane">').appendTo(i));
        var y = {};
        database.isAdminEnabled() &&
          (y["#new#"] = {
            id: "#new#",
            caption: locale.importCreateTable,
            order: -1,
          }),
          Q.each(
            b.util.localeSortBy(database.schema.types, "caption"),
            function (e, t) {
              y[e.id] = { id: e.id, caption: e.caption, oder: t };
            }
          );
        var x = new b.util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.importTable,
            required: !0,
            formWidth: 1,
            values: y,
          })
        );
        y[vt.importTypeDefault] || (vt.importTypeDefault = "#new#"),
          (x.value = e.tid || vt.importTypeDefault),
          database.isAdminEnabled() ||
            "#new#" !== x.value ||
            (x.value = void 0);
        new ct.a(void 0, x, o);
        var T = new b.util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.importMode,
            required: !0,
            formWidth: 2 / 3,
            values: {
              all: { id: "all", caption: locale.importModeAll },
              new: { id: "new", caption: locale.importModeNew },
              update: { id: "update", caption: locale.importModeUpdate },
            },
          })
        );
        T.value = vt.importModeDefault;
        new ct.a(void 0, T, o);
        var C = new b.util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.importAmbiguous,
            required: !0,
            formWidth: 1 / 3,
            values: {
              skip: { id: "skip", caption: locale.importAmbiguousSkip },
              updateAll: {
                id: "updateAll",
                caption: locale.importAmbiguousUpdateAll,
              },
            },
          })
        );
        C.value = vt.importAmbiguousDefault;
        new ct.a(void 0, C, o);
        var k = $('<div class="nx-button-bar">').appendTo(o);
        function S() {
          (vt.importCSVEncodingDefault = a.value),
            (vt.importCSVHeaderDefault = n.value),
            (vt.importCSVSeparatorDefault = s.value),
            (vt.importCSVQuoteDefault = u.value),
            (vt.importCSVNumberFormatDefault = p.value),
            (vt.importCSVDateFormatDefault = m.value),
            (vt.importTypeDefault = x.value),
            (vt.importModeDefault = T.value),
            (vt.importAmbiguousDefault = C.value);
        }
        function _() {
          S(), t.close(), setTimeout(h, 0);
        }
        function E() {
          if (
            (Object(l.f)("Import CSV", "DataSource&ImportSettingsNext"),
            !y[x.value])
          )
            return $.alert(locale.importTable);
          S(),
            $.loading(!0),
            setTimeout(function () {
              f(function (e) {
                if (e)
                  return (
                    $.loading(!1),
                    "InvalidEncoding" === e && (e = locale.invalidEncoding),
                    $.alert(e)
                  );
                g(function (e) {
                  if (($.loading(!1), e)) return $.alert(e);
                  if ((t.close(), "#new#" === x.value)) setTimeout(w, 0);
                  else {
                    if (
                      ((r = !1), (c = database.schema), !(d = c.types[x.value]))
                    )
                      return $.alert(locale.errorTypeNotFound);
                    setTimeout(v, 0);
                  }
                });
              });
            }, 0);
        }
        function D() {
          t.close();
        }
        $('<div class="nx-button-text grey">')
          .text(locale.cancel)
          .appendTo(k)
          .touch(D),
          $('<div class="nx-hspace-flex">').appendTo(k),
          $('<div class="nx-button-text grey">')
            .text(locale.back)
            .appendTo(k)
            .touch(_),
          $('<div class="nx-hspace-small">').appendTo(k),
          $('<div class="nx-button-text blue">')
            .text(locale.next)
            .appendTo(k)
            .touch(E);
      }
      async function f(e) {
        if (i)
          try {
            const t = await localFileSystem.readURL(
              i,
              vt.importCSVEncodingDefault
            );
            (o = t), e();
          } catch (t) {
            e(t);
          }
        else if (t) {
          var a = {
            utf8: "utf-8",
            utf16: "UTF-16",
            ascii: "ASCII",
            "mac-roman": "mac",
            "windows-cp1252": "windows-1252",
            "windows-cp1250": "windows-1250",
            "windows-cp1251": "windows-1251",
            "windows-cp1253": "windows-1253",
            "windows-cp1254": "windows-1254",
            "iso-latin1": "iso-8859-1",
            "iso-latin2": "iso-8859-2",
            "japanese-euc": "euc-jp",
            "japanese-shift": "csshiftjis",
            "japanese-iso": "iso-2022-jp",
          }[vt.importCSVEncodingDefault];
          a || (a = "utf-8");
          var n = new FileReader();
          (n.onerror = function () {
            e(n.error);
          }),
            (n.onloadend = function (t) {
              (o = n.result), e();
            }),
            n.readAsText(t, a);
        } else $.alert("Nothing to import.");
      }
      function g(e) {
        if (
          !(a = b.util.parseCSV(o, {
            sep: vt.importCSVSeparatorDefault,
            qut: vt.importCSVQuoteDefault,
          })) ||
          a.length < 1
        )
          return e(locale.importNoDataFound);
        vt.importCSVHeaderDefault
          ? ((n = a[0]), (s = a.slice(1)))
          : ((n = []), (s = a));
        for (var t = 0, i = 0; i < s.length; i++) t = Math.max(t, s[i].length);
        for (i = 0; i < t; i++) n[i] || (n[i] = locale.column + (i + 1));
        e();
      }
      function v() {
        for (
          var e = $('<div class="nx-backplane nx-backplane-dark">').appendTo(
              $(document.body)
            ),
            t = $('<div class="import2-pane">').appendTo(e),
            i = new schemas.TChoice(void 0, void 0, {
              width: 1,
              required: !0,
              values: {
                "key-exact": {
                  id: "key-exact",
                  caption: locale.importFieldModeKeyExact,
                },
                "update-always": {
                  id: "update-always",
                  caption: locale.importFieldModeUpdateAlways,
                },
                "update-empty": {
                  id: "update-empty",
                  caption: locale.importFieldModeUpdateEmpty,
                },
              },
            }),
            o = {},
            a = [],
            s = [],
            r = [],
            c = y(!1),
            p = 0;
          p < n.length;
          p++
        ) {
          (r[p] = {
            index: p,
            caption: n[p],
            base: c[p],
            importFieldModeModel: new b.util.SimpleModel(i, "update-always"),
          }).importFieldModeModel.withoutLabel = !0;
        }
        window.getHeight();
        var h = $(
            '<div class="popupeditor panel centered width-768 fullheight">'
          )
            .appendTo(t)
            .droppable({ accept: ".import-available-field", drop: k }),
          f = $('<div class="pane import-fields-pane">').appendTo(h);
        $("<h1>").text(locale.importFields).appendTo(f);
        var g = $(
            '<div style="position:absolute;top:32px;left:0;right:0;bottom:0;overflow:auto">'
          ).appendTo(f),
          v = $('<div class="pane import-availables-pane">').appendTo(h);
        $("<h1>").text(locale.importAvailableFields).appendTo(v);
        var w = $(
            '<div class="import-availables" style="position:absolute;top:48px;left:0;right:0;bottom:0;overflow:auto">'
          ).appendTo(v),
          T = $(
            '<div class="nx-button-bar" style="position:absolute;left:16px;bottom:8px;right:16px;height:32px">'
          ).appendTo(h);
        function C() {
          for (var e = d.sorted, t = 0; t < r.length; t++) {
            var i = r[t];
            if (!a[i.index])
              for (var n = 0; n < e.length; n++) {
                var s = e[n];
                s.isField &&
                  database.canWrite(s) &&
                  void 0 === o[s.id] &&
                  It(i.caption, s.caption) &&
                  ((a[i.index] = s.id), (o[s.id] = i.index));
              }
          }
        }
        function k(e, t) {
          $(e.target);
          var i = t.draggable.data("col");
          if (i) {
            var n = a[i.index];
            n &&
              (delete a[i.index],
              delete s[i.index],
              delete o[n],
              setTimeout(_, 0));
          }
        }
        function S(e, t) {
          var i = $(e.target),
            n = t.draggable,
            r = i.closest(".import-col").data("col");
          if (r) {
            var l = n.data("field");
            if (l) {
              var c = n.data("refField"),
                d = n.data("col");
              if (d) {
                a[d.index];
                delete a[d.index], delete s[d.index], delete o[l.id];
              }
              var u = a[r.index];
              u && (delete a[r.index], delete s[r.index], delete o[u]),
                (a[r.index] = l.id),
                c && (s[r.index] = c.id),
                (o[l.id] = r.index),
                "_id" !== l.id ||
                  c ||
                  r.importFieldModeModel.setValue("key-exact"),
                setTimeout(_, 0);
            }
          }
        }
        function _() {
          E(), D();
        }
        function E() {
          g.empty();
          var e = {
              greedy: !0,
              accept: ".import-available-field",
              hoverClass: "hover",
              drop: S,
            },
            t = { helper: "clone", appendTo: $(document.body), zIndex: 1e3 };
          Q.each(r, function (i) {
            var o = $('<div class="import-col">').data("col", i).appendTo(g);
            $(`<div class="import-col-source-assign" title="${i.caption}">`)
              .append(
                $(
                  '<div class="t-columneditor-label type-symbol-grey">'
                ).addClass("type-symbol-" + (i.base || "string"))
              )
              .append($('<div class="t-columneditor-label">').text(i.caption))
              .appendTo(o);
            $('<div class="import-col-arrow">').appendTo(o);
            var n = $('<div class="import-col-target-assign">')
              .appendTo(o)
              .droppable(e);
            if (d) {
              var r = a[i.index];
              if (r) {
                var l = "_id" === r ? d.field_id : d.fields[r];
                if (l)
                  if ("_id" === r)
                    $(
                      '<div class="import-available-field t-columneditor-column">'
                    )
                      .data("field", l)
                      .data("col", i)
                      .appendTo(n)
                      .append(
                        $(
                          '<div class="t-columneditor-label type-symbol-grey">'
                        ).addClass("type-symbol-" + l.base)
                      )
                      .append(
                        $('<div class="t-columneditor-label">').text(l.caption)
                      )
                      .draggable(t);
                  else if (l.isField) {
                    $(
                      '<div class="import-available-field t-columneditor-column">'
                    )
                      .data("field", l)
                      .data("col", i)
                      .appendTo(n)
                      .append(
                        $(
                          '<div class="t-columneditor-label type-symbol-grey">'
                        ).addClass("type-symbol-" + l.base)
                      )
                      .append(
                        $('<div class="t-columneditor-label">').text(l.caption)
                      )
                      .draggable(t);
                    new ct.a(void 0, i.importFieldModeModel, o).el.css(
                      "width",
                      150
                    );
                  } else if (l.isReference) {
                    var c = s[i.index],
                      u = l.refType,
                      p = "_id" === c ? u.field_id : u.fields[c];
                    if (p) {
                      $(
                        '<div class="import-available-field t-columneditor-column">'
                      )
                        .data("field", l)
                        .data("refField", p)
                        .data("col", i)
                        .appendTo(n)
                        .append(
                          $(
                            '<div class="t-columneditor-label type-symbol-grey">'
                          ).addClass("type-symbol-" + l.base)
                        )
                        .append(
                          $('<div class="t-columneditor-label">').text(
                            l.caption + " (" + p.caption + ")"
                          )
                        )
                        .draggable(t);
                      new ct.a(void 0, i.importFieldModeModel, o).el.css(
                        "width",
                        150
                      );
                    }
                  }
              }
            }
          });
        }
        function D() {
          w.empty();
          var e = { helper: "clone", appendTo: $(document.body), zIndex: 1e3 };
          void 0 === o._id &&
            $('<div class="import-available-field t-columneditor-column">')
              .data("field", d.field_id)
              .appendTo(w)
              .append(
                $(
                  '<div class="t-columneditor-label type-symbol-grey">'
                ).addClass("type-symbol-" + d.field_id.base)
              )
              .append(
                $('<div class="t-columneditor-label">').text(d.field_id.caption)
              )
              .draggable(e),
            Q.each(d.sorted, function (t) {
              if (t.isField && database.canWrite(t)) {
                if (void 0 === o[t.id])
                  var i = $(
                    '<div class="import-available-field t-columneditor-column">'
                  )
                    .data("field", t)
                    .appendTo(w)
                    .append(
                      $(
                        '<div class="t-columneditor-label type-symbol-grey">'
                      ).addClass("type-symbol-" + t.base)
                    )
                    .append(
                      $('<div class="t-columneditor-label">').text(t.caption)
                    )
                    .draggable(e);
              } else if (
                t.isReference &&
                database.canWrite(t) &&
                void 0 === o[t.id]
              ) {
                var a = t.refType,
                  n =
                    ((i = $(
                      '<div class="import-available-field t-columneditor-column expandable">'
                    )
                      .data("field", t)
                      .appendTo(w)),
                    $(
                      '<div class="t-columneditor-label icon-big-black icon-big-expand">'
                    ).appendTo(i));
                $('<div class="t-columneditor-label">')
                  .text(t.caption)
                  .appendTo(i);
                var s = $('<div style="padding-left:32px">').hide().appendTo(w);
                $('<div class="import-available-field t-columneditor-column">')
                  .data("field", t)
                  .data("refField", a.field_id)
                  .appendTo(s)
                  .append(
                    $(
                      '<div class="t-columneditor-label type-symbol-grey">'
                    ).addClass("type-symbol-" + t.base)
                  )
                  .append(
                    $('<div class="t-columneditor-label">').text(
                      a.field_id.caption
                    )
                  )
                  .draggable(e),
                  Q.each(a.sorted, function (i) {
                    ("number" !== i.base && "string" !== i.base) ||
                      $(
                        '<div class="import-available-field t-columneditor-column">'
                      )
                        .data("field", t)
                        .data("refField", i)
                        .appendTo(s)
                        .append(
                          $(
                            '<div class="t-columneditor-label type-symbol-grey">'
                          ).addClass("type-symbol-" + i.base)
                        )
                        .append(
                          $('<div class="t-columneditor-label">').text(
                            i.caption
                          )
                        )
                        .draggable(e);
                  }),
                  i.click(function () {
                    s.toggle(),
                      n.toggleClass("icon-big-expand icon-big-collapse");
                  });
              }
            });
        }
        function N() {
          e.remove(), setTimeout(m, 0);
        }
        function M() {
          Object(l.f)("ImportData", "FieldsNext"), (u = []);
          for (var t = 0; t < r.length; t++) {
            var i = r[t],
              o = a[i.index];
            if (o) {
              var n = "_id" === o ? d.field_id : d.fields[o];
              if (
                ("_id" === o &&
                  u.push({ index: t, field: n, mode: "key-exact" }),
                n.isField)
              )
                u.push({
                  index: t,
                  field: n,
                  mode: i.importFieldModeModel.value,
                });
              else if (n.isReference) {
                var c = n.refType,
                  p = s[i.index],
                  h = "_id" === p ? c.field_id : c.fields[p];
                h &&
                  u.push({
                    index: t,
                    field: n,
                    refField: h,
                    mode: i.importFieldModeModel.value,
                  });
              }
            }
          }
          e.remove(), setTimeout(x, 0);
        }
        function I() {
          e.remove();
        }
        $('<div class="nx-button-text grey">')
          .text(locale.cancel)
          .appendTo(T)
          .touch(I),
          $('<div class="nx-hspace-flex">').appendTo(T),
          $('<div class="nx-button-text grey">')
            .text(locale.back)
            .appendTo(T)
            .touch(N),
          $('<div class="nx-hspace-small">').appendTo(T),
          $('<div class="nx-button-text blue">')
            .text(locale.next)
            .appendTo(T)
            .touch(M),
          C(),
          _();
      }
      function y(e) {
        for (var t = [], i = 0; i < n.length; i++)
          for (
            var o = (t[i] = {
                boolean: !0,
                number: !0,
                date: !0,
                timestamp: !0,
                multiline: !1,
              }),
              a = 0;
            a < s.length && a < 100;
            a++
          ) {
            var r = s[a][i];
            "" !== r &&
              null != r &&
              (o.boolean && void 0 === yt(r) && (o.boolean = !1),
              o.number &&
                !xt(r, vt.importCSVNumberFormatDefault) &&
                (o.number = !1),
              o.date && !1 === Et(r) && (o.date = !1),
              o.timestamp && !1 === St(r) && (o.timestamp = !1),
              !o.multiline && /[\r\n]/.test(r) && (o.multiline = !0));
          }
        var l = [];
        for (i = 0; i < t.length; i++) {
          o = t[i];
          l[i] = o.number
            ? "number"
            : o.boolean
            ? "boolean"
            : o.date
            ? "datx"
            : o.timestamp
            ? "timestamp"
            : e && o.multiline
            ? "string-multiline"
            : "string";
        }
        return l;
      }
      function w() {
        (r = !0), (c = database.schema.clone()), (d = null);
        var e = $('<div class="nx-backplane nx-backplane-dark">').appendTo(
            $(document.body)
          ),
          o = $('<div class="import2-pane">').appendTo(e),
          a = $(
            '<div class="popupeditor pane centered width-3col fullheight">'
          ).appendTo(o),
          s = $("<div>").appendTo(a),
          p = new b.util.SimpleModel(
            new schemas.TString(void 0, void 0, {
              caption: locale.enterTableName,
              required: !0,
              formWidth: 1,
            })
          );
        if (i) {
          var h = /\/([^\/\?\.]+)(?:\.[^\?\/]*)?(?:\?.*)?$/.exec(i);
          h && (p.value = decodeURIComponent(h[1]));
        } else t && (p.value = t.name);
        new ct.a(void 0, p, s);
        for (
          var f = $('<div class="import-assistant-fields">').appendTo(a),
            g = new schemas.TChoice(void 0, void 0, {
              formWidth: 1,
              required: !0,
              values: {
                string: {
                  id: "string",
                  caption: locale.types.string,
                  order: 1,
                },
                "string-multiline": {
                  id: "string-multiline",
                  caption: locale.types.string_multiline,
                  order: 1.5,
                },
                html: { id: "html", caption: locale.types.html, order: 2 },
                number: {
                  id: "number",
                  caption: locale.types.number,
                  order: 3,
                },
                boolean: {
                  id: "boolean",
                  caption: locale.types.boolean,
                  order: 4,
                },
                choice: {
                  id: "choice",
                  caption: locale.types.choice,
                  order: 5,
                },
                date: { id: "date", caption: locale.types.date, order: 6 },
                time: { id: "time", caption: locale.types.time, order: 8 },
                timestamp: {
                  id: "timestamp",
                  caption: locale.types.timestamp,
                  order: 9,
                },
                timeinterval: {
                  id: "timeinterval",
                  caption: locale.types.timeinterval,
                  order: 10,
                },
                appointment: {
                  id: "appointment",
                  caption: locale.types.appointment,
                  order: 11,
                },
                link: { id: "link", caption: locale.types.link, order: 12 },
                email: { id: "email", caption: locale.types.email, order: 13 },
                phone: { id: "phone", caption: locale.types.phone, order: 14 },
                location: {
                  id: "location",
                  caption: locale.types.location,
                  order: 15,
                },
                color: { id: "color", caption: locale.types.color, order: 16 },
                icon: { id: "icon", caption: locale.types.icon, order: 17 },
              },
            }),
            v = y(!0),
            w = [],
            T = 0;
          T < n.length;
          T++
        ) {
          var C = n[T],
            k = (w[T] = {}),
            S = $('<div class="import-col">').appendTo(f),
            _ = $('<div class="import-col-source-create">').appendTo(S),
            E = new b.util.SimpleModel(
              new schemas.TString(void 0, void 0, {
                required: !0,
                stringMinLength: 1,
                caption: locale.fieldCaption,
                formWidth: 1,
              })
            );
          (E.withoutLabel = !0), (E.value = C), (k.name = E);
          new ct.a(void 0, E, _);
          $('<div class="import-col-arrow">').appendTo(S);
          var D = $('<div class="import-col-target-create">').appendTo(S),
            N = new b.util.SimpleModel(g);
          (N.withoutLabel = !0),
            (N.value = v[T]),
            (k.type = N),
            new ct.a(void 0, N, D).el.addClass("import-field-type");
        }
        var M = $(
          '<div class="nx-button-bar" style="position:absolute;left:16px;bottom:8px;right:16px;height:32px">'
        ).appendTo(a);
        function I() {
          e.remove(), setTimeout(m, 0);
        }
        function R() {
          Object(l.f)("ImportData", "UpdateTableAndFieldsNext"),
            (d = c.createType(p.value)),
            (u = []);
          for (var t = 0; t < w.length; t++) {
            var i = w[t],
              o = c.createField2(d, {
                base:
                  "string-multiline" === i.type.value ? "string" : i.type.value,
                caption: i.name.value,
                order: t,
                stringMultiline: "string-multiline" === i.type.value || void 0,
              });
            u.push({ index: t, field: o, mode: "update-always" });
          }
          e.remove(), setTimeout(x, 0);
        }
        function F() {
          e.remove();
        }
        $('<div class="nx-button-text grey">')
          .text(locale.cancel)
          .appendTo(M)
          .touch(F),
          $('<div class="nx-hspace-flex">').appendTo(M),
          $('<div class="nx-button-text grey">')
            .text(locale.back)
            .appendTo(M)
            .touch(I),
          $('<div class="nx-hspace-small">').appendTo(M),
          $('<div class="nx-button-text blue">')
            .text(locale.next)
            .appendTo(M)
            .touch(R);
      }
      function x() {
        for (
          var t = vt.importModeDefault,
            i = vt.importAmbiguousDefault,
            o = u,
            a = {},
            n = [],
            p = [],
            h = [],
            m = [],
            f = 0;
          f < o.length;
          f++
        ) {
          var g = o[f],
            b = g.mode,
            y = g.field;
          if (y && b)
            switch (b) {
              case "key-exact":
                p.push({ col: g, field: y, index: {} });
                break;
              case "update-always":
                if (!y.isNew && !database.canWrite(y))
                  return T(locale.errorNotAuthorized + ": " + y.caption);
                h.push({ col: g, field: y, always: !0 }),
                  y.isReference && m.push(g);
                break;
              case "update-empty":
                if (!y.isNew && !database.canWrite(y))
                  return T(locale.errorNotAuthorized + ": " + y.caption);
                h.push({ col: g, field: y, always: !1 }),
                  y.isReference && m.push(g);
            }
        }
        function x(e) {
          setTimeout(function () {
            var t = "select " + d.id;
            database.select(t, function (t, i) {
              if (t) return e(t);
              database.loadNodes(i, function (t) {
                if (t) return e(t);
                for (var o = 0; o < i.length; o++) {
                  var n = i[o],
                    s = database.loadNodeSync(n);
                  s && (a[n] = s);
                }
                e();
              });
            });
          }, 0);
        }
        function C(e) {
          function t(i) {
            if (i === m.length) return e();
            var o = m[i],
              a = {};
            o.refIndex = a;
            var n = o.field,
              s = o.refField,
              r = "select " + n.refType.id;
            database.select(r, function (o, n) {
              if (o) return e(o);
              database.loadNodes(n, function (o) {
                if (o) return e(o);
                for (var r = 0; r < n.length; r++) {
                  var l = n[r],
                    c = database.loadNodeSync(l);
                  if (c) {
                    var d = c[s.id];
                    null != d &&
                      ("nid" === s.base && (d = schemas.ridOf(d)),
                      void 0 === a[d] ? (a[d] = c._id) : (a[d] = null));
                  }
                }
                setTimeout(t, 0, i + 1);
              });
            });
          }
          setTimeout(t, 0, 0);
        }
        function k() {
          for (var e = [], o = {}, r = 0; r < p.length; r++) {
            var l = (_ = p[r]).index,
              c = _.field.id;
            for (var u in a) {
              if (a.hasOwnProperty(u))
                null == (C = (y = a[u])[c]) && (C = ""),
                  "_id" === c && (C = schemas.ridOf(C)),
                  (g = l[C]) || (g = l[C] = []),
                  g.push(u);
            }
          }
          for (var m = 0; m < s.length; m++) {
            var f = s[m],
              g = void 0;
            for (r = 0; r < p.length; r++) {
              null == (C = f[(_ = p[r]).col.index]) && (C = ""),
                (C = "_id" === _.field.id ? C : Mt(C, _.field));
              var v = _.index[C];
              g = v ? (g ? Q.intersection(g, v) : v) : [];
            }
            if (g && g.length > 0) {
              if (g.length > 0 && (1 === g.length || "updateAll" === i))
                for (var b = 0; b < g.length; b++) {
                  u = g[b];
                  var y = a[u],
                    w = o[u];
                  w || (w = { _id: u });
                  for (var x = 0, T = 0; T < h.length; T++) {
                    if ("_id" !== (D = (E = h[T]).field).id) {
                      var C = f[(N = E.col).index],
                        k = y[D.id];
                      if (D.isField)
                        (null != (M = Mt(C, D)) && "" !== M) || (M = null),
                          E.always
                            ? M !== k && ((w[D.id] = M), x++)
                            : (null != k && "" !== k) || ((w[D.id] = M), x++);
                      else if (D.isReference) {
                        if ((M = N.refIndex[C]))
                          (I = database.ridOf(M)) &&
                            (E.always
                              ? I !== k && ((w[D.id] = I), x++)
                              : k || ((w[D.id] = I), x++));
                        else w[D.id] = null;
                      }
                    }
                  }
                  x > 0 && (o[u] = w);
                }
            } else {
              x = 0;
              var $ = { _type: d.id };
              for (T = 0; T < p.length; T++) {
                var _;
                if ("_id" !== (D = (_ = p[T]).field).id)
                  null != (M = Mt((C = f[(N = _.col).index]), D)) &&
                    "" !== M &&
                    (($[D.id] = M), x++);
              }
              for (T = 0; T < h.length; T++) {
                var E, D;
                if ("_id" !== (D = (E = h[T]).field).id) {
                  var N;
                  C = f[(N = E.col).index];
                  if (D.isField)
                    null != (M = Mt(C, D)) && "" !== M && (($[D.id] = M), x++);
                  else if (D.isReference) {
                    var M, I;
                    if ((M = N.refIndex[C]))
                      (I = database.ridOf(M)) && (($[D.id] = I), x++);
                  }
                }
              }
              x > 0 && e.push($);
            }
          }
          switch (t) {
            case "all":
              n = Q.values(o).concat(e);
              break;
            case "new":
              n = e;
              break;
            case "update":
              n = Q.values(o);
              break;
            default:
              n = [];
          }
          S();
        }
        function S() {
          var t = d.sorted,
            i = $('<div class="nx-backplane nx-backplane-dark">').appendTo(
              $(document.body)
            ),
            o = $('<div class="import-preview">').appendTo(i),
            s = $(
              '<div class="nx-button-bar" style="position:absolute;left:0;bottom:0;right:0">'
            ).appendTo(o);
          $('<div class="nx-button-text grey">')
            .text(locale.cancel)
            .touch(S)
            .appendTo(s),
            $('<div class="nx-hspace-flex">').appendTo(s),
            $('<div class="nx-button-text grey">')
              .text(locale.back)
              .touch(k)
              .appendTo(s),
            $('<div class="nx-hspace-small">').appendTo(s),
            $('<div class="nx-button-text blue">')
              .text(locale.importExecute)
              .touch(C)
              .appendTo(s);
          var u = $(
            '<div style="position:absolute;left:0;top:20px;width:100%;padding:8px 0 8px 8px;box-sizing:border-box;-moz-box-sizing:border-box;text-align:right">'
          ).appendTo(o);
          $('<div style="float:left;height:32px;line-height:32px">')
            .text(locale.importPreview)
            .appendTo(u),
            u.button("prev", void 0, void 0, y);
          var p = $(
            '<div style="display:inline-block;height:32px;line-height:32px">'
          ).appendTo(u);
          u.button("next", void 0, void 0, x);
          var h = $(
              '<div style="position:absolute;left:0;top:68px;width:100%;bottom:48px;overflow:auto">'
            ).appendTo(o),
            m = window.getHeight() - 128,
            f = Math.max(1, Math.floor(m / 33) - 1),
            g = 0,
            b = Math.ceil(n.length / f);
          function y() {
            --g < 0 && (g = b - 1), T();
          }
          function x() {
            ++g >= b && (g = 0), T();
          }
          function T() {
            p.text(locale.page + " " + (g + 1) + " / " + b);
            for (
              var e = "<table><thead><tr><th></th>", i = 0;
              i < t.length;
              i++
            ) {
              (((v = t[i]).isField && "fn" !== v.base) || v.isReference) &&
                (e += "<th>" + htmlEscape(v.caption) + "</th>");
            }
            e += "</tr></thead><tbody>";
            for (
              var o = g * f, s = Math.min(o + f, n.length), r = o;
              r < s;
              r++
            ) {
              var l = n[r];
              if (((e += "<tr>"), l._id)) {
                var c = l._id,
                  d = a[c];
                e += "<td>" + htmlEscape(schemas.ridOf(c)) + "</td>";
                for (i = 0; i < t.length; i++) {
                  if (
                    ((v = t[i]).isField && "fn" !== v.base) ||
                    v.isReference
                  ) {
                    var u = l[v.id],
                      m = d[v.id];
                    (e += '<td class="cell-' + v.base + '">'),
                      null != m &&
                        "" !== m &&
                        (e +=
                          '<div class="import-cell-old">' +
                          htmlEscape(v.format(m)) +
                          "</div>"),
                      void 0 !== u &&
                        (e +=
                          '<div class="import-cell-update">' +
                          htmlEscape(v.format(u)) +
                          "</div>"),
                      (e += "</td>");
                  }
                }
              } else {
                e += "<td>" + htmlEscape(locale.new) + "</td>";
                for (i = 0; i < t.length; i++) {
                  var v;
                  if (
                    ((v = t[i]).isField && "fn" !== v.base) ||
                    v.isReference
                  ) {
                    e += '<td class="cell-' + v.base + '">';
                    var y = l[v.id];
                    void 0 !== y &&
                      (e +=
                        '<div class="import-cell-update">' +
                        htmlEscape(v.format(y)) +
                        "</div>"),
                      (e += "</td>");
                  }
                }
              }
              e += "</tr>";
            }
            (e += "</tbody></table>"), h.html(e);
          }
          function C() {
            Object(l.f)("ImportData", "ImportNow"),
              $.loading(!0),
              r
                ? database.updateSchema(c, function (t) {
                    t
                      ? ($.loading(!1), $.alert(locale.importFailed + ": " + t))
                      : database.updateNodes(n, function (t) {
                          t
                            ? ($.loading(!1),
                              $.alert(locale.importFailed + ": " + t))
                            : ($.loading(!1),
                              $.alert(locale.importSuccessful),
                              Object(l.f)("ImportData", "ImportSuccessful"),
                              S(),
                              e.success && e.success());
                        });
                  })
                : database.updateNodes(n, function (t) {
                    t
                      ? ($.loading(!1), $.alert(locale.importFailed + ": " + t))
                      : ($.loading(!1),
                        $.alert(locale.importSuccessful),
                        Object(l.f)("ImportData", "ImportSuccessful"),
                        S(),
                        e.success && e.success());
                  });
          }
          function k() {
            i.remove(), r ? setTimeout(w, 0) : setTimeout(v, 0);
          }
          function S() {
            i.remove();
          }
          T();
        }
        r
          ? k()
          : ($.loading(!0),
            x(function (e) {
              if (e) return $.loading(!1), T(e);
              C(function (e) {
                if (e) return $.loading(!1), T(e);
                $.loading(!1), k();
              });
            }));
      }
      function T(e) {
        $.alert(e), r ? setTimeout(w, 0) : setTimeout(v, 0);
      }
      setTimeout(p, 0), Object(l.f)("ImportData", "Open");
    }
    function yt(e) {
      var t = locale.yes.toLowerCase(),
        i = locale.no.toLowerCase(),
        o = locale.true.toLowerCase(),
        a = locale.false.toLowerCase();
      if (null != e)
        return (
          "1" === (e = e.trim().toLowerCase()) ||
          "true" === e ||
          "t" === e ||
          e === t ||
          e === o ||
          ("0" !== e &&
            "false" !== e &&
            "f" !== e &&
            e !== i &&
            e !== a &&
            void 0)
        );
    }
    function wt(e, t) {
      if (
        null != e &&
        ((e = e.trim()),
        "" !==
          (e =
            "comma" === t
              ? (e = e.replace(/[^0-9\,\-]/g, "")).replace(",", ".")
              : e.replace(/[^0-9\.\-]/g, "")) && ((e = Number(e)), !isNaN(e)))
      )
        return e;
    }
    function xt(e, t) {
      return "comma" === t
        ? /^\s*(\+|\-)?\s*([0-9]+\.?)+(\,[0-9]+)?[^0-9]*$/.test(e)
        : /^\s*(\+|\-)?\s*([0-9]+\,?)+(\.[0-9]+)?[^0-9]*$/.test(e);
    }
    var Tt = /^\-?[0-9]+$/,
      Ct =
        /^([0-9]{4})\-([0-9]{1,2})\-([0-9]{1,2})((?:T|\s+)([0-9]{1,2})\:([0-9]{1,2})(\:([0-9]{1,2})(\.([0-9]+))?)?(Z?))?$/i,
      kt =
        /^(mon|tue|wed|thu|fri|sat|sun) (jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec) ([0-9]{1,2}) ([0-9]{4})( ([0-9]{1,2})\:([0-9]{1,2})(\:([0-9]{1,2}))?)?( GMT([\+\-][0-9]{1,4})?( \(([a-z]{3})\))?)?/i;
    function St(e) {
      if (null != e && "" !== e)
        return Ct.test(e) || kt.test(e) || b.util.isLocaleDateTime(e);
    }
    function $t(e) {
      if (null != e) {
        e = e.trim();
        var t = Tt.test(e),
          i = Ct.exec(e),
          o = kt.test(e);
        if (t) return parseInt(e);
        if (i) {
          var a = new Date(0);
          if (i[11])
            a.setUTCFullYear(Number(i[1] || 0)),
              a.setUTCMonth(Number(i[2] || 0) - 1),
              a.setUTCDate(Number(i[3] || 0)),
              a.setUTCHours(Number(i[5] || 0)),
              a.setUTCMinutes(Number(i[6] || 0)),
              a.setUTCSeconds(Number(i[8] || 0)),
              a.setUTCMilliseconds(Number(i[10] || 0));
          else
            (a = new Date(0)).setFullYear(Number(i[1] || 0)),
              a.setMonth(Number(i[2] || 0) - 1),
              a.setDate(Number(i[3] || 0)),
              a.setHours(Number(i[5] || 0)),
              a.setMinutes(Number(i[6] || 0)),
              a.setSeconds(Number(i[8] || 0)),
              a.setMilliseconds(Number(i[10] || 0));
          var n = a.getTime();
          return isNaN(n) ? void 0 : n;
        }
        if (o) {
          n = (a = new Date(e)).getTime();
          return isNaN(n) ? void 0 : n;
        }
        return b.util.parseLocaleDateTime(e);
      }
    }
    function _t(e) {
      if (null != e) {
        e = e.trim();
        var t = Tt.test(e),
          i = Ct.exec(e),
          o = kt.test(e);
        if (t) return parseInt(e);
        if (i) {
          var a = new Date(0);
          if (i[11])
            a.setUTCFullYear(Number(i[1] || 0)),
              a.setUTCMonth(Number(i[2] || 0) - 1),
              a.setUTCDate(Number(i[3] || 0)),
              a.setUTCHours(Number(i[5] || 0)),
              a.setUTCMinutes(Number(i[6] || 0)),
              a.setUTCSeconds(Number(i[8] || 0)),
              a.setUTCMilliseconds(Number(i[10] || 0));
          else
            (a = new Date(0)).setFullYear(Number(i[1] || 0)),
              a.setMonth(Number(i[2] || 0) - 1),
              a.setDate(Number(i[3] || 0)),
              a.setHours(Number(i[5] || 0)),
              a.setMinutes(Number(i[6] || 0)),
              a.setSeconds(Number(i[8] || 0)),
              a.setMilliseconds(Number(i[10] || 0));
          var n = a.getTime();
          return isNaN(n) ? void 0 : n;
        }
        if (o) {
          n = (a = new Date(e)).getTime();
          return isNaN(n) ? void 0 : n;
        }
        return b.util.parseLocaleDateTime(e);
      }
    }
    function Et(e) {
      if (null != e && "" !== e) {
        var t = vt.importCSVDateFormatDefault;
        return "auto" === t
          ? Ct.test(e) || kt.test(e) || b.util.isLocaleDate(e)
          : b.util.moment(e, t, !0).isValid();
      }
    }
    function Dt(e) {
      var t = vt.importCSVDateFormatDefault;
      if ("auto" !== t) {
        var i = b.util.moment(e, t);
        if (i.isValid()) return i.valueOf();
      } else {
        var o = $t(e);
        if (void 0 !== o) {
          var a = new Date(o);
          return (
            a.setHours(0),
            a.setMinutes(0),
            a.setSeconds(0),
            a.setMilliseconds(0),
            a.getTime()
          );
        }
      }
    }
    function Nt(e) {
      var t = vt.importCSVDateFormatDefault;
      if ("auto" !== t) {
        var i = b.util.moment(e, t);
        if (i.isValid()) return Date.UTC(i.year(), i.month(), i.date());
      } else {
        var o = _t(e);
        if (void 0 !== o) {
          var a = new Date(o);
          return Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());
        }
      }
    }
    function Mt(e, t) {
      switch (t.base) {
        case "number":
          return wt(e, vt.importCSVNumberFormatDefault);
        case "boolean":
          return yt(e);
        case "date":
          return Dt(e);
        case "datx":
          return Nt(e);
        case "timestamp":
          return $t(e);
        default:
          return t.parse(e);
      }
    }
    function It(e, t) {
      return String(e).toLowerCase() == String(t).toLowerCase();
    }
    o("./src/react/LocalizationColumnSelector.css");
    var Rt = o("./src/react/util/PositionedBackplane.tsx");
    class Ft extends s.Component {
      constructor(...e) {
        super(...e),
          Ie()(this, "locales", [
            "en",
            "de",
            "ca",
            "es",
            "fr",
            "it",
            "pl",
            "pt",
            "ru",
            "chs",
            "cht",
          ]),
          Ie()(this, "options", []);
      }
      render() {
        return (
          (this.options = this.props.localizedOptions),
          s.createElement(
            Rt.a,
            {
              show: null !== this.props.target,
              onClick: () => this.props.submitChanges(this.options),
              clickTarget: this.props.target,
              settings: { style: "tooltip", arrowColor: "white" },
            },
            s.createElement(
              "div",
              { className: "LocalizationColumnSelector_Container" },
              s.createElement(
                "div",
                null,
                this.locales.map((e, t) =>
                  s.createElement(
                    "div",
                    { key: t, className: "LocalizationColumnSelector_Item" },
                    s.createElement(He, {
                      defaultValue: -1 !== this.options.indexOf(e),
                      options: { type: "CHECKBOX", label: e },
                      onChange: (t) => {
                        t
                          ? this.options.push(e)
                          : this.options.splice(this.options.indexOf(e), 1);
                      },
                    })
                  )
                )
              )
            )
          )
        );
      }
    }
    o("./src/react/LocalizationTable.css");
    class At extends s.Component {
      shouldComponentUpdate(e, t, i) {
        return (
          this.props.isSelected !== e.isSelected ||
          this.props.caption !== e.caption
        );
      }
      render() {
        return this.props.isSelected
          ? s.createElement("input", {
              className: "Localization_cell",
              type: "text",
              onKeyDown: this.props.handleKeyDown,
              defaultValue:
                void 0 === this.props.caption ? "" : this.props.caption,
              onChange: this.props.handleCellUpdate,
              autoFocus: !0,
              onBlur: () => this.props.blurOrSubmitCell(null),
            })
          : void 0 !== this.props.caption
          ? s.createElement(
              ze.a,
              {
                className: "Localization_cell",
                onFastClick: this.props.onClick,
                title: this.props.caption,
              },
              s.createElement(
                "span",
                { className: "Localization_cell_text" },
                this.props.caption
              )
            )
          : s.createElement(ze.a, {
              className: "Localization_cell",
              onFastClick: this.props.onClick,
            });
      }
    }
    var Ot = o("./src/react/util/commons.ts");
    function zt(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function Lt(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? zt(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : zt(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    class jt extends s.Component {
      constructor(e) {
        super(e),
          Ie()(this, "numberOfRows", void 0),
          Ie()(this, "handleCellUpdate", (e) => {
            const t = e.target.value;
            this.setState(
              (e) => (
                Object(Ot.a)(e.selectedElement),
                { selectedElement: Lt({}, e.selectedElement, { val: t }) }
              )
            );
          }),
          Ie()(this, "handleLocalizationCellClick", (e, t, i) => {
            this.setState({
              selectedElement: {
                col: t,
                row: i,
                val: this.props.locales[i].captions[t],
              },
            });
          }),
          Ie()(this, "handleKeyDown", (e) => {
            switch (e.key) {
              case "Escape":
                this.setState({ selectedElement: null });
                break;
              case "Enter":
                this.blurOrSubmitCell(null);
                break;
              case "Tab":
                e.preventDefault(), Object(Ot.a)(this.state.selectedElement);
                let t = this.props.selectedLanguages.indexOf(
                    this.state.selectedElement.col
                  ),
                  i = this.state.selectedElement.row;
                e.shiftKey
                  ? ((t =
                      (t - 1 + this.props.selectedLanguages.length) %
                      this.props.selectedLanguages.length),
                    t === this.props.selectedLanguages.length - 1 &&
                      (i = (i + this.numberOfRows - 1) % this.numberOfRows))
                  : ((t = (t + 1) % this.props.selectedLanguages.length),
                    0 === t && (i = (i + 1) % this.numberOfRows));
                const o = {
                  col: this.props.selectedLanguages[t],
                  row: i,
                  val: this.props.locales[i].captions[
                    this.props.selectedLanguages[t]
                  ],
                };
                this.blurOrSubmitCell(o);
                break;
              case "ArrowUp":
                e.preventDefault(), Object(Ot.a)(this.state.selectedElement);
                const a =
                    (this.state.selectedElement.row + this.numberOfRows - 1) %
                    this.numberOfRows,
                  n = {
                    col: this.state.selectedElement.col,
                    row: a,
                    val: this.props.locales[a].captions[
                      this.state.selectedElement.col
                    ],
                  };
                this.blurOrSubmitCell(n);
                break;
              case "ArrowDown":
                e.preventDefault(), Object(Ot.a)(this.state.selectedElement);
                const s =
                    (this.state.selectedElement.row + 1) % this.numberOfRows,
                  r = {
                    col: this.state.selectedElement.col,
                    row: s,
                    val: this.props.locales[s].captions[
                      this.state.selectedElement.col
                    ],
                  };
                this.blurOrSubmitCell(r);
            }
          }),
          Ie()(this, "checkForChangesAndSubmit", () => {
            Object(Ot.a)(this.state.selectedElement),
              this.props.locales[this.state.selectedElement.row].captions[
                this.state.selectedElement.col
              ] !== this.state.selectedElement.val &&
                this.props.onCellChange(
                  this.state.selectedElement.row,
                  this.state.selectedElement.col,
                  this.state.selectedElement.val
                );
          }),
          Ie()(this, "blurOrSubmitCell", (e) => {
            this.checkForChangesAndSubmit(),
              this.setState({ selectedElement: e });
          }),
          Ie()(this, "handleHeaderClick", (e) => {
            this.setState({
              editLocale: {
                target: ze.b.getTarget(e),
                options: this.props.selectedLanguages,
              },
            });
          }),
          Ie()(this, "submitHeaderEdits", (e) => {
            Object(l.f)(jt.trackingCategory, "Edit Locales", { locales: e }),
              this.props.onHeaderUpdate(e),
              this.setState({ editLocale: null });
          }),
          (this.numberOfRows = this.props.locales.length),
          (this.state = { selectedElement: null, editLocale: null });
      }
      render() {
        return s.createElement(
          "div",
          { className: "Localization_root" },
          s.createElement(
            "div",
            { className: "Localization-header-column" },
            s.createElement(
              "div",
              { className: "Localization_corner_cell" },
              Object(_e.a)().LocalizationModuleColumnHeader
            ),
            s.createElement(
              "div",
              { className: "Localization_column_header_container" },
              this.renderLocalizationColumnHeaders()
            )
          ),
          s.createElement(
            "div",
            { className: "Localization_content" },
            this.renderTableContent()
          ),
          s.createElement(Ft, {
            localizedOptions: this.props.selectedLanguages,
            target:
              null === this.state.editLocale
                ? null
                : this.state.editLocale.target,
            submitChanges: this.submitHeaderEdits,
          })
        );
      }
      renderTableContent() {
        return this.props.locales.map((e, t) =>
          s.createElement(
            "div",
            { key: t, className: "Localization_row_container" },
            s.createElement(
              "div",
              { title: e.module, className: "Localization_module" },
              e.module
            ),
            s.createElement(
              "div",
              { className: "Localization_row" },
              s.createElement(
                "div",
                {
                  title: e.caption,
                  className: "Localization_cell Localization_default",
                },
                e.caption
              ),
              this.renderLocalizedValuesAndEmptyCells(e.captions, t)
            )
          )
        );
      }
      renderLocalizedValuesAndEmptyCells(e, t) {
        return this.props.selectedLanguages.map((i, o) =>
          s.createElement(At, {
            caption: e[i],
            key: o,
            isSelected:
              null !== this.state.selectedElement &&
              this.state.selectedElement.col === i &&
              this.state.selectedElement.row === t,
            handleKeyDown: this.handleKeyDown,
            blurOrSubmitCell: this.blurOrSubmitCell,
            onClick: (e) => this.handleLocalizationCellClick(e, i, t),
            handleCellUpdate: this.handleCellUpdate,
          })
        );
      }
      renderLocalizationColumnHeaders() {
        const e = [];
        e.push(
          s.createElement(
            "div",
            {
              key: Object(_e.a)().LocalizationDefaultColumnHeader,
              className: "Localization_column_header",
            },
            Object(_e.a)().LocalizationDefaultColumnHeader
          )
        );
        for (const t of this.props.selectedLanguages)
          e.push(
            s.createElement(
              "div",
              { key: t, className: "Localization_column_header" },
              t
            )
          );
        return (
          this.props.locales.length > 0 &&
            e.push(
              s.createElement(
                ze.a,
                {
                  key: Object(_e.a)().LocalizationAddLocaleColumnHeader,
                  className: "Localization_column_header",
                  onFastClick: (e) => this.handleHeaderClick(e),
                },
                Object(_e.a)().LocalizationAddLocaleColumnHeader
              )
            ),
          e
        );
      }
    }
    let Pt;
    Ie()(jt, "trackingCategory", "Localized Captions"), Pt || (Pt = {});
    class Ht {
      constructor(e, t, i) {
        Ie()(this, "base", "localization"),
          Ie()(this, "container", void 0),
          Ie()(this, "visible", void 0),
          Ie()(this, "el", void 0),
          Ie()(this, "database", void 0),
          Ie()(this, "localizedFieldOptions", void 0),
          Ie()(this, "locales", []),
          Ie()(this, "handleCellChange", (e, t, i) => {
            const o = b.util.clone(this.locales);
            (o[e].captions[t] = i), this.saveData(o);
          }),
          Ie()(this, "updateColumnHeadings", (e) => {
            (this.localizedFieldOptions = e),
              this.createEmptyValuesForSelectedColumns(e),
              this.removeValuesInLocaleColumn(e);
          }),
          Ie()(this, "createEmptyValuesForSelectedColumns", (e) => {
            const t = b.util.clone(this.locales),
              i = t[0];
            for (const t of e)
              i.captions.hasOwnProperty(t) || (i.captions[t] = "");
            this.saveData(t);
          }),
          Ie()(this, "removeValuesInLocaleColumn", (e) => {
            const t = b.util.clone(this.locales);
            for (const i of t)
              for (const t in i.captions)
                i.captions.hasOwnProperty(t) &&
                  -1 === e.indexOf(t) &&
                  delete i.captions[t];
            this.saveData(t);
          }),
          Ie()(this, "setLocalizedHeaders", (e) => {
            const t = [];
            e.forEach((e) => {
              Object.keys(e.captions).forEach((e) => {
                -1 === t.indexOf(e) && t.push(e);
              });
            }),
              (this.localizedFieldOptions = t);
          }),
          Ie()(this, "saveData", (e) => {
            const t = this.database.schema,
              i = t.types;
            let o,
              a,
              n,
              s,
              r = !1;
            for (const t of e)
              switch (t.base) {
                case "type.caption":
                  if (((o = i[t.tid]), !o)) continue;
                  o.caption !== t.caption &&
                    ((o.caption = t.caption), (r = !0)),
                    b.util.equals(o.captions, t.captions) ||
                      ((o.captions = b.util.clone(t.captions)), (r = !0));
                  break;
                case "field.caption":
                  if (((o = i[t.tid]), !o)) continue;
                  if (((a = o.fields[t.fid]), !a)) continue;
                  a.caption !== t.caption &&
                    ((a.caption = t.caption), (r = !0)),
                    b.util.equals(a.captions, t.captions) ||
                      ((a.captions = b.util.clone(t.captions)), (r = !0));
                  break;
                case "field.tooltip":
                  if (((o = i[t.tid]), !o)) continue;
                  if (((a = o.fields[t.fid]), !a)) continue;
                  a.tooltip !== t.caption &&
                    ((a.tooltip = t.caption), (r = !0)),
                    b.util.equals(a.tooltips, t.captions) ||
                      ((a.tooltips = b.util.clone(t.captions)), (r = !0));
                  break;
                case "field.value.caption":
                  if (((o = i[t.tid]), !o)) continue;
                  if (((a = o.fields[t.fid]), !a)) continue;
                  if (((n = a.values[t.vid]), !n)) continue;
                  n.caption !== t.caption &&
                    ((n.caption = t.caption), (r = !0)),
                    b.util.equals(n.captions, t.captions) ||
                      ((n.captions = b.util.clone(t.captions)), (r = !0));
                  break;
                case "ui.caption":
                  if (((o = i[t.tid]), !o)) continue;
                  if (((s = o.uis[t.uid]), !s)) continue;
                  s.caption !== t.caption &&
                    ((s.caption = t.caption), (r = !0)),
                    b.util.equals(s.captions, t.captions) ||
                      ((s.captions = b.util.clone(t.captions)), (r = !0));
                  break;
                default:
                  Object(Ae.assertNever)(t);
              }
            r && t.trigger("change");
          }),
          (this.container = e),
          (this.visible = !1),
          (this.el = window.$('<div class="admin-options">')),
          (this.database = i),
          (this.localizedFieldOptions = null),
          i.on("schema", void 0, this.updateUI, this);
      }
      getNavigationState() {
        return { base: "localization" };
      }
      destroy() {
        this.el.remove();
      }
      show() {
        this.visible ||
          ((this.visible = !0),
          this.el.appendTo(this.container.el),
          this.updateUI());
      }
      hide() {
        this.visible && ((this.visible = !1), this.el.detach());
      }
      updateUI() {
        if (
          ((this.locales = this.getLocalizedCaptionData()),
          this.setLocalizedHeaders(this.locales),
          null === this.localizedFieldOptions)
        )
          throw new Error("impossible");
        a.render(
          s.createElement(jt, {
            locales: this.locales,
            selectedLanguages: this.localizedFieldOptions,
            onCellChange: this.handleCellChange,
            onHeaderUpdate: this.updateColumnHeadings,
          }),
          this.el[0]
        );
      }
      getLocalizedCaptionData() {
        const e = [],
          t = this.database.schema.types;
        for (const i in t)
          if (t.hasOwnProperty(i)) {
            const o = t[i];
            e.push({
              base: "type.caption",
              tid: i,
              module: [o.caption].join(" / "),
              caption: o.caption,
              captions: b.util.clone(o.captions) || {},
            });
            const a = o.fields;
            for (const t in a)
              if (a.hasOwnProperty(t)) {
                const n = a[t];
                if (
                  (e.push({
                    base: "field.caption",
                    tid: i,
                    fid: t,
                    module: [o.caption, n.caption].join(" / "),
                    caption: n.caption,
                    captions: b.util.clone(n.captions) || {},
                  }),
                  e.push({
                    base: "field.tooltip",
                    tid: i,
                    fid: t,
                    module: [o.caption, n.caption, "Tooltip"].join(" / "),
                    caption: n.tooltip,
                    captions: b.util.clone(n.tooltips) || {},
                  }),
                  "choice" === n.base || "multi" === n.base)
                ) {
                  const a = n.values;
                  for (const s in a)
                    if (a.hasOwnProperty(s)) {
                      const r = a[s];
                      e.push({
                        base: "field.value.caption",
                        tid: i,
                        fid: t,
                        vid: s,
                        module: [o.caption, n.caption, "Value"].join(" / "),
                        caption: r.caption,
                        captions: b.util.clone(r.captions) || {},
                      });
                    }
                }
              }
            const n = o.uis;
            for (const t in n)
              if (n.hasOwnProperty(t)) {
                const a = n[t];
                e.push({
                  base: "ui.caption",
                  tid: i,
                  uid: t,
                  module: [o.caption, a.caption, "UI"].join(" / "),
                  caption: a.caption,
                  captions: b.util.clone(a.captions) || {},
                });
              }
          }
        return e;
      }
    }
    function Ut(e) {
      var t = e.$container,
        i = $("<div>").appendTo(t),
        o = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.background,
            width: 4,
            required: !0,
            choiceRenderer: "switch",
            values: {
              solid: { caption: locale.solid, order: 1 },
              gradient: { caption: locale.gradient, order: 2 },
              image: { caption: locale.image, order: 3 },
              default: { caption: locale.defaultValue, order: 0 },
            },
          }),
          e.settings.bgType ||
            ("background-file" === e.settings.backgroundClass
              ? "image"
              : "default")
        );
      o.on("update", function () {
        "image" === o.value
          ? e.updateSettings(
              { bgType: "image", backgroundClass: "background-file" },
              function () {}
            )
          : "default" === o.value
          ? e.updateSettings(
              { bgType: null, backgroundClass: "" },
              function () {}
            )
          : e.updateSettings({ bgType: o.value }, function () {}),
          g();
      }),
        new ct.a(void 0, o, i);
      var a = $("<div>").appendTo(i),
        n = $("<div>").appendTo(i),
        s = $("<div>").appendTo(i),
        r = $('<div style="padding:8px 0">').appendTo(s),
        l = new util.SimpleModel(
          new schemas.TColor(void 0, void 0, {
            caption: locale.backgroundColor,
            required: !0,
          }),
          e.settings.bgColor || "#ccc"
        );
      l.on("update", function () {
        e.updateSettings({ bgColor: l.value }, function () {});
      }),
        new ct.a(void 0, l, r),
        $(
          '<div class="nx-button-text blue" style="width:auto;display:inline-block;margin:8px 0">'
        )
          .text(locale.uploadBackgroundFile)
          .appendTo(r)
          .on("click", function (t) {
            $.chooseFile(t, function (t, i) {
              e.setBackgroundFile(i, function (e) {
                if (e) return $.alert(e);
              });
            });
          });
      var c = new util.SimpleModel(
        new schemas.TChoice(void 0, void 0, {
          caption: locale.horizontalPosition,
          width: 2,
          required: !0,
          choiceRenderer: "switch",
          values: {
            left: { caption: locale.left, order: 1 },
            center: { caption: locale.center, order: 2 },
            right: { caption: locale.right, order: 3 },
          },
        }),
        e.settings.bgPosH || "center"
      );
      c.on("update", function () {
        e.updateSettings({ bgPosH: c.value }, function () {});
      });
      var d = new util.SimpleModel(
        new schemas.TChoice(void 0, void 0, {
          caption: locale.verticalPosition,
          width: 2,
          required: !0,
          choiceRenderer: "switch",
          values: {
            top: { caption: locale.top, order: 1 },
            center: { caption: locale.center, order: 2 },
            bottom: { caption: locale.bottom, order: 3 },
          },
        }),
        e.settings.bgPosV || "center"
      );
      d.on("update", function () {
        e.updateSettings({ bgPosV: d.value }, function () {});
      });
      var u = new util.SimpleModel(
        new schemas.TChoice(void 0, void 0, {
          caption: locale.size,
          width: 3,
          required: !0,
          choiceRenderer: "switch",
          values: {
            auto: { caption: locale.original, order: 1 },
            cover: { caption: locale.cover, order: 2 },
            contain: { caption: locale.contain, order: 3 },
            "100% 100%": { caption: locale.stretch, order: 4 },
          },
        }),
        e.settings.bgSize || "cover"
      );
      u.on("update", function () {
        e.updateSettings({ bgSize: u.value }, function () {});
      });
      var p = new util.SimpleModel(
        new schemas.TChoice(void 0, void 0, {
          caption: locale.repeat,
          width: 1,
          required: !0,
          choiceRenderer: "switch",
          values: {
            "no-repeat": { caption: locale.no, order: 2 },
            repeat: { caption: locale.yes, order: 1 },
          },
        }),
        e.settings.bgRepeat || "no-repeat"
      );
      p.on("update", function () {
        e.updateSettings({ bgRepeat: p.value }, function () {});
      }),
        new ct.a(void 0, d, s),
        new ct.a(void 0, c, s),
        $("<br>").appendTo(s),
        new ct.a(void 0, u, s),
        new ct.a(void 0, p, s);
      var h = new util.SimpleModel(
        new schemas.TColor(void 0, void 0, {
          caption: locale.startColor,
          required: !0,
        }),
        e.settings.bgGradient0 || "#ccc"
      );
      h.on("update", function () {
        e.updateSettings({ bgGradient0: h.value }, function () {});
      });
      var m = new util.SimpleModel(
        new schemas.TColor(void 0, void 0, {
          caption: locale.endColor,
          required: !0,
        }),
        e.settings.bgGradient1 || "#aaa"
      );
      m.on("update", function () {
        e.updateSettings({ bgGradient1: m.value }, function () {});
      }),
        new ct.a(void 0, h, n),
        new ct.a(void 0, m, n);
      var f = new util.SimpleModel(
        new schemas.TColor(void 0, void 0, {
          caption: locale.color,
          required: !0,
        }),
        e.settings.bgColor || "#ccc"
      );
      function g() {
        a.css("display", "solid" === o.value ? "" : "none"),
          n.css("display", "gradient" === o.value ? "" : "none"),
          s.css("display", "image" === o.value ? "" : "none");
      }
      f.on("update", function () {
        e.updateSettings({ bgColor: f.value }, function () {});
      }),
        new ct.a(void 0, f, a),
        g();
    }
    var Vt = o("./src/js/admin/FunctionEditor.js");
    function Wt(e) {
      (this.button = $(
        '<div class="hud-menu-button i-32-24 i-grey i-setting-tool">'
      )
        .attr("title", locale.admin)
        .appendTo(e || ui.$menuRight)
        .touch($.proxy(this.toggle, this))),
        this.update(),
        database.on("admin", void 0, this.update, this),
        Object(Vt.b)();
    }
    function Bt(e, t) {
      (this.container = e),
        (this.visible = !1),
        (this.el = $('<div class="admin-options">')),
        (this.$globalCode = void 0),
        (this.globalCodeField = void 0),
        (this.afterOpenField = void 0);
    }
    (Wt.prototype.destroy = function () {
      database.off("admin", void 0, this.update, this), this.button.remove();
    }),
      (Wt.prototype.toggle = function (e) {
        Object(l.f)("Admin", database.adminMode ? "Activate" : "Deactivate"),
          database.schema.isProtected
            ? database.adminMode
              ? ((database.schemaUnlocked = !1),
                (database.schemaPassword = void 0),
                database.setAdminMode(!1))
              : Wt.popupProtectionPassword({
                  mode: "unlock",
                  okay: function (e) {
                    return database.schema.protectCheckPassword(e)
                      ? ((database.schemaUnlocked = !0),
                        (database.schemaPassword = e),
                        database.setAdminMode(!0),
                        !0)
                      : ($.alert(locale.wrongPassword), !1);
                  },
                })
            : database.setAdminMode(!database.adminMode);
      }),
      (Wt.popupProtectionPassword = function (e) {
        var t,
          i = $.popdown({
            cls: "small",
            head:
              "protect" === e.mode
                ? locale.protectDatabase
                : "unprotect" === e.mode
                ? locale.unprotectDatabase
                : "unlock" === e.mode
                ? locale.unlockDatabase
                : "Unknown",
            buttons: [
              "cancel",
              "-",
              { cls: "blue", caption: locale.okay, click: a },
            ],
          }),
          o =
            ($(
              '<div class="component editor editor-string" style="width:100%">'
            ).appendTo(i.$pane),
            $.input({
              $container: i.$content,
              type: "password",
              caption: locale.password,
            }));
        function a() {
          var a = o.val();
          a &&
            ("protect" !== e.mode || a === t.val()
              ? e.okay(a) && i.close()
              : $.alert(locale.passwordMismatch));
        }
        "protect" === e.mode &&
          (t = $.input({
            $container: i.$content,
            type: "password",
            caption: locale.repeatPassword,
          }));
      }),
      (Wt.prototype.update = function () {
        database.adminMode
          ? (this.button[0].className =
              "hud-menu-button red i-32-24 i-white i-setting-tool selected --ul-admin-button-active")
          : (this.button[0].className =
              "hud-menu-button i-32-24 i-white i-setting-tool --ul-admin-button");
      }),
      (Wt.prototype.mightyMode = function () {
        var e = $('<div class="nx-backplane nx-backplane-opaq">').appendTo(
            $(document.body)
          ),
          t = $(
            '<textarea autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" style="border:none;background-color:#fff;font-family:monospace;font-size:12px;position:absolute;top:64px;left:16px;right:16px;bottom:16px">'
          )
            .val(database.customInitSRC || "")
            .appendTo(e),
          i = $(
            '<div class="nx-button-bar" style="position:absolute;left:8px;top:8px;right:8px">'
          ).appendTo(e);
        $('<div class="nx-hspace-flex">').appendTo(i);
        $('<div class="nx-button-text red">')
          .text("Save and Reload")
          .appendTo(i)
          .touch(o);
        $('<div class="nx-hspace-small">').appendTo(i);
        $('<div class="nx-button-text grey">')
          .text("Cancel")
          .appendTo(i)
          .touch(a);
        function o() {
          var e = t.val();
          try {
            new Function(e);
            database.saveCustom(e, function (e) {
              if (e) return $.alert(e);
              window.location.reload();
            });
          } catch (e) {
            $.alert(e);
          }
        }
        function a() {
          e.remove();
        }
      }),
      (Bt.prototype.base = "options"),
      (Bt.prototype.getNavigationState = function () {
        return { base: "options" };
      }),
      (Bt.prototype.destroy = function () {
        this.el.remove();
      }),
      (Bt.prototype.show = function () {
        Object(l.f)("Options", "Open"),
          this.visible ||
            ((this.visible = !0),
            this.createUI(),
            this.el.appendTo(this.container.el),
            database.on("schema", void 0, this.schemaChanged, this));
      }),
      (Bt.prototype.hide = function () {
        this.visible &&
          ((this.visible = !1),
          this.el.detach(),
          this.destroyUI(),
          database.off("schema", void 0, this.schemaChanged, this));
      }),
      (Bt.prototype.setBackground = function (e) {
        database.setBackground(e, function (e) {
          e && $.alert(e);
        });
      }),
      (Bt.prototype.getNavigationState = function () {
        return { base: "options" };
      }),
      (Bt.prototype.schemaChanged = function () {
        this.createFields();
      }),
      (Bt.prototype.destroyUI = function () {
        this.destroyFields(), this.el.empty(), (this.$globalCode = void 0);
      }),
      (Bt.prototype.createUI = function () {
        var e = this;
        new Ut({
          $container: $('<div class="admin-options-pane">').appendTo(this.el),
          settings: database.settings,
          updateSettings: function (e, t) {
            database.updateSettings(e, t), ui.updateBackground(!0);
          },
          setBackground: function (e, t) {
            database.setBackground(e, t);
          },
          setBackgroundFile: function (e, t) {
            database.setBackgroundFile(e, t);
          },
        });
        var t = $('<div class="admin-options-pane">').appendTo(this.el);
        $('<div style="text-align:center">')
          .text(locale.printTableSettings)
          .appendTo(t);
        var i = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.printFontSize,
            width: 2,
            required: !0,
            values: {
              6: { caption: "6 pt", order: 1 },
              7: { caption: "7 pt", order: 2 },
              8: { caption: "8 pt", order: 3 },
              9: { caption: "9 pt", order: 4 },
              10: { caption: "10 pt", order: 5 },
              11: { caption: "11 pt", order: 6 },
              12: { caption: "12 pt", order: 7 },
              13: { caption: "13 pt", order: 8 },
              14: { caption: "14 pt", order: 9 },
            },
          }),
          database.settings.printTableFontSize || "8"
        );
        i.on("update", a);
        new ct.a(void 0, i, t);
        var o = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.printRendering,
            width: 2,
            required: !0,
            values: {
              PDF: { caption: "PDF", order: 1 },
              HTML: { caption: "HTML", order: 2 },
            },
          }),
          database.settings.printTableRendering || "PDF"
        );
        o.on("update", a);
        new ct.a(void 0, o, t);
        function a() {
          window.reports,
            database.updateSettings({
              printTableFontSize: i.value,
              printTableRendering: o.value,
            });
        }
        if (
          ((this.$globalCode = $('<div class="admin-options-pane">').appendTo(
            this.el
          )),
          $('<div class="buttons">')
            .appendTo(this.el)
            .button(
              void 0,
              database.schema.isProtected
                ? locale.unprotectDatabase
                : locale.protectDatabase,
              "grey",
              function () {
                Wt.popupProtectionPassword({
                  mode: database.schema.isProtected ? "unprotect" : "protect",
                  okay: function (t) {
                    return database.schema.isProtected
                      ? database.schema.unprotect(t)
                        ? (e.destroyUI(),
                          e.createUI(),
                          $.loading(!0),
                          database.saveSchema(function (e) {
                            $.loading(!1), e && $.alert(e);
                          }),
                          !0)
                        : ($.alert(locale.wrongPassword), !1)
                      : (database.schema.protect(t),
                        (database.schemaUnlocked = !0),
                        (database.schemaPassword = t),
                        database.setAdminMode(!1),
                        $.loading(!0),
                        database.saveSchema(function (e) {
                          $.loading(!1),
                            (database.schemaUnlocked = !1),
                            (database.schemaPassword = void 0),
                            e && $.alert(e);
                        }),
                        !0);
                  },
                });
              }
            ),
          database.supports.history || database.supports.reindex)
        ) {
          var n = $('<div class="buttons">').appendTo(this.el);
          database.supports.history &&
            n.button(void 0, locale.clearHistory, "grey", function () {
              $.dialog({
                closable: !0,
                caption: locale.clearHistory,
                message: locale.confirmClearHistory,
                buttons: [
                  {
                    color: "red",
                    caption: locale.clearHistory,
                    callback: function () {
                      database.clearHistory(function (e) {
                        e && $.alert(e);
                      });
                    },
                  },
                ],
              });
            }),
            database.supports.reindex &&
              n.button(void 0, locale.reindex, "grey", function () {
                $.dialog({
                  closable: !0,
                  caption: locale.reindex,
                  message: locale.confirmReindex,
                  buttons: [
                    {
                      color: "red",
                      caption: locale.reindex,
                      callback: function () {
                        database.reindex(function (e) {
                          e && $.alert(e);
                        });
                      },
                    },
                  ],
                });
              }),
            database.supports.rebuildThumbs &&
              n.button(void 0, locale.rebuildThumbnails, "grey", function () {
                $.dialog({
                  closable: !0,
                  caption: locale.rebuildThumbnails,
                  message: locale.rebuildThumbnailsConfirm,
                  buttons: [
                    {
                      color: "red",
                      caption: locale.rebuildThumbnails,
                      callback: function () {
                        database.rebuildThumbs(function (e) {
                          e && $.alert(e);
                        });
                      },
                    },
                  ],
                });
              }),
            database.supports.reIndexFiles &&
              n.button(void 0, locale.reIndexFiles, "grey", function () {
                $.dialog({
                  closable: !0,
                  caption: locale.reIndexFiles,
                  message: locale.reIndexFilesConfirm,
                  buttons: [
                    {
                      color: "red",
                      caption: locale.reIndexFiles,
                      callback: function () {
                        database.reIndexFiles((e) => {
                          e && $.alert(e);
                        });
                      },
                    },
                  ],
                });
              });
        }
        this.createFields();
      }),
      (Bt.prototype.destroyFields = function () {
        this.globalCodeField && this.globalCodeField.destroy(),
          this.afterOpenField && this.afterOpenField.destroy();
      }),
      (Bt.prototype.createFields = function () {
        this.destroyFields(),
          (this.globalCodeField = new ct.a(
            void 0,
            database.schema.getGlobalCodeModel(),
            this.$globalCode
          )),
          (this.afterOpenField = new ct.a(
            void 0,
            database.schema.getAfterOpenModel(),
            this.$globalCode
          ));
      });
    let qt = 1,
      Yt = 1;
    function Gt() {
      (this.nodes = []),
        (this.edges = []),
        (this.incDistances = null),
        (this.outDistances = null),
        (this.symDistances = null);
    }
    function Xt(e, t, i, o) {
      (this.graph = e),
        (this.id = t),
        (this.label = i || t),
        (this.data = o || {}),
        (this.out = []),
        (this.inc = []),
        (this.rad = 1),
        (this.mass = 1),
        (this.color = 0);
    }
    function Kt(e, t, i, o, a, n) {
      (this.graph = e),
        (this.id = t),
        (this.source = i),
        (this.target = o),
        (this.label = a || t),
        (this.data = n || {});
    }
    function Jt(e, t) {
      var i = e.indexOf(t);
      if (-1 === i) throw new Error("Not a member");
      e.splice(i, 1);
    }
    (Gt.prototype.pathDirect = function () {
      this.calcDistances();
      for (
        var e = this.nodes, t = this.incDistances, i = this.partitions(), o = 0;
        o < i.length;
        o++
      )
        i[o];
      var a = [],
        n = 0;
      for (var s in t)
        if (t.hasOwnProperty(s)) {
          var r = t[s];
          if (r >= n) {
            var l = s.split("-"),
              c = parseInt(l[0]),
              d = parseInt(l[1]);
            e[c], e[d];
            r === n ? a.push([c, d]) : (a = [[c, d]]);
          }
        }
      if (0 !== a.length) {
        a.sort(function (t, i) {
          var o = e[t[0]],
            a = e[i[0]];
          return o.inc.length + o.out.length - (a.inc.length + a.out.length);
        });
        a[0];
      }
    }),
      (Gt.prototype.powerDirectInit = function (e, t) {
        (this.powerW = e), (this.powerH = t);
        for (var i = this.nodes, o = 0; o < i.length; o++) {
          var a = i[o];
          (a.x = Math.sin((2 * Math.PI * o) / i.length) * i.length),
            (a.y = Math.cos((2 * Math.PI * o) / i.length) * i.length);
        }
      }),
      (Gt.prototype.powerDirectStep = function (e) {
        for (
          var t = 0, i = this.nodes, o = this.edges, a = 0;
          a < i.length;
          a++
        ) {
          ((y = i[a]).fx = 0), (y.fy = 0);
        }
        for (a = 0; a < o.length; a++) {
          var n,
            s = o[a],
            r = s.source,
            l = s.target,
            c = (v = r.x - l.x) * v + (b = r.y - l.y) * b,
            d = v / (h = Math.sqrt(c)),
            u = b / h;
          (n = h < 1 ? 0 : h > 1 ? -4 * (1 - 1 / c) : 0),
            (r.fx += n * d),
            (r.fy += n * u),
            (l.fx -= n * d),
            (l.fy -= n * u);
        }
        for (a = 0; a < i.length; a++) {
          r = i[a];
          for (var p = a + 1; p < i.length; p++) {
            (l = i[p]),
              (c = (v = r.x - l.x) * v + (b = r.y - l.y) * b),
              (d = v / (h = Math.sqrt(c))),
              (u = b / h);
            var h,
              m = r.rad + l.rad;
            h < m &&
              ((n = (16 * Math.sqrt(m * m - c)) / m),
              (r.fx += n * d),
              (r.fy += n * u),
              (l.fx -= n * d),
              (l.fy -= n * u));
          }
        }
        var f = this.powerW,
          g = this.powerH;
        for (a = 0; a < i.length; a++) {
          var v = (y = i[a]).x / f,
            b = y.y / g;
          (y.fx -= y.mass * v), (y.fy -= y.mass * b);
        }
        for (a = 0; a < i.length; a++) {
          var y;
          ((y = i[a]).x += y.fx * e),
            (y.y += y.fy * e),
            (t += Math.sqrt(y.fx * y.fx + y.fy * y.fy));
        }
        return t;
      }),
      (Gt.prototype.sub = function (e, t) {
        e || (e = this.nodes), t || (t = this.edges);
        for (var i = {}, o = {}, a = 0; a < e.length; a++) o[e[a].id] = !0;
        for (a = 0; a < t.length; a++) i[t[a].id] = !0;
        var n = new Gt();
        for (a = 0; a < e.length; a++) {
          var s = e[a];
          n.nodes.push(new Xt(n, s.id, s.label, s.data));
          for (var r = 0; r < s.out.length; r++) {
            i[s.out[r].id];
          }
        }
      }),
      (Gt.prototype.node = function (e, t) {
        var i = new Xt(this, qt++, e, t);
        return this.nodes.push(i), i;
      }),
      (Gt.prototype.edge = function (e, t, i, o) {
        var a = new Kt(this, Yt++, e, t, i, o);
        return e.out.push(a), t.inc.push(a), this.edges.push(a), a;
      }),
      (Gt.prototype.removeNode = function (e) {
        for (var t = 0; t < e.inc.length; t++) this.removeEdge(e.inc[t]);
        for (t = 0; t < e.out.length; t++) this.removeEdge(e.out[t]);
        Jt(this.nodes, e);
      }),
      (Gt.prototype.removeEdge = function (e) {
        Jt(e.source.out, e), Jt(e.target.inc, e), Jt(this.edges, e);
      }),
      (Gt.prototype.calcDistances = function () {
        for (var e = this.nodes, t = {}, i = 0; i < e.length; i++)
          for (var o = (c = e[i]).inc, a = 1, n = {}; o.length > 0; ) {
            for (var s = [], r = 0; r < o.length; r++) {
              n[(d = o[r].source).id] ||
                ((n[d.id] = !0),
                (t[c.id + "-" + d.id] = a),
                (s = s.concat(d.inc)));
            }
            a++, (o = s);
          }
        var l = {};
        for (i = 0; i < e.length; i++) {
          var c;
          for (o = (c = e[i]).out, a = 1, n = {}; o.length > 0; ) {
            for (s = [], r = 0; r < o.length; r++) {
              var d;
              n[(d = o[r].target).id] ||
                ((n[d.id] = !0),
                (l[c.id + "-" + d.id] = a),
                (s = s.concat(d.out)));
            }
            a++, (o = s);
          }
        }
        var u = {};
        for (var p in t) t.hasOwnProperty(p) && (u[p] = t[p]);
        for (var p in l)
          l.hasOwnProperty(p) &&
            (void 0 === u[p] || u[p] > l[p]) &&
            (u[p] = l[p]);
        (this.incDistances = t),
          (this.outDistances = l),
          (this.symDistances = u);
      }),
      (Gt.prototype.partitions = function (e, t) {
        if ("function" != typeof e) {
          this.symDistances || this.calcDistances();
          var i =
            "inc" === e
              ? this.incDistances
              : "out" === e
              ? this.outDistances
              : this.symDistances;
          e = function (e, t) {
            return void 0 !== i[e.id + "-" + t.id];
          };
        }
        t || (t = this.nodes);
        for (var o = [], a = 0; a < t.length; a++) o.push([t[a]]);
        for (
          ;
          (function () {
            for (var t = 0; t < o.length; t++)
              for (var i = o[t], a = t + 1; a < o.length; a++)
                for (var n = o[a], s = 0; s < i.length; s++)
                  for (var r = i[s], l = 0; l < n.length; l++) {
                    var c = n[l];
                    if (e(r, c))
                      return (o[t] = i.concat(n)), o.splice(a, 1), !0;
                  }
            return !1;
          })();

        );
        return o;
      }),
      (Xt.prototype.toString = function () {
        return "(" + this.label + ")";
      }),
      (Xt.prototype.remove = function () {
        this.graph.removeNode(this);
      }),
      (Kt.prototype.toString = function () {
        return (
          this.source.toString() +
          " - " +
          this.label +
          " - " +
          this.target.toString()
        );
      }),
      (Kt.prototype.remove = function () {
        this.graph.removeEdge(this);
      });
    class Zt extends s.Component {
      constructor(e) {
        super(e);
      }
      render() {
        return s.createElement(
          "div",
          { className: "nx-switch-big" },
          this.props.tabs.map((e, t) =>
            s.createElement(
              ze.a,
              {
                key: t,
                onFastClick: e.onClick,
                className:
                  "nx-switch-big-item " + (e.isSelected ? "selected" : null),
              },
              e.text
            )
          )
        );
      }
    }
    var Qt = o("./src/js/admin/AdminField.js");
    function ei(e) {
      var t = e.type,
        i = $('<div class="nx-backplane nx-backplane-dark">');
      let o;
      o = window.getWidth() < 640 ? "100%" : "600px";
      var a = $(
        '<div class="nx-menu-popup grey" style="width:' + o + ';padding:0">'
      ).appendTo(i);
      $('<div class="nx-section-head">')
        .text("Duplicate Table: " + t.caption)
        .appendTo(a);
      var n = $('<div class="nx-section-pane">').appendTo(a);
      $('<div style="padding:0 8px">')
        .text("Select fields to copy:")
        .appendTo(n);
      for (
        var s = $(
            '<div style="max-height:400px;overflow:auto;padding:8px;background-color:#fff;border:solid 1px #ddd;margin:8px">'
          ).appendTo(n),
          r = [],
          l = t.sorted,
          c = 0;
        c < l.length;
        c++
      ) {
        var d = l[c],
          u = $('<div style="display:flex;display:-webkit-flex">').appendTo(s),
          p = $('<input type="checkbox" style="margin:10px 4px 0 0">').appendTo(
            u
          );
        d.isReverse || p.attr("checked", "checked"),
          $(
            '<div style="flex:1 1 auto;-webkit-flex:1 1 auto;display:flex;display:-webkit-flex">'
          )
            .append(
              $(
                '<div class="type-symbol i-32-24 i-grey i-field-' +
                  d.base +
                  '">'
              )
            )
            .append(
              $(
                '<div style="line-height:32px;white-space:nowrap;overflow:hidden">'
              ).text(d.caption)
            )
            .appendTo(u),
          r.push({ field: d, $duplicate: p });
      }
      var h = $('<div class="nx-button-bar">').appendTo(n);
      function m() {
        var i = ti(t, r);
        f(), e.okay && e.okay(i);
      }
      function f() {
        i.animFadeOut(function () {
          i.remove(), e.close && e.close();
        });
      }
      $('<div class="nx-button-text grey">')
        .text(locale.cancel)
        .appendTo(h)
        .touch(f),
        $('<div class="nx-hspace-flex">').appendTo(h),
        $('<div class="nx-button-text blue">')
          .text(locale.duplicateTable)
          .appendTo(h)
          .touch(m),
        i.appendTo($(document.body)).animFadeIn(),
        a.center();
    }
    function ti(e, t) {
      for (
        var i = e.schema, o = i.createType(oi(e)), a = 0;
        a < t.length;
        a++
      ) {
        var n = t[a],
          s = n.field;
        if (n.$duplicate.is(":checked"))
          if (s.isField) ((r = s.toJSON()).uuid = void 0), i.createField2(o, r);
          else if (s.isReference)
            i.createReference(
              o,
              s.caption,
              s.refType,
              ai(s.refType, s.reverse.caption),
              s.cascade,
              void 0,
              void 0,
              void 0,
              void 0,
              s.order,
              void 0,
              !1
            );
          else if (s.isReverse)
            i.createReference(
              s.refType,
              ai(s.refType, s.reference.caption),
              o,
              s.caption,
              s.reference.cascade,
              void 0,
              void 0,
              void 0,
              void 0,
              void 0,
              s.order,
              !1
            );
          else if (s.isUI) {
            var r;
            ((r = s.toJSON()).uuid = void 0), i.createUI2(o, r);
          }
      }
      return o;
    }
    var ii = /([0-9]+)$/;
    function oi(e) {
      var t = e.schema,
        i = e.caption || locale.table,
        o = 2,
        a = ii.exec(i);
      for (
        a && ((o = parseInt(a[1])), (i = i.substr(0, a.index)));
        t.findType(i + "" + o);

      )
        o++;
      return i + "" + o;
    }
    function ai(e, t) {
      var i = t || locale.field,
        o = 2,
        a = ii.exec(i);
      for (
        a && ((o = parseInt(a[1])), (i = i.substr(0, a.index)));
        e.findElement(i + "" + o);

      )
        o++;
      return i + "" + o;
    }
    function ni(e) {
      var t,
        i = void 0,
        o = "EDIT_FIELDS",
        n = e.schema || database.schema.clone(),
        r = e.schemaDirty || !1,
        c = e.isNewType || !1,
        d = e.type;
      if (d) {
        if (!(t = n.types[d])) return;
      } else (t = n.createType()), (r = !0), (c = !0);
      n.on("change", de);
      var u = $.backplane({
          closable: !1,
          enter: function (e) {
            r || (e.preventDefault(), me());
          },
          escape: function (e) {
            r || (e.preventDefault(), me());
          },
        }),
        p = $('<div class="typeeditor">').appendTo(u),
        h = $("<div>").appendTo(p),
        m = $('<div class="typeeditor-bottom">').appendTo(p),
        f = $('<div class="typeeditor-left">').appendTo(p),
        g = $(
          '<div class="--ul-typeeditor-center-right-container" style="pointer-events: none;position: absolute;">'
        ).appendTo(p),
        v = $('<div class="typeeditor-center accordion">').appendTo(p),
        b = $('<div class="typeeditor-right accordion">').appendTo(p);
      if (!c) {
        var y = $('<div class="nx-button-text red">').appendTo(m).touch(pe);
        window.getWidth() < 640
          ? y.append('<div class="i-32-24 i-red i-setting-trash"/>')
          : y.text(locale.removeTable),
          $('<div class="nx-hspace-small">').appendTo(m),
          $('<div class="nx-button-text grey">')
            .text(locale.duplicateTable + "...")
            .appendTo(m)
            .touch(ue);
      }
      $('<div class="nx-hspace-flex">').appendTo(m);
      var w = $('<div class="nx-button-text grey">')
          .text(locale.cancel)
          .appendTo(m)
          .touch(me),
        x = $(
          '<div class="nx-button-text blue --ul-type-editor-save-button" style="margin-left:8px">'
        )
          .text(locale.okay)
          .appendTo(m)
          .touch(he);
      r
        ? window.getWidth() < 640
          ? (x.text(""), x.append('<div class="i-32-24 i-white i-save"/>'))
          : x.text(locale.saveDataModelChanges)
        : w.hide();
      var T,
        C,
        k,
        S,
        _,
        E,
        D = $("<div>"),
        N = new ct.a(this, t.getIconModel(), D, {
          cls: "--ul-table-icon-button table-icon-button",
          formWidth: 0.17,
        }),
        M = new ct.a(this, t.getCaptionModel(), D, {
          cls: "--ul-table-name-input",
          formWidth: 0.83,
        }),
        I = $("<div>").appendTo(f),
        R = new ct.a(this, t.getHiddenModel(), f, {
          cls: "typeeditor-boolean",
        }),
        F = new ct.a(this, t.getGlobalSearchModel(), f, {
          cls: "typeeditor-boolean",
        }),
        A = new ct.a(this, t.getHasFilesModel(), f, {
          cls: "typeeditor-boolean",
        }),
        O = database.supports.comments
          ? new ct.a(this, t.getHasCommentsModel(), f, {
              cls: "typeeditor-boolean",
            })
          : void 0,
        z = database.supports.history
          ? new ct.a(this, t.getHasHistoryModel(), f, {
              cls: "typeeditor-boolean",
            })
          : void 0,
        L = new ct.a(this, t.getAfterCreateModel(), f),
        j = new ct.a(this, t.getAfterUpdateModel(), f);
      database.supports.authentication &&
        ((T = new ct.a(this, t.getReadRolesModel(), f)),
        (C = new ct.a(this, t.getWriteRolesModel(), f))),
        (_ = new ct.a(this, t.getCanReadModel(), f)),
        (E = new ct.a(this, t.getCanWriteModel(), f)),
        database.supports.authentication &&
          ((k = new ct.a(this, t.getCreateRolesModel(), f)),
          (S = new ct.a(this, t.getDeleteRolesModel(), f)));
      $('<div class="accordion-head">').text(locale.fields).appendTo(v);
      var P = $('<div class="accordion-pane --ul-type-editor-center">')
          .appendTo(v)
          .css({ overflow: "auto" }),
        H = !1,
        U = !1,
        V = -1;
      P.sortable({
        start: function () {
          U = !0;
        },
        stop: function (e) {
          U = !1;
        },
        beforeStop: function () {},
        receive: oe,
        sort: te,
        update: ie,
        handle: TOUCH ? ".t-columneditor-icon, .t-columneditor-label" : void 0,
      });
      var W = $('<div class="accordion-head">')
          .text(locale.createField)
          .appendTo(b),
        B = $('<div class="accordion-pane">')
          .appendTo(b)
          .css({ overflow: "auto" }),
        q = $('<div class="accordion-head">').text(locale.createUI).appendTo(b),
        Y = $('<div class="accordion-pane">')
          .appendTo(b)
          .css({ overflow: "auto" })
          .hide(),
        G = $('<div class="accordion-head">')
          .text(locale.createReference)
          .appendTo(b),
        X = $('<div class="accordion-pane">')
          .appendTo(b)
          .css({ overflow: "auto" })
          .hide();
      W.touch(function () {
        ne(B);
      }),
        q.touch(function () {
          ne(Y);
        }),
        G.touch(function () {
          ne(X);
        });
      var K = B;
      function J() {
        var e = window.getWidth(),
          t = window.getHeight(),
          o = t - 56,
          n = 348,
          s = Math.min(348, Math.floor((e - n) / 2)),
          r = s,
          l = n + s + r,
          c = Math.max(0, Math.floor((e - l) / 2));
        p.css({ width: l, left: c }),
          (void 0 === i || i >= 640) && e < 640
            ? (p.prepend(D), Z())
            : (void 0 === i || i <= 640) &&
              e > 640 &&
              (D.appendTo(I), a.unmountComponentAtNode(h[0])),
          e > 640
            ? (f.css({
                display: "",
                top: 16,
                bottom: 112,
                left: 16,
                width: n - 32,
              }),
              b.css({
                display: "",
                top: 16,
                bottom: 112,
                left: n + s,
                width: r - 16,
              }),
              v.css({
                display: "",
                top: 16,
                bottom: 112,
                left: n,
                width: s - 16,
              }),
              X.css({ height: o - 282 }),
              P.css({ height: o - 196 }),
              B.css({ height: o - 282 }),
              Y.css({ height: o - 282 }),
              p.css({ top: 16, bottom: 16, height: t - 80 }),
              g.css({ top: 16, bottom: 112, left: n, width: s + r - 16 }))
            : (f.css({ left: 16, width: "95%", top: 128, bottom: 136 }),
              v.css({ left: "3%", width: "45%", top: 128, bottom: 136 }),
              b.css({ left: "52%", width: "45%", top: 128, bottom: 136 }),
              g.css({ left: "3%", width: "94%", top: 128, bottom: 136 }),
              p.css({ top: 0, bottom: 0, height: t }),
              P.css({ height: o - 252 }),
              B.css({ height: o - 336 }),
              Y.css({ height: o - 336 }),
              X.css({ height: o - 336 })),
          (i = e);
      }
      function Z() {
        const e = [
          {
            isSelected: "EDIT_FIELDS" === o,
            text: locale.fields,
            onClick: () => {
              (o = "EDIT_FIELDS"), Z();
            },
          },
          {
            isSelected: "SECURITY_OPTIONS" === o,
            text: locale.options,
            onClick: () => {
              (o = "SECURITY_OPTIONS"), Z();
            },
          },
        ];
        a.render(s.createElement(Zt, { tabs: e }), h[0]),
          "SECURITY_OPTIONS" === o
            ? (f.css("display", ""),
              b.css("display", "none"),
              v.css("display", "none"))
            : (f.css("display", "none"),
              b.css("display", ""),
              v.css("display", ""));
      }
      function ee(e) {
        if (TOUCH) {
          let t = e.data("field");
          if (!t) return;
          new Qt.a(void 0, t, !0);
        } else {
          if (!e) return;
          let o = e.data("field");
          if (!o) return;
          var t = e.find(".t-columneditor-label"),
            i = $('<input class="t-columneditor-input" type="text">').val(
              o.caption
            );
          t.before(i),
            t.detach(),
            i.keyup(function (e) {
              13 === e.which && i.blur();
            }),
            i.blur(function () {
              var e = i.val();
              (o.caption = e), t.text(e), i.before(t), i.remove();
            }),
            i.focus().select();
        }
      }
      function te(e, t) {
        V = t.placeholder.index();
      }
      function ie() {
        if (!H) {
          for (var e = P.children(), i = 0; i < e.length; i++) {
            $(e[i]).data("field").order = i;
          }
          t.resort(), n.trigger("change");
        }
      }
      function oe(e, i) {
        H = !0;
        var o = i.sender;
        if (o) {
          var a = V,
            n = o.data("col");
          if (n) {
            var s;
            if (n.isCreateField) {
              var r = t.createNewFieldName(n.field.base, n.field.caption);
              (s = t.schema.createField2(
                t,
                Object.assign({}, n.field, { caption: r, order: a - 1 })
              )),
                Object(l.f)("Table", "AddField", {
                  type: "Field",
                  fieldType: n.field.base,
                });
            } else if (n.isCreateReference) {
              var c = n.refType,
                d = c.caption;
              for (let e = 2; t.findElement(d); e++) d = c.caption + e;
              var u = t.caption;
              for (let e = 2; c.findElement(u) || (t === c && d === u); e++)
                u = t.caption + e;
              (s = t.schema.createReference(t, d, c, u, !1)),
                Object(l.f)("Table", "AddField", {
                  type: "Table Reference",
                  fieldType: "reference",
                });
            } else
              n.isCreateUI &&
                ((s = t.schema.createUI(
                  t,
                  n.field.caption,
                  a - 1,
                  n.field.base
                )),
                Object(l.f)("Table", "AddField", {
                  type: "Layout Element",
                  fieldType: n.field.base,
                }));
            setTimeout(function () {
              se(), (H = !1), ee(ae(s));
            }, 0);
          }
        }
      }
      function ae(e) {
        for (var t = P.children(), i = 0; i < t.length; i++) {
          var o = $(t[i]);
          if (o.data("field") === e) return o;
        }
      }
      function ne(e) {
        K !== e && (K.slideUp("fast"), e.slideDown("fast"), (K = e));
      }
      function se() {
        P.empty();
        var e = 0,
          i = t.sorted;
        Q.each(i, function (i) {
          e++;
          var o = i.getExpressionErrors().length > 0,
            a =
              "rev" === i.base && i.refType.master === t
                ? "list"
                : "signature" === i.fileHandling
                ? "signature"
                : i.base;
          $('<div class="t-columneditor-column' + (o ? " error" : "") + '">')
            .data("field", i)
            .append(
              $(
                '<div class="t-columneditor-icon i-32-24 ' +
                  (o ? "i-red" : "i-light-grey") +
                  '">'
              ).addClass("i-field-" + a)
            )
            .append($('<div class="t-columneditor-label">').text(i.caption))
            .appendTo(P)
            .mouseup(function () {
              U || new Qt.a(void 0, i);
            });
        }),
          0 === e &&
            $('<div style="padding:16px;color:#555">')
              .text(locale.dragFieldsHere)
              .appendTo(P);
      }
      function re() {
        B.empty();
        var e = {
          connectToSortable: P,
          helper: "clone",
          zIndex: 1e7,
          appendTo: $(document.body),
          handle: TOUCH
            ? ".t-columneditor-icon, .t-columneditor-label"
            : void 0,
        };
        function t(t) {
          var i = { field: t, isCreateField: !0 },
            o = "signature" === t.fileHandling ? "signature" : t.base;
          $('<div class="t-columneditor-column --ul-type-editor-right-field">')
            .data("col", i)
            .append(
              $(
                '<div class="t-columneditor-icon i-32-24 i-light-grey">'
              ).addClass("i-field-" + o)
            )
            .append($('<div class="t-columneditor-label">').text(t.caption))
            .appendTo(B)
            .draggable(e);
        }
        t({ base: "fn", caption: locale.types.fn }),
          t({ base: "string", caption: locale.types.string }),
          t({
            base: "string",
            caption: locale.types.string_multiline,
            stringMultiline: !0,
          }),
          t({ base: "html", caption: locale.types.html }),
          t({ base: "number", caption: locale.types.number }),
          t({ base: "boolean", caption: locale.types.boolean }),
          t({ base: "choice", caption: locale.types.choice }),
          t({ base: "multi", caption: locale.types.multi }),
          t({ base: "date", caption: locale.types.date }),
          t({ base: "time", caption: locale.types.time }),
          t({ base: "timestamp", caption: locale.types.timestamp }),
          t({ base: "timeinterval", caption: locale.types.timeinterval }),
          t({ base: "appointment", caption: locale.types.appointment }),
          t({ base: "file", caption: locale.types.file }),
          t({
            base: "file",
            caption: locale.signature,
            fileHandling: "signature",
          }),
          t({ base: "link", caption: locale.types.link }),
          t({ base: "email", caption: locale.types.email }),
          t({ base: "phone", caption: locale.types.phone }),
          t({ base: "location", caption: locale.types.location }),
          t({ base: "color", caption: locale.types.color }),
          t({ base: "icon", caption: locale.types.icon }),
          database.supports.authentication &&
            t({ base: "user", caption: locale.types.user }),
          t({ base: "dchoice", caption: locale.choiceDynamic }),
          t({ base: "dmulti", caption: locale.multipleChoiceDynamic });
      }
      function le() {
        Y.empty();
        var e = {
          connectToSortable: P,
          helper: "clone",
          zIndex: 1e7,
          appendTo: $(document.body),
          handle: TOUCH
            ? ".t-columneditor-icon, .t-columneditor-label"
            : void 0,
        };
        function t(t) {
          var i = { field: t, isCreateUI: !0 };
          $('<div class="t-columneditor-column">')
            .data("col", i)
            .append(
              $(
                '<div class="t-columneditor-icon i-32-24 i-light-grey">'
              ).addClass("i-field-" + t.base)
            )
            .append($('<div class="t-columneditor-label">').text(t.caption))
            .appendTo(Y)
            .draggable(e);
        }
        t({ base: "tab", caption: locale.types.tab }),
          t({ base: "head", caption: locale.types.head }),
          t({ base: "text", caption: locale.types.text }),
          t({ base: "br", caption: locale.types.br }),
          t({ base: "space", caption: locale.types.space }),
          t({ base: "button", caption: locale.types.button }),
          t({ base: "view", caption: locale.types.view }),
          t({ base: "chart", caption: locale.types.chart });
      }
      function ce() {
        X.empty();
        var e = {
          connectToSortable: P,
          helper: "clone",
          zIndex: 1e7,
          appendTo: $(document.body),
          handle: TOUCH
            ? ".t-columneditor-icon, .t-columneditor-label"
            : void 0,
        };
        Q.each(util.localeSortBy(t.schema.types, "caption"), function (t) {
          var i = { refType: t, isCreateReference: !0 };
          $('<div class="t-columneditor-column">')
            .data("col", i)
            .append(
              $(
                '<div class="t-columneditor-icon i-32-24 i-light-grey">'
              ).addClass("i-field-ref")
            )
            .append($('<div class="t-columneditor-label">').text(t.caption))
            .appendTo(X)
            .draggable(e);
        });
      }
      function de() {
        se(),
          ce(),
          r ||
            ((r = !0),
            w.show(),
            window.getWidth() < 640
              ? (x.text(""), x.append('<div class="i-32-24 i-white i-save"/>'))
              : x.text(locale.saveDataModelChanges));
      }
      function ue() {
        Object(l.f)("Table", "Duplicate"),
          new ei({
            type: t,
            cancel: function () {},
            okay: function (e) {
              Object(l.f)("Table", "DuplicateConfirm"),
                me(),
                new ni({
                  schema: n,
                  type: e.id,
                  isNewType: !0,
                  schemaDirty: !0,
                });
            },
          });
      }
      function pe() {
        Object(l.f)("Table", "Remove"),
          $.dialog({
            closable: !0,
            caption: locale.removeTable,
            message: locale.confirmRemoveTable,
            buttons: [
              {
                color: "red",
                caption: locale.removeTable,
                callback: function () {
                  Object(l.f)("Table", "RemoveConfirm"),
                    $.loading(!0),
                    t.schema.removeType(t),
                    database.updateSchema(n, function (e) {
                      if (($.loading(!1), e)) return $.alert(e);
                      me();
                    });
                },
              },
            ],
          });
      }
      function he() {
        if (!r) return me();
        Object(l.f)("Table", "SaveChanges"),
          e.beforeSaveType && e.beforeSaveType(),
          $.loading(!0),
          database.updateSchema(n, function (i) {
            if (($.loading(!1), i)) return $.alert(i);
            me(), e.afterSaveType && e.afterSaveType(t.id);
          });
      }
      function me() {
        $(window).off("resize", J),
          n.off("change", de),
          u.close(function () {
            M.destroy(),
              N.destroy(),
              R.destroy(),
              F.destroy(),
              A && A.destroy(),
              O && O.destroy(),
              z && z.destroy(),
              T && T.destroy(),
              C && C.destroy(),
              k && k.destroy(),
              S && S.destroy(),
              _ && _.destroy(),
              E && E.destroy(),
              L && L.destroy(),
              j && j.destroy(),
              e.close && e.close(),
              a.unmountComponentAtNode(h[0]);
          });
      }
      se(),
        re(),
        le(),
        ce(),
        J(),
        $(window).on("resize", J),
        c &&
          setTimeout(function () {
            p.find(".component").first().data("component").focus();
          }, 400);
    }
    function si(e, t) {
      (this.container = e),
        (this.visible = !1),
        (this.el = $('<div class="schema">')),
        (this.$controls = $('<div class="admin-schema-controls">')),
        this.$controls.button2({
          cls: "blue",
          caption: locale.addTable,
          click: function () {
            Object(l.f)("DataModel", "CreateTable"), new ni({});
          },
        }),
        (this.resize = () => {
          this.render();
        }),
        database.on("schema", void 0, this.schemaChanged, this);
    }
    function ri(e, t) {
      (this.container = e), (this.visible = !1);
      var i = database.settings;
      this.el = $('<div class="admin-options">');
      var o = $('<div class="admin-options-pane">').appendTo(this.el),
        a = new util.SimpleModel(
          new schemas.TRoles(void 0, void 0, {
            caption: locale.rolesOpen,
            width: 4,
          })
        );
      a.value = i.rolesOpen ? i.rolesOpen.slice() : [];
      new ct.a(this, a, o);
      var n = new util.SimpleModel(
        new schemas.TRoles(void 0, void 0, {
          caption: locale.history,
          width: 4,
        })
      );
      n.value = i.rolesHistory ? i.rolesHistory.slice() : [];
      new ct.a(this, n, o);
      var s = new util.SimpleModel(
        new schemas.TRoles(void 0, void 0, {
          caption: locale.rolesExport,
          width: 4,
        })
      );
      s.value = i.rolesExport ? i.rolesExport.slice() : [];
      new ct.a(this, s, o);
      var r = new util.SimpleModel(
        new schemas.TRoles(void 0, void 0, {
          caption: locale.rolesImport,
          width: 4,
        })
      );
      r.value = i.rolesImport ? i.rolesImport.slice() : [];
      new ct.a(this, r, o);
      var l = new util.SimpleModel(
        new schemas.TRoles(void 0, void 0, {
          caption: locale.rolesPrint,
          width: 4,
        })
      );
      l.value = i.rolesPrint ? i.rolesPrint.slice() : [];
      new ct.a(this, l, o);
      var c = new util.SimpleModel(
        new schemas.TRoles(void 0, void 0, {
          caption: locale.rolesMassDataUpdate,
          width: 4,
        })
      );
      c.value = i.rolesMassDataUpdate ? i.rolesMassDataUpdate.slice() : [];
      new ct.a(this, c, o);
      $('<div style="padding:8px 0;text-align:right">')
        .appendTo(o)
        .button(void 0, locale.saveSchema, "blue", function () {
          database.updateSettings(
            {
              rolesOpen: a.value,
              rolesHistory: n.value,
              rolesExport: s.value,
              rolesImport: r.value,
              rolesPrint: l.value,
              rolesMassDataUpdate: c.value,
            },
            function (e) {
              if (e) return $.alert(e);
              $.alert(locale.okay);
            }
          );
        });
    }
    (si.prototype.base = "schema"),
      (si.prototype.getNavigationState = function () {
        return { base: "schema" };
      }),
      (si.prototype.destroy = function () {
        database.off("schema", void 0, this.schemaChanged, this),
          this.el.remove(),
          this.$controls.remove();
      }),
      (si.prototype.hide = function () {
        this.visible &&
          ((this.visible = !1),
          $(window).off("resize", this.resize),
          this.$controls.detach(),
          this.el.detach().empty());
      }),
      (si.prototype.show = function () {
        if (!this.visible) {
          Object(l.f)("DataModel", "Open"),
            (this.visible = !0),
            this.el.appendTo(this.container.el),
            this.$controls.appendTo(ui.$body),
            $(window).on("resize", this.resize);
          var e = this;
          setTimeout(function () {
            e.render();
          }, 0);
        }
      }),
      (si.prototype.schemaChanged = function (e, t, i) {
        this.visible && this.render();
      }),
      (si.prototype.render = function () {
        var e = this.el,
          t = database.schema.types;
        if (0 !== Q.size(t)) {
          var i = new Gt(),
            o = {},
            a = {};
          Q.each(t, function (e) {
            var t = { children: [], type: e };
            if (((o[e.id] = t), !e.master)) {
              var n = i.node(e.caption, { type: e, group: t });
              (n.rad = 1.5),
                (n.mass = 1),
                (n.color = 1),
                (t.node = n),
                (a[e.id] = n);
            }
          }),
            Q.each(t, function (e) {
              var t = o[e.id];
              if (e.master) {
                var i = o[e.master.id];
                i.children.push(t), (t.parent = i);
              }
            }),
            Q.each(t, function (e) {
              o[e.id];
              if (e.master) {
                for (var t = o[e.master.id]; t.parent; ) t = t.parent;
                t.node.rad += 0.4;
              }
            });
          var n = [],
            s = {};
          Q.each(t, function (e) {
            for (var t = o[e.id], a = t; a.parent; ) a = a.parent;
            var r = a.node;
            Q.each(e.fields, function (a) {
              if (a.isReference) {
                var l = e.id + "-" + a.refType.id,
                  c = a.refType.id + "-" + e.id;
                if (!s[l] && ((s[l] = !0), !s[c])) {
                  s[l] = !0;
                  for (var d = o[a.refType.id], u = d; u.parent; ) u = u.parent;
                  var p = u.node;
                  if (t !== d && (!t.type.master || t.type.master !== d.type)) {
                    var h = i.node(a.caption, {
                      source: r,
                      target: p,
                      sourceGroup: t,
                      targetGroup: d,
                    });
                    (h.mass = 0), (h.color = 2), (h.rad = 0.2);
                    i.edge(h, r, a.caption, {}), i.edge(h, p, a.caption, {});
                    n.push(h);
                  }
                }
              }
            });
          });
          var r = Math.max(800, ui.$body.width() - 20),
            l = Math.max(600, ui.$body.height()),
            c = 50;
          i.powerDirectInit(r / c, l / c);
          for (var d = 0; d < 2e3; d++) {
            if (i.powerDirectStep(0.05) < 1) break;
          }
          var u = 1 / 0,
            p = 1 / 0,
            h = -1 / 0,
            m = -1 / 0;
          Q.each(a, function (e) {
            (u = Math.min(e.x - e.rad, u)),
              (p = Math.min(e.y - e.rad, p)),
              (h = Math.max(e.x + e.rad, h)),
              (m = Math.max(e.y + e.rad, m));
          });
          var f = h - u,
            g = m - p,
            v = Math.ceil(Math.max(l, c * g)),
            b = Math.ceil(Math.max(r, c * f)),
            y = Math.round((b - c * f) / 2),
            w = Math.round((v - c * g) / 2);
          e.empty();
          var x = "http://www.w3.org/2000/svg",
            T = document.createElementNS(x, "svg");
          e[0].appendChild(T),
            T.setAttributeNS(null, "viewBox", "0 0 " + b + " " + v),
            T.setAttributeNS(null, "width", b),
            T.setAttributeNS(null, "height", v);
          var C = e.width(),
            k = e.height();
          r > C && e.scrollLeft((r - C) / 2), v > k && e.scrollTop((v - k) / 2);
          var S = document.createElementNS(x, "defs");
          T.appendChild(S);
          var $ = document.createElementNS(x, "marker");
          ($.id = "Triangle"),
            $.setAttributeNS(null, "refX", "4"),
            $.setAttributeNS(null, "refY", "3"),
            $.setAttributeNS(null, "markerWidth", "6"),
            $.setAttributeNS(null, "markerHeight", "6"),
            $.setAttributeNS(null, "orient", "auto"),
            S.appendChild($);
          var _ = document.createElementNS(x, "path");
          _.setAttributeNS(null, "d", "M0,0 L0,6 L4,3 L0,0"),
            _.setAttributeNS(null, "class", "schema-arrow"),
            $.appendChild(_);
          var E = document.createElementNS(x, "g");
          T.appendChild(E);
          var D = document.createElementNS(x, "g");
          T.appendChild(D),
            Q.each(a, function (e) {
              var t = e.data.group;
              N(E, t);
              var i = y + c * (e.x - u),
                o = w + c * (e.y - p);
              (t.x = i),
                (t.y = o),
                t.shape.setAttributeNS(
                  null,
                  "transform",
                  "translate(" + i + " " + o + ")"
                );
            }),
            Q.each(n, function (e) {
              e.data.path && T.remove(e.data.path), (e.data.path = I(D, e));
            });
        }
        function N(e, t) {
          var i = t.type,
            o = document.createElementNS(x, "g");
          e.appendChild(o);
          var a = document.createElementNS(x, "clipPath");
          (a.id = "CLIP_" + Math.random()), o.appendChild(a);
          var n = document.createElementNS(x, "rect");
          a.appendChild(n);
          var s = document.createElementNS(x, "rect");
          s.setAttributeNS(null, "class", "schema-type"), o.appendChild(s);
          var r = document.createElementNS(x, "text");
          r.appendChild(document.createTextNode(i.caption)),
            r.setAttributeNS(null, "class", "schema-type-text"),
            r.setAttributeNS(null, "clip-path", "url(#" + a.id + ")"),
            o.appendChild(r);
          for (var l = 120, c = 30, d = [], u = 0; u < t.children.length; u++) {
            N(o, (b = t.children[u])),
              (l = Math.max(l, b.w)),
              (c += b.h + 10),
              d.push(b);
          }
          d.length > 0 && (l += 20);
          var p = -l / 2,
            h = -c / 2;
          s.setAttributeNS(null, "rx", 4),
            s.setAttributeNS(null, "ry", 4),
            s.setAttributeNS(null, "x", p),
            s.setAttributeNS(null, "y", h),
            s.setAttributeNS(null, "width", l),
            s.setAttributeNS(null, "height", c),
            n.setAttributeNS(null, "x", p),
            n.setAttributeNS(null, "y", h),
            n.setAttributeNS(null, "width", l),
            n.setAttributeNS(null, "height", c);
          var m,
            f = r.getComputedTextLength();
          (m = f > l - 10 ? p + 5 : -f / 2),
            r.setAttributeNS(null, "x", m),
            r.setAttributeNS(null, "y", h + 20);
          var g = 0,
            v = h + 30;
          for (u = 0; u < d.length; u++) {
            var b;
            ((b = d[u]).x = g),
              (b.y = v + b.h / 2),
              b.shape.setAttributeNS(
                null,
                "transform",
                "translate(" + b.x + " " + b.y + ")"
              ),
              (v += b.h + 10);
          }
          (t.w = l),
            (t.h = c),
            (t.shape = o),
            (r.onclick = s.onclick =
              function () {
                new ni({ type: i.id });
              });
        }
        function M(e) {
          for (var t = e.x, i = e.y, o = e.parent; o; )
            (t += o.x), (i += o.y), (o = o.parent);
          return { x: t - e.w / 2, y: i - e.h / 2, width: e.w, height: e.h };
        }
        function I(e, t) {
          var i = t.data.sourceGroup,
            o = t.data.targetGroup,
            a = M(i),
            n = M(o),
            s = y + c * (t.x - u),
            r = w + c * (t.y - p),
            l = R(a, s, r),
            d = R(n, s, r),
            h =
              "M " +
              l[0] +
              "," +
              l[1] +
              " C " +
              s +
              "," +
              r +
              "," +
              s +
              "," +
              r +
              "," +
              d[0] +
              "," +
              d[1],
            m = document.createElementNS(x, "path");
          return (
            m.setAttributeNS(null, "d", h),
            m.setAttributeNS(null, "class", "schema-link"),
            m.setAttributeNS(null, "style", "marker-end:url(#Triangle)"),
            e.appendChild(m),
            m
          );
        }
        function R(e, t, i) {
          var o = e.x,
            a = e.y,
            n = e.width,
            s = e.height,
            r = n / 2,
            l = s / 2,
            c = o + r,
            d = a + l,
            u = t - c,
            p = i - d,
            h = Math.abs(u * (l / p)),
            m = Math.abs(p * (r / u));
          return h <= r
            ? p < 0
              ? u > 0
                ? [c + h, a]
                : [c - h, a]
              : u > 0
              ? [c + h, a + s]
              : [c - h, a + s]
            : p < 0
            ? u > 0
              ? [o + n, d - m]
              : [o, d - m]
            : u > 0
            ? [o + n, d + m]
            : [o, d + m];
        }
      }),
      (ri.prototype.base = "security"),
      (ri.prototype.getNavigationState = function () {
        return { base: "security" };
      }),
      (ri.prototype.destroy = function () {
        this.el.remove();
      }),
      (ri.prototype.show = function () {
        Object(l.f)("Security", "Open"),
          this.visible ||
            ((this.visible = !0), this.el.appendTo(this.container.el));
      }),
      (ri.prototype.hide = function () {
        this.visible && ((this.visible = !1), this.el.detach());
      });
    o("./src/react/Console.css");
    function li({
      navigationState: e,
      updateNavigationState: t,
      queries: i,
      database: o,
    }) {
      const [a, n] = s.useState(e.consoleInput || ""),
        [r, c] = s.useState(e.consoleOutput || "");
      function d(e) {
        try {
          const t = i.parse(o.schema, void 0, e, {}, !0, !0, !0);
          if (t.errors && t.errors.length) return t.errors[0].message;
        } catch (e) {
          return e.toString();
        }
      }
      function u(e) {
        Object(l.f)("Console", "Run"),
          h(a, e.event.metaKey && e.event.shiftKey),
          t(a, r);
      }
      function p(e) {
        n(e), t(a, r);
      }
      function h(e, t) {
        let a;
        try {
          (a = i.parse(o.schema, void 0, e, {}, !0, !0, !0)),
            a.errors && a.errors.length
              ? c(a.errorMessage())
              : a.evaluate(o, void 0, (e, n) => {
                  if (e) c(a.errorMessage());
                  else {
                    let e = "";
                    a.isMultiple()
                      ? n &&
                        (e = n
                          .reduce((e, t) => [...e, a.returnType.format(t)], [])
                          .join("\n"))
                      : (e = a.returnType.format(n)),
                      t &&
                        (e +=
                          "\n=== Internal Expression ===\n" +
                          a.toString() +
                          "\n=== Reparsed Expression ===\n" +
                          i
                            .parseSystem(o.schema, void 0, a.toString(), {})
                            .toHumanString("") +
                          "\n=== JS Sync Code ===\n" +
                          a.getSyncJS() +
                          "\n=== JS Async Code ===\n" +
                          a.getAsyncJS()),
                      c(e);
                  }
                });
        } catch (e) {
          c(e + " / " + a.getAsyncJS());
        }
      }
      return s.createElement(
        "div",
        { className: "Console_root" },
        s.createElement(
          "div",
          { className: "Console_header" },
          s.createElement(
            ze.a,
            {
              className: "Console_runButton nx-button-text blue",
              onFastClick: u,
            },
            Object(_e.a)().runConsole
          ),
          s.createElement("div", { className: "Console_error" }, d(a))
        ),
        s.createElement("textarea", {
          onChange: (e) => p(e.target.value),
          value: a,
          style: { height: "30%" },
          className: "Console_input",
          autoCorrect: "off",
          autoCapitalize: "off",
          autoComplete: "off",
          spellCheck: !1,
        }),
        s.createElement("textarea", {
          onChange: () => null,
          value: r,
          className: "Console_output",
          autoCorrect: "off",
          autoCapitalize: "off",
          autoComplete: "off",
          spellCheck: !1,
        })
      );
    }
    class ci {
      constructor(e, t) {
        Ie()(this, "container", void 0),
          Ie()(this, "navigationState", void 0),
          Ie()(this, "el", void 0),
          Ie()(this, "visible", void 0),
          Ie()(this, "base", void 0),
          (this.container = e),
          (this.navigationState = t),
          (this.updateNavigationState = $.proxy(
            this.updateNavigationState,
            this
          )),
          (this.el = $('<div class="admin-options console-container">')),
          (this.base = "console");
      }
      getNavigationState() {
        return this.navigationState;
      }
      updateNavigationState(e, t) {
        (this.navigationState.consoleInput = e),
          (this.navigationState.consoleOutput = t);
      }
      destroy() {
        a.unmountComponentAtNode(this.el[0]), this.el.remove();
      }
      hide() {
        this.visible && ((this.visible = !1), this.el.detach());
      }
      show() {
        Object(l.f)("Console", "Open"),
          this.visible ||
            ((this.visible = !0),
            this.el.appendTo(this.container.el),
            this.updateUI());
      }
      updateUI() {
        this.visible &&
          a.render(
            s.createElement(li, {
              database: window.database,
              queries: window.queries,
              updateNavigationState: this.updateNavigationState,
              navigationState: this.navigationState,
            }),
            this.el[0]
          );
      }
    }
    var di = o("./src/js/widgets/Component.js");
    function pi(e, t, i) {
      (this.container = e),
        (this.field = i),
        (this.visible = !0),
        (this.el = $('<div class="component br">')
          .data("component", this)
          .attr("title", i.tooltip || "")
          .appendTo(t.el));
    }
    function hi(e, t, i) {
      (this.container = e),
        (this.field = i),
        (this.visible = !0),
        (this.el = $('<div class="component editor button">')
          .data("component", this)
          .attr("title", i.tooltip || "")),
        this.updateElementWidth(),
        this.el.appendTo(t.el);
      var o = i.buttonColor || "blue";
      (this.button = $('<div class="nx-button-text ' + o + '">')
        .text(i.caption || locale.unnamed)
        .appendTo(this.el)
        .touch($.proxy(this.buttonClicked, this))),
        this.updateUIStyle();
    }
    Object.assign(pi.prototype, di.a.prototype),
      (pi.prototype.isWidthAdjustable = function () {
        return !1;
      }),
      (pi.prototype.updateStructure = function () {
        var e = this.field;
        this.el.attr("title", e.tooltip || "");
      }),
      Object.assign(hi.prototype, di.a.prototype),
      (hi.prototype.isWidthAdjustable = function () {
        return !0;
      }),
      (hi.prototype.updateStructure = function () {
        var e = this.field;
        this.button.text(e.caption || locale.unnamed),
          this.updateElementWidth(),
          this.el.attr("title", e.tooltip || "");
        var t = e.buttonColor || "blue";
        (this.button[0].className = "nx-button-text " + t),
          this.updateUIStyle();
      }),
      (hi.prototype.setHeight = function (e) {}),
      (hi.prototype.updateUI = function () {}),
      (hi.prototype.updateUIStyle = function () {
        var e = this.field,
          t = (e.style && JSON.parse(e.style)) || void 0;
        if (t) {
          var i = t.backgroundColor;
          this.button.css({
            "border-color": i,
            "background-color": i,
            color: t.color || util.contrastingTextColorTo(i) || "#FFF",
            "font-weight": t.fontWeight || "",
            "font-style": t.fontStyle || "",
            "font-size": t.fontSize || "",
            "text-align": t.textAlign || "",
            "border-width": t.borderWidth || "",
            "border-color": t.borderColor || "",
            "border-left-style":
              (util.multiHasOne(t.borderSides, [1]) ? t.borderStyle : "none") ||
              "",
            "border-top-style":
              (util.multiHasOne(t.borderSides, [2]) ? t.borderStyle : "none") ||
              "",
            "border-bottom-style":
              (util.multiHasOne(t.borderSides, [3]) ? t.borderStyle : "none") ||
              "",
            "border-right-style":
              (util.multiHasOne(t.borderSides, [4]) ? t.borderStyle : "none") ||
              "",
          });
        } else
          this.button.css({
            "border-color": "",
            "background-color": "",
            color: "",
            "font-weight": "",
            "font-style": "",
            "font-size": "",
            "text-align": "",
            "border-width": "",
            "border-color": "",
            "border-left-style": "",
            "border-top-style": "",
            "border-bottom-style": "",
            "border-right-style": "",
          });
      }),
      (hi.prototype.buttonClicked = function () {
        this.button.addClass("clicked"),
          Object(c.e)(this.field.fn, this.container.nid, (e) => {
            this.button.removeClass("clicked"), e && $.alert(e);
          });
      });
    var mi = o("./node_modules/chart.js/dist/Chart.js");
    function fi(e) {
      var t = e.query,
        i = t.cols,
        o = t.models,
        a = t.rows,
        n = t.groups,
        s = null != t.cidxGroup,
        r = t.tid;
      if (!database.schema.types[r]) throw new Error(locale.errorTypeNotFound);
      s && (a = t.groupsSorted);
      var l = e.chartType || "bar",
        c = e.chartDatasets || "rows",
        d = !!e.chartStacked,
        u = e.chartLineTension ? 0.25 : 0,
        p = void 0,
        h = [];
      function m(e) {
        var o = i[e];
        return s
          ? e === t.cidxGroup
            ? o.field
            : o.agg
            ? o.aggType
            : void 0
          : o.field;
      }
      if (i.length < 1) throw new Error(locale.chartNoData);
      if (1 === i.length) {
        if (((S = i[0]), !(w = m(0)))) throw new Error(locale.chartNoData);
        if ("number" !== w.base) throw new Error(locale.chartNoData);
        !0, (p = void 0), (h = [0]);
      } else {
        (S = i[0]),
          (w = m(0)) && "number" === w.base ? (!1, (p = 0)) : (!0, (p = 0));
        for (var f = 1; f < i.length; f++)
          (S = i[f]), (w = m(f)) && "number" === w.base && h.push(f);
      }
      if (!h.length) throw new Error(locale.chartNoData);
      var g = {
        responsive: !1,
        responsiveAnimationDuration: 0,
        maintainAspectRatio: !1,
        onResize: null,
        devicePixelRatio: window.devicePixelRatio,
        tooltips: {
          callbacks: {
            label: function (e, t) {
              const i = h[e["rows" === c ? "index" : "datasetIndex"]];
              var o = void 0 === i ? void 0 : m(i),
                a =
                  "pie" === l || "doughnut" === l
                    ? t.datasets[e.datasetIndex].data[e.index]
                    : e.yLabel;
              return o ? o.format(a) : String(a);
            },
          },
        },
        animation: { duration: 0 },
      };
      if (
        ("none" === e.chartLegend && (g.legend = { display: !1 }),
        "bubble" !== l)
      ) {
        var v = [],
          b = [];
        if ("cols" === c) {
          if (null != p)
            for (var y = 0; y < a.length; y++) {
              var w,
                x = a[y],
                T = (D = s ? n[x] : o[x]).values[p],
                C = (w = m(p)) ? w.format(T) : String(T);
              v[y] = C || String(y + 1);
            }
          else for (y = 0; y < a.length; y++) v[y] = String(y + 1);
          for (f = 0; f < h.length; f++) {
            var k = h[f],
              S = i[k],
              $ = [];
            for (y = 0; y < a.length; y++) {
              (x = a[y]), (T = (D = s ? n[x] : o[x]).values[k]);
              $[y] = T || 0;
            }
            var _ = { label: (C = S.caption || S.expression.caption), data: $ };
            switch (l) {
              case "bar":
                (_.borderColor = gi(f, h.length)),
                  (_.backgroundColor = gi(f, h.length));
                break;
              case "line":
              case "radar":
                (_.borderColor = bi(f, h.length)),
                  (_.backgroundColor = vi(f, h.length)),
                  (_.tension = u);
                break;
              case "pie":
              case "doughnut":
              case "polarArea":
                (_.borderColor = []), (_.backgroundColor = []);
                for (var E = 0; E < a.length; E++)
                  (_.borderColor[E] = "#fff"),
                    (_.backgroundColor[E] = gi(E, a.length));
            }
            b.push(_);
          }
        } else {
          for (f = 0; f < h.length; f++) {
            (k = h[f]), (S = i[k]);
            v[f] = S.caption || S.expression.caption;
          }
          for (y = 0; y < a.length; y++) {
            x = a[y];
            var D = s ? n[x] : o[x];
            for ($ = [], f = 0; f < h.length; f++) {
              (k = h[f]), (S = i[k]), (T = D.values[k]);
              $[f] = T || 0;
            }
            _ = {
              label: (C =
                (null != p && (w = m(p)) && w.format(D.values[p])) ||
                String(y + 1)),
              data: $,
            };
            switch (l) {
              case "bar":
                (_.borderColor = gi(y, a.length)),
                  (_.backgroundColor = gi(y, a.length));
                break;
              case "line":
              case "radar":
                (_.borderColor = bi(y, a.length)),
                  (_.backgroundColor = vi(y, a.length)),
                  (_.tension = u);
                break;
              case "pie":
              case "doughnut":
              case "polarArea":
                _.backgroundColor = [];
                for (E = 0; E < h.length; E++)
                  _.backgroundColor[E] = bi(E, h.length);
            }
            b.push(_);
          }
        }
        var N = m(h[0]);
        return (
          ("bar" !== l && "line" !== l) ||
            Object.assign(g, {
              scales: {
                yAxes: [
                  {
                    stacked: d,
                    ticks: {
                      beginAtZero: !0,
                      callback: function (e, t, i) {
                        return N ? N.format(e) : String(e);
                      },
                    },
                  },
                ],
                xAxes: [{ stacked: d }],
              },
            }),
          new mi(e.$canvas, {
            type: l,
            data: { labels: v, datasets: b },
            options: g,
          })
        );
      }
      if (h.length < 3) throw new Error(locale.chartBubbleRequiresColumns);
      for (b = [], y = 0; y < a.length; y++) {
        (x = a[y]), (D = s ? n[x] : o[x]);
        C = (null != p && (w = m(p)) && w.format(D.values[p])) || String(y + 1);
        var M = D.values[h[0]],
          I = D.values[h[1]],
          R = D.values[h[2]];
        null != M &&
          null != I &&
          null != R &&
          b.push({
            label: C,
            borderColor: bi(y, a.length),
            borderWidth: 2,
            backgroundColor: vi(y, a.length),
            data: [{ x: M, y: I, r: R }],
          });
      }
      return new mi(e.$canvas[0].getContext("2d"), {
        type: l,
        data: { datasets: b },
        options: g,
      });
    }
    function gi(e, t) {
      return yi(e, t, 0.6);
    }
    function vi(e, t) {
      return yi(e, t, 0.1);
    }
    function bi(e, t) {
      return yi(e, t, 1);
    }
    function yi(e, t, i) {
      var o = (360 * e) / t,
        a = 0.8,
        n = 0.8,
        s = util.hsv2rgb(o, a, n);
      return (s[3] = i), util.formatColor(s);
    }
    function wi(e, t, i) {
      (this.container = e),
        (this.field = i),
        (this.visible = !0),
        (this.el = $('<div class="component editor chart">')
          .data("component", this)
          .attr("title", i.tooltip || "")
          .css("height", 40 * i.height + 37 + "px")),
        this.updateElementWidth(),
        this.el.appendTo(t.el),
        (this.label = $("<label>")
          .text(i.caption || locale.unnamed)
          .appendTo(this.el)),
        (this.$chart = $('<div class="chartview">').appendTo(this.el)),
        (this.$message = $('<div class="chartview-message">').appendTo(
          this.$chart
        )),
        (this.$canvas = $(
          '<canvas class="chartview-canvas" style="display:block;width:100%;height:100%"></canvas>'
        ).appendTo(this.$chart)),
        (this.chart = void 0);
    }
    function xi(e, t) {
      const i = this;
      (this.id = "comments"),
        (this.container = e),
        (this.selectedIconClass = "tab-icon-container i-18 i-white i-chat"),
        (this.unselectedIconClass =
          "tab-icon-container i-18 i-light-grey i-chat"),
        (this.elTab = $('<div class="tab tab-icon">')
          .attr("title", locale.comments)
          .append($(`<div class="${this.unselectedIconClass}"></div>`))
          .touch(
            $.proxy(function () {
              i.container.selectTab(i.id);
            }, this)
          )),
        (this.tabSelectedIndicator = $('<div class="tab-selected-indicator">')),
        (this.el = $('<div class="comments">')
          .hide()
          .appendTo(e.containerEl || e.el));
      const o = $(
        '<div class="component editor editor-string editor-4col">'
      ).appendTo(this.el);
      $("<label>").text(locale.postCommentLabel).appendTo(o),
        (this.comment = $('<textarea style="height:96px">').appendTo(
          $('<div class="stringeditor">').appendTo(o)
        ));
      const a = $('<div class="comments-post-btn">').appendTo(this.el);
      $('<div class="nx-hspace-flex">').appendTo(a),
        $('<div class="nx-button-text blue">')
          .text(locale.postCommentButton)
          .appendTo(a)
          .touch($.proxy(this.post, this)),
        (this.commentDiv = $('<div class="comment">')
          .appendTo(this.el)
          .touch($.proxy(this.commentClicked, this)));
    }
    function Ti(e) {
      var t = e.getHours(),
        i = e.getMinutes();
      return (t < 10 ? "0" : "") + t + ":" + (i < 10 ? "0" : "") + i;
    }
    function Ci(e, t, i) {
      (this.container = e),
        (this.field = i),
        (this.visible = !0),
        (this.el = $('<div class="component editor custom">')
          .data("component", this)
          .appendTo(t.el)),
        this.updateElementWidth(),
        (this.label = $("<label>")
          .text(i.caption || locale.unnamed)
          .appendTo(this.el)),
        (this.content = $('<div style="padding:8px">').appendTo(this.el));
    }
    Object.assign(wi.prototype, di.a.prototype),
      (wi.prototype.destroy = function () {
        this.chart && (this.chart.destroy(), (this.chart = void 0)),
          di.a.prototype.destroy.call(this);
      }),
      (wi.prototype.createQuery = function () {
        try {
          return new queries.QueryExpression(
            database,
            this.field,
            this.container.nid
          );
        } catch (e) {
          return;
        }
      }),
      (wi.prototype.updateStructure = function () {
        var e = this.field;
        this.el
          .css("height", 40 * e.height + 37 + "px")
          .attr("title", e.tooltip || ""),
          this.updateElementWidth(),
          this.label.text(e.caption || locale.unnamed);
      }),
      (wi.prototype.updateUI = function () {
        var e = this,
          t = this.createQuery();
        if (((this.query = t), !t)) return;
        let i = (e._chartLoadingId = Math.random());
        t.load(function () {
          if (i === e._chartLoadingId) {
            e.chart && (e.chart.destroy(), (e.chart = void 0)),
              e.$message.text("");
            try {
              (e.chart = fi({
                query: t,
                chartType: e.field.chartType,
                chartDatasets: e.field.chartDatasets,
                chartStacked: e.field.chartStacked,
                chartLineTension: e.field.chartLineTension,
                chartLegend: e.field.chartLegend,
                animationDuration: 0,
                $canvas: e.$canvas,
              })),
                e.resizeChart();
            } catch (t) {
              e.$message.text(t);
            }
          }
        });
      }),
      (wi.prototype.bind = function (e) {
        this.updateVisibility(), this.updateUI();
      }),
      (wi.prototype.nodeChanged = function () {
        this.updateVisibility(), this.updateUI();
      }),
      (wi.prototype.isHeightAdjustable = function () {
        return !0;
      }),
      (wi.prototype.setHeight = function (e) {
        var t = Math.max(2, Math.round((e - 37) / 40));
        (this.field.height = t),
          this.el.css("height", 40 * t + 37 + "px"),
          this.resize();
      }),
      (wi.prototype.widthChanged = function () {
        this.resize();
      }),
      (wi.prototype.resize = function () {
        this.resizeChart();
      }),
      (wi.prototype.resizeChart = function () {
        this.chart && this.chart.resize();
      }),
      (xi.prototype.bind = function (e) {
        !database.sql &&
          this.nid &&
          database.offComment(this.nid, this.loadComments, this),
          (this.nid = e ? e._id : void 0),
          !database.sql &&
            this.nid &&
            database.onComment(this.nid, this.loadComments, this),
          this.container.currentTab === this && this.loadComments();
      }),
      (xi.prototype.destroy = function () {
        !database.sql &&
          this.nid &&
          database.offComment(this.nid, this.loadComments, this),
          this.elTab.remove(),
          this.el.remove();
      }),
      (xi.prototype.hide = function (e) {
        this.container.currentTab === this &&
          ((this.container.currentTab = void 0),
          this.el.hide(),
          this.commentDiv.empty(),
          this.tabSelectedIndicator.detach(),
          this.elTab.removeClass("selected"),
          (this.elTab[0].firstElementChild.className =
            this.unselectedIconClass),
          !database.sql &&
            this.nid &&
            database.offComment(this.nid, this.loadComments, this),
          e && e());
      }),
      (xi.prototype.show = function () {
        this.container.currentTab !== this &&
          (this.container.currentTab && this.container.currentTab.hide(),
          (this.container.currentTab = this),
          this.el.show(),
          this.elTab.addClass("selected"),
          (this.elTab[0].firstElementChild.className = this.selectedIconClass),
          this.tabSelectedIndicator.appendTo(this.elTab),
          this.loadComments(),
          !database.sql &&
            this.nid &&
            database.onComment(this.nid, this.loadComments, this));
      }),
      (xi.prototype.focus = function () {}),
      (xi.prototype.loadComments = function () {
        var e = this;
        e.container.nid &&
          database.loadComments(e.container.nid, function (t, i) {
            t || e.render(i);
          });
      }),
      (xi.prototype.render = function (e) {
        var t = this.commentDiv;
        t.empty();
        var i = void 0,
          o = void 0,
          a = void 0;
        Q.each(
          e,
          function (e) {
            var n = e[0],
              s = new Date(n),
              r = Ti(s),
              l = e[1],
              c = e[2],
              d = util.formatLocaleDate(s);
            if (
              (d !== i &&
                ($('<div class="comment-date">').text(d).appendTo(t),
                (i = d),
                (o = void 0)),
              l !== o)
            ) {
              const e = $('<div class="comment-head">').appendTo(t);
              $('<div class="comment-user">')
                .text(database.userName(l))
                .appendTo(e),
                $('<div class="comment-time">').text(r).appendTo(e);
            } else if (r !== a) {
              const e = $('<div class="comment-head">').appendTo(t);
              $('<div class="comment-time">').text(r).appendTo(e);
            }
            (o = l), (a = r);
            $(
              '<div class="comment-text" data-cid="' +
                n +
                '" data-user="' +
                l +
                '">'
            )
              .text(c)
              .appendTo(t);
          },
          this
        );
      }),
      (xi.prototype.commentClicked = function (e) {
        var t = this,
          i = $(e.target).closest(".comment-text"),
          o = null,
          a = null,
          n = null,
          s = null;
        function r() {
          c(), t.removeComment(n);
        }
        function l() {
          var e = (o.val() || "").trim();
          e ? (c(), i.text(e), t.postComment(n, e)) : r();
        }
        function c() {
          c || ((c = !0), a.remove(), o.remove(), i.show());
        }
        i.length &&
          ((n = i.attr("data-cid")),
          (s = i.attr("data-user")),
          n &&
            s &&
            s == database.user.id &&
            (i.hide(),
            (a = $('<div class="comment-controls">')
              .append(
                $('<div class="comment-controls-buttons">').append(
                  $('<div class="button i-32-24 i-red i-setting-trash">').click(
                    r
                  )
                )
              )
              .insertBefore(i)),
            (o = $('<textarea class="comment-editor">')
              .insertAfter(i)
              .val(i.text())
              .blur(l)
              .focus())));
      }),
      (xi.prototype.post = function () {
        var e = this.comment.val() || "";
        this.comment.val(""),
          0 !== e.trim().length && this.postComment(void 0, e);
      }),
      (xi.prototype.postComment = function (e, t) {
        var i = this;
        database.postComment(this.nid, e, t, function (e, t) {
          e && $.alert(e), database.sql && i.loadComments();
        });
      }),
      (xi.prototype.removeComment = function (e) {
        var t = this;
        database.removeComment(this.nid, e, function (e, i) {
          e && $.alert(e), database.sql && t.loadComments();
        });
      }),
      Object.assign(Ci.prototype, di.a.prototype),
      (Ci.prototype.isWidthAdjustable = function () {
        return !0;
      }),
      (Ci.prototype.isHeightAdjustable = function () {
        return !1;
      }),
      (Ci.prototype.bind = function (e) {
        console.log("Custom.bind");
        var t = this;
        t.load(function () {
          t.updateUI();
        }),
          t.updateVisibility();
      }),
      (Ci.prototype.updateStructure = function () {
        console.log("Custom.updateStructure");
        var e = this.field;
        this.label.text(e.caption || locale.unnamed), this.updateElementWidth();
      }),
      (Ci.prototype.setHeight = function (e) {}),
      (Ci.prototype.updateUI = function () {
        console.log("Custom.updateUI"), this.content.html(this.value || "");
      }),
      (Ci.prototype.load = function (e) {
        var t = this;
        t.getValue(function (i, o) {
          (t.value = o), e();
        });
      }),
      (Ci.prototype.getValue = function (e) {
        var t = this;
        database.loadNode(t.container.nid, function (i, o) {
          if (i) return e(i);
          t.field.exp
            ? t.field.exp.evaluate(database, o, e)
            : e(void 0, void 0);
        });
      });
    var ki = o("./src/js/widgets/widgets.js");
    function Si(e, t, i) {
      (this.container = e),
        (this.field = i),
        (this.visible = !0),
        (this.error = null);
      var o = i.getEditorClass();
      (this.el = $('<div class="component">')
        .addClass(Object(ki.d)(i))
        .data("component", this)
        .attr("title", i.tooltip || "")),
        this.updateElementWidth(),
        this.el.appendTo(t.el),
        "left" === i.labelPosition && this.el.addClass("label-left"),
        (this.label = $("<label>")
          .text(i.caption || locale.unnamed)
          .css(
            "display",
            widgets.DONT_SHOW_LABEL[o] ||
              "placeholder" === i.labelPosition ||
              "none" === i.labelPosition
              ? "none"
              : ""
          )
          .appendTo(this.el)),
        (this.editor = Object(ki.c)(this, this)),
        this.error || this.setError(void 0);
    }
    Object.assign(Si.prototype, di.a.prototype),
      (Si.prototype.blur = ct.a.prototype.blur),
      (Si.prototype.focus = ct.a.prototype.focus),
      (Si.prototype.editorUp = ct.a.prototype.editorUp),
      (Si.prototype.editorDown = ct.a.prototype.editorDown),
      (Si.prototype.getNid = function () {
        return this.container.nid;
      }),
      (Si.prototype.destroy = function () {
        this.editor.destroy(), this.el.remove();
      }),
      (Si.prototype.updateStructure = function () {
        var e = this.field,
          t = e.getEditorClass();
        this.label
          .text(e.caption || locale.unnamed)
          .css(
            "display",
            widgets.DONT_SHOW_LABEL[t] ||
              "placeholder" === e.labelPosition ||
              "none" === e.labelPosition
              ? "none"
              : ""
          ),
          this.el.attr("title", e.tooltip || ""),
          this.updateElementWidth(),
          t !== this.editor.editorClass ||
          ("fn" === t && e.exp && e.exp.returnType.base !== this.editor.base)
            ? (this.error && this.error.detach(),
              this.editor.destroy(),
              this.el.attr("class", "component " + Object(ki.d)(e)),
              (this.editor = Object(ki.c)(this, this)),
              this.error && this.error.appendTo(this.el))
            : this.editor.updateStructure(),
          this.el.toggleClass("label-left", "left" === e.labelPosition),
          this.error || this.setError(void 0);
      }),
      (Si.prototype.bind = function (e) {
        this.editor.load(!0), this.updateIsWritable(), this.updateVisibility();
      }),
      (Si.prototype.save = function () {
        this.editor.save && this.editor.save();
      }),
      (Si.prototype.onUpdate = function () {}),
      (Si.prototype.offUpdate = function () {}),
      (Si.prototype.getValue = function (e) {
        const t = this.getNid();
        if (!t) return e(void 0, void 0);
        database.loadValue(t, this.field.id, e);
      }),
      (Si.prototype.setValue = function (e, t) {
        if (!this.getNid()) return t(void 0, void 0);
        database.update(this.getNid(), this.field.id, e, t);
      }),
      (Si.prototype.nodeChanged = function () {
        console.log("CmpField.nodeChanged"),
          this.editor.load(!1),
          this.updateIsWritable(),
          this.updateVisibility();
      }),
      (Si.prototype.isHeightAdjustable = function () {
        return this.editor.isHeightAdjustable();
      }),
      (Si.prototype.setHeight = function (e) {
        this.editor.setHeight(e);
      }),
      (Si.prototype.startEditCaption = function () {
        if (TOUCH) this.popup(!0);
        else {
          var e = this.field,
            t = e.caption || "",
            i = this.el.offset(),
            o = i.left,
            a = i.top,
            n = this.el.outerWidth(),
            s = {};
          $.pushInputHandler(s);
          var r = $('<div class="nx-backplane">').appendTo($(document.body)),
            l = $(
              '<input type="text" class="component-label-editor" style="left:' +
                o +
                "px;top:" +
                a +
                "px;width:" +
                n +
                'px">'
            )
              .appendTo(r)
              .blur(d)
              .keydown(c)
              .val(t)
              .focus()
              .select();
        }
        function c(e) {
          switch (e.which) {
            case 27:
              e.preventDefault(), u();
          }
        }
        function d() {
          var i = l.val();
          if (i != t) {
            var o = e.caption;
            (e.caption = i),
              e.trigger("update", "caption", o, i),
              e.type.schema.trigger("change");
          }
          u();
        }
        function u() {
          r.remove(), $.popInputHandler(s);
        }
      }),
      (Si.prototype.widthChanged = function () {
        this.editor && this.editor.widthChanged && this.editor.widthChanged();
      }),
      (Si.prototype.getError = function () {
        return Object(ki.b)() ? this.field.getExpressionErrors()[0] : void 0;
      });
    var $i = o("./src/react/LightboxComponent.tsx"),
      _i = o("./src/react/PdfRenderer.tsx"),
      Ei = o("./src/js/widgets/editors/ColorSelector.js");
    function Di(e) {
      var t = $.backplane({ closable: !1 }),
        i = $('<div class="paint">').appendTo(t),
        o = $('<div class="paint-head">').appendTo(i),
        a = $('<div class="paint-body">').appendTo(i),
        n = $(
          '<div class="button"><div class="i-32-24 i-light-grey i-undo"></div></div>'
        )
          .click(Q)
          .appendTo(o),
        s = $(
          '<div class="button"><div class="i-32-24 i-light-grey i-redo"></div></div>'
        )
          .click(ee)
          .appendTo(o);
      $('<div class="nx-hspace-small2">').appendTo(o);
      var r = $(
          '<div class="button paint-tool"><div class="icon-big-grey icon-big-draw"></div></div>'
        )
          .appendTo(o)
          .click(ae),
        l = $(
          '<div class="button paint-tool"><div class="icon-big-grey icon-big-rect"></div></div>'
        )
          .appendTo(o)
          .click(ne),
        c = $(
          '<div class="button paint-tool"><div class="icon-big-grey icon-big-circle"></div></div>'
        )
          .appendTo(o)
          .click(se);
      $('<div class="nx-hspace-small2">').appendTo(o);
      var d = $(
          '<div style="width:24px;height:24px;border-radius:12px;border:solid 4px #000;display:inline-block;box-sizing:border-box;text-align:center;line-height:16px;font-size:16px;box-shadow:rgba(255, 255, 255, 1) 0px 0px 8px;color:#555;background-color:#fff;margin:4px"></div>'
        ),
        u = $(
          '<div style="width:24px;height:24px;border-radius:12px;background-color:#0f0;display:inline-block;box-sizing:border-box;text-align:center;line-height:24px;font-size:16px;box-shadow:rgba(255, 255, 255, 1) 0px 0px 8px;color:#555;margin:4px"></div>'
        ),
        p = $(
          '<div style="border-bottom:solid 1px #fff;width:32px;height:14px">'
        );
      $('<div class="button">').append(d).appendTo(o).click(te),
        $('<div class="nx-hspace-small">').appendTo(o),
        $('<div class="button">').append(u).appendTo(o).click(ie),
        $('<div class="nx-hspace-small2">').appendTo(o),
        $('<div class="button">').append(p).appendTo(o).click(oe),
        $('<div class="nx-hspace-small2">').appendTo(o);
      $(
        '<div class="nx-button-text grey"><span>' +
          htmlEscape(locale.clear) +
          "</span></div>"
      )
        .click(ce)
        .appendTo(o);
      $('<div class="nx-hspace-flex">').appendTo(o);
      $(
        '<div class="nx-button-text grey"><span>' +
          htmlEscape(locale.cancel) +
          "</span></div>"
      )
        .click(ue)
        .appendTo(o);
      $('<div class="nx-hspace-small">').appendTo(o);
      $(
        '<div class="nx-button-text blue"><span>' +
          htmlEscape(locale.okay) +
          "</span></div>"
      )
        .click(de)
        .appendTo(o);
      var h = e.img,
        m = 0,
        f = 0,
        g = 0,
        v = 0,
        b = 0,
        y = 0,
        w = 0,
        x = 0,
        T = null,
        C = 0,
        k = 0,
        S = 0,
        _ = 0,
        E = 0,
        D = 0,
        N = 1,
        M = 0,
        I = 0,
        R = 0,
        F = 0,
        A = 0,
        O = 0,
        z = [],
        L = [],
        j = null,
        P = "draw",
        H = "#000",
        U = "",
        V = 4,
        W = document.createElement("canvas");
      (W.style.backgroundColor = "#fff"), a[0].appendChild(W);
      var B = W.getContext("2d");
      if (h) {
        var q = a.width(),
          Y = a.height();
        (E = (q - h.width) / 2), (D = (Y - (q > Y ? 96 : 116) - h.height) / 2);
      }
      function G(e) {
        if (!TOUCH || e.touches)
          if (TOUCH && 1 !== e.touches.length) {
            if (TOUCH && 2 === e.touches.length) {
              "draw" === j && ((T = null), z.pop(), (j = null), Z(), J()),
                (R = E),
                (F = D),
                (M = e.touches[0].clientX),
                (I = e.touches[0].clientY);
              var t = e.touches[0].clientX - e.touches[1].clientX,
                i = e.touches[0].clientY - e.touches[1].clientY;
              (A = Math.sqrt(t * t + i * i)), (O = N);
            }
          } else {
            var o = TOUCH ? e.touches[0].clientX : e.clientX,
              a = TOUCH ? e.touches[0].clientY : e.clientY;
            if (null === j) {
              switch (
                ((j = "draw"),
                (C = (o - g - E) / N),
                (k = (a - v - D) / N),
                (L = []),
                P)
              ) {
                case "draw":
                  (T = new Ni()).moveTo(C, k);
                  break;
                case "rect":
                  T = new Mi(C, k);
                  break;
                case "circle":
                  T = new Ii(C, k);
              }
              (T.strokeStyle = H),
                (T.fillStyle = U),
                (T.lineWidth = V),
                z.push(T);
            }
          }
      }
      function X(e) {
        if (!TOUCH || e.touches)
          if (TOUCH && 1 !== e.touches.length) {
            if (TOUCH && 2 === e.touches.length) {
              var t = e.touches[0].clientX,
                i = e.touches[0].clientY,
                o = t - M,
                a = i - I,
                n = Math.sqrt(o * o + a * a),
                s = e.touches[0].clientX - e.touches[1].clientX,
                r = e.touches[0].clientY - e.touches[1].clientY,
                l = Math.sqrt(s * s + r * r) - A;
              Math.abs(l) > Math.abs(n)
                ? ((N = Math.min(2, Math.max(0.5, O + l / 100))) >= 0.95 &&
                    N <= 1.05 &&
                    (N = 1),
                  (E = R),
                  (D = F))
                : ((E = R + o), (D = F + a), (N = O)),
                J();
            }
          } else {
            var c = TOUCH ? e.touches[0].clientX : e.clientX,
              d = TOUCH ? e.touches[0].clientY : e.clientY;
            if ("draw" === j) {
              switch (((S = (c - g - E) / N), (_ = (d - v - D) / N), P)) {
                case "draw":
                  T.lineTo(S, _);
                  break;
                case "rect":
                case "circle":
                  (T.x1 = S), (T.y1 = _);
              }
              Z(), J(), (C = S), (k = _);
            }
          }
      }
      function K(e) {
        (TOUCH && e.touches && e.touches.length) ||
          ("draw" === j &&
            (T.isEmpty() && z.pop(), (T = null), (j = null), J(), re()));
      }
      function J() {
        (E = Math.max(-w * N + 20, Math.min(m - b * N - 20, E))),
          (D = Math.max(-x * N + 20, Math.min(f - y * N - 20, D))),
          B.setTransform(1, 0, 0, 1, 0, 0),
          B.clearRect(0, 0, m, f),
          B.setTransform(N, 0, 0, N, E, D),
          h && B.drawImage(h, 0, 0);
        for (var e = 0; e < z.length; e++) z[e].draw(B);
      }
      function Z() {
        if (z.length) {
          (b = 1 / 0), (y = 1 / 0), (w = -1 / 0), (x = -1 / 0);
          for (var e = 0; e < z.length; e++) {
            var t = z[e],
              i = t.lineWidth,
              o = Math.min(t.x0, t.x1) - i,
              a = Math.min(t.y0, t.y1) - i,
              n = Math.max(t.x0, t.x1) + i,
              s = Math.max(t.y0, t.y1) + i;
            o < b && (b = o),
              a < y && (y = a),
              n > w && (w = n),
              s > x && (x = s);
          }
        } else (b = 0), (y = 0), (w = 0), (x = 0);
        h &&
          ((b = Math.min(0, b)),
          (y = Math.min(0, y)),
          (w = Math.max(h.width, w)),
          (x = Math.max(h.height, x)));
      }
      function Q() {
        if (z.length) {
          var e = z.pop();
          L.push(e), J(), re();
        }
      }
      function ee() {
        if (L.length) {
          var e = L.pop();
          z.push(e), J(), re();
        }
      }
      function te(e) {
        new Ei.a({
          $el: $(e.target).closest(".button"),
          update: function (e) {
            (H = e || ""), re();
          },
        });
      }
      function ie(e) {
        new Ei.a({
          $el: $(e.target).closest(".button"),
          update: function (e) {
            (U = e || ""), re();
          },
        });
      }
      function oe(e) {
        var t = $(e.target).offset(),
          i = $.backplane({ close: a }),
          o = $('<div style="position:absolute;width:48px">')
            .css({ left: t.left, top: t.top + 32 })
            .appendTo(i);
        function a() {
          i.close(), re();
        }
        $(
          '<div style="width:48px;height:48px;background-color:rgb(0,0,0)"><div style="margin:0 8px;border-bottom:solid 1px #fff;width:32px;height:16px"></div></div>'
        )
          .click(function () {
            (V = 1), a();
          })
          .appendTo(o),
          $(
            '<div style="width:48px;height:48px;background-color:rgb(0,0,0)"><div style="margin:0 8px;border-bottom:solid 2px #fff;width:32px;height:16px"></div></div>'
          )
            .click(function () {
              (V = 2), a();
            })
            .appendTo(o),
          $(
            '<div style="width:48px;height:48px;background-color:rgb(0,0,0)"><div style="margin:0 8px;border-bottom:solid 4px #fff;width:32px;height:16px"></div></div>'
          )
            .click(function () {
              (V = 4), a();
            })
            .appendTo(o),
          $(
            '<div style="width:48px;height:48px;background-color:rgb(0,0,0)"><div style="margin:0 8px;border-bottom:solid 8px #fff;width:32px;height:16px"></div></div>'
          )
            .click(function () {
              (V = 8), a();
            })
            .appendTo(o),
          $(
            '<div style="width:48px;height:48px;background-color:rgb(0,0,0)"><div style="margin:0 8px;border-bottom:solid 16px #fff;width:32px;height:16px"></div></div>'
          )
            .click(function () {
              (V = 16), a();
            })
            .appendTo(o);
      }
      function ae() {
        (P = "draw"), re();
      }
      function ne() {
        (P = "rect"), re();
      }
      function se() {
        (P = "circle"), re();
      }
      function re() {
        switch (
          ((d[0].style.borderColor = H || "#fff"),
          d.text(H ? "" : "X"),
          (u[0].style.backgroundColor = U),
          u.text(U ? "" : "X"),
          (p[0].style.borderBottomWidth = V + "px"),
          (p[0].style.height = 16 - Math.floor(V / 2) + "px"),
          r.removeClass("selected"),
          l.removeClass("selected"),
          c.removeClass("selected"),
          P)
        ) {
          case "draw":
            r.addClass("selected");
            break;
          case "rect":
            l.addClass("selected");
            break;
          case "circle":
            c.addClass("selected");
        }
        (n[0].style.opacity = z.length ? 1 : 0.5),
          (s[0].style.opacity = L.length ? 1 : 0.5);
      }
      function le() {
        (m = a.width()), (f = a.height());
        var e = a.offset();
        (g = e.left),
          (v = e.top),
          W.setAttribute("width", m),
          W.setAttribute("height", f),
          J();
      }
      function ce() {
        (h = void 0), (z = []), B.clearRect(0, 0, m, f), J();
      }
      function de() {
        if (!z.length) return ue();
        var t = w - b,
          i = x - y,
          o = document.createElement("canvas");
        (o.width = t), (o.height = i);
        var a = o.getContext("2d");
        a.setTransform(1, 0, 0, 1, -b, -y), h && a.drawImage(h, 0, 0);
        for (var n = 0; n < z.length; n++) z[n].draw(a);
        var s = o.toDataURL("image/png");
        pe(), e.save(s);
      }
      function ue() {
        pe();
      }
      function pe() {
        window.removeEventListener("resize", le), t.close();
      }
      le(),
        re(),
        window.addEventListener("resize", le),
        W.addEventListener(TOUCH ? EVENT_touchstart : "mousedown", G),
        W.addEventListener(TOUCH ? EVENT_touchmove : "mousemove", X),
        W.addEventListener(TOUCH ? EVENT_touchend : "mouseup", K);
    }
    function Ni() {
      (this.strokeStyle = "#000"),
        (this.lineWidth = 1),
        (this.fillStyle = null),
        (this.path = []),
        (this.x0 = 0),
        (this.y0 = 0),
        (this.x1 = 0),
        (this.y1 = 0);
    }
    function Mi(e, t) {
      (this.x0 = e),
        (this.y0 = t),
        (this.x1 = e),
        (this.y1 = t),
        (this.strokeStyle = "#000"),
        (this.lineWidth = 1),
        (this.fillStyle = null);
    }
    function Ii(e, t) {
      (this.x0 = e),
        (this.y0 = t),
        (this.x1 = e),
        (this.y1 = t),
        (this.strokeStyle = "#000"),
        (this.lineWidth = 1),
        (this.fillStyle = null);
    }
    function Ri(e, t, i, o, a) {
      var n = 0.5522848,
        s = (o / 2) * n,
        r = (a / 2) * n,
        l = t + o,
        c = i + a,
        d = t + o / 2,
        u = i + a / 2;
      e.beginPath(),
        e.moveTo(t, u),
        e.bezierCurveTo(t, u - r, d - s, i, d, i),
        e.bezierCurveTo(d + s, i, l, u - r, l, u),
        e.bezierCurveTo(l, u + r, d + s, c, d, c),
        e.bezierCurveTo(d - s, c, t, u + r, t, u);
    }
    function Fi(e) {
      var t = $.backplane({ closable: !TOUCH, close: E });
      window.addEventListener("resize", T, !1);
      var i = $(
          '<div class="nx-menu-popup" style="position:absolute;padding:0">'
        ).appendTo(t),
        o = $(
          '<div style="position:relative;top:0;left:0;width:100%;height:100%">'
        ).appendTo(i),
        a = $(
          '<div style="position:absolute;left:0;bottom:0;right:0;height:48px;background-color:#eee;padding:8px;box-sizing:border-box;-webkit-box-sizing:border-box;display:flex;display:-webkit-flex">'
        ).appendTo(o);
      $('<div class="nx-button-text grey">')
        .text(locale.cancel)
        .appendTo(a)
        .click(S),
        $('<div class="nx-hspace-small">').appendTo(a),
        $('<div class="nx-button-text grey">')
          .text(locale.clear)
          .appendTo(a)
          .click(k),
        $('<div class="nx-hspace-flex">').appendTo(a),
        $('<div class="nx-button-text blue">')
          .text(locale.okay)
          .appendTo(a)
          .click(_);
      var n,
        s,
        r,
        l,
        c = (this.$canvas = $(
          '<canvas style="position:absolute;left:0;top:0;background-color:#fff">'
        ).appendTo(o));
      T();
      var d = c[0],
        u = d.getContext("2d");
      d.addEventListener(TOUCH ? EVENT_touchstart : "mousedown", f, !1);
      var p = null,
        h = null,
        m = [];
      function f(e) {
        (TOUCH && 1 !== e.touches.length) ||
          p ||
          ((p = "draw"),
          b(
            TOUCH ? e.touches[0].pageX : e.pageX,
            TOUCH ? e.touches[0].pageY : e.pageY
          ),
          TOUCH
            ? (EVENT_target(e).addEventListener(EVENT_touchmove, g, !1),
              EVENT_target(e).addEventListener(EVENT_touchend, v, !1))
            : (window.addEventListener("mousemove", g, !1),
              window.addEventListener("mouseup", v, !1)));
      }
      function g(e) {
        (TOUCH && 1 !== e.touches.length) ||
          ("draw" === p &&
            (y(
              TOUCH ? e.touches[0].pageX : e.pageX,
              TOUCH ? e.touches[0].pageY : e.pageY
            ),
            x(u, n, s, 1, 0, 0)));
      }
      function v(e) {
        (TOUCH && 0 !== e.touches.length) ||
          ("draw" === p &&
            (w(),
            x(u, n, s, 1, 0, 0),
            (p = null),
            TOUCH
              ? (EVENT_target(e).removeEventListener(EVENT_touchmove, g, !1),
                EVENT_target(e).removeEventListener(EVENT_touchend, v, !1))
              : (window.removeEventListener(
                  TOUCH ? EVENT_touchmove : "mousemove",
                  g,
                  !1
                ),
                window.removeEventListener(
                  TOUCH ? EVENT_touchend : "mouseup",
                  v,
                  !1
                ))));
      }
      function b(e, t) {
        (h = []), m.push(h), y(e, t);
      }
      function y(e, t) {
        h.push([e - r, t - l]);
      }
      function w() {
        h = null;
      }
      function x(e, t, i, o, a, n) {
        (e.strokeStyle = "#000"), (e.lineWidth = 3), e.clearRect(0, 0, t, i);
        for (var s = 0; s < m.length; s++) {
          var r = m[s],
            l = r[0];
          if (
            (e.beginPath(),
            e.moveTo(a + l[0] * o, n + l[1] * o),
            1 === r.length)
          )
            e.lineTo(a + l[0] * o, n + l[1] * o);
          else
            for (var c = 1; c < r.length; c++) {
              var d = r[c];
              e.lineTo(a + d[0] * o, n + d[1] * o);
            }
          e.stroke();
        }
      }
      function T() {
        var e = window.getWidth(),
          t = window.getHeight();
        (n = Math.min(800, e)),
          (s = Math.min(448, t)),
          (r = Math.floor((e - n) / 2)),
          (l = Math.floor((t - s) / 2)),
          i.css({ left: r, top: l, width: n, height: s }),
          c.attr("width", n).attr("height", s - 48);
      }
      function C() {
        for (
          var e = 300,
            t = 150,
            i = $(
              '<canvas width="' +
                e +
                '" height="' +
                t +
                '" style="position:absolute;left:0;top:0;border:solid 1px red">'
            ),
            o = i[0],
            a = o.getContext("2d"),
            n = 1 / 0,
            s = 1 / 0,
            r = -1 / 0,
            l = -1 / 0,
            c = 0;
          c < m.length;
          c++
        )
          for (var d = m[c], u = 0; u < d.length; u++) {
            var p = d[u],
              h = p[0],
              f = p[1];
            (n = Math.min(n, h)),
              (s = Math.min(s, f)),
              (r = Math.max(r, h)),
              (l = Math.max(l, f));
          }
        var g = (r += 4) - (n -= 4),
          v = (l += 4) - (s -= 4),
          b = e / g,
          y = t / v,
          w = Math.min(1, b, y);
        x(a, e, t, w, (e - g * w) / 2 - w * n, (t - v * w) / 2 - w * s);
        var T = o.toDataURL("image/png");
        return i.remove(), T;
      }
      function k() {
        (m = []), x(u, n, s);
      }
      function S() {
        t.close(), e.cancel && e.cancel();
      }
      function _() {
        var i = C();
        t.close(), e.okay && e.okay(i);
      }
      function E() {
        window.removeEventListener("resize", T, !1);
      }
    }
    function Ai(e, t, i) {
      (this.container = e),
        (this.field = i),
        (this.visible = !0),
        (this.error = null),
        (this.currentFile = void 0),
        (this.el = $('<div class="component">')
          .data("component", this)
          .attr("title", i.tooltip || "")
          .addClass(Object(ki.d)(i))),
        this.updateElementWidth(),
        this.el.appendTo(t.el),
        "left" === i.labelPosition && this.el.addClass("label-left"),
        (this.label = $("<label>")
          .text(this.field.caption || locale.unnamed)
          .css(
            "display",
            "placeholder" === i.labelPosition || "none" === i.labelPosition
              ? "none"
              : ""
          )
          .appendTo(this.el)),
        (this.removeButton = $(
          '<div class="button icon-big i-32-24 i-grey i-setting-menu">'
        )
          .appendTo(
            $(
              '<div style="position:relative;height:0;text-align:right;z-index:1">'
            ).appendTo(this.el)
          )
          .touch($.proxy(this.popupMenu, this)));
      var o = this.el.width();
      (this.content = $(
        '<div class="editor-file-file" style="text-align:center;display:table-cell;vertical-align:middle;width:' +
          o +
          "px;max-width:" +
          o +
          'px">'
      )
        .css({ height: 68 * i.height + 32, "background-size": i.bgSize || "" })
        .appendTo(this.el)
        .on("contextmenu", $.proxy(this.popupMenu, this))
        .touch($.proxy(this.fileClicked, this))),
        "signature" !== i.fileHandling && this.registerDropListeners();
    }
    function Oi(e) {
      var t = this;
      (this.id = "files"),
        (this.loading = !1),
        (this.container = e),
        (this.popupMenu = $.proxy(this.popupMenu, this)),
        (this.selectedIconClass =
          "tab-icon-container i-18 i-white i-attachment"),
        (this.unselectedIconClass =
          "tab-icon-container i-18 i-light-grey i-attachment"),
        (this.elTab = $('<div class="tab tab-icon">')
          .attr("title", locale.files)
          .append($(`<div class="${this.unselectedIconClass}"></div>`))
          .touch(
            $.proxy(function () {
              t.container.selectTab(t.id);
            }, this)
          )),
        (this.tabSelectedIndicator = $('<div class="tab-selected-indicator">')),
        (this.el = $('<div class="files">')
          .hide()
          .appendTo(e.containerEl || e.el)),
        this.el[0].addEventListener(
          "dragover",
          function (e) {
            return (
              (t.el[0].style.backgroundColor = "#ddd"), e.preventDefault(), !1
            );
          },
          !1
        ),
        this.el[0].addEventListener(
          "dragleave",
          function (e) {
            return (t.el[0].style.backgroundColor = ""), e.preventDefault(), !1;
          },
          !1
        ),
        this.el[0].addEventListener(
          "drop",
          function (e) {
            t.el[0].style.backgroundColor = "";
            var i = t.nid;
            database.typeOf(i);
            if (!t.isWritable())
              return e.preventDefault(), $.alert(locale.errorNotAuthorized), !1;
            var o = e.target.files || (e.dataTransfer && e.dataTransfer.files);
            return o && o.length && setTimeout(a, 0, 0), e.preventDefault(), !1;
            function a(e) {
              if (e >= o.length) return n();
              var i = o[e];
              t.importFile(i, function (t) {
                setTimeout(a, 0, e + 1);
              });
            }
            function n() {
              t.updateUI();
            }
          },
          !1
        ),
        (this.filesEl = $("<div>").appendTo(this.el));
    }
    function zi(e, t, i) {
      (this.container = e),
        (this.field = i),
        (this.visible = !0),
        (this.el = $('<div class="component head">')
          .data("component", this)
          .attr("title", i.tooltip || "")),
        this.updateElementWidth(),
        this.el.appendTo(t.el),
        (this.label = $("<label>").text(i.caption).appendTo(this.el)),
        this.updateStyle();
    }
    function Li(e) {
      const t = this;
      (this.id = "history"),
        (this.container = e),
        (this.selectedIconClass = "tab-icon-container i-18 i-white i-info"),
        (this.unselectedIconClass =
          "tab-icon-container i-18 i-light-grey i-info"),
        (this.elTab = $('<div class="tab tab-icon">')
          .attr("title", locale.history)
          .append($(`<div class="${this.unselectedIconClass}"></div>`))
          .touch(
            $.proxy(function () {
              t.container.selectTab(t.id);
            }, this)
          )),
        (this.tabSelectedIndicator = $('<div class="tab-selected-indicator">')),
        (this.el = $('<div class="history">')
          .hide()
          .appendTo(e.containerEl || e.el));
      $('<div class="editor">').appendTo(this.el);
      this.historyDiv = $('<div class="history">').appendTo(this.el);
    }
    function ji(e) {
      var t = e.getHours(),
        i = e.getMinutes(),
        o = e.getSeconds();
      return (
        (t < 10 ? "0" : "") +
        t +
        ":" +
        (i < 10 ? "0" : "") +
        i +
        ":" +
        (o < 10 ? "0" : "") +
        o
      );
    }
    (Ni.prototype.draw = function (e) {
      var t = this.path;
      e.beginPath();
      for (var i = 0; i < t.length; i++) {
        var o = t[i];
        switch (o[0]) {
          case "M":
            e.moveTo(o[1], o[2]);
            break;
          case "L":
            e.lineTo(o[1], o[2]);
        }
      }
      this.fillStyle &&
        (e.closePath(), (e.fillStyle = this.fillStyle), e.fill()),
        this.strokeStyle &&
          ((e.strokeStyle = this.strokeStyle),
          (e.lineWidth = this.lineWidth),
          e.stroke());
    }),
      (Ni.prototype.moveTo = function (e, t) {
        this.path.push(["M", e, t]), this.updateBounds();
      }),
      (Ni.prototype.lineTo = function (e, t) {
        this.path.push(["L", e, t]), this.updateBounds();
      }),
      (Ni.prototype.isEmpty = function () {
        return this.path.length < 2;
      }),
      (Ni.prototype.updateBounds = function () {
        var e = this.path;
        if (e.length) {
          for (
            var t = 1 / 0, i = -1 / 0, o = 1 / 0, a = -1 / 0, n = 0;
            n < e.length;
            n++
          ) {
            var s = e[n],
              r = s[1],
              l = s[2];
            r < t && (t = r),
              r > i && (i = r),
              l < o && (o = l),
              l > a && (a = l);
          }
          (this.x0 = t), (this.x1 = i), (this.y0 = o), (this.y1 = a);
        }
      }),
      (Mi.prototype.draw = function (e) {
        e.beginPath(),
          e.moveTo(this.x0, this.y0),
          e.lineTo(this.x1, this.y0),
          e.lineTo(this.x1, this.y1),
          e.lineTo(this.x0, this.y1),
          e.closePath(),
          this.fillStyle && ((e.fillStyle = this.fillStyle), e.fill()),
          this.strokeStyle &&
            ((e.strokeStyle = this.strokeStyle),
            (e.lineWidth = this.lineWidth),
            e.stroke());
      }),
      (Mi.prototype.isEmpty = function () {
        return (
          Math.abs(this.x0 - this.x1) < 2 && Math.abs(this.y0 - this.y1) < 2
        );
      }),
      (Mi.prototype.updateBounds = function () {}),
      (Ii.prototype.draw = function (e) {
        Ri(e, this.x0, this.y0, this.x1 - this.x0, this.y1 - this.y0),
          this.fillStyle && ((e.fillStyle = this.fillStyle), e.fill()),
          this.strokeStyle &&
            ((e.strokeStyle = this.strokeStyle),
            (e.lineWidth = this.lineWidth),
            e.stroke());
      }),
      (Ii.prototype.isEmpty = function () {
        return (
          Math.abs(this.x0 - this.x1) < 2 && Math.abs(this.y0 - this.y1) < 2
        );
      }),
      (Ii.prototype.updateBounds = function () {}),
      Object.assign(Ai.prototype, di.a.prototype),
      (Ai.prototype.destroy = function () {
        this.el.remove();
      }),
      (Ai.prototype.setWidth = function (e, t) {
        di.a.prototype.setWidth.call(this, e, t);
        var i = this.el.width();
        this.content.css({ width: i, "max-width": i });
      }),
      (Ai.prototype.resize = function () {
        var e = this.field,
          t = this.el.width();
        this.content.css({
          width: t,
          "max-width": t,
          height: 68 * e.height + 32,
        });
      }),
      (Ai.prototype.updateStructure = function () {
        var e = this.field;
        this.el.attr("title", e.tooltip || ""), this.updateElementWidth();
        var t = this.el.width();
        this.content.css({
          width: t,
          "max-width": t,
          height: 68 * e.height + 32,
          "background-size": e.bgSize || "",
        }),
          this.label
            .text(e.caption || locale.unnamed)
            .css(
              "display",
              "placeholder" === e.labelPosition || "none" === e.labelPosition
                ? "none"
                : ""
            ),
          this.el.toggleClass("label-left", "left" === e.labelPosition);
      }),
      (Ai.prototype.validate = function (e) {
        var t = this.field.validate(e);
        return t ? (this.setError(t), !1) : (this.setError(void 0), !0);
      }),
      (Ai.prototype.setError = function (e) {
        e
          ? (this.error ||
              (this.error = $('<div class="editor-error">').appendTo(this.el)),
            this.error.html(
              '<div class="editor-error-text"><div class="editor-error-icon i-red i-16-12 i-warning"></div>' +
                htmlEscape(e) +
                "</div>"
            ),
            this.el.addClass("error"))
          : (this.error && this.error.remove(),
            (this.error = void 0),
            this.el.removeClass("error"));
      }),
      (Ai.prototype.bind = function () {
        this.nodeChanged();
      }),
      (Ai.prototype.nodeChanged = function () {
        this.updateIsWritable(), this.updateVisibility();
        var e = this.container.nid;
        if (e) {
          var t = database.loadNodeSync(e);
          if (t) {
            var i = t[this.field.id],
              o = e + "/" + i;
            if (o !== this.currentFile)
              if (((this.currentFile = o), i)) {
                if (util.RE_IMAGE_FILE_EXT.test(i)) {
                  var a = database.thumb2URL2(e, i);
                  (this.content[0].style.backgroundImage = a
                    ? 'url("' + a + '")'
                    : ""),
                    (this.content[0].innerHTML = "");
                } else
                  (this.content[0].style.backgroundImage = ""),
                    (this.content[0].innerHTML =
                      '<div class="file-type">' + htmlEscape(i) + "</div>");
                this.removeButton.css("display", "");
              } else
                (this.content[0].style.backgroundImage = ""),
                  (this.content[0].innerHTML = ""),
                  this.removeButton.css("display", "none");
            this.validate(i);
          } else this.setError();
        } else this.setError();
      }),
      (Ai.prototype.fileClicked = function (e) {
        var t = "",
          i = "",
          o = this.field;
        o && (i = this.field.id);
        var n = this.container.nid;
        if (n) {
          var r = database.loadNodeSync(n);
          if (r) {
            var l,
              c = r[this.field.id],
              d = r[i];
            if ((d && (t = database.downloadURL(n, d)), c))
              if ("sketch" === o.fileHandling)
                this.isWritable()
                  ? this.openPaint()
                  : database.previewFile(n, c);
              else if (
                /\.(png|jpg|jpeg|gif)$/i.test(d) ||
                (/\.(png|jpg|jpeg|gif)$/i.test(d), 0)
              ) {
                var u = $("<div>").appendTo(document.body);
                a.render(
                  s.createElement($i.a, {
                    images: [{ file: t, name: d }],
                    initialImageIndex: 0,
                    closeLightBox: () => {
                      a.unmountComponentAtNode(u[0]), u.remove();
                    },
                    downloadUrl: p,
                  }),
                  u[0]
                );
              } else
                /\.(pdf)$/i.test(d)
                  ? ((l = $.backplane({
                      cls: "nx-backplane-lightbox",
                      beforeClose: () => a.unmountComponentAtNode(l[0]),
                    })),
                    a.render(
                      s.createElement(_i.a, {
                        pdfUrl: t,
                        fileName: d,
                        onDownloadClick: p,
                        onCloseClick: () => l.close(),
                      }),
                      l[0]
                    ))
                  : p();
            else {
              if (!this.isWritable()) return;
              "sketch" === o.fileHandling
                ? this.openPaint()
                : "signature" === o.fileHandling
                ? this.createSignature()
                : this.chooseFileSystem();
            }
          }
        }
        function p() {
          database.previewFile(n, c);
        }
      }),
      (Ai.prototype.chooseFileMenu = function (e) {
        var t = this,
          i = $(e.target),
          o = $.backplane({}),
          a = $('<div class="nx-menu-popup">').appendTo(o);
        $('<div class="nx-menu-item">')
          .append($('<div class="nx-menu-label">').text(locale.takePhoto))
          .appendTo(a)
          .touch(l),
          $('<div class="nx-menu-item">')
            .append($('<div class="nx-menu-label">').text(locale.photoLibrary))
            .appendTo(a)
            .touch(c),
          $('<div class="nx-menu-item">')
            .append($('<div class="nx-menu-label">').text(locale.icloudDrive))
            .appendTo(a)
            .touch(d),
          $('<div class="nx-menu-item">')
            .append($('<div class="nx-menu-label">').text(locale.dropbox))
            .appendTo(a)
            .touch(u);
        var n = a.outerWidth(),
          s = a.outerHeight(),
          r = i.offset();
        function l() {
          o.close(), t.takePhoto(e);
        }
        function c() {
          o.close(), t.choosePhotoFromLibrary(e);
        }
        function d() {
          o.close(), t.chooseICloud();
        }
        function u() {
          o.close(), t.chooseDropbox();
        }
        (r.left += i.width() - 32),
          (r.top += 32),
          r.left + n > window.getWidth() && (r.left = window.getWidth() - n),
          r.top + s > window.getHeight() && (r.top = window.getHeight() - s),
          a.offset(r);
      }),
      (Ai.prototype.takePhoto = function (e) {
        var t = this;
        NinoxDocumentInteraction.choosePhotoFromCamera(function (i, o, a) {
          if (i) return $.alert(i);
          o ? t.photoTaken(e) : a && t.videoTaken(a);
        });
      }),
      (Ai.prototype.choosePhotoFromLibrary = function (e) {
        var t = this;
        NinoxDocumentInteraction.choosePhotoFromLibrary(function (i, o, a) {
          if (i) return $.alert(i);
          o ? t.photoTaken(e) : a && t.videoTaken(a);
        });
      }),
      (Ai.prototype.photoTaken = function (e) {
        var t,
          i = this,
          o = $(e.target);
        switch (this.field.fileHandling) {
          case "image-s":
            return l("S");
          case "image-m":
            return l("M");
          case "image-l":
            return l("L");
          case "image-o":
            return l("O");
        }
        t = $.backplane({});
        var a = $('<div class="nx-menu-popup">').appendTo(t);
        $('<div class="nx-menu-head">').text(locale.imageSize).appendTo(a),
          $('<div class="nx-menu-item">')
            .append(
              $('<div class="nx-menu-label">').text(locale.imageSizeSmall)
            )
            .appendTo(a)
            .touch(function () {
              l("S");
            }),
          $('<div class="nx-menu-item">')
            .append(
              $('<div class="nx-menu-label">').text(locale.imageSizeMedium)
            )
            .appendTo(a)
            .touch(function () {
              l("M");
            }),
          $('<div class="nx-menu-item">')
            .append(
              $('<div class="nx-menu-label">').text(locale.imageSizeLarge)
            )
            .appendTo(a)
            .touch(function () {
              l("L");
            }),
          $('<div class="nx-menu-item">')
            .append(
              $('<div class="nx-menu-label">').text(locale.imageSizeOriginal)
            )
            .appendTo(a)
            .touch(function () {
              l("O");
            });
        var n = a.outerWidth(),
          s = a.outerHeight(),
          r = o.offset();
        function l(e) {
          t && t.close(), i.savePhoto(e);
        }
        (r.left += o.width() - 32),
          (r.top += 32),
          r.left + n > window.getWidth() && (r.left = window.getWidth() - n),
          r.top + s > window.getHeight() && (r.top = window.getHeight() - s),
          a.offset(r);
      }),
      (Ai.prototype.videoTaken = function (e) {
        var t = this;
        if (!t.isWritable()) return $.alert(locale.errorNotAuthorized);
        var i = this.container.nid,
          o = this.field.id;
        $.loading(!0),
          database.importFile(i, e, function (e, a) {
            e
              ? ($.loading(!1), $.alert(e))
              : ((t.currentFile = void 0),
                database.update(i, o, a, function (e) {
                  $.loading(!1), e && $.alert(e);
                }));
          });
      }),
      (Ai.prototype.savePhoto = function (e) {
        var t = this;
        if (!t.isWritable()) return $.alert(locale.errorNotAuthorized);
        var i = this.container.nid,
          o = this.field.id;
        $.loading(!0),
          NinoxDocumentInteraction.convertChoosenPhoto(e, function (e, a) {
            if (e) return $.loading(!1), $.alert(e);
            Object(c.h)(
              i,
              locale.photo + " " + util.formatISODateTimeFileName(new Date()),
              function (e, n) {
                var s = (n += ".jpg");
                database.importData(a, i, s, function (e) {
                  if (e) return $.loading(!1), $.alert(e);
                  (t.currentFile = void 0),
                    database.update(i, o, s, function (e) {
                      $.loading(!1), e && $.alert(e);
                    });
                });
              }
            );
          });
      }),
      (Ai.prototype.chooseICloud = function () {
        NinoxDocumentInteraction.chooseFileFromICloud(
          $.proxy(this.urlChoosen, this)
        );
      }),
      (Ai.prototype.chooseFromDevice = function () {
        this.isWritable() &&
          ($.loading(!0),
          setTimeout(() => {
            NinoxDocumentInteraction.chooseFileFromDevice((e, t) => {
              $.loading(!1), this.urlChoosen(e, t);
            });
          }, 0));
      }),
      (Ai.prototype.chooseDropbox = function () {
        var e = this;
        $.loading(!0),
          setTimeout(function () {
            NinoxDocumentInteraction.chooseFile(function (t, i) {
              $.loading(!1), e.urlChoosen(t, i);
            });
          }, 0);
      }),
      (Ai.prototype.chooseFileSystem = function () {
        NinoxDocumentInteraction.chooseFile($.proxy(this.urlChoosen, this));
      }),
      (Ai.prototype.urlChoosen = function (e, t) {
        var i = this;
        if (!i.isWritable()) return $.alert(locale.errorNotAuthorized);
        this.container.nid, this.field.id;
        if (e) return $.alert(e);
        t &&
          ($.loading(!0),
          i.importFile(t, function (e, t) {
            $.loading(!1), e && $.alert(e);
          }));
      }),
      (Ai.prototype.importFile = function (e, t) {
        var i = this;
        if (!i.isWritable()) return $.alert(locale.errorNotAuthorized);
        var o = this.container.nid,
          a = this.field.id;
        function n(t) {
          if ("object" != typeof e) return t();
          var i = /^(.*)\.([a-z0-9]+)/i.exec(e.name);
          if (!i) return t();
          var a = i[1],
            n = i[2];
          Object(c.h)(o, a, function (i, o) {
            (e.renameTo = o + "." + n), t();
          });
        }
        n(function () {
          database.importFile(o, e, function (e, n) {
            if (e) return t(e);
            (i.currentFile = void 0),
              database.update(o, a, n, function (e) {
                t(e);
              });
          });
        });
      }),
      (Ai.prototype.removeFile = function () {
        var e = this;
        if (!e.isWritable()) return $.alert(locale.errorNotAuthorized);
        var t = this.container.nid;
        if (t) {
          var i = database.loadNodeSync(t);
          if (i) {
            var o = i[this.field.id];
            o &&
              $.dialog({
                closable: !0,
                caption: locale.removeFile,
                message: locale.confirmRemoveFile,
                buttons: [
                  {
                    color: "red",
                    caption: locale.removeFile,
                    callback: function () {
                      database.removeFile(t, o, function (i) {
                        i && $.alert(i),
                          (e.currentFile = void 0),
                          database.update(t, e.field.id, null, function (e) {
                            if (e) return $.alert(e);
                          });
                      });
                    },
                  },
                ],
              });
          }
        }
      }),
      (Ai.prototype.popupMenu = function (e) {
        var t = this,
          i = this.field,
          o = i.id,
          a = this.container.nid;
        if (a) {
          var n = database.loadNodeSync(a);
          if (n) {
            var s = n[o];
            if (s) {
              var r = $(e.target),
                l = $.backplane({}),
                c = $('<div class="nx-menu-popup">').appendTo(l);
              "signature" !== i.fileHandling &&
                $('<div class="nx-menu-head file-name">').text(s).appendTo(c),
                "signature" !== i.fileHandling &&
                  database.authorizationExport &&
                  database.supports.sharing &&
                  $('<div class="nx-menu-item">')
                    .append(
                      $('<div class="nx-menu-label">').text(
                        locale.shareFile + "..."
                      )
                    )
                    .appendTo(c)
                    .touch(f),
                t.isWritable() &&
                  ("signature" !== i.fileHandling &&
                    $('<div class="nx-menu-item">')
                      .append(
                        $('<div class="nx-menu-label">').text(locale.rename)
                      )
                      .appendTo(c)
                      .touch(h),
                  $('<div class="nx-menu-item">')
                    .append(
                      $('<div class="nx-menu-label">').text(locale.remove)
                    )
                    .appendTo(c)
                    .touch(m));
              var d,
                u = c.outerWidth(),
                p = c.outerHeight();
              return (
                (d = r.is(".i-setting-menu")
                  ? r.offset()
                  : { left: e.clientX, top: e.clientY }).left +
                  u >
                  window.getWidth() && (d.left = window.getWidth() - u),
                d.top + p > window.getHeight() &&
                  (d.top = window.getHeight() - p),
                c.offset(d),
                !1
              );
            }
          }
        }
        function h() {
          l.close(), t.renameFile();
        }
        function m() {
          l.close(), t.removeFile();
        }
        function f() {
          l.close(), t.shareFile();
        }
      }),
      (Ai.prototype.shareFile = function () {
        var e = this.field.id,
          t = this.container.nid;
        if (t) {
          var i = database.loadNodeSync(t);
          if (i) {
            var o = i[e];
            o &&
              database.loadSharedFile(t, o, function (e, i) {
                if (e) return $.alert(e);
                var a = $.popdown({
                    head: locale.shareFile,
                    buttons: [
                      { caption: locale.share, cls: "grey", click: r },
                      "-",
                      { caption: locale.close, cls: "blue", click: d },
                    ],
                  }),
                  n = $.field({
                    val: i.url,
                    $container: a.$content,
                    touch: function () {
                      window.open(i.url);
                    },
                  });
                function s() {
                  n.val(i.url || ""),
                    n.$el.css("display", i.url ? "" : "none"),
                    i.url
                      ? $(a.$buttons.children()[0])
                          .removeClass("grey")
                          .addClass("red")
                          .text("Unshare")
                      : $(a.$buttons.children()[0])
                          .removeClass("red")
                          .addClass("blue")
                          .text(locale.share);
                }
                function r() {
                  i.url ? c() : l();
                }
                function l() {
                  database.shareFile(t, o, function (e, t) {
                    if (e) return $.alert(e);
                    (i = t), s();
                  });
                }
                function c() {
                  database.unshareFile(t, o, function (e) {
                    if (e) return $.alert(e);
                    (i = {}), s();
                  });
                }
                function d() {
                  a.close();
                }
                s();
              });
          }
        }
      }),
      (Ai.prototype.renameFile = function () {
        var e = this;
        if (!e.isWritable()) return $.alert(locale.errorNotAuthorized);
        var t = this.field.id,
          i = this.container.nid;
        if (i) {
          var o = database.loadNodeSync(i);
          if (o) {
            var a = o[t];
            if (a) {
              var n = $.popdown({
                  head: locale.rename,
                  buttons: [
                    "-",
                    "cancel",
                    " ",
                    { cls: "blue", caption: locale.rename, click: l },
                  ],
                }),
                s = $(
                  '<div class="component editor editor-string" style="width:100%">'
                ).appendTo(n.$content);
              $("<label>").text(locale.name).appendTo(s);
              var r = $('<input type="text">')
                .val(a)
                .appendTo($('<div class="stringeditor">').appendTo(s))
                .keydown(function (e) {
                  13 === e.which && l(), 27 === e.which && n.close();
                });
            }
          }
        }
        function l() {
          var o = r.val();
          return a === o
            ? n.close()
            : util.isValidFileName(o)
            ? ($.loading(!0),
              void setTimeout(function () {
                database.renameFile(i, a, o, function (a) {
                  if (a)
                    return $.loading(!1), $.alert(locale.couldntRenameFile);
                  (e.currentFile = void 0),
                    database.update(i, t, o, function (e) {
                      $.loading(!1), e && $.alert(e), n.close();
                    });
                });
              }, 0))
            : $.alert(locale.invalidFileName);
        }
      }),
      (Ai.prototype.saveFileICloud = function () {
        var e = this.field.id,
          t = this.container.nid;
        if (t) {
          var i = database.loadNodeSync(t);
          if (i) {
            var o = i[e];
            if (o) {
              var a = database.downloadURL(t, o);
              NinoxDocumentInteraction.saveFileOnICloud(a, function (e) {
                e && $.alert(e);
              });
            }
          }
        }
      }),
      (Ai.prototype.saveFileFileSystem = function (e) {
        var t = this.field.id,
          i = this.container.nid;
        if (i) {
          var o = database.loadNodeSync(i);
          if (o) {
            var a = o[t];
            if (a) {
              var n = database.downloadURL(i, a);
              NinoxDocumentInteraction.saveFile(a, "", function (e, t) {
                if (e) return $.alert(e);
                t && localFileSystem.copyURL(n, t).catch((e) => $.alert(e));
              });
            }
          }
        }
      }),
      (Ai.prototype.openFileIn = function (e) {
        var t = this.field.id,
          i = this.container.nid;
        if (i) {
          var o = database.loadNodeSync(i);
          if (o) {
            var a = o[t];
            if (a) {
              var n = database.downloadURL(i, a);
              NinoxDocumentInteraction.showFileOptions(
                n,
                e.clientX,
                e.clientY,
                function () {}
              );
            }
          }
        }
      }),
      (Ai.prototype.isHeightAdjustable = function () {
        return !0;
      }),
      (Ai.prototype.setHeight = function (e) {
        var t = this.field,
          i = t.height,
          o = Math.max(1, Math.round((e - 32) / 68));
        o !== i && (this.content.css({ height: 68 * o + 32 }), (t.height = o));
      }),
      (Ai.prototype.registerDropListeners = function () {
        var e = this;
        e.content[0].addEventListener(
          "dragover",
          function (t) {
            return (
              (e.content[0].style.backgroundColor = "#ddd"),
              t.preventDefault(),
              !1
            );
          },
          !1
        ),
          e.content[0].addEventListener(
            "dragleave",
            function (t) {
              return (
                (e.content[0].style.backgroundColor = ""),
                t.preventDefault(),
                !1
              );
            },
            !1
          ),
          e.content[0].addEventListener(
            "drop",
            function (t) {
              if (((e.content[0].style.backgroundColor = ""), !e.isWritable()))
                return (
                  t.preventDefault(), $.alert(locale.errorNotAuthorized), !1
                );
              var i =
                t.target.files || (t.dataTransfer && t.dataTransfer.files);
              if (i && 1 === i.length) {
                var o = i[0],
                  a = e.container.nid,
                  n = e.field.id,
                  s = database.loadNodeSync(a);
                if (s) {
                  var r = s[n];
                  return (
                    (e.currentFile = void 0),
                    $.loading(!0),
                    r ? l() : c(),
                    t.preventDefault(),
                    !1
                  );
                }
              }
              function l() {
                database.removeFile(a, r, function (e) {
                  if (e) return $.loading(!1), $.alert(e);
                  c();
                });
              }
              function c() {
                e.importFile(o, function (e) {
                  $.loading(!1), e && $.alert(e);
                });
              }
            },
            !1
          );
      }),
      (Ai.prototype.createSignature = function () {
        var e = this,
          t = e.container.nid;
        if (t && database.loadNodeSync(t)) {
          var i = this.field.id;
          new Fi({
            okay: function (o) {
              $.loading(!0),
                Object(c.h)(t, locale.signature, function (a, n) {
                  (n += ".png"),
                    database.saveFileDataURL(t, o, n, function (o) {
                      if (o) return $.loading(!1), $.alert(o);
                      (e.currentFile = void 0),
                        database.update(t, i, n, function (e) {
                          $.loading(!1), e && $.alert(e);
                        });
                    });
                });
            },
          });
        }
      }),
      (Ai.prototype.openPaint = function () {
        var e = this,
          t = this.field,
          i = this.container.nid;
        if (i) {
          var o = database.loadNodeSync(i);
          if (o) {
            var a = void 0,
              n = o[t.id];
            if (n) {
              var s = database.fileURL2(i, n);
              ((a = new Image()).crossOrigin = "anonymous"),
                a.addEventListener("load", r, !1),
                (a.src = s);
            } else l();
          }
        }
        function r() {
          l();
        }
        function l() {
          new Di({
            img: a,
            save: function (t) {
              $.loading(!0),
                c(t, function (t) {
                  $.loading(!1),
                    t && $.alert(t),
                    (e.currentFile = void 0),
                    e.nodeChanged();
                });
            },
          });
        }
        function c(e, t) {
          n ? d(e, t) : u(e, t);
        }
        function d(e, t) {
          database.saveFileDataURL(i, e, n, t);
        }
        function u(e, a) {
          database.loadFiles(i, function (n, s) {
            if (n) return a(n);
            var r = {};
            s &&
              Q.each(s, function (e) {
                r[e.name] = !0;
              });
            for (var l = 1, c = locale.drawing + " " + l + ".png"; r[c]; )
              l++, (c = locale.drawing + " " + l + ".png");
            database.saveFileDataURL(i, e, c, function (e) {
              if (e) return a(e);
              database.update(o._id, t.id, c, a);
            });
          });
        }
      }),
      (Oi.prototype.isWritable = function () {
        var e = this.nid;
        return !!e && !!database.typeOf(e) && this.container.isWritable();
      }),
      (Oi.prototype.register = function () {}),
      (Oi.prototype.unregister = function () {}),
      (Oi.prototype.bind = function (e) {
        this.unregister(),
          (this.nid = e ? e._id : void 0),
          this.register(),
          this.updateUI();
      }),
      (Oi.prototype.destroy = function () {
        this.unregister(), this.el.remove(), this.elTab.remove();
      }),
      (Oi.prototype.hide = function (e) {
        this.container.currentTab === this &&
          ((this.container.currentTab = void 0),
          this.el.hide(),
          this.tabSelectedIndicator.detach(),
          this.elTab.removeClass("selected"),
          (this.elTab[0].firstElementChild.className =
            this.unselectedIconClass),
          e && e());
      }),
      (Oi.prototype.show = function () {
        this.container.currentTab !== this &&
          (this.container.currentTab && this.container.currentTab.hide(),
          (this.container.currentTab = this),
          this.el.show(),
          this.elTab.addClass("selected"),
          (this.elTab[0].firstElementChild.className = this.selectedIconClass),
          this.tabSelectedIndicator.appendTo(this.elTab),
          this.updateUI());
      }),
      (Oi.prototype.focus = function () {}),
      (Oi.prototype.chooseFileClicked = function (e) {
        this.isWritable() && this.chooseFileSystem();
      }),
      (Oi.prototype.chooseFileMenu = function (e) {
        var t = this;
        if (this.isWritable()) {
          var i = $(e.target),
            o = $.backplane({}),
            a = $('<div class="nx-menu-popup">').appendTo(o);
          $('<div class="nx-menu-item">')
            .append($('<div class="nx-menu-label">').text(locale.takePhoto))
            .appendTo(a)
            .touch(l),
            $('<div class="nx-menu-item">')
              .append(
                $('<div class="nx-menu-label">').text(locale.photoLibrary)
              )
              .appendTo(a)
              .touch(c),
            $('<div class="nx-menu-item">')
              .append($('<div class="nx-menu-label">').text(locale.icloudDrive))
              .appendTo(a)
              .touch(d),
            $('<div class="nx-menu-item">')
              .append($('<div class="nx-menu-label">').text(locale.dropbox))
              .appendTo(a)
              .touch(u);
          var n = a.outerWidth(),
            s = a.outerHeight(),
            r = i.offset();
          (r.left += i.width() - 32),
            (r.top += 32),
            r.left + n > window.getWidth() && (r.left = window.getWidth() - n),
            r.top + s > window.getHeight() && (r.top = window.getHeight() - s),
            a.offset(r);
        }
        function l() {
          o.close(), t.takePhoto(e);
        }
        function c() {
          o.close(), t.choosePhotoFromLibrary(e);
        }
        function d() {
          o.close(), t.chooseICloud();
        }
        function u() {
          o.close(), t.chooseDropbox();
        }
      }),
      (Oi.prototype.takePhoto = function (e) {
        var t = this;
        NinoxDocumentInteraction.choosePhotoFromCamera(function (i, o, a) {
          if (i) return $.alert(i);
          o ? t.photoTaken(e) : a && t.videoTaken(a);
        });
      }),
      (Oi.prototype.choosePhotoFromLibrary = function (e) {
        var t = this;
        NinoxDocumentInteraction.choosePhotoFromLibrary(function (i, o, a) {
          if (i) return $.alert(i);
          o ? t.photoTaken(e) : a && t.videoTaken(a);
        });
      }),
      (Oi.prototype.photoTaken = function (e) {
        var t = this,
          i = $(e.target),
          o = $.backplane({}),
          a = $('<div class="nx-menu-popup">').appendTo(o);
        $('<div class="nx-menu-head">').text(locale.imageSize).appendTo(a),
          $('<div class="nx-menu-item">')
            .append(
              $('<div class="nx-menu-label">').text(locale.imageSizeSmall)
            )
            .appendTo(a)
            .touch(function () {
              l("S");
            }),
          $('<div class="nx-menu-item">')
            .append(
              $('<div class="nx-menu-label">').text(locale.imageSizeMedium)
            )
            .appendTo(a)
            .touch(function () {
              l("M");
            }),
          $('<div class="nx-menu-item">')
            .append(
              $('<div class="nx-menu-label">').text(locale.imageSizeLarge)
            )
            .appendTo(a)
            .touch(function () {
              l("L");
            }),
          $('<div class="nx-menu-item">')
            .append(
              $('<div class="nx-menu-label">').text(locale.imageSizeOriginal)
            )
            .appendTo(a)
            .touch(function () {
              l("O");
            });
        var n = a.outerWidth(),
          s = a.outerHeight(),
          r = i.offset();
        function l(e) {
          o.close(), t.savePhoto(e);
        }
        (r.left += i.width() - 32),
          (r.top += 32),
          r.left + n > window.getWidth() && (r.left = window.getWidth() - n),
          r.top + s > window.getHeight() && (r.top = window.getHeight() - s),
          a.offset(r);
      }),
      (Oi.prototype.videoTaken = function (e) {
        var t = this,
          i = this.nid;
        $.loading(!0),
          database.importFile(i, e, function (e, i) {
            $.loading(!1), e && $.alert(e), t.updateUI();
          });
      }),
      (Oi.prototype.savePhoto = function (e) {
        if (!this.isWritable()) return $.alert(locale.errorNotAuthorized);
        var t = this,
          i = this.nid;
        $.loading(!0),
          NinoxDocumentInteraction.convertChoosenPhoto(e, function (e, o) {
            if (e) return $.loading(!1), $.alert(e);
            Object(c.h)(
              i,
              locale.photo + " " + util.formatISODateTimeFileName(new Date()),
              function (e, a) {
                var n = (a += ".jpg");
                database.importData(o, i, n, function (e) {
                  $.loading(!1), e && $.alert(e), t.updateUI();
                });
              }
            );
          });
      }),
      (Oi.prototype.chooseFromDevice = function () {
        this.isWritable() &&
          ($.loading(!0),
          setTimeout(() => {
            NinoxDocumentInteraction.chooseFileFromDevice((e, t) => {
              $.loading(!1), this.urlChoosen(e, t);
            });
          }, 0));
      }),
      (Oi.prototype.chooseICloud = function () {
        this.isWritable() &&
          NinoxDocumentInteraction.chooseFileFromICloud(
            $.proxy(this.urlChoosen, this)
          );
      }),
      (Oi.prototype.chooseDropbox = function () {
        if (this.isWritable()) {
          var e = this;
          $.loading(!0),
            setTimeout(function () {
              NinoxDocumentInteraction.chooseFile(function (t, i) {
                $.loading(!1), e.urlChoosen(t, i);
              });
            }, 0);
        }
      }),
      (Oi.prototype.chooseFileSystem = function () {
        this.isWritable() &&
          NinoxDocumentInteraction.chooseFile($.proxy(this.urlChoosen, this));
      }),
      (Oi.prototype.urlChoosen = function (e, t) {
        if (!this.isWritable()) return $.alert(locale.errorNotAuthorized);
        var i = this;
        this.nid;
        if (e) return $.alert(e);
        t &&
          ($.loading(!0),
          i.importFile(t, function (e) {
            $.loading(!1), e && $.alert(e), i.updateUI();
          }));
      }),
      (Oi.prototype.importFile = function (e, t) {
        if (!this.isWritable()) return $.alert(locale.errorNotAuthorized);
        var i = this.nid;
        function o(t) {
          if ("object" != typeof e) return t();
          var o = /^(.*)\.([a-z0-9]+)/i.exec(e.name);
          if (!o) return t();
          var a = o[1],
            n = o[2];
          Object(c.h)(i, a, function (i, o) {
            (e.renameTo = o + "." + n), t();
          });
        }
        o(function () {
          database.importFile(i, e, function (e, i) {
            t(e);
          });
        });
      }),
      (Oi.prototype.updateUI = async function () {
        var e = this,
          t = this.nid;
        function i() {
          (e.loading = !0),
            database.loadFiles(t, function (o, a) {
              if (t !== e.nid) (t = e.nid), setTimeout(i, 200);
              else {
                if (((e.loading = !1), o)) return $.alert(o);
                var n = database.typeOf(t);
                if (!n) return;
                var s = database.loadNodeSync(t);
                if (!s) return;
                var r = {},
                  l = n.fields;
                for (var c in l) {
                  if (l.hasOwnProperty(c))
                    if ("file" === l[c].base) {
                      var d = s[c];
                      d && (r[d] = !0);
                    }
                }
                let i = [],
                  p = [];
                for (var u = 0; u < a.length; u++)
                  r[(d = a[u]).name] ||
                    (i.push(d),
                    /\.(png|jpg|jpeg|gif)$/i.test(d.name) && p.push(d));
                e.renderFile(i, p), e.renderFileAddButton();
              }
            });
        }
        database.countFiles && (await database.countFiles(t))
          ? this.elTab.addClass("has-content")
          : this.elTab.removeClass("has-content"),
          this.container.currentTab === this &&
            (this.loading || (this.filesEl.empty(), t && i()));
      }),
      (Oi.prototype.renderFileAddButton = function () {
        $(
          '<div class="file-add"><div class="icon i-40-24 i-light-grey i-setting-add-file"></div><div class="label">' +
            htmlEscape(locale.chooseFile) +
            "</div></div>"
        )
          .appendTo(this.filesEl)
          .click($.proxy(this.chooseFileClicked, this));
      }),
      (Oi.prototype.renderFile = function (e, t) {
        for (var i = this, o = 0; o < e.length; o++) {
          n(e[o]);
        }
        function n(e) {
          var o,
            n,
            r = i.container.nid,
            l = e.name,
            c = $('<div class="file">')
              .data("file", e)
              .appendTo(i.filesEl)
              .on("contextmenu", i.popupMenu)
              .touch(function () {
                if (
                  /\.(png|jpg|jpeg|gif)$/i.test(e.name) ||
                  (/\.(png|jpg|jpeg|gif)$/i.test(e.name), 0)
                )
                  i.showGallery(e, t);
                else if (/\.(pdf)$/i.test(e.name)) {
                  var o = $.backplane({
                    cls: "nx-backplane-lightbox",
                    beforeClose: () => a.unmountComponentAtNode(o[0]),
                  });
                  a.render(
                    s.createElement(_i.a, {
                      pdfUrl: database.downloadURL(r, e.name),
                      fileName: e.name,
                      onDownloadClick: () => database.previewFile(r, e.name),
                      onCloseClick: () => o.close(),
                    }),
                    o[0]
                  );
                } else database.previewFile(r, l);
              }),
            d = $('<div class="file-image">').appendTo(c);
          if (
            ($('<div class="file-label">').text(e.name).appendTo(c),
            $('<div class="button icon-big i-32-24 i-grey i-setting-menu">')
              .appendTo(c)
              .click(i.popupMenu),
            util.RE_IMAGE_FILE_EXT.test(l))
          ) {
            var u = database.thumb2URL2(r, l);
            (o = $('<img style="position:relative">').appendTo(d)),
              ((n = new Image()).src = u),
              n.complete ? m() : (n.onload = m);
          } else {
            var p = /\.(\w+)$/.exec(l),
              h = p ? p[1] : "?";
            d.html('<div class="file-type">' + htmlEscape(h) + "</div>");
          }
          function m() {
            var e,
              t,
              i,
              a = 150,
              s = 150,
              r = n.naturalWidth,
              l = n.naturalHeight,
              c = a / r,
              d = s / l;
            c < d
              ? ((e = a), (i = (s - l * c) / 2), (t = 0))
              : ((i = 0), (t = (a - (e = r * d)) / 2));
            var u = o[0];
            (u.style.left = t + "px"),
              (u.style.top = i + "px"),
              (u.style.width = e + "px"),
              (u.src = n.src);
          }
        }
      }),
      (Oi.prototype.showGallery = function (e, t) {
        var i = this.container.nid,
          o = [];
        var n = (e) => {
          database.previewFile(i, e.name);
        };
        for (var r of t)
          o.push({ file: database.downloadURL(i, r.name), name: r.name });
        var l = database.downloadURL(i, e.name),
          c = o.findIndex((e) => e.file === l),
          d = $("<div>").appendTo(document.body);
        a.render(
          s.createElement($i.a, {
            images: o,
            initialImageIndex: c,
            closeLightBox: () => {
              a.unmountComponentAtNode(d[0]), d.remove();
            },
            downloadUrl: n,
          }),
          d[0]
        );
      }),
      (Oi.prototype.popupMenu = function (e) {
        var t = this,
          i = $(e.target),
          o = i.closest(".file").data("file");
        if (o) {
          var a = $.backplane({}),
            n = $('<div class="nx-menu-popup">').appendTo(a);
          $('<div class="nx-menu-head file-name">').text(o.name).appendTo(n),
            this.isWritable() &&
              ($('<div class="nx-menu-item">')
                .append($('<div class="nx-menu-label">').text(locale.rename))
                .appendTo(n)
                .touch(c),
              $('<div class="nx-menu-item">')
                .append($('<div class="nx-menu-label">').text(locale.remove))
                .appendTo(n)
                .touch(d));
          var s = n.outerWidth(),
            r = n.outerHeight(),
            l = i.offset();
          return (
            (l.left += i.width() - 32),
            l.left + s > window.getWidth() && (l.left = window.getWidth() - s),
            l.top + r > window.getHeight() && (l.top = window.getHeight() - r),
            n.offset(l),
            !1
          );
        }
        function c() {
          a.close(), t.renameFile(o, e);
        }
        function d() {
          a.close(), t.removeFile(o);
        }
      }),
      (Oi.prototype.removeFile = function (e) {
        if (!this.isWritable()) return $.alert(locale.errorNotAuthorized);
        var t = this,
          i = this.container.nid;
        $.dialog({
          closable: !0,
          caption: locale.removeFile,
          message: locale.confirmRemoveFile,
          buttons: [
            {
              color: "red",
              caption: locale.removeFile,
              callback: function () {
                database.removeFile(i, e.name, function (e) {
                  e && $.alert(e), t.updateUI();
                });
              },
            },
          ],
        });
      }),
      (Oi.prototype.renameFile = function (e, t) {
        if (!this.isWritable()) return $.alert(locale.errorNotAuthorized);
        var i = this,
          o = this.nid,
          a = e.name,
          n = $.popdown({
            head: locale.rename,
            buttons: [
              "-",
              "cancel",
              " ",
              { cls: "blue", caption: locale.rename, click: l },
            ],
          }),
          s = $(
            '<div class="component editor editor-string" style="width:100%">'
          ).appendTo(n.$content);
        $("<label>").text(locale.name).appendTo(s);
        var r = $('<input type="text">')
          .val(a)
          .appendTo($('<div class="stringeditor">').appendTo(s))
          .keydown(function (e) {
            13 === e.which && l(), 27 === e.which && close();
          });
        function l() {
          var e = r.val();
          return a === e
            ? n.close()
            : util.isValidFileName(e)
            ? ($.loading(!0),
              void setTimeout(function () {
                database.renameFile(o, a, e, function (e) {
                  if (($.loading(!1), e))
                    return $.alert(locale.couldntRenameFile);
                  n.close(), i.updateUI();
                });
              }, 0))
            : $.alert(locale.invalidFileName);
        }
        setTimeout(function () {
          r.focus();
        }, 400);
      }),
      (Oi.prototype.saveFileICloud = function (e) {
        var t = this.nid,
          i = e.name,
          o = database.downloadURL(t, i);
        NinoxDocumentInteraction.saveFileOnICloud(o, function (e) {
          e && $.alert(e);
        });
      }),
      (Oi.prototype.saveFileFileSystem = function (e) {
        var t = this.nid,
          i = e.name,
          o = database.downloadURL(t, i);
        NinoxDocumentInteraction.saveFile(i, "", function (e, t) {
          if (e) return $.alert(e);
          t && localFileSystem.copyURL(o, t).catch((e) => $.alert(e));
        });
      }),
      (Oi.prototype.openFileIn = function (e, t) {
        var i = this.nid,
          o = e.name,
          a = database.downloadURL(i, o);
        NinoxDocumentInteraction.showFileOptions(
          a,
          t.clientX,
          t.clientY,
          function () {}
        );
      }),
      Object.assign(zi.prototype, di.a.prototype),
      (zi.prototype.updateStructure = function () {
        var e = this.field;
        this.el.attr("title", e.tooltip || ""),
          this.updateElementWidth(),
          this.label.text(e.caption || locale.unnamed),
          this.updateStyle();
      }),
      (zi.prototype.updateStyle = function () {
        var e,
          t = this.field;
        if (t.style)
          try {
            e = JSON.parse(t.style);
          } catch (e) {}
        this.label.css({
          "background-color": (e && e.backgroundColor) || "",
          "border-color": (e && e.borderColor) || "",
          "border-width": (e && e.borderWidth) || "",
          color: (e && e.color) || "",
          "font-size": (e && e.fontSize) || "",
          "text-align": (e && e.textAlign) || "",
          "font-weight":
            (e && (util.multiHasOne(e.fontStyle, [1]) ? "bold" : "normal")) ||
            "",
          "font-style": e && util.multiHasOne(e.fontStyle, [2]) ? "italic" : "",
          "border-left-style":
            (e &&
              (util.multiHasOne(e.borderSides, [1])
                ? e.borderStyle
                : "none")) ||
            "",
          "border-top-style":
            (e &&
              (util.multiHasOne(e.borderSides, [2])
                ? e.borderStyle
                : "none")) ||
            "",
          "border-bottom-style":
            (e &&
              (util.multiHasOne(e.borderSides, [3])
                ? e.borderStyle
                : "none")) ||
            "",
          "border-right-style":
            (e &&
              (util.multiHasOne(e.borderSides, [4])
                ? e.borderStyle
                : "none")) ||
            "",
        });
      }),
      (zi.prototype.startEditCaption = Si.prototype.startEditCaption),
      (Li.prototype.bind = function () {
        this.container.currentTab === this && this.load();
      }),
      (Li.prototype.destroy = function () {
        this.elTab.remove(), this.el.remove();
      }),
      (Li.prototype.hide = function (e) {
        this.container.currentTab === this &&
          ((this.container.currentTab = void 0),
          this.el.hide(),
          this.historyDiv.empty(),
          this.elTab.removeClass("selected"),
          (this.elTab[0].firstElementChild.className =
            this.unselectedIconClass),
          this.tabSelectedIndicator.detach(),
          e && e());
      }),
      (Li.prototype.show = function () {
        this.container.currentTab !== this &&
          (this.container.currentTab && this.container.currentTab.hide(),
          (this.container.currentTab = this),
          this.el.show(),
          this.elTab.addClass("selected"),
          (this.elTab[0].firstElementChild.className = this.selectedIconClass),
          this.tabSelectedIndicator.appendTo(this.elTab),
          this.load());
      }),
      (Li.prototype.focus = function () {}),
      (Li.prototype.load = function () {
        var e = this;
        e.container.nid &&
          database.loadNodeHistory(e.container.nid, function (t, i) {
            if (t) return $.alert(t);
            e.render(i);
          });
      }),
      (Li.prototype.render = function (e) {
        var t = this;
        t.historyDiv.empty();
        var i = t.container.type,
          o = t.historyDiv,
          a = void 0,
          n = void 0;
        e.sort(function (e, t) {
          return t[0] - e[0];
        }),
          Q.each(e, function (e) {
            e[0];
            var t = e[1],
              s = new Date(e[2]),
              r = e[3],
              l = util.formatLocaleDate(s);
            if (
              (l !== a &&
                (void 0 !== n && $('<div class="history-foot">').appendTo(o),
                $('<div class="history-date">').text(l).appendTo(o),
                (a = l),
                (n = void 0)),
              t !== n)
            ) {
              void 0 !== n && $('<div class="history-foot">').appendTo(o);
              var c = $('<div class="history-head">').appendTo(o);
              $('<div class="history-user">')
                .text(database.userName(t))
                .appendTo(c),
                (n = t);
            }
            var d = $('<div class="history-entry">').appendTo(o);
            switch (
              ($('<div class="history-time">').text(ji(s)).appendTo(d), r)
            ) {
              case "create":
                $('<div class="history-change">')
                  .appendTo(d)
                  .text(locale.created);
                break;
              case "remove":
                $('<div class="history-change">')
                  .appendTo(d)
                  .text(locale.removed);
                break;
              case "update":
                var u = e[5],
                  p = $('<div class="history-change">').appendTo(d);
                Q.each(u, function (e, t) {
                  var o = i.fields[t];
                  if (o && database.canRead(o))
                    if (o.isField)
                      $("<div>")
                        .text(
                          o.caption + " " + locale.updated + " " + o.format(e)
                        )
                        .appendTo(p);
                    else if (o.isReference)
                      if (e) {
                        var a = o.refType.id + e;
                        $("<div>")
                          .append(
                            $(
                              '<div class="history-link">' +
                                o.caption +
                                " " +
                                locale.linked +
                                " ...</div>"
                            ).touch(function () {
                              new No.PopupEditor(a, {});
                            })
                          )
                          .appendTo(p);
                      } else
                        $("<div>")
                          .text(o.caption + " " + locale.unlinked)
                          .appendTo(p);
                    else if (o.isReverse)
                      for (var n in e)
                        if (e.hasOwnProperty(n)) {
                          a = o.refType.id + n;
                          !0 === e[n]
                            ? $("<div>")
                                .append(
                                  $(
                                    '<div class="history-link">' +
                                      o.caption +
                                      " " +
                                      locale.linked +
                                      " ...</div>"
                                  ).touch(function () {
                                    new No.PopupEditor(a, {});
                                  })
                                )
                                .appendTo(p)
                            : !1 === e[n] &&
                              $("<div>")
                                .append(
                                  $(
                                    '<div class="history-link">' +
                                      o.caption +
                                      " " +
                                      locale.unlinked +
                                      " ...</div>"
                                  ).touch(function () {
                                    new No.PopupEditor(a, {});
                                  })
                                )
                                .appendTo(p);
                        }
                });
            }
          }),
          void 0 !== n && $('<div class="history-foot">').appendTo(o);
      });
    o("./src/react/SideEditorTools.css");
    var Pi = o(
      "./src/react/util/HorizontalScrollContainer/HorizontalScrollContainer.tsx"
    );
    class Hi extends s.Component {
      constructor(e) {
        super(e), (this.state = { isScrollable: !1 });
      }
      render() {
        return s.createElement(
          "div",
          { className: "SideEditorTools_root" },
          s.createElement(
            Pi.a,
            {
              controlsConfig: {
                left: {
                  visibility: window.TOUCH ? "NONE" : "AUTO",
                  containerClassName: "SideEditorTools_movementControls",
                  iconClassName: "i-32-24 i-white i-arrow-solid-left",
                  innerElement:
                    !window.TOUCH && this.state.isScrollable
                      ? s.createElement("div", {
                          className: "SideEditorTools_divider",
                        })
                      : null,
                },
                right: {
                  visibility: window.TOUCH ? "NONE" : "AUTO",
                  containerClassName: "SideEditorTools_movementControls",
                  iconClassName: "i-32-24 i-white i-arrow-solid-right",
                },
                position: "AFTER_CHILD",
              },
              onScrollStateChange: (e) => this.setState({ isScrollable: e }),
              customScrollBy: (e) => Math.max(e / 2, 64),
            },
            s.createElement(
              ze.a,
              {
                onFastClick: this.props.editFields,
                className: "SideEditorTools_button",
                rippleStyle: "LIGHT",
              },
              s.createElement("div", {
                className:
                  "SideEditorTools_buttonIcon i-32-24 i-white i-setting-tool",
              }),
              s.createElement(
                "div",
                { className: "SideEditorTools_buttonLabel" },
                Object(_e.a)().editFields
              )
            ),
            s.createElement("div", { className: "SideEditorTools_divider" }),
            s.createElement(
              ze.a,
              {
                onFastClick: this.props.popupFields,
                className: "SideEditorTools_button",
                rippleStyle: "LIGHT",
              },
              s.createElement("div", {
                className: "SideEditorTools_buttonIcon i-32-24 i-white i-plus",
              }),
              s.createElement(
                "div",
                { className: "SideEditorTools_buttonLabel" },
                Object(_e.a)().field
              )
            ),
            s.createElement(
              ze.a,
              {
                onFastClick: this.props.addFunction,
                className: "SideEditorTools_button",
                rippleStyle: "LIGHT",
              },
              s.createElement("div", {
                className:
                  "SideEditorTools_buttonIcon i-32-24 i-white i-field-formula",
              }),
              s.createElement(
                "div",
                { className: "SideEditorTools_buttonLabel" },
                Object(_e.a)().function
              )
            ),
            s.createElement(
              ze.a,
              {
                onFastClick: this.props.popupUIs,
                className: "SideEditorTools_button",
                rippleStyle: "LIGHT",
              },
              s.createElement("div", {
                className:
                  "SideEditorTools_buttonIcon i-32-24 i-white i-header",
              }),
              s.createElement(
                "div",
                { className: "SideEditorTools_buttonLabel" },
                Object(_e.a)().layoutElement
              )
            ),
            s.createElement("div", { className: "SideEditorTools_divider" }),
            s.createElement(
              ze.a,
              {
                onFastClick: this.props.popupReferences,
                className: "SideEditorTools_button",
                rippleStyle: "LIGHT",
              },
              s.createElement("div", {
                className:
                  "SideEditorTools_buttonIcon i-32-24 i-white i-field-ref",
              }),
              s.createElement(
                "div",
                { className: "SideEditorTools_buttonLabel" },
                Object(_e.a)().linkTo
              )
            ),
            s.createElement(
              ze.a,
              {
                onFastClick: this.props.popupReverses,
                className: "SideEditorTools_button",
                rippleStyle: "LIGHT",
              },
              s.createElement("div", {
                className:
                  "SideEditorTools_buttonIcon i-32-24 i-white i-field-rev",
              }),
              s.createElement(
                "div",
                { className: "SideEditorTools_buttonLabel" },
                Object(_e.a)().linkFrom
              )
            ),
            s.createElement(
              ze.a,
              {
                onFastClick: this.props.addSubTable,
                className: "SideEditorTools_button",
                rippleStyle: "LIGHT",
              },
              s.createElement("div", {
                className:
                  "SideEditorTools_buttonIcon i-32-24 i-white i-setting-table",
              }),
              s.createElement(
                "div",
                { className: "SideEditorTools_buttonLabel" },
                Object(_e.a)().subTable
              )
            )
          )
        );
      }
    }
    var Ui = o("./src/react/tableView/PopupMenu.tsx");
    class Vi extends s.Component {
      constructor(e) {
        super(e),
          Ie()(this, "handleClick", (e, t) => {
            null !== e &&
              (Object(Ot.a)(this.state.currentAction),
              this.state.currentAction(e, t)),
              this.setState({ currentAction: null });
          }),
          Ie()(this, "popupUIs", (e) => {
            const t = [];
            [
              "br",
              "space",
              "head",
              "text",
              "tab",
              "button",
              "view",
              "chart",
            ].forEach((e) => {
              t.push({
                id: e,
                text: Object(_e.a)().types[e] || e,
                iconClass: "i-32-24 i-light-grey i-field-" + e,
              });
            }),
              this.setState({
                currentAction: (e) => this.props.onCreateUI(t[e].id),
                currentTarget: ze.b.getTarget(e),
                currentItemsToRender: t,
                currentMaxCols: 2,
              });
          }),
          Ie()(this, "popupFields", (e) => {
            const t = [
              "string",
              "string_multiline",
              "html",
              "number",
              "boolean",
              "choice",
              "multi",
              "date",
              "time",
              "timestamp",
              "timeinterval",
              "appointment",
              "file",
              "signature",
              "link",
              "email",
              "phone",
              "location",
              "color",
              "icon",
            ];
            this.props.database.supports.authentication && t.push("user");
            const i = [];
            t.forEach((e) => {
              i.push({
                id: e,
                text: Object(_e.a)().types[e],
                iconClass: "i-32-24 i-light-grey i-field-" + e,
              });
            }),
              this.setState({
                currentAction: (e) => this.props.onCreateField(t[e]),
                currentTarget: ze.b.getTarget(e),
                currentItemsToRender: i,
                currentMaxCols: 3,
              });
          }),
          Ie()(this, "popupReferences", (e) => {
            const t = this.getSortedTypes();
            this.setState({
              currentAction: (e) => this.props.onCreateReference(t[e]),
              currentTarget: ze.b.getTarget(e),
              currentItemsToRender: t,
              currentMaxCols: void 0,
            });
          }),
          Ie()(this, "getSortedTypes", () =>
            b.util
              .localeSortBy(this.props.database.schema.types, "caption")
              .map((e) => {
                const t = e.icon
                  ? "ic ic-" + e.icon
                  : "i-40-24 i-light-grey i-setting-table";
                return {
                  id: e.id,
                  text: e.caption || Object(_e.a)().unnamed,
                  iconClass: "icon-big-grey " + t,
                };
              })
          ),
          Ie()(this, "popupReverses", (e) => {
            const t = this.getSortedTypes();
            this.setState({
              currentAction: (e) => this.props.onCreateReverse(t[e]),
              currentTarget: ze.b.getTarget(e),
              currentItemsToRender: t,
              currentMaxCols: void 0,
            });
          }),
          (this.state = {
            currentTarget: null,
            currentItemsToRender: [],
            currentAction: null,
            currentMaxCols: void 0,
          });
      }
      render() {
        return s.createElement(
          s.Fragment,
          null,
          s.createElement(Hi, {
            editFields: this.props.editFields,
            popupFields: this.popupFields,
            addFunction: this.props.addFunction,
            popupUIs: this.popupUIs,
            popupReferences: this.popupReferences,
            popupReverses: this.popupReverses,
            addSubTable: this.props.addSubTable,
          }),
          this.renderPopup()
        );
      }
      renderPopup() {
        return null !== this.state.currentAction
          ? s.createElement(Ui.a, {
              itemBackground: "DEFAULT",
              clickTarget: this.state.currentTarget,
              onClick: this.handleClick,
              maxColumns: this.state.currentMaxCols,
              items: this.state.currentItemsToRender,
            })
          : null;
      }
    }
    o("./node_modules/jquery/dist/jquery.js");
    function Wi(e, t, i, o) {
      (this.columns = this.calculateColumns()),
        (this.selectedComponent = void 0),
        (this.mouseMode = void 0),
        (this.container = e),
        (this.tid = t),
        (this.type = void 0),
        (this.hideFields = i || {}),
        (this.nid = void 0),
        (this.node = void 0),
        (this.currentTab = void 0),
        (this._isWritable = !0),
        (this.el = $(
          '<div class="object --ul-document-object' +
            (e.isEmbedded ? " object-embedded" : "") +
            '">'
        ).appendTo(e.containerEl || e.el)),
        this.el.on("mousedown touchstart", $.proxy(this.mousedown, this)),
        this.el.on("contextmenu", $.proxy(this.contextmenu, this)),
        (this.elTabs = e.tabsEl),
        (this.tabs = []),
        this.createStructure(o),
        ui.on("saveSchema", this.unselectComponent, this);
    }
    (Wi.prototype.updateStructure = function () {
      var e = this;
      Object(ki.b)()
        ? this.el.addClass("adminmode")
        : (this.el.removeClass("adminmode"), this.unselectComponent());
      var t = this.currentTab ? this.currentTab.id : void 0,
        i = (this.type = database.schema.types[this.tid]);
      if (!i) return this.destroy();
      var o = i.sorted[0] && "tab" === i.sorted[0].base,
        a = this.tabs,
        n = [],
        s = {},
        r = {};
      o || (r[0] = !0);
      for (var l = 0; l < a.length; l++) {
        var c = a[l];
        (s[c.id] = c), (c.children = []);
      }
      o ||
        (((c = s[0]).field = {
          id: "0",
          caption: i.caption,
          type: i,
          order: -1,
        }),
        n.push(c)),
        Q.each(i.sorted, function (t) {
          "tab" === t.base
            ? ((c = s[t.id]) ? (c.field = t) : (c = new No.Tab(e, t)),
              n.push(c),
              (r[t.id] = !0))
            : c.children.push(t);
        });
      for (l = 0; l < a.length; l++) {
        c = a[l];
        r[c.id] || c.destroy();
      }
      (this.tabs = n),
        Q.each(this.tabs, function (e) {
          e.updateStructure();
        }),
        this.updateTabs(),
        this.selectTab(t);
    }),
      (Wi.prototype.createStructure = function (e) {
        var t = this;
        Object(ki.b)()
          ? this.el.addClass("adminmode")
          : this.el.removeClass("adminmode");
        var i,
          o = (this.type = database.schema.types[this.tid]);
        o &&
          ((o.sorted[0] && "tab" === o.sorted[0].base) ||
            ((i = new No.Tab(this, {
              id: "0",
              caption: o.caption,
              type: o,
              order: -1,
            })),
            this.tabs.push(i)),
          Q.each(o.sorted, function (e) {
            "tab" === e.base
              ? ((i = new No.Tab(t, e)), t.tabs.push(i))
              : i.children.push(e);
          }),
          database.supports.files &&
            o.hasFiles &&
            (this.files = new No.FilesTab(this)),
          database.supports.comments &&
            o.hasComments &&
            (this.comments = new No.CommentsTab(this)),
          database.supports.history &&
            database.authorizationHistory &&
            o.hasHistory &&
            (this.history = new No.HistoryTab(this)),
          this.updateTabs(),
          this.selectTab(e));
      }),
      (Wi.prototype.updateTabs = function () {
        Q.each(
          this.tabs,
          function (e) {
            e.elTab.detach();
          },
          this
        ),
          Q.each(
            this.tabs,
            function (e) {
              e.elTab.appendTo(this.elTabs);
            },
            this
          ),
          this.files && this.files.elTab.appendTo(this.elTabs),
          this.comments && this.comments.elTab.appendTo(this.elTabs),
          this.history && this.history.elTab.appendTo(this.elTabs);
      }),
      (Wi.prototype.register = function () {
        this.nid && database.on("*", void 0, this.nodeChanged, this);
      }),
      (Wi.prototype.unregister = function () {
        this.nid && database.off("*", void 0, this.nodeChanged, this);
      }),
      (Wi.prototype.destroy = function () {
        ui.off("saveSchema", this.unselectComponent, this),
          this.unregister(),
          Q.each(this.tabs, function (e) {
            e.destroy();
          }),
          this.files && this.files.destroy(),
          this.comments && this.comments.destroy(),
          this.history && this.history.destroy(),
          this.el.remove();
      }),
      (Wi.prototype.bind = function (e) {
        this.unregister(),
          (this.node = e),
          (this.nid = e ? e._id : void 0),
          this.register(),
          this.updateIsWritable(),
          Q.each(this.tabs, function (t) {
            t.bind(e);
          }),
          this.files && this.files.bind(e),
          this.comments && this.comments.bind(e),
          this.history && this.history.bind(e);
      }),
      (Wi.prototype.updateIsWritable = function () {
        this._isWritable = database.canWriteNode(this.nid);
      }),
      (Wi.prototype.isWritable = function () {
        return this._isWritable;
      }),
      (Wi.prototype.save = function () {
        Q.each(this.tabs, function (e) {
          e.save();
        });
      }),
      (Wi.prototype.getSelectedTab = function () {
        if (this.currentTab) return this.currentTab.id;
      }),
      (Wi.prototype.selectTab = function (e) {
        let t = e;
        if ("files" === e && this.files) this.files.show();
        else if ("comments" === e && this.comments) this.comments.show();
        else if ("history" === e && this.history) this.history.show();
        else {
          var i = this.tabs;
          const o = i.find((t) => t.id === e);
          void 0 === o ? (i[0].show(), (t = i[0].id)) : o.show();
        }
        this.container.editorTabChanged && this.container.editorTabChanged(t);
      }),
      (Wi.prototype.nodeChanged = function () {
        var e = database.loadNodeSync(this.nid);
        (this.node = e),
          this.updateIsWritable(e),
          e &&
            Q.each(this.tabs, function (e) {
              e.nodeChanged();
            });
      });
    var Bi = 0;
    function qi(e) {
      return { file: "float:left" }[e] || "";
    }
    function Yi(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function Gi(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? Yi(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : Yi(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    function Xi() {
      var e = this;
      (this.nid = void 0),
        (this.opened = !1),
        (this.editor = void 0),
        (this.options = {}),
        (this.lastSelectedTab = void 0),
        (this.el = $('<div class="sideeditor">').appendTo(ui.$right)),
        $('<div class="popupeditor2-shadow">').appendTo(this.el),
        (this.$tools = void 0),
        $('<div class="sideeditor-buttons-left">')
          .appendTo(this.el)
          .button2({
            icon: "i-40-24 i-light-grey i-line-right",
            click: function () {
              e.close();
            },
          }),
        (this.tabsEl = $('<div class="sideeditor-tabs">').appendTo(this.el)),
        database.on("rename", void 0, this.nodeRenamed, this),
        database.on("remove", void 0, this.nodeRemoved, this),
        database.on("schema", void 0, this.schemaChanged, this),
        database.on("admin", void 0, this.adminChanged, this);
    }
    function Ki(e) {
      var t = ui.sideEditor.opened ? 1 : 0,
        i = widgets.popupEditorStack,
        o = i.length + t,
        a = ui.rightWidth,
        n = ui.leftWidth,
        s = ui.fullWidth - n - a,
        r = 32 * (o - 1),
        l = Math.max(s < r ? 0 : -Math.floor(s / o), -a);
      if (t && ui.fullWidth > 640) {
        var c = l * (o - 1);
        ui.$right[0].style.transform = ui.$right[0].style.WebkitTransform =
          "translateX(" + c + "px)";
      }
      for (var d = 0; d < i.length; d++) {
        c = l * (o - d - 1 - t);
        (e && d === i.length - 1) ||
          ui.fullWidth < 640 ||
          (i[d].el[0].style.transform = i[d].el[0].style.WebkitTransform =
            "translateX(" + c + "px)");
      }
    }
    function Ji() {
      for (
        var e = ui.sideEditor.opened ? 1 : 0,
          t = widgets.popupEditorStack,
          i = t.length + e,
          o = ui.rightWidth,
          a = ui.leftWidth,
          n = ui.fullWidth - a - o,
          s = 32 * (i - 1),
          r = n < s ? o - s : o,
          l = n < s ? 0 : -Math.floor(n / i),
          c = r + "px",
          d = ui.footHeight + "px",
          u = 0;
        u < t.length;
        u++
      )
        (t[u].el[0].style.bottom = d),
          ui.fullWidth > 640
            ? ((t[u].el[0].style.width = c),
              t[u].$backplane.css("z-index", 8),
              (t[u].el[0].style.top = ui.topPadding + 88 + "px"))
            : ((t[u].el[0].style.width = ui.fullWidth + "px"),
              t[u].$backplane.css("z-index", 10),
              (t[u].el[0].style.top = ui.topPadding + "px"));
      if (e) {
        var p = l * (i - 1);
        (ui.$right[0].style.transition = "none"),
          (ui.$right[0].style.transform = ui.$right[0].style.WebkitTransform =
            "translateX(" + p + "px)");
      }
      for (u = 0; u < t.length; u++) {
        p = l * (i - u - 1 - e);
        (t[u].el[0].style.transition = "none"),
          (t[u].el[0].style.transform = t[u].el[0].style.WebkitTransform =
            "translateX(" + p + "px)");
      }
      setTimeout(function () {
        e && (ui.$right[0].style.transition = "");
        for (var i = 0; i < t.length; i++) t[i].el[0].style.transition = "";
      }, 0);
    }
    function Zi() {
      ui.sideEditor.updateTools();
      for (var e = widgets.popupEditorStack, t = 0; t < e.length; t++)
        e[t].updateTools();
      ui.trigger("widgets.tools.updated");
    }
    function Qi(e, t) {
      var i = this;
      this.isClosed = !1;
      var o = database.typeOf(e);
      if (!o) return;
      var a = ui.sideEditor.opened ? 1 : 0,
        n = widgets.popupEditorStack.length + a + 1,
        s = ui.rightWidth,
        r = ui.leftWidth,
        l = 32 * (n - 1),
        c = ui.fullWidth - r - s < l ? s - l : s;
      (t = t || {}),
        (this.options = t),
        (this.nid = e),
        (this.children = []),
        (this.recordController = {
          hasNextRecord: function () {
            return !!t.next;
          },
          nextRecord: function () {
            i.editor.save(), t.next && t.next();
          },
          hasPrevRecord: function () {
            return !!t.prev;
          },
          prevRecord: function () {
            i.editor.save(), t.prev && t.prev();
          },
          hasAddRecord: function () {
            return !(!t.create || !database.canCreate(o));
          },
          addRecord: function () {
            i.editor.save(), t.create && t.create();
          },
          hasDuplicateRecord: function () {
            return !(!t.duplicate || !database.canCreate(o));
          },
          duplicateRecord: function () {
            i.editor.save(),
              t.duplicate &&
                database.canCreate(o) &&
                ("function" == typeof t.duplicate
                  ? t.duplicate()
                  : ($.loading(!0),
                    database.duplicate(e, function (e, t) {
                      if (($.loading(!1), e)) return $.alert(e);
                      i.setNid(t);
                    })));
          },
          hasRemoveRecord: function () {
            return database.canDelete(o);
          },
          removeRecord: function () {
            i.remove();
          },
          hasPrintRecord: function () {
            return !!database.authorizationPrint;
          },
          printRecord: function () {
            i.editor.save(), i.print();
          },
          hasUnlinkRecord: function () {
            return !!t.unlink;
          },
          unlinkRecord: function () {
            i.editor.save(), t.unlink && t.unlink();
          },
        }),
        (this.$backplane = $(
          '<div class="nx-backplane nx-backplane-popupeditor2">'
        )
          .appendTo($(document.body))
          .touch(function (e) {
            var t = $(e.target);
            (t.is(".nx-backplane") || t.is(".popupeditor2-shadow")) &&
              i.close();
          }));
      var d = (this.el = $(
        '<div class="popupeditor2" style="transform:translateX(' +
          c +
          "px);-webkit-transform:translateX(" +
          c +
          "px);width:" +
          c +
          "px;bottom:" +
          ui.footHeight +
          'px">'
      ).appendTo(this.$backplane));
      ui.fullscreenStack.length > 0
        ? (this.$backplane.css("z-index", 10),
          this.el.css({ top: 0, bottom: 0 }))
        : ui.fullWidth > 640
        ? (this.$backplane.css("z-index", 8),
          (this.el[0].style.top = ui.topPadding + 96 + "px"))
        : (this.$backplane.css("z-index", 10),
          this.el.css({ top: ui.topPadding, width: ui.fullWidth + "px" })),
        $('<div class="popupeditor2-shadow">').appendTo(this.el),
        $('<div class="popupeditor2-buttons-left">')
          .appendTo(this.el)
          .button2({
            icon: "i-40-18 i-light-grey i-close",
            click: $.proxy(this.close, this),
          }),
        (this.tabsEl = $('<div class="popupeditor2-tabs">').appendTo(this.el)),
        (this.editor = new Wi(
          this,
          o.id,
          this.options.hideFields || {},
          void 0
        )),
        database.loadNode(e, function (e, t) {
          t && i.editor.bind(t);
        }),
        database.on("rename", void 0, this.nodeRenamed, this),
        database.on("remove", void 0, this.nodeRemoved, this),
        database.on("schema", void 0, this.schemaChanged, this),
        database.on("admin", void 0, this.adminChanged, this),
        (this.keydown = $.proxy(this.keydown, this)),
        ui.recordNavigation.pushController(this.recordController),
        $.pushInputHandler(this),
        widgets.popupEditorStack.push(this),
        Zi(),
        Ki(!0),
        setTimeout(function () {
          d[0].style.transform = d[0].style.WebkitTransform = "translateX(0px)";
        }, 0);
    }
    function eo(e) {
      e = e || {};
      var t = $.backplane({ close: d }),
        i = window.getHeight(),
        o = (this.$menu = $(
          '<div class="nx-menu-popup" style="max-height:' +
            (i - 64) +
            'px;overflow:auto">'
        ).appendTo(t));
      if (e.head) {
        var a = $('<div class="nx-menu-head">').appendTo(o);
        e.head.caption && a.append($("<span>").text(e.head.caption));
      }
      var n = e.items || [];
      Q.each(n, function (e, t) {
        if (e)
          if ("string" == typeof e)
            $('<div class="nx-menu-head2">')
              .append($("<span>").text(e))
              .appendTo(o);
          else {
            var i = $('<div class="nx-menu-item">')
              .appendTo(o)
              .click(function (t) {
                $(this).addClass("anim-activated"), c(), e.click && e.click(t);
              });
            e.icon &&
              $('<div class="nx-menu-icon ' + e.icon + '">').appendTo(i),
              e.caption &&
                $('<div class="nx-menu-label">').text(e.caption).appendTo(i),
              e.css && i.css(e.css);
          }
      }),
        (this.close = c);
      var s = o.outerWidth(),
        r = o.outerHeight(),
        l = e.offset;
      function c() {
        t.close();
      }
      function d() {
        e.close && e.close();
      }
      l.left + s > window.getWidth() && (l.left = window.getWidth() - s),
        l.top + r > window.getHeight() && (l.top = window.getHeight() - r),
        o.offset(l);
    }
    (Wi.prototype.mousedown = function (e) {
      if (
        Object(ki.b)() &&
        !(this.mouseMode || (e.touches && 1 !== e.touches.length))
      ) {
        var t = this,
          i = e.target.className,
          o = $(e.target),
          a = o.closest(".component").data("component"),
          n = Date.now(),
          s = n - Bi;
        (Bi = n),
          a
            ? /component-selector-tool/.test(i)
              ? (a.popup(), e.preventDefault())
              : /component-selector-cr/.test(i)
              ? (c(), e.preventDefault())
              : /component-selector-cb/.test(i)
              ? (d(), e.preventDefault())
              : /component-selector/.test(i)
              ? (s < 400 ? a.startEditCaption && a.startEditCaption() : l(),
                e.preventDefault())
              : o.is("label") ||
                o.is(".component") ||
                o.is(".booleanslide-text")
              ? t.selectedComponent === a
                ? (l(), e.preventDefault())
                : r()
              : this.unselectComponent()
            : this.unselectComponent();
      }
      function r() {
        t.mouseMode = "start-select";
        var i = e.touches ? e.touches[0].clientX : e.clientX,
          o = e.touches ? e.touches[0].clientY : e.clientY,
          n = i,
          s = o;
        function r(e) {
          (e.touches && 1 !== e.touches.length) ||
            ((n = e.touches ? e.touches[0].clientX : e.clientX),
            (s = e.touches ? e.touches[0].clientY : e.clientY));
        }
        function l(e) {
          if (!e.touches || 0 === e.touches.length) {
            $(window).off("mousemove touchmove", r),
              $(window).off("mouseup touchend", l),
              (t.mouseMode = void 0);
            var c = n - i,
              d = s - o;
            c * c + d * d < 10 && (t.selectComponent(a), e.preventDefault());
          }
        }
        $(window).on("mousemove touchmove", r),
          $(window).on("mouseup touchend", l);
      }
      function l() {
        t.mouseMode = "drag";
        var i,
          o,
          n,
          s,
          r,
          l,
          c,
          d = "init",
          u = e.touches ? e.touches[0].clientX : e.clientX,
          p = e.touches ? e.touches[0].clientY : e.clientY,
          h = a.el.parent();
        function m(e) {
          if (!e.touches || 1 === e.touches.length) {
            e.preventDefault();
            var t = e.touches ? e.touches[0].clientX : e.clientX,
              l = e.touches ? e.touches[0].clientY : e.clientY,
              m = t - u,
              f = l - p;
            if ("init" === d)
              m * m + f * f > 25 &&
                ((d = "drag"),
                (i = a.el.outerWidth()),
                i / h.width(),
                (o = a.el.outerHeight()),
                (n = a.el.offset()),
                (s = $(
                  '<div style="display:inline-block;width:' +
                    (i - 1) +
                    "px;height:" +
                    (o - 3) +
                    "px;background-color:#ccc;" +
                    qi(a.field.base) +
                    '">'
                ).insertBefore(a.el)),
                a.el
                  .css({
                    position: "absolute",
                    left: n.left,
                    top: n.top,
                    width: i,
                    height: o,
                    backgroundColor: "#e7e7e7",
                    opacity: 0.8,
                    zIndex: 11,
                  })
                  .detach()
                  .appendTo($(document.body)),
                g());
            else {
              a.el.css({ left: n.left + m, top: n.top + f });
              var b = v(t, l);
              if (
                b &&
                (!r ||
                  b.el !== r.el ||
                  b.dirH !== r.dirH ||
                  b.dirV !== r.dirV ||
                  b.tab !== r.tab)
              ) {
                if (
                  (r && r.tab && r.tab.elTab.css("background-color", ""),
                  (r = b) && r.tab)
                )
                  r.tab.elTab.css("background-color", "red"), s.detach();
                else {
                  var y = $(r.el).data("component");
                  r.dirV < 0 || r.dirH < 0
                    ? (s.insertBefore($(r.el)), (c = y.field.order - 0.5))
                    : (r.dirV > 0 || r.dirH > 0) &&
                      (s.insertAfter($(r.el)), (c = y.field.order + 0.5));
                }
                g();
              }
            }
          }
        }
        function f(e) {
          (e.touches && 0 !== e.touches.length) ||
            ($(window).off("mousemove touchmove", m),
            $(window).off("mouseup touchend", f),
            e.preventDefault(),
            (t.mouseMode = void 0),
            "drag" === d &&
              (r && r.tab
                ? (r.tab.elTab.css("background-color", ""),
                  (a.field.order = r.tab.field.order + 0.5),
                  a.field.type.resort(),
                  a.field.type.schema.trigger("change"))
                : (a.el
                    .css({
                      position: "",
                      left: "",
                      top: "",
                      width: 100 * a.field.formWidth + "%",
                      height: "",
                      backgroundColor: "",
                      opacity: "",
                      zIndex: "",
                    })
                    .detach()
                    .insertBefore(s),
                  r &&
                    ((a.field.order = c),
                    a.field.type.resort(),
                    a.field.type.schema.trigger("change"))),
              (r = void 0),
              s.remove()));
        }
        function g() {
          l = [];
          for (var e = h.children(".component"), i = 0; i < e.length; i++) {
            var o = $(e[i]),
              a = o.offset(),
              n = o.width(),
              s = o.height();
            l.push({ x: a.left, y: a.top, w: n, h: s, el: o[0] });
          }
          var r = t.tabs;
          for (i = 0; i < r.length; i++) {
            var c = r[i];
            if (!c.visible) {
              var d = c.elTab;
              (a = d.offset()), (n = d.width()), (s = d.height());
              l.push({ x: a.left, y: a.top, w: n, h: s, el: d[0], tab: c });
            }
          }
        }
        function v(e, t) {
          for (var i = 0; i < l.length; i++) {
            var o = l[i];
            if (e >= o.x && e <= o.x + o.w && t >= o.y && t <= o.y + o.h)
              return {
                dirH: e - o.x < o.w / 4 ? -1 : e - o.x > (3 * o.w) / 4 ? 1 : 0,
                dirV: t - o.y < o.h / 4 ? -1 : t - o.y > (3 * o.h) / 4 ? 1 : 0,
                el: o.el,
                tab: o.tab,
              };
          }
        }
        $(window).on("mousemove touchmove", m),
          $(window).on("mouseup touchend", f);
      }
      function c() {
        (t.mouseMode = "resize-h"),
          $(window).on("mousemove touchmove", l),
          $(window).on("mouseup touchend", c);
        var i = e.touches ? e.touches[0].clientX : e.clientX,
          o = e.touches ? e.touches[0].clientY : e.clientY,
          n = a.el.parent(),
          s = a.el.outerWidth() / n.width(),
          r = a.field.formWidth;
        function l(e) {
          if (!e.touches || 1 === e.touches.length) {
            e.preventDefault();
            var t = e.touches ? e.touches[0].clientX : e.clientX,
              r = e.touches ? e.touches[0].clientY : e.clientY,
              l = t - i,
              c = r - o,
              d = Math.abs(l) > Math.abs(c) ? l : c,
              u = Math.round(Math.min(4, Math.max(1, 4 * (s + d / n.width())))),
              p =
                Math.round(
                  Math.min(
                    32,
                    Math.max(a.field.minFormWidth, 32 * (s + d / n.width()))
                  )
                ) / 32;
            a.setWidth(u, p);
          }
        }
        function c(e) {
          (e.touches && 0 !== e.touches.length) ||
            ($(window).off("mousemove touchmove", l),
            $(window).off("mouseup touchend", c),
            e.preventDefault(),
            (t.mouseMode = void 0),
            r !== a.field.formWidth && a.field.type.schema.trigger("change"));
        }
      }
      function d() {
        t.mouseMode = "resize-v";
        var i = e.touches ? e.touches[0].clientY : e.clientY,
          o = a.el.outerHeight(),
          n = a.field.height;
        function s(e) {
          if (!e.touches || 1 === e.touches.length) {
            e.preventDefault();
            var t = (e.touches ? e.touches[0].clientY : e.clientY) - i;
            a.setHeight(o + t);
          }
        }
        function r(e) {
          (e.touches && 0 !== e.touches.length) ||
            ($(window).off("mousemove touchmove", s),
            $(window).off("mouseup touchend", r),
            e.preventDefault(),
            (t.mouseMode = void 0),
            n !== a.field.height && a.field.type.schema.trigger("change"));
        }
        $(window).on("mousemove touchmove", s),
          $(window).on("mouseup touchend", r);
      }
    }),
      (Wi.prototype.selectComponentByUUID = function (e, t) {
        var i = this.currentTab;
        if (i) {
          var o = i.components;
          if (o)
            for (var a = 0; a < o.length; a++) {
              var n = o[a],
                s = n.field;
              if (s && s.uuid === e)
                return (
                  this.selectComponent(n),
                  void (t && n.startEditCaption && n.startEditCaption())
                );
            }
        }
      }),
      (Wi.prototype.selectComponent = function (e) {
        if (
          e !== this.selectedComponent &&
          (this.blur(),
          this.unselectComponent(),
          (this.selectedComponent = e),
          e)
        ) {
          var t = "";
          e.el.addClass("selected"),
            e.popup &&
              (t +=
                '<div class="component-selector-tool button i-32-24 i-white i-setting-tool"></div>'),
            e.isWidthAdjustable() &&
              (t +=
                '<div class="component-selector-cr --ul-resize-right"></div>'),
            e.isHeightAdjustable() &&
              (t += '<div class="component-selector-cb"></div>');
          $('<div class="component-selector">').html(t).prependTo(e.el);
          var i = e.el.offset().top,
            o = i + e.el.outerHeight(),
            a = this.el.offset().top,
            n = a + this.el.height(),
            s = this.el.scrollTop();
          o > n
            ? this.el.scrollTop(s + Math.min(i - a, o - n))
            : i < a && this.el.scrollTop(s + (i - a));
        }
      }),
      (Wi.prototype.blur = function () {
        Q.each(this.tabs, function (e) {
          e.blur();
        });
      }),
      (Wi.prototype.focus = function () {
        this.currentTab && this.currentTab.focus();
      }),
      (Wi.prototype.unselectComponent = function (e) {
        this.selectedComponent &&
          (this.selectedComponent.el.children(".component-selector").remove(),
          this.selectedComponent.el.removeClass("selected"),
          (this.selectedComponent = void 0));
      }),
      (Wi.prototype.resize = function () {
        var e = this.columns,
          t = this.calculateColumns();
        t !== e && ((this.columns = t), this.columnsChanged()),
          Q.each(this.tabs, function (e) {
            e.resize();
          });
      }),
      (Wi.prototype.calculateColumns = function () {
        var e = ui.rightWidth;
        return e <= 320 ? 1 : e <= 480 ? 2 : 4;
      }),
      (Wi.prototype.columnsChanged = function () {
        Q.each(this.tabs, function (e) {
          e.columnsChanged();
        });
      }),
      (Wi.prototype.editorUp = function () {
        this.container.editorUp && this.container.editorUp();
      }),
      (Wi.prototype.editorDown = function () {
        this.container.editorDown && this.container.editorDown();
      }),
      (Wi.prototype.updateBackground = function (e) {
        this.container.updateBackground(e);
      }),
      (Wi.prototype.openTab = function (e) {
        if (e) {
          var t = Q.filter(this.tabs, function (t) {
            return t.field && t.field.caption === e;
          })[0];
          t && this.selectTab(t.id);
        }
      }),
      (Wi.prototype.isFullscreen = function () {
        return (
          this.container &&
          this.container.isFullscreen &&
          this.container.isFullscreen()
        );
      }),
      (Wi.prototype.contextmenu = function (e) {
        if (!window.NINOX_BETA) return;
        if (!$(e.target).is(".form")) return;
        const t = this;
        var i = $.backplane({ autoClose: !0 }),
          o = $(
            '<div class="nx-menu-popup" style="white-space:nowrap">'
          ).appendTo(i);
        $('<div class="nx-menu-item">')
          .text("Copy this record")
          .appendTo(o)
          .click(r),
          $('<div class="nx-menu-item">')
            .text("Past as a new record")
            .appendTo(o)
            .click(l);
        var a = o.outerWidth(),
          n = o.outerHeight();
        const s = { left: e.clientX, top: e.clientY };
        async function r() {
          i.close();
          const e = [];
          try {
            await o(t.nid);
            const i = {
              application: "Ninox",
              version: window.NINOX_VERSION,
              type: "records",
              records: e,
            };
            navigator.clipboard.writeText(JSON.stringify(i, 0, 4));
          } catch (e) {
            $.alert(e);
          }
          async function o(t, i) {
            const a = database.typeOf(t);
            if (!a) return;
            const n = await new Promise((e) =>
                database.loadNode(t, (t, i) => e(i))
              ),
              s = { _type: a.id, _clientId: n._id };
            for (const e in n) {
              const t = n[e];
              if (null != t)
                if ("_" === e[0]);
                else {
                  const n = a.fields[e];
                  if (n)
                    if ("ref" === n.base)
                      n.isComposition && n.type.master === i
                        ? (s[e] = n.refTypeId + t)
                        : (s[e] = t);
                    else if ("rev" === n.base) {
                      if (
                        n.reference.isComposition &&
                        n.reference.type.master === a
                      ) {
                        const e = t;
                        if (e && e.length) {
                          const t = n.refTypeId;
                          for (const i of e) {
                            const e = t + i;
                            await o(e, a);
                          }
                        }
                      }
                    } else n.isField && "fn" !== n.base && (s[e] = t);
                }
            }
            e.unshift(s);
          }
        }
        async function l() {
          i.close();
          try {
            const e = await navigator.clipboard.readText(),
              t = JSON.parse(e);
            if (
              "Ninox" !== t.application ||
              "records" !== t.type ||
              !Array.isArray(t.records)
            )
              throw new Error(
                "Could not find a Ninox record on the clipboard."
              );
            await new Promise((e) =>
              database.updateNodes(t.records, () => e())
            );
          } catch (e) {
            $.alert(e);
          }
        }
        s.left + a > window.getWidth() && (s.left = window.getWidth() - a),
          s.top + n > window.getHeight() && (s.top = window.getHeight() - n),
          o.offset(s),
          e.preventDefault();
      }),
      (Xi.prototype.destroy = function () {
        database.off("rename", void 0, this.nodeRenamed, this),
          database.off("remove", void 0, this.nodeRemoved, this),
          database.off("schema", void 0, this.schemaChanged, this),
          database.off("admin", void 0, this.adminChanged, this),
          this.close(),
          this.el.remove();
      }),
      (Xi.prototype.schemaChanged = function (e, t, i) {
        this.updateStructure();
      }),
      (Xi.prototype.adminChanged = function (e, t) {
        this.updateStructure();
      }),
      (Xi.prototype.isOnTop = function () {
        return !widgets.popupEditorStack.length;
      }),
      (Xi.prototype.open = function (e, t, i) {
        console.log("SideEditor.open", e);
        var o = this;
        if (
          (this.editor &&
            (this.editor.save(),
            (this.lastSelectedTab = this.editor.getSelectedTab())),
          (this.options = t || {}),
          !e)
        )
          return this.close();
        var a = database.typeOf(e);
        if (!a) return this.close();
        this.nid = e;
        const n = H();
        e !== n.nid && A(Gi({}, n, { nid: e }));
        var s = this.opened;
        s || ((this.opened = !0), ui.showRight()),
          this.editor && this.editor.type === a
            ? this.editor.selectTab(
                n.tabId && "default" !== n.tabId
                  ? n.tabId
                  : this.lastSelectedTab
              )
            : (this.editor && this.editor.destroy(),
              (this.editor = new Wi(
                this,
                a.id,
                !0,
                n.tabId && "default" !== n.tabId
                  ? n.tabId
                  : this.lastSelectedTab
              ))),
          $.loading(!0),
          database.loadNode(e, function (t, i) {
            $.loading(!1), e === o.nid && (i ? o.editor.bind(i) : o.close());
          }),
          !TOUCH &&
            i &&
            setTimeout(
              function () {
                o.editor && o.editor.focus();
              },
              s ? 0 : 400
            ),
          this.updateTools(),
          window.Appcues && window.Appcues.page();
      }),
      (Xi.prototype.editorTabChanged = function (e) {
        const t = H();
        t.tabId !== e && A(Gi({}, t, { tabId: e }));
      }),
      (Xi.prototype.close = function (e) {
        if (this.opened) {
          (this.opened = !1), (this.nid = void 0);
          var t = this.editor;
          (this.editor = void 0),
            t && (t.save(), (this.lastSelectedTab = t.getSelectedTab())),
            ui.hideRight(function () {
              t && t.destroy();
            }),
            this.options.close && !e && this.options.close(),
            (this.options = {}),
            this.updateTools(),
            A(Gi({}, H(), { nid: void 0, tabId: void 0 })),
            window.Appcues && window.Appcues.page();
        }
      }),
      (Xi.prototype.isOpen = function () {
        return this.opened;
      }),
      (Xi.prototype.focus = function () {
        this.opened && this.editor && this.editor.focus();
      }),
      (Xi.prototype.updateStructure = function () {
        var e = this;
        this.editor &&
          (this.nid && database.typeOf(this.nid)
            ? (this.editor.updateStructure(),
              database.loadNode(this.nid, function (t, i) {
                i && e.editor.bind(i);
              }))
            : this.close());
        this.updateTools();
      }),
      (Xi.prototype.updateTools = function () {
        database.adminMode && this.opened && this.isOnTop()
          ? this.showTools()
          : this.hideTools();
      }),
      (Xi.prototype.showTools = function () {
        var e = this;
        function t(t) {
          Object(l.f)("Form", "EditFields");
          var i = database.typeOf(e.getSelectedNid());
          i && new ni({ type: i.id });
        }
        function i(t) {
          Object(l.f)("Form", "CreateField", { fieldType: t });
          var i = t,
            o = void 0,
            a = void 0,
            n = void 0;
          "string_multiline" === i
            ? ((i = "string"), (o = !0))
            : "signature" === i &&
              ((i = "file"), (a = "signature"), (n = locale.signature));
          var s = u(),
            r = database.typeOf(e.getSelectedNid());
          if (r) {
            var c = r.createNewFieldName(i, n),
              d = r.schema.createField2(
                r,
                {
                  base: i,
                  order: s,
                  caption: c,
                  stringMultiline: o,
                  fileHandling: a,
                },
                !1,
                !0
              );
            e.editor.selectComponentByUUID(d.uuid, !0);
          }
        }
        function o(t) {
          Object(l.f)("Form", "CreateReference");
          var i = u(),
            o = database.typeOf(e.getSelectedNid());
          if (o) {
            var a = t.id,
              n = database.schema.types[a];
            if (n) {
              var s = n.caption;
              for (let e = 2; o.findElement(s); e++) s = n.caption + e;
              var r = o.caption;
              for (let e = 2; n.findElement(r) || (o === n && s === r); e++)
                r = o.caption + e;
              var c = o.schema.createReference(
                o,
                s,
                n,
                r,
                !1,
                void 0,
                void 0,
                void 0,
                void 0,
                i,
                void 0,
                !1
              );
              e.editor.selectComponentByUUID(c.uuid, !0);
            }
          }
        }
        function n(t) {
          Object(l.f)("Form", "CreateReverse");
          var i = u(),
            o = database.typeOf(e.getSelectedNid());
          if (o) {
            var a = t.id,
              n = database.schema.types[a];
            if (n) {
              var s = o.caption;
              for (let e = 2; n.findElement(s); e++) s = o.caption + e;
              var r = n.caption;
              for (let e = 2; o.findElement(r) || (n === o && s === r); e++)
                r = n.caption + e;
              var c = n.schema.createReference(
                n,
                s,
                o,
                r,
                !1,
                void 0,
                void 0,
                void 0,
                void 0,
                void 0,
                i,
                !1
              );
              e.editor.selectComponentByUUID(c.reverse.uuid);
            }
          }
        }
        function r(t) {
          Object(l.f)("Form", "CreateSubTable");
          var i = u(),
            o = database.schema.clone(),
            a = o.typeOf(e.getSelectedNid());
          if (a) {
            var n = o.createType(),
              s = void 0;
            new ni({
              schema: o,
              schemaDirty: !0,
              isNewType: !0,
              type: n.id,
              beforeSaveType: function () {
                var e = a.caption;
                for (let t = 2; n.findElement(e); t++) e = a.caption + t;
                var t = n.caption;
                for (let i = 2; a.findElement(t) || (n === a && e === t); i++)
                  t = n.caption + i;
                var r = o.createReference(
                  n,
                  e,
                  a,
                  t,
                  !0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  void 0,
                  i,
                  !1
                );
                s = r.reverse.uuid;
              },
              afterSaveType: function () {
                s && e.editor.selectComponentByUUID(s);
              },
            });
          }
        }
        function c(t) {
          Object(l.f)("Form", "CreateFunction");
          var i = u(),
            o = database.typeOf(e.getSelectedNid());
          o &&
            new Vt.a({
              schema: o.schema,
              type: o,
              okay: function (t, a) {
                if (t && a) {
                  Object(l.f)("Form", "CreateFunctionConfirm");
                  var n = o.schema.createField2(
                    o,
                    {
                      order: i,
                      caption: o.createNewFieldName("fn"),
                      base: "fn",
                      fn: t,
                    },
                    !1,
                    !0
                  );
                  e.editor.selectComponentByUUID(n.uuid, !0);
                }
              },
            });
        }
        function d(t) {
          Object(l.f)("Form", "LayoutElement", { fieldType: t });
          var i = "tab" === t ? void 0 : u(),
            o = database.typeOf(e.getSelectedNid());
          if (o) {
            var a = locale.types[t],
              n = o.schema.createUI(o, a, i, t, void 0, !1, !0);
            e.editor.selectComponentByUUID(
              n.uuid,
              "head" === t || "button" === t
            );
          }
        }
        function u() {
          var t = database.typeOf(e.getSelectedNid());
          if (t) {
            var i = t.sorted,
              o = 0,
              a = e.editor && e.editor.currentTab && e.editor.currentTab.field;
            a && (o = i.indexOf(a) + 1);
            for (var n = o; n < i.length; n++) {
              var s = i[n];
              if ("tab" === s.base) return s.order - 0.5;
            }
          }
        }
        this.$tools || (this.$tools = $("<div>").appendTo(this.el)),
          a.render(
            s.createElement(Vi, {
              addFunction: c,
              addSubTable: r,
              editFields: t,
              onCreateField: i,
              onCreateReference: o,
              onCreateReverse: n,
              database: database,
              onCreateUI: d,
            }),
            this.$tools[0]
          );
      }),
      (Xi.prototype.hideTools = function () {
        this.$tools &&
          (a.unmountComponentAtNode(this.$tools[0]),
          this.$tools.remove(),
          (this.$tools = void 0));
      }),
      (Xi.prototype.nodeRemoved = function (e, t) {
        t === this.nid && this.close();
      }),
      (Xi.prototype.nodeRenamed = function (e, t, i) {
        t === this.nid && this.setNid(i);
      }),
      (Xi.prototype.setNid = function (e) {
        this.opened && this.open(e, this.options);
      }),
      (Xi.prototype.remove = function () {
        var e = this,
          t = this.nid,
          i = database.typeOf(t);
        if (!database.canDelete(i)) return $.alert(locale.errorNotAuthorized);
        $.dialog({
          closable: !0,
          caption: locale.remove,
          message: locale.confirmRemove,
          buttons: [
            {
              color: "red",
              caption: locale.remove,
              callback: function () {
                database.remove(t, function (t) {
                  if (t) return $.alert(t);
                  e.open(void 0);
                });
              },
            },
          ],
        });
      }),
      (Xi.prototype.print = function () {
        var e = this;
        this.nid &&
          (window.reports
            ? reports.openDesigner({
                nid: this.nid,
                nids: e.options.getSelectedNids
                  ? e.options.getSelectedNids()
                  : [],
              })
            : Object(re.a)(this.nid));
      }),
      (Xi.prototype.prev = function () {
        this.options.prev && this.options.prev();
      }),
      (Xi.prototype.next = function () {
        this.options.next && this.options.next();
      }),
      (Xi.prototype.first = function () {
        this.options.first && this.options.first();
      }),
      (Xi.prototype.last = function () {
        this.options.last && this.options.last();
      }),
      (Xi.prototype.popup = function (e) {
        var t = this,
          i = t.nid,
          o = database.typeOf(i);
        if (o) {
          var a = $.backplane({}),
            n = $(
              '<div class="nx-menu-popup" style="border-radius:4px">'
            ).appendTo(a);
          database.authorizationPrint &&
            $('<div class="nx-menu-item">')
              .append(
                $('<div class="nx-menu-label">').text(locale.print + "...")
              )
              .appendTo(n)
              .click(function () {
                a.close(), t.print();
              }),
            this.options.duplicate &&
              database.canCreate(o) &&
              $('<div class="nx-menu-item">')
                .append($('<div class="nx-menu-label">').text(locale.duplicate))
                .appendTo(n)
                .click(function () {
                  a.close(), t.options.duplicate();
                }),
            database.canDelete(o) &&
              $('<div class="nx-menu-item">')
                .append($('<div class="nx-menu-label">').text(locale.remove))
                .appendTo(n)
                .click(function () {
                  a.close(), t.remove();
                }),
            $("<hr>").appendTo(n),
            $('<div class="nx-menu-item">')
              .append($('<div class="nx-menu-label">').text(locale.close))
              .appendTo(n)
              .click(function () {
                a.close(), t.close();
              });
          var s = n.outerWidth(),
            r = n.outerHeight(),
            l = $(e.target).offset();
          (l.top += 32),
            l.left + s > window.getWidth() && (l.left = window.getWidth() - s),
            l.top + r > window.getHeight() && (l.top = window.getHeight() - r),
            n.offset(l);
        }
      }),
      (Xi.prototype.resize = function () {
        this.editor && this.editor.resize(), this.updateTools();
      }),
      (Xi.prototype.editorUp = function () {
        this.prev();
      }),
      (Xi.prototype.editorDown = function () {
        this.next();
      }),
      (Xi.prototype.updateBackground = function (e) {
        var t = util.luminosity(e) < 0.5;
        this.el.css("background-color", e || ""),
          this.el.toggleClass("darkmode", t);
      }),
      (Xi.prototype.getSelectedNid = function () {
        return this.nid;
      }),
      (Xi.prototype.openTab = function (e) {
        this.editor.openTab(e);
      }),
      (Qi.prototype.isOnTop = function () {
        return (
          widgets.popupEditorStack[widgets.popupEditorStack.length - 1] === this
        );
      }),
      (Qi.prototype.showTools = Xi.prototype.showTools),
      (Qi.prototype.hideTools = Xi.prototype.hideTools),
      (Qi.prototype.updateTools = function () {
        database.adminMode && !this.isClosed && this.isOnTop()
          ? this.showTools()
          : this.hideTools();
      }),
      (Qi.prototype.setNid = function (e) {
        var t = this;
        (this.nid = e),
          database.loadNode(e, function (e, i) {
            i && t.editor.bind(i);
          });
      }),
      (Qi.prototype.keydown = function (e) {
        if (
          !($(e.target).closest(".contenteditable").length > 0) &&
          "textarea" !== e.target.localName &&
          "input" !== e.target.localName
        )
          switch (e.which) {
            case 27:
              this.close(), e.preventDefault();
              break;
            case 38:
              this.options.prev && this.options.prev(), e.preventDefault();
              break;
            case 40:
              this.options.next && this.options.next(), e.preventDefault();
          }
      }),
      (Qi.prototype.close = function () {
        var e = this;
        if (!this.isClosed) {
          (this.isClosed = !0),
            this.hideTools(),
            widgets.popupEditorStack.pop();
          var t = ui.rightWidth;
          ui.fullWidth < 640 && (t = ui.fullWidth),
            (this.el[0].style.transform = this.el[0].style.WebkitTransform =
              "translateX(" + t + "px)"),
            ui.recordNavigation.popController(this.recordController),
            database.off("rename", void 0, this.nodeRenamed, this),
            database.off("remove", void 0, this.nodeRemoved, this),
            database.off("schema", void 0, this.schemaChanged, this),
            database.off("admin", void 0, this.adminChanged, this),
            $.popInputHandler(this),
            setTimeout(function () {
              e.editor && e.editor.destroy(),
                e.$backplane.remove(),
                e.options.close && e.options.close();
            }, 400),
            Zi(),
            Ki();
        }
      }),
      (Qi.prototype.nodeRenamed = function (e, t, i) {
        t === this.nid && this.setNid(i);
      }),
      (Qi.prototype.nodeRemoved = function (e, t) {
        t === this.nid && this.close();
      }),
      (Qi.prototype.schemaChanged = function (e, t, i) {
        this.updateStructure();
      }),
      (Qi.prototype.adminChanged = function (e, t) {
        this.updateStructure();
      }),
      (Qi.prototype.updateStructure = function () {
        var e = this;
        database.typeOf(this.nid) &&
          (this.editor.updateStructure(),
          database.loadNode(this.nid, function (t, i) {
            i ? e.editor.bind(i) : this.close();
          }),
          this.updateTools());
      }),
      (Qi.prototype.remove = function () {
        var e = this;
        return (
          $.dialog({
            closable: !0,
            caption: locale.remove,
            message: locale.confirmRemove,
            buttons: [
              {
                color: "red",
                caption: locale.remove,
                callback: function () {
                  e.close(),
                    database.remove(e.nid, function (e) {
                      if (e) return $.alert(e);
                    });
                },
              },
            ],
          }),
          !1
        );
      }),
      (Qi.prototype.print = function () {
        this.nid &&
          (window.reports
            ? reports.openDesigner({
                nid: this.nid,
                nids:
                  this.options.getSelectedNids &&
                  this.options.getSelectedNids(),
              })
            : Object(re.a)(this.nid));
      }),
      (Qi.prototype.popup = function (e) {
        var t = this,
          i = t.nid,
          o = database.typeOf(i);
        if (o) {
          var a = $.backplane({}),
            n = $(
              '<div class="nx-menu-popup" style="border-radius:4px">'
            ).appendTo(a);
          database.authorizationPrint &&
            $('<div class="nx-menu-item">')
              .append(
                $('<div class="nx-menu-label">').text(locale.print + "...")
              )
              .appendTo(n)
              .click(function () {
                a.close(), t.print();
              }),
            t.options.unlink &&
              $('<div class="nx-menu-item">')
                .append($('<div class="nx-menu-label">').text(locale.unlink))
                .appendTo(n)
                .click(function () {
                  a.close(), t.options.unlink();
                }),
            t.options.duplicate &&
              database.canCreate(o) &&
              $('<div class="nx-menu-item">')
                .append($('<div class="nx-menu-label">').text(locale.duplicate))
                .appendTo(n)
                .click(function () {
                  a.close(), t.options.duplicate(t);
                }),
            database.canDelete(o) &&
              $('<div class="nx-menu-item">')
                .append($('<div class="nx-menu-label">').text(locale.remove))
                .appendTo(n)
                .click(function () {
                  a.close(), t.remove();
                });
          var s = n.outerWidth(),
            r = n.outerHeight(),
            l = $(e.target).offset();
          (l.top += 40),
            l.left + s > window.getWidth() && (l.left = window.getWidth() - s),
            l.top + r > window.getHeight() && (l.top = window.getHeight() - r),
            n.offset(l);
        }
      }),
      (Qi.prototype.updateBackground = function (e) {
        var t = util.luminosity(e) < 0.5;
        this.el.css("background-color", e || ""),
          this.el.toggleClass("darkmode", t);
      }),
      (Qi.prototype.menuNextRecordEnabled = function () {
        return !!this.options.next;
      }),
      (Qi.prototype.menuNextRecord = function () {
        this.options.next && this.options.next();
      }),
      (Qi.prototype.menuPrevRecordEnabled = function () {
        return !!this.options.prev;
      }),
      (Qi.prototype.menuPrevRecord = function () {
        this.options.prev && this.options.prev();
      }),
      (Qi.prototype.menuFirstRecordEnabled = function () {
        return !!this.options.first;
      }),
      (Qi.prototype.menuFirstRecord = function () {
        this.options.first && this.options.first();
      }),
      (Qi.prototype.menuLastRecordEnabled = function () {
        return !!this.options.last;
      }),
      (Qi.prototype.menuLastRecord = function () {
        this.options.last && this.options.last();
      }),
      (Qi.prototype.menuCreateRecordEnabled = function () {
        var e = database.typeOf(this.nid);
        return !!(this.options.create && e && database.canCreate(e));
      }),
      (Qi.prototype.menuCreateRecord = function () {
        this.options.create && this.options.create();
      }),
      (Qi.prototype.menuDuplicateRecordEnabled = function () {
        var e = database.typeOf(this.nid);
        return !!(this.options.duplicate && e && database.canCreate(e));
      }),
      (Qi.prototype.menuDuplicateRecord = function () {
        this.options.duplicate && this.options.duplicate();
      }),
      (Qi.prototype.menuDeleteRecordEnabled = function () {
        var e = database.typeOf(this.nid);
        return !(!e || !database.canDelete(e));
      }),
      (Qi.prototype.menuDeleteRecord = function () {
        this.remove();
      }),
      (Qi.prototype.menuPrintRecordEnabled = function () {
        return !!database.authorizationPrint;
      }),
      (Qi.prototype.menuPrintRecord = function () {
        this.print();
      }),
      (Qi.prototype.menuUnlinkRecordEnabled = function () {
        return !!this.options.unlink;
      }),
      (Qi.prototype.menuUnlinkRecord = function () {
        this.options.unlink && this.options.unlink();
      }),
      (Qi.prototype.menuCloseRecordEnabled = function () {
        return !0;
      }),
      (Qi.prototype.menuCloseRecord = function () {
        this.close();
      }),
      (Qi.prototype.getSelectedNid = function () {
        return this.nid;
      }),
      (Qi.prototype.editorDown = function () {
        this.editor.save(), this.options.next && this.options.next();
      }),
      (Qi.prototype.editorUp = function () {
        this.editor.save(), this.options.prev && this.options.prev();
      });
    class to {
      constructor(e, t, i, o, a) {
        Ie()(this, "isActive", !0),
          Ie()(this, "valueModel", void 0),
          Ie()(this, "valueField", void 0),
          Ie()(this, "functionModel", void 0),
          Ie()(this, "operandModel", void 0),
          Ie()(this, "operandField", void 0),
          Ie()(this, "colorModel", void 0),
          Ie()(this, "colorField", void 0),
          Ie()(this, "backgroundModel", void 0),
          Ie()(this, "backgroundField", void 0),
          Ie()(this, "cellModel", void 0),
          Ie()(this, "cellField", void 0),
          Ie()(this, "iconModel", void 0),
          Ie()(this, "iconField", void 0),
          Ie()(this, "$el", void 0),
          Ie()(this, "$valueFieldContainer", void 0),
          Ie()(this, "tempCol", {}),
          (this.$el = $('<div class="conditional-styling-rule">')
            .data("rule", this)
            .appendTo(o));
        let n = {};
        "number" === a
          ? ((this.valueModel = new b.util.SimpleModel(
              new b.schemas.TNumber(void 0, void 0, {
                caption: Object(_e.a)().value,
                formWidth: 1,
              }),
              i.value || 0
            )),
            (n = {
              "=": { id: "=", caption: "=" },
              "!=": { id: "!=", caption: "!=" },
              "<": { id: "<", caption: "<" },
              "<=": { id: "<=", caption: "<=" },
              ">": { id: ">", caption: ">" },
              ">=": { id: ">=", caption: ">=" },
              "f(x)": { id: "f(x)", caption: "f(x)" },
            }))
          : "string" === a &&
            ((this.valueModel = new b.util.SimpleModel(
              new b.schemas.TString(void 0, void 0, {
                caption: Object(_e.a)().value,
                formWidth: 1,
              }),
              i.value || ""
            )),
            (n = {
              "=": { id: "=", caption: "=" },
              "!=": { id: "!=", caption: "!=" },
              startsWith: {
                id: "startsWith",
                caption: Object(_e.a)().startsWith,
              },
              endsWith: { id: "endsWith", caption: Object(_e.a)().endsWith },
              contains: { id: "contains", caption: Object(_e.a)().op_contains },
              "f(x)": { id: "f(x)", caption: "f(x)" },
            })),
          (this.operandModel = new b.util.SimpleModel(
            new b.schemas.TChoice(void 0, void 0, {
              required: !0,
              values: n,
              caption: Object(_e.a)().operator,
              formWidth: 1,
            }),
            i.operand || "="
          )),
          this.operandModel.on("update", this.onOperandValueChange, this),
          (this.tempCol.expression = i.value),
          (this.functionModel = new b.schemas.ExpressionModel(
            this.tempCol,
            "expression",
            void 0,
            e,
            Object(_e.a)().function
          )),
          (this.functionModel.field.formWidth = 1),
          (this.valueModel.field.formWidth = 1),
          (this.operandField = new ct.a(
            void 0,
            this.operandModel,
            $('<div style="width:80px">').appendTo(this.$el),
            { cls: "conditional-styling-rule-part" }
          )),
          (this.$valueFieldContainer = $('<span style="width: 25%">').appendTo(
            $(
              '<div style="width:120px;flex:1 0 auto;-webkit-flex:1 0 auto">'
            ).appendTo(this.$el)
          )),
          (this.valueField = new ct.a(
            this,
            this.valueModel,
            this.$valueFieldContainer,
            { cls: "conditional-styling-rule-part" }
          )),
          this.onOperandValueChange(),
          (this.colorModel = new b.util.SimpleModel(
            new b.schemas.TColor(void 0, void 0, {
              caption: Object(_e.a)().text,
              formWidth: 1,
            }),
            i.color
          )),
          (this.colorField = new ct.a(
            this,
            this.colorModel,
            $('<div style="width:80px">').appendTo(this.$el),
            { cls: "conditional-styling-rule-part" }
          )),
          (this.backgroundModel = new b.util.SimpleModel(
            new b.schemas.TColor(void 0, void 0, {
              caption: Object(_e.a)().background,
              formWidth: 1,
            }),
            i.background
          )),
          (this.backgroundField = new ct.a(
            this,
            this.backgroundModel,
            $('<div style="width:80px">').appendTo(this.$el),
            { cls: "conditional-styling-rule-part" }
          )),
          (this.cellModel = new b.util.SimpleModel(
            new b.schemas.TColor(void 0, void 0, {
              caption: Object(_e.a)().cellBackground || "Cell",
              formWidth: 1,
            }),
            i.cell
          )),
          (this.cellField = new ct.a(
            this,
            this.cellModel,
            $('<div style="width:80px">').appendTo(this.$el),
            { cls: "conditional-styling-rule-part" }
          )),
          (this.iconModel = new b.util.SimpleModel(
            new b.schemas.TIcon(void 0, void 0, {
              caption: Object(_e.a)().icon,
              formWidth: 1,
            }),
            i.icon
          )),
          (this.iconField = new ct.a(
            this,
            this.iconModel,
            $('<div style="width:80px">').appendTo(this.$el),
            { cls: "conditional-styling-rule-part" }
          ));
        const s = $(
          '<div class="conditional-styling-rule-icon-container">'
        ).appendTo(this.$el);
        $('<div class="i-32-24 i-light-grey i-setting-trash">')
          .click(() => {
            (this.isActive = !1), this.destroy();
          })
          .appendTo(s),
          $('<div class="i-24-24 i-lighter-grey i-drag-handle">').appendTo(s);
      }
      destroy() {
        this.operandField.destroy(),
          this.iconField.destroy(),
          this.backgroundField.destroy(),
          this.colorField.destroy(),
          this.valueField.destroy(),
          this.$el.remove();
      }
      getRule() {
        let e;
        return (
          "f(x)" === this.operandModel.value
            ? this.tempCol.expression && (e = this.tempCol.expression)
            : (e = this.valueModel.value),
          {
            background: this.backgroundModel.value,
            color: this.colorModel.value,
            cell: this.cellModel.value,
            value: e,
            operand: this.operandModel.value,
            icon: this.iconModel.value,
          }
        );
      }
      onOperandValueChange() {
        "f(x)" === this.operandModel.value
          ? this.onFunctionSelect()
          : this.onOutOfFunctionSelect();
      }
      onFunctionSelect() {
        this.valueField.destroy(),
          (this.valueField = new ct.a(
            this,
            this.functionModel,
            this.$valueFieldContainer,
            void 0
          ));
      }
      onOutOfFunctionSelect() {
        this.valueField.destroy(),
          (this.valueField = new ct.a(
            this,
            this.valueModel,
            this.$valueFieldContainer,
            void 0
          ));
      }
    }
    class io {
      constructor(e, t, i, o) {
        Ie()(this, "$popDown", void 0),
          Ie()(this, "col", void 0),
          Ie()(this, "rules", []),
          Ie()(this, "onSave", void 0),
          Ie()(this, "tableType", void 0),
          Ie()(
            this,
            "createRule",
            (e, t) =>
              new to(this.tableType, this.col, e, this.$popDown.$content, t)
          ),
          (this.tableType = e),
          (this.onSave = i),
          (this.col = t);
        const a = this.col.conditionalStyling
          ? this.col.conditionalStyling
          : [];
        this.$popDown = window.$.popdown({
          cls: "xlarge",
          head: Object(_e.a)().conditionalStyling,
          buttons: [
            { caption: Object(_e.a)().cancel, click: () => this.destroy() },
            "-",
            {
              cls: "blue",
              caption: Object(_e.a)().addRule,
              click: () => {
                this.rules.push(this.createRule({}, o));
              },
            },
            " ",
            {
              cls: "blue",
              caption: Object(_e.a)().okay,
              click: () => {
                this.save(), this.destroy();
              },
            },
          ],
        });
        for (const e of a) this.rules.push(this.createRule(e, o));
        this.$popDown.$content.css({
          maxHeight: window.getHeight() / 2 + "px",
          overflowY: "auto",
        }),
          this.$popDown.$content.sortable({ handle: ".i-drag-handle" });
      }
      destroy() {
        for (const e of this.rules) e.destroy();
        this.$popDown.close();
      }
      save() {
        const e = [];
        for (const t of this.$popDown.$content.children()) {
          const i = $(t).data("rule");
          i.isActive && e.push(i.getRule());
        }
        this.onSave(e);
      }
    }
    function oo(e, t, i) {
      if (e) {
        const o = Math.max(t, i) - e.length + 1;
        if (o > 0) for (let t = 0; t < o; t++) e.push(void 0);
        const a = e[t];
        e.splice(t, 1), e.splice(i, 0, a);
      }
    }
    const ao = 40,
      no = 0,
      so = 20;
    function ro(e, t, i) {
      (this.rowHeight = ao),
        (this.headHeight = 40),
        (this.footHeight = 40),
        (this.container = e),
        (this.tab = t),
        (this.field = i),
        (this.visible = !0),
        (this.reverseRenderer = i.reverseRenderer),
        (this.cachedViewConfig = util.getPersistentViewConfig(i.viewConfig)),
        (this.query = this.createQuery()),
        (this.popupEditor = null),
        (this.minRows = 0),
        (this.maxRows = i.height),
        (this.ridxTop = 0),
        (this.scrollTop = 0),
        (this.scrollLeft = 0),
        (this.scrollDoneTimeout = null),
        (this.scrollDoneTime = 0),
        (this.scrollDone = $.proxy(this.scrollDone, this)),
        (this.viewWidth = 0),
        (this.viewRows = []),
        (this.el = $('<div class="component editor editor-list editor-4col">')
          .data("component", this)
          .attr("title", i.tooltip || "")),
        this.updateElementWidth(),
        this.el.appendTo(t.el),
        (this.label = $("<label>")
          .text(i.caption || locale.unnamed)
          .appendTo(this.el)),
        (this.$list = $('<div class="list">')
          .appendTo(this.el)
          .touch($.proxy(this.click, this))
          .on("contextmenu", $.proxy(this.contextmenu, this))),
        (this.$controls = $('<div class="list-controls">').appendTo(this.el)),
        (this.$find = $(
          '<div class="list-button"><div class="i-32-16 i-light-grey i-search"></div><span>' +
            htmlEscape(locale.addRowFind) +
            "</span></div>"
        )
          .appendTo(this.$controls)
          .touch($.proxy(this.addRowFind, this))),
        (this.$create = $(
          '<div class="list-button"><div class="i-32-16 i-light-grey i-plus"></div><span>' +
            htmlEscape(locale.addRowCreate) +
            "</span></div>"
        )
          .appendTo(this.$controls)
          .touch($.proxy(this.addRowCreate, this))),
        (this.$container = $DIV("t-container", this.$list[0])),
        (this.$head = $DIV("t-head", this.$container)),
        (this.$foot = $DIV("t-foot", this.$container)),
        (this.$foot.style.zIndex = 1),
        (this.$body = $DIV("t-body", this.$container)),
        (this.$content = $DIV("t-content", this.$body)),
        (this.$view = $DIV("t-view", this.$content)),
        (this.$headCells = []),
        (this.$footCells = []),
        (this.$scrollbarVContainer = $DIV(
          "t-scrollbar-v-container",
          this.$container
        )),
        (this.$scrollbarV = $DIV("t-scrollbar-v", this.$scrollbarVContainer)),
        (this.$scrollbarHContainer = $DIV(
          "t-scrollbar-h-container",
          this.$container
        )),
        (this.$scrollbarHContainer.style.left = 0),
        (this.$scrollbarHContainer.style.bottom = 0),
        (this.$scrollbarH = $DIV("t-scrollbar-h", this.$scrollbarHContainer)),
        (this.$scrollVIndicator = $DIV(
          "t-scroll-v-indicator",
          this.$container
        )),
        this.registerScrollListeners(),
        this.registerHeadResizeListeners(),
        this.registerHeadDragListeners(),
        this.rebalanceColumns(),
        this.updateTable(),
        this.updateButtons(),
        database.on("rename", void 0, this.nodeRenamed, this);
    }
    Object.assign(ro.prototype, di.a.prototype),
      (ro.prototype.createQuery = function () {
        return new queries.QueryReverse(database, this.field, void 0);
      }),
      (ro.prototype.updateStructure = function () {
        var e = this.field;
        this.el.attr("title", e.tooltip || ""),
          this.updateElementWidth(),
          this.label.text(e.caption || locale.unnamed),
          (this.maxRows = e.height),
          this.queryNeedsUpdate() &&
            ((this.query = this.createQuery()),
            this.rebalanceColumns(),
            this.updateTable()),
          this.reload();
      }),
      (ro.prototype.queryNeedsUpdate = function () {
        return util.viewConfigEquals(
          this.field.viewConfig,
          this.cachedViewConfig
        )
          ? !(!this.query || this.field == this.query.field)
          : ((this.cachedViewConfig = util.getPersistentViewConfig(
              this.field.viewConfig
            )),
            !0);
      }),
      (ro.prototype.destroy = function () {
        database.off("rename", void 0, this.nodeRenamed, this),
          this.el.remove();
      }),
      (ro.prototype.nodeChanged = function () {
        this.updateIsWritable(),
          this.updateVisibility(),
          this.reload(),
          this.updateButtons();
      }),
      (ro.prototype.reload = function () {
        if (this.query) {
          var e = this;
          (e.nid = e.container.nid),
            (e.query.nid = e.container.nid),
            e.query.load(function () {
              e.updateAll();
            });
        }
      }),
      (ro.prototype.updateAll = function () {
        this.updateHeight(),
          this.updateHead(),
          this.updateFoot(),
          this.updateRows(),
          this.updateButtons();
      }),
      (ro.prototype.saveConfigIfAdminMode = function () {
        Object(ki.b)() && this.saveConfig();
      }),
      (ro.prototype.saveConfig = function () {
        this.query &&
          ((this.field.viewConfig = util.getPersistentViewConfig(
            this.query.getConfig()
          )),
          (this.cachedViewConfig = util.clone(this.field.viewConfig)),
          this.field.type.schema.trigger("change"));
      }),
      (ro.prototype.addRowFind = function () {
        if (this.query) {
          var e = this;
          if (!this.isWritable()) return $.alert(locale.errorNotAuthorized);
          if (!database.canWrite(e.field.reference))
            return $.alert(locale.errorNotAuthorized);
          var t = database.canCreate(e.field.refType);
          new co(e.nid, e.field, {
            viewConfig: e.query.getConfig(),
            select: function (t) {
              database.update(
                t,
                e.field.refFieldId,
                database.ridOf(e.nid),
                function (e) {
                  e && $.alert(e);
                }
              );
            },
            create: t
              ? function () {
                  e.addRowCreate();
                }
              : void 0,
          });
        }
      }),
      (ro.prototype.addRowCreate = function () {
        var e = this;
        if (!this.isWritable()) return $.alert(locale.errorNotAuthorized);
        if (!database.canCreate(e.field.refType))
          return $.alert(locale.errorNotAuthorized);
        if (!database.canWrite(e.field.reference))
          return $.alert(locale.errorNotAuthorized);
        var t = {};
        (t[e.field.refFieldId] = database.ridOf(e.nid)),
          database.create(e.field.refType, t, function (t, i) {
            if (t) return $.alert(t);
            e.select(i._id, !0);
          });
      }),
      (ro.prototype.contextmenu = function (e) {
        if (this.query) {
          e.preventDefault();
          var t = $(e.target),
            i = t.closest(".t-head-cell");
          if (i.length) {
            null != (a = i.attr("data-cidx"))
              ? this.popupColumnMenu(parseInt(a), e)
              : this.popupAddColumnMenu(e);
          } else {
            var o = t.closest(".t-foot-cell");
            if (o.length) {
              var a;
              null != (a = o.attr("data-cidx"))
                ? this.popupColumnMenu(parseInt(a), e)
                : this.popupAddColumnMenu(e);
            } else {
              var n = t.closest(".t-row");
              if (n.length) {
                var s = parseInt(n.attr("data-ridx")) + this.ridxTop,
                  r = this.query.rows[s];
                r && (this.query.groups[r] || this.popupRowMenu(r, e));
              }
            }
          }
        }
      }),
      (ro.prototype.popupRowMenu = function (e, t) {
        if (!TOUCH) {
          this.field;
          var i = this.canUnlink(),
            o = this.canRemove();
          if (i || o) {
            var a = this,
              n = $.backplane({}),
              s = $(
                '<div class="nx-menu-popup" style="border-radius:4px">'
              ).appendTo(n);
            o &&
              $('<div class="nx-menu-item">')
                .append(
                  $('<div class="nx-menu-label">').text(locale.removeRecord)
                )
                .appendTo(s)
                .touch(function () {
                  n.close();
                  var t = $.backplane({}),
                    i = $('<div class="nx-alert">').appendTo(t);
                  $('<div class="nx-alert-head">')
                    .text(locale.remove)
                    .appendTo(i),
                    $('<div class="nx-alert-pane">')
                      .text(locale.confirmRemove)
                      .appendTo(i),
                    $('<div class="nx-alert-buttons">')
                      .append($('<div class="nx-hspace-flex">'))
                      .append(
                        $('<div class="nx-button-text grey">')
                          .text(locale.cancel)
                          .touch(function () {
                            t.close();
                          })
                      )
                      .append($('<div class="nx-hspace-small">'))
                      .append(
                        $('<div class="nx-button-text red">')
                          .text(locale.remove)
                          .touch(function () {
                            t.close(),
                              database.remove(e, function (e) {
                                e && $.alert(e);
                              });
                          })
                      )
                      .appendTo(i);
                }),
              i &&
                $('<div class="nx-menu-item">')
                  .append($('<div class="nx-menu-label">').text(locale.unlink))
                  .appendTo(s)
                  .touch(function () {
                    n.close(), a.unlinkFrom(e);
                  });
            var r = s.outerWidth(),
              l = s.outerHeight(),
              c = { left: t.clientX, top: t.clientY };
            return (
              c.left + r > window.getWidth() &&
                (c.left = window.getWidth() - r),
              c.top + l > window.getHeight() &&
                (c.top = window.getHeight() - l),
              s.offset(c),
              !1
            );
          }
        }
      }),
      (ro.prototype.click = function (e) {
        if (this.query) {
          var t = $(e.target),
            i = t.closest(".t-cell-button").attr("data-action");
          if ("find" !== i)
            if ("create" !== i) {
              var o = t.closest(".t-row");
              if (o.length) {
                var a = parseInt(o.attr("data-ridx")) + this.ridxTop,
                  n = this.query.rows[a];
                n &&
                  (this.query.groups[n]
                    ? (this.query.toggleGroup(n),
                      this.updateHeight(),
                      this.updateRows())
                    : this.select(n));
              }
            } else this.addRowCreate();
          else this.addRowFind();
        }
      }),
      (ro.prototype.touchHead = function (e) {
        var t = $(e.target).closest(".t-head-cell");
        if (t.length) {
          var i = t.attr("data-cidx");
          null != i
            ? this.popupColumnMenu(parseInt(i), e)
            : this.popupAddColumnMenu(e);
        }
      }),
      (ro.prototype.select = function (e, t) {
        if (this.query && e !== this.query.nidSelected) {
          var i = this;
          (this.query.nidSelected = e), this.updateRows();
          var o = {};
          this.field.isComposition && (o[this.field.refFieldId] = !0),
            e
              ? this.popupEditor
                ? this.popupEditor.setNid(e)
                : this.field.isComposition
                ? (this.popupEditor = new Qi(e, {
                    hideFields: o,
                    editMode: !0 === t,
                    close: function () {
                      (i.popupEditor = null), i.unselect();
                    },
                    duplicate: function () {
                      i.duplicate();
                    },
                    prev: function () {
                      i.selectPrev();
                    },
                    next: function () {
                      i.selectNext();
                    },
                    getSelectedNids: function () {
                      return i.getSelectedNids();
                    },
                    create: function () {
                      i.addRowCreate();
                    },
                  }))
                : (this.popupEditor = new Qi(e, {
                    hideFields: o,
                    editMode: !0 === t,
                    unlink: function () {
                      i.unlink();
                    },
                    close: function () {
                      (i.popupEditor = null), i.unselect();
                    },
                    duplicate: function (e) {
                      i.duplicate(e);
                    },
                    prev: function () {
                      i.selectPrev();
                    },
                    next: function () {
                      i.selectNext();
                    },
                    getSelectedNids: function () {
                      return i.getSelectedNids();
                    },
                    create: function () {
                      i.addRowCreate();
                    },
                  }))
              : this.popupEditor &&
                (this.popupEditor.close(), (this.popupEditor = null));
        }
      }),
      (ro.prototype.unlink = function () {
        if (this.query) {
          var e = this.query.nidSelected;
          e && (this.unselect(), this.unlinkFrom(e));
        }
      }),
      (ro.prototype.unlinkFrom = function (e) {
        this.canUnlink() &&
          database.update(e, this.field.refFieldId, null, function (e) {
            e && $.alert(e);
          });
      }),
      (ro.prototype.selectPrev = function () {
        if (this.query) {
          var e = this.query.nidSelected;
          if (e) {
            var t = this.query.rows.indexOf(e),
              i =
                t > 0
                  ? this.query.rows[t - 1]
                  : 0 === t
                  ? this.query.rows[this.query.rows.length - 1]
                  : void 0;
            i && this.select(i);
          }
        }
      }),
      (ro.prototype.selectNext = function () {
        if (this.query) {
          var e = this.query.nidSelected;
          if (e) {
            var t = this.query.rows.indexOf(e),
              i =
                t < 0
                  ? void 0
                  : t < this.query.rows.length - 1
                  ? this.query.rows[t + 1]
                  : this.query.rows[0];
            i && this.select(i);
          }
        }
      }),
      (ro.prototype.getSelectedNids = function () {
        if (!this.query) return [];
        for (
          var e = this.query.rows, t = this.query.models, i = [], o = 0;
          o < e.length;
          o++
        ) {
          var a = e[o];
          t[a] && i.push(a);
        }
        return i;
      }),
      (ro.prototype.duplicate = function () {
        if (this.query) {
          var e = this,
            t = e.query.nidSelected;
          t &&
            database.duplicate(t, function (t, i) {
              if (t) return $.alert(t);
              e.select(i, !0);
            });
        }
      }),
      (ro.prototype.unselect = function () {
        this.select(null);
      }),
      (ro.prototype.bind = function (e) {
        if (this.query) {
          e &&
            (this.updateIsWritable(),
            this.updateVisibility(),
            (this.nid = e._id),
            (this.query.nid = e._id),
            this.reload());
        }
      }),
      (ro.prototype.updateTable = function () {
        this.updateHeight(),
          this.createCells(),
          this.updateHead(),
          this.updateFoot(),
          this.updateRows(),
          this.resizeColumns(),
          this.scroll(!0, !1);
      }),
      (ro.prototype.updateHeight = function () {
        var e = this.query ? this.query.rows : [],
          t = this.minRows,
          i = this.maxRows,
          o = this.hasFooter(),
          a = Math.max(t, Math.min(i, e.length)),
          n =
            Math.max(
              0,
              a * (this.rowHeight + no) +
                this.headHeight +
                (o ? this.footHeight : 0)
            ) + 1;
        this.$list.css({ height: n });
      }),
      (ro.prototype.hasFooter = function () {
        if (!this.query) return !1;
        for (var e = this.query.cols, t = !1, i = 0; i < e.length; i++) {
          e[i].agg && (t = !0);
        }
        return t;
      }),
      (ro.prototype.createCells = function () {
        var e = this.$head,
          t = this.$foot,
          i = this.$view,
          o = (this.$body, (this.$headCells = [])),
          a = (this.$footCells = []),
          n = this.query ? this.query.cols : [],
          s = this.maxRows;
        $EMPTY(e), $EMPTY(t), $EMPTY(i);
        for (var r = 0; r < n.length; r++) {
          var l = n[r],
            c = $DIV("t-head-cell", e, { "data-cidx": r });
          $DIV("t-head-resizer", c),
            ($EL("span", c).innerHTML = htmlEscape(
              l.caption || l.expression.caption
            )),
            (o[r] = c);
          var d = $DIV("t-foot-cell t-foot-cell-" + l.field.base, t, {
            "data-cidx": r,
          });
          a[r] = d;
        }
        for (var u = s + so, p = [], h = 0; h < u; h++) {
          var m = $DIV("t-row", i, { "data-ridx": h });
          m.style.top = h * (ao + no) + "px";
          var f = [];
          for (r = 0; r < n.length; r++) {
            l = n[r];
            f[r] = $DIV("t-cell t-cell-" + l.field.base, m);
          }
          var g = { $row: m, $cells: f };
          p.push(g);
        }
        (this.viewRows = p),
          (this.$selectionContainer = $DIV(
            "t-selection-container",
            this.$view
          )),
          (this.$selectionEl1 = $DIV(
            "t-selection t-selection-row",
            this.$selectionContainer
          )),
          this.resizeRows();
      }),
      (ro.prototype.updateRows = function () {
        this._updateRowsId = (this._updateRowsId || 0) + 1;
        const e = this._updateRowsId,
          t = this.query,
          i = this.viewRows,
          o = (t && t.nidSelected, t ? t.models : {}),
          a = t ? t.groups : {},
          n = t ? this.ridxTop : 0,
          s = t ? t.cidxGroup : void 0,
          r = t ? t.rows : [],
          l = t ? t.cols : [];
        let c = 0;
        for (let h = 0; h < i.length; h++) {
          const m = i[h],
            f = m.$row,
            g = h + n,
            v = m.$cells;
          let b = !1,
            y = !1;
          if (g < 0 || g >= r.length)
            for (let e = 0; e < l.length; e++) {
              l[e];
              const t = v[e];
              (t.innerHTML = ""), (t.style.backgroundColor = "");
            }
          else {
            const i = r[g],
              n = a[i] || o[i];
            if (n) {
              const o = n.values;
              (b = !1), (y = !!a[i]), y ? (c = 0) : c++;
              for (let a = 0; a < l.length; a++) {
                const n = l[a],
                  r = v[a];
                if (n.isReadable) {
                  const l = o[a],
                    c = r.innerHTML;
                  let u = "",
                    p = "",
                    h = !1;
                  if (y && n.agg && a !== s) {
                    const e = n.aggType.format(l);
                    null != e && (u = tables.aggTypeToSymbol(n.agg, e));
                  } else {
                    const o = n.field,
                      a = o.base;
                    if ("choice" === a) {
                      const e = o.getValues()[l];
                      e &&
                        (u += `\n                                            <div \n                                                class="multicombo-item" \n                                                style="${
                          e.color
                            ? "background-color:" +
                              e.color +
                              ";color:" +
                              e.textColor
                            : ""
                        }"\n                                            >\n                                                ${
                          e.icon
                            ? `<div class="choice-symbol ic ic-${e.icon}"></div>`
                            : ""
                        }\n                                                <span>${htmlEscape(
                          e.caption || ""
                        )}</span>\n                                            </div>`);
                    } else if ("dchoice" === a)
                      (h = !0),
                        o.loadValue(i, l, (t) => {
                          if (e === this._updateRowsId)
                            if (t) {
                              const e = `\n                                                <div \n                                                    class="multicombo-item" \n                                                    style="${
                                t.color
                                  ? "background-color:" +
                                    t.color +
                                    ";color:" +
                                    util.contrastingTextColorTo(t.color)
                                  : ""
                              }"\n                                                >\n                                                    ${
                                t.icon
                                  ? `<div class="choice-symbol ic ic-${t.icon}"></div>`
                                  : ""
                              }\n                                                    <span>${htmlEscape(
                                t.caption || ""
                              )}</span>\n                                                </div>`;
                              (r.innerHTML = e), (r.style.background = "");
                            } else
                              (r.innerHTML = ""), (r.style.background = "");
                        });
                    else if ("multi" === a) {
                      const e = util.multiDecode(l);
                      if (e) {
                        const t = o.getValues();
                        e.sort(function (e, i) {
                          const o = t[e],
                            a = t[i];
                          return o ? (a ? o.order - a.order : -1) : 0;
                        });
                        for (var d = 0; d < e.length; d++) {
                          const i = t[e[d]];
                          i &&
                            (u += `\n                                            <div \n                                                class="multicombo-item" \n                                                style="${
                              i.color
                                ? "background-color:" +
                                  i.color +
                                  ";color:" +
                                  i.textColor
                                : ""
                            }"\n                                            >\n                                                ${
                              i.icon
                                ? `<div class="choice-symbol ic ic-${i.icon}"></div>`
                                : ""
                            }\n                                                <span>${htmlEscape(
                              i.caption || ""
                            )}</span>\n                                            </div>`);
                        }
                      }
                    } else if ("dmulti" === a) {
                      const t = util.multiDecode(l);
                      t &&
                        ((h = !0),
                        o.loadValues(i, (i, o) => {
                          if (e === this._updateRowsId) {
                            o = o || {};
                            let e = "";
                            t.sort(function (e, t) {
                              const i = o[e],
                                a = o[t];
                              return i ? (a ? i.order - a.order : -1) : 0;
                            });
                            for (let i = 0; i < t.length; i++) {
                              const a = o[t[i]];
                              a &&
                                (e += `\n                                                    <div \n                                                        class="multicombo-item" \n                                                        style="${
                                  a.color
                                    ? "background-color:" +
                                      a.color +
                                      ";color:" +
                                      util.contrastingTextColorTo(a.color)
                                    : ""
                                }"\n                                                    >\n                                                        ${
                                  a.icon
                                    ? `<div class="choice-symbol ic ic-${a.icon}"></div>`
                                    : ""
                                }\n                                                        <span>${htmlEscape(
                                  a.caption || ""
                                )}</span>\n                                                    </div>`);
                            }
                            (r.innerHTML = e), (r.style.background = "");
                          }
                        }));
                    } else if ("color" === a)
                      l &&
                        (u += `<div\n                                        class="t-cell-content-colored" \n                                        style="background-color:${l}"></div>`);
                    else if ("icon" === a)
                      l &&
                        (u =
                          '<div class="choice-symbol ic ic-' + l + '"></div>');
                    else if (
                      ("number" === a || "string" === a) &&
                      null != n.conditionalStyling &&
                      n.conditionalStyling.length > 0
                    ) {
                      let e = !1;
                      for (
                        let a = 0;
                        a < n.conditionalStyling.length && !e;
                        a++
                      ) {
                        const s = n.conditionalStyling[a];
                        switch (s.operand) {
                          case "=":
                            l === s.value && (e = !0);
                            break;
                          case ">":
                            l > s.value && (e = !0);
                            break;
                          case ">=":
                            l >= s.value && (e = !0);
                            break;
                          case "<":
                            l < s.value && (e = !0);
                            break;
                          case "<=":
                            l <= s.value && (e = !0);
                            break;
                          case "!=":
                            null != l && l !== s.value && (e = !0);
                            break;
                          case "startsWith":
                            null != l &&
                              String(l).startsWith(s.value) &&
                              (e = !0);
                            break;
                          case "endsWith":
                            null != l &&
                              String(l).endsWith(s.value) &&
                              (e = !0);
                            break;
                          case "contains":
                            null != l &&
                              String(l).includes(s.value) &&
                              (e = !0);
                            break;
                          case "f(x)": {
                            const o = database.loadNodeSync(i),
                              a = queries.parseSystem(
                                database.schema,
                                t.type,
                                s.value,
                                {}
                              );
                            if (o && a) {
                              a.evaluateSync(database, o) && (e = !0);
                            }
                            break;
                          }
                        }
                        e &&
                          ((u = `\n                                            <div \n                                                class="multicombo-item" \n                                                style="${
                            "background-color:" +
                              (s.background || "") +
                              ";color:" +
                              s.color || !1
                          }"\n                                            >\n                                                ${
                            s.icon
                              ? `<div class="choice-symbol ic ic-${s.icon}"></div>`
                              : ""
                          }\n                                                <span>${htmlEscape(
                            o.format(l)
                          )}</span>\n                                            </div>`),
                          (p = s.cell || ""));
                      }
                      e || (u = htmlEscape(o.format(l)));
                    } else if ("styled" === a)
                      l &&
                        (u += `<div \n                                        class="multicombo-item" \n                                        style="${
                          l.background
                            ? `background-color:${l.background};`
                            : ""
                        }${
                          l.color ? `color:${l.color};` : ""
                        }"\n                                    >\n                                        ${
                          l.icon
                            ? `<div class="choice-symbol ic ic-${l.icon}"></div>`
                            : ""
                        }\n                                        <span>${htmlEscape(
                          l.text || ""
                        )}</span>\n                                    </div>`);
                    else if ("file" === o.base) {
                      if (l) {
                        const e = database.thumbURL1(l);
                        e && (u = '<img style="height:40px" src="' + e + '">');
                      }
                    } else {
                      const e = o.format(l);
                      u = htmlEscape(e);
                    }
                  }
                  h ||
                    (c !== u && (r.innerHTML = u),
                    (r.style.backgroundColor = p));
                } else
                  (r.innerHTML = ""), (r.style.backgroundColor = "#f7f7f7");
              }
            }
          }
          var u = null == s && (h + n) % 2 == 0,
            p =
              "t-row" +
              (g < 0 || g >= r.length
                ? " empty"
                : (b ? " choosen" : y ? " group" : "") +
                  (u ? " t-row-2nd" : " t-row-1st"));
          p !== f.className && (f.className = p);
        }
        this.updateSelection();
      }),
      (ro.prototype.rebalanceColumns = function (e) {
        if (this.query) {
          var t = this.query.cols;
          if (!(t.length < 2)) {
            var i = this.el.width() - 1;
            console.log("Rebalance", i);
            for (var o = 0, a = 0, n = 0; n < t.length; n++) {
              var s = t[n];
              n !== e && (o += s.width), (a += s.width);
            }
            if (o <= i) {
              var r = 0;
              for (n = 0; n < t.length - 1; n++) {
                ((s = t[n]).width = Math.floor((s.width * i) / a)),
                  (r += s.width);
              }
              t[t.length - 1].width = i - r;
            }
          }
        }
      }),
      (ro.prototype.resizeColumns = function () {
        for (
          var e = this.viewRows,
            t = this.query ? this.query.cols : [],
            i = this.$headCells,
            o = this.$footCells,
            a = 0,
            n = 0;
          n < t.length;
          n++
        ) {
          a += (d = t[n]).width;
        }
        if (t.length > 0) {
          var s = this.el.width() - 1,
            r = t[t.length - 1];
          (a < s || (a - r.width < s && r.width + s - a >= 50)) &&
            (r.width += s - a);
        }
        for (var l = 0; l < e.length; l++) {
          var c = e[l];
          a = 0;
          for (n = 0; n < t.length; n++) {
            var d = t[n];
            (c.$cells[n].style.left = a + "px"),
              (c.$cells[n].style.width = d.width + "px"),
              (a += d.width);
          }
        }
        a = 0;
        for (n = 0; n < t.length; n++) {
          d = t[n];
          (i[n].style.left = a + "px"),
            (i[n].style.width = d.width + "px"),
            (o[n].style.left = a + "px"),
            (o[n].style.width = d.width + "px"),
            (a += d.width);
        }
        (this.viewWidth = a),
          (this.$head.style.width = a + "px"),
          (this.$foot.style.width = a + "px");
      }),
      (ro.prototype.updateHead = function () {
        for (
          var e = this.query,
            t = e ? e.cols : [],
            i = e ? e.cidxGroup : void 0,
            o = e ? e.cidxSort : 0,
            a = !!e && !0 === e.sortDescending,
            n = this.$headCells,
            s = 0;
          s < t.length;
          s++
        ) {
          var r = t[s],
            l = n[s],
            c = s === i,
            d = s === o,
            u = !!r.filter,
            p =
              '<div class="t-head-resizer"></div><span>' +
              htmlEscape(r.caption || r.expression.caption) +
              "</span>" +
              (u
                ? '<div class="i-40-16 i-light-grey i-setting-filter" style="width: 12px;"></div>'
                : "") +
              (c
                ? '<div class="i-40-18 i-light-grey i-table-group" style="width: 24px"></div>'
                : d
                ? a
                  ? '<div class="i-40-12 i-light-grey i-line-down-thick" style="width: 12px"></div>'
                  : '<div class="i-40-12 i-light-grey i-line-up-thick" style="width: 12px"></div>'
                : "");
          l.innerHTML = p;
        }
      }),
      (ro.prototype.updateFoot = function () {
        for (
          var e = this.query ? this.query.cols : [],
            t = this.query ? this.query.foot.values : [],
            i = this.$footCells,
            o = this.hasFooter(),
            a = 0;
          a < e.length;
          a++
        ) {
          var n = e[a];
          if (n.isReadable)
            if (n.agg) {
              n.aggType.base;
              var s = n.aggType.format(t[a]);
              null == s && (s = ""),
                (i[a].innerHTML = tables.aggTypeToSymbol(n.agg, s));
            } else i[a].innerHTML = "";
          else i[a].innerHTML = "";
        }
        o
          ? ((this.$body.style.bottom = "40px"),
            (this.$foot.style.display = ""))
          : ((this.$body.style.bottom = "0"),
            (this.$foot.style.display = "none"));
      }),
      (ro.prototype.scrollTo = function (e, t) {
        (this.scrollTop = t), (this.scrollLeft = e), this.scroll(!1, !0);
      }),
      (ro.prototype.scroll = function (e, t) {
        var i = this.scrollTop,
          o = this.scrollLeft,
          a = Math.floor(i / (ao + no)),
          n = this.ridxTop;
        a > this.ridxTop + so - 1
          ? (n = a)
          : a < this.ridxTop && (n = a - so + 1),
          (n !== this.ridxTop || e) && ((this.ridxTop = n), this.updateRows());
        var s = i % (ao + no);
        s < 0 && (s += ao + no);
        var r = -(s + (a - n) * (ao + no)),
          l = -o;
        l !== this.viewX &&
          ((this.$head.style.transform = this.$head.style.WebkitTransform =
            "translate3d(" + l + "px,0px,0px)"),
          (this.$foot.style.transform = this.$foot.style.WebkitTransform =
            "translate3d(" + l + "px,0px,0px)"),
          (this.viewX = l)),
          (this.$view.style.transform = this.$view.style.WebkitTransform =
            "translate3d(" + l + "px," + r + "px,0px)"),
          this.updateScrollbar(t);
      }),
      (ro.prototype.registerScrollListeners = function () {
        TOUCH
          ? (this.registerScrollTouchListeners(),
            this.registerScrollbarVTouchListeners())
          : (this.registerScrollMouseListeners(),
            this.registerScrollbarVMouseListeners(),
            this.registerScrollbarHMouseListeners());
      }),
      (ro.prototype.registerScrollMouseListeners = function () {
        var e = this;
        function t(t) {
          if (e.query) {
            var i = e.hasFooter(),
              o = Math.max(
                0,
                e.query.rows.length * (ao + no) -
                  1 -
                  e.$list.height() +
                  (i ? 2 * (ao + no) : ao + no)
              ),
              a = OSX_10_9_MODE
                ? -t.wheelDeltaY
                : t.deltaY *
                  (1 == t.deltaMode
                    ? ao + no
                    : 2 == t.deltaMode
                    ? window.getHeight()
                    : 1),
              n = OSX_10_9_MODE ? t.wheelDeltaX : -t.deltaX;
            Math.abs(n) > Math.abs(a) ? (a = 0) : (n = 0);
            var s = e.scrollTop,
              r = Math.min(Math.max(s + a, 0), o),
              l = Math.min(
                Math.max(0, e.scrollLeft - n),
                Math.max(0, e.viewWidth - 1 - e.$list.width())
              );
            return e.scrollTo(l, r), t.preventDefault(), !1;
          }
        }
        OSX_10_9_MODE
          ? e.$body.addEventListener("mousewheel", t)
          : e.$body.addEventListener("wheel", t);
      }),
      (ro.prototype.registerScrollTouchListeners = function () {
        var e,
          t = this,
          i = 0,
          o = 0,
          a = 0,
          n = 0,
          s = 0,
          r = 0,
          l = 0,
          c = null,
          d = !1,
          u = 500,
          p = u * u,
          h = u / 60,
          m = !0;
        function f() {
          if (t.query && d) {
            var e = t.scrollTop,
              i = t.scrollLeft,
              o = Math.max(
                0,
                t.query.rows.length * (ao + no) -
                  t.$list.height() +
                  (m ? 2 * (ao + no) : ao + no)
              );
            if (e < 0) {
              var a = e - (10 * e * h) / u;
              Math.abs(a) < 0.1 && (a = 0),
                t.scrollTo(i, a),
                requestAnimationFrame(f);
            } else if (0 === e) d = !1;
            else if (e > o) {
              a = e - (10 * (e - o) * h) / u;
              Math.abs(a - o) < 0.1 && (a = o),
                t.scrollTo(i, a),
                requestAnimationFrame(f);
            } else if (e === o) d = !1;
            else if (l >= u) d = !1;
            else {
              var n = 1 - (l * l) / p;
              if (!isNaN(n)) {
                var c = n * s,
                  g = n * r,
                  v = Math.min(
                    Math.max(0, i - c),
                    Math.max(0, t.viewWidth - 1 - t.$list.width())
                  );
                a = e - g;
                t.scrollTo(v, a);
              }
              (l += h), requestAnimationFrame(f);
            }
          }
        }
        t.$body.addEventListener("touchstart", function (s) {
          return (
            (d = !1),
            (i = a = s.touches[0].clientX),
            (o = n = s.touches[0].clientY),
            (e = new Date().getTime()),
            (c = null),
            (m = t.hasFooter()),
            s.preventDefault(),
            !1
          );
        }),
          t.$body.addEventListener("touchmove", function (e) {
            d = !1;
            var i = e.touches[0].clientX,
              o = e.touches[0].clientY,
              s = i - a,
              r = o - n;
            c ||
              (s * s + r * r > 9 &&
                (c = Math.abs(s) > Math.abs(r) ? "H" : "V")),
              "H" === c ? (r = 0) : (s = 0);
            var l = Math.min(
                Math.max(0, t.scrollLeft - s),
                Math.max(0, t.viewWidth - 1 - t.$list.width())
              ),
              u = t.scrollTop - r;
            return t.scrollTo(l, u), (a = i), (n = o), e.preventDefault(), !1;
          }),
          t.$body.addEventListener("touchend", function (u) {
            if (c) {
              var p = new Date().getTime() - e;
              return (
                (s = "H" === c ? ((a - i) * h) / p : 0),
                (r = "V" === c ? (t.scrollTop < 0 ? 0 : ((n - o) * h) / p) : 0),
                (l = 0),
                (d = !0),
                requestAnimationFrame(f),
                u.preventDefault(),
                !1
              );
            }
            return t.click(u);
          });
      }),
      (ro.prototype.popupColumnMenu = function (e) {
        if (!this.query) return;
        var t = this,
          i = this.query,
          o = i.cols[e];
        if (!o) return;
        var a = e === i.cidxSort && !i.sortDescending,
          n = e === i.cidxSort && i.sortDescending,
          s = e === i.cidxGroup,
          r = $.backplane({});
        const l =
          "number" === o.expression.returnType.base
            ? "number"
            : "string" === o.expression.returnType.base
            ? "string"
            : null;
        var c = $('<div class="nx-menu-popup grey column-menu">').appendTo(r),
          d = $(
            '<div class="column-menu-section" style="display:flex;display:-webkit-flex;flex-direction:row;-webkit-flex-direction:row">'
          ).appendTo(c),
          u = $(
            '<div style="flex-grow:1;-webkit-flex-grow:1;width:48px">'
          ).appendTo(d),
          p =
            ($(
              '<div style="width:32px;padding:8px"><div class="type-symbol type-symbol-white type-symbol-fn" style="border-radius:4px;background-color:#007AEB"></div></div>'
            )
              .appendTo(d)
              .click(function () {
                new Vt.a({
                  schema: i.type.schema,
                  type: i.type,
                  variables: {},
                  supportsCommands: !1,
                  value: o.expression.toString(),
                  okay: function (o, a) {
                    r.close(),
                      a &&
                        (i.setExpression(e, a),
                        t.reload(),
                        t.saveConfigIfAdminMode());
                  },
                  cancel: function () {},
                });
              }),
            $('<div class="component editor" style="width:100%">').appendTo(u)),
          h = $('<input type="text">')
            .val(o.caption)
            .attr("placeholder", o.expression.caption)
            .appendTo($('<div class="stringeditor">').appendTo(p))
            .change(function () {
              (o.caption = h.val() || void 0),
                r.close(),
                t.updateTable(),
                t.saveConfigIfAdminMode();
            }),
          m = $('<div class="column-menu-section">').appendTo(c),
          f = $('<div class="editor" style="width:100%">').appendTo(m),
          g = tables.createFilterEditor(
            {
              updateFilter: function (e) {
                e && r.close(),
                  (o.filter = g.getFilter()),
                  t.reload(),
                  t.saveConfigIfAdminMode();
              },
            },
            f,
            o.field,
            o.filter
          ),
          v = $('<div class="column-menu-section">').appendTo(c),
          b = $('<div class="editor" style="width:100%">').appendTo(v),
          y = $('<div class="switch table-popup-sorting">').appendTo(b);
        $('<div class="switch-item' + (a ? " selected" : "") + '">')
          .append(
            $(
              '<div class="icon i-32-12 i-light-grey i-line-up-thick inline-block inline-block">'
            )
          )
          .append($("<span>").text(locale.sortAscending))
          .appendTo(y)
          .click(function () {
            r.close(),
              i.sort(e, !1),
              t.updateTable(),
              t.saveConfigIfAdminMode();
          }),
          $('<div class="switch-item' + (n ? " selected" : "") + '">')
            .append(
              $(
                '<div class="icon i-32-12 i-light-grey i-line-down-thick inline-block">'
              )
            )
            .append($("<span>").text(locale.sortDescending))
            .appendTo(y)
            .click(function () {
              r.close(),
                i.sort(e, !0),
                t.updateTable(),
                t.saveConfigIfAdminMode();
            }),
          $('<div class="switch-item' + (s ? " selected" : "") + '">')
            .append($('<div class="icon i-32-16 i-light-grey i-table-group">'))
            .append($("<span>").text(locale.grouped))
            .appendTo(y)
            .click(function () {
              r.close(),
                s
                  ? (i.ungroup(), t.updateTable())
                  : (i.group(e), t.updateTable()),
                t.saveConfigIfAdminMode();
            });
        var w = o.field.aggregations;
        if (w && w.length) {
          var x = $('<div class="column-menu-section">').appendTo(c),
            T = $('<div class="editor" style="width:100%">').appendTo(x),
            C = $('<div class="switch">').appendTo(T);
          Q.each(w, function (a) {
            $(
              '<div class="switch-item' +
                (a === o.agg ? " selected" : "") +
                '">'
            )
              .text(locale.agg[a])
              .appendTo(C)
              .click(function () {
                r.close(),
                  a !== o.agg
                    ? i.setAggregation(e, a)
                    : i.setAggregation(e, void 0),
                  t.updateTable(),
                  t.saveConfigIfAdminMode();
              });
          });
        }
        null !== l &&
          $('<div class="buttons">')
            .appendTo(c)
            .append(
              `<div class="root-help-link">${locale.conditionalStyling}...</div>`
            )
            .touch(function () {
              r.close(),
                new io(
                  i.type,
                  o,
                  function (e) {
                    (o.conditionalStyling = e),
                      t.updateTable(),
                      t.saveConfigIfAdminMode();
                  },
                  l
                );
            });
        var k = $('<div class="buttons">').appendTo(c);
        $('<div class="nx-button-text grey">')
          .text(locale.hideColumn)
          .appendTo(k)
          .click(function () {
            r.close(),
              i.removeColumn(e),
              t.updateTable(),
              t.saveConfigIfAdminMode();
          }),
          $('<div class="nx-hspace-flex">').appendTo(k),
          $('<div class="nx-button-text blue">')
            .text(locale.showColumn + "...")
            .appendTo(k)
            .click(function () {
              r.close(), t.popupAddColumnMenu(e);
            });
        var S = c.outerWidth(),
          _ = c.outerHeight(),
          E = $(this.$headCells[e]).offset();
        (E.left -= 8),
          (E.top += ao),
          E.left + S > window.getWidth() && (E.left = window.getWidth() - S),
          E.top + _ > window.getHeight() && (E.top = window.getHeight() - _),
          c.offset(E);
      }),
      (ro.prototype.popupAddColumnMenu = function (e, t) {
        if (this.query) {
          var i = this.$headCells[e]
            ? $(this.$headCells[e]).offset()
            : this.$list.offset();
          i.top += ao;
          var o = this,
            a = this.query,
            n = [];
          t || (t = [{ type: a.type, path: "", multiple: !1 }]),
            t.length > 1
              ? n.push({
                  icon: "i-32-24 i-light-grey i-arrow-solid-left",
                  caption: locale.back,
                  click: y,
                })
              : n.push({
                  icon: "i-light-grey i-32-24 i-field-fn",
                  caption: locale.function,
                  click: v,
                });
          var s = {};
          if (this.query.cols)
            for (var r = 0; r < this.query.cols.length; r++) {
              var l = this.query.cols[r].expression;
              l && (s[l.toString()] = !0);
            }
          var c = t[0].type,
            d = t[0].path,
            u = t[0].multiple;
          s[d + "_id"] ||
            n.push({
              icon: "i-32-24 i-light-grey i-field-number",
              caption: locale.id,
              field: c.field_id,
              click: f,
            });
          for (var p = c.sorted, h = 0; h < p.length; h++) {
            var m = p[h];
            (m.isField || m.isReverse || m.isReference) &&
              (s[d + m.id] ||
                n.push({
                  icon: "i-light-grey i-32-24 i-field-" + m.base,
                  caption: m.caption,
                  field: m,
                  click: f,
                }));
          }
          new eo({ offset: i, head: { caption: locale.showColumn }, items: n });
        }
        function f() {
          var n = this.field;
          if (n.isReference) {
            var s = [
              { type: n.refType, path: d + n.id + ".", multiple: u },
            ].concat(t);
            o.popupAddColumnMenu(e, s);
          } else if (n.isReverse) {
            s = [
              { type: n.refType, path: d + n.id + ".", multiple: !0 },
            ].concat(t);
            o.popupAddColumnMenu(e, s);
          } else if (n.isField)
            if (u) {
              for (
                var r = [
                    {
                      icon: "i-32-24 i-light-grey i-arrow-solid-left",
                      caption: locale.back,
                      click: b,
                    },
                  ],
                  l = n.aggregations,
                  c = 0;
                c < l.length;
                c++
              ) {
                var p = l[c];
                r.push({
                  caption: locale.agg[p] + "(" + n.caption + ")",
                  field: n,
                  agg: p,
                  click: g,
                });
              }
              new eo({
                offset: i,
                head: { caption: locale.showColumn },
                items: r,
              });
            } else
              a.addColumn(e + 1, { expression: d + n.id }, function () {
                o.rebalanceColumns(e + 1),
                  o.updateTable(),
                  o.saveConfigIfAdminMode();
              });
        }
        function g() {
          var t = this.agg,
            i = this.field;
          a.addColumn(
            e + 1,
            { expression: t + "(" + d + i.id + ")" },
            function () {
              o.rebalanceColumns(e + 1),
                o.updateTable(),
                o.saveConfigIfAdminMode();
            }
          );
        }
        function v() {
          new Vt.a({
            schema: a.type.schema,
            type: a.type,
            variables: {},
            supportsCommands: !1,
            value: "",
            okay: function (t, i) {
              i &&
                a.addColumn(e + 1, { expression: i.toString() }, function () {
                  o.rebalanceColumns(e + 1),
                    o.updateTable(),
                    o.saveConfigIfAdminMode();
                });
            },
            cancel: function () {},
          });
        }
        function b() {
          o.popupAddColumnMenu(e, t);
        }
        function y() {
          var i = t.slice(1);
          o.popupAddColumnMenu(e, i);
        }
      }),
      (ro.prototype.isHeightAdjustable = function () {
        return !0;
      }),
      (ro.prototype.setHeight = function (e) {
        var t = Math.max(
          1,
          Math.round(
            (e - this.headHeight - this.footHeight) / (this.rowHeight + no)
          )
        );
        (this.field.height = t), (this.maxRows = t), this.updateTable();
      }),
      (ro.prototype.setWidth = function (e, t) {
        di.a.prototype.setWidth.call(this, e, t), this.resizeColumns();
      }),
      (ro.prototype.resize = function () {
        this.resizeColumns();
      }),
      (ro.prototype.canUnlink = function () {
        var e = this.field;
        return (
          !e.isComposition &&
          this.isWritable() &&
          database.canWrite(e.reference)
        );
      }),
      (ro.prototype.canRemove = function () {
        var e = this.field;
        return this.isWritable() && database.canDelete(e.refType);
      }),
      (ro.prototype.startEditCaption = Si.prototype.startEditCaption),
      (ro.prototype.registerRowResizeListeners = function () {
        var e = this;
        function t(t) {
          const i = "touchstart" === t.type;
          if (!i || 1 === t.touches.length) {
            var o = t.target;
            if ($(o).is(".t-rowhead-resizer")) {
              var a = i ? t.touches[0].clientY : t.clientY,
                n = e.rowHeight,
                s = e.scrollTop;
              i
                ? (EVENT_target(t).addEventListener(EVENT_touchend, l, !1),
                  EVENT_target(t).addEventListener(EVENT_touchmove, r, !1))
                : (window.addEventListener("mouseup", l, !1),
                  window.addEventListener("mousemove", r, !1)),
                t.preventDefault(),
                t.stopPropagation();
            }
          }
          function r(t) {
            if (!i || 1 === t.touches.length) {
              var o = (i ? t.touches[0].clientY : t.clientY) - a;
              n < 40
                ? n + o > 40 && (o = Math.max(40 - n, o - 24))
                : n + o < 40 && (o = Math.min(40 - n, o + 24));
              var r = Math.min(120, Math.max(28, Math.round(n + o))),
                l = r - n;
              (e.rowHeight = r),
                (e.scrollTop = s + (s / n) * l),
                e.resizeRows(),
                e.updateSelection(),
                e.updateRows(),
                t.preventDefault();
            }
          }
          function l(t) {
            (i && 0 !== t.touches.length) ||
              (i
                ? (EVENT_target(t).removeEventListener(EVENT_touchend, l, !1),
                  EVENT_target(t).removeEventListener(EVENT_touchmove, r, !1))
                : (window.removeEventListener("mousemove", r, !1),
                  window.removeEventListener("mouseup", l, !1)),
              t.preventDefault(),
              e.saveTableRowHeight(e.rowHeight));
          }
        }
        this.$view.addEventListener(
          TOUCH ? EVENT_touchstart : "mousedown",
          t,
          !1
        );
      }),
      (ro.prototype.resizeRows = function () {
        for (var e = this.viewRows, t = 0; t < e.length; t++) {
          var i = e[t];
          (i.$row.style.top = t * (this.rowHeight + no) + "px"),
            (i.$row.style.height = this.rowHeight + "px");
          for (
            var o = i.$cells,
              a = this.query ? this.query.cols : [],
              n =
                this.rowHeight < 40
                  ? Math.floor((this.rowHeight - 18) / 2) + "px"
                  : "",
              s = 0;
            s < a.length;
            s++
          )
            o[s].style.paddingTop = n;
        }
        this.$view.className =
          this.rowHeight <= "40" ? "t-view" : "t-view t-view-resized-rows";
      }),
      (ro.prototype.registerHeadResizeListeners = function () {
        var e = this;
        function t(t) {
          if (e.query && (!TOUCH || 1 === t.touches.length)) {
            var o = t.target;
            if ("t-head-resizer" === o.className) {
              var a = o.parentNode.getAttribute("data-cidx");
              if (a) {
                a = parseInt(a);
                var n = e.query.cols[a];
                if (n) {
                  var s = n.width,
                    r = TOUCH ? t.touches[0].clientX : t.clientX,
                    l = TOUCH ? t.touches[0].clientY : t.clientY,
                    c = !1;
                  return (
                    TOUCH
                      ? (EVENT_target(t).addEventListener(
                          EVENT_touchmove,
                          d,
                          !1
                        ),
                        EVENT_target(t).addEventListener(EVENT_touchend, u, !1))
                      : (document.addEventListener("mousemove", d, !1),
                        document.addEventListener("mouseup", u, !1)),
                    i(t),
                    !1
                  );
                }
              }
            }
          }
          function d(t) {
            if (!TOUCH || 1 === t.touches.length) {
              var o = TOUCH ? t.touches[0].clientX : t.clientX,
                a = TOUCH ? t.touches[0].clientY : t.clientY,
                d = o - r,
                u = a - l,
                p = Math.abs(d) > Math.abs(u) ? d : u;
              if ((Math.abs(p) > 1 && (c = !0), c)) {
                c = !0;
                var h = Math.max(32, s + p);
                (n.width = h), e.resizeColumns();
              }
              return i(t), !1;
            }
          }
          function u(t) {
            if (!TOUCH || 0 === t.touches.length)
              return (
                TOUCH
                  ? (EVENT_target(t).removeEventListener(
                      EVENT_touchmove,
                      d,
                      !1
                    ),
                    EVENT_target(t).removeEventListener(EVENT_touchend, u, !1))
                  : (document.removeEventListener("mousemove", d, !1),
                    document.removeEventListener("mouseup", u, !1)),
                c ? e.saveConfigIfAdminMode() : e.touchHead(t),
                i(t),
                !1
              );
          }
        }
        function i(e) {
          e.preventDefault(), e.stopPropagation();
        }
        TOUCH
          ? e.$head.addEventListener(EVENT_touchstart, t, !1)
          : e.$head.addEventListener("mousedown", t, !1);
      }),
      (ro.prototype.registerHeadDragListeners = function () {
        var e = this;
        function t(t) {
          if (e.query && (!TOUCH || 1 === t.touches.length)) {
            var i = t.target;
            if ("t-head-resizer" !== i.className) {
              for (; i && "t-head-cell" !== i.className; ) i = i.parentNode;
              if (i) {
                var o = i.getAttribute("data-cidx");
                if (o) {
                  o = parseInt(o);
                  var a = e.query.cols;
                  if (a[o]) {
                    for (
                      var n = e.$headCells,
                        s = e.$footCells,
                        r = n[o],
                        l = s[o],
                        c = e.$container.getBoundingClientRect(),
                        d = 0,
                        u = 0;
                      u < o;
                      u++
                    )
                      d += a[u].width;
                    var p = TOUCH ? t.touches[0].clientX : t.clientX,
                      h = (e.scrollLeft, !1),
                      m = o,
                      f = [];
                    b(),
                      TOUCH
                        ? (EVENT_target(t).addEventListener(
                            EVENT_touchmove,
                            g,
                            !0
                          ),
                          EVENT_target(t).addEventListener(
                            EVENT_touchend,
                            v,
                            !0
                          ))
                        : (window.addEventListener("mousemove", g, !0),
                          window.addEventListener("mouseup", v, !0)),
                      t.preventDefault(),
                      t.stopPropagation();
                  }
                }
              }
            }
          }
          function g(t) {
            if (!TOUCH || 1 === t.touches.length) {
              var i = TOUCH ? t.touches[0].clientX : t.clientX,
                n = i - p;
              if (Math.abs(n) > 3) {
                (h = !0),
                  (r.style.zIndex = "1"),
                  (r.style.backgroundColor = "rgba(200,200,200,.5)"),
                  (l.style.zIndex = "1"),
                  (l.style.backgroundColor = "rgba(200,200,200,.5)");
                for (var s = e.viewRows, u = 0; u < s.length; u++) {
                  s[u].$cells[o].style.zIndex = 1;
                }
              }
              if (h) {
                var g = d + n + "px";
                (r.style.left = g), (l.style.left = g);
                for (s = e.viewRows, u = 0; u < s.length; u++)
                  s[u].$cells[o].style.left = g;
                for (var v = c.left, y = 0; y < f.length; y++) {
                  var w = a[f[y]],
                    x = v - e.scrollLeft,
                    T = x + w.width / 3,
                    C = x + (2 * w.width) / 3,
                    k = x + w.width;
                  if (y !== m) {
                    if (x <= i && T > i) {
                      (m = y), b();
                      break;
                    }
                    if (C < i && k >= i) {
                      (m = y + 1), b();
                      break;
                    }
                  }
                  v += w.width;
                }
              }
              t.preventDefault(), t.stopPropagation();
            }
          }
          function v(t) {
            if (!TOUCH || 0 === t.touches.length) {
              if (
                (TOUCH
                  ? (EVENT_target(t).removeEventListener(
                      EVENT_touchmove,
                      g,
                      !0
                    ),
                    EVENT_target(t).removeEventListener(EVENT_touchend, v, !0))
                  : (window.removeEventListener("mousemove", g, !0),
                    window.removeEventListener("mouseup", v, !0)),
                h)
              ) {
                (r.style.zIndex = ""),
                  (r.style.backgroundColor = ""),
                  (l.style.zIndex = ""),
                  (l.style.backgroundColor = "");
                for (var i = e.viewRows, n = 0; n < i.length; n++) {
                  i[n].$cells[o].style.zIndex = "";
                }
                if (o === m) e.resizeColumns();
                else {
                  var s = void 0 !== e.cidxSort ? a[e.cidxSort] : void 0,
                    c = void 0 !== e.cidxSort ? a[e.cidxGroup] : void 0;
                  oo(a, o, m),
                    s && (e.cidxSort = a.indexOf(s)),
                    c && (e.cidxGroup = a.indexOf(c));
                  var d = e.query.models,
                    u = e.query.groups;
                  for (var p in d) {
                    if (d.hasOwnProperty(p)) oo(d[p].values, o, m);
                  }
                  for (var f in u) {
                    if (u.hasOwnProperty(f)) oo(u[f].values, o, m);
                  }
                  oo(e.query.foot.values, o, m),
                    e.createCells(),
                    e.resizeColumns(),
                    e.updateHead(),
                    e.updateRows(),
                    e.updateFoot(),
                    e.saveConfigIfAdminMode();
                }
              } else e.touchHead(t);
              t.preventDefault(), t.stopPropagation();
            }
          }
          function b() {
            f = [];
            for (var t = 0; t < a.length; t++) f[t] = t;
            f.splice(o, 1), f.splice(m, 0, o);
            for (var i = 0, r = e.viewRows, l = 0; l < r.length; l++) {
              var c = r[l];
              i = 0;
              for (t = 0; t < f.length; t++) {
                var d = a[f[t]].width;
                if (t !== m) c.$cells[f[t]].style.left = i + "px";
                i += d;
              }
            }
            i = 0;
            for (t = 0; t < f.length; t++) {
              d = a[f[t]].width;
              if (t !== m)
                (n[f[t]].style.left = i + "px"),
                  (s[f[t]].style.left = i + "px");
              i += d;
            }
          }
        }
        TOUCH
          ? e.$head.addEventListener(EVENT_touchstart, t, !1)
          : e.$head.addEventListener("mousedown", t, !1);
      }),
      (ro.prototype.updateScrollbar = function (e) {
        if (this.query) {
          var t = this.query.rows.length,
            i = this.scrollTop,
            o = this.scrollLeft,
            a = this.hasFooter(),
            n = this.containerHeight() - (a ? 2 * (ao + no) : ao + no),
            s = Math.max(n, (ao + no) * t),
            r = this.viewWidth - 1,
            l = this.$container.clientWidth,
            c = s - 1 > n,
            d = r > l,
            u = n - 4,
            p = l - (c ? 16 : 0),
            h = Math.max(36, Math.round((u * n) / s)),
            m =
              Math.max(
                0,
                Math.min(u - h, Math.round((i / (s - n)) * (u - h)))
              ) + 2,
            f = Math.max(36, Math.min(p, Math.round(p * (l / r)))),
            g =
              Math.max(
                0,
                Math.min(p - f, Math.round((o / (r - l)) * (p - f)))
              ) + 2,
            v = this.$scrollbarV;
          (v.style.top = m + "px"), (v.style.height = h + "px");
          var b = this.$scrollbarH;
          d
            ? ((this.$scrollbarHContainer.style.display = ""),
              (b.style.left = g + "px"),
              (b.style.width = f + "px"))
            : (this.$scrollbarHContainer.style.display = "none"),
            e &&
              ((this.scrollDoneTime = Date.now() + 1e3),
              this.scrollDoneTimeout ||
                (c && (v.className = "t-scrollbar-v scrolling"),
                d && (b.className = "t-scrollbar-h scrolling"),
                (this.scrollDoneTimeout = setTimeout(this.scrollDone, 1e3)))),
            (this.$scrollVIndicator.style.opacity = 0 != i ? 1 : 0);
        }
      }),
      (ro.prototype.scrollDone = function () {
        var e = Date.now(),
          t = this.scrollDoneTime - e;
        t < 100
          ? ((this.$scrollbarV.className = "t-scrollbar-v"),
            (this.$scrollbarH.className = "t-scrollbar-h"),
            (this.scrollDoneTimeout = null))
          : (this.scrollDoneTimeout = setTimeout(this.scrollDone, t));
      }),
      (ro.prototype.containerHeight = function () {
        return this.$list.height() + 2;
      }),
      (ro.prototype.registerScrollbarVMouseListeners = function () {
        var e = this;
        function t(t) {
          if (e.query) {
            t.target;
            var i = t.clientY,
              o = e.scrollTop,
              a = e.query.rows.length,
              n = e.hasFooter(),
              s = e.containerHeight() - (n ? 2 * (ao + no) : ao + no),
              r = s - 4,
              l = Math.max(s, (ao + no) * a - 1),
              c = l / r;
            window.addEventListener("mouseup", u, !1),
              window.addEventListener("mousemove", d, !1),
              t.preventDefault();
          }
          function d(t) {
            var a = t.clientY - i;
            e.scrollTo(
              e.scrollLeft,
              Math.max(0, Math.min(l - s, Math.round(o + c * a)))
            ),
              t.preventDefault();
          }
          function u(e) {
            window.removeEventListener("mousemove", d, !1),
              window.removeEventListener("mouseup", u, !1),
              e.preventDefault();
          }
        }
        this.$scrollbarV.addEventListener("mousedown", t, !1);
      }),
      (ro.prototype.registerScrollbarVTouchListeners = function () {
        var e = this;
        function t(t) {
          if (e.query && 1 === t.touches.length) {
            var i = t.touches[0].clientY,
              o = e.scrollTop,
              a = e.query.rows.length,
              n = e.hasFooter(),
              s = e.containerHeight() - (n ? 2 * (ao + no) : ao + no),
              r = s - 4,
              l = Math.max(s, (ao + no) * a - 1),
              c = l / r;
            EVENT_target(t).addEventListener(EVENT_touchmove, d, !1),
              EVENT_target(t).addEventListener(EVENT_touchend, u, !1);
          }
          function d(t) {
            if (1 === t.touches.length) {
              var a = t.touches[0].clientY - i;
              e.scrollTo(
                e.scrollLeft,
                Math.max(0, Math.min(l - s, Math.round(o + c * a)))
              ),
                t.preventDefault();
            }
          }
          function u(e) {
            0 === e.touches.length &&
              (EVENT_target(e).removeEventListener(EVENT_touchmove, d, !1),
              EVENT_target(e).removeEventListener(EVENT_touchend, u, !1),
              e.preventDefault());
          }
        }
        this.$scrollbarV.addEventListener(EVENT_touchstart, t, !1);
      }),
      (ro.prototype.registerScrollbarHMouseListeners = function () {
        var e = this;
        function t(t) {
          t.target;
          var i = t.clientX,
            o = e.scrollLeft,
            a = e.$container.clientWidth,
            n = a - 4,
            s = e.viewWidth - 1,
            r = s / n;
          function l(t) {
            var n = t.clientX - i;
            e.scrollTo(
              Math.max(0, Math.min(s - a, Math.round(o + r * n))),
              e.scrollTop
            ),
              t.preventDefault();
          }
          function c(e) {
            window.removeEventListener("mousemove", l, !1),
              window.removeEventListener("mouseup", c, !1),
              e.preventDefault();
          }
          window.addEventListener("mouseup", c, !1),
            window.addEventListener("mousemove", l, !1),
            t.preventDefault();
        }
        this.$scrollbarH.addEventListener("mousedown", t, !1);
      }),
      (ro.prototype.nodeRenamed = function (e, t, i) {
        var o = this;
        o.query &&
          o.query.nodeRenamed(e, t, i, function () {
            o.updateAll();
          });
      }),
      (ro.prototype.rowY = function (e, t) {
        return ((e < t ? e : t) - this.ridxTop) * this.rowHeight;
      }),
      (ro.prototype.rowH = function (e, t) {
        return (Math.abs(t - e) + 1) * this.rowHeight;
      }),
      (ro.prototype.updateSelection = function () {
        var e = 1,
          t = this.query;
        if (!t) return this.hideSelection();
        var i = t.rows;
        if (!t.nidSelected) return this.hideSelection();
        var o = i.indexOf(t.nidSelected);
        if (-1 === o) return this.hideSelection();
        this.$selectionContainer.style.display = "";
        var a = this.rowY(o, o),
          n = this.rowH(o, o) - 1,
          s = this.viewWidth - 2,
          r = this.$selectionEl1;
        (r.style.left = e + "px"),
          (r.style.top = a + "px"),
          (r.style.width = s - e + "px"),
          (r.style.height = n + "px");
      }),
      (ro.prototype.hideSelection = function () {
        this.$selectionContainer.style.display = "none";
      }),
      (ro.prototype.updateButtons = function () {
        var e = this.field,
          t = this.container,
          i = !1,
          o = !1;
        this.isWritable() &&
          database.canWrite(e.reference) &&
          ((i =
            database.canCreate(e.refType) &&
            (!e.refType.master || e.refType.master === t.type)),
          (o = !e.isComposition)),
          this.$find && this.$find.css("display", o ? "" : "none"),
          this.$create && this.$create.css("display", i ? "" : "none"),
          this.$controls && this.$controls.css("display", o || i ? "" : "none");
      });
    const lo = 40;
    function co(e, t, i) {
      (this.rowHeight = lo), (this.headHeight = 40), (this.footHeight = 40);
      var o = this;
      this.resize = $.proxy(this.resize, this);
      var a = null,
        n = null,
        s = 0;
      (this.nid = e),
        (this.field = t),
        (this.options = i),
        (this.viewIsDirty = !1),
        (this.query = new queries.Query(
          database,
          Object.assign({}, i.viewConfig || t.viewConfig, {
            type: t.refTypeId,
            choosen: {},
          })
        )),
        (this.$backplane = $.backplane({ close: $.proxy(this.closed, this) }));
      var r = (this.$popup = $('<div class="popupeditor pane">')
          .css({ left: 32, top: 32, right: 32, bottom: 32 })
          .appendTo(this.$backplane)),
        l = $(
          '<div style="display:flex;display:-webkit-flex;position:absolute;left:16px;top:16px;right:16px">'
        ).appendTo(r),
        c = $(
          '<div class="editor editor-string" style="flex:1 1 auto;-webkit-flex:1 1 auto;padding:0 8px 0 0">'
        ).appendTo(l);
      function d(e) {
        switch (e.which) {
          case 27:
            return o.close(), !1;
        }
      }
      function u() {
        n && clearTimeout(n), (n = setTimeout(p, 200));
      }
      function p(e) {
        n = null;
        var t = o.$search.val().trim();
        (e || t !== a) && ((a = t), h(++s, t));
      }
      async function h(e, t) {
        var i = o.nid,
          a = o.field,
          n = o.query,
          r = n.deps,
          l = a.isReverse || !1,
          c = n.getWhereExpression(),
          d = l ? a.reference.constraintExp : a.constraintExp;
        if (database.find) {
          var u = null;
          d &&
            (u = l
              ? d.resolve({
                  a: new queries.This(a.refType),
                  b: new queries.Record(
                    a.type,
                    new queries.Const(schemas.ridOf(i), schemas.tnumber)
                  ),
                })
              : d.resolve({
                  a: new queries.Record(
                    a.type,
                    new queries.Const(schemas.ridOf(i), schemas.tnumber)
                  ),
                  b: new queries.This(a.refType),
                }));
          var p = c
            ? d
              ? "select " +
                a.refTypeId +
                " where (" +
                c.toString() +
                ") and (" +
                u.toString() +
                ")"
              : "select " + a.refTypeId + " where (" + c.toString() + ")"
            : d
            ? "select " + a.refTypeId + " where (" + u.toString() + ")"
            : "select " + a.refTypeId;
          database.find(p, t, g);
        } else {
          var h = c ? c.getSyncJS() : void 0;
          if (d) {
            var m = d.getSyncJS(),
              f = database.loadNodeSync(i);
            g(
              void 0,
              f
                ? l
                  ? await database.selectFindSyncJS(
                      a.refTypeId,
                      function (e) {
                        return (
                          (!h || h(h.ctx, database, e)) &&
                          m(m.ctx, database, void 0, { a: e, b: f })
                        );
                      },
                      t,
                      0
                    )
                  : await database.selectFindSyncJS(
                      a.refTypeId,
                      function (e) {
                        return (
                          (!h || h(h.ctx, database, e)) &&
                          m(m.ctx, database, void 0, { a: f, b: e })
                        );
                      },
                      t,
                      0
                    )
                : []
            );
          } else
            g(
              void 0,
              h
                ? await database.selectFindSyncJS(
                    a.refTypeId,
                    function (e) {
                      return h(h.ctx, database, e);
                    },
                    t,
                    0
                  )
                : await database.selectFindSyncJS(a.refTypeId, void 0, t, 0)
            );
        }
        function g(t, i) {
          e === s &&
            database.loadNodes2(i, r, function () {
              if (e === s) {
                if (t) return v(t);
                if (l) {
                  for (var o = a.refFieldId, n = [], r = 0; r < i.length; r++) {
                    var c = i[r],
                      d = database.loadNodeSync(c);
                    if (d) d[o] || n.push(c);
                  }
                  v(void 0, n);
                } else v(void 0, i);
              }
            });
        }
        function v(t, i) {
          e === s &&
            (t && $.alert(t),
            n.loadNids(i || [], function () {
              o.updateHeight(), o.updateHead(), o.updateFoot(), o.updateRows();
            }));
        }
      }
      (this.$search = $(
        '<input type="text" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false">'
      )
        .attr(
          "placeholder",
          locale.refFinderSearchCaption +
            " " +
            (t.refType.caption || t.refType.id)
        )
        .appendTo($('<div class="stringeditor">').appendTo(c))
        .keydown(d)
        .keyup(u)
        .change(u)),
        i.create &&
          ($(
            '<div class="nx-button-text blue" style="flex:0 0 auto;-webkit-flex:0 0 auto">'
          )
            .text(locale.createRecord)
            .appendTo(l)
            .touch(function () {
              o.close(), i.create();
            }),
          $('<div class="nx-hspace-small">').appendTo(l)),
        $(
          '<div class="nx-button-text grey" style="flex:0 0 auto;-webkit-flex:0 0 auto">'
        )
          .text(locale.cancel)
          .appendTo(l)
          .touch($.proxy(this.close, this)),
        (this.el = this.$list =
          $('<div class="list">')
            .appendTo(
              $(
                '<div class="editor editor-rev" style="position:absolute;top:56px;left:8px;right:8px;bottom:8px">'
              ).appendTo(r)
            )
            .touch($.proxy(this.click, this))),
        (this.$container = $DIV("t-container", this.$list[0])),
        (this.$head = $DIV("t-head", this.$container)),
        (this.$foot = $DIV("t-foot", this.$container)),
        (this.$body = $DIV("t-body", this.$container)),
        (this.$content = $DIV("t-content", this.$body)),
        (this.$view = $DIV("t-view hoverable", this.$content)),
        (this.$headCells = []),
        (this.$footCells = []),
        (this.$scrollbarVContainer = $DIV(
          "t-scrollbar-v-container",
          this.$container
        )),
        (this.$scrollbarV = $DIV("t-scrollbar-v", this.$scrollbarVContainer)),
        (this.$scrollbarHContainer = $DIV(
          "t-scrollbar-h-container",
          this.$container
        )),
        (this.$scrollbarHContainer.style.left = 0),
        (this.$scrollbarHContainer.style.bottom = 0),
        (this.$scrollbarH = $DIV("t-scrollbar-h", this.$scrollbarHContainer)),
        (this.$scrollVIndicator = $DIV(
          "t-scroll-v-indicator",
          this.$container
        )),
        (this.ridxTop = 0),
        (this.scrollTop = 0),
        (this.scrollLeft = 0),
        (this.scrollDoneTimeout = null),
        (this.scrollDoneTime = 0),
        (this.scrollDone = $.proxy(this.scrollDone, this)),
        (this.viewWidth = 0),
        (this.viewRows = []),
        (this.minRows = this.maxRows =
          Math.max(
            1,
            Math.floor((window.getHeight() - 144) / 40) -
              (this.hasFooter() ? 2 : 1)
          )),
        this.registerScrollListeners(),
        this.registerHeadResizeListeners(),
        this.registerHeadDragListeners(),
        this.updateTable(),
        window.addEventListener("resize", this.resize),
        database.on("rename", void 0, this.nodeRenamed, this),
        this.$search.focus(),
        (this.reload = function () {
          n && clearTimeout(n), p(!0);
        }),
        u();
    }
    (co.prototype.click = function (e) {
      var t = $(e.target),
        i = t.closest(".t-foot-cell");
      if (i.length) {
        var o = i.attr("data-cidx");
        null != o
          ? this.popupColumnMenu(parseInt(o), e)
          : this.popupAddColumnMenu(e);
      } else {
        var a = t.closest(".t-row");
        if (a.length) {
          var n = parseInt(a.attr("data-ridx")) + this.ridxTop,
            s = this.query.rows[n];
          s &&
            (this.query.groups[s]
              ? (this.query.toggleGroup(s),
                this.updateHeight(),
                this.updateRows())
              : (this.options.select && this.options.select(s), this.close()));
        }
      }
    }),
      (co.prototype.touchHead = ro.prototype.touchHead),
      (co.prototype.closed = function () {
        this.viewIsDirty &&
          this.options.saveViewConfig &&
          this.options.saveViewConfig(this.query.getConfig()),
          database.off("rename", void 0, this.nodeRenamed, this),
          window.removeEventListener("resize", this.resize);
      }),
      (co.prototype.close = function () {
        this.$backplane.close();
      }),
      (co.prototype.add = function () {}),
      (co.prototype.resize = function () {
        this.updateTable();
      }),
      (co.prototype.registerHeadResizeListeners =
        ro.prototype.registerHeadResizeListeners),
      (co.prototype.registerHeadDragListeners =
        ro.prototype.registerHeadDragListeners),
      (co.prototype.updateAll = ro.prototype.updateAll),
      (co.prototype.updateTable = ro.prototype.updateTable),
      (co.prototype.createCells = ro.prototype.createCells),
      (co.prototype.tableHeadDropped = ro.prototype.tableHeadDropped),
      (co.prototype.rebalanceColumns = ro.prototype.rebalanceColumns),
      (co.prototype.resizeColumns = ro.prototype.resizeColumns),
      (co.prototype.columnResizeDrag = ro.prototype.columnResizeDrag),
      (co.prototype.updateHeight = function () {
        (this.minRows = this.maxRows =
          Math.max(
            1,
            Math.floor((window.getHeight() - 144) / 40) -
              (this.hasFooter() ? 2 : 1)
          )),
          ro.prototype.updateHeight.call(this);
      }),
      (co.prototype.updateRows = ro.prototype.updateRows),
      (co.prototype.updateHead = ro.prototype.updateHead),
      (co.prototype.updateFoot = ro.prototype.updateFoot),
      (co.prototype.scroll = ro.prototype.scroll),
      (co.prototype.scrollTo = ro.prototype.scrollTo),
      (co.prototype.registerScrollListeners =
        ro.prototype.registerScrollListeners),
      (co.prototype.registerScrollMouseListeners =
        ro.prototype.registerScrollMouseListeners),
      (co.prototype.registerScrollTouchListeners =
        ro.prototype.registerScrollTouchListeners),
      (co.prototype.popupColumnMenu = ro.prototype.popupColumnMenu),
      (co.prototype.popupAddColumnMenu = ro.prototype.popupAddColumnMenu),
      (co.prototype.saveConfigIfAdminMode = function () {
        this.viewIsDirty = !0;
      }),
      (co.prototype.hasFooter = ro.prototype.hasFooter),
      (co.prototype.updateScrollbar = ro.prototype.updateScrollbar),
      (co.prototype.scrollDone = ro.prototype.scrollDone),
      (co.prototype.containerHeight = ro.prototype.containerHeight),
      (co.prototype.registerScrollbarVMouseListeners =
        ro.prototype.registerScrollbarVMouseListeners),
      (co.prototype.registerScrollbarVTouchListeners =
        ro.prototype.registerScrollbarVTouchListeners),
      (co.prototype.registerScrollbarHMouseListeners =
        ro.prototype.registerScrollbarHMouseListeners),
      (co.prototype.nodeRenamed = ro.prototype.nodeRenamed),
      (co.prototype.isWritable = ro.prototype.isWritable),
      (co.prototype.updateSelection = ro.prototype.updateSelection),
      (co.prototype.hideSelection = ro.prototype.hideSelection),
      (co.prototype.resizeRows = ro.prototype.resizeRows);
    var uo = o("./src/js/widgets/editors/ChoiceEditor.js");
    class po {
      constructor(e) {
        Ie()(this, "reference", void 0),
          Ie()(this, "editor", void 0),
          (this.reference = e),
          (this.editor = new uo.a(
            {
              el: this.reference.el,
              setError: (e) => this.reference.setError(e),
              editorUp: () => this.reference.container.editorUp(),
              editorDown: () => this.reference.container.editorDown(),
              getNid: () => this.reference.getNid(),
              focus: () => this.reference.focus(),
              focusNext: () => this.reference.focusNext(),
              focusPrev: () => this.reference.focusPrev(),
            },
            {
              field: this.reference.field,
              onUpdate: () => {},
              offUpdate: () => {},
              getValue: (e) => e(void 0, this.reference.value),
              setValue: (e, t) => this.reference.update(e, t),
              isWritable: () => this.reference.isWritable(),
            }
          ));
      }
      destroy() {
        this.editor.destroy();
      }
      nodeChanged() {
        this.editor.load(!1);
      }
      updateButtons() {}
      updateStructure() {
        this.editor.updateStructure(), this.editor.load(!0);
      }
      resize() {
        this.editor.resizeAux();
      }
      focus() {
        this.editor.focus();
      }
      startEdit() {
        this.editor.startEdit();
      }
      stopEdit() {
        this.editor.stopEdit();
      }
    }
    class ho {
      constructor(e) {
        Ie()(this, "reference", void 0),
          Ie()(this, "subDocument", void 0),
          Ie()(this, "$subDocument", void 0),
          Ie()(this, "$search", void 0),
          Ie()(this, "$create", void 0),
          Ie()(this, "$find", void 0),
          Ie()(this, "$unlink", void 0);
        const t = Object(_e.a)();
        (this.reference = e),
          (this.$create = $(
            '<div class="stringeditor-button2"><div class="i-32-18 i-light-grey i-setting-add"></div></div>'
          )
            .attr("title", t.addRowCreate)
            .click(() => (this.reference.create(), !1))),
          (this.$find = $(
            '<div class="stringeditor-button"><div class="button i-32-18 i-light-grey i-search"></div></div>'
          )
            .attr("title", t.addRowFind)
            .click(() => (this.reference.find(), !1))),
          (this.$search = $('<div class="stringeditor">')
            .append('<div class="input-text text-selectable">')
            .append(this.$create)
            .append(this.$find)
            .appendTo(this.reference.el)
            .click(() => this.reference.find())),
          (this.$subDocument = $(
            '<div class="subdocument" style="display:none">'
          ).appendTo(this.reference.el));
        const i = $('<div class="subdocument-head">').appendTo(
            this.$subDocument
          ),
          o = $('<div class="subdocument-tabs">').appendTo(i);
        this.$unlink = $(
          '<div class="subdocument-unlink i-light-grey i-18 i-unlink">'
        )
          .attr("title", t.unlink)
          .click(() => (this.reference.unlink(), !1))
          .appendTo(i);
        const a = $('<div class="subdocument-container">').appendTo(
          this.$subDocument
        );
        this.subDocument = new Wi(
          {
            containerEl: a,
            tabsEl: o,
            isEmbedded: !0,
            updateBackground: () => {},
          },
          this.reference.field.refTypeId,
          {},
          void 0
        );
      }
      destroy() {
        this.subDocument.destroy(),
          this.$subDocument.remove(),
          this.$search.remove();
      }
      nodeChanged() {
        const e = this.reference.getRef();
        e
          ? window.database.loadNode(e, (e, t) => {
              this.updateSubDocument(t);
            })
          : this.updateSubDocument(void 0);
      }
      updateButtons() {
        const e = this.reference.getRef();
        let t = !1,
          i = !1,
          o = !1;
        this.reference.isWritable() &&
          ((t =
            !e &&
            window.database.canCreate(this.reference.field.refType) &&
            !this.reference.field.refType.master),
          (o = !!e && !this.reference.field.cascade),
          (i = !e)),
          this.$create && (this.$create[0].style.display = t ? "" : "none"),
          this.$find && (this.$find[0].style.display = i ? "" : "none"),
          this.$unlink && (this.$unlink[0].style.display = o ? "" : "none");
      }
      updateStructure() {
        this.subDocument && this.subDocument.updateStructure();
      }
      resize() {
        this.subDocument.resize();
      }
      updateSubDocument(e) {
        e
          ? (this.$search.css("display", "none"),
            this.$subDocument.css("display", ""),
            this.subDocument.bind(e))
          : (this.$search.css("display", ""),
            this.$subDocument.css("display", "none"),
            this.subDocument.bind(null));
      }
    }
    class mo {
      constructor(e) {
        Ie()(this, "reference", void 0),
          Ie()(this, "content", void 0),
          Ie()(this, "text", void 0),
          Ie()(this, "$create", void 0),
          Ie()(this, "$find", void 0),
          Ie()(this, "$unlink", void 0);
        const t = Object(_e.a)();
        (this.reference = e),
          (this.content = $('<div class="stringeditor">')
            .appendTo(this.reference.el)
            .click(() => (this.reference.open(), !1))),
          (this.text = $('<div class="input-text text-selectable">').appendTo(
            this.content
          )),
          (this.$create = $(
            '<div class="stringeditor-button2"><div class="i-32-18 i-light-grey i-setting-add"></div></div>'
          )
            .attr("title", t.addRowCreate)
            .click(() => (this.reference.create(), !1))
            .appendTo(this.content)),
          (this.$find = $(
            '<div class="stringeditor-button"><div class="button i-32-18 i-light-grey i-search"></div></div>'
          )
            .attr("title", t.addRowFind)
            .click(() => (this.reference.find(), !1))
            .appendTo(this.content)),
          (this.$unlink = $(
            '<div class="stringeditor-button"><div class="button i-32-18 i-light-grey i-unlink"></div></div>'
          )
            .attr("title", t.unlink)
            .click(() => (this.reference.unlink(), !1))
            .appendTo(this.content));
      }
      destroy() {
        this.content.remove();
      }
      nodeChanged() {
        this.reference.formatReference((e) => {
          this.text[0].innerText = e;
        });
      }
      updateButtons() {
        const e = this.reference.isWritable(),
          t = this.reference.getRef();
        let i = !1,
          o = !1,
          a = !1;
        e &&
          ((i =
            !t &&
            window.database.canCreate(this.reference.field.refType) &&
            !this.reference.field.refType.master),
          (a = !!t && !this.reference.field.cascade),
          (o = !t)),
          this.$create && (this.$create[0].style.display = i ? "" : "none"),
          this.$find && (this.$find[0].style.display = o ? "" : "none"),
          this.$unlink && (this.$unlink[0].style.display = a ? "" : "none");
      }
      updateStructure() {}
      resize() {}
    }
    function fo(e) {
      const { values: t, isSelected: i, setSelected: o } = e;
      return s.createElement(
        "div",
        { className: "choiceradio" },
        t.map((e) =>
          s.createElement(go, {
            key: e.id,
            value: e,
            isSelected: i(e.id),
            onClick: (t) => {
              o(e.id, !i(e.id));
            },
          })
        )
      );
    }
    function go(e) {
      const { isSelected: t, value: i, onClick: o } = e;
      return s.createElement(
        "div",
        {
          onClick: o,
          className: "choiceradio-item" + (t ? " selected" : ""),
          style: {
            backgroundColor: t && i.color ? i.color : "",
            color: e.isSelected ? e.value.textColor : "",
          },
        },
        s.createElement(
          "div",
          { className: "choiceradio-item-radio-container" },
          s.createElement("div", { className: "choiceradio-item-radio" })
        ),
        i.icon
          ? s.createElement("div", {
              className: "choice-symbol ic ic-" + i.icon,
            })
          : null,
        s.createElement(
          "div",
          {
            className: "choiceradio-item-text",
            style: { color: (t && i.textColor) || "" },
          },
          i.caption
        )
      );
    }
    class vo {
      constructor(e) {
        Ie()(this, "reference", void 0),
          Ie()(this, "el", void 0),
          Ie()(this, "isDestroyed", !1),
          Ie()(this, "isReady", !1),
          Ie()(this, "query", void 0),
          (this.reference = e),
          (this.el = document.createElement("div")),
          this.reference.el[0].appendChild(this.el);
      }
      destroy() {
        var e;
        this.isDestroyed ||
          ((this.isDestroyed = !0),
          n.a.unmountComponentAtNode(this.el),
          null === (e = this.el.parentElement) ||
            void 0 === e ||
            e.removeChild(this.el));
      }
      nodeChanged() {
        this.isDestroyed || this.load();
      }
      updateButtons() {}
      updateStructure() {}
      resize() {}
      load() {
        (this.isReady = !1),
          this.query && (this.query.destroy(), (this.query = void 0)),
          this.reference.field.viewConfig &&
            (this.reference.field.viewConfig.type =
              this.reference.field.refTypeId),
          (this.query = new b.QueryReference(
            window.database,
            this.reference.field,
            this.reference.container.nid
          )),
          this.query.load(() => {
            this.isDestroyed || this.updateDOM(this.el), (this.isReady = !0);
          });
      }
      getValues() {
        const e = this.query;
        if (!e) return [];
        window.database, this.reference.field;
        let t = 0;
        return e.rows.slice(0, 100).map((i) => {
          const o = e.models[i];
          let a, n, s;
          const r = [];
          if (o)
            for (let t = 0; t < e.cols.length; t++) {
              const i = e.cols[t].expression.returnType;
              "icon" === i.base
                ? (a = o.values[t])
                : "color" === i.base
                ? ((n = o.values[t]),
                  (s = n ? b.util.contrastingTextColorTo(n) : void 0))
                : r.push(i.format(o.values[t]));
            }
          return (
            t++,
            {
              id: i,
              caption: r.join(" "),
              color: n,
              textColor: s,
              icon: a,
              order: t,
            }
          );
        });
      }
      getValue() {
        return this.reference.getRef();
      }
      setValue(e) {
        this.isReady &&
          ((null === e && this.reference.field.required) ||
            this.reference.update(e ? window.database.ridOf(e) : null));
      }
    }
    class bo extends vo {
      constructor(e) {
        super(e);
      }
      updateDOM(e) {
        n.a.render(
          s.createElement(fo, {
            values: this.getValues(),
            isSelected: (e) => e === this.getValue(),
            setSelected: (e, t) => this.setValue(t ? e : null),
          }),
          e
        );
      }
    }
    function yo(e) {
      const { values: t, isSelected: i, setSelected: o } = e;
      return s.createElement(
        "div",
        { className: "choiceswitch" },
        t.map((e) =>
          s.createElement(wo, {
            key: e.id,
            value: e,
            isSelected: i(e.id),
            onClick: (t) => {
              o(e.id, !i(e.id));
            },
          })
        )
      );
    }
    function wo(e) {
      const { isSelected: t, value: i, onClick: o } = e;
      return s.createElement(
        "div",
        {
          onClick: o,
          className: "choiceswitch-item" + (t ? " selected" : ""),
          style: {
            backgroundColor: t && i.color ? i.color : "",
            color: e.isSelected ? e.value.textColor : "",
          },
        },
        i.icon
          ? s.createElement("div", {
              className: "choice-symbol ic ic-" + i.icon,
            })
          : null,
        s.createElement("span", null, i.caption)
      );
    }
    class xo extends vo {
      constructor(e) {
        super(e);
      }
      updateDOM(e) {
        n.a.render(
          s.createElement(yo, {
            values: this.getValues(),
            isSelected: (e) => e === this.getValue(),
            setSelected: (e, t) => this.setValue(t ? e : null),
          }),
          e
        );
      }
    }
    class To extends di.a {
      constructor(e, t, i) {
        super(),
          Ie()(this, "container", void 0),
          Ie()(this, "field", void 0),
          Ie()(this, "visible", void 0),
          Ie()(this, "value", void 0),
          Ie()(this, "error", void 0),
          Ie()(this, "editor", void 0),
          Ie()(this, "el", void 0),
          Ie()(this, "label", void 0),
          Ie()(this, "renderer", void 0),
          Ie()(this, "currentLoadingId", 0),
          (this.container = e),
          (this.field = i),
          (this.visible = !0),
          (this.value = void 0),
          (this.error = null),
          (this.editor = void 0),
          (this.el = $('<div class="component">')
            .appendTo(t.el)
            .data("component", this)
            .attr("title", i.tooltip || "")
            .addClass(Object(ki.d)(i))),
          this.updateElementWidth(),
          "left" === i.labelPosition && this.el.addClass("label-left"),
          (this.label = $("<label>")
            .text(i.caption || Object(_e.a)().unnamed)
            .css(
              "display",
              "placeholder" === i.labelPosition || "none" === i.labelPosition
                ? "none"
                : ""
            )
            .appendTo(this.el)),
          this.updateEditor(),
          this.updateButtons();
      }
      updateStructure() {
        this.el.attr("title", this.field.tooltip || ""),
          this.updateElementWidth(),
          this.label
            .text(this.field.caption || Object(_e.a)().unnamed)
            .css(
              "display",
              "placeholder" === this.field.labelPosition ||
                "none" === this.field.labelPosition
                ? "none"
                : ""
            ),
          this.el.toggleClass(
            "label-left",
            "left" === this.field.labelPosition
          ),
          this.updateEditor(),
          this.nodeChanged(),
          this.editor && this.editor.updateStructure();
      }
      updateEditor() {
        const e = this.field.referenceRenderer;
        if (!this.editor || e !== this.renderer)
          switch (
            (this.editor && (this.editor.destroy(), (this.editor = void 0)),
            (this.renderer = e),
            e)
          ) {
            case "embed":
              this.editor = new ho(this);
              break;
            case "combo":
              this.editor = new po(this);
              break;
            case "switch":
              this.editor = new xo(this);
              break;
            case "radio":
              this.editor = new bo(this);
              break;
            default:
              this.editor = new mo(this);
          }
      }
      updateButtons() {
        this.editor && this.editor.updateButtons();
      }
      resize() {
        this.editor && this.editor.resize();
      }
      destroy() {
        this.editor && this.editor.destroy(), this.el.remove();
      }
      bind() {
        this.nodeChanged();
      }
      nodeChanged() {
        this.updateIsWritable(), this.updateVisibility(), this.updateButtons();
        const e = this.container.nid;
        e &&
          window.database.loadValue(e, this.field.id, (e, t) => {
            (this.value = t),
              this.editor && this.editor.nodeChanged(),
              this.updateButtons(),
              this.validate(this.value);
          });
      }
      find() {
        if (!this.isWritable()) return;
        const e = this.container.nid;
        e &&
          new co(e, this.field, {
            backButtonCaption: this.field.type.caption,
            select: (e) => {
              this.update(window.database.ridOf(e));
            },
            saveViewConfig: (e) => {
              this.saveConfigIfAdminMode(e);
            },
            create: window.database.canCreate(this.field.refType)
              ? () => {
                  this.create();
                }
              : void 0,
          });
      }
      update(e, t) {
        window.database.update(this.container.nid, this.field.id, e, (e) => {
          e && $.alert(e), t && t(e);
        });
      }
      saveConfigIfAdminMode(e) {
        Object(ki.b)() && this.saveConfig(e);
      }
      saveConfig(e) {
        (this.field.viewConfig = e), this.field.type.schema.trigger("change");
      }
      create() {
        if (!this.isWritable()) return;
        if (!window.database.canCreate(this.field.refType)) return;
        const e = this.container.nid;
        if (!e) return;
        const t = {};
        (t[this.field.refFieldId] = [b.schemas.ridOf(e)]),
          window.database.create(this.field.refType, t, (e, t) => {
            if (e) return $.alert(e);
            t
              ? ((this.value = b.schemas.ridOf(t._id)), this.open())
              : (this.value = void 0);
          });
      }
      unlink() {
        const e = this.container.nid;
        e &&
          window.database.update(e, this.field.id, null, (e) => {
            if (e) return $.alert(e);
          });
      }
      open() {
        if (this.value) {
          const e = this.getRef();
          if (this.field.isComposition) new No.PopupEditor(e, {});
          else {
            const t = new No.PopupEditor(e, {
              unlink: () => {
                t.close(), this.unlink();
              },
            });
          }
        } else this.find();
      }
      validate(e) {
        const t = this.field.validate(e);
        return t ? (this.setError(t), !1) : (this.setError(void 0), !0);
      }
      startEditCaption() {
        Si.prototype.startEditCaption.call(this);
      }
      formatReference(e) {
        if (!this.value) return void e("");
        const t = this.getRef();
        window.database.loadNode(t, (t, i) => {
          i
            ? this.field.referenceFormatExp
              ? this.field.referenceFormatExp.evaluate(
                  window.database,
                  i,
                  (t, i) => {
                    e(
                      t
                        ? "ERROR: " + t
                        : this.field.referenceFormatExp.returnType.format(i) ||
                            ""
                    );
                  }
                )
              : e(this.field.refType.format(i) || "")
            : e("");
        });
      }
      loadRecords(e, t) {
        const i = this.currentLoadingId + 1;
        this.currentLoadingId = i;
        const o = this,
          a = window.database,
          n = this.container.nid,
          s = this.field,
          r = s.constraintExp,
          l = {};
        if (window.NINOX_APP)
          if (r) {
            const t = r.getSyncJS(),
              i = a.loadNodeSync(n);
            c(
              void 0,
              i
                ? a.selectFindSyncJS(
                    s.refTypeId,
                    (e) => t(t.ctx, a, void 0, { a: i, b: e }),
                    e,
                    0
                  )
                : []
            );
          } else c(void 0, a.selectFindSyncJS(s.refTypeId, void 0, e, 0));
        else {
          let t = null;
          r &&
            (t = r.resolve({
              a: new b.queries.Record(
                s.type,
                new b.queries.Const(b.schemas.ridOf(n), b.schemas.tnumber)
              ),
              b: new b.queries.This(s.refType),
            }));
          const i = r
            ? "select " + s.refTypeId + " where (" + t.toString() + ")"
            : "select " + s.refTypeId;
          a.find(i, e, c);
        }
        function c(e, t) {
          i === o.currentLoadingId &&
            a.loadNodes2(t, l, () => {
              if (i === o.currentLoadingId) return e ? d(e) : void d(void 0, t);
            });
        }
        function d(e, a) {
          i === o.currentLoadingId && (e && $.alert(e), t(a || []));
        }
      }
      getNid() {
        return this.container.nid;
      }
      getRef() {
        return this.value ? this.field.refTypeId + this.value : void 0;
      }
      focus() {
        var e;
        if (!this.visible) return !1;
        if (!this.isWritable()) return !1;
        if (null === (e = this.editor) || void 0 === e ? void 0 : e.focus) {
          if (window.NINOX_IOS) this.editor.focus();
          else {
            var t;
            const e = (this.container && this.container.el) || this.el.parent(),
              i = e.offset().top,
              o = i + e.height(),
              a = e.scrollTop(),
              n =
                (null === (t = this.el.offset()) || void 0 === t
                  ? void 0
                  : t.top) || 0,
              s = (this.el.height() || 0) + n + 8;
            n < i
              ? e.scrollTop(a - (i - n))
              : s > o && e.scrollTop(a + (s - o)),
              setTimeout(() => {
                var e;
                (null === (e = this.editor) || void 0 === e
                  ? void 0
                  : e.focus) && this.editor.focus();
              }, 0);
          }
          return !0;
        }
        return !1;
      }
    }
    function Co(e, t, i) {
      var o = this;
      (this.container = e),
        (this.tab = t),
        (this.field = i),
        (this.visible = !0),
        (this.reverseRenderer = i.reverseRenderer),
        (this.cachedViewConfig = util.getPersistentViewConfig(i.viewConfig)),
        (this.query = new queries.QueryReverse(database, i, void 0)),
        (this.popupEditor = null),
        (this.el = $('<div class="component editor reversefield">')
          .data("component", this)
          .attr("title", i.tooltip || "")
          .touch($.proxy(this.clicked, this))),
        this.updateElementWidth(),
        this.el.appendTo(t.el),
        (this.label = $("<label>")
          .text(i.caption || locale.unnamed)
          .appendTo(this.el)),
        (this.$content = $('<div class="stringeditor">').appendTo(this.el)),
        (this.$text = $('<div class="input-text reversefield-items">').appendTo(
          this.$content
        )),
        (this.$create = $(
          '<div class="stringeditor-button2"><div class="i-32-18 i-light-grey i-setting-add"></div></div>'
        )
          .attr("title", locale.addRowCreate)
          .touch(function () {
            return o.addRowCreate(), !1;
          })
          .appendTo(this.$content)),
        (this.$find = $(
          '<div class="stringeditor-button"><div class="button i-32-18 i-light-grey i-search"></div></div>'
        )
          .attr("title", locale.addRowFind)
          .touch(function () {
            return o.addRowFind(), !1;
          })
          .appendTo(this.$content)),
        this.updateButtons(),
        this.updateHeight(),
        database.on("rename", void 0, this.nodeRenamed, this);
    }
    function ko(e, t, i) {
      (this.container = e),
        (this.tab = t),
        (this.field = i),
        (this.visible = !0),
        (this.reverseRenderer = i.reverseRenderer),
        (this.el = $('<div class="component editor">')
          .appendTo(t.el)
          .data("component", this)
          .attr("title", i.tooltip || "")),
        (this.label = $("<label>")
          .text(i.caption || locale.unnamed)
          .appendTo(this.el)),
        (this.$content = $(
          '<div style="background-color:green;height:32px;width:200px">LIST</div>'
        ).appendTo(this.el));
    }
    Object.assign(Co.prototype, di.a.prototype),
      (Co.prototype.updateStructure = function () {
        var e = this.field;
        this.el.attr("title", e.tooltip || ""),
          this.updateElementWidth(),
          this.label.text(e.caption || locale.unnamed),
          util.viewConfigEquals(e.viewConfig, this.cachedViewConfig) ||
            ((this.cachedViewConfig = util.getPersistentViewConfig(
              this.field.viewConfig
            )),
            (this.query = new queries.QueryReverse(database, e, void 0)),
            this.updateTable()),
          this.updateButtons(),
          this.updateHeight(),
          this.reload();
      }),
      (Co.prototype.updateRows =
        Co.prototype.updateTable =
        Co.prototype.updateAll =
          function () {
            for (
              var e = this.query,
                t = e.nidSelected,
                i = e.rows,
                o = e.cols,
                a = e.models,
                n = "",
                s = (e.type, this.canUnlink()),
                r = 0;
              r < i.length;
              r++
            ) {
              var l = i[r],
                c = a[l];
              if (c) {
                for (var d = [], u = 0; u < o.length; u++) {
                  var p = o[u],
                    h = c.values[u];
                  if (null != h) {
                    var m = p.field.format(h);
                    m && d.push(m);
                  }
                }
                var f = d.join(" ") || locale.unnamed;
                n +=
                  '<div class="reversefield-item' +
                  (l === t ? " selected" : "") +
                  '" data-nid="' +
                  l +
                  '"><span>' +
                  htmlEscape(f) +
                  "</span>" +
                  (s
                    ? '<div class="icon-medium-black icon-medium-unlink"></div>'
                    : "") +
                  "</div>";
              }
            }
            this.$text.html(n), this.updateButtons();
          }),
      (Co.prototype.updateHead = function () {}),
      (Co.prototype.updateFoot = function () {}),
      (Co.prototype.clicked = function (e) {
        var t = $(e.target),
          i = t.closest(".reversefield-item").attr("data-nid");
        i &&
          (t.is(".icon-medium-unlink") ? this.unlinkFrom(i) : this.select(i));
      }),
      (Co.prototype.reload = ro.prototype.reload),
      (Co.prototype.bind = ro.prototype.bind),
      (Co.prototype.destroy = ro.prototype.destroy),
      (Co.prototype.nodeChanged = ro.prototype.nodeChanged),
      (Co.prototype.addRowFind = ro.prototype.addRowFind),
      (Co.prototype.addRowCreate = ro.prototype.addRowCreate),
      (Co.prototype.select = ro.prototype.select),
      (Co.prototype.unselect = ro.prototype.unselect),
      (Co.prototype.unlinkFrom = ro.prototype.unlinkFrom),
      (Co.prototype.selectPrev = function () {}),
      (Co.prototype.selectNext = function () {}),
      (Co.prototype.getSelectedNids = function () {
        return [];
      }),
      (Co.prototype.duplicate = ro.prototype.duplicate),
      (Co.prototype.canUnlink = ro.prototype.canUnlink),
      (Co.prototype.canRemove = ro.prototype.canRemove),
      (Co.prototype.isWritable = ro.prototype.isWritable),
      (Co.prototype.nodeRenamed = ro.prototype.nodeRenamed),
      (Co.prototype.isHeightAdjustable = function () {
        return !0;
      }),
      (Co.prototype.setHeight = function (e) {
        var t = this.field,
          i = t.height,
          o = Math.max(1, Math.round(e / 32));
        o !== i &&
          (this.$content.css({ height: 32 * o - 2 }),
          this.$text.css({ "white-space": o > 1 ? "normal" : "" }),
          (t.height = o));
      }),
      (Co.prototype.updateHeight = function () {
        var e = this.field.height || 1;
        e = Math.max(1, Math.min(32, e));
        this.$content.css({ height: 32 * e - 2 }),
          this.$content.toggleClass("input-text-multiline", e > 1),
          this.$text.css({ "white-space": e > 1 ? "normal" : "" });
      }),
      (Co.prototype.startEditCaption = Si.prototype.startEditCaption),
      (Co.prototype.updateButtons = ro.prototype.updateButtons),
      Object.assign(ko.prototype, di.a.prototype);
    class So extends di.a {
      constructor(e, t, i) {
        super(),
          Ie()(this, "container", void 0),
          Ie()(this, "tab", void 0),
          Ie()(this, "field", void 0),
          Ie()(this, "el", void 0),
          Ie()(this, "label", void 0),
          Ie()(this, "content", void 0),
          Ie()(this, "isDestroyed", !1),
          Ie()(this, "query", void 0),
          Ie()(this, "nid", void 0);
        const o = Object(_e.a)();
        (this.container = e),
          (this.tab = t),
          (this.field = i),
          (this.el = $('<div class="component editor choice">')
            .data("component", this)
            .attr("title", i.tooltip || "")),
          this.updateElementWidth(),
          this.el.appendTo(t.el),
          (this.label = $("<label>")
            .text(i.caption || o.unnamed)
            .appendTo(this.el)),
          (this.content = $("<div>").appendTo(this.el));
      }
      destroy() {
        this.isDestroyed ||
          ((this.isDestroyed = !0),
          this.query && (this.query.destroy(), (this.query = void 0)),
          n.a.unmountComponentAtNode(this.content[0]),
          this.el.remove(),
          super.destroy());
      }
      bind(e) {
        this.query && (this.query.destroy(), (this.query = void 0)),
          this.field.viewConfig &&
            (this.field.viewConfig.type = this.field.refTypeId),
          (this.query = new b.Query(
            window.database,
            this.field.viewConfig || { type: this.field.refTypeId },
            !1
          )),
          (this.nid = e._id),
          this.reload();
      }
      updateStructure() {}
      isHeightAdjustable() {
        return !0;
      }
      setHeight(e) {}
      updateHeight() {}
      startEditCaption() {}
      reload() {
        this.query && this.query.load(() => this.queryLoaded());
      }
      queryLoaded() {
        this.isDestroyed || this.updateDOM();
      }
      getValues() {
        const e = this.query;
        return e
          ? e.rows.slice(0, 100).map((t) => {
              const i = e.models[t];
              let o, a, n;
              const s = [];
              if (i)
                for (let t = 0; t < e.cols.length; t++) {
                  const r = e.cols[t].expression.returnType;
                  "icon" === r.base
                    ? (o = i.values[t])
                    : "color" === r.base
                    ? ((a = i.values[t]),
                      (n = a ? b.util.contrastingTextColorTo(a) : void 0))
                    : s.push(r.format(i.values[t]));
                }
              return {
                id: b.util.ridOf(t),
                caption: s.join(" "),
                color: a,
                textColor: n,
                icon: o,
              };
            })
          : [];
      }
      isSelected(e) {
        const t = window.database.loadNodeSync(this.nid);
        if (!t) return !1;
        const i = t[this.field.id];
        return !!i && -1 !== i.indexOf(parseInt(e, 10));
      }
      setSelected(e, t) {
        const i = this.field.refTypeId + e;
        window.database.update(
          i,
          this.field.refFieldId,
          t ? b.util.ridOf(this.nid) : null,
          () => {
            this.reload();
          }
        );
      }
      updateDOM() {
        this.isDestroyed ||
          n.a.render(
            s.createElement(fo, {
              values: this.getValues(),
              isSelected: (e) => this.isSelected(e),
              setSelected: (e, t) => this.setSelected(e, t),
            }),
            this.content[0]
          );
      }
    }
    function $o(e, t, i) {
      (this.container = e),
        (this.field = i),
        (this.visible = !0),
        (this.el = $('<div class="component space">')
          .data("component", this)
          .attr("title", i.tooltip || "")
          .css("height", i.height || 64)),
        this.updateElementWidth(),
        this.el.appendTo(t.el);
    }
    function _o(e, t) {
      (this.container = e),
        (this.id = t.id),
        (this.field = t),
        (this.visible = !1),
        (this.hidden = !1),
        (this.toolbox = void 0),
        (this.children = []),
        (this.components = []),
        (this.elTab = $('<div class="tab">')
          .attr("title", t.tooltip || "")
          .touch($.proxy(this.clicked, this))
          .on("contextmenu", $.proxy(this.clicked, this))),
        (this.textContainer = $("<div>").appendTo(this.elTab)),
        (this.tabSelectedIndicator = $('<div class="tab-selected-indicator">')),
        (this.el = null),
        this.updateTab();
    }
    function Eo(e, t, i) {
      (this.container = e),
        (this.field = i),
        (this.visible = !0),
        (this.el = $('<div class="component text">')
          .data("component", this)
          .attr("title", i.tooltip || "")),
        this.updateElementWidth(),
        this.el.appendTo(t.el),
        (this.label = $("<label>").text(i.caption).appendTo(this.el)),
        this.updateStyle();
    }
    function Do(e, t, i) {
      ro.call(this, e, t, i), (this._cachedFn = i.fn);
    }
    Object.assign($o.prototype, di.a.prototype),
      ($o.prototype.updateStructure = function () {
        var e = this.field;
        this.el.css("height", e.height || 64).attr("title", e.tooltip || ""),
          this.updateElementWidth();
      }),
      ($o.prototype.isHeightAdjustable = function () {
        return !0;
      }),
      ($o.prototype.setHeight = function (e) {
        (this.field.height = 8 * Math.max(1, Math.min(64, Math.round(e / 8)))),
          this.updateStructure();
      }),
      (_o.prototype.show = function () {
        if (this.hidden) return;
        if (this.visible) return;
        this.visible = !0;
        var e = this.container,
          t = this.children;
        let i = e.currentTab;
        i ||
          (i = {
            hide: function (e) {
              e();
            },
          }),
          i.hide(() => {
            (e.currentTab = this),
              this.elTab.addClass("selected"),
              this.tabSelectedIndicator.appendTo(this.elTab),
              (this.el = $('<div class="form">').appendTo(
                e.containerEl || e.el
              )),
              Object(c.e)(this.field.beforeShow, this.container.nid, (i) => {
                i && $.alert(i), (this.components = []);
                for (var o = 0; o < t.length; o++) {
                  var a = t[o],
                    n = this.createComponent(a);
                  n && this.components.push(n);
                }
                var s = e.node;
                s && this.bind(s),
                  this.container.updateBackground(this.field.bgColor),
                  this.updateTab();
              });
          });
      }),
      (_o.prototype.updateTab = function () {
        var e = this.field;
        this.textContainer.text(e.caption),
          this.elTab.attr("title", e.tooltip || "");
      }),
      (_o.prototype.createComponent = function (e) {
        if (
          database.canRead(e) &&
          (!e.viewConfig || "none" !== e.viewConfig.mode) &&
          (!e.visibilityExp ||
            !e.visibilityExp.isConstant() ||
            e.visibilityExp.evaluateSync(database, void 0))
        ) {
          var t = this.container;
          if (!t.hideFields[e.id])
            switch (e.base) {
              case "space":
                return new No.Space(t, this, e);
              case "br":
                return new No.BR(t, this, e);
              case "head":
                return new No.Head(t, this, e);
              case "text":
                return new No.Text(t, this, e);
              case "custom":
                return new No.Custom(t, this, e);
              case "view":
                return new No.View(t, this, e);
              case "chart":
                return new No.Chart(t, this, e);
              case "button":
                return new No.Button(t, this, e);
              case "ref":
                return new No.Reference(t, this, e);
              case "rev":
                return "field" === e.reverseRenderer
                  ? new No.ReverseField(t, this, e)
                  : "list" === e.reverseRenderer
                  ? new No.ReverseList(t, this, e)
                  : "radio" === e.reverseRenderer
                  ? new No.ReverseRadio(t, this, e)
                  : new No.Reverse(t, this, e);
              case "file":
                return new No.File(t, this, e);
              default:
                return e.isField ? new No.CmpField(t, this, e) : void 0;
            }
        }
      }),
      (_o.prototype.updateStructure = function () {
        if ((this.updateTab(), this.visible)) {
          this.container.type;
          for (
            var e = this.components, t = this.children, i = {}, o = 0;
            o < t.length;
            o++
          ) {
            i[(r = t[o]).id] = r;
          }
          var a = {};
          for (o = 0; o < e.length; o++) {
            var n = i[(l = e[o]).field.id];
            n ? ((l.field = n), (a[n.id] = l)) : l.destroy();
          }
          var s = [];
          for (o = 0; o < t.length; o++) {
            var r;
            (l = a[(r = t[o]).id])
              ? "rev" === r.base &&
                r.reverseRenderer != l.reverseRenderer &&
                (l.destroy(), (l = this.createComponent(r)))
              : (l = this.createComponent(r)),
              l && ((l.field = r), s.push(l));
          }
          this.components = s;
          for (o = 0; o < s.length; o++) {
            var l;
            (l = s[o]).el.index() !== o &&
              (o > 0 ? l.el.insertAfter(s[o - 1].el) : l.el.prependTo(this.el)),
              l.updateStructure();
          }
          this.visible && this.container.updateBackground(this.field.bgColor);
        }
      }),
      (_o.prototype.hide = function (e) {
        this.visible &&
          ((this.visible = !1),
          this.container.currentTab === this &&
            ((this.container.currentTab = void 0),
            this.container.updateBackground(),
            this.elTab.removeClass("selected"),
            this.tabSelectedIndicator.detach(),
            Q.each(this.components, function (e) {
              e.destroy();
            }),
            (this.components = []),
            this.el.remove(),
            (this.el = null),
            this.updateTab(),
            Object(c.e)(this.field.afterHide, this.container.nid, (t) => {
              t && $.alert(t), e && e();
            })));
      }),
      (_o.prototype.bind = function (e) {
        this.updateVisibility(),
          this.visible &&
            Q.each(this.components, function (t) {
              t.bind(e);
            });
      }),
      (_o.prototype.updateVisibility = function () {
        if (this.field.visibilityExp) {
          var e = this,
            t = (this._updateVisibilityId = Math.random());
          database.loadNode(e.container.nid, function (i, o) {
            o &&
              e.field.visibilityExp.evaluate(database, o, function (i, o) {
                t === e._updateVisibilityId && e.setHidden(!i && !o);
              });
          });
        } else this.hidden && this.setHidden(!1);
      }),
      (_o.prototype.setHidden = function (e) {
        (this.hidden = !!e),
          e
            ? ((this.elTab[0].style.display = "none"),
              this.blur(),
              this.visible && (this.hide(), this.container.selectTab("0")))
            : (this.elTab[0].style.display = "");
      }),
      (_o.prototype.resize = function (e) {
        this.visible &&
          Q.each(this.components, function (e) {
            e.resize && e.resize();
          });
      }),
      (_o.prototype.save = function () {
        this.visible &&
          Q.each(this.components, function (e) {
            e.save && e.save();
          });
      }),
      (_o.prototype.nodeChanged = function () {
        this.updateVisibility(),
          this.visible &&
            Q.each(this.components, function (e) {
              e.nodeChanged && e.nodeChanged();
            });
      }),
      (_o.prototype.blur = function () {
        this.visible &&
          Q.each(this.components, function (e) {
            e.blur();
          });
      }),
      (_o.prototype.focus = function () {
        if (this.visible)
          for (var e = this.components, t = 0; t < e.length; t++) {
            var i = e[t];
            if (i.focus && i.focus()) return;
          }
      }),
      (_o.prototype.destroy = function () {
        this.hide(), this.elTab.remove();
      }),
      (_o.prototype.clicked = function () {
        return (
          this.container.currentTab === this
            ? Object(ki.b)() && this.popup()
            : this.container.selectTab(this.id),
          !1
        );
      }),
      (_o.prototype.popup = function () {
        var e = this.field;
        if ("0" !== this.id) {
          var t = $.backplane({ close: l }),
            i = $(
              '<div class="nx-menu-popup grey" style="width:256px">'
            ).appendTo(t),
            o = new ct.a(this, e.getCaptionModel(), i, { formWidth: 0.75 }),
            a = new ct.a(this, e.getBGColorModel(), i, { formWidth: 0.25 });
          $('<div class="nx-menu-item">')
            .append($('<div class="nx-menu-label">').text(locale.removeTab))
            .appendTo(i)
            .touch(function () {
              t.close(), e.type.schema.removeField(e);
            });
          var n = i.outerWidth(),
            s = i.outerHeight(),
            r = this.elTab.offset();
          (r.top += this.elTab.outerHeight()),
            r.left + n > window.getWidth() - 1 &&
              (r.left = window.getWidth() - n - 1),
            r.top + s > window.getHeight() && (r.top = window.getHeight() - s),
            i.offset(r);
        }
        function l() {
          o.destroy(), a.destroy();
        }
      }),
      (_o.prototype.editorUp = function () {
        this.container.editorUp && this.container.editorUp();
      }),
      (_o.prototype.editorDown = function () {
        console.log("Tab.editorDown"),
          this.container.editorDown && this.container.editorDown();
      }),
      (_o.prototype.isWritable = function () {
        return this.container.isWritable();
      }),
      (_o.prototype.columnsChanged = function () {
        Q.each(this.components, function (e) {
          e.updateElementWidth();
        });
      }),
      Object.assign(Eo.prototype, di.a.prototype),
      (Eo.prototype.updateStructure = zi.prototype.updateStructure),
      (Eo.prototype.updateStyle = zi.prototype.updateStyle),
      (Eo.prototype.startEditCaption = Si.prototype.startEditCaption),
      Object.assign(Do.prototype, ro.prototype),
      (Do.prototype.createQuery = function () {
        try {
          return new queries.QueryExpression(
            database,
            this.field,
            this.container.nid
          );
        } catch (e) {
          return;
        }
      }),
      (Do.prototype.updateButtons = function () {
        (this.$controls[0].style.display = "none"),
          (this.$create[0].style.display = "none"),
          (this.$find[0].style.display = "none");
      }),
      (Do.prototype.addRowFind = function () {}),
      (Do.prototype.addRowCreate = function () {}),
      (Do.prototype.canUnlink = function () {
        return !1;
      }),
      (Do.prototype.canRemove = function () {
        return !1;
      }),
      (Do.prototype.queryNeedsUpdate = function () {
        var e = ro.prototype.queryNeedsUpdate.call(this);
        return this.field.fn !== this._cachedFn
          ? ((this._cachedFn = this.field.fn), !0)
          : e;
      }),
      (Do.prototype.isWritable = function () {
        return !1;
      });
    const No = {
      BR: pi,
      Button: hi,
      Chart: wi,
      CommentsTab: xi,
      Custom: Ci,
      CmpField: Si,
      File: Ai,
      FilesTab: Oi,
      Head: zi,
      HistoryTab: Li,
      PopupEditor: Qi,
      Reference: To,
      Reverse: ro,
      ReverseField: Co,
      ReverseList: ko,
      ReverseRadio: So,
      Space: $o,
      Tab: _o,
      Text: Eo,
      View: Do,
    };
    o("./src/react/HomeHistory.scss");
    function Mo(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function Io(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? Mo(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : Mo(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    class Ro extends s.Component {
      constructor(e) {
        super(e), (this.state = { icon: null }), this.updateUserIcon();
      }
      getUserIcon(e) {
        if (null === e)
          return s.createElement(
            "div",
            { className: "button" },
            s.createElement("div", {
              className: "i-32-24 i-white i-field-user",
            })
          );
        {
          const t = Io({}, this.props.style, {
            width: this.props.size + "px",
            height: this.props.size + "px",
            lineHeight: this.props.size + "px",
            fontSize: 24 === this.props.size ? "14px" : "18px",
            color: "#fff",
            fontWeight: "bold",
            textAlign: "center",
            backgroundPosition: "center",
            backgroundRepeat: "no-repeat",
            borderRadius: "50%",
            backgroundSize: "cover",
          });
          if (this.state.icon)
            return s.createElement(
              "div",
              { className: "button" },
              s.createElement("div", {
                style: Io({ backgroundImage: `url(${this.state.icon})` }, t),
              })
            );
          {
            const i = (e.name || "?")[0].toLocaleUpperCase(),
              o = b.util.pickColor(e.id);
            return s.createElement(
              "div",
              { className: "button" },
              s.createElement(
                "div",
                { style: Io({ backgroundColor: o }, t) },
                i
              )
            );
          }
        }
      }
      render() {
        return s.createElement(
          ze.a,
          { onFastClick: this.props.onClick },
          this.getUserIcon(this.props.user)
        );
      }
      async updateUserIcon() {
        var e;
        (null === (e = this.props.user) || void 0 === e ? void 0 : e.photo) &&
          this.setState({
            icon: await window.localFileSystem.cachedURL(
              "https:" + this.props.user.photo,
              null
            ),
          });
      }
    }
    function Fo(e) {
      const t = e.entries.reduce((e, t) => {
        var i;
        return (
          void 0 !==
            (null == t || null === (i = t.user) || void 0 === i
              ? void 0
              : i.id) &&
            (e.hasOwnProperty(t.date) || (e[t.date] = []), e[t.date].push(t)),
          e
        );
      }, {});
      return s.createElement(
        "div",
        { className: "HomeHistory_root" },
        Object.keys(t).map((e) => {
          let i = null;
          return t[e].map((e) => {
            var t, o;
            let a = null;
            var n;
            (null === (t = i) || void 0 === t ? void 0 : t.id) !==
              (null === (o = e.user) || void 0 === o ? void 0 : o.id) &&
              ((i = e.user),
              (a = s.createElement(
                "div",
                { className: "HomeHistory_entryHeader" },
                s.createElement(Ro, {
                  onClick: () => {},
                  user: e.user,
                  size: 28,
                }),
                s.createElement(
                  "div",
                  { className: "HomeHistory_entryHeaderTitleContainer" },
                  s.createElement(
                    "div",
                    { className: "HomeHistory_entryHeaderTitle" },
                    null == e || null === (n = e.user) || void 0 === n
                      ? void 0
                      : n.name
                  ),
                  s.createElement(
                    "div",
                    { className: "HomeHistory_entryHeaderSubtitle" },
                    e.date
                  )
                )
              )));
            return s.createElement(
              s.Fragment,
              null,
              a,
              s.createElement(
                ze.a,
                {
                  className: "History_entry",
                  onFastClick: () => new No.PopupEditor(e.nid, {}),
                },
                s.createElement(
                  "div",
                  { className: "History_change" },
                  e.change
                ),
                s.createElement("div", { className: "History_time" }, e.time)
              )
            );
          });
        })
      );
    }
    class Ao {
      constructor(e, t) {
        Ie()(this, "container", void 0),
          Ie()(this, "el", void 0),
          Ie()(this, "base", "history"),
          Ie()(this, "visible", !1),
          Ie()(this, "database", window.database),
          Ie()(this, "locale", Object(_e.a)()),
          (this.container = e),
          (this.el = $(
            '<div class="admin-options admin-options-history" style="background-color:rgb(255,255,255)">'
          ));
      }
      getNavigationState() {
        return { base: "history" };
      }
      destroy() {
        this.hide(), this.el.remove();
      }
      hide() {
        this.visible &&
          ((this.visible = !1),
          this.el.detach(),
          this.database.off("history", void 0, this.updateUI, this));
      }
      show() {
        Object(l.f)("History", "Open"),
          this.visible ||
            ((this.visible = !0),
            this.el.appendTo(this.container.el),
            this.updateUI(),
            this.database.on("history", void 0, this.updateUI, this));
      }
      async updateUI() {
        if (!this.visible) return;
        if (
          !this.database.supports.history ||
          !this.database.authorizationHistory
        )
          return;
        const e = await this.getHistoryEntries();
        a.render(s.createElement(Fo, { entries: e }), this.el[0]);
      }
      async getHistoryEntries() {
        const e = await this.getHistory(),
          t = ["create", "remove", "update", "comment"],
          i = e.filter((e) => t.includes(e[3])),
          o = i.map((e) => e[4]);
        return (
          await this.preloadNodes(o),
          i.reduce((e, [t, i, o, a, n]) => {
            const s = this.database.typeOf(n);
            if (s && this.database.canRead(s)) {
              if ("remove" === a)
                return e.concat({
                  nid: n,
                  change: `${s.caption} #${b.schemas.ridOf(n)} ${
                    this.locale.removed
                  }`,
                  date: Oo(new Date(o)),
                  time: zo(o),
                  seq: t,
                  user: { id: i, name: this.database.userName(i) },
                });
              const r = this.database.loadNodeSync(n);
              if (r && !e[n]) {
                const l =
                  "create" === a
                    ? `${s.caption} #${b.schemas.ridOf(n)} ${
                        this.locale.created
                      }`
                    : "comment" === a
                    ? `${s.caption} #${b.schemas.ridOf(n)} ${s
                        .format(r)
                        .substr(0, 20)} ${this.locale.commented}`
                    : `${s.caption} #${b.schemas.ridOf(n)} ${s
                        .format(r)
                        .substr(0, 20)} ${this.locale.modified}`;
                return e.concat({
                  nid: n,
                  change: l,
                  date: Oo(new Date(o)),
                  time: zo(o),
                  seq: t,
                  user: { id: i, name: this.database.userName(i) },
                });
              }
            }
            return e;
          }, [])
        );
      }
      async preloadNodes(e) {
        return new Promise((t) => {
          this.database.loadNodes(e, () => t());
        });
      }
      async getHistory() {
        return new Promise((e, t) => {
          this.database.loadHistory((i, o) => {
            i ? t(i) : e(o);
          });
        });
      }
    }
    function Oo(e) {
      const t = Object(_e.a)(),
        i = e.getTime(),
        o = new Date(),
        a = new Date(o.getFullYear(), o.getMonth(), o.getDate()).getTime(),
        n = new Date(o.getFullYear(), o.getMonth(), o.getDate() + 1).getTime(),
        s = new Date(o.getFullYear(), o.getMonth(), o.getDate() - 1).getTime();
      return i >= a && i < n
        ? t.today
        : i >= s && i < a
        ? t.yesterday
        : b.util.formatLocaleDate(e);
    }
    function zo(e) {
      return b.util.formatLocaleTime(e);
    }
    o("./src/react/HomeTableList.css");
    const Lo = Object(Xe.SortableHandle)(({ hidden: e }) =>
        s.createElement(
          "span",
          { className: "HomeTableList_sortingHandleContainer" },
          s.createElement("span", {
            className: "i-32-24 i-lighter-grey i-drag-handle",
          }),
          e
            ? s.createElement(
                "span",
                { className: "Hud_hiddenTag" },
                Object(_e.a)().hidden
              )
            : null
        )
      ),
      jo = Object(Xe.SortableElement)(({ value: e }) =>
        s.createElement("span", { className: "home-table --ul-home-table" }, e)
      ),
      Po = Object(Xe.SortableContainer)(({ children: e }) =>
        s.createElement("div", null, e)
      );
    class Ho extends s.Component {
      constructor(e) {
        super(e),
          Ie()(this, "onSortEnd", (e, t, i) => {
            e !== t && this.props.database.schema.updateTypeOrder(e, t, i);
          });
      }
      render() {
        const e = [],
          t = this.props.database.schema.types;
        return (
          b.util.localeSortBy(t, "order").map((t) => {
            if (this.shouldShowType(t) && !t.master) {
              const i = t
                  .getAllChildren()
                  .filter((e) => this.shouldShowType(e)),
                o = i.length > 0;
              e.push(
                s.createElement(
                  ze.a,
                  {
                    key: t.id,
                    onFastClick: () => this.props.onTableClick(t.id),
                  },
                  this.props.database.adminMode &&
                    this.props.database.isAdminEnabled()
                    ? s.createElement(
                        "div",
                        { style: { position: "absolute", left: -8 } },
                        s.createElement(Lo, { hidden: t.hidden })
                      )
                    : null,
                  o
                    ? s.createElement(
                        ze.a,
                        {
                          onFastClick: (e) =>
                            this.props.onShowChildrenClick(e, i),
                          className: "HomeTableList_burgerMenuContainer",
                        },
                        s.createElement("div", {
                          className:
                            "button i-32-24 i-light-grey i-setting-menu",
                        })
                      )
                    : null,
                  s.createElement(
                    "div",
                    { className: "home-table-label" },
                    t.caption || t.id
                  )
                )
              );
            }
          }),
          this.renderSortable(e, null)
        );
      }
      shouldShowType(e) {
        const t = this.props.database;
        return (
          (t.canRead(e) && !e.hidden) || (t.adminMode && t.isAdminEnabled())
        );
      }
      renderSortable(e, t) {
        return s.createElement(
          s.Fragment,
          null,
          s.createElement(
            Po,
            {
              onSortEnd: (e) => this.onSortEnd(e.oldIndex, e.newIndex, t),
              axis: "xy",
              useDragHandle: !0,
            },
            e.map((e, t) =>
              s.createElement(jo, { key: `item-${t}`, index: t, value: e })
            )
          ),
          this.props.database.adminMode && this.props.database.isAdminEnabled()
            ? s.createElement(
                ze.a,
                {
                  className: "home-table home-table-add --ul-add-table-button",
                  onFastClick: this.props.onAddTableClick,
                  rippleStyle: "LIGHT",
                },
                s.createElement(
                  "div",
                  { className: "home-table-label" },
                  s.createElement("div", {
                    className: "i-24-24 i-light-grey i-plus",
                    style: { margin: "0 auto 8px auto" },
                  }),
                  s.createElement("div", null, Object(_e.a)().addTable)
                )
              )
            : null,
          this.props.database.authorizationImport
            ? s.createElement(
                ze.a,
                {
                  rippleStyle: "LIGHT",
                  className: "home-table home-table-add",
                  onFastClick: this.props.onImportClick,
                },
                s.createElement(
                  "div",
                  { className: "home-table-label" },
                  s.createElement("div", {
                    className: "i-24-24 i-light-grey i-setting-import",
                    style: { margin: "0 auto 8px auto" },
                  }),
                  s.createElement("div", null, Object(_e.a)().importData)
                )
              )
            : null,
          window.NINOX_APP && this.props.database.isAdmin()
            ? s.createElement(
                ze.a,
                {
                  className: "home-table home-table-add",
                  onFastClick: this.props.onExportClick,
                  rippleStyle: "LIGHT",
                },
                s.createElement(
                  "div",
                  { className: "home-table-label" },
                  s.createElement("div", {
                    className: "i-24-24 i-light-grey i-setting-export",
                    style: { margin: "0 auto 8px auto" },
                  }),
                  s.createElement("div", null, Object(_e.a)().exportData)
                )
              )
            : null
        );
      }
    }
    class Uo {
      constructor(e, t) {
        (this.container = e),
          (this.visible = !1),
          (this.el = $('<div class="home home-tables">')),
          database.on("schema", void 0, this.schemaChanged, this),
          database.on("admin", void 0, this.schemaChanged, this),
          (this.base = "tables");
      }
      getNavigationState() {
        return { base: "tables" };
      }
      destroy() {
        database.off("admin", void 0, this.schemaChanged, this),
          database.off("schema", void 0, this.schemaChanged, this),
          a.unmountComponentAtNode(this.el[0]),
          this.el.remove();
      }
      hide() {
        this.visible &&
          (a.unmountComponentAtNode(this.el[0]),
          (this.visible = !1),
          this.el.detach());
      }
      show() {
        this.visible ||
          ((this.visible = !0),
          this.el.appendTo(this.container.el),
          this.updateUI());
      }
      schemaChanged(e, t, i) {
        this.updateUI();
      }
      updateUI() {
        this.visible &&
          a.render(
            s.createElement(Ho, {
              database: database,
              onTableClick: (e) => ui.openTable(e),
              onShowChildrenClick: (e, t) => this.showChildrenList(e, t),
              onAddTableClick: () => {
                Object(l.f)("DatabaseHomeTable", "Create"), new ni({});
              },
              onExportClick: () => {
                Object(l.f)("DatabaseHome", "ExportData"), new mt({});
              },
              onImportClick: () => {
                Object(l.f)("DatabaseHome", "ImportData"), new bt({});
              },
            }),
            this.el[0]
          );
      }
      showChildrenList(e, t) {
        var i = $.backplane({}),
          o = $('<div class="nx-menu-popup">').appendTo(i);
        Q.each(b.util.localeSortBy(t, "order"), function (e) {
          $('<div class="nx-menu-item">')
            .append($('<div class="nx-menu-label">').text(e.caption))
            .appendTo(o)
            .click(function () {
              i.close(), ui.openTable(e.id);
            });
        });
        const a = $(e.event.target);
        var n = a.offset(),
          s = o.outerWidth(),
          r = o.outerHeight();
        return (
          (n.top += 32),
          (n.left += a.width() - 32),
          n.left + s > window.getWidth() && (n.left = window.getWidth() - s),
          n.top + r > window.getHeight() && (n.top = window.getHeight() - r),
          o.offset(n),
          !1
        );
      }
    }
    function Vo(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function Wo(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? Vo(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : Vo(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    class Bo {
      constructor() {
        Ie()(this, "base", "home"),
          Ie()(this, "visible", void 0),
          Ie()(this, "view", void 0),
          Ie()(this, "el", void 0),
          Ie()(this, "$tabs", void 0),
          (this.visible = !1),
          (this.view = void 0),
          (this.resizeBackground = this.resizeBackground.bind(this)),
          (this.el = $('<div class="home">')),
          (this.$tabs = $('<div class="secondary-tabs">')),
          this.updateBackground(),
          window.database.on("admin", void 0, this.adminChanged, this);
      }
      getTabs(e) {
        const t = [];
        return (
          t.push({
            id: "tables",
            iconClass: "",
            isSelected: "tables" === e,
            text: Object(_e.a)().tables,
          }),
          window.database.supports.history &&
            window.database.authorizationHistory &&
            t.push({
              id: "history",
              iconClass: "",
              isSelected: "history" === e,
              text: Object(_e.a)().history,
            }),
          window.database.adminMode &&
            window.database.adminEnabled &&
            window.database.isAdmin() &&
            (t.push({
              id: "schema",
              iconClass: "",
              isSelected: "schema" === e,
              text: Object(_e.a)().dataModel,
            }),
            t.push({
              id: "options",
              iconClass: "",
              isSelected: "options" === e,
              text: Object(_e.a)().options,
            }),
            window.database.supports.authentication &&
              t.push({
                id: "security",
                iconClass: "",
                isSelected: "security" === e,
                text: Object(_e.a)().security,
              }),
            t.push({
              id: "console",
              iconClass: "",
              isSelected: "console" === e,
              text: "Console",
            })),
          t
        );
      }
      getNavigationState() {
        return {
          base: "home",
          view:
            void 0 === this.view
              ? { base: "tables" }
              : this.view.getNavigationState(),
        };
      }
      setNavigationState(e) {
        let t = e.vid;
        var i, o;
        "default" === t &&
          ((t =
            null !==
              (i = null === (o = e.view) || void 0 === o ? void 0 : o.base) &&
            void 0 !== i
              ? i
              : "tables"),
          A(Wo({}, H(), { vid: t })));
        const a = { base: t };
        switch (a.base) {
          case "tables":
          case "history":
            this.createView(a);
            break;
          case "schema":
          case "options":
          case "security":
          case "console":
          case "localizations":
            window.database.adminMode
              ? this.createView(a)
              : (A(Wo({}, H(), { vid: "tables" })),
                this.createView({ base: "tables" }));
            break;
          default:
            this.setNavigationState({ vid: "default" });
        }
      }
      navigateToView(e) {
        F(Wo({}, H(), { vid: e }));
      }
      createView(e) {
        const t = e.base;
        if (this.view) {
          if (t === this.view.base)
            return void (this.view.visible || this.view.show());
          this.view.destroy(), (this.view = void 0);
        }
        switch (t) {
          case "history":
            this.view = new Ao(this, e);
            break;
          case "schema":
            this.view = new si(this, e);
            break;
          case "options":
            this.view = new Bt(this, e);
            break;
          case "security":
            this.view = new ri(this, e);
            break;
          case "console":
            this.view = new ci(this, e);
            break;
          case "localization":
            this.view = new Ht(this, e, window.database);
            break;
          default:
            this.view = new Uo(this, e);
        }
        this.view.show(), this.updateTabs();
      }
      updateTabs() {
        if (!this.visible || !this.view) return;
        const e = this.view.base;
        n.a.render(
          r.a.createElement(lt.a, {
            items: this.getTabs(e),
            currentItemId: e,
            onItemSelect: (e) => this.navigateToView(e),
            onContextMenuClick: () => {},
            onNewItemClick: null,
            popupItemBackground: "OFF_WHITE",
          }),
          this.$tabs[0]
        );
      }
      adminChanged() {
        window.database.adminMode ||
        !this.visible ||
        { tables: !0, history: !0 }[this.view.base]
          ? this.updateTabs()
          : this.navigateToView("tables");
      }
      destroy() {
        var e;
        window.database.off("admin", void 0, this.adminChanged, this),
          this.hide(),
          this.$tabs.remove(),
          this.el.remove(),
          null === (e = this.view) || void 0 === e || e.destroy();
      }
      show() {
        this.visible ||
          ((this.visible = !0),
          this.$tabs.appendTo(window.ui.$header),
          this.el.appendTo(window.ui.$body),
          this.updateTabs(),
          window.NINOX_IOS &&
            window.addEventListener("orientationchange", this.resizeBackground),
          $.pushInputHandler(this));
      }
      hide() {
        this.visible &&
          ((this.visible = !1),
          this.view && this.view.hide(),
          this.el.detach(),
          n.a.unmountComponentAtNode(this.$tabs[0]),
          this.$tabs.detach(),
          window.NINOX_IOS &&
            window.removeEventListener(
              "orientationchange",
              this.resizeBackground
            ),
          $.popInputHandler(this));
      }
      resizeBackground() {
        if (window.NINOX_IOS) {
          const e = this.el[0];
          0 === window.orientation || 180 === window.orientation
            ? ((e.style.width = screen.width + "px"),
              (e.style.height = screen.height - 90 + "px"))
            : ((e.style.width = screen.height + "px"),
              (e.style.height = screen.width - 90 + "px"));
        }
      }
      menuNewTableEnabled() {
        return !!window.database.adminEnabled;
      }
      menuNewTable() {
        window.database.adminEnabled && new ni({});
      }
      menuImportDataEnabled() {
        return !!window.database.authorizationImport;
      }
      menuImportData() {
        window.database.authorizationImport && new bt({});
      }
      menuExportDataEnabled() {
        return !!window.database.authorizationExport;
      }
      menuExportData() {
        window.database.authorizationExport && new mt({});
      }
      async updateBackground(e) {
        const t = this.el[0],
          i = window.database.settings || {},
          o =
            window.database.account &&
            window.database.account.settings &&
            window.database.account.settings.databaseBackgroundCustomCSS;
        if (o) {
          for (const e in o)
            if (o.hasOwnProperty(e)) {
              let i = o[e];
              const a = /^url\((.*)\)$/.exec(i);
              if (a) {
                const e = a[1];
                i =
                  "url(" +
                  ((await window.localFileSystem.cachedURL(e, null)) || e) +
                  ")";
              }
              t.style[e] = i;
            }
        } else {
          if (null == i.bgType)
            (t.className = "home background-file default"),
              (t.style.backgroundImage = ""),
              (t.style.backgroundColor = "");
          else if ("solid" === i.bgType)
            (t.className = "home"),
              (t.style.backgroundImage = ""),
              (t.style.backgroundColor = i.bgColor || "");
          else if ("gradient" === i.bgType)
            (t.className = "home"),
              (t.style.backgroundImage =
                "linear-gradient(" +
                (i.bgGradient0 || "#ccc") +
                " 0%, " +
                (i.bgGradient1 || "#aaa") +
                " 100%)"),
              (t.style.backgroundColor = "");
          else if ("image" === i.bgType)
            (t.className = "home background-file"),
              (t.style.backgroundImage =
                'url("' + window.database.backgroundURL(e) + '")'),
              (t.style.backgroundColor = i.bgColor || "");
          else {
            const o = i.backgroundClass || "background";
            (t.className = "home background " + o),
              "background-file" === o
                ? ((t.style.backgroundImage =
                    'url("' + window.database.backgroundURL(e) + '")'),
                  (t.style.backgroundColor = i.bgColor || ""))
                : ((t.style.backgroundImage = ""),
                  (t.style.backgroundColor = ""));
          }
          (t.style.backgroundPosition =
            (i.bgPosH || "center") + " " + (i.bgPosV || "center")),
            (t.style.backgroundSize = i.bgSize || "cover"),
            (t.style.backgroundRepeat = i.bgRepeat || "no-repeat");
        }
      }
    }
    var qo = o("./src/react/util/general.ts");
    o("./src/react/util/SimpleContextMenu.css");
    class Yo extends s.Component {
      constructor(e) {
        super(e);
      }
      render() {
        return s.createElement(
          Rt.a,
          {
            positionAdjustment: this.props.positionAdjustment,
            clickTarget: this.props.clickTarget,
            show: this.props.show,
            settings: { style: "tooltip", arrowColor: "white" },
            onClick: this.props.onClick,
            className: "SimpleContextMenu_container",
            killWhenTargetIsNull: this.props.killWhenTargetIsNull,
          },
          0 === this.props.items.length
            ? s.createElement(
                "div",
                { className: "SimpleContextMenu_emptyText" },
                Object(_e.a)().errorNotAuthorized
              )
            : this.props.items.map((e, t) =>
                s.createElement(
                  ze.a,
                  {
                    key: e.text + t,
                    className: Object(qo.a)("nx-menu-item", {
                      "nx-menu-item-selected": !0 === e.isSelected,
                      "nx-menu-item-disabled": !0 === e.disabled,
                      "nx-menu-item-divider": !0 === e.topBorder,
                    }),
                    onFastClick: (t) => {
                      e.disabled || (this.props.onClick(), e.onClick(t));
                    },
                  },
                  e.isSelected
                    ? s.createElement("div", {
                        className: "nx-menu-item-selected-indicator",
                      })
                    : null,
                  s.createElement("div", { className: "nx-menu-label" }, e.text)
                )
              )
        );
      }
    }
    const Go = 36e5,
      Xo = 24 * Go;
    function Ko(e) {
      var t = this;
      (this.calendar = e),
        (this.nodes = {}),
        (this.days = 5),
        (this.showFullDay = !1),
        (this.el = $('<div class="calendar-week">')),
        (this.$head = $('<div class="calendar-week-header">').appendTo(
          this.el
        )),
        (this.$body = $('<div class="calendar-week-body">').appendTo(this.el)),
        (this.$nav = $('<div class="hud-menu-group" style="margin-left:8px">')),
        (this.$controls = $('<div class="calendar-controls">')),
        (this.smallContextMenuTarget = null),
        (this.$controlsSmall = $(
          '<div class="hud-menu-button i-32-24 i-light-grey i-column">'
        ).click((e) => {
          (this.smallContextMenuTarget = e.target), this.updateUI();
        })),
        $('<div class="button i-32-24 i-light-grey i-arrow-solid-left">')
          .appendTo(this.$nav)
          .touch($.proxy(this.prevWeek, this)),
        (this.$label = $('<div class="calendar-week-label">')
          .appendTo(this.$nav)
          .touch($.proxy(this.popupMiniCalendar, this))),
        $('<div class="button i-32-24 i-light-grey i-arrow-solid-right">')
          .appendTo(this.$nav)
          .touch($.proxy(this.nextWeek, this)),
        (this.$show7Days = $('<div class="button option first">')
          .text(locale.sevenDays)
          .appendTo(this.$controls)
          .touch(function () {
            t.setDays(7), t.load();
          })),
        (this.$show5Days = $('<div class="button option selected">')
          .text(locale.fiveDays)
          .appendTo(this.$controls)
          .touch(function () {
            t.setDays(5), t.load();
          })),
        (this.$show1Days = $('<div class="button option last">')
          .text(locale.oneDay)
          .appendTo(this.$controls)
          .touch(function () {
            t.setDays(1), t.load();
          })),
        (this.$showFullDay = $(
          '<div class="button option first last selected" style="margin-left:8px">'
        )
          .text(locale.showOnlyWorkHours)
          .appendTo(this.$controls)
          .touch(function () {
            t.setShowFullDay(!t.showFullDay), t.load();
          })),
        this.el.click(o);
      var i = new Date();
      function o(e) {
        var t = $(e.target).closest(
            ".calendar-week-full-box,.calendar-week-box,.calendar-week-cell"
          ),
          i = t.data("nid"),
          o = t.data("time");
        i ? new No.PopupEditor(i, { duplicate: !0 }) : o && a(e);
      }
      function a(e) {
        var i = [];
        if (
          (Q.each(database.schema.types, function (e) {
            database.canCreate(e) &&
              Q.each(e.fields, function (e) {
                "appointment" === e.base && database.canWrite(e) && i.push(e);
              });
          }),
          0 !== i.length)
        ) {
          var o = $(e.target).data("time"),
            a = new Date(o),
            n = $.backplane({}),
            s = $(
              '<div class="nx-menu-popup grey" style="border-radius:4px">'
            ).appendTo(n);
          $("<h1>").text(locale.createRecord).appendTo(s),
            $('<div style="text-align:center;padding:8px 0">')
              .text(util.formatLocaleDate(a))
              .appendTo(s);
          var r = $('<div style="padding:8px 0">').appendTo(s);
          $("<label>")
            .text(locale.appointmentBegin + " ")
            .appendTo(r);
          var l = $('<input type="text" class="appointment-time">')
            .val(Jo(a))
            .appendTo(r);
          $("<label>")
            .text(" " + locale.appointmentEnd + " ")
            .appendTo(r);
          var c = $('<input type="text" class="appointment-time">')
            .val(Jo(new Date(o + Go)))
            .appendTo(r);
          TOUCH && (l.attr("type", "time"), c.attr("type", "time")),
            Q.each(i, function (e) {
              var i = e.type;
              $('<div class="nx-menu-item">')
                .append(
                  $('<div class="nx-menu-icon i-32-24 i-grey i-setting-add">')
                )
                .append(
                  $('<div class="nx-menu-label">').text(
                    i.caption + " (" + e.caption + ")"
                  )
                )
                .appendTo(s)
                .touch(function () {
                  var o = Zo(l.val()),
                    s = Zo(c.val()) - o;
                  if (!(s < 0)) {
                    var r =
                      new Date(
                        a.getFullYear(),
                        a.getMonth(),
                        a.getDate()
                      ).getTime() + o;
                    n.close();
                    var d = {};
                    (d[e.id] = r + "/" + s),
                      database.create(i, d, function (e, i) {
                        if (e) return $.alert(e);
                        (t.nodes[i._id] = i),
                          t.updateUI(),
                          new No.PopupEditor(i._id, { duplicate: !0 });
                      });
                  }
                });
            });
          var d = s.outerWidth(),
            u = s.outerHeight(),
            p = { left: e.clientX - 24, top: e.clientY + 16 };
          p.left + d > window.getWidth() && (p.left = window.getWidth() - d),
            p.top + u > window.getHeight() && (p.top = window.getHeight() - u),
            s.offset(p);
        } else $.notify(locale.calendarCreateAppointmentField);
      }
      (this.start = new Date(i.getFullYear(), i.getMonth(), i.getDate())),
        (this.resizeListener = Q.debounce($.proxy(this.updateUI, this), 100)),
        this.updateLabel();
    }
    function Jo(e) {
      var t = e.getHours(),
        i = e.getMinutes();
      return (t < 10 ? "0" : "") + t + ":" + (i < 10 ? "0" : "") + i;
    }
    function Zo(e) {
      if (!e || "string" != typeof e) return 0;
      var t = e.split(":");
      if (2 !== t.length) return 0;
      var i = 36e5 * parseInt(t[0]) + 6e4 * parseInt(t[1]);
      return isNaN(i) ? 0 : i;
    }
    function Qo(e) {
      (this.calendar = e),
        (this.visible = !1),
        (this.el = $('<div class="calendar-month">')),
        (this.controls = $(
          '<div class="hud-menu-group" style="margin-left:8px">'
        )),
        $('<div class="button i-32-24 i-light-grey i-arrow-solid-first">')
          .appendTo(this.controls)
          .touch($.proxy(this.prevYear, this)),
        $('<div class="button i-32-24 i-light-grey i-arrow-solid-left">')
          .appendTo(this.controls)
          .touch($.proxy(this.prevMonth, this)),
        (this.label = $('<div class="calendar-month-label">')
          .appendTo(this.controls)
          .touch($.proxy(this.popupMiniCalendar, this))),
        $('<div class="button i-32-24 i-light-grey i-arrow-solid-right">')
          .appendTo(this.controls)
          .touch($.proxy(this.nextMonth, this)),
        $('<div class="button i-32-24 i-light-grey i-arrow-solid-last">')
          .appendTo(this.controls)
          .touch($.proxy(this.nextYear, this)),
        (this.table = $('<table class="calendar-table">').appendTo(this.el)),
        (this.thead = $("<thead>").appendTo(this.table)),
        (this.trhead = $("<tr>").appendTo(this.thead)),
        $('<th class="calendar-month-week">')
          .text(locale.calendarWeek)
          .appendTo(this.trhead);
      for (var t = 0; t < 7; t++)
        $("<th>")
          .text(locale.dayNames[(t + locale.firstDayOfWeek) % 7])
          .appendTo(this.trhead);
      (this.tbody = $("<tbody>").appendTo(this.table)),
        (this.trs = []),
        (this.tds = []),
        (this.cells = []);
      for (var i = 0; i < 6; i++) {
        var o = $("<tr>").appendTo(this.tbody);
        this.trs.push(o),
          this.tds.push($('<th class="calendar-month-week">').appendTo(o));
        for (var a = 0; a < 7; a++) {
          var n = 7 * i + a,
            s = $("<td>").appendTo(o).data("index", n);
          this.cells[n] = new ea(this, s, n);
        }
      }
      var r = new Date();
      this.setDate(r.getFullYear(), r.getMonth());
    }
    function ea(e, t, i) {
      (this.calendar = e), (this.td = t), (this.index = i), (this.refs = {});
    }
    function ta(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function ia(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? ta(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : ta(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    function oa() {
      (this.base = "calendar"),
        (this.visible = !1),
        (this.tabs = $(
          '<div class="secondary-tabs" style="display:flex;display:-webkit-flex">'
        )),
        (this.calendarMonth = new Qo(this)),
        (this.calendarWeek = new Ko(this)),
        (this.tabMonth = $('<div class="secondary-tab">')
          .text(locale.month)
          .appendTo(this.tabs)
          .touch(function () {
            F(ia({}, H(), { vid: "month" }));
          })),
        (this.tabWeek = $('<div class="secondary-tab">')
          .text(locale.week)
          .appendTo(this.tabs)
          .touch(function () {
            F(ia({}, H(), { vid: "week" }));
          })),
        (this.currentTab = this.calendarWeek),
        this.tabWeek.addClass("selected"),
        (this.currentDate = null);
    }
    function aa(e) {
      var t = e.year,
        i = new Date(),
        o = e.selectedDay,
        a = $.backplane({}),
        n = $('<div class="nx-menu-popup minical-popup">')
          .css({ top: 40, left: ui.leftWidth })
          .appendTo(a),
        s = $('<div class="minical">')
          .appendTo(n)
          .touch(function (t) {
            if (e.selectMonth) {
              var i = $(t.target).closest(".minical-month");
              i.length &&
                (e.selectMonth(
                  parseInt(i.attr("data-year")),
                  parseInt(i.attr("data-month"))
                ),
                a.close());
            } else if (e.selectDay) {
              var o = $(t.target).closest(".minical-day");
              o.length &&
                (e.selectDay(
                  parseInt(o.attr("data-year")),
                  parseInt(o.attr("data-month")),
                  parseInt(o.attr("data-day"))
                ),
                a.close());
            }
          });
      e.selectMonth
        ? s.addClass("minical-monthselectable")
        : e.selectDay && s.addClass("minical-dayselectable");
      for (
        var r = $('<div class="minical-months">').appendTo(s), l = 0;
        l < 12;
        l++
      ) {
        var c = new Date(t, l, 1),
          d = c.getDay(),
          u = locale.firstDayOfWeek,
          p = d >= u ? u - d + 1 : u - d - 6,
          h = new Date(c.getFullYear(), c.getMonth(), p),
          m = $(
            '<div class="minical-month" data-year="' +
              t +
              '" data-month="' +
              l +
              '">'
          ).appendTo(r);
        $('<div class="minical-month-label">')
          .text(locale.monthNames[l])
          .appendTo(m);
        for (
          var f = $('<div class="minical-days">').appendTo(m), g = 0;
          g < 6;
          g++
        )
          for (var v = 0; v < 7; v++) {
            var b = new Date(
                h.getFullYear(),
                h.getMonth(),
                h.getDate() + 7 * g + v
              ),
              y = b.getFullYear() === t && b.getMonth() === l,
              w =
                b.getFullYear() === i.getFullYear() &&
                b.getMonth() === i.getMonth() &&
                b.getDate() === i.getDate(),
              x =
                o &&
                b.getFullYear() === o.getFullYear() &&
                b.getMonth() === o.getMonth() &&
                b.getDate() === o.getDate();
            $(
              '<div class="minical-day ' +
                (y
                  ? x
                    ? "selected"
                    : w
                    ? "today"
                    : "this-month"
                  : "other-month") +
                '" data-day="' +
                b.getDate() +
                '" data-year="' +
                b.getFullYear() +
                '" data-month="' +
                b.getMonth() +
                '">'
            )
              .text(b.getDate())
              .appendTo(f);
          }
      }
    }
    function na(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function sa(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? na(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : na(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    (Ko.prototype.destroy = function () {
      this.hide(),
        this.el.remove(),
        this.$controls.remove(),
        this.$nav.remove();
    }),
      (Ko.prototype.prevWeek = function () {
        var e = this.start;
        1 === this.days
          ? (this.start = new Date(
              e.getFullYear(),
              e.getMonth(),
              e.getDate() - 1
            ))
          : (this.start = new Date(
              e.getFullYear(),
              e.getMonth(),
              e.getDate() - 7
            )),
          this.updateLabel(),
          this.load(),
          this.calendar.dateChanged(this.start);
      }),
      (Ko.prototype.nextWeek = function () {
        var e = this.start;
        e = this.start;
        1 === this.days
          ? (this.start = new Date(
              e.getFullYear(),
              e.getMonth(),
              e.getDate() + 1
            ))
          : (this.start = new Date(
              e.getFullYear(),
              e.getMonth(),
              e.getDate() + 7
            )),
          this.updateLabel(),
          this.load(),
          this.calendar.dateChanged(this.start);
      }),
      (Ko.prototype.show = function (e) {
        this.visible ||
          ((this.visible = !0),
          e && this.setDate(e, !1),
          this.$nav.appendTo(ui.$menuCenter),
          this.$controls.appendTo(ui.$menuCenter),
          this.$controlsSmall.appendTo(ui.$menuCenter),
          this.el.appendTo(ui.$body),
          this.load(!0),
          database.on("schema", void 0, this.schemaChanged, this),
          database.onChange(void 0, this.databaseChange, this),
          database.onRemove(void 0, this.databaseRemove, this),
          database.onCreate(void 0, this.databaseCreate, this),
          $(window).on("resize", this.resizeListener));
      }),
      (Ko.prototype.hide = function () {
        this.visible &&
          ((this.visible = !1),
          this.$controls.detach(),
          this.$controlsSmall.detach(),
          this.$nav.detach(),
          this.el.detach(),
          (this.nodes = {}),
          database.off("schema", void 0, this.schemaChanged, this),
          database.offChange(void 0, this.databaseChange, this),
          database.offRemove(void 0, this.databaseRemove, this),
          database.offCreate(void 0, this.databaseCreate, this),
          $(window).off("resize", this.resizeListener));
      }),
      (Ko.prototype.bodyResized = function () {
        this.updateUI();
      }),
      (Ko.prototype.schemaChanged = function (e, t, i) {
        this.load();
      }),
      (Ko.prototype.databaseChange = function (e, t) {
        var i = this;
        i.nodes[t] &&
          database.loadNode(t, function (e, o) {
            i.nodes && i.nodes[t] && ((i.nodes[t] = o), i.updateUI());
          });
      }),
      (Ko.prototype.databaseRemove = function (e, t) {
        var i = this;
        i.nodes[t] && (delete i.nodes[t], i.updateUI());
      }),
      (Ko.prototype.databaseCreate = function (e, t, i) {
        var o = this;
        database.loadNode(i, function (e, t) {
          t && ((o.nodes[i] = t), o.updateUI());
        });
      }),
      (Ko.prototype.load = function () {
        var e = this,
          t = this.days,
          i = this.start,
          o = new Date(i.getFullYear(), i.getMonth(), i.getDate() + t);
        database.loadCalendarFromTo(i, o, function (t, i) {
          e.updateRefs(i || []);
        });
      }),
      (Ko.prototype.updateRefs = function (e) {
        var t = this,
          i = {},
          o = ((e = Q.uniq(e)), this.calendar.getDependencies());
        database.loadNodes2(e, o, function () {
          database.filterReadable(void 0, e, function (e) {
            for (var o = 0; o < e.length; o++) {
              var a = e[o],
                n = database.loadNodeSync(a);
              n && (i[a] = n);
            }
            (t.nodes = i), t.updateUI();
          });
        });
      }),
      (Ko.prototype.updateLabel = function () {
        this.$label.text(util.formatLocaleDate(this.start));
      }),
      (Ko.prototype.updateUI = async function () {
        if (!this.visible) return;
        ui.fullWidth < 750
          ? (this.$controls.hide(), this.$controlsSmall.show())
          : (this.$controls.show(),
            this.$controlsSmall.hide(),
            (this.smallContextMenuTarget = null)),
          n.a.render(
            r.a.createElement(Yo, {
              show: null !== this.smallContextMenuTarget,
              clickTarget: this.smallContextMenuTarget,
              items: [
                {
                  text: locale.sevenDays,
                  onClick: () => {
                    this.setDays(7), this.load();
                  },
                  isSelected: 7 === this.days,
                },
                {
                  text: locale.fiveDays,
                  onClick: () => {
                    this.setDays(5), this.load();
                  },
                  isSelected: 5 === this.days,
                },
                {
                  text: locale.oneDay,
                  onClick: () => {
                    this.setDays(1), this.load();
                  },
                  isSelected: 1 === this.days,
                },
                {
                  text: locale.showOnlyWorkHours,
                  onClick: () => {
                    this.setShowFullDay(!this.showFullDay), this.load();
                  },
                  isSelected: this.showFullDay,
                },
              ],
              onClick: () => {
                (this.smallContextMenuTarget = null), this.updateUI();
              },
            }),
            this.$controlsSmall[0]
          );
        const e = Math.floor(
            parseInt(
              NinoxDocumentInteraction.getUserDefault("ui.calendar.dayStart") ||
                "28800000"
            ) / 36e5
          ),
          t = Math.ceil(
            parseInt(
              NinoxDocumentInteraction.getUserDefault("ui.calendar.dayEnd") ||
                "64800000"
            ) / 36e5
          ),
          i = this.$body;
        i.empty();
        const o = this.start,
          a = this.days,
          s = this.showFullDay ? 0 : e,
          l = this.showFullDay ? 24 : t,
          c = 32,
          d = this.el.width(),
          u = this.el.height(),
          p = Math.max(Math.floor((d - 64) / a), c),
          h = d - p * a,
          m = this.$head.empty();
        $('<div class="calendar-week-head">')
          .appendTo(m)
          .css({
            position: "absolute",
            width: h,
            top: 0,
            left: 0,
            "max-height": u + "px",
          });
        const f = [];
        for (let e = 0; e < a; e++) {
          const t = new Date(o.getFullYear(), o.getMonth(), o.getDate() + e),
            i = $("<div>");
          $('<div class="calendar-week-head">')
            .appendTo(m)
            .css({
              position: "absolute",
              width: p - 1,
              top: 0,
              left: h + e * p,
              "max-height": u + "px",
            })
            .append(
              $("<div>").text(
                locale.dayNames[t.getDay()] + " " + t.getDate() + "."
              )
            )
            .append(i),
            f.push({
              date: t,
              begin: t.getTime(),
              left: h + e * p,
              width: p,
              boxes: [],
              $full: i,
            });
        }
        const g = (this.$hours = $('<div class="calendar-week-hours">')
          .appendTo(this.$body)
          .css({ position: "absolute", width: h + 1, top: 0, left: 0 }));
        for (let e = s; e < l; e++) {
          const t = e === s ? "" : (e < 10 ? "0" : "") + e + ":00";
          $('<div class="calendar-week-hour">').text(t).appendTo(g);
        }
        for (let o = 0; o < a; o++) {
          const a = f[o],
            n = $('<div class="calendar-week-col">')
              .appendTo(i)
              .css({
                position: "absolute",
                width: p - 1,
                top: 0,
                left: h + o * p,
              });
          for (let i = s; i < l; i++) {
            const o = $('<div class="calendar-week-cell">')
              .appendTo(n)
              .data("time", a.begin + i * Go)
              .addClass(
                i < e
                  ? "calendar-week-cell-early"
                  : i >= t
                  ? "calendar-week-cell-late"
                  : "calendar-week-cell-normal"
              );
            (a.date.getDay() + 6) % 7 > 4 &&
              o.addClass("calendar-week-cell-weekend");
          }
        }
        for (const e of Object.values(this.nodes)) {
          const t = e._id,
            i = database.typeOf(t);
          if (i)
            for (const n in i.fields)
              if (i.fields.hasOwnProperty(n)) {
                const s = i.fields[n];
                if (s.dateCalendar)
                  if ("date" === s.base || "datx" === s.base) {
                    const r = e[n];
                    if (r) {
                      const n = new Date(r);
                      "datx" === s.base &&
                        (n = new Date(
                          n.getUTCFullYear(),
                          n.getUTCMonth(),
                          n.getUTCDate()
                        )),
                        s.dateYearly && n.setYear(o.getFullYear());
                      const l = Math.floor((n.getTime() - f[0].begin) / Xo);
                      if (l >= 0 && l < a) {
                        const o = f[l],
                          a = $('<div class="calendar-week-full-box">')
                            .data("nid", t)
                            .appendTo(o.$full),
                          n = s.dateCalendarFormatExp;
                        if (n) {
                          const i = await n
                            .promise(database, e)
                            .catch(() => {});
                          null != i
                            ? "styled" === n.returnType.base
                              ? (a.html(
                                  (i.icon
                                    ? '<div class="choice-icon ic ic-' +
                                      i.icon +
                                      '"></div>'
                                    : "") +
                                    '<span style="color:' +
                                    (i.color || "") +
                                    '">' +
                                    htmlEscape(i.text) +
                                    "</span>"
                                ),
                                a.css(
                                  "background-color",
                                  i.background || s.dateCalendarColor || ""
                                ))
                              : "choice" === n.returnType.base ||
                                "dchoice" === n.returnType.base
                              ? n.returnType.loadValue(t, i, (e) => {
                                  e
                                    ? (a.html(
                                        (e.icon
                                          ? '<div class="choice-icon ic ic-' +
                                            e.icon +
                                            '"></div>'
                                          : "") +
                                          '<span style="color:' +
                                          (e.textColor || "") +
                                          '">' +
                                          htmlEscape(e.caption) +
                                          "</span>"
                                      ),
                                      a.css(
                                        "background-color",
                                        e.color || s.dateCalendarColor || ""
                                      ))
                                    : a.css(
                                        "background-color",
                                        s.dateCalendarColor || ""
                                      );
                                })
                              : "icon" === n.returnType.base
                              ? a.html(
                                  '<div class="choice-icon ic ic-' +
                                    i +
                                    '"></div>'
                                )
                              : "color" === n.returnType.base
                              ? a.css(
                                  "background-color",
                                  color || s.dateCalendarColor || ""
                                )
                              : (a.text(n.returnType.format(i)),
                                a.css(
                                  "background-color",
                                  s.dateCalendarColor || ""
                                ))
                            : (a.text(""),
                              a.css(
                                "background-color",
                                s.dateCalendarColor || ""
                              ));
                        } else
                          a.text(i.caption + ": " + i.format(e)),
                            a.css(
                              "background-color",
                              s.dateCalendarColor || ""
                            );
                      }
                    }
                  } else if ("appointment" === s.base) {
                    const o = e[n];
                    if (o) {
                      const a = o.split("/"),
                        n = parseInt(a[0]),
                        r = parseInt(a[1]),
                        l = n + r;
                      if (!isNaN(n) && !isNaN(r)) {
                        let o = Math.floor((n - f[0].begin) / Xo),
                          a = Math.floor((l - f[0].begin) / Xo);
                        if (
                          (o < 0 && (o = 0),
                          a >= f.length && (a = f.length - 1),
                          o < f.length && a >= 0)
                        )
                          for (let r = o; r <= a; r++) {
                            const o = f[r],
                              a = Math.max(n, o.begin),
                              c = Math.min(o.begin + Xo, l),
                              d = $('<div class="calendar-week-box">').data(
                                "nid",
                                t
                              ),
                              u = s.dateCalendarFormatExp;
                            u
                              ? u.evaluate(database, e, (t, i) => {
                                  null != i
                                    ? "styled" === u.returnType.base
                                      ? (d.html(
                                          (i.icon
                                            ? '<div class="choice-icon ic ic-' +
                                              i.icon +
                                              '"></div>'
                                            : "") +
                                            '<span style="color:' +
                                            (i.color || "") +
                                            '">' +
                                            htmlEscape(i.text) +
                                            "</span>"
                                        ),
                                        d.css(
                                          "background-color",
                                          i.background ||
                                            s.dateCalendarColor ||
                                            ""
                                        ))
                                      : "choice" === u.returnType.base ||
                                        "dchoice" === u.returnType.base
                                      ? u.returnType.loadValue(
                                          e._id,
                                          i,
                                          (e) => {
                                            e
                                              ? (d.html(
                                                  (e.icon
                                                    ? '<div class="choice-icon ic ic-' +
                                                      e.icon +
                                                      '"></div>'
                                                    : "") +
                                                    '<span style="color:' +
                                                    (e.textColor || "") +
                                                    '">' +
                                                    htmlEscape(e.caption) +
                                                    "</span>"
                                                ),
                                                d.css(
                                                  "background-color",
                                                  e.color ||
                                                    s.dateCalendarColor ||
                                                    ""
                                                ))
                                              : d.css(
                                                  "background-color",
                                                  s.dateCalendarColor || ""
                                                );
                                          }
                                        )
                                      : "icon" === u.returnType.base
                                      ? (d.html(
                                          '<div class="choice-icon ic ic-' +
                                            i +
                                            '"></div>'
                                        ),
                                        d.css(
                                          "background-color",
                                          s.dateCalendarColor || ""
                                        ))
                                      : "color" === u.returnType.base
                                      ? d.css(
                                          "background-color",
                                          i || s.dateCalendarColor || ""
                                        )
                                      : (d.text(u.returnType.format(i)),
                                        d.css(
                                          "background-color",
                                          s.dateCalendarColor || ""
                                        ))
                                    : (d.text(""),
                                      d.css(
                                        "background-color",
                                        s.dateCalendarColor || ""
                                      ));
                                })
                              : (d.text(i.caption + ": " + i.format(e)),
                                d.css(
                                  "background-color",
                                  s.dateCalendarColor || ""
                                ));
                            const p = {
                              $box: d,
                              begin: a,
                              end: c,
                              left: 0,
                              right: 0,
                              width: 0,
                              prev: null,
                              next: null,
                            };
                            o.boxes.push(p);
                          }
                      }
                    }
                  }
              }
        }
        for (let e = 0; e < f.length; e++) {
          const t = f[e],
            o = t.boxes;
          o.sort(function (e, t) {
            return e.begin - t.begin;
          });
          for (let e = 0; e < o.length; e++) {
            const t = o[e];
            if (e < o.length - 1) {
              const i = o[e + 1];
              t.end > i.begin && (t.next = i);
            }
            for (let i = e - 1; i >= 0; i--) {
              const e = o[i];
              if (e.end > t.begin) {
                t.prev = e;
                break;
              }
            }
          }
          for (let e = 0; e < o.length; e++) {
            const i = o[e];
            i.prev ? (i.left = i.prev.right) : (i.left = 0);
            let a = 0,
              n = i;
            for (; (n = n.next); ) a++;
            (i.width = Math.floor((t.width - i.left) / (a + 1))),
              (i.right = i.left + i.width);
          }
          for (let e = 0; e < o.length; e++) {
            const a = o[e];
            a.$box
              .css({
                left: t.left + a.left,
                width: a.width + 1,
                top: Math.floor((64 * (a.begin - t.begin)) / Go - 64 * s) - 1,
                height: Math.ceil((64 * (a.end - a.begin)) / Go) + 1,
              })
              .appendTo(i);
          }
        }
      }),
      (Ko.prototype.setShowFullDay = function (e) {
        e
          ? ((this.showFullDay = !0), this.$showFullDay.removeClass("selected"))
          : ((this.showFullDay = !1), this.$showFullDay.addClass("selected")),
          NinoxDocumentInteraction.setUserDefault(
            "ui.calendarWeekFullDay",
            e ? "true" : "false"
          );
      }),
      (Ko.prototype.setDays = function (e) {
        if (e !== this.days) {
          if (
            (this.$show7Days.toggleClass("selected", 7 == e),
            this.$show5Days.toggleClass("selected", 5 == e),
            this.$show1Days.toggleClass("selected", 1 == e),
            (this.days = e),
            e > 1)
          ) {
            var t = this.start,
              i = t.getDay(),
              o = locale.firstDayOfWeek,
              a =
                7 === e
                  ? t.getDate() - i + o - (i < o ? 7 : 0)
                  : t.getDate() - i + 1 - (i < o ? 7 : 0);
            this.start = new Date(t.getFullYear(), t.getMonth(), a);
          }
          NinoxDocumentInteraction.setUserDefault(
            "ui.calendarWeekDays",
            String(e)
          ),
            this.calendar.dateChanged(this.start);
        }
      }),
      (Ko.prototype.setDate = function (e, t) {
        var i = this.days;
        if (i > 1) {
          var o = e,
            a = o.getDay(),
            n = locale.firstDayOfWeek,
            s =
              7 === i
                ? o.getDate() - a + n - (a < n ? 7 : 0)
                : o.getDate() - a + 1 - (a < n ? 7 : 0);
          this.start = new Date(o.getFullYear(), o.getMonth(), s);
        } else
          this.start = new Date(e.getFullYear(), e.getMonth(), e.getDate());
        this.updateLabel(),
          this.load(),
          !1 !== t && this.calendar.dateChanged(this.start);
      }),
      (Ko.prototype.getNavigationState = function () {
        return {
          year: this.start.getFullYear(),
          month: this.start.getMonth(),
          day: this.start.getDate(),
          days: this.days,
          showFullDay: this.showFullDay,
        };
      }),
      (Ko.prototype.setNavigationState = function (e) {
        var t = new Date();
        this.start = new Date(
          null != e.year ? e.year : t.getFullYear(),
          null != e.month ? e.month : t.getMonth(),
          null != e.day ? e.day : t.getDate()
        );
        var i = 5;
        if (null != e.days) i = e.days;
        else {
          var o = NinoxDocumentInteraction.getUserDefault(
            "ui.calendarWeekDays"
          );
          o && (i = parseInt(o));
        }
        this.setDays(i),
          this.setShowFullDay(
            null != e.showFullDay
              ? e.showFullDay
              : "true" ===
                  NinoxDocumentInteraction.getUserDefault(
                    "ui.calendarWeekFullDay"
                  )
          ),
          this.load(),
          this.calendar.dateChanged(this.start);
      }),
      (Ko.prototype.popupMiniCalendar = function () {
        var e = this;
        new aa({
          year: e.start.getFullYear(),
          selectedDay: e.start,
          selectDay: function (t, i, o) {
            e.setDate(new Date(t, i, o));
          },
        });
      }),
      (Qo.prototype.destroy = function () {
        this.hide(), this.controls.remove(), this.el.remove();
      }),
      (Qo.prototype.show = function (e) {
        this.visible ||
          ((this.visible = !0),
          e && this.setDate(e.getFullYear(), e.getMonth(), !1),
          this.controls.appendTo(ui.$menuCenter),
          this.el.appendTo(ui.$body),
          this.updateUI(),
          database.on("schema", void 0, this.schemaChanged, this),
          database.onChange(void 0, this.updateUI, this),
          database.onCreate(void 0, this.updateUI, this),
          database.onRemove(void 0, this.updateUI, this));
      }),
      (Qo.prototype.hide = function () {
        this.visible &&
          ((this.visible = !1),
          database.off("schema", void 0, this.schemaChanged, this),
          database.offChange(void 0, this.updateUI, this),
          database.offCreate(void 0, this.updateUI, this),
          database.offRemove(void 0, this.updateUI, this),
          this.controls.detach(),
          this.el.detach());
      }),
      (Qo.prototype.schemaChanged = function (e, t, i) {
        this.updateUI();
      }),
      (Qo.prototype.bodyResized = function () {
        this.updateUI();
      }),
      (Qo.prototype.onchange = function () {
        this.updateUI();
      }),
      (Qo.prototype.setDate = function (e, t, i) {
        if (e !== this.year || t !== this.month) {
          var o = new Date();
          this.today = new Date(o.getFullYear(), o.getMonth(), o.getDate());
          var a = new Date(e, t, 1);
          (this.week = util.getWeek(a)),
            (this.date = a),
            (this.year = a.getFullYear()),
            (this.month = a.getMonth());
          var n = a.getDay(),
            s = locale.firstDayOfWeek,
            r = n >= s ? s - n + 1 : s - n - 6;
          (this.startDate = new Date(a.getFullYear(), a.getMonth(), r)),
            !1 !== i && this.calendar.dateChanged(new Date(e, t, 1));
        }
      }),
      (Qo.prototype.nextMonth = function () {
        this.month < 11
          ? (this.setDate(this.year, this.month + 1), this.updateUI())
          : (this.setDate(this.year + 1, 0), this.updateUI());
      }),
      (Qo.prototype.prevMonth = function () {
        this.month > 0
          ? (this.setDate(this.year, this.month - 1), this.updateUI())
          : (this.setDate(this.year - 1, 11), this.updateUI());
      }),
      (Qo.prototype.nextYear = function () {
        this.setDate(this.year + 1, this.month), this.updateUI();
      }),
      (Qo.prototype.prevYear = function () {
        this.setDate(this.year - 1, this.month), this.updateUI();
      }),
      (Qo.prototype.getDate = function (e) {
        return new Date(
          this.startDate.getFullYear(),
          this.startDate.getMonth(),
          this.startDate.getDate() + e
        );
      }),
      (Qo.prototype.getIndex = function (e) {
        var t = this.startDate,
          i = e;
        return Math.floor(
          (i - t) / 864e5 -
            (i.getTimezoneOffset() - t.getTimezoneOffset()) / 1440
        );
      }),
      (Qo.prototype.updateUI = function () {
        if (this.visible) {
          var e = this,
            t = new Date(e.year, e.month, 1),
            i = new Date(e.year, e.month + 1, 1);
          database.loadCalendarFromTo(t, i, function (t, i) {
            var o = {},
              a = [];
            if (i)
              for (var n = 0; n < i.length; n++) {
                var s = i[n];
                o[s] || (a.push(s), (o[s] = !0));
              }
            e.updateRefs(a);
          });
        }
      }),
      (Qo.prototype.updateRefs = function (e) {
        var t = this,
          i = this.calendar.getDependencies();
        database.loadNodes2(e, i, function () {
          database.filterReadable(void 0, e, function (e) {
            t.label.text(
              locale.monthNames[t.date.getMonth()] + " " + t.date.getFullYear()
            );
            for (var i = 0; i < t.cells.length; i++) t.cells[i].updateUI();
            for (i = 0; i < 6; i++) {
              let e = new Date(t.date.getTime());
              e.setDate(e.getDate() + 7 * i),
                t.tds[i].text(String(util.moment(e).isoWeek()));
            }
            t.cells[35].date.getMonth() !== t.month
              ? t.trs[5].hide()
              : t.trs[5].show(),
              Q.each(e, function (e) {
                var i = database.loadNodeSync(e);
                if (i) {
                  var o = database.typeOf(e);
                  if (o)
                    for (var a in o.fields)
                      if (o.fields.hasOwnProperty(a)) {
                        var n = o.fields[a];
                        if (n.dateCalendar)
                          if ("date" === n.base) {
                            if ("number" == typeof (r = i[a]) && !isNaN(r)) {
                              var s = new Date(r);
                              n.dateYearly && s.setYear(t.year),
                                (u = t.getIndex(s)) >= 0 &&
                                  u < 42 &&
                                  t.cells[u].addRef(o, n, i);
                            }
                          } else if ("datx" === n.base) {
                            if ("number" == typeof (r = i[a]) && !isNaN(r)) {
                              s = new Date(r);
                              (s = new Date(
                                s.getUTCFullYear(),
                                s.getUTCMonth(),
                                s.getUTCDate()
                              )),
                                n.dateYearly && s.setYear(t.year),
                                (u = t.getIndex(s)) >= 0 &&
                                  u < 42 &&
                                  t.cells[u].addRef(o, n, i);
                            }
                          } else if ("appointment" === n.base) {
                            var r;
                            if ((r = i[a])) {
                              var l = r.split("/");
                              if (2 === l.length) {
                                var c = parseInt(l[0]),
                                  d = c + parseInt(l[1]);
                                for (s = new Date(c); ; ) {
                                  var u;
                                  if (
                                    ((u = t.getIndex(s)) >= 0 &&
                                      u < 42 &&
                                      t.cells[u].addRef(o, n, i),
                                    (s = new Date(
                                      s.getFullYear(),
                                      s.getMonth(),
                                      s.getDate() + 1
                                    )).getTime() > d)
                                  )
                                    break;
                                }
                              }
                            }
                          }
                      }
                }
              });
          });
        });
      }),
      (ea.prototype.updateUI = function () {
        (this.refs = {}),
          this.td.empty(),
          this.td.attr(
            "class",
            "calendar-day-" + ((this.index + locale.firstDayOfWeek) % 7)
          ),
          (this.date = this.calendar.getDate(this.index)),
          (this.label = $("<label>")
            .text(this.date.getDate())
            .appendTo($('<div class="placeholder">').appendTo(this.td))),
          (this.ul = $("<ul>").appendTo(this.td)),
          this.date.toString() == this.calendar.today.toString()
            ? this.td.addClass("calendar-today")
            : this.date.getMonth() !== this.calendar.month &&
              this.td.addClass("calendar-other-month");
      }),
      (ea.prototype.addRef = function (e, t, i) {
        this.refs[i._id] = !0;
        var o = $("<li>")
            .appendTo(this.ul)
            .touch(function (e) {
              return new No.PopupEditor(i._id, { duplicate: !0 }), !1;
            }),
          a = t.dateCalendarFormatExp;
        a
          ? a.evaluate(database, i, function (n, s) {
              if (n) o.text(e.caption + ": " + e.format(i));
              else if (null != s)
                switch (a.returnType.base) {
                  case "choice":
                  case "dchoice":
                    a.returnType.loadValue(i._id, s, (e) => {
                      e
                        ? (o.html(
                            (e.icon
                              ? '<div class="choice-icon ic ic-' +
                                e.icon +
                                '"></div>'
                              : "") +
                              '<span style="color:' +
                              (e.textColor || "") +
                              '">' +
                              htmlEscape(e.caption) +
                              "</span>"
                          ),
                          o.css(
                            "background-color",
                            e.color || t.dateCalendarColor || ""
                          ))
                        : o.css("background-color", t.dateCalendarColor || "");
                    });
                    break;
                  case "styled":
                    o.html(
                      (s.icon
                        ? '<div class="choice-icon ic ic-' + s.icon + '"></div>'
                        : "") +
                        '<span style="color:' +
                        (s.color || "") +
                        '">' +
                        htmlEscape(s.text) +
                        "</span>"
                    ),
                      o.css(
                        "background-color",
                        s.background || t.dateCalendarColor || ""
                      );
                    break;
                  case "color":
                    o.css(
                      "background-color",
                      color || t.dateCalendarColor || ""
                    );
                    break;
                  case "icon":
                    o.html('<div class="choice-icon ic ic-' + s + '"></div>'),
                      o.css("background-color", t.dateCalendarColor || "");
                    break;
                  default:
                    o.text(a.returnType.format(s)),
                      o.css("background-color", t.dateCalendarColor || "");
                }
              else o.css("background-color", t.dateCalendarColor || "");
            })
          : (o.text(e.caption + ": " + e.format(i)),
            o.css("background-color", t.dateCalendarColor || ""));
      }),
      (Qo.prototype.getNavigationState = function () {
        return { year: this.year, month: this.month };
      }),
      (Qo.prototype.setNavigationState = function (e) {
        var t = new Date();
        this.setDate(
          null != e.year ? e.year : t.getFullYear(),
          null != e.month ? e.month : t.getMonth()
        ),
          this.updateUI();
      }),
      (Qo.prototype.popupMiniCalendar = function () {
        var e = this;
        new aa({
          year: this.year,
          selectMonth: function (t, i) {
            e.setDate(t, i), e.updateUI();
          },
        });
      }),
      (oa.prototype.showMonth = function () {
        this.tabMonth.addClass("selected"),
          this.tabWeek.removeClass("selected"),
          this.calendarMonth.show(this.currentDate),
          this.calendarWeek.hide(),
          (this.currentTab = this.calendarMonth),
          NinoxDocumentInteraction.setUserDefault("ui.calendarMode", "month");
      }),
      (oa.prototype.showWeek = function () {
        this.tabMonth.removeClass("selected"),
          this.tabWeek.addClass("selected"),
          this.calendarMonth.hide(),
          this.calendarWeek.show(this.currentDate),
          (this.currentTab = this.calendarWeek),
          NinoxDocumentInteraction.setUserDefault("ui.calendarMode", "week");
      }),
      (oa.prototype.dateChanged = function (e) {
        this.currentDate = e;
      }),
      (oa.prototype.destroy = function () {
        this.calendarMonth.destroy(),
          this.calendarWeek.destroy(),
          this.tabs.remove();
      }),
      (oa.prototype.show = function () {
        this.visible ||
          ((this.visible = !0),
          this.tabs.appendTo(ui.$header),
          this.currentTab.show());
      }),
      (oa.prototype.hide = function () {
        this.visible &&
          ((this.visible = !1), this.currentTab.hide(), this.tabs.detach());
      }),
      (oa.prototype.bodyResized = function () {
        this.currentTab.bodyResized();
      }),
      (oa.prototype.getDependencies = function () {
        var e = {},
          t = database.schema.types;
        for (var i in t)
          if (t.hasOwnProperty(i)) {
            var o = t[i].fields;
            for (var a in o) {
              var n = o[a];
              n.dateCalendar &&
                n.dateCalendarFormatExp &&
                (e = queries.extendDependencies(
                  n.dateCalendarFormatExp.dependencies
                ));
            }
          }
        return e;
      }),
      (oa.prototype.getNavigationState = function () {
        return {
          base: this.base,
          mode: this.currentTab === this.calendarMonth ? "month" : "week",
          calendarMonth: this.calendarMonth.getNavigationState(),
          calendarWeek: this.calendarWeek.getNavigationState(),
        };
      }),
      (oa.prototype.setNavigationState = function (e) {
        this.calendarMonth.setNavigationState(e.calendarMonth || {}),
          this.calendarWeek.setNavigationState(e.calendarWeek || {});
        const t = H(),
          i =
            "month" === t.vid
              ? "month"
              : "week" === t.vid
              ? "week"
              : e.mode || "week";
        i !== t.vid && A(ia({}, t, { vid: i })),
          "month" === i ? this.showMonth() : this.showWeek();
      }),
      (oa.prototype.updateUI = function () {
        this.visible && this.currentTab && this.currentTab.updateUI();
      }),
      (oa.prototype.popupSync = function () {
        var e = this;
        $.loading(!0),
          NinoxCalendar.enableCalendarSync(function (t, i) {
            return (
              $.loading(!1),
              t
                ? callback(t)
                : i
                ? void e.showCalendarSyncOptions()
                : callback(locale.noCalendarAccess)
            );
          });
      }),
      (oa.prototype.showCalendarSyncOptions = async function () {
        for (
          var e,
            t = this,
            i = "db." + database.getUniqueID(),
            o =
              "true" ===
              NinoxDocumentInteraction.getUserDefault(
                i + ".calendar.syncEnabled"
              ),
            a = NinoxDocumentInteraction.getUserDefault(
              i + ".calendar.syncStorage"
            ),
            n = parseInt(
              NinoxDocumentInteraction.getUserDefault(
                i + ".calendar.syncBeyond"
              ) || "1"
            ),
            s = parseInt(
              NinoxDocumentInteraction.getUserDefault(
                i + ".calendar.syncAhead"
              ) || "3"
            ),
            r = parseInt(
              NinoxDocumentInteraction.getUserDefault("ui.calendar.dayStart") ||
                "28800000"
            ),
            l = parseInt(
              NinoxDocumentInteraction.getUserDefault("ui.calendar.dayEnd") ||
                "64800000"
            ),
            c = util.localeSortBy(await NinoxCalendar.getSources(), "title"),
            d = {},
            u = 0;
          u < c.length;
          u++
        ) {
          var p = c[u];
          (d[p.id] = { id: p.id, caption: p.title, order: u }),
            e ||
              (!/icloud/i.test(p.title) && !/^androidlocal$/.test(p.id)) ||
              (e = p.id);
        }
        a || (a = e);
        var h = $.popdown({
            cls: "small",
            head: locale.calendarOptions,
            closable: !1,
            buttons: [
              "cancel",
              "-",
              { caption: locale.okay, cls: "blue", click: k },
            ],
          }),
          m = new util.SimpleModel(
            new schemas.TBoolean(void 0, void 0, {
              caption: locale.calendarSyncEnabled,
              required: !0,
              width: 2,
              booleanRenderer: "switch",
            })
          );
        (m.value = o), m.on("update", C);
        new ct.a(this, m, h.$content);
        var f = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.calendarSyncLocation,
            required: !0,
            width: 2,
            values: d,
          })
        );
        f.value = a;
        var g = new ct.a(this, f, h.$content),
          v = new util.SimpleModel(
            new schemas.TNumber(void 0, void 0, {
              caption: locale.calendarSyncBeyond,
              required: !0,
              width: 2,
            })
          );
        v.value = n;
        var b = new ct.a(this, v, h.$content),
          y = new util.SimpleModel(
            new schemas.TNumber(void 0, void 0, {
              caption: locale.calendarSyncAhead,
              required: !0,
              width: 2,
            })
          );
        y.value = s;
        var w = new ct.a(this, y, h.$content);
        $("<hr>").appendTo(h.$content),
          $('<div class="nx-sub-head">')
            .text(locale.defineWorkHours)
            .appendTo(h.$content);
        var x = new util.SimpleModel(
          new schemas.TTime(void 0, void 0, {
            caption: locale.calendarWorkStart,
            required: !0,
            width: 2,
          })
        );
        x.value = r;
        new ct.a(this, x, h.$content);
        var T = new util.SimpleModel(
          new schemas.TTime(void 0, void 0, {
            caption: locale.calendarWorkEnd,
            required: !0,
            width: 2,
          })
        );
        T.value = l;
        new ct.a(this, T, h.$content);
        function C() {
          var e = m.value;
          g.el.css("display", e ? "" : "none"),
            w.el.css("display", e ? "" : "none"),
            b.el.css("display", e ? "" : "none");
        }
        function k() {
          var e = parseInt(v.value);
          if (!(e >= 0)) return $.alert("Sync beyond must be greater than 0");
          if (!(e <= 12))
            return $.alert("Sync beyond cannot be greater than 12");
          var o = parseInt(y.value);
          if (!(o >= 1)) return $.alert("Sync ahead must be greater than 0");
          if (!(o <= 12))
            return $.alert("Sync ahead cannot be greater than 12");
          var a = x.value;
          if (!(a >= 0))
            return $.alert("Day start must be greater or equal to 00:00");
          if (!(a <= 864e5))
            return $.alert("Day start must be smaller or eqaal to 24:00");
          var n = T.value;
          return n >= 0
            ? n <= 864e5
              ? a < n
                ? (NinoxDocumentInteraction.setUserDefault(
                    i + ".calendar.syncEnabled",
                    String(m.value)
                  ),
                  NinoxDocumentInteraction.setUserDefault(
                    i + ".calendar.syncStorage",
                    String(f.value || "")
                  ),
                  NinoxDocumentInteraction.setUserDefault(
                    i + ".calendar.syncBeyond",
                    String(e)
                  ),
                  NinoxDocumentInteraction.setUserDefault(
                    i + ".calendar.syncAhead",
                    String(o)
                  ),
                  NinoxDocumentInteraction.setUserDefault(
                    "ui.calendar.dayStart",
                    String(a)
                  ),
                  NinoxDocumentInteraction.setUserDefault(
                    "ui.calendar.dayEnd",
                    String(n)
                  ),
                  h.close(),
                  database.calendarSync &&
                    database.calendarSync.settingsChanged(),
                  void t.updateUI())
                : $.alert("Day start must be smaller than day end.")
              : $.alert("Day end must be smaller or eqaal to 24:00")
            : $.alert("Day end must be greater or equal to 00:00");
        }
        C();
      });
    class ra {
      constructor() {
        Ie()(this, "visible", void 0),
          Ie()(this, "el", void 0),
          Ie()(this, "$controls", void 0),
          Ie()(this, "$search", void 0),
          Ie()(this, "$searchContainer", void 0),
          Ie()(this, "$searchText", void 0),
          Ie()(this, "$searchCancel", void 0),
          Ie()(this, "$searchPlaceholder", void 0),
          Ie()(this, "recordController", void 0),
          Ie()(this, "keydown", void 0),
          Ie()(this, "base", void 0);
        const e = this;
        (this.base = "search"),
          (this.visible = !1),
          (this.el = $('<div class="search-page">').click(r)),
          (this.$controls = $(
            '<div class="hud-menu-group" style="margin-left:12px">'
          )),
          (this.$searchContainer = $('<div class="hud-menu-search">').appendTo(
            this.$controls
          )),
          (this.$searchPlaceholder = $(
            '<div class="hud-menu-search-placeholder">'
          ).appendTo(this.$searchContainer)),
          $(
            '<div class="i-24-16 i-light-grey i-search" style="opacity: 0.5;margin-left: 3px;">'
          ).appendTo(this.$searchPlaceholder),
          (this.$searchText = $(
            '<div style="overflow: hidden;text-overflow: ellipsis;white-space: nowrap;">'
          )
            .text(Object(_e.a)().FindIn$.replace("$", database.name))
            .appendTo(this.$searchPlaceholder)),
          (this.$search = $(
            '<input type="text" class="hud-menu-search-input" style="display:none">'
          )
            .appendTo(this.$searchContainer)
            .keyup(x)
            .change(x)),
          (this.$searchCancel = $(
            '<div class="i-32-16 i-light-grey i-close" style="margin-left:-32px;margin-top:4px;display:none">'
          ).appendTo(
            $(
              '<div style="width:0;flex:0 0 0px;-webkit-flex:0 0 0px">'
            ).appendTo(this.$searchContainer)
          )).touch(() => {
            this.$search.val(""), x();
          }),
          this.$searchPlaceholder.touch($.proxy(this.focus, this)),
          this.$search.blur(() => {
            this.$searchPlaceholder.css("display", ""),
              this.$search.css("display", "none");
          }),
          (this.recordController = {
            hasNextRecord: () => !0,
            nextRecord: f,
            hasPrevRecord: () => !0,
            prevRecord: g,
            hasAddRecord: () => {
              if (!i) return !1;
              const e = database.typeOf(i);
              return !!e && database.canCreate(e);
            },
            addRecord: () => {
              if (!i) return;
              const e = database.typeOf(i);
              e &&
                database.canCreate(e) &&
                database.create(e, {}, (e, t) => {
                  if (e) return $.alert(e);
                  c(), t && d(t._id);
                });
            },
            hasDuplicateRecord: () => {
              if (!i) return !1;
              const e = database.typeOf(i);
              return !!e && database.canCreate(e);
            },
            duplicateRecord: p,
            hasRemoveRecord: () => {
              if (!i) return !1;
              const e = database.typeOf(i);
              return !!e && database.canDelete(e);
            },
            removeRecord: h,
            hasPrintRecord: () => !(!i || !1 === database.authorizationPrint),
            printRecord: m,
          }),
          (this.keydown = (e) => {
            switch (e.which) {
              case 27:
                c();
                break;
              case 38:
                g();
                break;
              case 40:
                f();
            }
          });
        let t = null,
          i = null,
          o = "",
          a = null,
          n = 0,
          s = {};
        function r(e) {
          const i = $(e.target).closest("tr");
          t && t.attr("nid") === i.attr("nid") ? l(void 0) : l(i);
        }
        function l(e) {
          if ((t && (t.removeClass("selected"), (t = null)), e)) {
            const i = e.attr("nid");
            i ? (e.addClass("selected"), (t = e), d(i)) : u();
          } else u();
          ui.recordNavigation.updateUI();
        }
        function c() {
          l(void 0);
        }
        function d(e) {
          (i = e),
            ui.sideEditor.open(
              i,
              { prev: g, next: f, first: v, last: y, close: c, duplicate: p },
              !1
            );
        }
        function u() {
          (i = null), ui.sideEditor.close();
        }
        function p() {
          i &&
            database.duplicate(i, (e, t) => {
              if (e) return $.alert(e);
              c(), d(t);
            });
        }
        function h() {
          const e = i;
          if (!e) return;
          const t = database.typeOf(e);
          t &&
            database.canDelete(t) &&
            $.dialog({
              closable: !0,
              caption: Object(_e.a)().remove,
              message: Object(_e.a)().confirmRemove,
              buttons: [
                {
                  color: "red",
                  caption: Object(_e.a)().remove,
                  callback: () => {
                    $.loading(!0),
                      database.remove(e, (t) => {
                        if (($.loading(!1), t)) return $.alert(t);
                        w(e);
                      });
                  },
                },
              ],
            });
        }
        function m() {
          if (!1 === database.authorizationPrint) return;
          const e = i;
          e &&
            database.typeOf(e) &&
            (reports ? reports.openDesigner({ nid: e }) : Object(re.a)(e));
        }
        function f() {
          t && l(t.next());
        }
        function g() {
          t && l(t.prev());
        }
        function v() {
          if (t) {
            const e = t.siblings();
            e.length > 0 && l($(e[0]));
          }
        }
        function y() {
          if (t) {
            const e = t.siblings();
            e.length > 0 && l($(e[e.length - 1]));
          }
        }
        const w = (e) => {
          e === i && c();
          const t = b.schemas.RE_NID.exec(e);
          if (!t) return;
          const o = t[1],
            a = parseInt(t[2], 10),
            n = s[o];
          if (n) {
            const e = n.rids,
              t = e.indexOf(a);
            -1 !== t && e.splice(t, 1), k();
          }
        };
        function x() {
          const t = e.$search.val();
          e.$searchText
            .text(t || Object(_e.a)().FindIn$.replace("$", database.name))
            .css("color", t ? "" : "#7D8294"),
            e.$searchCancel.css("display", t ? "" : "none"),
            a && clearTimeout(a),
            (a = window.setTimeout(T, 200));
        }
        function T() {
          a = null;
          const t = e.$search.val().trim();
          t !== o && ((o = t), n++, C(n, t));
        }
        const C = (e, t) => {
          function i(t, i) {
            if (e !== n) return;
            s = {};
            const o = [];
            let a = {};
            function r() {
              for (const e in i)
                if (i.hasOwnProperty(e)) {
                  const t = i[e];
                  if (t.length) {
                    const i = database.schema.types[e];
                    if (i && database.canRead(i)) {
                      i.canReadExp &&
                        (a = b.queries.extendDependencies(
                          a,
                          i.canReadExp.dependencies
                        ));
                      const n = i.sorted,
                        r = [];
                      for (let t = 0; t < n.length && r.length < 8; t++) {
                        const i = n[t];
                        if (
                          ((i.isField && "file" !== i.base) || i.isReference) &&
                          database.canRead(i)
                        )
                          if ((r.push(i), "fn" === i.base && i.exp))
                            a = b.queries.extendDependencies(
                              a,
                              i.exp.dependencies
                            );
                          else if (i.isReference) {
                            const t = {};
                            (t[e] = i.id),
                              (a = b.queries.extendDependencies(a, t));
                          }
                      }
                      s[e] = { type: i, fields: r, rids: t };
                      for (const i of t) o.push(e + t);
                    }
                  }
                }
            }
            r(),
              database.loadNodes2(o, a, () => {
                k();
              });
          }
          t ? database.fastSearch(void 0, t, i) : ((s = {}), k());
        };
        async function k() {
          let t = "";
          for (const e in s)
            if (s.hasOwnProperty(e)) {
              const i = s[e],
                o = i.rids,
                a = i.type,
                n = a.canReadExp;
              o.sort((e, t) => e - t);
              const r = i.fields;
              (t += "<h1>" + htmlEscape(a.caption) + "</h1><table><thead><tr>"),
                (t +=
                  '<th style="position:sticky;top:-1px;background: white;">' +
                  htmlEscape(Object(_e.a)().id) +
                  "</th>");
              for (const e of r)
                t +=
                  '<th style="position:sticky;top:-1px;background: white;">' +
                  htmlEscape(e.caption) +
                  "</th>";
              t += "</tr></thead><tbody>";
              for (const i of o) {
                const o = e + i,
                  a = database.loadNodeSync(o);
                if (
                  a &&
                  (!n || (await n.promise(database, a).catch(() => {})))
                ) {
                  (t += '<tr nid="' + o + '">'),
                    (t += '<td style="text-align:right">' + i + "</td>");
                  for (const e of r)
                    if ("choice" === e.base || "dchoice" === e.base) {
                      const i = a[e.id],
                        n =
                          null == i
                            ? void 0
                            : await new Promise((t) => e.loadValue(o, i, t));
                      t += n
                        ? '<td style="text-align:' +
                          e.columnAlign +
                          '"><div class="multicombo-item" style="' +
                          (n.color ? "background-color:" + n.color : "") +
                          '">' +
                          (n.icon
                            ? '<div class="choice-symbol ic ic-' +
                              n.icon +
                              '"></div>'
                            : "") +
                          "<span>" +
                          htmlEscape(n.caption || "") +
                          "</span></div></td>"
                        : '<td style="text-align:' + e.columnAlign + '"></td>';
                    } else if ("multi" === e.base || "dmulti" === e.base) {
                      t += '<td style="text-align:' + e.columnAlign + '">';
                      const i = a[e.id];
                      if (i) {
                        const a = b.util.multiDecode(i);
                        if (a) {
                          const i = await new Promise((t) =>
                            e.loadValues(o, (e, i) => t(i || {}))
                          );
                          for (const e of a) {
                            const o = i[e];
                            o &&
                              (t +=
                                '<div class="multicombo-item" style="' +
                                (o.color ? "background-color:" + o.color : "") +
                                '">' +
                                (o.icon
                                  ? '<div class="choice-symbol ic ic-' +
                                    o.icon +
                                    '"></div>'
                                  : "") +
                                "<span>" +
                                htmlEscape(o.caption || "") +
                                "</span></div>");
                          }
                        }
                      }
                      t += "</td>";
                    } else {
                      let i = "";
                      if ("fn" === e.base) {
                        if (e.exp) {
                          const t = await e.exp
                            .promise(database, a)
                            .catch(() => {});
                          null == t ||
                            t._missingNodes ||
                            (i = e.exp.returnType.format(t));
                        }
                      } else if (e.isField) i = e.format(a[e.id]);
                      else if (e.isReference) {
                        const t = a[e.id];
                        if (t) {
                          const o = database.loadNodeSync(e.refTypeId + t);
                          i = e.refType.format(o);
                        }
                      }
                      t +=
                        '<td style="text-align:' +
                        e.columnAlign +
                        '">' +
                        htmlEscape(i) +
                        "</td>";
                    }
                  t += "</tr>";
                }
              }
              t += "</tbody></table>";
            }
          e.el.html(t);
        }
      }
      destroy() {
        this.hide(), this.el.remove();
      }
      show() {
        this.visible ||
          ((this.visible = !0),
          this.$controls.appendTo(ui.$menuCenter),
          this.el.appendTo(ui.$body),
          ui.recordNavigation.pushController(this.recordController),
          $.pushInputHandler(this),
          setTimeout($.proxy(this.focus, this), 100));
      }
      hide() {
        this.visible &&
          ((this.visible = !1),
          ui.recordNavigation.popController(this.recordController),
          $.popInputHandler(this),
          ui.sideEditor.close(),
          this.$search.blur(),
          this.$controls.detach(),
          this.el.detach());
      }
      setNavigationState() {
        "all" !== H().vid && A(sa({}, H(), { vid: "all" }));
      }
      getNavigationState() {
        return { base: this.base };
      }
      focus() {
        this.$searchPlaceholder.css("display", "none"),
          this.$search.css("display", ""),
          this.$search.focus();
      }
    }
    function la(e, t) {
      var i = this,
        o = database.typeOf(e);
      o &&
        ((this.isOpen = !0),
        (t = t || {}),
        (this.options = t),
        (this.nid = e),
        (this.children = []),
        (this.$backplane = $.backplane({ closable: !1 })),
        (this.el = $(
          '<div class="fullscreeneditor' +
            (!1 === t.controls ? " no-controls" : "") +
            '">'
        ).appendTo(this.$backplane)),
        (this.buttons = $('<div class="popupeditor2-buttons-left">')
          .appendTo(this.el)
          .button2({
            icon: "i-40-18 i-light-grey i-close",
            click: $.proxy(ui.closeFullscreen, ui),
          })),
        (this.tabsEl = $('<div class="popupeditor2-tabs">').appendTo(this.el)),
        (this.editor = new Wi(this, o.id, {}, void 0)),
        database.loadNode(e, function (e, t) {
          t && i.editor.bind(t);
        }),
        database.on("rename", void 0, this.nodeRenamed, this),
        database.on("remove", void 0, this.nodeRemoved, this),
        database.on("schema", void 0, this.schemaChanged, this),
        database.on("admin", void 0, this.adminChanged, this),
        $.pushInputHandler(this));
    }
    (la.prototype.setNid = function (e) {
      var t = this;
      (this.nid = e),
        database.loadNode(e, function (e, i) {
          i && t.editor.bind(i);
        });
    }),
      (la.prototype.close = function () {
        this.isOpen &&
          ((this.isOpen = !1),
          this.editor.destroy(),
          database.off("rename", void 0, this.nodeRenamed, this),
          database.off("remove", void 0, this.nodeRemoved, this),
          database.off("schema", void 0, this.schemaChanged, this),
          database.off("admin", void 0, this.adminChanged, this),
          $.popInputHandler(this),
          this.$backplane.close());
      }),
      (la.prototype.nodeRenamed = function (e, t, i) {
        t === this.nid && this.setNid(i);
      }),
      (la.prototype.nodeRemoved = function (e, t) {
        t === this.nid && this.close();
      }),
      (la.prototype.schemaChanged = function (e, t, i) {
        this.updateStructure();
      }),
      (la.prototype.adminChanged = function (e, t) {
        this.updateStructure();
      }),
      (la.prototype.updateStructure = function () {
        var e = this;
        database.typeOf(this.nid) &&
          (this.editor.updateStructure(),
          database.loadNode(this.nid, function (t, i) {
            i ? e.editor.bind(i) : this.close();
          }));
      }),
      (la.prototype.updateBackground = function (e) {
        var t = util.luminosity(e) < 0.5;
        this.el.css("background-color", e || "#FFF"),
          this.el.toggleClass("darkmode", t);
      }),
      (la.prototype.getSelectedNid = function () {
        return this.nid;
      }),
      (la.prototype.isFullscreen = function () {
        return !0;
      });
    let ca = "";
    function da() {
      var e,
        t = Array.prototype.join.call(arguments, " "),
        i = document.getElementById("LOG");
      if (
        ((e = i
          ? $(i)
          : $(
              '<div id="LOG" style="position:fixed;left:0;bottom:0;width:100%;padding:32px;box-sizing:border-box;-moz-box-sizing:border-box;background-color:rgba(0,0,0,.8);color:#fff;overflow:auto;z-index:999">'
            )
              .hide()
              .appendTo($(document.body))
              .click(function () {
                return (ca = ""), e.stop(!0, !1).hide().empty(), !1;
              })),
        t !== ca)
      ) {
        var o = e.children();
        o.length > 4 && $(o[0]).remove(),
          o.css("color", "#aaa"),
          e.append($("<div>").text([].join.call(arguments, " ")));
      }
      e.stop(!0, !1).fadeIn().delay(3e3).fadeOut(), (ca = t);
    }
    const ua = (e) => {
        const t = () => {
          e.disabled || e.onClick();
        };
        return s.createElement(
          ze.a,
          {
            className: Object(qo.a)(
              "nx-button-text",
              e.type,
              { disabled: !!e.disabled },
              e.className
            ),
            onFastClick: t,
          },
          e.children
        );
      },
      pa = (e) => {
        const t = ha(e.planInfo, e.owner, e.isOwner, e.isExpired);
        return r.a.createElement(
          r.a.Fragment,
          null,
          r.a.createElement("div", { className: "thankyou" }),
          r.a.createElement("div", { style: { flex: "0 1 32px" } }),
          e.isOwner
            ? r.a.createElement(
                "div",
                { className: "PlanExpired_container" },
                r.a.createElement(
                  "div",
                  { className: "PlanExpired_title" },
                  e.isExpired
                    ? Object(_e.a)().planExpired
                    : Object(_e.a)().planOverused
                ),
                r.a.createElement(
                  "div",
                  { className: "PlanExpired_usage" },
                  t.teamCount,
                  t.coverage
                ),
                r.a.createElement(
                  "div",
                  { style: { padding: "4px" } },
                  t.getNow
                )
              )
            : r.a.createElement(
                "div",
                { style: { flex: "0 1 auto" } },
                t.expiry
              ),
          r.a.createElement("div", { style: { flex: "0 1 32px" } }),
          r.a.createElement(
            ua,
            {
              className: "nx-button-text blue PlanExpired_button",
              onClick: e.onClick,
            },
            t.cta
          )
        );
      },
      ha = (e, t, i, o) => ({
        teamCount: Object(_e.a)()
          .planUsageInfo.replace("$1", e.total)
          .replace("$2", "" + e.teamCount),
        coverage:
          e.basic > 0
            ? " " + Object(_e.a)().planUsageCovered.replace("$1", "" + e.basic)
            : "",
        getNow: Object(_e.a)().planGetNow.replace("$1", e.free),
        expiry: (o
          ? Object(_e.a)().planExpiredMember
          : Object(_e.a)().planOverusedMember
        ).replace("$1", t.email),
        cta: i ? Object(_e.a)().planGetNowCTA : Object(_e.a)().contactOwner,
      });
    o("./src/react/util/Backplane.css");
    class ma extends s.Component {
      constructor(e) {
        super(e),
          Ie()(this, "backplane", void 0),
          Ie()(this, "modalRoot", document.body),
          Ie()(this, "handleClick", (e) => {
            void 0 !== this.props.onClick && this.props.onClick(e);
          }),
          Ie()(this, "unmount", () => {
            this.props.show ||
              (this.setState({ shouldRenderChildren: !1 }),
              this.modalRoot.removeChild(this.backplane),
              void 0 !== this.props.onDidHide && this.props.onDidHide());
          }),
          (this.backplane = document.createElement("div")),
          (this.state = { shouldRenderChildren: !1 });
      }
      componentDidUpdate(e, t, i) {
        this.props.show &&
          !e.show &&
          (this.modalRoot.appendChild(this.backplane),
          this.setState({ shouldRenderChildren: !0 }, this.props.onDidShow));
      }
      componentDidMount() {
        this.props.show &&
          (this.modalRoot.appendChild(this.backplane),
          this.setState({ shouldRenderChildren: !0 }, this.props.onDidShow));
      }
      componentWillUnmount() {
        null !== this.backplane.parentElement &&
          (this.modalRoot.removeChild(this.backplane),
          void 0 !== this.props.onDidHide && this.props.onDidHide());
      }
      render() {
        if (!this.state.shouldRenderChildren) return null;
        const e = s.createElement(
          "div",
          {
            ref: this.props.innerRef,
            className:
              "Backplane_root " +
              (void 0 === this.props.className ? "" : this.props.className) +
              (this.props.show ? "" : " Backplane_rootFadeOut"),
            onAnimationEnd: this.unmount,
          },
          s.createElement(ze.a, {
            onFastClick: () => {},
            onMouseDown: this.handleClick,
            onTouchStart: this.handleClick,
            onFastContextMenu: () => {},
            behaviour: "PREVENT_RIPPLE",
            className: "Backplane_clickable",
          }),
          this.props.children
        );
        return a.createPortal(e, this.backplane);
      }
    }
    const fa = (e) => {
      const [t, i] = r.a.useState(!1),
        o = ha(e.planInfo, e.owner, e.isOwner, e.isExpired);
      return r.a.createElement(
        r.a.Fragment,
        null,
        r.a.createElement(
          ze.a,
          { className: "PlanExpiredResponsive_text", onFastClick: () => i(!0) },
          Object(_e.a)().upgradeYourSubscription
        ),
        r.a.createElement(
          ma,
          {
            show: t,
            onClick: () => i(!1),
            className: "PlanExpiredBannerResponsive_popupRoot",
          },
          r.a.createElement(
            "div",
            { className: "PlanExpiredBannerResponsive_popupBody" },
            r.a.createElement(ze.a, {
              className:
                "PlanExpiredBannerResponsive_x i-48-24 i-light-grey i-close",
              onFastClick: () => i(!1),
            }),
            r.a.createElement("div", {
              className: "i-db-icon-big i-db i-plan",
              style: { marginTop: 32 },
            }),
            e.isOwner
              ? r.a.createElement(
                  "div",
                  { className: "PlanExpiredResponsive_container" },
                  r.a.createElement(
                    "div",
                    { className: "PlanExpired_title" },
                    e.isExpired
                      ? Object(_e.a)().planExpired
                      : Object(_e.a)().planOverused
                  ),
                  r.a.createElement(
                    "div",
                    { className: "PlanExpiredResponsive_usage" },
                    o.teamCount,
                    o.coverage
                  ),
                  r.a.createElement(
                    "div",
                    { style: { padding: "4px" } },
                    o.getNow
                  )
                )
              : r.a.createElement(
                  "div",
                  { style: { flex: "0 1 auto" } },
                  o.expiry
                ),
            r.a.createElement(
              ua,
              {
                className: "nx-button-text blue PlanExpiredResponsive_button",
                onClick: () => {
                  i(!1), e.onUpgradePlanClick();
                },
              },
              o.cta
            )
          )
        )
      );
    };
    function va() {
      Object(c.g)() || ba();
    }
    function ba() {
      const e = database.account.id;
      if ("local" === e) (ui.planInfo = void 0), wa();
      else {
        const t = NinoxDocumentInteraction.getUserDefault("ui.planInfo." + e);
        t && ((ui.planInfo = b.util.parseJSON(t)), wa());
        const i = database.account.getOwnerId();
        dbms.getRemoteConnection().getPlanInfo(i, (e, t) => {
          if (e) return console.log(e);
          t && ya(t);
        });
      }
    }
    function ya(e) {
      const t = database.account.id;
      "local" !== t &&
        ((ui.planInfo = e),
        NinoxDocumentInteraction.setUserDefault(
          "ui.planInfo." + t,
          JSON.stringify(e)
        ),
        wa());
    }
    function wa() {
      const e = database.account.id;
      if ("local" === e) return;
      const t = dbms.getRemoteConnection().getAccount(e),
        i = t.owner === dbms.getRemoteConnection().getUserId(),
        o = t.users[t.owner];
      let a = !1,
        n = !1;
      ui.planInfo &&
        ((a = "none" === ui.planInfo.name),
        (n = ui.planInfo.free > ui.planInfo.collaborators)),
        xa(ui.planInfo, a, n, i, o);
    }
    function xa(e, t, i, o, a) {
      const s = window.innerWidth <= 640;
      if (!t && !i)
        return void (
          ui.$planInfo &&
          (ui.setTopPadding(0),
          n.a.unmountComponentAtNode(ui.$planInfo[0]),
          ui.$planInfo.remove(),
          (ui.$planInfo = void 0))
        );
      ui.$planInfo ||
        (trackPageView("expired"),
        Object(l.f)("PlanExpired", "Show", { isOwner: o }),
        ui.setTopPadding(s ? 40 : 128),
        (ui.$planInfo = $(
          `<div class="${
            s ? "PlanExpired_rootResponsive" : "PlanExpired_root"
          }">`
        ).prependTo(document.body)));
      const c = () => {
        o
          ? (Object(l.f)("PlanExpired", "Upgrade", { isOwner: !0 }),
            trackEvent("expired-upgrade", "click"),
            root.upgradePlan())
          : (Object(l.f)("PlanExpired", "ContactOwner", { isOwner: !1 }),
            trackEvent("expired-contact", "click"),
            NinoxDocumentInteraction.openBrowser("mailto:" + a.email));
      };
      s
        ? n.a.render(
            r.a.createElement(fa, {
              isExpired: t,
              owner: a,
              isOwner: o,
              planInfo: e,
              onUpgradePlanClick: c,
            }),
            ui.$planInfo[0]
          )
        : n.a.render(
            r.a.createElement(pa, {
              isExpired: t,
              owner: a,
              isOwner: o,
              planInfo: e,
              onClick: c,
            }),
            ui.$planInfo[0]
          );
    }
    const Ta = (e) => {
        if ("initialValue" in e && "selectedFieldIds" in e)
          throw new Error(
            "component should be either managed and have `selectedFieldIds` or unmanaged and have `initialValue`"
          );
        const t = Object.values(e.values).sort((e, t) => e.order - t.order),
          [i, o] = s.useState("initialValue" in e ? e.initialValue : []),
          [a, n] = s.useState(!1),
          r = s.useRef(null),
          l = "selectedFieldIds" in e ? e.selectedFieldIds : i,
          c = (t) => {
            "initialValue" in e && o(t), e.onChange(t);
          },
          d = () => {
            const e = Object.values(t).map((e) => e.id);
            c(e);
          },
          u = () => {
            c([]);
          },
          p = (t) => {
            let i;
            (i = l.includes(t) ? l.filter((e) => e !== t) : [...l, t]),
              c(i),
              e.closeOnSelect && n(!1);
          };
        return s.createElement(
          s.Fragment,
          null,
          s.createElement(
            ze.a,
            {
              onFastClick: () => n(!0),
              className: "stringeditor",
              innerRef: r,
            },
            s.createElement(
              "div",
              { className: "input-text multicombo" },
              t.map((e) =>
                l.includes(e.id)
                  ? s.createElement(
                      "div",
                      {
                        key: e.id,
                        className: "multicombo-item",
                        style: e.color && {
                          backgroundColor: e.color,
                          color: e.textColor,
                        },
                      },
                      e.icon &&
                        s.createElement("div", {
                          className: `choice-symbol ic ic-${e.icon}`,
                        }),
                      s.createElement(
                        "span",
                        null,
                        window.htmlEscape(e.caption)
                      )
                    )
                  : null
              )
            ),
            s.createElement("div", { className: "choice-dropdown" })
          ),
          s.createElement(
            Rt.a,
            {
              clickTarget: r.current,
              show: a,
              settings: { style: "dropdown" },
              onClick: () => n(!1),
              className: "choice-menu",
              positionAdjustment: { top: 4, left: 0 },
            },
            e.noButtons
              ? null
              : s.createElement(
                  "div",
                  { className: "choice-menu-head" },
                  s.createElement(
                    ze.a,
                    { onFastClick: d, className: "choice-menu-item" },
                    s.createElement(
                      "div",
                      { className: "choice-label" },
                      window.htmlEscape(Object(_e.a)().all)
                    )
                  ),
                  s.createElement(
                    ze.a,
                    { onFastClick: u, className: "choice-menu-item" },
                    s.createElement(
                      "div",
                      { className: "choice-label" },
                      window.htmlEscape(Object(_e.a)().none)
                    )
                  )
                ),
            Object.values(t).map((e) => {
              const t = parseInt(e.id, 10);
              return s.createElement(
                ze.a,
                {
                  key: e.id,
                  className: "choice-menu-item",
                  onFastClick: () => p(t),
                },
                s.createElement("div", {
                  className: Object(qo.a)("choice-indicator", {
                    selected: l.includes(t),
                  }),
                }),
                s.createElement(
                  "div",
                  {
                    className: "multicombo-item",
                    style: e.color && {
                      backgroundColor: e.color,
                      color: e.textColor,
                    },
                  },
                  e.icon &&
                    s.createElement("div", {
                      className: `choice-symbol ic ic-${e.icon}`,
                    }),
                  s.createElement("span", null, window.htmlEscape(e.caption))
                )
              );
            })
          )
        );
      },
      Ca = (e) => {
        const t = Object(b.getLocale)(),
          [i, o] = s.useState(!1),
          [a, n] = s.useState(!1),
          [r, c] = s.useState(e.email || ""),
          [d, u] = s.useState(""),
          p = r.length && d.length;
        function h() {
          if (!p) return o(!0);
          const t = window.dbms;
          $.loading(!0),
            t.getRemoteConnection().addsLogin(r, d, (t) => {
              if (
                (window.trackEvent("login", t ? "error" : "success"),
                Object(l.f)("Login", t ? "Error" : "Success"),
                $.loading(!1),
                t)
              )
                return n(!0);
              e.close(!1), e.afterLogin();
            });
        }
        function m(e) {
          13 === e.nativeEvent.keyCode && p && h();
        }
        return s.createElement(
          "div",
          { className: "credentials-popup--background" },
          s.createElement(
            "div",
            { className: "credentials-popup--content" },
            s.createElement(
              "div",
              { className: "credentials" },
              s.createElement(ze.a, {
                className: "close-popup",
                onFastClick: () => e.close(!0),
              }),
              s.createElement(
                "div",
                { className: "mb-24" },
                s.createElement(
                  "label",
                  { className: "form-control required" },
                  s.createElement(
                    "span",
                    { className: "caption" },
                    t.emailAddress
                  ),
                  s.createElement("input", {
                    type: "email",
                    required: !0,
                    value: r,
                    disabled: !!e.email,
                    onChange: e.email
                      ? void 0
                      : (e) => {
                          c(e.target.value), n(!1);
                        },
                  })
                ),
                s.createElement(
                  "label",
                  { className: "form-control required" },
                  s.createElement("span", { className: "caption" }, t.password),
                  s.createElement("input", {
                    className: Object(qo.a)({ error: i && 0 === d.length }),
                    type: "password",
                    required: !0,
                    onKeyDown: m,
                    onChange: (e) => {
                      u(e.target.value), n(!1);
                    },
                    value: d,
                  })
                )
              ),
              a
                ? s.createElement(
                    "div",
                    { className: "form-error-message mb-24 center" },
                    t.invalidCredentials
                  )
                : null,
              s.createElement(
                "div",
                { className: "mb-24" },
                s.createElement(
                  ze.a,
                  { className: "button button--filled", onFastClick: h },
                  t.login
                )
              )
            )
          )
        );
      };
    o("./src/react/credentials/Credentials.scss");
    const ka = [
      { name: "Afghanistan", code: "AF" },
      { name: "Åland Islands", code: "AX" },
      { name: "Albania", code: "AL" },
      { name: "Algeria", code: "DZ" },
      { name: "American Samoa", code: "AS" },
      { name: "AndorrA", code: "AD" },
      { name: "Angola", code: "AO" },
      { name: "Anguilla", code: "AI" },
      { name: "Antarctica", code: "AQ" },
      { name: "Antigua and Barbuda", code: "AG" },
      { name: "Argentina", code: "AR" },
      { name: "Armenia", code: "AM" },
      { name: "Aruba", code: "AW" },
      { name: "Australia", code: "AU" },
      { name: "Austria", code: "AT" },
      { name: "Azerbaijan", code: "AZ" },
      { name: "Bahamas", code: "BS" },
      { name: "Bahrain", code: "BH" },
      { name: "Bangladesh", code: "BD" },
      { name: "Barbados", code: "BB" },
      { name: "Belarus", code: "BY" },
      { name: "Belgium", code: "BE" },
      { name: "Belize", code: "BZ" },
      { name: "Benin", code: "BJ" },
      { name: "Bermuda", code: "BM" },
      { name: "Bhutan", code: "BT" },
      { name: "Bolivia", code: "BO" },
      { name: "Bosnia and Herzegovina", code: "BA" },
      { name: "Botswana", code: "BW" },
      { name: "Bouvet Island", code: "BV" },
      { name: "Brazil", code: "BR" },
      { name: "British Indian Ocean Territory", code: "IO" },
      { name: "Brunei Darussalam", code: "BN" },
      { name: "Bulgaria", code: "BG" },
      { name: "Burkina Faso", code: "BF" },
      { name: "Burundi", code: "BI" },
      { name: "Cambodia", code: "KH" },
      { name: "Cameroon", code: "CM" },
      { name: "Canada", code: "CA" },
      { name: "Cape Verde", code: "CV" },
      { name: "Cayman Islands", code: "KY" },
      { name: "Central African Republic", code: "CF" },
      { name: "Chad", code: "TD" },
      { name: "Chile", code: "CL" },
      { name: "China", code: "CN" },
      { name: "Christmas Island", code: "CX" },
      { name: "Cocos (Keeling) Islands", code: "CC" },
      { name: "Colombia", code: "CO" },
      { name: "Comoros", code: "KM" },
      { name: "Congo", code: "CG" },
      { name: "The Democratic Republic of the Congo", code: "CD" },
      { name: "Cook Islands", code: "CK" },
      { name: "Costa Rica", code: "CR" },
      { name: "Cote D'Ivoire", code: "CI" },
      { name: "Croatia", code: "HR" },
      { name: "Cuba", code: "CU" },
      { name: "Cyprus", code: "CY" },
      { name: "Czech Republic", code: "CZ" },
      { name: "Denmark", code: "DK" },
      { name: "Djibouti", code: "DJ" },
      { name: "Dominica", code: "DM" },
      { name: "Dominican Republic", code: "DO" },
      { name: "Ecuador", code: "EC" },
      { name: "Egypt", code: "EG" },
      { name: "El Salvador", code: "SV" },
      { name: "Equatorial Guinea", code: "GQ" },
      { name: "Eritrea", code: "ER" },
      { name: "Estonia", code: "EE" },
      { name: "Ethiopia", code: "ET" },
      { name: "Falkland Islands (Malvinas)", code: "FK" },
      { name: "Faroe Islands", code: "FO" },
      { name: "Fiji", code: "FJ" },
      { name: "Finland", code: "FI" },
      { name: "France", code: "FR" },
      { name: "French Guiana", code: "GF" },
      { name: "French Polynesia", code: "PF" },
      { name: "French Southern Territories", code: "TF" },
      { name: "Gabon", code: "GA" },
      { name: "Gambia", code: "GM" },
      { name: "Georgia", code: "GE" },
      { name: "Germany", code: "DE" },
      { name: "Ghana", code: "GH" },
      { name: "Gibraltar", code: "GI" },
      { name: "Greece", code: "GR" },
      { name: "Greenland", code: "GL" },
      { name: "Grenada", code: "GD" },
      { name: "Guadeloupe", code: "GP" },
      { name: "Guam", code: "GU" },
      { name: "Guatemala", code: "GT" },
      { name: "Guernsey", code: "GG" },
      { name: "Guinea", code: "GN" },
      { name: "Guinea-Bissau", code: "GW" },
      { name: "Guyana", code: "GY" },
      { name: "Haiti", code: "HT" },
      { name: "Heard Island and Mcdonald Islands", code: "HM" },
      { name: "Holy See (Vatican City State)", code: "VA" },
      { name: "Honduras", code: "HN" },
      { name: "Hong Kong", code: "HK" },
      { name: "Hungary", code: "HU" },
      { name: "Iceland", code: "IS" },
      { name: "India", code: "IN" },
      { name: "Indonesia", code: "ID" },
      { name: "Iran, Islamic Republic Of", code: "IR" },
      { name: "Iraq", code: "IQ" },
      { name: "Ireland", code: "IE" },
      { name: "Isle of Man", code: "IM" },
      { name: "Israel", code: "IL" },
      { name: "Italy", code: "IT" },
      { name: "Jamaica", code: "JM" },
      { name: "Japan", code: "JP" },
      { name: "Jersey", code: "JE" },
      { name: "Jordan", code: "JO" },
      { name: "Kazakhstan", code: "KZ" },
      { name: "Kenya", code: "KE" },
      { name: "Kiribati", code: "KI" },
      { name: "Korea", code: "KP" },
      { name: "Korea, Republic of", code: "KR" },
      { name: "Kuwait", code: "KW" },
      { name: "Kyrgyzstan", code: "KG" },
      { name: "Laos", code: "LA" },
      { name: "Latvia", code: "LV" },
      { name: "Lebanon", code: "LB" },
      { name: "Lesotho", code: "LS" },
      { name: "Liberia", code: "LR" },
      { name: "Libyan Arab Jamahiriya", code: "LY" },
      { name: "Liechtenstein", code: "LI" },
      { name: "Lithuania", code: "LT" },
      { name: "Luxembourg", code: "LU" },
      { name: "Macao", code: "MO" },
      { name: "Macedonia, The Former Yugoslav Republic of", code: "MK" },
      { name: "Madagascar", code: "MG" },
      { name: "Malawi", code: "MW" },
      { name: "Malaysia", code: "MY" },
      { name: "Maldives", code: "MV" },
      { name: "Mali", code: "ML" },
      { name: "Malta", code: "MT" },
      { name: "Marshall Islands", code: "MH" },
      { name: "Martinique", code: "MQ" },
      { name: "Mauritania", code: "MR" },
      { name: "Mauritius", code: "MU" },
      { name: "Mayotte", code: "YT" },
      { name: "Mexico", code: "MX" },
      { name: "Micronesia, Federated States of", code: "FM" },
      { name: "Moldova, Republic of", code: "MD" },
      { name: "Monaco", code: "MC" },
      { name: "Mongolia", code: "MN" },
      { name: "Montserrat", code: "MS" },
      { name: "Morocco", code: "MA" },
      { name: "Mozambique", code: "MZ" },
      { name: "Myanmar", code: "MM" },
      { name: "Namibia", code: "NA" },
      { name: "Nauru", code: "NR" },
      { name: "Nepal", code: "NP" },
      { name: "Netherlands", code: "NL" },
      { name: "Netherlands Antilles", code: "AN" },
      { name: "New Caledonia", code: "NC" },
      { name: "New Zealand", code: "NZ" },
      { name: "Nicaragua", code: "NI" },
      { name: "Niger", code: "NE" },
      { name: "Nigeria", code: "NG" },
      { name: "Niue", code: "NU" },
      { name: "Norfolk Island", code: "NF" },
      { name: "Northern Mariana Islands", code: "MP" },
      { name: "Norway", code: "NO" },
      { name: "Oman", code: "OM" },
      { name: "Pakistan", code: "PK" },
      { name: "Palau", code: "PW" },
      { name: "Palestinian Territory, Occupied", code: "PS" },
      { name: "Panama", code: "PA" },
      { name: "Papua New Guinea", code: "PG" },
      { name: "Paraguay", code: "PY" },
      { name: "Peru", code: "PE" },
      { name: "Philippines", code: "PH" },
      { name: "Pitcairn", code: "PN" },
      { name: "Poland", code: "PL" },
      { name: "Portugal", code: "PT" },
      { name: "Puerto Rico", code: "PR" },
      { name: "Qatar", code: "QA" },
      { name: "Reunion", code: "RE" },
      { name: "Romania", code: "RO" },
      { name: "Russian Federation", code: "RU" },
      { name: "RWANDA", code: "RW" },
      { name: "Saint Helena", code: "SH" },
      { name: "Saint Kitts and Nevis", code: "KN" },
      { name: "Saint Lucia", code: "LC" },
      { name: "Saint Pierre and Miquelon", code: "PM" },
      { name: "Saint Vincent and the Grenadines", code: "VC" },
      { name: "Samoa", code: "WS" },
      { name: "San Marino", code: "SM" },
      { name: "Sao Tome and Principe", code: "ST" },
      { name: "Saudi Arabia", code: "SA" },
      { name: "Senegal", code: "SN" },
      { name: "Serbia and Montenegro", code: "CS" },
      { name: "Seychelles", code: "SC" },
      { name: "Sierra Leone", code: "SL" },
      { name: "Singapore", code: "SG" },
      { name: "Slovakia", code: "SK" },
      { name: "Slovenia", code: "SI" },
      { name: "Solomon Islands", code: "SB" },
      { name: "Somalia", code: "SO" },
      { name: "South Africa", code: "ZA" },
      { name: "South Georgia and the South Sandwich Islands", code: "GS" },
      { name: "Spain", code: "ES" },
      { name: "Sri Lanka", code: "LK" },
      { name: "Sudan", code: "SD" },
      { name: "Suriname", code: "SR" },
      { name: "Svalbard and Jan Mayen", code: "SJ" },
      { name: "Swaziland", code: "SZ" },
      { name: "Sweden", code: "SE" },
      { name: "Switzerland", code: "CH" },
      { name: "Syrian Arab Republic", code: "SY" },
      { name: "Taiwan, Province of China", code: "TW" },
      { name: "Tajikistan", code: "TJ" },
      { name: "Tanzania, United Republic of", code: "TZ" },
      { name: "Thailand", code: "TH" },
      { name: "Timor-Leste", code: "TL" },
      { name: "Togo", code: "TG" },
      { name: "Tokelau", code: "TK" },
      { name: "Tonga", code: "TO" },
      { name: "Trinidad and Tobago", code: "TT" },
      { name: "Tunisia", code: "TN" },
      { name: "Turkey", code: "TR" },
      { name: "Turkmenistan", code: "TM" },
      { name: "Turks and Caicos Islands", code: "TC" },
      { name: "Tuvalu", code: "TV" },
      { name: "Uganda", code: "UG" },
      { name: "Ukraine", code: "UA" },
      { name: "United Arab Emirates", code: "AE" },
      { name: "United Kingdom", code: "GB" },
      { name: "United States", code: "US" },
      { name: "United States Minor Outlying Islands", code: "UM" },
      { name: "Uruguay", code: "UY" },
      { name: "Uzbekistan", code: "UZ" },
      { name: "Vanuatu", code: "VU" },
      { name: "Venezuela", code: "VE" },
      { name: "Viet Nam", code: "VN" },
      { name: "Virgin Islands, British", code: "VG" },
      { name: "Virgin Islands, U.S.", code: "VI" },
      { name: "Wallis and Futuna", code: "WF" },
      { name: "Western Sahara", code: "EH" },
      { name: "Yemen", code: "YE" },
      { name: "Zambia", code: "ZM" },
      { name: "Zimbabwe", code: "ZW" },
    ];
    function Sa(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function $a(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? Sa(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : Sa(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    const _a = {
        SignUp0: (e) => {
          const t = Object(_e.a)(),
            i = (t) => {
              e.setFormState({ isBusiness: "true" === t });
            };
          return s.createElement(
            s.Fragment,
            null,
            s.createElement(ze.a, {
              className: "close-popup",
              onFastClick: () => e.close(!0),
            }),
            s.createElement(
              "h4",
              { className: "center mb-24" },
              t.signUpHeader1_1,
              s.createElement("br", null),
              t.signUpHeader1_2
            ),
            s.createElement(
              "div",
              { className: "mb-24" },
              s.createElement(
                ze.a,
                {
                  className: "form-control",
                  behaviour: "PREVENT_RIPPLE",
                  onFastClick: () => i("true"),
                },
                s.createElement("input", {
                  checked: e.formState.isBusiness,
                  type: "radio",
                  name: "userType",
                  value: "true",
                  readOnly: !0,
                }),
                s.createElement(
                  "div",
                  { className: "radio-control" },
                  t.business
                )
              ),
              s.createElement(
                ze.a,
                {
                  className: "form-control",
                  behaviour: "PREVENT_RIPPLE",
                  onFastClick: () => i("false"),
                },
                s.createElement("input", {
                  checked: !e.formState.isBusiness,
                  type: "radio",
                  name: "userType",
                  value: "false",
                  readOnly: !0,
                }),
                s.createElement(
                  "div",
                  { className: "radio-control" },
                  t.private
                )
              )
            ),
            s.createElement(
              "div",
              { className: "center mb-40 body--2 content--60" },
              t.signUpBusinessMessage
            ),
            s.createElement(
              "div",
              { className: "mb-24" },
              s.createElement(
                ze.a,
                {
                  className: "button button--filled",
                  onFastClick: () => e.switchPage("SignUp1"),
                },
                t.next
              )
            ),
            s.createElement(
              "div",
              { className: "popup--text" },
              t.haveAnAccount,
              " ",
              s.createElement(
                ze.a,
                {
                  onFastClick: () => e.switchPage("SignIn0"),
                  className: "link",
                },
                t.login2
              )
            )
          );
        },
        SignUp1: (e) => {
          const t = Object(_e.a)(),
            [i, o] = s.useState(!1),
            [a, n] = s.useState(null),
            [r, c] = s.useState(!1),
            d = (t) => {
              e.setFormState({ email: t.target.value }), o(!1);
            },
            u = (t) => {
              e.setFormState({ password: t.target.value }), o(!1);
            },
            p = (t) => {
              e.setFormState({ newsletter: t.target.checked }), o(!1);
            },
            h = e.formState.password || "",
            m = [
              [h.length >= 8, t.passHintLen],
              [h.toLowerCase() !== h && h.toUpperCase() !== h, t.passHintCase],
              [/[^\w\s]/.test(h), t.passHintChar],
              [/\d/.test(h), t.passHintNum],
            ],
            f =
              e.formState.email.length &&
              b.util.isValidEmail(e.formState.email),
            g = !m.some(([e, t]) => !e),
            v = f && g;
          function y() {
            o(!0),
              v &&
                Object(l.b)((t, i) => {
                  t && console.warn("Could not fetch attribution details", t),
                    $.loading(!0),
                    window.dbms
                      .getRemoteConnection()
                      .signup(
                        {
                          email: e.formState.email,
                          password: e.formState.password,
                          newsletter: e.formState.newsletter,
                          iadAttributionDetails: i,
                        },
                        (t, i) => {
                          if (
                            (window.trackEvent(
                              "signup",
                              t ? "error" : "success"
                            ),
                            Object(l.f)("Signup", t ? "Error" : "Success"),
                            $.loading(!1),
                            t)
                          )
                            return n(t);
                          e.setUserId(i),
                            e.formState.isBusiness
                              ? e.switchPage("SignUp2")
                              : (e.close(!1), e.afterLogin());
                        }
                      );
                });
          }
          async function w() {
            const t = window.dbms,
              i = await t.getRemoteConnection().googleLogin(),
              { userId: o, newUser: a } = i;
            e.setUserId(o),
              !e.formState.isBusiness || (!0 !== a && "true" !== a)
                ? (e.close(!1), e.afterLogin())
                : e.switchPage("SignUp2");
          }
          return s.createElement(
            s.Fragment,
            null,
            s.createElement(ze.a, {
              className: "close-popup",
              onFastClick: () => e.close(!0),
            }),
            s.createElement(
              "h4",
              { className: "center mb-24" },
              t.signUpHeader2
            ),
            s.createElement(
              "div",
              { className: "mb-24" },
              s.createElement(
                "label",
                { className: "form-control required" },
                s.createElement(
                  "span",
                  { className: "caption" },
                  t.emailAddress
                ),
                s.createElement("input", {
                  type: "email",
                  required: !0,
                  onChange: d,
                  value: e.formState.email,
                  className: Object(qo.a)({ error: i && !f }),
                }),
                i && !f
                  ? s.createElement(
                      "div",
                      { className: "error-message" },
                      t.invalidUserEMail
                    )
                  : null
              ),
              s.createElement(
                "label",
                { className: "form-control required" },
                s.createElement("span", { className: "caption" }, t.password),
                s.createElement("input", {
                  autoComplete: "off",
                  type: "password",
                  onChange: u,
                  value: e.formState.password,
                  className: Object(qo.a)({ error: i && !g }),
                  onFocus: () => c(!0),
                  onBlur: () => c(!1),
                }),
                i && !g
                  ? s.createElement(
                      "div",
                      { className: "error-message" },
                      t.wrongPassword
                    )
                  : null,
                s.createElement(
                  "div",
                  { className: Object(qo.a)("password-hint", { active: r }) },
                  s.createElement(
                    "div",
                    { className: "password-hint-pointer-wrapper" },
                    s.createElement(
                      "div",
                      { className: "password-hint-pointer-border" },
                      s.createElement("div", {
                        className: "password-hint-pointer",
                      })
                    )
                  ),
                  s.createElement(
                    "div",
                    { className: "password-hint-container" },
                    s.createElement("div", null, t.passHint),
                    m.map(([e, t], i) =>
                      s.createElement(
                        "div",
                        { key: i, className: Object(qo.a)({ fulfilled: e }) },
                        t
                      )
                    )
                  )
                )
              ),
              s.createElement(
                "div",
                { className: "mb-24" },
                s.createElement(
                  "label",
                  { className: "form-control" },
                  s.createElement("input", {
                    type: "checkbox",
                    name: "newsletter",
                    onChange: p,
                    checked: e.formState.newsletter,
                  }),
                  s.createElement(
                    "div",
                    { className: "checkbox-control" },
                    t.signUpNewsletter,
                    " ",
                    s.createElement(
                      "a",
                      {
                        className: "privacy-link",
                        href: "https://ninox.com/privacy#privacy5",
                        target: "_blank",
                      },
                      t.signUpPrivacyPolicy
                    )
                  )
                )
              )
            ),
            i && a
              ? s.createElement(
                  "div",
                  { className: "form-error-message mb-24 center" },
                  a
                )
              : null,
            s.createElement(
              "div",
              { className: "mb-24" },
              s.createElement(
                ze.a,
                { className: "button button--filled", onFastClick: y },
                t.register
              )
            ),
            s.createElement(
              "div",
              { className: "center" },
              t.termsDisclamer.split("$")[0],
              s.createElement(
                "a",
                { href: "https://ninox.com/en/terms", className: "link" },
                t.termsDisclamer.split("$")[1]
              ),
              t.termsDisclamer.split("$")[2]
            ),
            s.createElement(
              "div",
              { className: "or-line" },
              s.createElement("div", { className: "or-text" }, t.op_or)
            ),
            e.isGoogleAvailable
              ? s.createElement(
                  s.Fragment,
                  null,
                  s.createElement(
                    "div",
                    { className: "mb-24" },
                    s.createElement(
                      ze.a,
                      { onFastClick: w, className: "google-login-button" },
                      s.createElement("span", {
                        className: "google-logo logo",
                      }),
                      s.createElement(
                        "span",
                        null,
                        " ",
                        t.signupWithGoogle,
                        " "
                      )
                    )
                  )
                )
              : null,
            s.createElement(
              "div",
              { className: "popup--text" },
              t.haveAnAccount,
              " ",
              s.createElement(
                ze.a,
                {
                  onFastClick: () => e.switchPage("SignIn0"),
                  className: "link",
                },
                t.login2
              )
            )
          );
        },
        SignUp2: (e) => {
          const t = Object(_e.a)(),
            [i, o] = s.useState(!1),
            [a, n] = s.useState(null),
            r = (t) => {
              e.setFormState({ displayName: t.target.value }), o(!1);
            },
            l = (t) => {
              e.setFormState({ company: t.target.value }), o(!1);
            },
            c = (t) => {
              e.setFormState({ telephone: t.target.value }), o(!1);
            },
            d = (t) => e.setFormState({ country: t.target.value }),
            u = (t) => e.setFormState({ businessSize: t.target.value }),
            p = !!e.formState.displayName.length,
            h = !!e.formState.company.length,
            m = e.formState.telephone.length > 6,
            f = p && h && m;
          function g() {
            if (!f) return o(!0);
            const {
              displayName: t,
              company: i,
              country: a,
              telephone: s,
              businessSize: r,
            } = e.formState;
            $.loading(!0),
              window.dbms
                .getRemoteConnection()
                .updateUserProfile(
                  {
                    displayName: t,
                    company: i,
                    country: a,
                    telephone: s,
                    businessSize: r,
                  },
                  (t) => {
                    if (t) return n(t);
                    e.close(!1), $.loading(!1), e.afterLogin();
                  }
                );
          }
          return s.createElement(
            s.Fragment,
            null,
            s.createElement(
              "h4",
              { className: "center mb-24" },
              t.signUpHeader3
            ),
            s.createElement(
              "div",
              { className: "mb-24" },
              s.createElement(
                "label",
                { className: "form-control required" },
                s.createElement("span", { className: "caption" }, t.fullName),
                s.createElement("input", {
                  className: Object(qo.a)({ error: i && !p }),
                  type: "text",
                  required: !0,
                  onChange: r,
                  value: e.formState.displayName,
                }),
                i && !p
                  ? s.createElement(
                      "div",
                      { className: "error-message" },
                      t.thisFieldsAreRequired
                    )
                  : null
              ),
              s.createElement(
                "div",
                { className: "container" },
                s.createElement(
                  "div",
                  { className: "row", style: { alignItems: "flex-end" } },
                  s.createElement(
                    "div",
                    { className: "col-xl-6" },
                    s.createElement(
                      "label",
                      { className: "form-control required" },
                      s.createElement(
                        "span",
                        { className: "caption" },
                        t.company
                      ),
                      s.createElement("input", {
                        className: Object(qo.a)({ error: i && !h }),
                        type: "text",
                        required: !0,
                        onChange: l,
                        value: e.formState.company,
                      }),
                      i && !h
                        ? s.createElement(
                            "div",
                            { className: "error-message" },
                            t.thisFieldsAreRequired
                          )
                        : null
                    )
                  ),
                  s.createElement(
                    "div",
                    { className: "col-xl-6" },
                    s.createElement(
                      "span",
                      { className: "form-control" },
                      s.createElement(
                        "span",
                        { className: "caption" },
                        t.numberOfEmployees
                      ),
                      s.createElement("input", {
                        type: "text",
                        required: !0,
                        value: e.formState.businessSize,
                        readOnly: !0,
                        className: "dropbox",
                      }),
                      s.createElement(
                        "select",
                        {
                          value: e.formState.businessSize,
                          onChange: u,
                          style: {
                            width: "100%",
                            position: "absolute",
                            top: "32px",
                            left: 0,
                            opacity: 0,
                          },
                        },
                        [
                          "1 - 9",
                          "10 - 24",
                          "25 - 49",
                          "50 - 99",
                          "100 - 500",
                          "500 - 1000",
                          "1000+",
                        ].map((e) =>
                          s.createElement("option", { key: e, value: e }, e)
                        )
                      )
                    )
                  )
                )
              ),
              s.createElement(
                "span",
                { className: "form-control required" },
                s.createElement("span", { className: "caption" }, t.country),
                s.createElement("input", {
                  type: "text",
                  required: !0,
                  value: e.formState.country,
                  readOnly: !0,
                }),
                s.createElement(
                  "select",
                  {
                    value: e.formState.country,
                    onChange: d,
                    style: {
                      width: "100%",
                      position: "absolute",
                      top: "32px",
                      left: 0,
                      opacity: 0,
                    },
                  },
                  ka.map(({ name: e }) =>
                    s.createElement("option", { key: e, value: e }, e)
                  )
                )
              ),
              s.createElement(
                "label",
                { className: "form-control required" },
                s.createElement("span", { className: "caption" }, t.workPhone),
                s.createElement("input", {
                  className: Object(qo.a)({ error: i && !m }),
                  type: "phone",
                  required: !0,
                  onChange: c,
                  value: e.formState.telephone,
                }),
                i && !m
                  ? s.createElement(
                      "div",
                      { className: "error-message" },
                      t.thisFieldsAreRequired
                    )
                  : null
              )
            ),
            i && a
              ? s.createElement(
                  "div",
                  { className: "form-error-message mb-24 center" },
                  a
                )
              : null,
            s.createElement(
              "div",
              null,
              s.createElement(
                ze.a,
                { className: "button button--filled", onFastClick: g },
                t.saveProfile
              )
            )
          );
        },
        SignIn0: (e) => {
          const t = Object(_e.a)(),
            [i, o] = s.useState(!1),
            [a, n] = s.useState(!1),
            r = (t) => e.setFormState({ email: t }),
            d = e.formState.email,
            [u, p] = s.useState(""),
            h = d.length && u.length;
          function m() {
            if (!h) return o(!0);
            const t = window.dbms;
            $.loading(!0),
              t.getRemoteConnection().login(d, u, (i) => {
                if (
                  (window.trackEvent("login", i ? "error" : "success"),
                  Object(l.f)("Login", i ? "Error" : "Success"),
                  $.loading(!1),
                  i)
                )
                  return console.error("login error", i), n(!0);
                const o = t.getRemoteConnection().getCurrentUser();
                e.setUserId(o.id),
                  Object(c.g)() &&
                    o.passwordExpired &&
                    t.getRemoteConnection().logout(() => {
                      e.switchPage("ResetPassword0");
                    }),
                  e.close(!1),
                  e.afterLogin();
              });
          }
          async function f() {
            const t = window.dbms;
            let i;
            try {
              i = await t.getRemoteConnection().googleLogin();
            } catch (e) {
              return console.error("login error", e), n(!0);
            }
            const { userId: o, newUser: a } = i;
            e.setUserId(o),
              !e.formState.isBusiness || (!0 !== a && "true" !== a)
                ? (e.close(!1), e.afterLogin())
                : e.switchPage("SignUp2");
          }
          function g(e) {
            13 === e.nativeEvent.keyCode && h && m();
          }
          return s.createElement(
            s.Fragment,
            null,
            s.createElement(ze.a, {
              className: "close-popup",
              onFastClick: () => e.close(!0),
            }),
            s.createElement(
              "div",
              { className: "mb-24" },
              s.createElement(
                "label",
                { className: "form-control required" },
                s.createElement(
                  "span",
                  { className: "caption" },
                  t.emailAddress
                ),
                s.createElement("input", {
                  className: Object(qo.a)({ error: i && 0 === d.length }),
                  type: "email",
                  required: !0,
                  onKeyDown: g,
                  onChange: (e) => {
                    r(e.target.value), n(!1);
                  },
                  value: d,
                })
              ),
              s.createElement(
                "label",
                { className: "form-control required" },
                s.createElement("span", { className: "caption" }, t.password),
                s.createElement("input", {
                  className: Object(qo.a)({ error: i && 0 === u.length }),
                  type: "password",
                  required: !0,
                  onKeyDown: g,
                  onChange: (e) => {
                    p(e.target.value), n(!1);
                  },
                  value: u,
                })
              )
            ),
            a
              ? s.createElement(
                  "div",
                  { className: "form-error-message mb-24 center" },
                  t.invalidCredentials
                )
              : null,
            s.createElement(
              "div",
              { className: "mb-24" },
              s.createElement(
                ze.a,
                { className: "button button--filled", onFastClick: m },
                t.login
              )
            ),
            e.canSignup
              ? s.createElement(
                  s.Fragment,
                  null,
                  s.createElement(
                    "div",
                    { className: "or-line" },
                    s.createElement("div", { className: "or-text" }, t.op_or)
                  ),
                  e.isGoogleAvailable
                    ? s.createElement(
                        s.Fragment,
                        null,
                        s.createElement(
                          "div",
                          { className: "mb-24" },
                          s.createElement(
                            ze.a,
                            {
                              onFastClick: f,
                              className: "google-login-button",
                            },
                            s.createElement("span", {
                              className: "google-logo logo",
                            }),
                            s.createElement(
                              "span",
                              null,
                              " ",
                              t.loginWithGoogle,
                              " "
                            )
                          )
                        )
                      )
                    : null,
                  s.createElement(
                    "div",
                    null,
                    s.createElement(
                      "div",
                      { className: "center mb-40" },
                      s.createElement(
                        ze.a,
                        {
                          onFastClick: () => e.switchPage("SignUp0"),
                          className: "link",
                        },
                        t.dontHaveAnAccount
                      )
                    )
                  )
                )
              : null,
            s.createElement(
              "div",
              { className: "popup--text" },
              s.createElement("span", null, t.problemsLoggingIn, " "),
              s.createElement(
                ze.a,
                {
                  onFastClick: () => e.switchPage("ForgotPassword0"),
                  className: "link",
                },
                t.resetPassword
              )
            )
          );
        },
        ResetPassword0: (e) => {
          const t = Object(_e.a)(),
            [i, o] = s.useState(null),
            [a, n] = s.useState(""),
            [r, l] = s.useState(""),
            [c, d] = s.useState(""),
            [u, p] = s.useState(!1),
            [h, m] = s.useState(!1),
            f = r || "",
            g = [
              [f.length >= 8, t.passHintLen],
              [f.toLowerCase() !== f && f.toUpperCase() !== f, t.passHintCase],
              [/[^\w\s]/.test(f), t.passHintChar],
              [/\d/.test(f), t.passHintNum],
            ],
            v = a === r && a.length > 0,
            b = r !== c && c.length > 0 && !v,
            y = !g.some(([e, t]) => !e),
            w = !b && !v && y;
          function x() {
            if (!w) return void m(!0);
            window.dbms
              .getRemoteConnection()
              .changeExpiredPassword(
                { userId: e.userId, oldPassword: a, newPassword: r },
                (t, i) => {
                  if (t) return o(t);
                  e.close();
                }
              );
          }
          return s.createElement(
            s.Fragment,
            null,
            s.createElement(
              "h4",
              { className: "center mb-24" },
              t.passwordExpired
            ),
            s.createElement(
              "div",
              { className: "mb-24" },
              s.createElement(
                "div",
                { className: "", style: { width: "100%" } },
                s.createElement(
                  "label",
                  { className: "form-control required" },
                  s.createElement(
                    "span",
                    { className: "caption" },
                    t.oldPassword
                  ),
                  s.createElement("input", {
                    type: "password",
                    required: !0,
                    onChange: (e) => {
                      n(e.target.value), o(null);
                    },
                    value: a,
                  })
                ),
                s.createElement(
                  "label",
                  { className: "form-control required" },
                  s.createElement(
                    "span",
                    { className: "caption" },
                    t.newPassword
                  ),
                  s.createElement("input", {
                    type: "password",
                    required: !0,
                    onChange: (e) => {
                      l(e.target.value), o(null);
                    },
                    value: r,
                    onFocus: () => p(!0),
                    onBlur: () => p(!1),
                  }),
                  v
                    ? s.createElement(
                        "div",
                        { className: "error-message" },
                        t.newOldPassword
                      )
                    : null,
                  h && !y
                    ? s.createElement(
                        "div",
                        { className: "error-message" },
                        t.wrongPassword
                      )
                    : null,
                  s.createElement(
                    "div",
                    { className: Object(qo.a)("password-hint", { active: u }) },
                    s.createElement(
                      "div",
                      { className: "password-hint-pointer-wrapper" },
                      s.createElement(
                        "div",
                        { className: "password-hint-pointer-border" },
                        s.createElement("div", {
                          className: "password-hint-pointer",
                        })
                      )
                    ),
                    s.createElement(
                      "div",
                      { className: "password-hint-container" },
                      s.createElement("div", null, t.passHint),
                      g.map(([e, t], i) =>
                        s.createElement(
                          "div",
                          { key: i, className: Object(qo.a)({ fulfilled: e }) },
                          t
                        )
                      )
                    )
                  )
                ),
                s.createElement(
                  "label",
                  { className: "form-control required" },
                  s.createElement(
                    "span",
                    { className: "caption" },
                    t.repeatPassword
                  ),
                  s.createElement("input", {
                    type: "password",
                    required: !0,
                    onChange: (e) => {
                      d(e.target.value), o(null);
                    },
                    value: c,
                  }),
                  b
                    ? s.createElement(
                        "div",
                        { className: "error-message" },
                        t.matchPasswords
                      )
                    : null
                )
              ),
              i
                ? s.createElement(
                    "div",
                    { className: "form-error-message mb-24 center" },
                    i
                  )
                : null
            ),
            s.createElement(
              "div",
              { className: "mb-24" },
              s.createElement(
                ze.a,
                { className: "button button--filled", onFastClick: x },
                t.save
              )
            )
          );
        },
        ForgotPassword0: (e) => {
          const t = Object(_e.a)(),
            [i, o] = s.useState(!1),
            [a, n] = s.useState(null),
            r = (t) => {
              e.setFormState({ email: t.target.value }), o(!1);
            },
            c = b.util.isValidEmail(e.formState.email);
          function d() {
            if (!c) return o(!0);
            const i = window.dbms;
            Object(l.f)("ForgotPassword", "Click"),
              i
                .getRemoteConnection()
                .forgotPassword({ email: e.formState.email }, (i) => {
                  i
                    ? (n(i), Object(l.f)("ForgotPassword", "Error"))
                    : (n(t.forgotPasswordSuccess + ":\n" + e.formState.email),
                      Object(l.f)("ForgotPassword", "Success"),
                      e.switchPage("SignIn0"));
                });
          }
          return s.createElement(
            s.Fragment,
            null,
            s.createElement(ze.a, {
              className: "close-popup",
              onFastClick: () => e.close(),
            }),
            s.createElement(
              "h4",
              { className: "center mb-24" },
              t.forgotPassword
            ),
            s.createElement(
              "div",
              { className: "mb-24" },
              s.createElement(
                "div",
                { className: "", style: { width: "100%" } },
                s.createElement(
                  "label",
                  { className: "form-control required" },
                  s.createElement("span", { className: "caption" }, t.email),
                  s.createElement("input", {
                    className: Object(qo.a)({ error: i && !c }),
                    type: "email",
                    required: !0,
                    onChange: r,
                    value: e.formState.email,
                  }),
                  i && !c
                    ? s.createElement(
                        "div",
                        { className: "error-message" },
                        t.emailNotRegistered
                      )
                    : null
                )
              )
            ),
            a
              ? s.createElement(
                  "div",
                  { className: "form-error-message mb-24 center" },
                  t.wrongUserPassword
                )
              : null,
            s.createElement(
              "div",
              { className: "mb-24" },
              s.createElement(
                ze.a,
                { className: "button button--filled", onFastClick: d },
                t.resetPassword
              )
            ),
            s.createElement(
              "div",
              { className: "popup--text" },
              s.createElement("span", null, t.noNeedToResetPassword, " "),
              s.createElement(
                ze.a,
                {
                  onFastClick: () => e.switchPage("SignIn0"),
                  className: "link",
                },
                t.signIn
              )
            )
          );
        },
      },
      Ea = (e) => {
        const [t, i] = s.useState(e.wantsSignup ? "SignUp0" : "SignIn0"),
          [o, a] = s.useState(""),
          [n, r] = s.useState({
            password: "",
            displayName: "",
            telephone: "",
            country: "Germany",
            company: "",
            email: "",
            locale: "",
            isBusiness: !0,
            newsletter: !1,
            businessSize: "",
          });
        function c(e) {
          Object(l.f)(e, "Open"), i(e);
        }
        function d() {
          const e = _a[t];
          return e || null;
        }
        function u(e) {
          r($a({}, n, {}, e));
        }
        const p = d();
        return s.createElement(
          s.Fragment,
          null,
          s.createElement(
            "div",
            { className: "credentials-popup--background" },
            s.createElement(
              "div",
              { className: "credentials-popup--content" },
              s.createElement(
                "div",
                { className: "credentials" },
                p &&
                  s.createElement(p, {
                    formState: n,
                    setFormState: u,
                    switchPage: c,
                    close: e.close,
                    afterLogin: e.afterLogin,
                    canSignup: e.canSignup,
                    userId: o,
                    setUserId: a,
                    isGoogleAvailable: e.isGoogleAvailable,
                  })
              )
            )
          )
        );
      };
    o("./src/react/EmailVerificationReminder.css");
    const Da = (e) => {
      const [t, i] = r.a.useState(!1),
        o = r.a.useRef(void 0),
        a = () => {
          i(!0),
            (o.current = window.setTimeout(() => {
              i(!1);
            }, 5e3)),
            e.onResendClick();
        };
      return (
        Object(s.useEffect)(() => window.clearTimeout(o.current), []),
        r.a.createElement(
          "div",
          { className: "EmailVerificationReminder_root" },
          r.a.createElement("div", {
            className:
              "i-48-24 i-asIs i-email-notification EmailVerificationReminder_icon",
          }),
          r.a.createElement(
            "div",
            null,
            r.a.createElement(
              "div",
              { className: "EmailVerificationReminder_header" },
              Object(_e.a)().pleaseConfirmYourEmail
            ),
            t
              ? r.a.createElement(
                  "span",
                  { className: "EmailVerificationReminder_verified" },
                  Object(_e.a)().verificationLinkSent + " " + e.email
                )
              : r.a.createElement(
                  "div",
                  { className: "EmailVerificationReminder_body" },
                  r.a.createElement(
                    "span",
                    { className: "EmailVerificationReminder_buttonContainer" },
                    r.a.createElement(
                      ze.a,
                      {
                        onFastClick: a,
                        className: "EmailVerificationReminder_button",
                      },
                      Object(_e.a)().resend
                    ),
                    ` ${Object(_e.a)().to} ${e.email} `
                  ),
                  r.a.createElement(
                    "span",
                    { className: "EmailVerificationReminder_buttonContainer" },
                    Object(_e.a)().or,
                    " ",
                    r.a.createElement(
                      ze.a,
                      {
                        className: "EmailVerificationReminder_button",
                        onFastClick: e.onContactSupportClick,
                      },
                      Object(_e.a)().contactSupport
                    )
                  )
                )
          )
        )
      );
    };
    var Na = o("./src/react/util/hooks.ts");
    o("./src/react/root/RootHeader.scss");
    const Ma = (e) => {
      const [t, i] = r.a.useState({ isOpen: !1 }),
        o = (e) =>
          e.map((e) => {
            var t;
            return {
              id: e.id,
              caption:
                null !== (t = e.text) && void 0 !== t
                  ? t
                  : Object(_e.a)().unnamed,
              children: [],
              isHidden: !1,
              hasExpressionErrors: () => !1,
              hasParent: !0,
            };
          }),
        a = Object(Na.a)(),
        n = e.onNewItemClick;
      return a
        ? (() => {
            const a = e.items.find((e) => e.isSelected),
              s = () =>
                r.a.createElement(
                  "div",
                  {
                    style: {
                      display: "flex",
                      flexDirection: "column",
                      overflow: "hidden",
                    },
                  },
                  r.a.createElement(
                    ze.a,
                    {
                      onFastClick: () => i({ isOpen: !1 }),
                      className: "nav-item head",
                    },
                    r.a.createElement("div", {
                      className: "nav-item-icon i-24-24 i-white i-arrow-back",
                    }),
                    r.a.createElement(
                      "div",
                      { className: "nav-item-text head" },
                      Object(_e.a)().backToTeam
                    )
                  ),
                  r.a.createElement(tt, {
                    selection: e.currentItemId,
                    onTableClick: (t) => {
                      t === e.currentItemId
                        ? e.onContextMenuClick(t)
                        : e.onItemSelect(t),
                        i({ isOpen: !1 });
                    },
                    items: o(e.items),
                    isAdminEnabled: !1,
                    isAdmin: !1,
                    onSortEnd: () => {},
                    containerClassName: "RootHeader_hudContainer",
                  }),
                  null === n
                    ? null
                    : r.a.createElement(
                        ze.a,
                        {
                          onFastClick: () => {
                            n(), i({ isOpen: !1 });
                          },
                          className: "nav-item",
                        },
                        r.a.createElement(
                          "div",
                          {
                            className:
                              "RootHeader_createTeamContainer nav-item-text",
                          },
                          r.a.createElement("div", {
                            className: "i-32-24 i-white i-setting-add",
                          }),
                          dbms.getRemoteConnection().isLoggedIn()
                            ? Object(_e.a)().newTeam
                            : Object(_e.a)().signupCreateTeam
                        )
                      )
                );
            return r.a.createElement(
              "div",
              null,
              r.a.createElement(
                "div",
                { className: "RootHeader_iconContainer" },
                r.a.createElement(ze.a, {
                  onFastClick: () => i({ isOpen: !0 }),
                  className:
                    "RootHeader_burgerIcon i-32-24 i-white i-setting-side-menu-left",
                }),
                void 0 === a
                  ? null
                  : r.a.createElement(
                      ze.a,
                      {
                        onFastClick: () => e.onContextMenuClick(a.id),
                        className: "RootHeader_selectedTeam",
                      },
                      a.text
                    )
              ),
              r.a.createElement(
                "div",
                { className: "RootHeader_menuContainer" },
                r.a.createElement(
                  at.slide,
                  {
                    disableAutoFocus: !0,
                    isOpen: t.isOpen,
                    customBurgerIcon: !1,
                    customCrossIcon: !1,
                    styles: {
                      bmMenu: { background: "#566eb1" },
                      bmMenuWrap: { transition: "all 0.3s ease 0s" },
                      bmOverlay: { transition: "opacity 0.3s ease 0s" },
                      bmItemList: {
                        display: "flex",
                        flexDirection: "column",
                        overflow: "hidden",
                      },
                    },
                    onStateChange: (e) => i({ isOpen: e.isOpen }),
                  },
                  s()
                )
              )
            );
          })()
        : r.a.createElement(lt.a, {
            popupItemBackground: "OFF_WHITE",
            items: e.items,
            currentItemId: e.currentItemId,
            onItemSelect: e.onItemSelect,
            onContextMenuClick: e.onContextMenuClick,
            onNewItemClick: n,
            newButtonText:
              "+ " +
              (dbms.getRemoteConnection().isLoggedIn()
                ? Object(_e.a)().newTeam
                : Object(_e.a)().signupCreateTeam),
          });
    };
    function Ia(e) {
      const { onLogin: t } = e;
      return r.a.createElement(
        "div",
        { className: "sso-logout--container" },
        r.a.createElement("span", { className: "logo" }),
        r.a.createElement(
          "p",
          { className: "message" },
          Object(b.getLocale)().ssoLogoutHeader
        ),
        r.a.createElement(
          "p",
          { className: "details" },
          Object(b.getLocale)().ssoLogoutMessage
        ),
        r.a.createElement(
          ze.a,
          { behaviour: "PREVENT_RIPPLE", className: "cta", onFastClick: t },
          Object(b.getLocale)().login
        )
      );
    }
    o("./src/react/verification/ResendButton.scss");
    Object(_e.a)().resend;
    const Ra = (e) => {
        const t = Object(_e.a)(),
          [i, o] = s.useState(0);
        function a() {
          0 === i &&
            (o(1),
            e
              .action()
              .then(() => {
                setTimeout(() => {
                  o(2),
                    setTimeout(() => {
                      o(0);
                    }, 2e3);
                }, 500);
              })
              .catch((e) => console.error("resend error: ", e)));
        }
        return s.createElement(
          s.Fragment,
          null,
          s.createElement(
            "div",
            {
              className: "resend-button nx-button-text blue",
              onTouchEnd: a,
              onMouseUp: a,
            },
            s.createElement(
              "div",
              {
                className: Object(qo.a)("btn-wrapper", {
                  next: 0 === i,
                  prev: 1 === i,
                }),
              },
              t.resend
            ),
            s.createElement(
              "div",
              {
                className: Object(qo.a)("btn-wrapper", {
                  next: 1 === i,
                  prev: 2 === i,
                }),
              },
              s.createElement("div", { className: "small-spinner" })
            ),
            s.createElement(
              "div",
              {
                className: Object(qo.a)("btn-wrapper", {
                  next: 2 === i,
                  prev: 0 === i,
                }),
              },
              t.sent
            ),
            s.createElement("div", { className: "size-reference" }, t.resend)
          )
        );
      },
      Fa = {
        Verify1: (e) => {
          const t = Object(_e.a)(),
            i = new Date().getHours();
          let o;
          const a = [t.night, t.morning, t.day, t.evening];
          function n() {
            e.logout(), e.close();
          }
          return (
            (o = i < 12 ? (i < 6 ? 0 : 1) : i < 18 ? 2 : 3),
            NinoxDocumentInteraction.setUserDefault(
              "nx.session.login.user",
              e.user.email
            ),
            s.createElement(
              s.Fragment,
              null,
              s.createElement(
                "div",
                { className: "mb-16" },
                s.createElement("div", {
                  className: "i-48-48 i-asIs i-email-notification",
                })
              ),
              s.createElement(
                "h4",
                { className: "mb-16" },
                t.helloGood$.replace("$", a[o])
              ),
              s.createElement(
                "div",
                { className: "content--60" },
                t.verificationLinkSent
              ),
              s.createElement("div", { className: "mb-16" }, e.user.email),
              s.createElement(
                "div",
                { className: "mb-48 content--60" },
                t.canFindIt
              ),
              s.createElement(
                "div",
                { className: "verify-popup--buttons" },
                s.createElement(Ra, { action: e.resend }),
                s.createElement(
                  ua,
                  { type: "grey-simple", onClick: n },
                  t.switchAccount
                )
              )
            )
          );
        },
        Verify2: (e) => {
          const t = Object(_e.a)(),
            i = t.verifyEmail$.trim().split("$");
          function o() {
            e.logout(), e.close();
          }
          return s.createElement(
            s.Fragment,
            null,
            s.createElement(
              "div",
              { className: "mb-16" },
              s.createElement("div", {
                className: "i-48-48 i-asIs i-email-notification",
              })
            ),
            s.createElement(
              "h4",
              { className: "mb-16" },
              t.verificationPending
            ),
            s.createElement(
              "div",
              { className: "mb-48 content--60" },
              i[0],
              s.createElement(
                "span",
                { className: "content--80" },
                e.user.email
              ),
              i[1]
            ),
            s.createElement(
              "div",
              { className: "verify-popup--buttons" },
              s.createElement(Ra, { action: e.resend }),
              s.createElement(
                ua,
                { type: "grey-simple", onClick: o },
                t.switchAccount
              )
            )
          );
        },
      },
      Aa = (e) => {
        const [t, i] = s.useState(e.isFirst ? "Verify1" : "Verify2");
        function o(e) {
          Object(l.f)(e, "Open"), i(e);
        }
        function a() {
          return Fa[t] || null;
        }
        const n = a();
        return s.createElement(
          s.Fragment,
          null,
          s.createElement(
            "div",
            { className: "credentials-verify--wrapper" },
            s.createElement(
              "div",
              { className: "verify-popup--background" },
              s.createElement(
                "div",
                { className: "credentials-popup--content" },
                s.createElement(
                  "div",
                  { className: "credentials" },
                  n &&
                    s.createElement(n, {
                      user: e.user,
                      switchPage: o,
                      logout: e.logout,
                      resend: e.resend,
                      close: e.close,
                    })
                )
              )
            )
          )
        );
      };
    var Oa = o("./src/react/NXSwitch.tsx");
    o("./src/react/AdminDatabaseActions.css");
    const za = (e) =>
      s.createElement(
        "div",
        {
          className:
            "AdminDataBaseActions_root" +
            (e.isEmptyTeam ? "AdminDataBaseActionsEmptyTeam" : ""),
        },
        s.createElement(
          "div",
          { className: "AdminDatabaseActions_buttonsContainer" },
          s.createElement(
            "div",
            {
              className:
                "AdminDatabaseActions_buttonContainer --ul-create-db-button",
            },
            s.createElement(
              ze.a,
              {
                onFastClick: e.onNewDatabaseClick,
                behaviour: "FORCE_RIPPLE",
                className: "AdminDatabaseActions_iconContainer",
              },
              s.createElement("div", {
                className: "i-32-24 i-light-grey i-plus",
              })
            ),
            s.createElement(
              "div",
              { className: "AdminDatabaseActions_textContainer" },
              Object(_e.a)().createDatabase
            )
          ),
          s.createElement(
            "div",
            { className: "AdminDatabaseActions_buttonContainer" },
            s.createElement(
              ze.a,
              {
                onFastClick: e.onImportArchiveClick,
                behaviour: "FORCE_RIPPLE",
                className: "AdminDatabaseActions_iconContainer",
              },
              s.createElement("div", {
                className: "i-32-24 i-light-grey i-setting-import",
              })
            ),
            s.createElement(
              "div",
              { className: "AdminDatabaseActions_textContainer" },
              Object(_e.a)().importArchive
            )
          ),
          void 0 !== e.onManageBackupsClick
            ? s.createElement(
                "div",
                { className: "AdminDatabaseActions_buttonContainer" },
                s.createElement(
                  ze.a,
                  {
                    onFastClick: e.onManageBackupsClick,
                    behaviour: "FORCE_RIPPLE",
                    className: "AdminDatabaseActions_iconContainer",
                  },
                  s.createElement("div", {
                    className: "i-32-24 i-light-grey i-backup",
                  })
                ),
                s.createElement(
                  "div",
                  { className: "AdminDatabaseActions_textContainer" },
                  Object(_e.a)().manageBackups
                )
              )
            : null
        )
      );
    o("./src/react/DatabaseIcon.css");
    const La = "DatabaseIcon_rootId",
      ja = (e) => {
        const [t, i] = s.useState(null);
        s.useEffect(() => {
          async function t() {
            let t = e.db.icon;
            "URL" === e.db.type &&
              null !== t &&
              (t.startsWith("//") && (t = "https:" + t),
              t.startsWith("https://") &&
                (t = (await window.localFileSystem.cachedURL(t, null)) || t),
              i(t));
          }
          t();
        }, [e.db.icon]);
        const o = (e) => {
            let i, o, a;
            return (
              "URL" === e.type && null !== t
                ? (o = {
                    background: `url(${t})`,
                    backgroundSize: "contain",
                    backgroundRepeat: "no-repeat",
                    width: "40px",
                    height: "40px",
                    padding: "4px",
                  })
                : ((a = `root-db-icon i-db-icon-big i-db i-${
                    e.icon ? e.icon : "0"
                  }`),
                  (i = "DatabaseIcon_newIconWrapper")),
              s.createElement(
                "span",
                { className: i },
                s.createElement("div", { className: a, style: o }),
                e.isStored
                  ? null
                  : s.createElement("div", {
                      className: "db-badge db-badge-new db-badge-react",
                    })
              )
            );
          },
          a = (t) => {
            void 0 !== e.onContextMenu &&
              e.onContextMenu(t, e.db.id, La + e.index);
          };
        return s.createElement(
          s.Fragment,
          null,
          s.createElement(
            ze.a,
            {
              id: La + e.index,
              behaviour: "FORCE_RIPPLE",
              onFastClick: () => e.onClick(e.db.id),
              onFastContextMenu: a,
              className: Object(qo.a)(
                "root-db DatabaseIcon_buttonContainer",
                e.db.isStored ? "root-db-stored" : "root-db-not-stored",
                "--ul-db-root"
              ),
              "data-dbtype": "sync",
            },
            s.createElement(
              "div",
              {
                className: "DatabaseIcon_iconContainer",
                style: { backgroundColor: e.db.color ? e.db.color : "" },
              },
              o(e.db)
            ),
            void 0 === e.onContextMenu
              ? null
              : s.createElement(
                  ze.a,
                  {
                    className: "root-db-indicator-place",
                    onFastClick: a,
                    onContextMenu: () => {},
                  },
                  s.createElement("div", {
                    className:
                      (e.db.isStored
                        ? "root-db-indicator"
                        : "root-db-indicator-new") +
                      " i-32-24 i-light-grey i-line-down",
                  })
                ),
            s.createElement(
              "div",
              { className: "root-db-hover-place" },
              s.createElement("div", {
                className: "root-db-hover",
                style: { background: e.db.color ? e.db.color : "" },
              })
            ),
            void 0 === e.db.name
              ? null
              : s.createElement(
                  "div",
                  { className: "DatabaseIcon_textContainer" },
                  e.db.name
                ),
            void 0 !== e.db.localStorageType
              ? s.createElement("div", {
                  style: { position: "absolute", top: 0 },
                  className: Object(qo.a)("i-32-24 i-light-grey", {
                    "i-cloud-okay": "cloud" === e.db.localStorageType,
                  }),
                })
              : null
          )
        );
      };
    o("./src/react/DatabaseList.scss");
    var Pa = o("./src/react/util/SearchBarWithX.tsx");
    const Ha = (e) => {
      const t = (t, i, o) => {
          e.onContextMenuClick(ze.b.getTarget(t).closest("#" + o), i);
        },
        [i, o] = s.useState("");
      return (
        !e.isMobile && i.length > 0 && o(""),
        s.createElement(
          "div",
          { className: "DatabaseList_root" },
          e.isMobile
            ? s.createElement(Pa.a, {
                onFilterChange: o,
                className: "DatabaseList_searchContainer",
                placeholder: Object(_e.a)().databaseName,
              })
            : null,
          s.createElement(
            "div",
            { className: "DatabaseList_items" },
            e.databases.map((o, a) =>
              "" === i ||
              void 0 === o.name ||
              o.name.toLowerCase().includes(i.toLowerCase())
                ? s.createElement(
                    "div",
                    { key: o.id, className: "DatabaseList_item" },
                    s.createElement(ja, {
                      index: a,
                      onClick: e.onDatabaseClick,
                      db: o,
                      onContextMenu: t,
                    })
                  )
                : null
            )
          )
        )
      );
    };
    function Ua(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function Va(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? Ua(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : Ua(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    class Wa extends s.Component {
      constructor(e) {
        super(e),
          Ie()(this, "isMounted", void 0),
          Ie()(this, "handleContextMenu", (e, t) => {
            Object(l.f)("DatabaseMenu", "Open"),
              this.setState({ currentContext: { target: e, id: t } });
          }),
          Ie()(this, "getContextMenuItems", () => {
            const e = [];
            return (
              this.props.isAdmin &&
                e.push(
                  {
                    text: Object(_e.a)().renameDatabase,
                    onClick: () =>
                      this.handleContextMenuItemClick(
                        "DatabaseMenu",
                        this.props.onRenameDatabase
                      ),
                  },
                  {
                    text: Object(_e.a)().createBackup,
                    onClick: () =>
                      this.handleContextMenuItemClick(
                        "CreateBackup",
                        this.props.onCreateBackup
                      ),
                  },
                  {
                    text: Object(_e.a)().remove,
                    onClick: () =>
                      this.handleContextMenuItemClick(
                        "Remove",
                        this.props.onRemove
                      ),
                  }
                ),
              window.NINOX_APP &&
                e.push({
                  text: Object(_e.a)().resetSync,
                  onClick: () =>
                    this.handleContextMenuItemClick(
                      "ResetSync",
                      this.props.onResetSync
                    ),
                }),
              e
            );
          }),
          (this.isMounted = !0),
          (this.state = {
            currentContext: null,
            classAndStyle: { className: "", style: {} },
          });
      }
      componentDidMount() {
        this.isMounted = !0;
      }
      componentWillUnmount() {
        this.isMounted = !1;
      }
      async updateClassAndStyle() {
        const e = await this.getClassAndStyle();
        this.isMounted &&
          !b.util.equals(e, this.state.classAndStyle) &&
          this.setState(Va({}, this.state, { classAndStyle: e }));
      }
      render() {
        this.updateClassAndStyle();
        const e = this.getCustomHTML(),
          t = this.getDatabases(),
          i = 0 === t.length,
          { className: o, style: a } = this.state.classAndStyle;
        return s.createElement(
          "div",
          { className: Object(qo.a)(o, "--ul-database"), style: a },
          s.createElement(Ha, {
            databases: t,
            onContextMenuClick: this.handleContextMenu,
            onDatabaseClick: this.props.onDatabaseClick,
            isMobile: this.props.isMobile,
          }),
          this.props.isAdmin
            ? s.createElement(za, {
                isEmptyTeam: i,
                onNewDatabaseClick: this.props.onNewDatabaseClick,
                onImportArchiveClick: this.props.onImportArchiveClick,
                onManageBackupsClick: this.props.onManageBackupsClick,
              })
            : null,
          i
            ? null
            : s.createElement(Yo, {
                items: this.getContextMenuItems(),
                positionAdjustment: { top: -20, left: 0 },
                clickTarget:
                  null !== this.state.currentContext
                    ? this.state.currentContext.target
                    : null,
                onClick: () => this.setState({ currentContext: null }),
                show: null !== this.state.currentContext,
              }),
          e
            ? s.createElement("div", { dangerouslySetInnerHTML: { __html: e } })
            : null
        );
      }
      handleContextMenuItemClick(e, t) {
        Object(Ot.a)(this.state.currentContext),
          Object(l.f)("DatabaseMenu", e),
          t(this.state.currentContext.id),
          this.setState({ currentContext: null });
      }
      getCustomHTML() {
        const e = this.props.account;
        return (e ? e.settings : {}).backgroundCustomHTML;
      }
      async getClassAndStyle() {
        const e = this.props.account,
          t = e ? e.settings : {},
          i = t.backgroundCustomCSS,
          o = e ? await e.backgroundURL() : null;
        let a = "";
        const n = {};
        if (i) {
          a = "root-remote-dblist";
          for (const e in i)
            if (i.hasOwnProperty(e)) {
              let t = i[e];
              const o = /^url\((.*)\)$/.exec(t);
              if (o) {
                const e = o[1];
                t =
                  "url(" +
                  ((await this.props.localFileSystem.cachedURL(e, null)) || e) +
                  ")";
              }
              n[e.replace(/-[a-z]/g, (e) => e[1].toUpperCase())] = t;
            }
        } else if (t.bgType) {
          if ("solid" === t.bgType)
            (a = "root-remote-dblist"),
              (n.backgroundImage = ""),
              (n.backgroundColor = t.bgColor || "");
          else if ("gradient" === t.bgType)
            (a = "root-remote-dblist"),
              (n.backgroundImage =
                "linear-gradient(" +
                (t.bgGradient0 || "#ccc") +
                " 0%, " +
                (t.bgGradient1 || "#aaa") +
                " 100%)"),
              (n.backgroundColor = "");
          else if ("image" === t.bgType)
            (a = "root-remote-dblist background-file"),
              (n.backgroundImage = 'url("' + o + '")'),
              (n.backgroundColor = t.bgColor || "");
          else {
            const e = t.backgroundClass || "background";
            (a = "root-remote-dblist background " + e),
              "background-file" === e
                ? ((n.backgroundImage = 'url("' + o + '")'),
                  (n.backgroundColor = t.bgColor || ""))
                : ((n.backgroundImage = ""), (n.backgroundColor = ""));
          }
          (n.backgroundPosition =
            (t.bgPosH || "center") + " " + (t.bgPosV || "center")),
            (n.backgroundSize = t.bgSize || "cover"),
            (n.backgroundRepeat = t.bgRepeat || "no-repeat");
        } else
          (a = "root-remote-dblist"),
            (n.backgroundPosition = "center center"),
            (n.backgroundSize = "cover"),
            (n.backgroundRepeat = "no-repeat"),
            (n.backgroundImage = "");
        return (
          this.props.hideUserList && (n.right = "0"), { className: a, style: n }
        );
      }
      getDatabases() {
        const e = this.props.account;
        return e
          ? e.listDatabases().map((e) => {
              const t = e.settings,
                i = t ? t.icon : null,
                o = t ? t.color : null;
              return {
                name: e.name,
                id: e.id,
                isStored: e.isStored,
                color: o,
                icon: i,
                type: /^(https?\:)?\/\//.test(i) ? "URL" : "IMAGE",
              };
            })
          : [];
      }
    }
    class Ba extends s.Component {
      constructor(e) {
        super(e);
      }
      render() {
        const e = this.props.account,
          t = e.getInvitations();
        return e.isAdmin()
          ? s.createElement(
              s.Fragment,
              null,
              t.length > 0
                ? s.createElement(
                    s.Fragment,
                    null,
                    s.createElement(
                      "div",
                      {
                        className: "account-head",
                        style: { marginTop: "16px" },
                      },
                      Object(_e.a)().invitations
                    ),
                    s.createElement(
                      "div",
                      { className: "account-invitations" },
                      t.map((e) =>
                        s.createElement(
                          ze.a,
                          {
                            key: e.inviteCode,
                            className: "account-invitation",
                            onFastClick: () => this.props.onClick(e.inviteCode),
                          },
                          s.createElement(Ro, {
                            onClick: () => this.props.onClick(e.inviteCode),
                            user: { id: "0", name: e.email },
                            size: 24,
                            style: { margin: "4px -2px 4px 4px" },
                          }),
                          s.createElement(
                            "div",
                            { className: "account-invitation-name" },
                            e.email
                          )
                        )
                      )
                    )
                  )
                : null
            )
          : null;
      }
    }
    o("./src/react/root/TeamInfo.scss");
    function qa(e) {
      const t = e.plan;
      return "trial" === t.name
        ? s.createElement(
            "div",
            { className: "account-plan" },
            Object(_e.a)().planTrial,
            s.createElement("br", null),
            Object(_e.a)().planTrialExpiresAt,
            ": ",
            b.util.formatLocaleDate(t.expiresAt)
          )
        : "basic" === t.name
        ? t.collaborators >= t.accountableUserCount
          ? s.createElement(
              "div",
              { className: "account-plan" },
              Object(_e.a)().planCurrentCovers.replace("$1", t.collaborators)
            )
          : s.createElement(
              "div",
              { className: "account-plan" },
              s.createElement("div", {
                className: "icon-big-white icon-big-close",
                style: {
                  backgroundColor: "#f00",
                  borderRadius: "16px",
                  flex: "0 0 32px",
                  WebkitFlex: "0 0 32px",
                  marginRight: "8px",
                },
              }),
              s.createElement(
                "div",
                null,
                Object(_e.a)().planCurrentCovers.replace("$1", t.collaborators),
                s.createElement("br", null),
                Object(_e.a)().planUsageRequired.replace(
                  "$1",
                  t.accountableUserCount
                )
              )
            )
        : s.createElement(
            "div",
            { className: "account-plan" },
            s.createElement("div", {
              className: "icon-big-white icon-big-close",
              style: {
                backgroundColor: "#f00",
                borderRadius: "16px",
                flex: "0 0 32px",
                WebkitFlex: "0 0 32px",
                marginRight: "8px",
              },
            }),
            s.createElement("div", null, Object(_e.a)().planNone)
          );
    }
    const Ya = (e) => {
        const t = e.account;
        if (t.isOwner() && !e.isPrivateCloud) {
          const i = t.getPlan();
          return s.createElement(
            s.Fragment,
            null,
            s.createElement(
              "div",
              { className: "account-head" },
              Object(_e.a)().currentPlan
            ),
            s.createElement(qa, { plan: i }),
            s.createElement(
              "div",
              { style: { padding: "0 24px" } },
              s.createElement("div", { className: "nx-hspace-flex" }),
              s.createElement(
                ze.a,
                {
                  className: "nx-button-text blue",
                  style: {
                    height: 48,
                    lineHeight: "48px",
                    textAlign: "center",
                  },
                  onFastClick: e.upgradePlan,
                },
                Object(_e.a)().upgradePlan
              )
            ),
            s.createElement("div", {
              style: { height: 1, margin: 24, background: "#EFF1F9" },
            })
          );
        }
        return null;
      },
      Ga = (e) => {
        const t = e.account,
          i = t.getOwnerId(),
          o = t.getCurrentUserId(),
          a = t
            .getMembers()
            .reduce(
              (e, t) => (
                t.id === i
                  ? (e.owner = t)
                  : t.roles.admin
                  ? e.admins.push(t)
                  : e.users.push(t),
                e
              ),
              { owner: null, admins: [], users: [] }
            ),
          n = (e) =>
            s.createElement(
              "div",
              { className: "account-head account-head-responsive" },
              e
            ),
          r = (t) =>
            s.createElement(
              ze.a,
              {
                key: t.id,
                onFastClick: () => e.onClick(t.id),
                className: `account-user ${o === t.id ? " selected" : ""}`,
              },
              o === t.id
                ? s.createElement("div", {
                    className: "account-user-selected-indicator",
                  })
                : null,
              s.createElement(Ro, {
                onClick: () => e.onClick(t.id),
                user: t,
                size: 24,
                style: { margin: "4px -2px 4px 4px" },
              }),
              s.createElement("div", { className: "account-user-name" }, t.name)
            );
        return s.createElement(
          s.Fragment,
          null,
          null !== a.owner
            ? s.createElement(s.Fragment, null, n("Owner"), r(a.owner))
            : null,
          0 === a.admins.length
            ? null
            : s.createElement(
                s.Fragment,
                null,
                n("Admins"),
                a.admins.map((e) => r(e))
              ),
          0 === a.users.length
            ? null
            : s.createElement(
                s.Fragment,
                null,
                n("Members"),
                a.users.map((e) => r(e))
              )
        );
      },
      Xa = (e) =>
        e.hideUserList
          ? null
          : s.createElement(
              "div",
              { className: "root-remote-info" },
              s.createElement(
                "div",
                { className: "TeamInfo_body" },
                s.createElement(Ya, {
                  account: e.account,
                  isPrivateCloud: e.isPrivateCloud,
                  upgradePlan: e.upgradePlan,
                }),
                s.createElement(Ga, {
                  account: e.account,
                  onClick: e.onClickUser,
                }),
                s.createElement(Ba, {
                  account: e.account,
                  onClick: e.onClickInvitation,
                })
              ),
              e.account.isAdmin()
                ? s.createElement(
                    ze.a,
                    {
                      className: "TeamInfo_invite root-remote-button",
                      onFastClick: e.invite,
                    },
                    s.createElement("div", {
                      className: "i-32-24 i-blue i-setting-add",
                    }),
                    Object(_e.a)().invite
                  )
                : null
            );
    o("./src/react/root/TeamPanel.scss");
    const Ka = (e) => {
      const [t, i] = s.useState({ currentSlide: 0 }),
        o = Object(Na.a)(),
        a = e.account,
        n =
          a && a.settings && !0 === a.settings.hideUserList && !a.isRootUser(),
        r = () =>
          s.createElement(Wa, {
            isAdmin: e.isAdmin,
            localFileSystem: e.localFileSystem,
            NinoxDocumentInteraction: e.NinoxDocumentInteraction,
            account: e.account,
            onDatabaseClick: e.onDatabaseClick,
            onCreateBackup: e.onCreateBackup,
            onRemove: e.onRemove,
            onRenameDatabase: e.onRenameDatabase,
            onResetSync: e.onResetSync,
            onNewDatabaseClick: e.onNewDatabaseClick,
            onImportArchiveClick: e.onImportArchiveClick,
            onManageBackupsClick: e.onManageBackupsClick,
            hideUserList: n,
            isMobile: o,
          }),
        l = () =>
          s.createElement(Xa, {
            account: e.account,
            isPrivateCloud: e.isPrivateCloud,
            onClickInvitation: e.onClickInvitation,
            onClickUser: e.onClickUser,
            upgradePlan: e.upgradePlan,
            invite: e.invite,
            hideUserList: n,
          }),
        c = () =>
          s.createElement(
            s.Fragment,
            null,
            s.createElement(Oa.a, {
              onSelect: (e) => i({ currentSlide: e }),
              selectedIndex: t.currentSlide,
              texts: [Object(_e.a)().myDatabases, Object(_e.a)().teamMembers],
            }),
            s.createElement(
              Fe.a,
              {
                style: {
                  overflow: "hidden",
                  display: "flex",
                  background: "white",
                  width: "100%",
                },
                enableMouseEvents: !0,
                onChangeIndex: (e) => {
                  i({ currentSlide: e });
                },
                resistance: !0,
                slideClassName: "TeamPanel_slide",
                index: t.currentSlide,
              },
              s.createElement("div", null, r()),
              l()
            )
          );
      return s.createElement(
        "div",
        { className: "TeamPanel_root" },
        o ? c() : s.createElement(s.Fragment, null, r(), l())
      );
    };
    function Ja(e) {
      const t = e.items.sort((e, t) => t.timestamp - e.timestamp);
      if (0 === t.length) return null;
      const i = t[0].dbname;
      return s.createElement(
        "div",
        null,
        s.createElement(
          "div",
          { className: "root-backup-item root-backup-group" },
          s.createElement("div", { className: "root-backup-item-label" }, i)
        ),
        t.map((t) =>
          s.createElement(
            ze.a,
            {
              key: t.id,
              onFastClick: () => e.handleSnapshotClick(t.id),
              className:
                "root-backup-item root-backup-child" +
                (e.selectedSnapshotId === t.id ? " selected" : ""),
            },
            s.createElement(
              "div",
              { className: "root-backup-item-info" },
              s.createElement(
                "div",
                null,
                b.util.formatLocaleDateTime(t.timestamp)
              )
            )
          )
        )
      );
    }
    class Za extends s.Component {
      constructor(e) {
        super(e),
          Ie()(this, "handleSnapshotClick", (e) => {
            this.setState({ selectedSnapshotId: e }),
              this.props.onSnapshotClick(e);
          }),
          (this.state = { selectedSnapshotId: null });
      }
      render() {
        const e = this.props.snapshots;
        return Object.keys(e)
          .map((t) => ({ dbid: t, items: e[t] }))
          .filter((e) => e.items.length > 0)
          .sort((e, t) =>
            String(e.items[0].dbname).localeCompare(String(t.items[0].dbname))
          )
          .map((e) =>
            s.createElement(Ja, {
              key: e.dbid,
              dbid: e.dbid,
              items: e.items,
              selectedSnapshotId: this.state.selectedSnapshotId,
              handleSnapshotClick: this.handleSnapshotClick,
            })
          );
      }
    }
    class Qa extends s.Component {
      constructor(e) {
        super(e);
      }
      render() {
        return s.createElement(
          "div",
          { className: "nx-button-bar", style: { margin: 0, padding: 24 } },
          s.createElement(
            ze.a,
            {
              onFastClick: this.props.onDeleteClick,
              className: "nx-button-text grey",
            },
            Object(_e.a)().remove
          ),
          s.createElement("div", { className: "nx-hspace-flex" }),
          "backups" === this.props.currentTab
            ? s.createElement(
                ze.a,
                {
                  onFastClick: this.props.onDownloadBackupClick,
                  className: "nx-button-text grey",
                },
                Object(_e.a)().dumpDatabase
              )
            : null,
          s.createElement("div", { className: "nx-hspace-small" }),
          s.createElement(
            ze.a,
            {
              onFastClick: this.props.onRestoreClick,
              className: "nx-button-text grey",
            },
            Object(_e.a)().restoreBackup
          ),
          s.createElement("div", { className: "nx-hspace-small" }),
          s.createElement(
            ze.a,
            {
              onFastClick: this.props.onCloseClick,
              className: "nx-button-text blue",
            },
            Object(_e.a)().close
          )
        );
      }
    }
    class en extends s.Component {
      constructor(e) {
        super(e);
      }
      render() {
        return this.props.backups
          .slice()
          .sort((e, t) => t.timestamp - e.timestamp)
          .map((e) =>
            s.createElement(
              ze.a,
              {
                key: e.id,
                onFastClick: () => this.props.onBackupClick(e.id),
                className:
                  "root-backup-item" +
                  (e.id === this.props.selectedBackupId ? " selected" : ""),
              },
              s.createElement(
                "div",
                { className: "root-backup-item-label" },
                e.dbname
              ),
              s.createElement(
                "div",
                { className: "root-backup-item-info" },
                s.createElement(
                  "div",
                  null,
                  b.util.formatLocaleDateTime(e.timestamp)
                ),
                s.createElement("div", null, e.user ? e.user.name : "")
              )
            )
          );
      }
    }
    function tn(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function on(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? tn(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : tn(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    const an = "/";
    class nn extends s.Component {
      constructor(e) {
        super(e),
          Ie()(this, "onBackupClicked", (e) => {
            this.setState({ currBackupId: e });
          }),
          Ie()(this, "removeBackup", () => {
            if (null !== this.state.currBackupId)
              if (
                "backups" === this.state.currTab &&
                "backups" === this.getCurrentSelectionType()
              )
                this.props.loading(!0),
                  this.props.account.removeBackup(
                    this.state.currBackupId,
                    (e) => {
                      if ((this.props.loading(!1), e))
                        return this.props.alert(e);
                      this.reload();
                    }
                  );
              else if (
                "snapshots" === this.state.currTab &&
                "snapshots" === this.getCurrentSelectionType()
              ) {
                if (!this.props.isPaidPlan)
                  return this.props.alert(
                    "Please upgrade your account to use this feature."
                  );
                this.props.loading(!0),
                  this.props.account.removeSnapshot(
                    this.state.currBackupId.split(an)[0],
                    parseInt(this.state.currBackupId.split(an)[1], 10),
                    (e) => {
                      if ((this.props.loading(!1), e))
                        return this.props.alert(e);
                      this.reload();
                    }
                  );
              }
          }),
          Ie()(this, "restoreBackup", () => {
            if (
              "backups" === this.state.currTab &&
              "backups" === this.getCurrentSelectionType()
            ) {
              if (!this.props.isPaidPlan)
                return this.props.alert(
                  "Please upgrade your account to use this feature."
                );
              this.props.loading(!0),
                this.props.account.restoreBackup(
                  this.state.currBackupId,
                  (e) => {
                    if ((this.props.loading(!1), e)) return this.props.alert(e);
                    this.props.closePopup();
                  }
                );
            } else if (
              "snapshots" === this.state.currTab &&
              "snapshots" === this.getCurrentSelectionType()
            ) {
              if (!this.props.isPaidPlan)
                return this.props.alert(
                  "Please upgrade your account to use this feature."
                );
              this.props.loading(!0),
                Object(Ot.a)(this.state.currBackupId),
                this.props.account.restoreSnapshot(
                  this.state.currBackupId.split(an)[0],
                  parseInt(this.state.currBackupId.split(an)[1], 10),
                  (e) => {
                    if ((this.props.loading(!1), e)) return this.props.alert(e);
                    this.props.closePopup();
                  }
                );
            }
          }),
          Ie()(this, "downloadBackup", () => {
            if (null === this.state.currBackupId) return;
            let e = null;
            for (const t of this.state.manualBackups)
              if (t.id === this.state.currBackupId) {
                e = t;
                break;
              }
            if (null === e) return;
            const t = this.props.account.downloadBackupURL(
              e.id,
              e.dbname + ".ninox"
            );
            this.props.ninoxDocumentInteraction.openBrowser(t),
              this.props.closePopup();
          }),
          (this.state = {
            currBackupId: e.initialSelection,
            currTab: e.initialTab,
            manualBackups: [],
            snapshots: [],
          }),
          this.reload();
      }
      reload() {
        this.props.loading(!0),
          this.props.account.listBackups((e, t) => {
            this.props.loading(!1), e && this.props.alert(e);
            let i = [];
            if (t) {
              const e = this.props.dbms.getRemoteConnection();
              i = t
                .sort((e, t) => t.timstamp - e.timestamp)
                .map((t) =>
                  on({}, t, {
                    user: e.getAccountUser(this.props.account.id, t.user),
                  })
                );
            }
            this.setState({ manualBackups: i });
          }),
          this.props.account.listSnapshots((e, t) => {
            this.props.loading(!1), e && this.props.alert(e);
            let i = {};
            if (t) {
              for (const e in t)
                t[e] = t[e].map((t) => on({}, t, { id: e + an + t.timestamp }));
              i = t;
            }
            this.setState({ snapshots: i });
          });
      }
      render() {
        return s.createElement(
          "span",
          null,
          s.createElement(
            "div",
            { className: "nx-section-head", style: { borderBottom: "none" } },
            Object(_e.a)().manageBackups
          ),
          s.createElement(Zt, {
            tabs: [
              {
                isSelected: "snapshots" === this.state.currTab,
                text: Object(_e.a)().automatedBackups,
                onClick: () => this.setState({ currTab: "snapshots" }),
              },
              {
                isSelected: "backups" === this.state.currTab,
                text: Object(_e.a)().manualBackups,
                onClick: () => this.setState({ currTab: "backups" }),
              },
            ],
          }),
          s.createElement(
            Fe.a,
            {
              style: {
                height: window.getHeight() - 288,
                overflow: "hidden",
                display: "flex",
                background: "white",
                width: "100%",
              },
              index: "backups" === this.state.currTab ? 1 : 0,
              onChangeIndex: (e) => {
                this.setState(
                  on({}, this.state, {
                    currTab: 1 === e ? "backups" : "snapshots",
                  })
                );
              },
              resistance: !0,
            },
            s.createElement(Za, {
              snapshots: this.state.snapshots,
              onSnapshotClick: this.onBackupClicked,
              selectedSnapshotId: this.state.currBackupId,
            }),
            s.createElement(en, {
              backups: this.state.manualBackups,
              onBackupClick: this.onBackupClicked,
              selectedBackupId: this.state.currBackupId,
            })
          ),
          s.createElement(Qa, {
            currentTab: this.state.currTab,
            onDeleteClick: this.removeBackup,
            onDownloadBackupClick: this.downloadBackup,
            onRestoreClick: this.restoreBackup,
            onCloseClick: this.props.closePopup,
          })
        );
      }
      getCurrentSelectionType() {
        return null === this.state.currBackupId
          ? null
          : -1 === this.state.currBackupId.indexOf(an)
          ? "backups"
          : "snapshots";
      }
    }
    o("./src/react/root/TemplatesList.css");
    class sn extends s.Component {
      constructor(e) {
        super(e);
      }
      render() {
        const e = {
          isStored: !0,
          id: "new",
          type: "IMAGE",
          icon: "root-db-icon i-db-icon-big i-db i-database",
          color: "#9da9ce",
        };
        return s.createElement(
          "div",
          { className: "TemplatesList_root" },
          s.createElement(
            ze.a,
            {
              behaviour: "FORCE_RIPPLE",
              onFastClick: () => this.props.onClick(null),
              className: "TemplatesList_templateContainer",
            },
            s.createElement(ja, {
              db: e,
              onClick: () => this.props.onClick(null),
              index: -1,
            }),
            s.createElement(
              "div",
              { className: "TemplatesList_templateCopy" },
              s.createElement(
                "div",
                { className: "TemplatesList_templateTitle" },
                Object(_e.a)().new
              ),
              s.createElement(
                "div",
                { className: "TemplatesList_templateDesc" },
                Object(_e.a)().noTemplate
              )
            )
          ),
          0 === this.props.templatesList.length
            ? "Loading..."
            : this.props.templatesList.map((e, t) => {
                const i = {
                  color: e.color,
                  icon: e.icon,
                  type: "IMAGE",
                  id: e.id,
                  isStored: !0,
                };
                return s.createElement(
                  ze.a,
                  {
                    key: t,
                    behaviour: "FORCE_RIPPLE",
                    onFastClick: () => this.props.onClick(e),
                    className: "TemplatesList_templateContainer",
                  },
                  s.createElement(ja, {
                    db: i,
                    onClick: () => this.props.onClick(e),
                    index: t,
                  }),
                  s.createElement(
                    "div",
                    { className: "TemplatesList_templateCopy" },
                    s.createElement(
                      "div",
                      { className: "TemplatesList_templateTitle" },
                      e.title
                    ),
                    s.createElement(
                      "div",
                      { className: "TemplatesList_templateDesc" },
                      e.summary
                    )
                  )
                );
              })
        );
      }
    }
    function rn(e) {
      Object(l.f)("Templates", "Open");
      var t = $.backplane({ close: f, cls: "templates-root" }),
        i = $('<div class="nx-popdown-large templates-pane">').appendTo(t);
      const o = $('<div class="nx-section-head templates-head">').appendTo(i);
      $(`<div style="width: 100%">${locale.chooseTemplate}</div>`).appendTo(o),
        $(
          '<div class="i-32-24 i-light-grey i-close" style="position: absolute;right: 24px;">'
        )
          .appendTo(o)
          .touch(p);
      var n = $(
          '<div class="nx-section-pane templates-body" style="">'
        ).appendTo(i),
        r = $('<div class="templates-list --ul-template-list">').appendTo(n),
        c = [];
      function d() {
        a.render(
          s.createElement(sn, { templatesList: c, onClick: (e) => u(e) }),
          r[0]
        );
      }
      function u(i) {
        t.close(),
          Object(l.f)("Templates", "Click", {
            template: i ? i.title : "empty",
          }),
          trackEvent("templates", "click-" + (i ? i.title : "empty")),
          e.okay &&
            e.okay(
              i
                ? { url: i.file, icon: i.icon, color: i.color, name: i.title }
                : void 0,
              t
            );
      }
      function p() {
        t.close(), e.cancel && e.cancel();
      }
      function h(e) {
        switch (e) {
          case "5996a84f60418b1043550550":
          case "5995849160418b1043550513":
            return { icon: "i-db-icon-big i-db i-team", color: "#6691FF" };
          case "5996ada460418b1043550569":
          case "5995881860418b104355051f":
            return { icon: "i-db-icon-big i-db i-calendar", color: "#9485F2" };
          case "5996aa7b60418b1043550560":
          case "599582f260418b104355050d":
            return { icon: "i-db-icon-big i-db i-dj", color: "#52C2CC" };
          case "59bfeba6244b0e67ed2585dc":
          case "59bfd6cf244b0e67ed2585d6":
            return { icon: "i-db-icon-big i-db i-person", color: "#FFB450" };
          case "599c353160418b1043550581":
          case "598b323052ed71082bd69faf":
            return { icon: "i-db-icon-big i-db i-bill", color: "#FF7F66" };
          case "5996acca60418b1043550564":
          case "5995859560418b1043550517":
            return { icon: "i-db-icon-big i-db i-pallet", color: "#52C2CC" };
          case "5cc6cd632cc4a577c6ee6e41":
          case "599586d460418b104355051d":
            return { icon: "i-db-icon-big i-db i-collage", color: "#64C1FA" };
          case "5996a98460418b104355055b":
          case "5995599160418b10435504f8":
            return { icon: "i-db-icon-big i-db i-timer", color: "#9485F2" };
          case "5996a7d260418b1043550547":
          case "5995641b60418b1043550500":
            return {
              icon: "i-db-icon-big i-db i-tree_structure",
              color: "#52C2CC",
            };
          case "5996a8ff60418b1043550556":
          case "59955c2560418b10435504fc":
            return { icon: "i-db-icon-big i-db i-todo_list", color: "#FFB450" };
          case "5996ae3460418b104355056c":
          case "5995896860418b1043550522":
            return { icon: "i-db-icon-big i-db i-cottage", color: "#64C1FA" };
          case "59a041f0e576076126c2cc0b":
          case "598b30d652ed71082bd69fab":
            return { icon: "i-db-icon-big i-db i-frame", color: "#FF7F66" };
          case "5996a65260418b1043550543":
          case "599558a860418b10435504f3":
            return {
              icon: "i-db-icon-big i-db i-spoon_of_sugar",
              color: "#6691FF",
            };
          default:
            return null;
        }
      }
      async function m() {
        var e =
          (await localFileSystem.cachedURL(
            "https://ninox.com/api/templates",
            864e5
          )) || "https://ninox.com/api/templates";
        $.get(e, function (e) {
          var t = void 0;
          if ("string" == typeof e)
            try {
              t = JSON.parse(e);
            } catch (e) {
              console.log(e);
            }
          else t = e;
          if (t && t.length) {
            var i = Q.filter(t, function (e) {
              return e.lang == locale.LOCALE;
            });
            i.length ||
              (i = Q.filter(t, function (e) {
                return "en" == e.lang;
              })),
              i.sort(function (e, t) {
                return null != e.position && null != t.position
                  ? e.position !== t.position
                    ? e.position - t.position
                    : e.title.localeCompare(t.title)
                  : null != e.position
                  ? -1
                  : null != t.position
                  ? 1
                  : e.title.localeCompare(t.title);
              });
            for (const e of i) {
              const t = h(e.id);
              null !== t && ((e.icon = t.icon), (e.color = t.color));
            }
            (c = i), d();
          }
        });
      }
      function f() {
        a.unmountComponentAtNode(r[0]), window.Appcues && window.Appcues.page();
      }
      trackPageView("templates"),
        window.Appcues && window.Appcues.page(),
        m().then(() => d());
    }
    const ln = [
        "#FF7F66",
        "#FFB450",
        "#FADA33",
        "#52CC74",
        "#64C1FA",
        "#6691FF",
        "#9485F2",
        "#EC87E2",
      ],
      cn = [
        "database",
        "person",
        "team",
        "location",
        "info",
        "document",
        "framed_chart",
        "folder",
        "clipboard",
        "group",
        "calendar",
        "dj",
        "frame",
        "bill",
        "pallet",
        "collage",
        "spoon_of_sugar",
        "todo_list",
        "tree_structure",
        "timer",
        "cottage",
        "beer",
        "bulb",
        "palm",
        "start",
        "symbol",
        "bell",
        "libra",
        "trolley",
        "radar",
        "chart",
        "livingcosts",
        "check",
        "duedate",
        "globe",
      ];
    function dn(e) {
      (this.color = e.color || "#9da9ce"),
        (this.icon = e.icon || cn[0]),
        (this.colorIndex = "#CUSTOM"),
        (this.latestRenderId = 0);
      for (let e = 0; e < ln.length; e++)
        ln[e] === this.color && (this.colorIndex = e);
      (this.$el = $('<div class="dbics --ul-icon-selector">').appendTo(
        e.$parent
      )),
        (this.$button = $('<div class="dbics-button">')
          .appendTo(this.$el)
          .touch($.proxy(this.popup, this))),
        this.updateUI();
    }
    function un(e) {
      trackPageView("createdb");
      var t = e.account,
        i = $.popdown({ close: e.cancel });
      const o = $('<div class="nx-section-head">')
        .text(e.title || locale.createDatabase)
        .appendTo(i.$pane);
      $(
        '<div class="i-32-24 i-light-grey i-close" style="position: absolute;right: 24px;top: 18px;">'
      )
        .appendTo(o)
        .touch(b);
      var a = $('<div class="nx-section-pane">').appendTo(i.$pane),
        n = $('<div style="display:flex;display:-webkit-flex">').appendTo(a),
        s = null;
      e.dontShowIconColor ||
        (s = new dn({
          $parent: n,
          icon: e.icon || null,
          color: e.color || null,
        }));
      var r = $(
        '<div class="component editor editor-string --ul-create-db-popdown-input" style="width:100%">'
      ).appendTo(n);
      $("<label>")
        .text(e.label || locale.databaseName)
        .appendTo(r);
      var l,
        c,
        d = $('<input type="text">')
          .val(e.name || "")
          .appendTo($('<div class="stringeditor">').appendTo(r))
          .keydown(function (e) {
            13 === e.which && v(), 27 === e.which && b();
          }),
        u =
          NinoxDocumentInteraction.getUserDefault("ui.new-database-location") ||
          "local";
      if (!e.dontShowLocations) {
        var p = $('<div class="nx-switch-big">').appendTo(i.$pane);
        (l = $('<div class="nx-switch-big-item-icon-text selected">')
          .append($('<div class="i-32-24 i-light-grey i-local">'))
          .append($("<div>").text(locale.databaseLocationLocal))
          .appendTo(p)
          .on(TOUCH ? EVENT_touchstart : "mousedown", function () {
            return (u = "local"), g(), !1;
          })),
          (c = $('<div class="nx-switch-big-item-icon-text">')
            .append($('<div class="i-32-24 i-light-grey i-cloud-okay">'))
            .append($("<div>").text(locale.databaseLocationCloud))
            .appendTo(p)
            .on(TOUCH ? EVENT_touchstart : "mousedown", function () {
              return (u = "cloud"), g(), !1;
            }));
      }
      var h = new util.SimpleModel(
          new schemas.TBoolean(void 0, void 0, {
            caption: locale.includeData,
            required: !0,
            formWidth: 0.5,
          }),
          !0
        ),
        m = new util.SimpleModel(
          new schemas.TBoolean(void 0, void 0, {
            caption: locale.includeFiles,
            required: !0,
            formWidth: 0.5,
          }),
          !0
        );
      if (e.includeOptions) new ct.a(void 0, h, a), new ct.a(void 0, m, a);
      var f = $('<div class="nx-button-bar">').appendTo(a);
      function g() {
        e.dontShowLocations ||
          (l.toggleClass("selected", "local" === u),
          c.toggleClass("selected", "cloud" === u),
          NinoxDocumentInteraction.setUserDefault(
            "ui.new-database-location",
            u
          ));
      }
      function v() {
        var o = d.val().trim();
        util.isValidDatabaseName(o)
          ? t.getDatabaseNames()[o]
            ? $.alert(locale.duplicateDatabaseName)
            : i.close(function () {
                e.okay &&
                  e.okay({
                    name: o,
                    location: u,
                    includeData: h.value,
                    includeFiles: m.value,
                    icon: s ? s.icon : void 0,
                    color: s ? s.color : void 0,
                  });
              })
          : $.alert(locale.invalidDatabaseName);
      }
      function b() {
        i.close(e.cancel);
      }
      $('<div class="nx-hspace-flex">').appendTo(f),
        $('<div class="nx-hspace-small">').appendTo(f),
        $('<div class="nx-button-text blue --ul-create-db-popdown-button">')
          .text(e.button || locale.createDatabaseOkay)
          .appendTo(f)
          .click(v),
        g(),
        setTimeout(function () {
          d.focus();
        }, 400);
    }
    function pn(e, t) {
      var i = t.account,
        o = $.popdown({ close: t.cancel });
      $('<div class="nx-section-head">')
        .text(locale.renameDatabase)
        .appendTo(o.$pane);
      var a = $('<div class="nx-section-pane">').appendTo(o.$pane),
        n = $('<div style="display:flex;display:-webkit-flex">').appendTo(a),
        s = new dn({
          $parent: n,
          icon: (e.settings && e.settings.icon) || e.icon,
          color: (e.settings && e.settings.color) || e.color,
        }),
        r = $(
          '<div class="component editor editor-string" style="width:100%">'
        ).appendTo(n);
      $("<label>").text(locale.databaseName).appendTo(r);
      var l = $('<input type="text">')
          .val(e.name)
          .appendTo($('<div class="stringeditor">').appendTo(r))
          .keydown(function (e) {
            13 === e.which && d(), 27 === e.which && close();
          }),
        c = $('<div class="nx-button-bar">').appendTo(a);
      function d() {
        var a = l.val().trim();
        if (util.isValidDatabaseName(a)) {
          if (a !== e.name)
            if (i.getDatabaseNames()[a])
              return void $.alert(locale.duplicateDatabaseName);
          o.close(function () {
            t.okay && t.okay({ name: a, icon: s.icon, color: s.color });
          });
        } else $.alert(locale.invalidDatabaseName);
      }
      $('<div class="nx-hspace-flex">').appendTo(c),
        $('<div class="nx-button-text grey">')
          .text(locale.cancel)
          .appendTo(c)
          .click(function () {
            o.close(t.cancel);
          }),
        $('<div class="nx-hspace-small">').appendTo(c),
        $('<div class="nx-button-text blue">')
          .text(locale.renameDatabaseOkay)
          .appendTo(c)
          .click(d),
        setTimeout(function () {
          l.focus();
        }, 400);
    }
    (dn.prototype.updateUI = async function () {
      this.latestRenderId++;
      const e = this.latestRenderId;
      var t = this.icon,
        i = !1,
        o = null;
      t &&
        (/^\/\//.test(t) && (t = "https:" + t),
        /^\https?\:\/\//.test(t) &&
          ((i = !0), (o = (await localFileSystem.cachedURL(t, null)) || t))),
        e === this.latestRenderId &&
          ((this.$button[0].style.backgroundColor = this.color),
          i
            ? this.$button.html(
                '<img src="' +
                  o +
                  '" style="width:40px;height:40px;padding:4px">'
              )
            : this.$button.html(
                '<div class="i-db-icon-big i-db i-' +
                  t +
                  '" style="position: relative"><div class="i-32-24 i-light-grey i-line-down" style="position: absolute; right: 0;"></div>'
              ));
    }),
      (dn.prototype.popup = function () {
        var e = this,
          t = $.backplane({}),
          i = $(
            '<div class="nx-menu-popup dbics-menu --ul-icon-selector-popup">'
          ).appendTo(t),
          o = $('<div class="dbics-colors">').appendTo(i).touch(d),
          a = $('<div class="dbics-icons">').appendTo(i).touch(u);
        r();
        i.outerWidth();
        var n = i.outerHeight(),
          s = this.$el.offset();
        function r() {
          l(), c(), e.updateUI();
        }
        function l() {
          for (var t = "", i = 0; i < ln.length; i++) {
            t += `\n            <div class="dbics-color" style="background-color:${
              ln[i]
            }" data-color-index="${i}">\n                ${
              parseInt(e.colorIndex, 10) === i
                ? '<div class="dbics-color-selected"></div>'
                : ""
            }\n            </div>`;
          }
          (t +=
            '<div class="dbics-color dbics-color-more i-32-24 i-light-grey i-line-down" data-color-index="#CUSTOM"></div>'),
            o.html(t);
        }
        function c() {
          for (var t = "", i = 0; i < cn.length; i++) {
            var o = cn[i];
            t +=
              '<div class="i-db-icon-small i-db i-' +
              o +
              '" data-icon="' +
              o +
              '"></div></div>';
          }
          a.html(t), (a[0].style.backgroundColor = e.color);
        }
        function d(t) {
          var i = $(t.target).closest(".dbics-color").attr("data-color-index");
          console.log("colorClicked", i),
            i &&
              ("#CUSTOM" === i
                ? new Ei.a({
                    $el: $(t.target),
                    update: function (t) {
                      (e.color = t), (e.colorIndex = "#CUSTOM"), r();
                    },
                  })
                : ((e.colorIndex = i), (e.color = ln[i]), r()));
        }
        function u(t) {
          var i = $(t.target).closest(".i-db").attr("data-icon");
          console.log("iconClicked", i), i && ((e.icon = i), r());
        }
        (s.top += 90),
          s.top + n > window.getHeight() && (s.top = window.getHeight() - n),
          i.offset(s);
      });
    var hn = o("./node_modules/@babel/runtime/helpers/extends.js"),
      mn = o.n(hn),
      fn = o("./node_modules/react-popper/lib/esm/usePopper.js"),
      gn =
        (o("./src/react/components/NinoxComboBox.css"),
        o("./src/react/components/NinoxPopup.tsx"));
    function vn(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function bn(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? vn(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : vn(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    const yn = 6,
      wn = { UP: 38, DOWN: 40, ENTER: 13, ESCAPE: 27 };
    function xn(e) {
      var t;
      if ("initialValue" in e && "selectedFieldIds" in e)
        throw new Error(
          "component should be either managed and have `selectedFieldIds` or unmanaged and have `initialValue`"
        );
      const i = e.values,
        [o, a] = s.useState(!1),
        [n, r] = s.useState(!1),
        [l, c] = s.useState(),
        [d, u] = s.useState(
          "initialValue" in e ? e.initialValue : e.selectedFieldId
        ),
        p = s.useRef(null),
        h = s.useRef(null),
        m = s.useRef(null),
        f = Object(fn.a)(p.current, m.current, {
          placement: "bottom",
          modifiers: [{ name: "offset", options: { offset: [0, yn] } }],
        }),
        g = Object(Na.b)(),
        [v, b] = Object(Na.c)(),
        y = o && !e.updating,
        w = { id: -1, caption: Object(_e.a)().empty },
        x =
          null !==
            (t = i.find((t) =>
              "selectedFieldId" in e ? t.id === e.selectedFieldId : t.id === d
            )) && void 0 !== t
            ? t
            : w,
        [T, C] = s.useState(x),
        k = s.useMemo(() => {
          if (l) {
            const e = i.filter((e) =>
              e.caption.toLowerCase().startsWith(l.toLowerCase())
            );
            return e.length && void 0 === e.find((e) => e === T) && C(e[0]), e;
          }
          return e.required ? i : [w, ...i];
        }, [l, i]),
        S = T.id !== w.id ? T.caption : "",
        $ = x.id !== w.id ? x.caption : "",
        [_, E] = s.useState({}),
        [D, N] = s.useState({});
      function M(e) {
        C(e), r(!0);
      }
      function I(t) {
        "initialValue" in e && u(t ? t.id : null), e.onChange(t ? t.id : null);
      }
      function R() {
        e.updating ||
          o ||
          (c(void 0),
          M(x),
          window.NINOX_IOS
            ? g(() => {
                a(!0);
              }, 100)
            : (a(!0),
              g(() => {
                p.current && p.current.select();
              }, 0)));
      }
      function F() {
        a(!1);
      }
      function A(e) {
        I(n ? T : null != e ? e : k[0]), F();
      }
      function O(e) {
        e.stopPropagation();
        const t = e.target.value;
        r(!1), c(t);
      }
      function z(e) {
        I(e.id === w.id ? null : e), F();
      }
      function L(t) {
        if (Object.values(wn).includes(t.which)) {
          t.preventDefault(), t.stopPropagation();
          const i = k.length,
            o = k.findIndex((e) => e.id === T.id);
          switch (t.which) {
            case wn.UP:
              -1 === o ? M(k[i - 1]) : o > 0 && M(k[o - 1]);
              break;
            case wn.DOWN:
              -1 === o ? M(k[0]) : o < i - 1 && M(k[o + 1]);
              break;
            case wn.ESCAPE:
              F();
              break;
            default:
              const t = -1 !== o ? k[o] : null;
              (null === t && e.required) || I(t), F();
          }
        }
      }
      return (
        s.useLayoutEffect(() => {
          if (h.current) {
            const e = h.current.getBoundingClientRect();
            E({
              width: `${e.width}px`,
              position: "absolute",
              transform: `translate3d(${e.left}px, ${e.top}px, 0)`,
            });
            const t = Math.max(b - e.bottom, e.top);
            N({
              minWidth: "100%",
              maxHeight: `${t - 2 * yn}px`,
              overflow: "auto",
            });
          }
        }, [o, v, b]),
        s.createElement(
          "div",
          {
            style: { visibility: y ? "hidden" : void 0 },
            ref: h,
            className: "stringeditor",
          },
          s.createElement(
            "div",
            {
              className: "choice text-selectable",
              onMouseDown: R,
              onTouchStart: R,
              style: x && x.color ? { backgroundColor: x.color } : {},
            },
            x && x.icon
              ? s.createElement("div", {
                  className: `choice-icon ic ic-${x.icon}`,
                })
              : null,
            s.createElement("span", null, $)
          ),
          s.createElement("div", {
            onMouseDown: R,
            onTouchStart: R,
            className: "choice-dropdown",
          }),
          s.createElement(
            gn.a,
            {
              className: "ninox-choice-editor-animation",
              animationClass: "ninox-choice-editor-animation",
              animationDuration: 300,
              isVisible: y,
              handleClose: () => A(),
            },
            s.createElement(
              "div",
              { style: _ },
              s.createElement("input", {
                className: "stringeditor input-text",
                onKeyDown: L,
                ref: p,
                type: "text",
                autoFocus: !0,
                onChange: O,
                value: n ? S : l,
              }),
              s.createElement(
                "div",
                mn()(
                  {
                    ref: m,
                    className: "choice-menu",
                    style: bn({}, f.styles.popper, {}, D),
                  },
                  f.attributes.popper
                ),
                k.map((e) =>
                  s.createElement(
                    ze.a,
                    {
                      className: "choice-menu-item",
                      key: e.id,
                      onFastClick: () => z(e),
                    },
                    s.createElement(Tn, { isSelected: T.id === e.id, value: e })
                  )
                )
              )
            )
          )
        )
      );
    }
    function Tn(e) {
      var t;
      const { value: i, isSelected: o } = e;
      return s.createElement(
        "div",
        {
          className: "choice-menu-item",
          style: i.color
            ? { backgroundColor: i.color, color: i.textColor }
            : {},
        },
        s.createElement("div", {
          className: Object(qo.a)("choice-indicator", { selected: o }),
        }),
        s.createElement(
          "div",
          {
            className: "multicombo-item",
            style: { backgroundColor: "transparent", color: i.textColor },
          },
          i.icon
            ? s.createElement("div", {
                className: `choice-symbol ic ic-${i.icon}`,
              })
            : null,
          s.createElement(
            "span",
            null,
            " ",
            window.htmlEscape(
              null !== (t = i.caption) && void 0 !== t ? t : ""
            ),
            " "
          )
        )
      );
    }
    function Cn(e) {
      return s.createElement(
        "div",
        {
          className: Object(qo.a)("component editor", e.className),
          style: e.style,
        },
        s.createElement("label", null, e.caption),
        e.children
      );
    }
    function kn(e, t) {
      (this.root = e),
        (this.accountId = t),
        (this.resync = $.proxy(this.resync, this)),
        (this.resyncInterval = null),
        (this.account = dbms.getRemoteAccount(t)),
        this.account && this.account.sync();
    }
    function Sn(e) {
      (this.$user = $(
        '<div id="react-user-icon" class="--ul-user-icon" style="margin-right:8px"/>'
      ).appendTo(e)),
        this.updateUI();
    }
    function $n(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function _n(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? $n(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : $n(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    (kn.prototype.destroy = function () {
      this.hide();
    }),
      (kn.prototype.show = function () {
        if (!this.visible) {
          this.visible = !0;
          this.account && this.account.sync(),
            this.updateUI(),
            (this.resyncInterval = setInterval(this.resync, 1e4)),
            this.account && this.account.on("change", this.updateUI, this);
        }
      }),
      (kn.prototype.hide = function () {
        this.visible &&
          ((this.visible = !1),
          this.account && this.account.off("change", this.updateUI, this),
          this.resyncInterval &&
            (clearInterval(this.resyncInterval), (this.resyncInterval = null)),
          a.unmountComponentAtNode(this.root.$body[0]));
      }),
      (kn.prototype.resync = function () {
        this.account && this.account.sync();
      }),
      (kn.prototype.updateUI = function () {
        this.visible &&
          a.render(
            s.createElement(Ka, {
              isAdmin: this.isAdmin(),
              localFileSystem: localFileSystem,
              NinoxDocumentInteraction: NinoxDocumentInteraction,
              account: this.account,
              onDatabaseClick: (e) =>
                this.callWithDb(e, (e) => this.openDatabase(e)),
              onResetSync: (e) => this.account.resetSync(e),
              onCreateBackup: (e) =>
                this.callWithDb(e, (e) => this.createBackup(e)),
              onRemove: (e) => this.callWithDb(e, (e) => this.removeDialog(e)),
              onRenameDatabase: (e) =>
                this.callWithDb(e, (e) => this.renameDatabase(e)),
              onNewDatabaseClick: () => this.createDatabase(),
              onImportArchiveClick: () => this.importArchive(),
              onManageBackupsClick: () => this.manageBackups(),
              isPrivateCloud: Object(c.g)(),
              onClickInvitation: (e) => this.popupAccountInvitation(e),
              onClickUser: (e) => this.popupAccountUser(e),
              upgradePlan: () => this.root.upgradePlan(),
              invite: () => this.inviteDialog(),
            }),
            this.root.$body[0]
          );
      }),
      (kn.prototype.removeDialog = function (e) {
        Object(l.f)("DatabaseMenu", "Remove"),
          $.dialog({
            closable: !0,
            caption: locale.dropDatabase,
            message: locale.confirmDropDatabase,
            buttons: [
              {
                color: "red",
                caption: locale.dropDatabase,
                callback: () => {
                  Object(l.f)("DatabaseMenu", "RemoveConfirm"),
                    this.account.removeDatabase(e, function (e) {
                      e && $.alert(e);
                    });
                },
              },
            ],
          });
      }),
      (kn.prototype.callWithDb = function (e, t) {
        if (this.account) {
          var i = this.account.getDatabase(e);
          i && t(i);
        }
      }),
      (kn.prototype.openDatabase = function (e, t) {
        Object(l.f)("Database", "Open");
        var i = this;
        i.account
          ? F({ teamId: i.accountId, dbId: e.id })
          : t && t("Account not found");
      }),
      (kn.prototype.createDatabase = function (e) {
        Object(l.f)("CreateDatabase", "Open");
        var t = this.account;
        new rn({
          cancel: function () {
            Object(l.f)("CreateDatabase", "Cancel");
          },
          okay: function (e, i) {
            new un({
              account: t,
              name: (e = e || {}).name,
              color: e.color,
              icon: e.icon,
              includeOptions: !1,
              dontShowLocations: !0,
              okay: function (o) {
                Object(l.f)("CreateDatabase", "Confirm", {
                  template: e.name || "empty",
                }),
                  o.name &&
                    (i.close(),
                    e.url
                      ? ($.loading(!0),
                        t.loadArchive(
                          {
                            url: e.url,
                            name: o.name,
                            icon: o.icon,
                            color: o.color,
                          },
                          function (e) {
                            $.loading(!1), e && $.alert(e);
                          }
                        ))
                      : ($.loading(!0),
                        t.createDatabase(o, function (e) {
                          $.loading(!1), e && $.alert(e);
                        })));
              },
            });
          },
        });
      }),
      (kn.prototype.renameDatabase = function (e, t) {
        Object(l.f)("RenameDatabase", "Open");
        var i = this.account;
        if (!i) return t("Account not found.");
        new pn(
          {
            name: e.name,
            icon: e.settings && e.settings.icon,
            color: e.settings && e.settings.color,
          },
          {
            account: i,
            okay: function (o) {
              Object(l.f)("RenameDatabase", "Confirm"),
                $.loading(!0),
                i.renameDatabase(e, o, function (e, i) {
                  $.loading(!1), e && $.alert(e), t && t(e, i);
                });
            },
            cancel: function () {
              Object(l.f)("RenameDatabase", "Cancel"), t && t();
            },
          }
        );
      }),
      (kn.prototype.isAdmin = function () {
        return !!this.account && this.account.isAdmin();
      }),
      (kn.prototype.isRootUser = function () {
        return dbms.getRemoteConnection().getSessionInfo().user.isRoot;
      }),
      (kn.prototype.isOwner = function () {
        var e = dbms.getRemoteConnection(),
          t = e.getAccount(this.accountId);
        return t && t.owner === e.getUserId();
      }),
      (kn.prototype.popupOptions = function (e) {
        this.isOwner() || this.isRootUser()
          ? this.popupOptions_Owner(e)
          : this.popupOptions_User(e);
      }),
      (kn.prototype.popupOptions_Owner = function () {
        Object(l.f)("TeamSettings", "Open", { isOwner: !0 });
        var e = this,
          t = dbms.getRemoteConnection(),
          i = this.account;
        if (i) {
          var o = $.popdown({
              head: locale.teamSettings,
              buttons: [
                { caption: locale.removeTeam, click: n },
                "-",
                { cls: "blue", caption: locale.okay, click: s },
              ],
            }),
            a = $.input({
              caption: locale.teamName,
              val: i.name,
              $container: o.$content,
            });
          new Ut({
            $container: o.$content,
            settings: i.settings || {},
            updateSettings: function (t, i) {
              Object(l.f)("TeamSettings", "Update"),
                $.loading(!0),
                e.account.server.updateSettings(t, function (t, o) {
                  $.loading(!1),
                    t || ((e.account.settings = o), e.account.sync(!0)),
                    i(t);
                });
            },
            setBackground: function (t, i) {
              $.loading(!0),
                Object(l.f)("TeamSettings", "UpdateBackground"),
                e.account.server.updateSettings(
                  { bgType: "presets", backgroundClass: t },
                  function (t, o) {
                    $.loading(!1),
                      t || ((e.account.settings = o), e.account.sync(!0)),
                      i(t);
                  }
                );
            },
            setBackgroundFile: function (t, i) {
              Object(l.f)("TeamSettings", "UploadBackground"),
                e.account.server.uploadBackground({ file: t }, function (t) {
                  e.account.sync(!0), i(t);
                });
            },
          });
        }
        function n() {
          if (!t.canRemoveAccount(i.id))
            return $.alert(locale.cannotRemoveTeam);
          Object(l.f)("RemoveTeam", "Open"),
            $.dialog({
              closable: !0,
              caption: locale.removeTeam + ": " + i.name,
              message: locale.removeTeamConfirm,
              buttons: [
                {
                  color: "red",
                  caption: locale.removeTeam,
                  callback: function () {
                    Object(l.f)("RemoveTeam", "Confirm"),
                      o.close(),
                      t.removeAccount(i.id, function (e) {
                        e && $.alert(e);
                      });
                  },
                },
              ],
            });
        }
        function s() {
          var e = a.val();
          if (e != i.name) {
            if (
              (Object(l.f)("RemoveSettings", "UpdateName"),
              !util.isValidDatabaseName(e))
            )
              return $.alert(locale.invalidTeamName);
            $.loading(!0),
              t.updateAccount({ id: i.id, name: e }, function (e) {
                if ((Object(l.f)("RemoveSettings", "Close"), $.loading(!1), e))
                  return $.alert(e);
                o.close();
              });
          } else Object(l.f)("RemoveSettings", "Close"), o.close();
        }
      }),
      (kn.prototype.popupOptions_User = function () {
        if (!Object(c.g)()) {
          Object(l.f)("TeamSettings", "Open", { isOwner: !1 });
          var e = this.account;
          if (e) {
            var t = $.popdown({
              head: locale.teamName,
              buttons: [
                { caption: locale.leaveThisTeam, click: i },
                "-",
                { cls: "blue", caption: locale.okay, click: o },
              ],
            });
            $.field({
              caption: "Team Name",
              val: e.name,
              $container: t.$content,
            });
          }
        }
        function i() {
          Object(l.f)("LeaveTeam", "Open");
          var i = dbms.getRemoteConnection(),
            o = i.getCurrentUser().id;
          if (!i.hasOtherAdmins(e.id, o))
            return $.alert(locale.oneAdminRequired);
          $.dialog({
            closable: !0,
            caption: locale.leaveTeam + ": " + e.name,
            message: locale.leaveTeamConfirm,
            buttons: [
              {
                color: "red",
                caption: locale.leaveTeam,
                callback: function () {
                  Object(l.f)("LeaveTeam", "Confirm"),
                    t.close(),
                    dbms
                      .getRemoteConnection()
                      .removeAccountUser(e.id, o, function (e) {
                        e && $.alert(e);
                      });
                },
              },
            ],
          });
        }
        function o() {
          Object(l.f)("TeamSettings", "Close"), t.close();
        }
      }),
      (kn.prototype.importDatabase = function (e) {
        return this.isAdmin()
          ? NinoxDocumentInteraction.isOnline()
            ? void 0
            : $.alert(locale.notConnected)
          : $.alert(locale.errorNotAuthorized);
      }),
      (kn.prototype.importArchive = function () {
        if (!this.isAdmin()) return $.alert(locale.errorNotAuthorized);
        Object(l.f)("ImportArchive", "Open");
        var e = this,
          t = $.popdown({
            cls: "small",
            head: locale.importDatabase,
            buttons: [
              "-",
              "cancel",
              " ",
              { cls: "blue", caption: locale.importDatabase, click: n },
            ],
          }),
          i = $.input({
            caption: locale.createDatabaseName,
            $container: t.$content,
          }),
          o = $(
            '<div class="component editor editor-string editor-4col">'
          ).appendTo(t.$content);
        $("<label>").text(locale.importChooseFile).appendTo(o);
        var a = $(
          '<input name="file" type="file" accept=".ninox" style="width:100%">'
        ).appendTo(o);
        function n() {
          if (!a[0].files[0])
            return $.alert("Please select a file for upload.");
          Object(l.f)("ImportArchive", "Upload"), $.loading(!0);
          var o = { name: i.val(), file: a[0].files[0] };
          e.account.server.uploadArchive(o, function (i, o) {
            if (
              (Object(l.f)("ImportArchive", "Confirm"),
              $.loading(!1),
              t.close(),
              i)
            )
              return $.alert(i);
            e.account.sync();
          });
        }
      }),
      (kn.prototype.popupAccountUser = function (e) {
        Object(l.f)("TeamMember", "Open");
        var t = dbms.getRemoteConnection(),
          i = t.getAccount(this.accountId),
          o = this.isAdmin(),
          a = this;
        if (e) {
          var n = t.getAccountUser(this.accountId, e);
          if (n) {
            var s = n.id === i.owner,
              r = [];
            o && !s && r.push({ caption: locale.removeFromTeam, click: u }),
              r.push("-"),
              r.push("cancel"),
              r.push(" "),
              o && r.push({ cls: "blue", caption: locale.okay, click: p });
            var c,
              d = $.popdown({ head: locale.teamMember, buttons: r });
            $.field({
              caption: locale.name,
              val: n.name,
              $container: d.$content,
            }),
              $.field({
                caption: locale.email,
                val: n.email,
                $container: d.$content,
              }),
              o &&
                !s &&
                ((c = this.createRoleModel(n.roles)),
                new ct.a({ el: d.$content }, c));
          }
        }
        function u() {
          return (
            Object(l.f)("TeamMember", "Remove"),
            s
              ? $.alert("Cannot remove the team's owner")
              : t.hasOtherAdmins(a.accountId, n.id)
              ? void $.dialog({
                  closable: !0,
                  caption: locale.removeFromTeamHead,
                  message: locale.removeFromTeamConfirm,
                  buttons: [
                    {
                      color: "red",
                      caption: locale.removeFromTeamOkay,
                      callback: function () {
                        Object(l.f)("TeamMember", "RemoveConfirm"),
                          d.close(),
                          $.loading(!0),
                          t.removeAccountUser(a.accountId, n.id, function (e) {
                            if (($.loading(!1), e)) return $.alert(e);
                          });
                      },
                    },
                  ],
                })
              : $.alert(locale.oneAdminRequired)
          );
        }
        function p() {
          if ((d.close(), !s)) {
            var e = Q.keys(n.roles),
              i = Q.keys(c.value || {});
            if (
              -1 === i.indexOf("admin") &&
              !t.hasOtherAdmins(a.accountId, n.id)
            )
              return $.alert(locale.oneAdminRequired);
            util.equals(e, i)
              ? Object(l.f)("TeamMember", "Close")
              : (Object(l.f)("TeamMember", "UpdateRoles"),
                $.loading(!0),
                t.updateAccountUser(
                  a.accountId,
                  { id: n.id, roles: i },
                  function (e) {
                    if (($.loading(!1), Object(l.f)("TeamMember", "Close"), e))
                      return $.alert(e);
                  }
                ));
          }
        }
      }),
      (kn.prototype.popupAccountInvitation = function (e) {
        Object(l.f)("Invitation", "Open");
        var t = dbms.getRemoteConnection();
        if (this.isAdmin()) {
          var i = this;
          if (e) {
            var o = t.getInvitation(i.accountId, e);
            if (o) {
              var a = $.popdown({
                head: locale.invitation,
                buttons: [
                  { caption: locale.cancelInvitation, click: n },
                  " ",
                  { caption: locale.resendInvitation, click: s },
                  "-",
                  { cls: "blue", caption: locale.okay, click: r },
                ],
              });
              $.field({
                caption: locale.email,
                val: o.email,
                $container: a.$content,
              }),
                $.field({
                  caption: locale.roles,
                  val: Q.keys(o.roles).sort().join(", "),
                  $container: a.$content,
                }),
                $.field({
                  caption: locale.invitedFrom,
                  val: o.user ? o.user.name : locale.unknown,
                  $container: a.$content,
                  width: "50%",
                }),
                $.field({
                  caption: locale.invitedAt,
                  val: util.formatLocaleDateTime(o.createdAt),
                  $container: a.$content,
                  width: "50%",
                });
            }
          }
        }
        function n() {
          $.dialog({
            closable: !0,
            caption: locale.cancelInvitation,
            message: locale.cancelInvitationConfirm,
            buttons: [
              {
                color: "red",
                caption: locale.cancelInvitation,
                callback: function () {
                  Object(l.f)("Invitation", "Remove"),
                    a.close(),
                    $.loading(!0),
                    t.cancelInvitation(i.accountId, o.inviteCode, function (e) {
                      if (($.loading(!1), e)) return $.alert(e);
                    });
                },
              },
            ],
          });
        }
        function s() {
          a.close(),
            $.loading(!0),
            t.resendInvitation(i.accountId, o.inviteCode, function (e) {
              if ((Object(l.f)("Invitation", "Resend"), $.loading(!1), e))
                return $.alert(e);
            });
        }
        function r() {
          Object(l.f)("Invitation", "Close"), a.close();
        }
      }),
      (kn.prototype.createRoleModel = function (e) {
        var t = this,
          i = {
            base: "extchoice",
            required: !0,
            stringAutocorrect: !1,
            width: 4,
            formWidth: 1,
            caption: locale.roles,
            getEditorClass: function () {
              return "extchoice";
            },
            getValues: function () {
              return dbms
                .getRemoteConnection()
                .getSessionInfo()
                .getRoles(t.accountId);
            },
            createValue: function (e, i) {
              Object(l.f)("Role", "Create");
              var o = { id: e, caption: e };
              dbms
                .getRemoteConnection()
                .getSessionInfo()
                .addRole(t.accountId, o),
                i(void 0, o);
            },
            validate: function (e) {},
            format: function (e) {
              return e || "";
            },
            formatEditor: function (e) {
              return e || "";
            },
            parseEditor: function (e) {
              if ("string" == typeof e && (e = e.toLocaleLowerCase().trim()))
                for (
                  var i = util.localeSortBy(
                      dbms
                        .getRemoteConnection()
                        .getSessionInfo()
                        .getRoles(t.accountId),
                      "caption"
                    ),
                    o = 0;
                  o < i.length;
                  o++
                ) {
                  var a = i[o];
                  if (
                    a.caption &&
                    0 === a.caption.toLocaleLowerCase().indexOf(e)
                  )
                    return a.id;
                }
            },
            convert: function (e) {
              return e;
            },
          };
        return new util.SimpleModel(i, e || { editor: !0 });
      }),
      (kn.prototype.emailNotVerified = function () {
        Object(l.f)("VerifyEmail", "Show");
        var e = $.popdown({
          cls: "small",
          head: locale.confirmEmail,
          buttons: [
            "cancel",
            "-",
            { caption: locale.resendVerificationMail, cls: "blue", click: t },
          ],
        });
        function t() {
          Object(l.f)("VerifyEmail", "Resend"),
            e.close(),
            dbms.getRemoteConnection().resendVerificationMail({}, function (e) {
              if (e) return $.alert(e);
            });
        }
      }),
      (kn.prototype.inviteDialog = function () {
        var e = dbms.getRemoteConnection();
        if (!this.isAdmin()) return;
        if (!e.canInvite(this.accountId)) return this.emailNotVerified();
        if (!e.getAccount(this.accountId)) return;
        Object(l.f)("Invite", "Open");
        var t = this,
          i = $.popdown({
            cls: "small",
            head: locale.inviteHead,
            buttons: [
              "cancel",
              "-",
              { caption: locale.sendInvitation, cls: "blue", click: u },
            ],
            close: d,
          }),
          o = $.input({
            caption: locale.email,
            type: "email",
            $container: i.$content,
            focus: !0,
          }),
          n = this.createRoleModel();
        new ct.a({ el: i.$content }, n);
        const r = $("<div/>").appendTo(i.$content);
        let c = "de" === LOCALE ? "de" : "en";
        function d() {
          a.unmountComponentAtNode(r[0]);
        }
        function u() {
          var a = o.val().trim().toLocaleLowerCase();
          if (!util.isValidEmail(a)) return $.alert(locale.emailMissing);
          Object(l.f)("Invite", "Send"),
            $.loading(!0),
            e.invite(
              {
                accountId: t.accountId,
                email: a,
                roles: Object.keys(n.value),
                locale: c,
              },
              function (e) {
                if (
                  ($.loading(!1),
                  i.close(),
                  Object(l.f)("Invite", e ? "Error" : "Success"),
                  e)
                )
                  return $.alert(e);
              }
            );
        }
        a.render(
          s.createElement(
            Cn,
            { caption: locale.invitationLanguage, style: { width: "100%" } },
            s.createElement(xn, {
              required: !0,
              initialValue: c,
              values: [
                { id: "en", caption: "English" },
                { id: "de", caption: "German (Deutsch)" },
              ],
              onChange: (e) => {
                c = e;
              },
            })
          ),
          r[0]
        );
      }),
      (kn.prototype.removeDatabase = function (e, t) {
        if (!this.isAdmin()) return $.alert(locale.errorNotAuthorized);
        Object(l.f)("Database", "Remove"), this.account.removeDatabase(e, t);
      }),
      (kn.prototype.saveDatabaseArchiveAs = function (e, t) {
        Object(l.f)("Database", "Export"), this.saveDatabaseArchiveAsFile(e);
      }),
      (kn.prototype.saveDatabaseArchiveAsFile = function (e) {
        var t = this;
        NinoxDocumentInteraction.saveFile(e.name, "ninox", function (i, o) {
          if (i) return $.alert(i);
          o &&
            ($.loading(!0),
            t.saveDatabaseArchiveToURL(e, o, function (e) {
              $.loading(!1), e && $.alert(e);
            }));
        });
      }),
      (kn.prototype.saveDatabaseArchiveAsMenu = function (e, t) {
        var i = this,
          o =
            ($(t.target),
            $('<div class="nx-backplane nx-backplane-dark">').touch(function (
              e
            ) {
              $(e.target).is(".nx-backplane") && u();
            })),
          a = $('<div class="nx-menu-popup grey">').appendTo(o);
        $('<div class="nx-menu-head">').text(locale.saveArchiveAs).appendTo(a),
          $('<div class="nx-menu-item">')
            .append(
              $('<div class="nx-menu-label">').text(locale.openIn + "...")
            )
            .appendTo(a)
            .touch(function () {
              u(), i.saveDatabaseArchiveShare(e, t);
            }),
          $('<div class="nx-menu-item">')
            .append(
              $('<div class="nx-menu-label">').text(locale.storeOnICloudDrive)
            )
            .appendTo(a)
            .touch(function () {
              u(), i.saveDatabaseArchiveICloud(e, t);
            }),
          o.appendTo($(document.body));
        var n = window.getWidth(),
          s = window.getHeight(),
          r = a.outerWidth(),
          l = a.outerHeight(),
          c =
            (t.touches && t.touches[0] && t.touches[0].clientX) ||
            t.clientX ||
            0,
          d =
            (t.touches && t.touches[0] && t.touches[0].clientY) ||
            t.clientY ||
            0;
        return (
          c + r > n && (c = n - r),
          d + l > s && (d = s - l),
          a.offset({ left: c, top: d }),
          !1
        );
        function u() {
          o.remove();
        }
      }),
      (kn.prototype.saveDatabaseArchiveICloud = async function (e, t) {
        var i = this,
          o = await localFileSystem.tempURL(e.name + ".ninox");
        $.loading(!0),
          i.saveDatabaseArchiveToURL(e, o, function (e) {
            if (($.loading(!1), e)) return $.alert(e);
            NinoxDocumentInteraction.saveFileOnICloud(o, function (e) {
              e && $.alert(e),
                localFileSystem.removeURL(o).catch((e) => console.log(e));
            });
          });
      }),
      (kn.prototype.saveDatabaseArchiveShare = async function (e, t) {
        var i = this,
          o = await localFileSystem.tempURL(e.name + ".ninox");
        $.loading(!0),
          i.saveDatabaseArchiveToURL(e, o, function (e) {
            if (($.loading(!1), e)) return $.alert(e);
            NinoxDocumentInteraction.showFileOptions(
              o,
              t.clientX || 0,
              t.clientY || 0,
              function () {
                localFileSystem.removeURL(o).catch((e) => console.log(e));
              }
            );
          });
      }),
      (kn.prototype.saveDatabaseArchiveToURL = function (e, t, i) {
        this.account;
        i("NOT IMPLEMENTED");
      }),
      (kn.prototype.createBackup = function (e) {
        const t = this,
          i = $.popdown({
            cls: "small",
            head: locale.createBackup + ": " + e.name,
            buttons: [
              "cancel",
              "-",
              { caption: locale.okay, cls: "blue", click: c },
            ],
          }),
          o = new util.SimpleModel(
            new schemas.TBoolean(void 0, void 0, {
              caption: "Include data",
              booleanRenderer: "check",
              formWidth: 4,
            }),
            !0
          );
        new ct.a(void 0, o, i.$content);
        const a = new util.SimpleModel(
          new schemas.TBoolean(void 0, void 0, {
            caption: "Include files",
            booleanRenderer: "check",
            formWidth: 4,
          }),
          !0
        );
        new ct.a(void 0, a, i.$content);
        const n = new util.SimpleModel(
          new schemas.TBoolean(void 0, void 0, {
            caption: "Include comments",
            booleanRenderer: "check",
            formWidth: 4,
          }),
          !0
        );
        new ct.a(void 0, n, i.$content);
        const s = new util.SimpleModel(
          new schemas.TBoolean(void 0, void 0, {
            caption: "Include history",
            booleanRenderer: "check",
            formWidth: 4,
          }),
          !1
        );
        new ct.a(void 0, s, i.$content);
        let r = void 0,
          l = void 0;
        if (window.NINOX_BETA) {
          (r = new util.SimpleModel(
            new schemas.TBoolean(void 0, void 0, {
              caption: "Beta: Create historic backup",
              booleanRenderer: "check",
              formWidth: 4,
            }),
            !1
          )),
            new ct.a(void 0, r, i.$content);
          const e = $('<div style="display:none">').appendTo(i.$content);
          $(
            '<div class="component text">Try to restore a historic version of this database from the database change history. This will only succeed, if the history has not been cleared out. In case this database has been transferred from another Ninox team, this option will only work, if the history has been included in backups and restores.</div>'
          ).appendTo(e),
            (l = new util.SimpleModel(
              new schemas.TTimestamp(void 0, void 0, {
                caption: "Date and time of database",
                booleanRenderer: "check",
                formWidth: 4,
              }),
              Date.now()
            )),
            new ct.a(void 0, l, e),
            r.on("update", () => {
              e.css("display", r.value ? "" : "none");
            });
        }
        function c() {
          const c = {
            dbid: e.id,
            data: o.value,
            files: a.value,
            comments: n.value,
            history: s.value,
            messages: !1,
            maxAge: r && r.value ? l.value : void 0,
          };
          $.loading(!0),
            t.account.createBackup(c, function (e, o) {
              if (($.loading(!1), e)) return $.alert(e);
              i.close(), t.manageBackups("backups", o.id);
            });
        }
      }),
      (kn.prototype.isPaidPlan = function () {
        if (Object(c.g)()) return !0;
        var e = dbms.getRemoteConnection().getSessionInfo().getPlan();
        return (e && "basic" === e.name) || !1;
      }),
      (kn.prototype.manageBackups = function (e, t) {
        Object(l.f)("Backups", "Open");
        const i = $.popdown({ close: o });
        function o() {
          console.log("Unmount Backups?", a.unmountComponentAtNode(i.$pane[0]));
        }
        a.render(
          s.createElement(nn, {
            initialTab: e || "snapshots",
            initialSelection: t || null,
            account: this.account,
            dbms: dbms,
            ninoxDocumentInteraction: NinoxDocumentInteraction,
            isPaidPlan: this.isPaidPlan(),
            alert: $.alert,
            loading: $.loading,
            closePopup: () => i.close(),
          }),
          i.$pane[0]
        );
      }),
      (Sn.prototype.destroy = function () {
        a.unmountComponentAtNode(this.$user[0]),
          this.$user.remove(),
          (this.$user = void 0);
      }),
      (Sn.prototype.updateUI = function () {
        var e = null;
        if (this.$user) {
          var t = dbms.getRemoteConnection();
          t.isLoggedIn() && (e = t.getCurrentUser());
        }
        a.render(
          s.createElement(Ro, {
            onClick: () => this.popup(),
            user: e || null,
            size: 28,
            style: { margin: e ? "2px" : void 0 },
          }),
          this.$user[0]
        );
      }),
      (Sn.prototype.popup = function (e) {
        var t = this,
          i = dbms.getRemoteConnection();
        if (!i.isLoggedIn()) return root.ninoxCloudSignup();
        var o = [];
        o.push({ caption: locale.logout, click: l }),
          o.push("-"),
          Object(c.g)() ||
            (o.push({ caption: locale.upgradePlan, click: d }), o.push(" ")),
          o.push("cancel"),
          o.push(" "),
          o.push({ cls: "blue", caption: locale.okay, click: p });
        var a = $.popdown({ head: locale.yourAccount, buttons: o }),
          n = i.getCurrentUser(),
          s = $('<div style="display:flex;display:-webkit-flex">').appendTo(
            a.$content
          ),
          r = $.input({
            caption: locale.name,
            val: n.displayName || "",
            $container: s,
          });
        function l() {
          a.close(), root.ninoxCloudLogout();
        }
        function d() {
          a.close(), root.upgradePlan();
        }
        function u(e) {
          $.chooseFile(e, function (e, o) {
            o &&
              i.uploadProfileImage({ file: o }, function (e) {
                e && $.alert(e),
                  setTimeout(function () {
                    t.updateUI();
                  }, 2e3);
              });
          });
        }
        function p() {
          a.close();
          var e = r.val();
          e != n.displayName &&
            ($.loading(!0),
            i.updateUserProfile({ displayName: e }, function (e) {
              $.loading(!1), e && $.alert(e), t.updateUI();
            }));
        }
        function h() {
          var e = $.popdown({
              cls: "small",
              head: locale.changePassword,
              closable: !0,
              buttons: [
                { caption: locale.cancel, click: n },
                "-",
                { caption: locale.okay, click: a, cls: "blue" },
              ],
            }),
            t = $.input({
              type: "password",
              caption: locale.oldPassword,
              $container: e.$content,
              focus: !0,
              enter: function () {
                i.focus();
              },
            }),
            i = $.input({
              type: "password",
              caption: locale.newPassword,
              $container: e.$content,
              enter: function () {
                o.focus();
              },
            }),
            o = $.input({
              type: "password",
              caption: locale.repeatPassword,
              $container: e.$content,
              enter: a,
            });
          function a() {
            var a = t.val(),
              n = i.val(),
              s = o.val();
            return util.isValidPassword(a) && util.isValidPassword(n)
              ? n !== s
                ? $.alert(locale.passwordMismatch)
                : void dbms
                    .getRemoteConnection()
                    .changePassword(
                      { oldPassword: a, newPassword: n },
                      function (t) {
                        t ? $.alert(t) : e.close();
                      }
                    )
              : $.alert(locale.invalidPassword);
          }
          function n() {
            e.close();
          }
        }
        Object(c.g)() ||
          ($('<div class="nx-hspace-small">').appendTo(s),
          $('<div class="nx-button-text grey">')
            .text(locale.profileImage)
            .appendTo(
              $(
                '<div style="width:160px;margin-right:8px;margin-top:27px">'
              ).appendTo(s)
            )
            .on("click", u)),
          $.field({
            caption: locale.email,
            val: n.email,
            type: "email",
            $container: a.$content,
          }),
          i.isSamlEnabled() ||
            i.isOidcEnabled() ||
            i.isAddsEnabled() ||
            $(
              '<div style="padding:8px 12px 0 12px;color:#3059f0;font-weight:600;cursor:default">' +
                htmlEscape(locale.changePassword) +
                "</div>"
            )
              .appendTo(a.$content)
              .touch(h);
      });
    class En {
      constructor() {
        Ie()(this, "accountId", void 0),
          Ie()(this, "visible", void 0),
          Ie()(this, "accountView", void 0),
          Ie()(this, "refreshRemoteConnection", void 0),
          Ie()(this, "refreshRemoteConnectionInterval", void 0),
          Ie()(this, "$el", void 0),
          Ie()(this, "$controls", void 0),
          Ie()(this, "$accountTabs", void 0),
          Ie()(this, "$controlsButtons", void 0),
          Ie()(this, "$body", void 0),
          Ie()(this, "$admin", void 0),
          Ie()(this, "$header", void 0),
          Ie()(this, "user", void 0),
          Ie()(this, "$verificationContainer", void 0),
          (this.accountId = null),
          (this.visible = !1),
          (this.accountView = null);
        const e = dbms.getRemoteConnection();
        (this.refreshRemoteConnection = () => {
          NinoxDocumentInteraction.isOnline() && e.refresh();
        }),
          (this.refreshRemoteConnectionInterval = null),
          this.show(),
          e.isLoggedIn() ? this.afterLogin() : this.ninoxCloudSignup();
      }
      afterLogin() {
        const e = this.ensureAccount();
        if (e) {
          this.selectAccount(e.id);
          const t = q();
          t
            ? this.cbTemplate(t)
            : void 0 !== H().dbId
            ? this.cbDatabase()
            : dbms.on("change", this.dbmsChanged, this);
        }
        const t = dbms.getRemoteConnection(),
          i = t.getCurrentUser(),
          o = new Date(i.createdAt);
        if (!i.verified && o.getTime() > 1611676659229) {
          let e = $(".credentials-verify");
          0 === e.length &&
            (e = $('<div class="credentials-verify">').appendTo(document.body));
          const o = () => {
              a.unmountComponentAtNode(e[0]);
            },
            n =
              NinoxDocumentInteraction.getUserDefault(
                "nx.session.login.user"
              ) !== i.email;
          setTimeout(() => {
            this.hide();
          }, 0),
            a.render(
              s.createElement(Aa, {
                close: o,
                user: i,
                isFirst: n,
                logout: () => this.ninoxCloudLogout(),
                resend: () =>
                  new Promise((e, i) => {
                    t.resendVerificationMail({}, (t) => (t ? i(t) : e()));
                  }),
              }),
              e[0]
            );
        }
      }
      cbTeam(e) {
        const t = dbms.getDefaultAccountId();
        "default" === e.teamId
          ? (A(_n({}, e, { teamId: dbms.getDefaultAccountId() })),
            this.selectAccount(t))
          : (this.selectAccount(e.teamId),
            null == this.accountId &&
              dbms.getRemoteConnection().isLoggedIn() &&
              (A(_n({}, e, { teamId: dbms.getDefaultAccountId() })),
              this.selectAccount(t)));
      }
      ensureAccount() {
        const e = H(),
          t = dbms.getDefaultAccountId();
        let i,
          o = e.teamId;
        return (
          "default" === o && t
            ? ((o = t),
              A({ teamId: o }),
              e.dbId && window.location.reload(),
              (i = dbms.getAccount(o)))
            : ((i = dbms.getAccount(o)),
              !i &&
                t &&
                ((o = t),
                A({ teamId: o }),
                e.dbId && window.location.reload(),
                (i = dbms.getAccount(o)))),
          i
        );
      }
      cbDatabase() {
        const e = this.ensureAccount();
        e &&
          ($.loading(!0),
          e.ensureDatabase(H().dbId, (t, i) => {
            if (t || !i)
              return $.loading(!1), this.show(), void A({ teamId: H().teamId });
            e.openDatabase(i, (e) => {
              $.loading(!1),
                e
                  ? (this.show(), A({ teamId: H().teamId }))
                  : (this.hide(), ui.init());
            });
          }));
      }
      cbTemplate(e) {
        dbms.getRemoteConnection().isLoggedIn()
          ? this.installTemplate(e)
          : this.ninoxCloudSignup(),
          A({ teamId: H().teamId });
      }
      show() {
        if (this.visible) return;
        U("team", this.cbTeam, this),
          U("tab", this.cbDatabase, this),
          U("view", this.cbDatabase, this),
          trackPageView("home"),
          Object(l.f)("TeamsHome", "Open"),
          (this.visible = !0);
        const e =
          (dbms.getRemoteConnection().getServerConfig("settings") || {})
            .windowTitle || "Ninox Database";
        NinoxDocumentInteraction.setWindowTitle(e),
          (this.$el = $('<div class="root">').appendTo($(document.body))),
          (this.$verificationContainer = $(
            '<div style="position: absolute; left: 0; right: 0;">'
          )
            .appendTo(this.$el)
            .hide()),
          (this.$controls = $('<div class="root-controls">').appendTo(
            this.$el
          )),
          (this.$accountTabs = $(
            '<div class="root-tabs --ul-account-tabs">'
          ).appendTo(this.$controls)),
          (this.$controlsButtons = $(
            '<div class="root-controls-buttons">'
          ).appendTo(this.$controls)),
          (this.$body = $('<div class="root-body">').appendTo(this.$el)),
          (this.user = new Sn(this.$controlsButtons)),
          $(
            '<div class="button --ul-app-setting-button"><div class="i-32-24 i-white i-setting-settings"></div></div>'
          )
            .appendTo(this.$controlsButtons)
            .touch($.proxy(this.popupOptions, this)),
          this.accountView && this.accountView.show(),
          this.updateUI(),
          this.refreshRemoteConnectionInterval ||
            (this.refreshRemoteConnectionInterval = window.setInterval(
              this.refreshRemoteConnection,
              2e4
            )),
          window.Appcues && window.Appcues.page();
      }
      hide() {
        this.visible &&
          (V("team", this.cbTeam, this),
          V("view", this.cbDatabase, this),
          V("tab", this.cbDatabase, this),
          (this.visible = !1),
          this.refreshRemoteConnectionInterval &&
            (clearInterval(this.refreshRemoteConnectionInterval),
            (this.refreshRemoteConnectionInterval = null)),
          this.accountView && this.accountView.hide(),
          a.unmountComponentAtNode(this.$accountTabs[0]),
          this.$el.remove(),
          (this.$el = null),
          (this.$body = null),
          (this.$controls = null),
          (this.$header = null),
          (this.$accountTabs = null),
          this.user.destroy(),
          (this.user = null));
      }
      updateUI() {
        if (!this.visible) return;
        this.$verificationContainer.hide();
        const e = dbms.getRemoteConnection(),
          t = 80;
        if (e.isLoggedIn()) {
          const i = e.getCurrentUser();
          i.verified ||
            ((this.$el[0].style.top = t + "px"),
            a.render(
              s.createElement(Da, {
                onContactSupportClick: () =>
                  NinoxDocumentInteraction.openBrowser(
                    "mailto:support@ninox.com"
                  ),
                onResendClick: () => e.resendVerificationMail({}, console.log),
                email: i.email,
              }),
              this.$verificationContainer[0]
            ),
            (this.$verificationContainer[0].style.top = `${-t}px`),
            (this.$verificationContainer[0].style.height = `${t}px`),
            this.$verificationContainer.show());
        }
        this.updateUITabs(),
          this.accountView && this.accountView.updateUI(),
          this.user.updateUI();
      }
      updateUITabs() {
        const e = dbms
          .listAccounts()
          .map((e) =>
            _n({}, e, {
              id: e.id,
              isSelected: e.id === this.accountId,
              text: "" === e.name ? Object(_e.a)().unknown : e.name,
              iconClass: "i-32-24 i-light-grey i-people-group",
            })
          );
        a.render(
          s.createElement(Ma, {
            items: e,
            currentItemId: this.accountId,
            onItemSelect: (e) => this.accountTabsClicked(e),
            onContextMenuClick: (e) => this.accountTabsContextmenu(e),
            onNewItemClick: Object(c.g)() ? null : () => this.createAccount(),
          }),
          this.$accountTabs[0]
        );
      }
      dbmsChanged() {
        dbms.getAccount(this.accountId)
          ? this.updateUI()
          : this.selectAccount(dbms.getDefaultAccountId());
      }
      accountTabsClicked(e) {
        e === this.accountId ? this.popupAccountOptions(e) : F({ teamId: e });
      }
      accountTabsContextmenu(e) {
        this.popupAccountOptions(e);
      }
      createAccount() {
        dbms.getRemoteConnection().isLoggedIn()
          ? this.createAccountDialog()
          : this.ninoxCloudSignup();
      }
      createAccountDialog() {
        const e = this;
        if (!dbms.getRemoteConnection().canCreateTestAccount())
          return $.alert(Object(_e.a)().alreadyTrialPlan);
        const t = $.popdown({
            cls: "small",
            head: Object(_e.a)().createNewTeam,
            buttons: [
              "cancel",
              "-",
              { caption: Object(_e.a)().createTeam, cls: "blue", click: o },
            ],
          }),
          i = $.input({
            caption: Object(_e.a)().chooseTeamName,
            $container: t.$content,
            focus: !0,
          });
        function o() {
          const o = i.val().trim();
          if (!o) return $.alert(Object(_e.a)().noTeamName);
          $.loading(!0),
            dbms.getRemoteConnection().createAccount({ name: o }, (i, o) => {
              if (($.loading(!1), i)) return $.alert(i);
              t.close(), o && e.afterLogin();
            });
        }
      }
      selectAccount(e) {
        if (e !== this.accountId) {
          this.accountView &&
            (this.accountView.destroy(), (this.accountView = null));
          const t = dbms.getAccount(e);
          t
            ? ((this.accountId = e),
              "local" === t.base
                ? ((this.accountView = new RootLocal(this, e)),
                  trackPageView("home/local"),
                  Object(l.f)("MyDatabases", "Open"))
                : ((this.accountView = new kn(this, e)),
                  trackPageView("home/team"),
                  Object(l.f)("Team", "Open")))
            : (this.accountId = null);
        }
        this.accountView && this.visible && this.accountView.show(),
          this.updateUI();
      }
      popupAccountOptions(e) {
        e === this.accountId &&
          this.accountView &&
          this.accountView.popupOptions();
      }
      selectServer() {
        const e = $.popdown({
            cls: "small",
            head: "Select Server",
            buttons: [
              "cancel",
              "-",
              { caption: Object(_e.a)().okay, cls: "blue", click: i },
            ],
          }),
          t = $.input({ caption: "Server", $container: e.$content, focus: !0 });
        function i() {
          const e = t.val().trim();
          if (
            e &&
            !/^([a-z][a-z0-9\-\_]*)(\.[a-z][a-z0-9\-\_]*)*(\:[0-9]+)?$/.test(e)
          )
            return $.alert("Invalid address.");
          e != NinoxDocumentInteraction.getUserDefault("nx.server") &&
            (NinoxDocumentInteraction.setUserDefault("nx.server", e),
            dbms.getRemoteConnection().clearSession(),
            window.location.reload());
        }
        t.$input
          .attr("autocomplete", "off")
          .attr("autocorrect", "off")
          .attr("autocapitalize", "off")
          .attr("spellcheck", "false"),
          t.val(NinoxDocumentInteraction.getUserDefault("nx.server"));
      }
      popupOptions(e) {
        const t = this,
          i = dbms.getRemoteConnection(),
          o = i.getAccount(t.accountId),
          a = o && o.owner === i.getUserId(),
          n = o && i.isAdmin(t.accountId),
          s = $.backplane({ close: u }),
          r = $('<div class="nx-menu-popup popupeditor">')
            .css({ left: "auto", right: 0, top: 40 })
            .appendTo(s);
        $('<div class="nx-menu-item">')
          .append(
            $('<div class="nx-menu-icon i-32-24 i-light-grey i-question">')
          )
          .append(
            $('<div class="nx-menu-label">').text(Object(_e.a)().onlineHelp)
          )
          .appendTo(r)
          .touch(() => {
            s.close(),
              trackEvent("UserManual", "Click"),
              Object(l.f)("UserManual", "Click"),
              NinoxDocumentInteraction.openBrowser(Dn());
          }),
          "local" !== t.accountId &&
            (a || n) &&
            $('<div class="nx-menu-item">')
              .append(
                $('<div class="nx-menu-icon i-32-24 i-light-grey i-reload">')
              )
              .append(
                $('<div class="nx-menu-label">').text(
                  Object(_e.a)().processHeadline
                )
              )
              .appendTo(r)
              .touch(() => {
                s.close(), t.showBackgroundProcesses();
              }),
          $('<div class="nx-menu-item">')
            .append(
              $('<div class="nx-menu-icon i-32-24 i-light-grey i-field-email">')
            )
            .append(
              $('<div class="nx-menu-label">').text(
                Object(_e.a)().supportTicket
              )
            )
            .appendTo(r)
            .touch(() => {
              s.close(),
                trackEvent("GetSupport", "Click"),
                Object(l.f)("GetSupport", "Click"),
                NinoxDocumentInteraction.openBrowser(
                  "mailto:support@ninox.com"
                );
            }),
          a &&
            $('<div class="nx-menu-item">')
              .append(
                $(
                  '<div class="nx-menu-icon i-32-24 i-light-grey i-cloud-okay">'
                )
              )
              .append(
                $('<div class="nx-menu-label">').text("Zapier Integrations")
              )
              .appendTo(r)
              .touch(() => {
                s.close(),
                  trackEvent("ZapierIntegrations", "Click"),
                  Object(l.f)("ZapierIntegrations", "Click"),
                  t.openIntegrations();
              });
        dbms.getRemoteConnection().getSessionInfo().user;
        const c = new b.util.SimpleModel(
          new b.schemas.TChoice(void 0, void 0, {
            caption: Object(_e.a)().language,
            required: !0,
            values: {
              auto: { caption: Object(_e.a)().auto, order: 1 },
              en: { caption: "English", order: 2 },
              fr: { caption: "French (Français)", order: 3 },
              de: { caption: "German (Deutsch)", order: 4 },
              it: { caption: "Italian (Italiano)", order: 5 },
              es: { caption: "Spanish (Español)", order: 6 },
              ca: { caption: "Catalan (Català)", order: 7 },
              pl: { caption: "Polish (Polski)", order: 8 },
              ru: { caption: "Russian (Русский)", order: 9 },
              chs: { caption: "Chinese simplified (简体中文)", order: 10 },
              cht: { caption: "Chinese traditional (繁體中文)", order: 11 },
            },
          })
        );
        c.value =
          NinoxDocumentInteraction.getUserDefault("ui.language") || "auto";
        const d = new ct.a(void 0, c, r);
        function u() {
          d.destroy();
        }
        c.on("update", () => {
          NinoxDocumentInteraction.setUserDefault("ui.language", c.value),
            setTimeout(() => {
              t.reload();
            }, 0);
        }),
          d.el.css({ width: 240 });
      }
      openIntegrations(e) {
        const t = $.popdown({ close: p }),
          i = [];
        $('<div class="nx-section-head">')
          .text(Object(_e.a)().zapierIntegration)
          .appendTo(t.$pane);
        const o = $('<div class="root-backup-list">')
            .css({ padding: "0 10px", height: "75vh" })
            .appendTo(t.$pane),
          n = $('<table class="w-100">'),
          r = $('<div class="api-keys-body">').append(n),
          l = $(
            '<button class="api-generate-btn pointer">' +
              Object(_e.a)().generate +
              "</button>"
          ).click(u);
        function d(e) {
          const t = (e) => {
              dbms.getRemoteConnection().deleteAPIKey(e, (t, o) => {
                if (t) return console.warn(t);
                const a = i[e];
                a && (a.remove(), delete i[e]);
              });
            },
            o = $(
              '<span class="nx-menu-icon i-32-24 i-light-grey i-close"></span>'
            ).click(() => t(e.token)),
            n = $("<tr>").append(
              $(
                '<td class="api-data force-select"><span>' +
                  e.token +
                  "</span></td>"
              )
            );
          if (Object(c.g)()) {
            const t = $('<td id="role-selector">');
            t.appendTo(n);
            const i = H(),
              o = dbms.getAccount(i.teamId) || {
                getRoles: () => [
                  { id: 1, caption: "admin" },
                  { id: 2, caption: "editor" },
                ],
              },
              r = Object.values(o.getRoles()).map(
                (e, t) => ((e.id = t + 1), e)
              );
            let l = [];
            r.reduce(
              (t, i) => (e.roles.includes(i.caption) && t.push(i.id), t),
              l
            ),
              a.render(
                s.createElement(Ta, {
                  initialValue: l,
                  noButtons: !0,
                  values: r,
                  onChange: (t) => {
                    const i = [];
                    r.reduce(
                      (e, i) => (t.includes(i.id) && e.push(i.caption), e),
                      i
                    ),
                      (e.roles = i.join()),
                      "" === e.roles && ((e.roles = "admin"), (l = [1])),
                      dbms.getRemoteConnection().updateApiKey(e, (e) => e);
                  },
                }),
                t[0]
              );
          }
          return (
            n.append(
              $(
                '<td class="api-data text-right pointer" title="Delete Token">'
              ).append(o)
            ),
            n
          );
        }
        function u() {
          dbms.getRemoteConnection().generateAPIKey((e, t) => {
            if (e) return console.warn(e);
            const o = d(t);
            (i[t.token] = o), n.append(o);
          });
        }
        function p() {
          const e = n.find("#role-selector")[0];
          e && a.unmountComponentAtNode(e);
        }
        $('<div class="api-keys">')
          .append(
            $(
              '<div class="api-keys-header"><div class="half"><span style="font-size: 1.1rem;">API Keys</span></div></div>'
            ).append($('<div class="half text-right">').append(l))
          )
          .append(r)
          .appendTo(o),
          dbms.getRemoteConnection().fetchAPIKeys((e, t) => {
            if (e) return console.warn(e);
            t.forEach((e) => {
              const t = d(e);
              (i[e.token] = t), n.append(t);
            });
          }),
          $(
            '<div id="zapier_embeds" style="padding:0 10px;height:520px"><script src="https://zapier.com/apps/embed/widget.js?services=ninox&html_id=zapier_embeds"/></div>'
          ).appendTo(o);
      }
      showBackgroundProcesses() {
        const e = this,
          t = $.popdown({}),
          i = [];
        $('<div class="nx-section-head">')
          .text(Object(_e.a)().processHeadline)
          .appendTo(t.$pane);
        const o = $('<div class="root-backup-list">')
            .css({ padding: "0 10px", height: "75vh" })
            .appendTo(t.$pane),
          a = $('<table class="w-100">'),
          n = $('<div class="api-keys-body">').append(a),
          s = $(
            '<button class="api-generate-btn pointer">' +
              Object(_e.a)().processRefresh +
              "</button>"
          ).click(r);
        function r() {
          const t = dbms.getRemoteAccount(e.accountId);
          t &&
            t.getProcesses((e, t) => {
              if (e) return console.warn(e);
              a.empty();
              const o = l();
              a.append(o),
                t.forEach((e, t) => {
                  const o = c(e, t);
                  (i[e] = o), a.append(o);
                });
            });
        }
        function l() {
          return $('<tr class="process-header">')
            .append(
              $(
                '<td class="api-data force-select"><span> ' +
                  Object(_e.a)().processName +
                  " </span></td>"
              )
            )
            .append(
              $(
                '<td class="api-data force-select"><span>' +
                  Object(_e.a)().processTimeStarted +
                  "</span></td>"
              )
            )
            .append(
              $(
                '<td class="api-data force-select"><span>' +
                  Object(_e.a)().processTimeStopped +
                  "</span></td>"
              )
            )
            .append(
              $(
                '<td class="api-data force-select"><span>' +
                  Object(_e.a)().processUser +
                  "</span></td>"
              )
            )
            .append(
              $(
                '<td class="api-data force-select"><span>' +
                  Object(_e.a)().processDatabase +
                  "</span></td>"
              )
            )
            .append(
              $('<td class="api-data force-select"><span>Logs</span></td>')
            )
            .append(
              $('<td class="api-data force-select"><span>Status</span></td>')
            );
        }
        function c(e, t) {
          let i;
          switch (e.status) {
            case "done":
              i = $(
                '<span class="nx-menu-icon i-32-24 i-blue i-check"></span>'
              );
              break;
            case "failed":
              i = $(
                '<span class="nx-menu-icon i-32-24 i-red i-warning"></span>'
              );
              break;
            case "active":
              i = $(
                '<span class="nx-menu-icon i-32-24 i-light-grey i-symbol-concat"></span>'
              );
          }
          const o = t % 2 == 0 ? "process-row-2nd" : " process-row-1st",
            a = window.root.accountView.account.getDatabase(e.dbid),
            n = dbms.getRemoteConnection().getSessionInfo().getUser(e.userId),
            s = a ? a.name : "",
            r = n ? n.name : "",
            l = $(
              '<span class="nx-menu-icon i-32-24 i-light-grey i-field-string_multiline"></span>'
            ).click(() => d(e.logs));
          return $('<tr class=" ' + o + '">')
            .append(
              $(
                '<td class="api-data force-select"><span>' +
                  e.name +
                  "</span></td>"
              )
            )
            .append(
              $(
                '<td class="api-data force-select"><span>' +
                  new Date(e.startedAt).toLocaleTimeString() +
                  "</span></td>"
              )
            )
            .append(
              $(
                '<td class="api-data force-select"><span>' +
                  (e.stoppedAt
                    ? new Date(e.stoppedAt).toLocaleTimeString()
                    : "") +
                  "</span></td>"
              )
            )
            .append(
              $('<td class="api-data force-select"><span>' + r + "</span></td>")
            )
            .append(
              $('<td class="api-data force-select"><span>' + s + "</span></td>")
            )
            .append(
              $('<td class="api-data text-right" title="Status">').append(l)
            )
            .append(
              $('<td class="api-data text-right" title="Status">').append(i)
            );
        }
        function d(e) {
          const t = $.popdown({}),
            i = [];
          $('<div class="nx-section-head">').text("Logs").appendTo(t.$pane);
          const o = $('<div class="root-backup-list">')
              .css({ padding: "0 10px", height: "75vh" })
              .appendTo(t.$pane),
            a = $('<table class="w-100">'),
            n = $('<div class="api-keys-body">').append(a);
          function s(e) {
            return $("<tr>")
              .append(
                $(
                  '<td class="api-data force-select"><span>' +
                    new Date(e.timestamp).toLocaleTimeString() +
                    "</span></td>"
                )
              )
              .append(
                $(
                  '<td class="api-data force-select"><span>' +
                    e.level +
                    "</span></td>"
                )
              )
              .append(
                $(
                  '<td class="api-data force-select"><span>' +
                    e.message +
                    "</span></td>"
                )
              );
          }
          $('<div class="api-keys" style="margin-top: 20px">')
            .append(n)
            .appendTo(o),
            e.forEach((e) => {
              const t = s(e);
              (i[e] = t), a.append(t);
            });
        }
        $('<div class="api-keys">')
          .append(
            $(
              '<div class="api-keys-header"><div class="half"><span>Status </span></div></div>'
            ).append($('<div class="half text-right">').append(s))
          )
          .append(n)
          .appendTo(o),
          r();
      }
      upgradePlan() {
        trackEvent("upgrade", "click"),
          Object(l.f)("Upgrade", "Open"),
          this.upgradePlan_CLEVERBRIDGE();
      }
      upgradePlan_APPLE() {
        new Store();
      }
      upgradePlan_CLEVERBRIDGE() {
        const e = dbms.getRemoteConnection().getUpgradeURL();
        setTimeout(() => {
          window.location.href = e;
        }, 40);
      }
      ninoxCloudSignup() {
        const e = this,
          t = window.location.hash,
          i = dbms.getRemoteConnection(),
          o = !Object(c.g)(),
          n = !(!/\#signup/.exec(t) || !o);
        trackPageView(n ? "signup" : "login"),
          Object(l.f)(n ? "Signup" : "Login", "Open");
        const r =
            i.isSamlEnabled() || i.isOidcEnabled()
              ? () => i.ssoLogin()
              : void 0,
          d = i.isSamlEnabled() ? Y() : i.isOidcEnabled() ? G() : { error: "" };
        if (r) {
          const { error: e } = d,
            t = NinoxDocumentInteraction.getUserDefault(c.b) === c.a;
          if (e) {
            const e = () => a.unmountComponentAtNode(t[0]),
              t = $.backplane({
                close: e,
                scrollable: !0,
                closable: !1,
                cls: "sso-error",
              });
            a.render(
              s.createElement(Ve, {
                onTryAgain: () => {
                  t.close(), setTimeout(r, 0);
                },
              }),
              t[0]
            );
          } else if (t) {
            NinoxDocumentInteraction.setUserDefault(c.b, "");
            const e = () => a.unmountComponentAtNode(t[0]),
              t = $.backplane({
                close: e,
                scrollable: !0,
                closable: !1,
                cls: "sso-logout",
              });
            a.render(
              s.createElement(Ia, {
                onLogin: () => {
                  t.close(), setTimeout(r, 0);
                },
              }),
              t[0]
            );
          } else r();
        } else if (i.isAddsEnabled()) {
          const t = () => a.unmountComponentAtNode(i[0]),
            i = $.backplane({ close: t, scrollable: !0, closable: !1 });
          a.render(
            s.createElement(Ca, {
              close: () => i.close(),
              afterLogin: () => e.afterLogin(),
            }),
            i[0]
          );
        } else {
          const t = () => a.unmountComponentAtNode(i[0]),
            i = $.backplane({ close: t, scrollable: !0, closable: !1 }),
            r = !Object(c.g)() && !0;
          a.render(
            s.createElement(Ea, {
              canSignup: o,
              wantsSignup: n,
              close: () => i.close(),
              afterLogin: () => e.afterLogin(),
              isGoogleAvailable: r,
            }),
            i[0]
          );
        }
      }
      ninoxCloudLogout() {
        const e = this,
          t = dbms.getRemoteConnection();
        (t.isSamlEnabled() || t.isOidcEnabled()) &&
          NinoxDocumentInteraction.setUserDefault(c.b, c.a),
          window.database
            ? dbms.closeDatabase(() => {
                t.logout((e) => {
                  ui &&
                    ui.handleLogout(() => {
                      A({ teamId: "default" }), window.location.reload();
                    });
                });
              })
            : t.logout((t) => {
                if (t) return $.alert(t);
                e.show(), e.createAccount();
              });
      }
      handleOpenURL(e) {
        if (e)
          if (/^ninox\:\/\/do\:/.test(e)) {
            const t = /^ninox\:\/\/do\:([a-z\-]+)\:(.*)$/.exec(e);
            if (t) {
              const e = t[1],
                i = t[2];
              "set-server" === e
                ? NinoxDocumentInteraction.getUserDefault("nx.server") !== i &&
                  (NinoxDocumentInteraction.setUserDefault("nx.server", i),
                  dbms.getRemoteConnection().clearSession(),
                  window.location.reload())
                : alert("Unknow command: " + e + ":" + i);
            } else alert("Invalid url: " + e);
          } else {
            if (/^ninox\:\/\//.test(e)) {
              const t = e.substr(8);
              if (!t) return;
              e = /^[a-z]+\:/i.test(t) ? t : "http://" + t;
            }
            /\.ninox$/i.test(e)
              ? (A({ teamId: H().teamId }),
                ui.destroy(() => {
                  this.show(),
                    this.accountView
                      ? this.accountView.importDatabase(e)
                      : $.alert("No account selected.");
                }))
              : new bt({ url: e });
          }
      }
      reload() {
        window.location.reload();
      }
      renameDatabase(e, t) {
        this.accountView && this.accountView.renameDatabase(e, t);
      }
      duplicateDatabase(e, t) {
        this.accountView && this.accountView.duplicateDatabase(e, t);
      }
      reorganizeDatabase(e, t) {
        this.accountView && this.accountView.reorganizeDatabase(e, t);
      }
      saveDatabaseArchiveAs(e, t) {
        this.accountView && this.accountView.saveDatabaseArchiveAs(e, t);
      }
      createDatabase() {
        this.accountView && this.accountView.createDatabase();
      }
      importArchive(e) {
        this.accountView && this.accountView.importArchive(e);
      }
      removeDatabase(e, t) {
        this.accountView && this.accountView.removeDatabase(e, t);
      }
      trigger(e) {}
      installTemplate(e) {
        this.accountView &&
          this.accountView.account &&
          ($.loading(!0),
          this.accountView.account.loadArchive({ url: e }, (e) => {
            $.loading(!1), e && $.alert(e);
          }));
      }
    }
    function Dn() {
      const e = "de" === Object(_e.a)().LOCALE ? "de" : "en";
      let t = "https://ninox.com";
      return (
        ["qs", "alpha"].includes("prod") && (t = "https://q-www.ninox.com"),
        `${t}/${e}/manual` +
          "?h=1&utm_medium=ninox-app&utm_campaign=app-other-manual&utm_source=app-other"
      );
    }
    var Nn = o(
      "./src/react/util/HorizontalScrollContainer/HorizontalScrollItem.tsx"
    );
    o("./src/react/tableView/TabsRow.css");
    const Mn = Object(Xe.SortableContainer)(({ children: e, className: t }) =>
        s.createElement("div", { className: t }, e)
      ),
      In = Object(Xe.SortableElement)(({ children: e }) => e);
    class Rn extends s.Component {
      constructor(e) {
        super(e),
          Ie()(this, "handleScrollStateChange", (e) => {
            this.props.onScrollStateChange(e),
              this.setState({ isScrollable: e });
          }),
          (this.state = { isScrollable: !1, isSorting: !1 });
      }
      render() {
        const e = this.props.views[this.props.selectedIndex],
          t = null == e ? void 0 : e.id;
        return s.createElement(
          "div",
          { className: "TabsRow_root" },
          s.createElement(
            Pi.a,
            {
              controlsConfig: {
                position: "AFTER_CHILD",
                left: {
                  innerElement: this.getElementBeforeControls(),
                  visibility: window.TOUCH ? "NONE" : "AUTO",
                  containerClassName:
                    "TabsRow_movementControlsContainer TabsRow_movementControlsContainerLeft",
                },
                right: {
                  containerClassName: "TabsRow_movementControlsContainer",
                  visibility: window.TOUCH ? "NONE" : "AUTO",
                },
              },
              useExternalResizeListener: !0,
              selectedItemId: t,
              onScrollStateChange: this.handleScrollStateChange,
            },
            s.createElement(
              Mn,
              {
                onSortStart: () => this.setState({ isSorting: !0 }),
                className: "TabsRow_tabsContainer",
                helperClass: "TabsRow_helperClass",
                distance: window.TOUCH ? 0 : 3,
                pressDelay: window.TOUCH ? 200 : 0,
                onSortEnd: (e) => this.onSortEnd(e.oldIndex, e.newIndex),
                axis: "x",
              },
              this.props.views.map((e, t) =>
                s.createElement(
                  In,
                  { key: e.id, index: t },
                  s.createElement(
                    Nn.a,
                    { id: e.id, className: this.getViewClass(t) },
                    s.createElement(
                      ze.a,
                      {
                        className: "TabsRow_view",
                        preventLongPress: !0,
                        onFastClick: (e) => this.props.onTabClick(e, t),
                        onFastContextMenu: (e) => this.props.onContext(e, t),
                      },
                      e.caption || Object(_e.a)().unnamed
                    )
                  )
                )
              )
            )
          ),
          this.getElementAfterControls()
        );
      }
      getElementAfterControls() {
        return this.state.isScrollable
          ? s.createElement(
              "div",
              { className: "TabsRow_actionsContainer" },
              s.createElement(ze.a, {
                onFastClick: this.props.onShowMoreTabsClick,
                className: "i-32-16 i-white i-items",
              })
            )
          : null;
      }
      getElementBeforeControls() {
        return this.props.isAdmin
          ? s.createElement(
              "div",
              { className: "TabsRow_actionsContainer TabsRow_addContainer" },
              s.createElement(ze.a, {
                onFastClick: this.props.onNewViewClick,
                className: "i-32-16 i-light-grey i-plus",
              })
            )
          : null;
      }
      getViewClass(e) {
        let t = "TabsRow_viewContainer";
        return (
          e === this.props.selectedIndex && (t += " TabsRow_viewSelected"),
          this.state.isSorting && (t += " TabsRow_viewSorting"),
          t
        );
      }
      onSortEnd(e, t) {
        this.setState({ isSorting: !1 }), this.props.onReorder(e, t);
      }
    }
    class Fn extends s.Component {
      constructor(e) {
        super(e),
          Ie()(this, "handleTabClick", (e, t) => {
            t === this.props.selectedIndex
              ? this.handleContextMenu(e, t)
              : this.props.onTabClick(t);
          }),
          Ie()(this, "handleContextMenu", (e, t) => {
            const i = [
              {
                text: Object(_e.a)().newView + "...",
                onClick: this.props.onNewViewClick,
              },
              {
                text: Object(_e.a)().renameView + "...",
                onClick: () => this.props.onRenameView(t),
              },
              {
                text: Object(_e.a)().removeView,
                onClick: () => this.handleRemoveView(t),
              },
            ];
            t === this.props.selectedIndex &&
              i.push({
                text: Object(_e.a)().showHideColumns,
                onClick: () => this.props.onEditColumns(t),
              }),
              this.displayContextMenu(e, t, i);
          }),
          Ie()(this, "displayContextMenu", (e, t, i) => {
            this.setState({
              target: ze.b.getTarget(e),
              contextMenu: { isOpen: !0, content: i },
            });
          }),
          Ie()(this, "handleShowAllClicked", (e) => {
            this.setState({ target: ze.b.getTarget(e), isPopupMenuOpen: !0 });
          }),
          Ie()(this, "handleScrollStateChange", (e) => {
            this.setState({ isScrollable: e, isPopupMenuOpen: !1 });
          }),
          Ie()(this, "closeBackplane", () => {
            this.setState((e) => ({
              killWhenTargetIsNull: !1,
              isPopupMenuOpen: !1,
              contextMenu: { isOpen: !1, content: e.contextMenu.content },
            }));
          }),
          (this.state = {
            target: null,
            isScrollable: !1,
            isPopupMenuOpen: !1,
            contextMenu: { isOpen: !1, content: [] },
            killWhenTargetIsNull: !1,
          });
      }
      render() {
        return s.createElement(
          "div",
          { style: { width: "100%" } },
          s.createElement(Rn, {
            isAdmin: this.props.isAdmin,
            onContext: this.handleContextMenu,
            onScrollStateChange: this.handleScrollStateChange,
            onNewViewClick: this.props.onNewViewClick,
            onReorder: this.props.onReorder,
            onShowMoreTabsClick: this.handleShowAllClicked,
            onTabClick: this.handleTabClick,
            selectedIndex: this.props.selectedIndex,
            views: this.props.views,
          }),
          this.state.isScrollable && this.state.isPopupMenuOpen
            ? s.createElement(Ui.a, {
                itemBackground: "OFF_WHITE",
                items: this.getPopUpItems(),
                clickTarget: this.state.target,
                onClick: (e) => {
                  e !== this.props.selectedIndex &&
                    (null !== e && this.props.onTabClick(e),
                    this.closeBackplane());
                },
                onReorder: this.props.onReorder,
              })
            : null,
          s.createElement(Yo, {
            clickTarget: this.state.target,
            killWhenTargetIsNull: this.state.killWhenTargetIsNull,
            show: this.state.contextMenu.isOpen,
            onClick: this.closeBackplane,
            items: this.state.contextMenu.content,
          })
        );
      }
      handleRemoveView(e) {
        this.setState({ target: null, killWhenTargetIsNull: !0 }),
          this.props.onRemoveView(e);
      }
      getPopUpItems() {
        return this.props.views.map((e, t) => {
          let i = e.mode;
          return (
            "full" === e.mode
              ? (i = "form")
              : "pivot" === e.mode || "table" === e.mode
              ? (i = "setting-table")
              : "chart" === e.mode
              ? (i = "setting-table-chart")
              : "cards" === e.mode && (i = "home"),
            {
              id: e.id,
              isSelected: t === this.props.selectedIndex,
              text: e.caption,
              iconClass: i
                ? "i-32-24 i-light-grey i-" + i
                : "i-32-24 i-light-grey i-setting-table",
            }
          );
        });
      }
    }
    o("./node_modules/assert/assert.js");
    function An(e) {
      var t = e.type,
        i = $.backplane({}),
        o = $(
          '<div style="position:absolute;left:' +
            ui.leftWidth +
            'px;right:0;bottom:0;top:48px;background-color:#fff">'
        ).appendTo(i),
        a = $(
          '<div style="position:absolute;left:0;top:0;right:0;bottom:48px;overflow:auto">'
        ).appendTo(o),
        n = (window.getWidth(), []);
      Q.each(t.sorted, function (e) {
        var i, o, s, r, l, c, d, u;
        function p() {
          l.setHidden("function" !== o.value),
            d.el.setHidden("value" !== o.value);
        }
        function h() {
          new Vt.a({
            value: u.fn,
            schema: database.schema,
            type: t,
            okay: function (e, t) {
              (u.fn = e || ""), (u.exp = t), r.text(t ? t.toHumanString() : "");
            },
          });
        }
        On(e) &&
          ((i = $(
            '<div style="border-bottom:solid 1px #EFF1F9;display:flex;display:-webkit-flex">'
          )
            .append(
              $(
                '<div style="flex:0 0 auto;-webkit-flex:0 0 auto;width:150px;line-height:48px;overflow:hidden;white-space:nowrap;text-align:right;padding:0 8px">'
              ).text(e.caption || e.id)
            )
            .appendTo(a)),
          ((o = new util.SimpleModel(
            new schemas.TChoice(void 0, void 0, {
              caption: locale.updateMode,
              required: !0,
              width: 2,
              values: {
                ignore: { caption: locale.updateModeDontChange, order: 1 },
                value: { caption: locale.updateModeAssignValue, order: 2 },
                function: {
                  caption: locale.updateModeAssignFunction,
                  order: 3,
                },
                null: { caption: locale.updateModeAssignNull, order: 4 },
              },
            })
          )).value = "ignore"),
          (o.withoutLabel = !0),
          o.on("update", p),
          (s = new ct.a(void 0, o, i)).el.css({
            width: 200,
            flex: "0 0 auto",
            "-webkit-flex": "0 0 auto",
          }),
          (l = $(
            '<div class="editor" style="flex:1 1 auto;-webkit-flex:1 1 auto">'
          ).appendTo(i)),
          (r = $('<div class="input-text">')
            .appendTo($('<div class="stringeditor">').appendTo(l))
            .click(h)),
          ((c = new util.SimpleModel(e)).withoutLabel = !0),
          (d = new ct.a(void 0, c, i)).el.css({
            flex: "1 1 auto",
            "-webkit-flex": "1 1 auto",
          }),
          (u = {
            fn: "",
            exp: void 0,
            field: e,
            updateMode: o,
            updateModeField: s,
            value: c,
          }),
          n.push(u),
          p());
      });
      var s = $(
          '<div style="position:absolute;left:0;bottom:0;right:0;height:48px;background-color:#fff;display:flex;display:-webkit-flex;border-top:solid 1px #D4D9E9">'
        ).appendTo(o),
        r = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: "",
            required: !0,
            width: 2,
            values: {
              visible: { caption: locale.updateVisibleRecords, order: 2 },
              selected: { caption: locale.updateSelectedRecords, order: 3 },
            },
          })
        );
      function l() {
        $.loading(!0);
        for (
          var i =
              "selected" === r.value ? Q.keys(e.midChoosen) : Q.keys(e.models),
            o = [],
            a = {},
            s = 0;
          s < n.length;
          s++
        ) {
          var l = n[s];
          "function" === l.updateMode.value &&
            l.exp &&
            queries.extendDependencies(a, l.exp.dependencies);
        }
        function d() {
          database.loadNodes2(i, a, function (e) {
            e && ($.loading(!1), $.alert(e)), setTimeout(u, 0);
          });
        }
        function u() {
          let e = 1;
          for (let a = 0; a < i.length; a++) {
            const s = i[a],
              r = database.loadNodeSync(s);
            if (r) {
              const i = { _id: s };
              for (let o = 0; o < n.length; o++) {
                const a = n[o],
                  s = a.field,
                  l = a.updateMode.value;
                if ("function" === l && a.exp) {
                  const o = a.exp;
                  e++,
                    o.evaluate(database, r, function (e, a) {
                      a && a._missingNodes
                        ? console.log(
                            "ERR: Missing nodes: " +
                              JSON.stringify(a._missingNodes)
                          )
                        : s.isReference && "nid" === o.returnType.base
                        ? (i[s.id] = database.ridOf(a))
                        : (i[s.id] = s.convert(a)),
                        t();
                    });
                } else
                  "value" === l
                    ? (i[s.id] = s.convert(a.value.value))
                    : "null" === l && (i[s.id] = null);
              }
              o.push(i);
            }
          }
          function t() {
            e--, 0 === e && setTimeout(p, 0);
          }
          t();
        }
        function p() {
          $.loading(!1);
          var i = $('<div class="nx-backplane import-preview">').appendTo(
              $(document.body)
            ),
            a = t.sorted,
            n = $(
              '<div style="position:absolute;left:0;bottom:0;right:0;padding:8px;background-color:#fff;border-top:solid 1px #D4D9E9;display:flex;display:-webkit-flex">'
            ).appendTo(i);
          $('<div class="nx-hspace-flex">').appendTo(n),
            $('<div class="nx-button-text grey">')
              .text(locale.back)
              .appendTo(n)
              .touch(v),
            $('<div class="nx-hspace-small">').appendTo(n),
            $('<div class="nx-button-text red">')
              .text(locale.executeUpdate)
              .appendTo(n)
              .touch(b);
          var s = $(
            '<div style="position:absolute;left:0;top:20px;width:100%;padding:0 16px;box-sizing:border-box;-moz-box-sizing:border-box;text-align:right">'
          ).appendTo(i);
          $('<div style="float:left;height:32px;line-height:32px">')
            .text(locale.importPreview)
            .appendTo(s),
            s.button("prev", void 0, void 0, m);
          var r = $(
            '<div style="display:inline-block;height:32px;line-height:32px">'
          ).appendTo(s);
          s.button("next", void 0, void 0, f);
          var l = $(
              '<div style="position:absolute;left:0;top:68px;width:100%;bottom:51px;overflow:auto">'
            ).appendTo(i),
            d = window.getHeight() - 128,
            u = Math.max(1, Math.floor(d / 33) - 1),
            p = 0,
            h = Math.ceil(o.length / u);
          function m() {
            --p < 0 && (p = h - 1), g();
          }
          function f() {
            ++p >= h && (p = 0), g();
          }
          function g() {
            r.text(locale.page + " " + (p + 1) + " / " + h);
            for (
              var e =
                  "<table><thead><tr><th>" + htmlEscape(locale.id) + "</th>",
                t = 0;
              t < a.length;
              t++
            ) {
              On((f = a[t])) && (e += "<th>" + htmlEscape(f.caption) + "</th>");
            }
            e += "</tr></thead><tbody>";
            for (
              var i = p * u, n = Math.min(i + u, o.length), s = i;
              s < n;
              s++
            ) {
              var c = o[s];
              e += "<tr>";
              var d = c._id,
                m = database.loadNodeSync(d);
              e +=
                '<td style="text-align:right">' +
                htmlEscape(schemas.ridOf(d)) +
                "</td>";
              for (t = 0; t < a.length; t++) {
                var f;
                if (On((f = a[t]))) {
                  var g = c[f.id],
                    v = m ? m[f.id] : void 0;
                  (e += '<td class="cell-' + f.base + '">'),
                    null != v &&
                      "" !== v &&
                      (e +=
                        '<div class="import-cell-old">' +
                        htmlEscape(f.format(v)) +
                        "</div>"),
                    void 0 !== g &&
                      (e +=
                        null === g
                          ? '<div class="import-cell-update">' +
                            htmlEscape(locale.empty) +
                            "</div>"
                          : '<div class="import-cell-update">' +
                            htmlEscape(f.format(g)) +
                            "</div>"),
                    (e += "</td>");
                }
              }
              e += "</tr>";
            }
            (e += "</tbody></table>"), l.html(e);
          }
          function v() {
            i.remove();
          }
          function b() {
            i.remove(),
              $.loading(!0),
              (e.silent = !0),
              database.updateNodes(o, function (t) {
                $.loading(!1),
                  (e.silent = !1),
                  t && $.alert(t),
                  c(),
                  e.reload();
              });
          }
          g();
        }
        setTimeout(d, 0);
      }
      function c() {
        i.close();
      }
      (r.value = Q.isEmpty(e.midChoosen) ? "visible" : "selected"),
        (r.withoutLabel = "true"),
        new ct.a(void 0, r, s).el.css({ width: 400 }),
        $('<div class="nx-hspace-flex">').appendTo(s),
        $('<div class="nx-button-text grey" style="margin:8px">')
          .text(locale.cancel)
          .appendTo(s)
          .touch(c),
        $('<div class="nx-button-text blue" style="margin:8px 8px 8px 0">')
          .text(locale.next)
          .appendTo(s)
          .touch(l);
    }
    function On(e) {
      return (
        ((e.isField && "fn" !== e.base) || e.isReference) &&
        database.canWrite(e)
      );
    }
    function zn() {}
    (zn.prototype.destroy = function () {
      this.hide(), this.el.remove();
    }),
      (zn.prototype.setVisible = function (e) {
        e ? this.show() : this.hide();
      }),
      (zn.prototype.show = function (e) {
        if ((console.log("TableViewRenderer.show", e), !this.visible)) {
          (this.visible = !0),
            window.addEventListener("resize", this.resize),
            database.on("schema", void 0, this.schemaChanged, this),
            database.on("rename", void 0, this.nodeRenamed, this),
            database.on("remove", void 0, this.nodeRemoved, this),
            database.on("create", void 0, this.nodeCreated, this),
            database.on("admin", void 0, this.adminChanged, this),
            this.el.appendTo(ui.$body),
            $.pushInputHandler(this);
          var t = this.getSelectedNid();
          t && this.openEditor(t),
            ui.recordNavigation.pushController(this),
            this.didShow(e);
        }
      }),
      (zn.prototype.didShow = function (e) {}),
      (zn.prototype.schemaChanged = function (e, t, i) {}),
      (zn.prototype.hide = function () {
        console.log("TableViewRenderer.hide"),
          this.visible &&
            ((this.visible = !1),
            ui.recordNavigation.popController(this),
            window.removeEventListener("resize", this.resize),
            database.off("schema", void 0, this.schemaChanged, this),
            database.off("rename", void 0, this.nodeRenamed, this),
            database.off("remove", void 0, this.nodeRemoved, this),
            database.off("create", void 0, this.nodeCreated, this),
            database.off("admin", void 0, this.adminChanged, this),
            $.popInputHandler(this),
            this.closeEditor(!0),
            this.el.detach(),
            this.didHide());
      }),
      (zn.prototype.didHide = function () {}),
      (zn.prototype.resize = function () {}),
      (zn.prototype.updateUI = function () {}),
      (zn.prototype.menuNewViewEnabled = function () {
        return database.isAdmin();
      }),
      (zn.prototype.menuNewView = function () {
        database.isAdmin() && this.tableView.createView();
      }),
      (zn.prototype.menuRenameViewEnabled = function () {
        return database.isAdmin();
      }),
      (zn.prototype.menuRenameView = function () {
        database.isAdmin() && this.tableView.renameView();
      }),
      (zn.prototype.menuDeleteViewEnabled = function () {
        return database.isAdmin();
      }),
      (zn.prototype.menuDeleteView = function () {
        database.isAdmin() && this.tableView.removeView();
      }),
      (zn.prototype.menuEditColumnsEnabled = function () {
        return database.isAdmin();
      }),
      (zn.prototype.menuEditColumns = function () {
        database.isAdmin() && this.tableView.popupColumnMenu();
      }),
      (zn.prototype.menuShowViewAsFormEnabled = function () {
        return database.isAdmin();
      }),
      (zn.prototype.menuShowViewAsForm = function () {
        database.isAdmin() && this.tableView.showForm();
      }),
      (zn.prototype.menuShowViewAsTableEnabled = function () {
        return database.isAdmin();
      }),
      (zn.prototype.menuShowViewAsTable = function () {
        database.isAdmin() && this.tableView.showTable();
      }),
      (zn.prototype.menuShowViewAsChartEnabled = function () {
        return database.isAdmin();
      }),
      (zn.prototype.menuShowViewAsChart = function () {
        database.isAdmin() && this.tableView.showChart();
      }),
      (zn.prototype.hasNextRecord = function () {
        return this.getQuery().rows.length > 0;
      }),
      (zn.prototype.nextRecord = function () {
        this.editorDown();
      }),
      (zn.prototype.hasPrevRecord = function () {
        return this.getQuery().rows.length > 0;
      }),
      (zn.prototype.prevRecord = function () {
        this.editorUp();
      }),
      (zn.prototype.lastRecord = function () {
        this.editorLast();
      }),
      (zn.prototype.firstRecord = function () {
        this.editorFirst();
      }),
      (zn.prototype.hasAddRecord = function () {
        return !(
          !this.getQuery().type || !database.canCreate(this.getQuery().type)
        );
      }),
      (zn.prototype.addRecord = function () {
        var e = this;
        Object(c.c)(this.getQuery().type, function (t) {
          e.select(t);
        });
      }),
      (zn.prototype.hasDuplicateRecord = function () {
        return !!(
          this.getSelectedNid() &&
          this.getQuery().type &&
          database.canCreate(this.getQuery().type)
        );
      }),
      (zn.prototype.duplicateRecord = function () {
        var e = this;
        Object(c.d)(e.getSelectedNid(), function (t) {
          e.select(t);
        });
      }),
      (zn.prototype.hasRemoveRecord = function () {
        return !!(
          this.getSelectedNid() &&
          this.getQuery().type &&
          database.canDelete(this.getQuery().type)
        );
      }),
      (zn.prototype.removeRecord = function () {
        Object(c.j)(this.getSelectedNid());
      }),
      (zn.prototype.hasPrintRecord = function () {
        return !(!this.getSelectedNid() || !1 === database.authorizationPrint);
      }),
      (zn.prototype.printRecord = function () {
        Object(c.i)(this.getSelectedNid());
      }),
      (zn.prototype.getSelectedNid = function () {
        return this.getQuery().getSelectedNid();
      }),
      (zn.prototype.getSelectedNids = function () {
        return [];
      }),
      (zn.prototype.getSideEditorOptions = function () {
        return (
          this.sideEditorOptions ||
            (this.sideEditorOptions = {
              close: $.proxy(this.unselect, this),
              next: $.proxy(this.editorDown, this),
              prev: $.proxy(this.editorUp, this),
              first: $.proxy(this.editorFirst, this),
              last: $.proxy(this.editorLast, this),
              duplicate: $.proxy(this.duplicate, this),
              getSelectedNids: $.proxy(this.getSelectedNids, this),
            }),
          this.sideEditorOptions
        );
      }),
      (zn.prototype.select = function (e) {
        e !== this.getSelectedNid() && this.getQuery().select(e);
      }),
      (zn.prototype.selectionChanged = function () {
        this.visible &&
          (ui.recordNavigation.updateUI(),
          this.openEditor(this.getSelectedNid()),
          this.updateSelection());
      }),
      (zn.prototype.updateSelection = function () {}),
      (zn.prototype.unselect = function () {
        this.select(void 0);
      }),
      (zn.prototype.toggleGroup = function (e) {
        this.getQuery().toggle(e);
      }),
      (zn.prototype.editorDown = function () {
        this.getQuery().editorDown();
      }),
      (zn.prototype.editorUp = function () {
        this.getQuery().editorUp();
      }),
      (zn.prototype.editorLast = function () {
        this.getQuery().editorLast();
      }),
      (zn.prototype.editorFirst = function () {
        this.getQuery().editorFirst();
      }),
      (zn.prototype.getQuery = function () {
        return this.tableView.table;
      }),
      (zn.prototype.openEditor = function (e) {
        this.visible && ui.sideEditor.open(e, this.getSideEditorOptions());
      }),
      (zn.prototype.closeEditor = function (e) {
        ui.sideEditor.close(e);
      }),
      (zn.prototype.queryChanged = function () {}),
      (zn.prototype.rowsChanged = function () {}),
      (zn.prototype.dataChanged = function () {}),
      (zn.prototype.nodeRemoved = function (e, t) {}),
      (zn.prototype.nodeRenamed = function (e, t, i) {}),
      (zn.prototype.nodeCreated = function (e, t) {}),
      (zn.prototype.adminChanged = function (e, t) {}),
      (zn.prototype.bodyResized = function () {}),
      (zn.prototype.keydown = function (e) {
        console.log("TableViewRenderer.keydown", e.which);
        var t = e.which,
          i = this.getQuery();
        switch (t) {
          case 27:
            i.selectNothing(), e.preventDefault();
            break;
          case 32:
            i.onlyChoosen
              ? i.showAll()
              : Q.isEmpty(i.midChoosen) || i.showOnlyChoosen(),
              e.preventDefault();
            break;
          case 33:
            e.metaKey ? i.editorPrevGroup() : i.editorPageUp(),
              e.preventDefault();
            break;
          case 34:
            e.metaKey ? i.editorNextGroup() : i.editorPageDown(),
              e.preventDefault();
            break;
          case 35:
            i.editorLast(), e.preventDefault();
            break;
          case 36:
            i.editorFirst(), e.preventDefault();
            break;
          case 38:
            e.metaKey
              ? i.editorFirst(e.shiftKey)
              : e.altKey
              ? i.editorPageUp()
              : i.editorUp(e.shiftKey),
              e.preventDefault();
            break;
          case 40:
            e.metaKey
              ? i.editorLast(e.shiftKey)
              : e.altKey
              ? i.editorPageDown()
              : i.editorDown(e.shiftKey),
              e.preventDefault();
            break;
          default:
            (e.metaKey || e.ctrlKey) &&
              70 === t &&
              (i.openFindMenu(), e.preventDefault());
        }
      }),
      (zn.prototype.openContextMenu = function (e) {
        this.getQuery().openContextMenu(e);
      });
    const Ln = 1e3;
    function jn(e) {
      (this.visible = e.visible || !1),
        (this.renderHTML = e.render),
        (this.$pane = $(
          '<div class="scrollpane" style="display:' +
            (this.visible ? "" : "none") +
            '">'
        ).appendTo(e.$parent)),
        (this.$body = $('<div class="scrollpane-body">').appendTo(this.$pane)),
        (this.$view = $('<div class="scrollpane-view">').appendTo(this.$body)),
        e.head
          ? ((this.$head = $(
              '<div class="scrollpane-head" style="height:' +
                e.head.height +
                'px">'
            ).appendTo(this.$pane)),
            (this.$headView = $('<div class="scrollpane-view">').appendTo(
              this.$head
            )),
            this.$body.css("top", e.head.height),
            (this.renderHeadHTML = e.head.render),
            (this.headHeight = e.head.height))
          : (this.headHeight = 0),
        e.foot
          ? ((this.$foot = $(
              '<div class="scrollpane-foot" style="height:' +
                e.foot.height +
                'px">'
            ).appendTo(this.$pane)),
            (this.$footView = $('<div class="scrollpane-view">').appendTo(
              this.$foot
            )),
            this.$body.css("bottom", e.foot.height),
            (this.renderFootHTML = e.foot.render),
            (this.footHeight = e.foot.height))
          : (this.footHeight = 0),
        this.createScrollBars(),
        (this.rows = []),
        (this.rowOffsets = []),
        (this.totalHeight = 0),
        (this.totalWidth = 0),
        (this.viewRow0 = 0),
        (this.viewRow1 = 0),
        (this.scrollY = 0),
        (this.scrollX = 0),
        (this.scrollYTarget = 0),
        (this.scrollXTarget = 0),
        (this.viewY0 = 0),
        (this.viewY1 = 0),
        (this.visibleWidth = 100),
        (this.visibleHeight = 100),
        (this.leftWidth = 0),
        (this.scrollDoneTime = 0),
        (this.scrollDoneTimeout = null),
        (this.scrollDone = $.proxy(this.scrollDone, this)),
        this.registerScrollListeners();
    }
    function Pn(e) {
      var t = this;
      (this.tableView = e),
        (this.visible = !1),
        (this.resize = $.proxy(this.resize, this)),
        (this.el = $('<div class="cards-container">').touch(
          $.proxy(this.clicked, this)
        )),
        (this.scrollPane = new jn({
          $parent: this.el,
          render: function (e, i) {
            return t.renderHTML(e, i);
          },
          head: {
            height: 0,
            render: function () {
              return "";
            },
          },
          foot: {
            height: 0,
            render: function () {
              return "";
            },
          },
          left: {
            width: 0,
            render: function (e, t) {
              return "";
            },
          },
          right: {
            width: 0,
            render: function (e, t) {
              return "";
            },
          },
        }));
    }
    function Hn(e) {
      var t = this;
      (window.Chart.defaults.global.maintainAspectRatio = !1),
        (this.visible = !1),
        (this.loading = !1),
        (this.tableView = e),
        (this.el = $(
          '<div style="position:absolute;top:0;left:0;width:100%;height:100%;background-color:#fff">'
        )),
        (this.$chart = $(
          '<div style="position:absolute;top:16px;bottom:32px;left:16px;right:216px">'
        ).appendTo(this.el)),
        (this.$message = $(
          '<div style="text-align:center;font-size:18px;padding:48px;color:#777">'
        ).appendTo(this.$chart)),
        (this.$canvas = $(
          '<canvas style="position:absolute;top:0;left:0;width:100%;height:100%"></canvas>'
        ).appendTo(this.$chart)),
        (this.$pane = $(
          '<div style="position:absolute;top:0;bottom:0;right:0;width:200px;background-color:#fff;border-left:solid 1px #D4D9E9">'
        ).appendTo(this.el)),
        (this.chartType = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            choiceRenderer: "radio",
            caption: locale.chartType,
            formWidth: 1,
            required: !0,
            values: {
              bar: { id: "bar", caption: locale.chartBar, order: 1 },
              line: { id: "line", caption: locale.chartLine, order: 2 },
              pie: { id: "pie", caption: locale.chartPie, order: 3 },
              doughnut: {
                id: "doughnut",
                caption: locale.chartDoughnut,
                order: 4,
              },
              polarArea: {
                id: "polarArea",
                caption: locale.chartPolarArea,
                order: 5,
              },
              radar: { id: "radar", caption: locale.chartRadar, order: 6 },
              bubble: { id: "bubble", caption: locale.chartBubble, order: 7 },
            },
          })
        )),
        this.chartType.on("update", function () {
          t.settingsChanged();
        }),
        (this.chartTypeField = new ct.a(void 0, this.chartType, this.$pane)),
        (this.chartDatasets = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            choiceRenderer: "radio",
            caption: locale.chartDatasets,
            formWidth: 1,
            required: !0,
            values: {
              cols: { id: "cols", caption: locale.chartDatasetsCols, order: 1 },
              rows: { id: "rows", caption: locale.chartDatasetsRows, order: 2 },
            },
          })
        )),
        this.chartDatasets.on("update", function () {
          t.settingsChanged();
        }),
        (this.chartDatasetsField = new ct.a(
          void 0,
          this.chartDatasets,
          this.$pane
        )),
        (this.chartStacked = new util.SimpleModel(
          new schemas.TBoolean(void 0, void 0, {
            booleanRenderer: "check",
            caption: locale.chartStacked,
            formWidth: 1,
            required: !0,
          })
        )),
        (this.chartStacked.withoutLabel = !0),
        this.chartStacked.on("update", function () {
          t.settingsChanged();
        }),
        (this.chartStackedField = new ct.a(
          void 0,
          this.chartStacked,
          this.$pane
        )),
        (this.chartLineTension = new util.SimpleModel(
          new schemas.TBoolean(void 0, void 0, {
            booleanRenderer: "check",
            caption: locale.chartLineTension,
            formWidth: 1,
            required: !0,
          })
        )),
        (this.chartLineTension.withoutLabel = !0),
        this.chartLineTension.on("update", function () {
          t.settingsChanged();
        }),
        (this.chartLineTensionField = new ct.a(
          void 0,
          this.chartLineTension,
          this.$pane
        )),
        $('<div class="nx-button-text grey">')
          .text(locale.showHideColumns)
          .appendTo($('<div style="padding:0 12px">').appendTo(this.$pane))
          .touch(function () {
            e.popupColumnMenu();
          }),
        $('<div class="nx-button-text blue">')
          .text(locale.saveImage + "...")
          .appendTo(
            $('<div style="padding:8px 12px 0px 12px">').appendTo(this.$pane)
          )
          .click($.proxy(this.saveImage, this));
    }
    function Un(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function Vn(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? Un(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : Un(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    function Wn(e) {
      (this.tableView = e),
        (this.visible = !1),
        (this.el = $('<div class="fullform">')),
        (this.tabsEl = $('<div class="popupeditor2-tabs">').appendTo(this.el)),
        (this.editor = void 0);
    }
    function Bn(e) {
      var t = this;
      (this.visible = e.visible || !1),
        (this.renderHTML = e.render),
        (this.leftWidth = 0),
        (this.footHeight = 0),
        (this.headHeight = 0),
        (this.scrollDoneTime = 0),
        (this.scrollDoneTimeout = null),
        (this.scrollDone = $.proxy(this.scrollDone, this)),
        (this.$pane = $(
          '<div class="scrollpane" style="display:' +
            (this.visible ? "" : "none") +
            '">'
        ).appendTo(e.$parent)),
        (this.$body = $('<div class="scrollpane-body">').appendTo(this.$pane)),
        (this.$view = $('<div class="scrollpane-view">').appendTo(this.$body)),
        e.head &&
          ((this.$head = $(
            '<div class="scrollpane-head" style="height:' +
              e.head.height +
              'px">'
          ).appendTo(this.$pane)),
          (this.$headView = $('<div class="scrollpane-view">').appendTo(
            this.$head
          )),
          this.$body.css("top", e.head.height),
          (this.renderHeadHTML = e.head.render),
          (this.headHeight = e.head.height)),
        e.foot &&
          ((this.$foot = $(
            '<div class="scrollpane-foot" style="height:' +
              e.foot.height +
              'px">'
          ).appendTo(this.$pane)),
          (this.$footView = $('<div class="scrollpane-view">').appendTo(
            this.$foot
          )),
          this.$body.css("bottom", e.foot.height),
          (this.renderFootHTML = e.foot.render),
          (this.footHeight = e.foot.height)),
        e.left &&
          ((this.$left = $(
            '<div class="scrollpane-left" style="width:' + e.left.width + 'px">'
          ).appendTo(this.$pane)),
          (this.$leftView = $('<div class="scrollpane-view">').appendTo(
            this.$left
          )),
          this.$body.css("left", e.left.width),
          this.$head.css("left", e.left.width),
          this.$foot.css("left", e.left.width),
          (this.renderLeftHTML = e.left.render),
          e.head &&
            ((this.renderLeftHeadHTML = e.left.renderHead),
            this.$left.css("top", e.head.height),
            (this.$leftHead = $(
              '<div class="scrollpane-left-head" style="width:' +
                e.left.width +
                "px;height:" +
                e.head.height +
                'px">'
            ).appendTo(this.$pane)),
            (this.$leftHeadView = $('<div class="scrollpane-view">').appendTo(
              this.$leftHead
            ))),
          e.foot &&
            ((this.renderLeftFootHTML = e.left.renderFoot),
            this.$left.css("bottom", e.foot.height),
            (this.$leftFoot = $(
              '<div class="scrollpane-left-foot" style="width:' +
                e.left.width +
                "px;height:" +
                e.foot.height +
                'px">'
            ).appendTo(this.$pane)),
            (this.$leftFootView = $('<div class="scrollpane-view">').appendTo(
              this.$leftFoot
            ))),
          (this.leftWidth = e.left.width),
          !1 !== e.leftDivider &&
            (this.$leftDivider = $(
              '<div class="scrollpane-divider" style="left:' +
                e.left.width +
                'px">'
            )
              .appendTo(this.$pane)
              .nxdraggable({
                dragStart: function (e) {
                  this.w0 = t.leftWidth;
                },
                drag: function (e) {
                  t.setLeftWidth(this.w0 + (e.x2 - e.x0));
                },
                dragEnd: function (e) {
                  t.leftWidthChanged();
                },
              }))),
        (this.$scrollbarVContainer = $(
          '<div class="t-scrollbar-v-container" style="top:0;bottom:0">'
        ).appendTo(this.$pane)),
        (this.$scrollbarV = $('<div class="t-scrollbar-v">').appendTo(
          this.$scrollbarVContainer
        )),
        (this.$scrollbarHContainer = $(
          '<div class="t-scrollbar-h-container" style="left:0;bottom:0">'
        ).appendTo(this.$pane)),
        (this.$scrollbarH = $('<div class="t-scrollbar-h">').appendTo(
          this.$scrollbarHContainer
        )),
        (this.modX = e.modX),
        (this.modY = e.modY),
        (this.minX = 0),
        (this.maxX = 0),
        (this.minY = 0),
        (this.maxY = 0),
        (this.scrollX = 0),
        (this.scrollY = 0),
        (this.translateX = 0),
        (this.translateY = 0),
        (this.scrollXTarget = 0),
        (this.scrollYTarget = 0),
        (this.viewX0 = 0),
        (this.viewX1 = 0),
        (this.viewY0 = 0),
        (this.viewY1 = 0),
        (this.visibleWidth = 100),
        (this.visibleHeight = 100),
        (this.viewPaddingX = e.viewPaddingX || 200),
        (this.viewPaddingY = e.viewPaddingY || 200),
        this.registerScrollListeners();
    }
    (jn.prototype.hide = function () {
      this.visible &&
        ((this.visible = !1), (this.$pane[0].style.display = "none"));
    }),
      (jn.prototype.show = function () {
        this.visible ||
          ((this.visible = !0),
          (this.$pane[0].style.display = ""),
          this.rerender());
      }),
      (jn.prototype.destroy = function () {
        this.$pane.remove();
      }),
      (jn.prototype.setMetrics = function (e, t) {
        (this.rows = e),
          (this.totalWidth = t),
          this.updateRowOffsets(),
          this.visible && this.rerender();
      }),
      (jn.prototype.rerender = function () {
        this.resize(),
          this.renderHead(),
          this.renderFoot(),
          this.updateView(!0);
      }),
      (jn.prototype.resize = function () {
        var e = this.$body[0];
        (this.visibleWidth = e.clientWidth),
          (this.visibleHeight = e.clientHeight);
      }),
      (jn.prototype.updateRowOffsets = function () {
        for (var e = this.rows, t = [], i = 0, o = 0; o < e.length; o++) {
          var a = e[o];
          (t[o] = i), (i += a);
        }
        (this.rowOffsets = t), (this.totalHeight = i);
      }),
      (jn.prototype.scrollTo = function (e, t) {
        (this.scrollYTarget = Math.max(
          0,
          Math.min(t, this.totalHeight - this.visibleHeight)
        )),
          (this.scrollXTarget =
            null != this.totalWidth
              ? Math.max(0, Math.min(e, this.totalWidth - this.visibleWidth))
              : e),
          this.startAnimation();
      }),
      (jn.prototype.startAnimation = function () {
        (this.scrollX = this.scrollXTarget),
          (this.scrollY = this.scrollYTarget),
          this.updateView(!1);
      }),
      (jn.prototype.updateView = function (e) {
        var t = this.visibleHeight,
          i = this.visibleWidth,
          o = this.totalHeight,
          a = this.totalWidth,
          n = this.viewY0,
          s = this.viewY1,
          r = this.scrollY,
          l = this.scrollX,
          c = r + t;
        null != a &&
          l + i > a &&
          ((l = Math.max(0, a - i)), (this.scrollX = l)),
          (e || r < n || (c > s && c <= o)) &&
            (this.rerenderView(), (n = this.viewY0), (s = this.viewY1));
        var d = -l,
          u = -r + n;
        (this.$view[0].style.transform = this.$view[0].style.webkitTransform =
          "translate3d(" + d + "px," + u + "px,0px)"),
          this.$headView &&
            (this.$headView[0].style.transform =
              this.$headView[0].style.webkitTransform =
                "translate3d(" + d + "px,0px,0px)"),
          this.$footView &&
            (this.$footView[0].style.transform =
              this.$footView[0].style.webkitTransform =
                "translate3d(" + d + "px,0px,0px)"),
          this.updateScrollbar(!0);
      }),
      (jn.prototype.rerenderView = function () {
        this.rows;
        for (
          var e = this.rowOffsets,
            t = this.scrollY,
            i = this.visibleHeight,
            o = t - Ln,
            a = t + i + Ln,
            n = 0,
            s = e.length,
            r = 0;
          r < e.length;
          r++
        ) {
          if (e[r] >= o) {
            n = r;
            break;
          }
        }
        for (r = n; r < e.length; r++) {
          if (e[r] > a) {
            s = r;
            break;
          }
        }
        (this.viewRow0 = n),
          (this.viewRow1 = s),
          (this.viewY0 = e[n]),
          (this.viewY1 = s < e.length ? e[s] : this.totalHeight),
          this.renderView(n, s);
      }),
      (jn.prototype.renderView = async function (e, t) {
        this.$view[0].innerHTML = await this.renderHTML(e, t);
      }),
      (jn.prototype.renderHead = async function () {
        this.renderHeadHTML &&
          (this.$headView[0].innerHTML = await this.renderHeadHTML());
      }),
      (jn.prototype.renderFoot = async function () {
        this.renderFootHTML &&
          (this.$footView[0].innerHTML = await this.renderFootHTML());
      }),
      (jn.prototype.registerScrollListeners = function () {
        TOUCH
          ? (this.registerScrollTouchListeners(),
            this.registerScrollbarVTouchListeners())
          : (this.registerScrollMouseListeners(),
            this.registerScrollbarVMouseListeners(),
            this.registerScrollbarHMouseListeners());
      }),
      (jn.prototype.registerScrollMouseListeners = function () {
        var e = this,
          t = e.$body[0];
        function i(t) {
          var i = Math.max(0, e.totalHeight - e.visibleHeight),
            o =
              null != e.totalWidth
                ? Math.max(0, e.totalWidth - e.visibleWidth)
                : null,
            a =
              (OSX_10_9_MODE ? -t.wheelDeltaY : t.deltaY) *
              (1 == t.deltaMode
                ? 32
                : 2 == t.deltaMode
                ? window.getHeight()
                : 1),
            n = OSX_10_9_MODE ? t.wheelDeltaX : -t.deltaX;
          Math.abs(n) > Math.abs(a) ? (a = 0) : (n = 0);
          var s = e.scrollY,
            r = Math.min(Math.max(s + a, 0), i),
            l =
              null != o
                ? Math.min(Math.max(0, e.scrollX - n), o)
                : e.scrollX - n;
          e.scrollTo(l, r), t.preventDefault();
        }
        OSX_10_9_MODE
          ? t.addEventListener("mousewheel", i, !1)
          : t.addEventListener("wheel", i, !1);
      }),
      (jn.prototype.registerScrollTouchListeners = function () {
        var e,
          t = this,
          i = 0,
          o = 0,
          a = 0,
          n = 0,
          s = 0,
          r = 0,
          l = 0,
          c = null,
          d = !1,
          u = 500,
          p = u * u,
          h = u / 60,
          m = t.$body[0];
        function f() {
          if (d) {
            var e = t.scrollY,
              i = t.scrollX,
              o = Math.max(0, t.totalHeight - t.visibleHeight);
            if (e < 0) {
              var a = e - (10 * e * h) / u;
              Math.abs(a) < 0.1 && (a = 0),
                t.scrollTo(i, a),
                requestAnimationFrame(f);
            } else if (0 === e) d = !1;
            else if (e > o) {
              a = e - (10 * (e - o) * h) / u;
              Math.abs(a - o) < 0.1 && (a = o),
                t.scrollTo(i, a),
                requestAnimationFrame(f);
            } else if (e === o) d = !1;
            else if (l >= u) d = !1;
            else {
              var n = 1 - (l * l) / p;
              if (!isNaN(n)) {
                var c = n * s,
                  m = n * r,
                  g =
                    null != t.totalWidth
                      ? Math.min(
                          Math.max(0, i - c),
                          Math.max(0, t.totalWidth - t.visibleWidth)
                        )
                      : i - c;
                a = e - m;
                t.scrollTo(g, a);
              }
              (l += h), requestAnimationFrame(f);
            }
          }
        }
        m.addEventListener(EVENT_touchstart, function (t) {
          1 === t.touches.length &&
            ((d = !1),
            (i = a = t.touches[0].clientX),
            (o = n = t.touches[0].clientY),
            (e = new Date().getTime()),
            (c = null));
        }),
          m.addEventListener(EVENT_touchmove, function (e) {
            if (e.touches && 1 === e.touches.length) {
              d = !1;
              var i = e.touches[0].clientX,
                o = e.touches[0].clientY,
                s = i - a,
                r = o - n;
              c || (c = Math.abs(s) > Math.abs(r) ? "H" : "V"),
                "H" === c ? (r = 0) : (s = 0);
              var l =
                  null != t.totalWidth
                    ? Math.min(
                        Math.max(0, t.scrollX - s),
                        Math.max(0, t.totalWidth - t.visibleWidth)
                      )
                    : t.scrollX - s,
                u = t.scrollY - r;
              t.scrollTo(l, u), (a = i), (n = o), e.preventDefault();
            }
          }),
          m.addEventListener(EVENT_touchend, function (u) {
            if (!u.touches || 0 === u.touches.length) {
              var p = new Date().getTime() - e;
              (s = "H" === c ? ((a - i) * h) / p : 0),
                (r = "V" === c ? (t.scrollY < 0 ? 0 : ((n - o) * h) / p) : 0),
                (l = 0),
                (d = !0),
                requestAnimationFrame(f);
            }
          });
      }),
      (jn.prototype.scrollDone = function () {
        var e = Date.now(),
          t = this.scrollDoneTime - e;
        t < 100
          ? ((this.$scrollbarV[0].className = "t-scrollbar-v"),
            (this.$scrollbarH[0].className = "t-scrollbar-h"),
            (this.scrollDoneTimeout = null))
          : (this.scrollDoneTimeout = setTimeout(this.scrollDone, t));
      }),
      (jn.prototype.updateScrollbar = function (e) {
        var t = this.scrollY,
          i = this.scrollX,
          o = 0,
          a = 0,
          n = this.totalWidth,
          s = this.totalHeight - a,
          r = n - o,
          l = this.headHeight,
          c = (this.footHeight, this.leftWidth),
          d = this.visibleHeight,
          u = this.visibleWidth,
          p = s > d,
          h = r > u,
          m = d - (h ? 16 : 4),
          f = u - (p ? 24 : 12),
          g = Math.max(32, Math.min(m, Math.round((m * d) / s))),
          v =
            Math.max(
              0,
              Math.min(m - g, Math.round(((t - a) / (s - d)) * (m - g)))
            ) +
            l +
            2,
          b = Math.max(32, Math.min(f, Math.round(f * (u / r)))),
          y =
            Math.max(
              0,
              Math.min(f - b, Math.round(((i - o) / (r - u)) * (f - b)))
            ) +
            c +
            10,
          w = this.$scrollbarV[0];
        (w.style.top = v + "px"), (w.style.height = g + "px");
        var x = this.$scrollbarH[0];
        (x.style.left = y + "px"),
          (x.style.width = b + "px"),
          (x.style.bottom = "2px"),
          e &&
            ((w.className = p ? "t-scrollbar-v scrolling" : "t-scrollbar-v"),
            (x.className = h ? "t-scrollbar-h scrolling" : "t-scrollbar-h"),
            (this.scrollDoneTime = Date.now() + 1e3),
            this.scrollDoneTimeout ||
              (this.scrollDoneTimeout = setTimeout(this.scrollDone, 1e3)));
      }),
      (jn.prototype.registerScrollbarVMouseListeners = function () {
        var e = this;
        function t(t) {
          t.target;
          var i = t.clientY,
            o = e.scrollY,
            a = e.visibleHeight,
            n = a - 4,
            s = 0,
            r = e.totalHeight - s,
            l = r / n;
          function c(t) {
            var n = t.clientY - i;
            e.scrollTo(
              e.scrollX,
              Math.max(s, Math.min(s + r - a, Math.round(o + l * n)))
            ),
              t.preventDefault();
          }
          function d(e) {
            window.removeEventListener("mousemove", c, !1),
              window.removeEventListener("mouseup", d, !1),
              e.preventDefault();
          }
          window.addEventListener("mouseup", d, !1),
            window.addEventListener("mousemove", c, !1),
            t.preventDefault();
        }
        this.$scrollbarV[0].addEventListener("mousedown", t, !1);
      }),
      (jn.prototype.registerScrollbarVTouchListeners = function () {
        var e = this;
        function t(t) {
          if (1 === t.touches.length) {
            var i = t.touches[0].clientY,
              o = e.scrollY,
              a = e.visibleHeight,
              n = a - 4,
              s = e.totalHeight,
              r = 0,
              l = s - r,
              c = l / n;
            EVENT_target(t).addEventListener(EVENT_touchmove, d, !1),
              EVENT_target(t).addEventListener(EVENT_touchend, u, !1);
          }
          function d(t) {
            if (1 === t.touches.length) {
              var n = t.touches[0].clientY - i;
              e.scrollTo(
                e.scrollY,
                Math.max(r, Math.min(r + l - a, Math.round(o + c * n)))
              ),
                t.preventDefault();
            }
          }
          function u(e) {
            0 === e.touches.length &&
              (EVENT_target(e).removeEventListener(EVENT_touchmove, d, !1),
              EVENT_target(e).removeEventListener(EVENT_touchend, u, !1),
              e.preventDefault());
          }
        }
        this.$scrollbarV[0].addEventListener(EVENT_touchstart, t, !1);
      }),
      (jn.prototype.registerScrollbarHMouseListeners = function () {
        var e = this;
        function t(t) {
          var i = t.clientX,
            o = e.scrollX,
            a = e.visibleWidth,
            n = a - 4,
            s = 0,
            r = e.totalWidth - s,
            l = r / n;
          function c(t) {
            var n = t.clientX - i;
            e.scrollTo(
              Math.max(s, Math.min(s + r - a, Math.round(o + l * n))),
              e.scrollY
            ),
              t.preventDefault();
          }
          function d(e) {
            window.removeEventListener("mousemove", c, !1),
              window.removeEventListener("mouseup", d, !1),
              e.preventDefault();
          }
          window.addEventListener("mouseup", d, !1),
            window.addEventListener("mousemove", c, !1),
            t.preventDefault();
        }
        this.$scrollbarH[0].addEventListener("mousedown", t, !1);
      }),
      (jn.prototype.createScrollBars = function () {
        (this.$scrollbarVContainer = $(
          '<div class="t-scrollbar-v-container" style="top:0;bottom:0">'
        ).appendTo(this.$pane)),
          (this.$scrollbarV = $('<div class="t-scrollbar-v">').appendTo(
            this.$scrollbarVContainer
          )),
          (this.$scrollbarHContainer = $(
            '<div class="t-scrollbar-h-container" style="left:0;bottom:0">'
          ).appendTo(this.$pane)),
          (this.$scrollbarH = $('<div class="t-scrollbar-h">').appendTo(
            this.$scrollbarHContainer
          ));
      }),
      Object.assign(Pn.prototype, zn.prototype),
      (Pn.prototype.isCards = !0),
      (Pn.prototype.mode = "cards"),
      (Pn.prototype.didShow = function (e) {
        this.updateMetrics(), this.scrollPane.show(e);
      }),
      (Pn.prototype.didHide = function (e) {
        this.scrollPane.hide();
      }),
      (Pn.prototype.updateUI = function () {
        this.visible && this.scrollPane.updateView(!0);
      }),
      (Pn.prototype.dataChanged = function () {
        this.visible && this.updateUI();
      }),
      (Pn.prototype.rowsChanged = function () {
        this.visible && this.updateMetrics();
      }),
      (Pn.prototype.renderHTML = async function (e, t) {
        var i = Date.now(),
          o = this.getSelectedNid(),
          a = this.getQuery();
        if (!a.ready) return "";
        var n = a.rows,
          s = a.cols,
          r = a.models,
          l = a.groups || {},
          c = a.cidxGroup,
          d = null != c ? s[c] : void 0;
        if (d && !d.isReadable)
          return (
            '<h1 style="padding:16px;margin:0 auto">' +
            htmlEscape(locale.errorNotAuthorized) +
            "</h1>"
          );
        for (
          var u = d && d.expression.returnType,
            p = this.cardsPerRow,
            h = this.cardMargin,
            m = this.cardHeight,
            f = this.cardWidth,
            g = (t + 1) * p,
            v = "",
            b = 0,
            y = e % 2 == 0 ? h : 0,
            w = e * p;
          w < g && w < n.length;
          w++
        ) {
          var x = n[w],
            T = r[x];
          if (T) {
            var C =
                "position:absolute;width:" +
                f +
                "px;height:" +
                m +
                "px;left:" +
                (h + b * (f + h)) +
                "px;top:" +
                y +
                "px",
              k = x === o ? " selected" : "";
            (v += await this.renderCard(T, s, c, k, C, !1)),
              ++b === p && ((b = 0), (y += m + h));
          } else {
            var S = l[x];
            if (S) {
              b > 0 && ((b = 0), (y += m + h));
              var $ = S.values[c],
                _ = this.getGroupColor(u, $),
                E = this.getGroupIcon(u, $),
                D = !!a.expanded[x];
              (v +=
                '<div class="card-group" style="position:absolute;left:' +
                h +
                "px;top:" +
                y +
                "px;width:" +
                (p * (f + h) - h) +
                "px;background-color:" +
                _.light +
                '" data-gid="' +
                encodeURIComponent(S.id) +
                '"><div class="card-group-expander i-white i-32-24 i-line-' +
                (D ? "down" : "right") +
                '"></div><div class="card-group-title">' +
                (E
                  ? '<div class="card-group-icon ic ic-' + E + '"></div>'
                  : "") +
                '<div class="card-group-label">' +
                htmlEscape(u.format($)) +
                '</div></div><div class="card-group-right"></div></div>'),
                (b = 0),
                (y += 32 + h);
            }
          }
        }
        var N = Date.now();
        return console.log("Cards.renderHTML in " + (N - i) + "ms"), v;
      }),
      (Pn.prototype.queryLoaded = function () {
        this.updateMetrics();
      }),
      (Pn.prototype.updateMetrics = function () {
        if (this.visible) {
          var e =
              this.scrollPane.totalWidth > 0
                ? this.scrollPane.scrollX / this.scrollPane.totalWidth
                : 0,
            t =
              this.scrollPane.totalHeight > 0
                ? this.scrollPane.scrollY / this.scrollPane.totalHeight
                : 0,
            i = this.getQuery(),
            o = i.rows,
            a = i.cols,
            n = (i.models, i.groups || {}),
            s = i.cidxGroup,
            r = 16,
            l = 196,
            c = 0,
            d = 32;
          (a.length > 0 && "file" === a[0].expression.returnType.base) ||
            (c += 16);
          for (var u = 0; u < a.length; u++) {
            if (u !== s)
              switch (a[u].expression.returnType.base) {
                case "file":
                  c += 128;
                  break;
                default:
                  c += 24;
              }
          }
          (a.length > 0 &&
            "file" === a[a.length - 1].expression.returnType.base) ||
            (c += 16);
          for (
            var p = ui.bodyWidth + (ui.rightVisible ? 0 : ui.rightWidth),
              h = this.el[0].clientHeight,
              m = Math.max(1, Math.floor((p - r) / (l + r))),
              f = Math.max(l, Math.floor((p - (m + 1) * r) / m)),
              g = [],
              v = d + r,
              b = c + r,
              y = 0,
              w = 0,
              x = 0;
            x < o.length;
            x++
          ) {
            n[o[x]]
              ? (y > 0 && ((g[w] = b), w++, (y = 0)), (g[w] = v), w++, (y = 0))
              : (0 === y && (g[w] = b), ++y === m && ((y = 0), w++));
          }
          y > 0 && w++,
            (g[w] = r),
            (this.width = p),
            (this.cardMargin = r),
            (this.cardMinWidth = l),
            (this.cardWidth = f),
            (this.cardHeight = c),
            (this.cardsPerRow = m),
            (this.viewRowHeights = g),
            (this.groupRowHeight = v),
            (this.rowHeight = b),
            this.scrollPane.setMetrics(g, m * f + (m + 1) * r);
          var T = Math.max(
              0,
              Math.min(
                this.scrollPane.totalWidth - p,
                Math.round(e * this.scrollPane.totalWidth)
              )
            ),
            C = Math.max(
              0,
              Math.min(
                this.scrollPane.totalHeight - h,
                Math.round(t * this.scrollPane.totalHeight)
              )
            );
          this.scrollPane.scrollTo(T, C);
        }
      }),
      (Pn.prototype.bodyResized = function () {
        this.visible && this.updateMetrics();
      }),
      (Pn.prototype.clicked = function (e) {
        var t = $(e.target).closest(".card").attr("data-nid");
        if (t) this.select(t);
        else {
          var i = $(e.target).closest(".card-group").attr("data-gid");
          i &&
            ((i = decodeURIComponent(i)),
            this.toggleGroup(i),
            this.updateMetrics());
        }
      }),
      (Pn.prototype.renderCard = async function (e, t, i, o, a, n) {
        var s =
          '<div class="card' +
          (o || "") +
          '" data-nid="' +
          e.id +
          '"' +
          (a ? ' style="' + a + '"' : "") +
          ">";
        (t.length > 0 &&
          "file" === t[0].expression.returnType.base &&
          (e.values[0] || !n)) ||
          (s += '<div class="card-padding-top"></div>');
        for (var r = 0; r < t.length; r++)
          if (r !== i) {
            var l = t[r];
            if (l.isReadable) {
              var c = l.field,
                d = c.base,
                u = e.values[r],
                p = "",
                h = "",
                m = 0 === i ? 1 === r : 0 === r,
                f = !m;
              if (!n || null != u) {
                switch (d) {
                  case "choice":
                  case "dchoice": {
                    f = !1;
                    const t = await new Promise((t) => c.loadValue(e.id, u, t));
                    t &&
                      (p =
                        '<div class="card-row-value multicombo-item" style="' +
                        (t.color
                          ? "background-color:" +
                            t.color +
                            ";color:" +
                            util.contrastingTextColorTo(t.color)
                          : "") +
                        '">' +
                        (t.icon
                          ? '<div class="choice-symbol ic ic-' +
                            t.icon +
                            '"></div>'
                          : "") +
                        "<span>" +
                        htmlEscape(t.caption || "") +
                        "</span></div>");
                    break;
                  }
                  case "multi":
                  case "dmulti":
                    f = !1;
                    var g = util.multiDecode(u);
                    if (g) {
                      const t = await new Promise((t) =>
                        c.loadValues(e.id, (e, i) => t(i || {}))
                      );
                      g.sort(function (e, i) {
                        var o = t[e],
                          a = t[i];
                        return o ? (a ? o.order - a.order : -1) : 0;
                      });
                      for (var v = 0; v < g.length; v++) {
                        var b = t[g[v]];
                        b &&
                          (p +=
                            '<div class="card-row-value multicombo-item" style="margin:0 4px 0 0;' +
                            (b.color
                              ? "background-color:" +
                                b.color +
                                ";color:" +
                                util.contrastingTextColorTo(b.color)
                              : "") +
                            '">' +
                            (b.icon
                              ? '<div class="choice-symbol ic ic-' +
                                b.icon +
                                '"></div>'
                              : "") +
                            "<span>" +
                            htmlEscape(b.caption || "") +
                            "</span></div>");
                      }
                    }
                    break;
                  case "color":
                    (f = !1),
                      u &&
                        (p =
                          '<div class="card-row-value" style="width:20px;height:20px;border-radius:10px;margin:2px 0;background-color:' +
                          u +
                          '"></div>');
                    break;
                  case "icon":
                    (f = !1),
                      u &&
                        (p =
                          '<div class="choice-symbol ic ic-' + u + '"></div>');
                    break;
                  case "styled":
                    (f = !1),
                      u &&
                        (p =
                          '<div class="card-row-value multicombo-item" style="background-color:' +
                          u.background +
                          ";color:" +
                          u.color +
                          '">' +
                          (u.icon
                            ? '<div class="choice-symbol ic ic-' +
                              u.icon +
                              '"></div>'
                            : "") +
                          "<span>" +
                          htmlEscape(u.text || "") +
                          "</span></div>");
                    break;
                  case "file":
                    if (((f = !1), u)) {
                      var y = database.thumb2URL1(u);
                      y &&
                        ((p = " "), (h = "background-image:url('" + y + "')"));
                    }
                    break;
                  default:
                    p =
                      '<div class="card-row-value">' +
                      htmlEscape(c.format(u)) +
                      "</div>";
                }
                s +=
                  '<div class="card-row card-row-' +
                  d +
                  (m ? " card-header" : "") +
                  '"' +
                  (h ? ' style="' + h + '"' : "") +
                  ">" +
                  (f
                    ? '<div class="card-row-label">' +
                      htmlEscape(l.caption || l.expression.caption) +
                      ": </div>"
                    : "") +
                  p +
                  "</div>";
              }
            }
          }
        return (
          (t.length > 0 &&
            "file" === t[t.length - 1].expression.returnType.base &&
            (e.values[t.length - 1] || !n)) ||
            (s += '<div class="card-padding-bottom"></div>'),
          (s += "</div>")
        );
      }),
      (Pn.prototype.getGroupColor = function (e, t) {
        var i = "#D4D5DB";
        if ("choice" === e.base) {
          var o = e.getValues()[t];
          o && o.color && (i = o.color);
        } else "styled" === e.base && t && t.background && (i = t.background);
        return { light: i, dark: util.darken(i, 0.9) };
      }),
      (Pn.prototype.getGroupIcon = function (e, t) {
        if ("choice" === e.base) {
          var i = e.getValues()[t];
          return (i && i.icon) || void 0;
        }
        return ("styled" === e.base && t && t.icon) || void 0;
      }),
      (Pn.prototype.updateSelection = function () {
        var e = this.getSelectedNid();
        this.scrollPane.$view.children(".selected").removeClass("selected"),
          this.scrollPane.$view
            .children('[data-nid="' + e + '"]')
            .addClass("selected");
      }),
      (Hn.prototype.isChart = !0),
      (Hn.prototype.mode = "chart"),
      (Hn.prototype.destroy = function () {
        this.visible && ((this.visible = !1), $.popInputHandler(this)),
          this.chart && (this.chart.destroy(), (this.chart = void 0)),
          this.el.remove();
      }),
      (Hn.prototype.setVisible = function (e) {
        e ? this.show() : this.hide();
      }),
      (Hn.prototype.show = function () {
        this.visible ||
          ((this.visible = !0),
          $.pushInputHandler(this),
          this.el.appendTo(ui.$body)),
          this.loadSettings(),
          this.updateControls(),
          this.updateUI();
      }),
      (Hn.prototype.hide = function () {
        this.visible &&
          ((this.visible = !1),
          this.chart && (this.chart.destroy(), (this.chart = void 0)),
          $.popInputHandler(this),
          this.el.detach());
      }),
      (Hn.prototype.loadSettings = function () {
        (this.loading = !0),
          this.chartType.setValue(
            this.tableView.getViewProperty("chartType") || "bar"
          ),
          this.chartDatasets.setValue(
            this.tableView.getViewProperty("chartDatasets") || "cols"
          ),
          this.chartStacked.setValue(
            this.tableView.getViewProperty("chartStacked") || !1
          ),
          this.chartLineTension.setValue(
            this.tableView.getViewProperty("chartLineTension") || !1
          ),
          (this.loading = !1);
      }),
      (Hn.prototype.saveSettings = function () {
        this.tableView.setViewProperties({
          chartType: this.chartType.value,
          chartDatasets: this.chartDatasets.value,
          chartStacked: this.chartStacked.value,
          chartLineTension: this.chartLineTension.value,
        });
      }),
      (Hn.prototype.settingsChanged = function () {
        this.loading ||
          (this.saveSettings(), this.updateControls(), this.updateUI());
      }),
      (Hn.prototype.updateControls = function () {
        var e = this.chartType.value;
        "bar" === e || "line" === e
          ? this.chartStackedField.show()
          : this.chartStackedField.hide(),
          "line" === e
            ? this.chartLineTensionField.show()
            : this.chartLineTensionField.hide(),
          "bubble" !== e
            ? this.chartDatasetsField.show()
            : this.chartDatasetsField.hide();
      }),
      (Hn.prototype.updateUI = function () {
        if (this.visible) {
          this.chart && (this.chart.destroy(), (this.chart = void 0)),
            this.$message.text("");
          try {
            (this.chart = fi({
              query: this.tableView.table,
              chartType: this.chartType.value,
              chartDatasets: this.chartDatasets.value,
              chartStacked: this.chartStacked.value,
              chartLineTension: this.chartLineTension.value,
              animationDuration: 1e3,
              $canvas: this.$canvas,
            })),
              this.chart.resize();
          } catch (e) {
            this.$message.text(e);
          }
        }
      }),
      (Hn.prototype.saveImage = async function () {
        var e,
          t = util.escapeFileName(
            this.tableView.table.type.caption +
              " " +
              this.tableView.getViewCaption()
          );
        try {
          var i = this.$canvas[0].toDataURL();
          i || $.alert("Cannot render PNG");
          var o = i.indexOf(",");
          if (o < 0) return $.alert("Cannot render PNG: Invalid data URL");
          (e = i.substr(o + 1)),
            NinoxDocumentInteraction.openFileWithServer(
              t,
              "image/png",
              e,
              !0,
              !0
            );
        } catch (e) {
          return void $.alert(e);
        }
      }),
      (Hn.prototype.menuNewViewEnabled = function () {
        return database.isAdmin();
      }),
      (Hn.prototype.menuNewView = function () {
        database.isAdmin() && this.tableView.createView();
      }),
      (Hn.prototype.menuRenameViewEnabled = function () {
        return database.isAdmin();
      }),
      (Hn.prototype.menuRenameView = function () {
        database.isAdmin() && this.tableView.renameView();
      }),
      (Hn.prototype.menuDeleteViewEnabled = function () {
        return database.isAdmin();
      }),
      (Hn.prototype.menuDeleteView = function () {
        database.isAdmin() && this.tableView.removeView();
      }),
      (Hn.prototype.menuEditColumnsEnabled = function () {
        return database.isAdmin();
      }),
      (Hn.prototype.menuEditColumns = function () {
        database.isAdmin() && this.tableView.popupColumnMenu();
      }),
      (Hn.prototype.menuShowViewAsFormEnabled = function () {
        return database.isAdmin();
      }),
      (Hn.prototype.menuShowViewAsForm = function () {
        database.isAdmin() && this.tableView.showForm();
      }),
      (Hn.prototype.menuShowViewAsTableEnabled = function () {
        return database.isAdmin();
      }),
      (Hn.prototype.menuShowViewAsTable = function () {
        database.isAdmin() && this.tableView.showTable();
      }),
      (Hn.prototype.menuShowViewAsChartEnabled = function () {
        return database.isAdmin();
      }),
      (Hn.prototype.menuShowViewAsChart = function () {
        database.isAdmin() && this.tableView.showChart();
      }),
      (Hn.prototype.selectionChanged = function () {}),
      (Hn.prototype.queryLoaded = function () {
        this.visible && this.updateUI();
      }),
      (Hn.prototype.dataChanged = function () {
        this.visible && this.updateUI();
      }),
      (Hn.prototype.rowsChanged = function () {
        this.visible && this.updateUI();
      }),
      (Hn.prototype.bodyResized = function () {
        this.visible && this.chart && this.chart.resize();
      }),
      Object.assign(Wn.prototype, zn.prototype),
      (Wn.prototype.mode = "full"),
      (Wn.prototype.didShow = function () {
        this.updateTools(),
          ui.on("widgets.tools.updated", this.updateTools, this);
      }),
      (Wn.prototype.didHide = function (e) {
        ui.off("widgets.tools.updated", this.updateTools, this),
          this.updateTools(),
          this.editor && (this.editor.destroy(), (this.editor = void 0));
      }),
      (Wn.prototype.nodeRenamed = function (e, t, i) {}),
      (Wn.prototype.nodeRemoved = function (e, t) {}),
      (Wn.prototype.schemaChanged = function (e, t, i) {
        this.visible && this.updateStructure();
      }),
      (Wn.prototype.adminChanged = function (e, t) {
        this.visible && this.updateStructure();
      }),
      (Wn.prototype.updateStructure = function () {
        if (this.visible) {
          var e = this;
          if (e.editor) {
            e.editor.updateStructure();
            var t = e.getSelectedNid();
            t !== H().nid && A(Vn({}, H(), { nid: t })),
              database.loadNode(t, function (t, i) {
                e.editor.bind(i);
              });
          }
          e.updateTools();
        }
      }),
      (Wn.prototype.updateBackground = function (e) {
        var t = util.luminosity(e) < 0.5;
        this.el.css("background-color", e || "#FFF"),
          this.el.toggleClass("darkmode", t);
      }),
      (Wn.prototype.createEditor = function (e) {
        this.editor &&
          this.editor.tid !== e &&
          (this.editor.destroy(), (this.editor = void 0)),
          this.editor || (this.editor = new Wi(this, e, {}, void 0));
      }),
      (Wn.prototype.editorTabChanged = function (e) {
        const t = H();
        t.tabId !== e && A(Vn({}, t, { tabId: e }));
      }),
      (Wn.prototype.destroyEditor = function () {
        console.log("FullForm.destroyEditor"),
          this.editor && (this.editor.destroy(), (this.editor = void 0));
      }),
      (Wn.prototype.openEditor = function (e) {
        if (this.visible) {
          var t = this;
          if (e) {
            var i = (t._loadingId || 0) + 1;
            (t._loadingId = i),
              console.log("FullForm.openEditor: " + e, i),
              $.loading(!0),
              database.loadNode(e, function (o, a) {
                $.loading(!1),
                  console.log(
                    "FullForm.openEditor: " + e,
                    i,
                    " go on ",
                    t._loadingId
                  ),
                  t._loadingId === i &&
                    (t.createEditor(schemas.tidOf(e)),
                    e === t.getSelectedNid() &&
                      (a
                        ? (t.editor.bind(a),
                          e !== H().nid && A(Vn({}, H(), { nid: e })))
                        : t.destroyEditor()));
              });
          } else t.destroyEditor();
        }
      }),
      (Wn.prototype.queryLoaded = function () {
        this.visible && (this.getSelectedNid() || this.editorFirst());
      }),
      (Wn.prototype.isOnTop = function () {
        return !widgets.popupEditorStack.length;
      }),
      (Wn.prototype.showTools = Xi.prototype.showTools),
      (Wn.prototype.hideTools = Xi.prototype.hideTools),
      (Wn.prototype.updateTools = function () {
        database.adminMode && this.visible && this.isOnTop()
          ? this.showTools()
          : this.hideTools();
      }),
      Object.assign(Bn.prototype, util.events),
      (Bn.prototype.hide = function () {
        this.visible &&
          ((this.visible = !1), (this.$pane[0].style.display = "none"));
      }),
      (Bn.prototype.show = function () {
        this.visible ||
          ((this.visible = !0),
          (this.$pane[0].style.display = ""),
          this.rerender());
      }),
      (Bn.prototype.destroy = function () {
        this.$pane.remove();
      }),
      (Bn.prototype.setMetrics = function (e, t, i, o) {
        (this.minX = e),
          (this.minY = t),
          (this.maxX = i),
          (this.maxY = o),
          this.visible && this.rerender();
      }),
      (Bn.prototype.rerender = function () {
        this.resize(), this.updateView(!0);
      }),
      (Bn.prototype.resize = function () {
        var e = this.$body[0];
        (this.visibleWidth = e.clientWidth),
          (this.visibleHeight = e.clientHeight),
          this.updateScrollbar(!0);
      }),
      (Bn.prototype.scrollTo = function (e, t) {
        (this.scrollXTarget = Math.max(
          this.minX,
          Math.min(e, this.maxX - this.visibleWidth)
        )),
          (this.scrollYTarget = Math.max(
            this.minY,
            Math.min(t, this.maxY - this.visibleHeight)
          )),
          this.startAnimation();
      }),
      (Bn.prototype.startAnimation = function () {
        (this.scrollX = this.scrollXTarget),
          (this.scrollY = this.scrollYTarget),
          this.updateView(!1);
      }),
      (Bn.prototype.updateView = function (e) {
        this.scrollX < this.minX && (this.scrollX = this.minX),
          this.scrollX + this.visibleWidth > this.maxX &&
            (this.scrollX = Math.max(this.minX, this.maxX - this.visibleWidth)),
          this.scrollY < this.minY && (this.scrollY = this.minY),
          this.scrollY + this.visibleHeight > this.maxY &&
            (this.scrollY = Math.max(
              this.minY,
              this.maxY - this.visibleHeight
            )),
          (e ||
            this.scrollY < this.viewY0 ||
            this.scrollY + this.visibleHeight > this.viewY1 ||
            this.scrollX < this.viewX0 ||
            this.scrollX + this.visibleWidth > this.viewX1) &&
            this.renderView();
        var t = -this.scrollX + this.viewX0,
          i = -this.scrollY + this.viewY0;
        (this.translateX = t),
          (this.translateY = i),
          (this.$view[0].style.transform = this.$view[0].style.webkitTransform =
            "translate3d(" + t + "px," + i + "px,0px)"),
          this.$headView &&
            (this.$headView[0].style.transform =
              this.$headView[0].style.webkitTransform =
                "translate3d(" + t + "px,0px,0px)"),
          this.$footView &&
            (this.$footView[0].style.transform =
              this.$footView[0].style.webkitTransform =
                "translate3d(" + t + "px,0px,0px)"),
          this.$leftView &&
            (this.$leftView[0].style.transform =
              this.$leftView[0].style.webkitTransform =
                "translate3d(0px," + i + "px,0px)"),
          this.updateScrollbar(!0);
      }),
      (Bn.prototype.renderView = async function () {
        var e = this.scrollX - this.viewPaddingX,
          t = this.scrollX + this.visibleWidth + this.viewPaddingX,
          i = this.scrollY - this.viewPaddingY,
          o = this.scrollY + this.visibleHeight + this.viewPaddingY;
        (e -= e % this.modX),
          (i -= i % this.modY),
          (this.viewX0 = e),
          (this.viewY0 = i),
          (this.viewX1 = t),
          (this.viewY1 = o),
          (this.$view[0].innerHTML = await this.renderHTML(
            this.viewX0,
            this.viewY0,
            this.viewX1,
            this.viewY1
          )),
          this.renderLeftHeadHTML &&
            (this.$leftHeadView[0].innerHTML = await this.renderLeftHeadHTML()),
          this.renderLeftFootHTML &&
            (this.$leftFootView[0].innerHTML = await this.renderLeftFootHTML()),
          this.renderLeftHTML &&
            (this.$leftView[0].innerHTML = await this.renderLeftHTML(
              this.viewY0,
              this.viewY1
            )),
          this.renderHeadHTML &&
            (this.$headView[0].innerHTML = await this.renderHeadHTML(
              this.viewX0,
              this.viewX1
            )),
          this.renderFootHTML &&
            (this.$footView[0].innerHTML = await this.renderFootHTML(
              this.viewX0,
              this.viewX1
            ));
      }),
      (Bn.prototype.registerScrollListeners = function () {
        TOUCH
          ? (this.registerScrollTouchListeners(),
            this.registerScrollbarVTouchListeners())
          : (this.registerScrollMouseListeners(),
            this.registerScrollbarVMouseListeners(),
            this.registerScrollbarHMouseListeners());
      }),
      (Bn.prototype.registerScrollMouseListeners = function () {
        var e = this,
          t = e.$pane[0];
        function i(t) {
          var i = e.minX,
            o = e.minY,
            a = Math.max(e.minX, e.maxX - e.visibleWidth),
            n = Math.max(e.minY, e.maxY - e.visibleHeight),
            s =
              (OSX_10_9_MODE ? -t.wheelDeltaY : t.deltaY) *
              (1 == t.deltaMode
                ? 32
                : 2 == t.deltaMode
                ? window.getHeight()
                : 1),
            r = OSX_10_9_MODE ? -t.wheelDeltaX : t.deltaX;
          Math.abs(r) > Math.abs(s) ? (s = 0) : (r = 0);
          var l = e.scrollY,
            c = Math.min(Math.max(l + s, o), n),
            d = e.scrollX,
            u = Math.min(Math.max(d + r, i), a);
          e.scrollTo(u, c), t.preventDefault();
        }
        OSX_10_9_MODE
          ? t.addEventListener("mousewheel", i, !1)
          : t.addEventListener("wheel", i, !1);
      }),
      (Bn.prototype.registerScrollTouchListeners = function () {
        var e,
          t = this,
          i = 0,
          o = 0,
          a = 0,
          n = 0,
          s = 0,
          r = 0,
          l = 0,
          c = null,
          d = !1,
          u = 500,
          p = u * u,
          h = u / 60,
          m = t.$pane[0];
        function f() {
          if (d) {
            var e = t.scrollY,
              i = t.scrollX,
              o = Math.max(0, t.totalHeight - t.visibleHeight);
            if (e < 0) {
              var a = e - (10 * e * h) / u;
              Math.abs(a) < 0.1 && (a = 0),
                t.scrollTo(i, a),
                requestAnimationFrame(f);
            } else if (0 === e) d = !1;
            else if (e > o) {
              a = e - (10 * (e - o) * h) / u;
              Math.abs(a - o) < 0.1 && (a = o),
                t.scrollTo(i, a),
                requestAnimationFrame(f);
            } else if (e === o) d = !1;
            else if (l >= u) d = !1;
            else {
              var n = 1 - (l * l) / p;
              if (!isNaN(n)) {
                var c = n * s,
                  m = n * r,
                  g =
                    null != t.totalWidth
                      ? Math.min(
                          Math.max(0, i - c),
                          Math.max(0, t.totalWidth - t.visibleWidth)
                        )
                      : i - c;
                a = e - m;
                t.scrollTo(g, a);
              }
              (l += h), requestAnimationFrame(f);
            }
          }
        }
        m.addEventListener(EVENT_touchstart, function (t) {
          1 === t.touches.length &&
            ((d = !1),
            (i = a = t.touches[0].clientX),
            (o = n = t.touches[0].clientY),
            (e = new Date().getTime()),
            (c = null));
        }),
          m.addEventListener(EVENT_touchmove, function (e) {
            if (e.touches && 1 === e.touches.length) {
              d = !1;
              var i = e.touches[0].clientX,
                o = e.touches[0].clientY,
                s = i - a,
                r = o - n;
              c || (c = Math.abs(s) > Math.abs(r) ? "H" : "V"),
                "H" === c ? (r = 0) : (s = 0);
              var l = t.scrollX - s,
                u = t.scrollY - r;
              t.scrollTo(l, u), (a = i), (n = o), e.preventDefault();
            }
          }),
          m.addEventListener(EVENT_touchend, function (u) {
            if (!u.touches || 0 === u.touches.length) {
              var p = new Date().getTime() - e;
              (s = "H" === c ? ((a - i) * h) / p : 0),
                (r = "V" === c ? (t.scrollY < 0 ? 0 : ((n - o) * h) / p) : 0),
                (l = 0),
                (d = !0),
                requestAnimationFrame(f);
            }
          });
      }),
      (Bn.prototype.setLeftWidth = function (e) {
        e > 32 &&
          e < this.$pane[0].clientWidth - 32 &&
          ((this.leftWidth = e),
          this.$left.css("width", e),
          this.$leftHead.css("width", e),
          this.$leftFoot.css("width", e),
          this.$head.css("left", e),
          this.$foot.css("left", e),
          this.$body.css("left", e),
          this.$leftDivider && this.$leftDivider.css("left", e));
      }),
      (Bn.prototype.leftWidthChanged = function () {
        this.trigger("leftWidthChanged");
      }),
      (Bn.prototype.updateScrollbar = function (e) {
        var t = this.scrollY,
          i = this.scrollX,
          o = this.minX,
          a = this.minY,
          n = this.maxX,
          s = this.maxY - a,
          r = n - o,
          l = this.headHeight,
          c = (this.footHeight, this.leftWidth),
          d = this.visibleHeight,
          u = this.visibleWidth,
          p = s > d,
          h = r > u,
          m = d - 4,
          f = u - (p ? 24 : 12),
          g = Math.max(32, Math.min(m, Math.round((m * d) / s))),
          v =
            Math.max(
              0,
              Math.min(m - g, Math.round(((t - a) / (s - d)) * (m - g)))
            ) +
            l +
            2,
          b = Math.max(32, Math.min(f, Math.round(f * (u / r)))),
          y =
            Math.max(
              0,
              Math.min(f - b, Math.round(((i - o) / (r - u)) * (f - b)))
            ) +
            c +
            10,
          w = this.$scrollbarV[0];
        (w.style.top = v + "px"), (w.style.height = g + "px");
        var x = this.$scrollbarH[0];
        (x.style.left = y + "px"),
          (x.style.width = b + "px"),
          (x.style.bottom = "2px"),
          e &&
            ((w.className = p ? "t-scrollbar-v scrolling" : "t-scrollbar-v"),
            (x.className = h ? "t-scrollbar-h scrolling" : "t-scrollbar-h"),
            (this.scrollDoneTime = Date.now() + 1e3),
            this.scrollDoneTimeout ||
              (this.scrollDoneTimeout = setTimeout(this.scrollDone, 1e3)));
      }),
      (Bn.prototype.scrollDone = function () {
        var e = Date.now(),
          t = this.scrollDoneTime - e;
        t < 100
          ? ((this.$scrollbarV[0].className = "t-scrollbar-v"),
            (this.$scrollbarH[0].className = "t-scrollbar-h"),
            (this.scrollDoneTimeout = null))
          : (this.scrollDoneTimeout = setTimeout(this.scrollDone, t));
      }),
      (Bn.prototype.registerScrollbarVMouseListeners = function () {
        var e = this;
        function t(t) {
          t.target;
          var i = t.clientY,
            o = e.scrollY,
            a = e.visibleHeight,
            n = a - 4,
            s = e.maxY,
            r = e.minY,
            l = s - r,
            c = l / n;
          function d(t) {
            var n = t.clientY - i;
            e.scrollTo(
              e.scrollX,
              Math.max(r, Math.min(r + l - a, Math.round(o + c * n)))
            ),
              t.preventDefault();
          }
          function u(e) {
            window.removeEventListener("mousemove", d, !1),
              window.removeEventListener("mouseup", u, !1),
              e.preventDefault();
          }
          window.addEventListener("mouseup", u, !1),
            window.addEventListener("mousemove", d, !1),
            t.preventDefault();
        }
        this.$scrollbarV[0].addEventListener("mousedown", t, !1);
      }),
      (Bn.prototype.registerScrollbarVTouchListeners = function () {
        var e = this;
        function t(t) {
          if (1 === t.touches.length) {
            var i = t.touches[0].clientY,
              o = e.scrollY,
              a = e.visibleHeight,
              n = a - 4,
              s = e.maxY,
              r = e.minY,
              l = s - r,
              c = l / n;
            EVENT_target(t).addEventListener(EVENT_touchmove, d, !1),
              EVENT_target(t).addEventListener(EVENT_touchend, u, !1);
          }
          function d(t) {
            if (1 === t.touches.length) {
              var n = t.touches[0].clientY - i;
              e.scrollTo(
                e.scrollY,
                Math.max(r, Math.min(r + l - a, Math.round(o + c * n)))
              ),
                t.preventDefault();
            }
          }
          function u(e) {
            0 === e.touches.length &&
              (EVENT_target(e).removeEventListener(EVENT_touchmove, d, !1),
              EVENT_target(e).removeEventListener(EVENT_touchend, u, !1),
              e.preventDefault());
          }
        }
        this.$scrollbarV[0].addEventListener(EVENT_touchstart, t, !1);
      }),
      (Bn.prototype.registerScrollbarHMouseListeners = function () {
        var e = this;
        function t(t) {
          var i = t.clientX,
            o = e.scrollX,
            a = e.visibleWidth,
            n = a - 4,
            s = e.minX,
            r = e.maxX - s,
            l = r / n;
          function c(t) {
            var n = t.clientX - i;
            e.scrollTo(
              Math.max(s, Math.min(s + r - a, Math.round(o + l * n))),
              e.scrollY
            ),
              t.preventDefault();
          }
          function d(e) {
            window.removeEventListener("mousemove", c, !1),
              window.removeEventListener("mouseup", d, !1),
              e.preventDefault();
          }
          window.addEventListener("mouseup", d, !1),
            window.addEventListener("mousemove", c, !1),
            t.preventDefault();
        }
        this.$scrollbarH[0].addEventListener("mousedown", t, !1);
      });
    const qn = 1,
      Yn = 1e3,
      Gn = 60 * Yn,
      Xn = 60 * Gn,
      Kn = 24 * Xn,
      Jn = 7 * Kn,
      Zn = 30 * Kn,
      Qn = 365 * Kn,
      es = 40,
      ts = 40,
      is = 44;
    function os(e) {
      var t = this;
      (this.tableView = e),
        (this.visible = !1),
        (this.resize = $.proxy(this.resize, this)),
        (this.el = $('<div class="gantt-container">')),
        (this.$controls = $('<div class="hud-menu-group">')),
        (this.$smallControlsContainer = $('<div class="gantt-controls">')),
        (this.zoom = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: "Zoom",
            required: !0,
            choiceRenderer: "switch",
            values: {
              hours: { id: "hours", caption: locale.hours, order: 1 },
              days: { id: "days", caption: locale.days, order: 2 },
              weeks: { id: "weeks", caption: locale.weeks, order: 3 },
              months: { id: "months", caption: locale.months, order: 4 },
              years: { id: "years", caption: locale.years, order: 5 },
            },
          }),
          "years"
        )),
        this.zoom.on("update", this.zoomUpdated, this),
        (this.zoom.withoutLabel = !0),
        (this.zoomField = new ct.a(this, this.zoom, this.$controls)),
        this.zoomField.el.css("width", ""),
        (this.$pane = $('<div class="gantt-pane">')
          .appendTo(this.el)
          .touch($.proxy(this.clicked, this))),
        (this.cidxMode = "date"),
        (this.cidxStart = -1),
        (this.cidxEnd = -1),
        (this.scale = void 0);
      var i = NinoxDocumentInteraction.getUserDefault("ui.gantt.leftWidth"),
        o = i ? parseInt(i) : 200;
      isNaN(o) && (o = 200),
        (this.scrollPane = new Bn({
          viewPaddingX: 400,
          viewPaddingY: 400,
          modX: 100,
          modY: es,
          $parent: this.$pane,
          render: function (e, i, o, a) {
            return t.renderHTML(e, i, o, a);
          },
          head: {
            height: es,
            render: function (e, i) {
              return t.renderHeadHTML(e, i);
            },
          },
          foot: {
            height: 0,
            render: function () {
              return "";
            },
          },
          left: {
            width: o,
            render: function (e, i) {
              return t.renderLeftHTML(e, i);
            },
            renderHead: function () {
              return t.renderLeftHeadHTML();
            },
          },
          right: {
            width: 0,
            render: function (e, t) {
              return "";
            },
          },
        })),
        this.scrollPane.$leftHeadView.nxdraggable({
          selector: ".t-head-resizer",
          dragStart: function (e) {
            this.cidx = e.$el.closest(".t-head-cell").attr("data-cidx");
            var i = t.getQuery().cols[this.cidx];
            this.width0 = i.width;
          },
          drag: function (e) {
            (t.getQuery().cols[this.cidx].width = Math.max(
              es,
              this.width0 + (e.x2 - e.x0)
            )),
              t.resizeColumns();
          },
        }),
        this.scrollPane.$leftHeadView.nxdraggable({
          selector: ".t-head-cell",
          dismiss: ".t-head-resizer",
          dragStart: function (e) {
            this.cidx = e.$el.attr("data-cidx");
            t.getQuery().cols[this.cidx];
          },
          drag: function (e) {
            t.getQuery().cols[this.cidx];
          },
          click: function (e) {},
        }),
        this.scrollPane.$leftHeadView.touch(function (e) {
          var i = $(e.target);
          if (!i.is(".t-head-resizer"))
            return i.closest(".t-head-cell").length
              ? (t.tableView.table.touchHead(e), !1)
              : i.is(".i-reload")
              ? (t.getQuery().reload(), !1)
              : void 0;
        }),
        this.scrollPane.$view.nxdraggable({
          selector: TOUCH
            ? ".gantt-row-grab,.gantt-row-bar,.gantt-row-square"
            : void 0,
          dragStart: function (e) {
            this.direction = void 0;
            var i = e.$el.closest(".gantt-row");
            if (
              i.length &&
              ((this.nid = i.attr("data-nid")),
              (this.ridx = parseInt(i.attr("data-ridx"))),
              this.nid)
            ) {
              var o = t.getQuery(),
                a = o.models[this.nid];
              if (a) {
                if (
                  ((this.startEditable = o.isEditable(t.cidxStart, this.ridx)),
                  (this.endEditable = o.isEditable(t.cidxEnd, this.ridx)),
                  null == t.getStartValue(a) && null == t.getEndValue(a))
                ) {
                  if (!this.startEditable || !this.endEditable) return;
                  (this.direction = "create"),
                    $('<div class="gantt-row-bar">')
                      .appendTo(i)
                      .css({
                        left: e.x0 - t.scrollPane.$view.offset().left,
                        width: 0,
                      });
                } else {
                  if (
                    ((this.direction =
                      this.startEditable && e.$el.is(".gantt-row-grab-left")
                        ? "left"
                        : this.endEditable && e.$el.is(".gantt-row-grab-right")
                        ? "right"
                        : ((this.startEditable || this.endEditable) &&
                            e.$el.is(
                              ".gantt-row-bar,.gantt-row-arrow-right,.gantt-row-arrow-left"
                            )) ||
                          ((this.startEditable || this.endEditable) &&
                            e.$el.closest(".gantt-row-square").length)
                        ? "drag"
                        : void 0),
                    !this.direction)
                  )
                    return;
                  i.find(".gantt-row-bar-label").css("display", "none");
                }
                var n = i.find(
                  ".gantt-row-bar,.gantt-row-square,.gantt-row-arrow-right,.gantt-row-arrow-left"
                );
                (this.$bar = n),
                  (this.left0 = parseInt(n.css("left"))),
                  (this.width0 = parseInt(n.css("width")));
              }
            }
          },
          drag: function (e) {
            this.direction &&
              ("left" === this.direction
                ? this.$bar.css({
                    left: this.left0 + e.x2 - e.x0,
                    width: this.width0 + e.x0 - e.x2,
                  })
                : "right" === this.direction
                ? this.$bar.css({ width: this.width0 + e.x2 - e.x0 })
                : "drag" === this.direction
                ? this.$bar.css({ left: this.left0 + e.x2 - e.x0 })
                : "create" === this.direction &&
                  this.$bar.css({ width: this.width0 + e.x2 - e.x0 }));
          },
          dragEnd: function (e) {
            if (this.direction) {
              e.$el
                .closest(".gantt-row")
                .find(".gantt-row-bar-label")
                .css("display", "");
              var i = t.getQuery();
              if ("drag" === this.direction) {
                var o = (e.x2 - e.x0) / t.scale.timeZoom;
                if (!(d = i.cols[t.cidxStart]) || !d.directFid) return;
                if (!(u = i.cols[t.cidxEnd]) || !u.directFid) return;
                if (!(p = i.models[this.nid])) return;
                var a = t.getStartValue(p),
                  n = t.getEndValue(p),
                  s = null != a ? a + o : void 0,
                  r = null != n ? n + o : void 0,
                  l = d.expression.returnType.base,
                  c = d.expression.returnType.base;
                "date" === l && (s = ss(s).getTime()),
                  "date" === c && (r = ss(r).getTime()),
                  "appointment" === t.cidxMode
                    ? database.update(this.nid, d.directFid, s + "/" + (r - s))
                    : (null == s ||
                        isNaN(s) ||
                        database.update(this.nid, d.directFid, s),
                      null == r ||
                        isNaN(r) ||
                        database.update(this.nid, u.directFid, r));
              } else if ("create" === this.direction) {
                var d, u;
                if (!(d = i.cols[t.cidxStart]) || !d.directFid) return;
                if (!(u = i.cols[t.cidxEnd]) || !u.directFid) return;
                if (!(p = i.models[this.nid])) return;
                (s = t.pixelToTime(e.x0)),
                  (r = t.pixelToTime(e.x2)),
                  (l = d.expression.returnType.base),
                  (c = d.expression.returnType.base);
                "date" === l && (s = ss(s).getTime()),
                  "date" === c && (r = ss(r).getTime()),
                  "appointment" === t.cidxMode
                    ? database.update(this.nid, d.directFid, s + "/" + (r - s))
                    : (null == s ||
                        isNaN(s) ||
                        database.update(this.nid, d.directFid, s),
                      null == r ||
                        isNaN(r) ||
                        database.update(this.nid, u.directFid, r));
              } else if ("appointment" === t.cidxMode) {
                var p,
                  h = t.cidxStart;
                if (!(y = i.cols[h]) || !y.directFid) return;
                if (!(p = i.models[this.nid])) return;
                var m = p.values[h];
                if (!m) return;
                var f = m.split("/"),
                  g = parseInt(f[0]),
                  v = g + parseInt(f[1]),
                  b = t.pixelToTime(e.x2);
                "left" === this.direction
                  ? b <= v
                    ? database.update(this.nid, y.directFid, b + "/" + (v - b))
                    : database.update(this.nid, y.directFid, v + "/" + (b - v))
                  : "right" === this.direction &&
                    (b >= g
                      ? database.update(
                          this.nid,
                          y.directFid,
                          g + "/" + (b - g)
                        )
                      : database.update(
                          this.nid,
                          y.directFid,
                          b + "/" + (g - b)
                        ));
              } else {
                var y;
                h = "left" === this.direction ? t.cidxStart : t.cidxEnd;
                if (!(y = i.cols[h]) || !y.directFid) return;
                var w = y.expression.returnType.base;
                "date" === w
                  ? (b = t.pixelToDate(e.x2).getTime())
                  : "appointment" === w || (b = t.pixelToTime(e.x2)),
                  null == b ||
                    isNaN(b) ||
                    database.update(this.nid, y.directFid, b);
              }
            }
          },
        }),
        TOUCH ||
          (this.scrollPane.$body[0].addEventListener("mouseover", function (e) {
            var i = t.scrollPane.$view[0].childNodes,
              o = i[i.length - 2];
            o && (o.style.display = "");
          }),
          this.scrollPane.$body[0].addEventListener("mouseleave", function (e) {
            var i = t.scrollPane.$view[0].childNodes,
              o = i[i.length - 2];
            o && (o.style.display = "none");
          }),
          this.scrollPane.$body[0].addEventListener("mousemove", function (e) {
            var i = t.scrollPane.$view[0].childNodes,
              o = i[i.length - 2];
            o &&
              (o.style.left =
                e.clientX - t.scrollPane.$view.offset().left + "px");
          })),
        this.scrollPane.$body[0].addEventListener(
          "contextmenu",
          $.proxy(this.openContextMenu, this),
          !1
        ),
        this.scrollPane.$head[0].addEventListener(
          "contextmenu",
          function (e) {
            e.preventDefault();
          },
          !1
        ),
        this.scrollPane.$foot[0].addEventListener(
          "contextmenu",
          function (e) {
            e.preventDefault();
          },
          !1
        ),
        this.scrollPane.on("leftWidthChanged", function () {
          NinoxDocumentInteraction.setUserDefault(
            "ui.gantt.leftWidth",
            String(t.scrollPane.leftWidth)
          );
        }),
        this.registerMouseListeners();
    }
    function as(e, t) {
      var i = ns(new Date(e), t),
        o = rs(i, t),
        a = i.getTime();
      return a / t + (e - a) / (o.getTime() - a);
    }
    function ns(e, t) {
      switch (t) {
        case qn:
          return new Date(e.getTime());
        case Yn:
          return new Date(Math.floor(e.getTime() / Yn) * Yn);
        case Gn:
          return new Date(Math.floor(e.getTime() / Gn) * Gn);
        case Xn:
          return new Date(Math.floor(e.getTime() / Xn) * Xn);
        case Kn:
          return new Date(e.getFullYear(), e.getMonth(), e.getDate());
        case Jn:
          return new Date(
            e.getFullYear(),
            e.getMonth(),
            e.getDate() - e.getDay() + locale.firstDayOfWeek
          );
        case Zn:
          return new Date(e.getFullYear(), e.getMonth(), 1);
        case Qn:
          return new Date(e.getFullYear(), 0, 1);
        default:
          throw new Error("Illegal scale configuration.");
      }
    }
    function ss(e, t) {
      var i = new Date(e);
      return new Date(i.getFullYear(), i.getMonth(), i.getDate() + (t || 0));
    }
    function rs(e, t) {
      switch (t) {
        case qn:
          return new Date(e.getTime() + 1);
        case Yn:
          return new Date(e.getTime() + Yn);
        case Gn:
          return new Date(e.getTime() + Gn);
        case Xn:
          return new Date(e.getTime() + Xn);
        case Kn:
          return new Date(e.getFullYear(), e.getMonth(), e.getDate() + 1);
        case Jn:
          return new Date(e.getFullYear(), e.getMonth(), e.getDate() + 7);
        case Zn:
          return new Date(e.getFullYear(), e.getMonth() + 1, 1);
        case Qn:
          return new Date(e.getFullYear() + 1, 0, 1);
        default:
          throw new Error("Invalid state");
      }
    }
    function ls(e) {
      switch (this.scale) {
        case qn:
        case Yn:
          return util.formatDate(e, "hh:mm:ss");
        case Gn:
        case Xn:
          return util.formatDate(e, "hh:mm");
        case Kn:
        case Jn:
          return util.formatDate(e, "ddd, DD.MM.YY");
        case Zn:
          return util.formatDate(e, "MM / YYYY");
        case Qn:
          return util.formatDate(e, "YYYY");
        default:
          throw new Error("Invalid state");
      }
    }
    function cs(e, t, i, o) {
      for (
        var a = 1 / 0, n = -1 / 0, s = !1, r = !1, l = 0;
        l < t.length;
        l++
      ) {
        var c = e[t[l]];
        if (c) {
          var d = c.values[i],
            u = c.values[o];
          null == d ? (s = !0) : (d < a && (a = d), d > n && (n = d)),
            null == u ? (r = !0) : (u < a && (a = u), u > n && (n = u));
        }
      }
      return {
        min: a === 1 / 0 ? null : a,
        max: n === -1 / 0 ? null : n,
        hasStartNull: s,
        hasEndNull: r,
      };
    }
    Object.assign(os.prototype, zn.prototype),
      (os.prototype.isGantt = !0),
      (os.prototype.mode = "gantt"),
      (os.prototype.destroy = function () {
        this.$controls.remove(), zn.prototype.destroy.call(this);
      }),
      (os.prototype.pixelToTime = function (e) {
        var t = this.scale,
          i = as(this.scrollPane.viewX0 / t.timeZoom, t.scale) * t.scale,
          o =
            e -
            this.scrollPane.$body.offset().left -
            this.scrollPane.translateX;
        return Math.round(i + o / t.timeZoom);
      }),
      (os.prototype.pixelToDate = function (e) {
        return ss(this.pixelToTime(e));
      }),
      (os.prototype.resizeColumns = function () {
        for (
          var e = this.getQuery().cols,
            t = is,
            i = this.scrollPane.$leftHeadView[0].childNodes,
            o = this.scrollPane.$leftView[0].childNodes,
            a = 0;
          a < e.length;
          a++
        ) {
          var n = e[a],
            s = i[a + 1];
          s && ((s.style.left = t + "px"), (s.style.width = n.width + "px"));
          for (var r = 0; r < o.length; r++) {
            var l = o[r].childNodes[a + 1];
            l && ((l.style.left = t + "px"), (l.style.width = n.width + "px"));
          }
          t += n.width;
        }
        $(this.scrollPane.$leftView[0]).find(".t-selection").css("width", t);
      }),
      (os.prototype.didShow = function (e) {
        this.$controls.appendTo(ui.$menuCenter),
          this.updateMetrics(),
          this.scrollPane.show(e),
          this.bodyResized();
      }),
      (os.prototype.didHide = function (e) {
        this.$controls.detach(), this.scrollPane.hide();
      }),
      (os.prototype.zoomUpdated = function () {
        var e = {
          hours: [Xn, 60],
          days: [Kn, 192],
          weeks: [Jn, 112],
          months: [Zn, 200],
          years: [Qn, 288],
        }[this.zoom.value];
        e &&
          ((this.scale = this.getScaleConfiguration(
            this.scale.date0,
            e[0],
            e[1]
          )),
          this.updateMetrics());
      }),
      (os.prototype.updateUI = function () {
        this.visible && this.scrollPane.updateView(!0);
      }),
      (os.prototype.renderLeftHeadHTML = function () {
        if (!this.tableView.table.ready) return "";
        for (
          var e = this.tableView.table,
            t = e.cols,
            i = e.sortDescending,
            o = e.cidxGroup,
            a = e.cidxSort,
            n = '<div class="t-head-ruler i-16 i-light-grey i-reload"></div>',
            s = is,
            r = 0;
          r < t.length;
          r++
        ) {
          var l = t[r],
            c = r === o,
            d = r === a,
            u = !!l.filter;
          (n +=
            '<div class="t-head-cell" data-cidx="' +
            r +
            '" style="left:' +
            s +
            "px;width:" +
            l.width +
            'px"><div class="t-head-resizer"></div><span>' +
            htmlEscape(l.caption || l.expression.caption) +
            "</span>" +
            (u
              ? '<div class="i-40-16 i-light-grey i-setting-filter" style="width: 12px;"></div>'
              : "") +
            (c
              ? '<div class="i-40-18 i-light-grey i-table-group" style="width: 24px"></div>'
              : d
              ? i
                ? '<div class="i-40-12 i-light-grey i-line-down-thick"></div>'
                : '<div class="i-40-12 i-light-grey i-line-up-thick"></div>'
              : "") +
            "</div>"),
            (s += l.width);
        }
        return n;
      }),
      (os.prototype.renderLeftHTML = async function (e, t) {
        if (!this.tableView.table.ready) return "";
        for (
          var i = this.tableView.table,
            o = i.rows,
            a = i.cols,
            n = i.models,
            s = i.groups || {},
            r = i.expanded || {},
            l = (this.rowHeight, i.cidxGroup),
            c = (this.cidxStart, this.cidxEnd, ""),
            d = 0;
          ;
          d++
        ) {
          var u = e + d * es;
          if (u > t) break;
          if (!((I = Math.floor(u / es)) < 0) && !(I >= o.length)) {
            var p = o[I],
              h = n[p],
              m = h ? void 0 : s[p],
              f = h ? h.values : m.values,
              g = !h,
              v = !1,
              b = g && r[p];
            (c +=
              '<div class="t-row' +
              (g ? " group" : "") +
              (null == l && I % 2 == 0 ? " t-row-2nd" : " t-row-1st") +
              '" style="top:' +
              (u - e) +
              'px"' +
              (g
                ? ' data-gid="' + encodeURIComponent(m.id)
                : ' data-nid="' + p) +
              '">'),
              (c +=
                '<div class="' +
                ("t-rowhead" +
                  (I === o.length
                    ? " icon-big-black icon-big-add-light"
                    : I < 0 || I > o.length
                    ? "empty"
                    : v
                    ? " choosen icon-big-grey icon-big-okay"
                    : g
                    ? b
                      ? " group i-40-24 i-light-grey i-line-down"
                      : " group i-40-24 i-light-grey i-line-right"
                    : "")) +
                '"><div class="t-rowhead-content">' +
                (g ? "" : I + 1) +
                "</div></div>");
            for (var y = is, w = 0; w < a.length; w++) {
              var x = "",
                T = "";
              if ((M = a[w]).isReadable) {
                var C = f[w];
                if (g && M.agg && w !== l) {
                  null != (N = M.aggType.format(C)) &&
                    (x = tables.aggTypeToSymbol(M.agg, N));
                } else {
                  var k = M.field,
                    S = k.base;
                  if ("choice" === S || "dchoice" === S) {
                    const e = await new Promise((e) => k.loadValue(p, C, e));
                    e &&
                      (x +=
                        '<div class="multicombo-item" style="' +
                        (e.color
                          ? "background-color:" +
                            e.color +
                            ";color:" +
                            e.textColor
                          : "") +
                        '">' +
                        (e.icon
                          ? '<div class="choice-symbol ic ic-' +
                            e.icon +
                            '"></div>'
                          : "") +
                        "<span>" +
                        htmlEscape(e.caption || "") +
                        "</span></div>");
                  } else if ("multi" === S || "dmulti" === S) {
                    var $ = util.multiDecode(C);
                    if ($) {
                      const e = await new Promise((e) =>
                        k.loadValues(p, (t, i) => e(i || {}))
                      );
                      $.sort(function (t, i) {
                        var o = e[t],
                          a = e[i];
                        return o ? (a ? o.order - a.order : -1) : 0;
                      });
                      for (var _ = 0; _ < $.length; _++) {
                        var E = e[$[_]];
                        E &&
                          (x +=
                            '<div class="multicombo-item" style="' +
                            (E.color
                              ? "background-color:" +
                                E.color +
                                ";color:" +
                                E.textColor
                              : "") +
                            '">' +
                            (E.icon
                              ? '<div class="choice-symbol ic ic-' +
                                E.icon +
                                '"></div>'
                              : "") +
                            "<span>" +
                            htmlEscape(E.caption || "") +
                            "</span></div>");
                      }
                    }
                  } else if ("color" === S) C && (T = "background-color:" + C);
                  else if ("icon" === S)
                    C &&
                      (x = '<div class="choice-symbol ic ic-' + C + '"></div>');
                  else if ("styled" === S)
                    C &&
                      ((x =
                        '<div class="choice-symbol' +
                        (C.icon ? " ic ic-" + C.icon : "") +
                        '"></div><span style="color:' +
                        (g ? "" : C.color) +
                        '">' +
                        htmlEscape(C.text) +
                        "</span>"),
                      C.background && (T = "background-color:" + C.background));
                  else if ("file" === k.base) {
                    if (C) {
                      var D = database.thumbURL1(C);
                      D &&
                        (x =
                          '<img style="height:' + ts + 'px" src="' + D + '">');
                    }
                  } else {
                    var N = k.format(C);
                    x = htmlEscape(N);
                  }
                }
                (c +=
                  '<div class="t-cell t-cell-' +
                  M.field.base +
                  '" style="left:' +
                  y +
                  "px;width:" +
                  M.width +
                  "px;" +
                  T +
                  '">' +
                  x +
                  "</div>"),
                  (y += M.width);
              } else T = "backgroundColor:#f7f7f7";
              c += "</dv>";
            }
            c += "</div>";
          }
        }
        for (y = is, w = 0; w < a.length; w++) {
          var M;
          y += (M = a[w]).width;
        }
        var I,
          R = 0,
          F = "none";
        return (
          -1 !==
            (I = this.getSelectedNid()
              ? o.indexOf(this.getSelectedNid())
              : -1) && ((R = (I - e / es) * es), (F = "")),
          (c +=
            '<div class="t-selection t-selection-row" style="display:' +
            F +
            ";top:" +
            R +
            "px;left:0;width:" +
            y +
            "px;height:" +
            ts +
            'px"></div>')
        );
      }),
      (os.prototype.renderHeadHTML = function (e, t) {
        if (!this.tableView.table.ready) return "";
        for (
          var i,
            o = this.getScale(),
            a = as(e / o.timeZoom, o.scale) * o.scale,
            n = ns(new Date(e / o.timeZoom), o.scale),
            s = "",
            r = 0;
          r < 100;

        ) {
          i = rs(n, o.scale);
          var l = (n.getTime() - a) * o.timeZoom,
            c = (i.getTime() - a) * o.timeZoom;
          if (e + l > t) break;
          (s +=
            '<div class="gantt-head-cell" style="left:' +
            l +
            "px;width:" +
            (c - l) +
            'px">' +
            htmlEscape(o.formatScaleDate(n)) +
            "</div>"),
            (n = i),
            r++;
        }
        return s;
      }),
      (os.prototype.renderHTML = function (e, t, i, o) {
        if (!this.tableView.table.ready) return "";
        for (
          var a = this.tableView.table,
            n = a.rows,
            s = a.cols,
            r = a.models,
            l = a.groups || {},
            c = a.cidxGroup,
            d = (this.rowHeight, this.cidxStart),
            u = this.cidxEnd,
            p = s[d],
            h = s[u],
            m = !!p && "date" === p.expression.returnType.base,
            f = !!h && "date" === h.expression.returnType.base,
            g = this.getScale(),
            v = as(e / g.timeZoom, g.scale) * g.scale,
            b = ns(new Date(e / g.timeZoom), g.scale),
            y = g.ticks,
            w = i - e,
            x = o - t,
            T = "",
            C = (this.scrollPane.visibleHeight, b),
            k = 0;
          k < 100;

        ) {
          var S = Math.round((C.getTime() - v) * g.timeZoom),
            $ = rs(C, g.scale);
          if (S > w) break;
          if (
            ((T +=
              '<div class="gantt-grid-line" style="height:' +
              x +
              "px;left:" +
              S +
              'px"></div>'),
            null != y)
          )
            for (
              var _ = (Math.round(($.getTime() - v) * g.timeZoom) - S) / y,
                E = 1;
              E < y;
              E++
            ) {
              T +=
                '<div class="gantt-grid-line2" style="height:' +
                x +
                "px;left:" +
                (S + Math.round(E * _)) +
                'px"></div>';
            }
          (C = $), k++;
        }
        var D = (Date.now() - v) * g.timeZoom;
        for (k = 0; ; k++) {
          var N = t + k * es;
          if (N > o) break;
          if (!((Z = Math.floor(N / es)) < 0) && !(Z >= n.length)) {
            var M = n[Z],
              I = r[M];
            if (I) {
              T +=
                '<div class="gantt-row ' +
                (null == c && Z % 2 == 0 ? "gantt-row-1st" : "gantt-row-2nd") +
                '" style="left:0px;width:' +
                w +
                "px;top:" +
                (N - t) +
                'px" data-ridx="' +
                Z +
                '" data-nid="' +
                M +
                '">';
              var R = !1,
                F = !1;
              if (
                (-1 !== d &&
                  ((W = this.getStartValue(I)), (R = a.isEditable(d, Z))),
                -1 !== u &&
                  ((B = this.getEndValue(I)), (F = a.isEditable(u, Z))),
                W !== B
                  ? (null != W && m && (W = ss(W).getTime()),
                    null != B && f && (B = ss(B, 1).getTime()))
                  : W === B && null != W && m && (B = W = ss(W, 1).getTime()),
                null != W || null != B)
              ) {
                (G = null == W ? null : Math.round((W - v) * g.timeZoom)),
                  (X = null == B ? null : Math.round((B - v) * g.timeZoom));
                if (null != G && null != X && G > X) {
                  var A = X;
                  (X = G), (G = A);
                }
                for (var O = [], z = 0; z < s.length; z++)
                  if (z !== d && z !== u) {
                    var L = s[z],
                      j = I.values[z],
                      P = L.expression.returnType.format(j);
                    P && O.push(P);
                  }
                var H = htmlEscape(O.join(" "));
                if (W === B)
                  T +=
                    '<div class="gantt-row-square" style="left:' +
                    (null == W ? X : G) +
                    'px"><div class="gantt-row-square-square"></div><div class="gantt-row-square-label">' +
                    H +
                    "</div>" +
                    (R
                      ? '<div class="gantt-row-grab gantt-row-grab-left"></div>'
                      : "") +
                    (F
                      ? '<div class="gantt-row-grab gantt-row-grab-right"></div>'
                      : "") +
                    "</div>";
                else
                  T +=
                    '<div class="' +
                    (null == G
                      ? "gantt-row-arrow-right"
                      : null == X
                      ? "gantt-row-arrow-left"
                      : "gantt-row-bar") +
                    '" style="left:' +
                    (K = null == G ? X - 64 : G) +
                    "px;width:" +
                    (J = null == G || null == X ? 64 : X - G + 1) +
                    'px"><div class="gantt-row-bar-label" style="left:' +
                    (J + 4) +
                    'px">' +
                    H +
                    "</div>" +
                    (R
                      ? '<div class="gantt-row-grab gantt-row-grab-left"></div>'
                      : "") +
                    (F
                      ? '<div class="gantt-row-grab gantt-row-grab-right"></div>'
                      : "") +
                    "</div>";
              }
            } else {
              var U = l[M];
              if (U) {
                T +=
                  '<div class="gantt-row gantt-group" style="left:0px;width:' +
                  w +
                  "px;top:" +
                  (N - t) +
                  'px" data-ridx="' +
                  Z +
                  '" data-gid="' +
                  encodeURIComponent(U.id) +
                  '">';
                var V = cs(r, U.children, d, u),
                  W = V.min,
                  B = V.max,
                  q = V.hasStartNull,
                  Y = V.hasEndNull;
                W !== B
                  ? (null != W && m && (W = ss(W).getTime()),
                    null != B && f && (B = ss(B, 1).getTime()))
                  : W === B && null != W && m && (B = W = ss(W, 1).getTime());
                var G,
                  X,
                  K = (G = null == W ? null : Math.round((W - v) * g.timeZoom)),
                  J =
                    (X = null == B ? null : Math.round((B - v) * g.timeZoom)) -
                    G;
                q && ((K -= 64), (J += 64)),
                  Y && (J += 64),
                  null != W &&
                    null != B &&
                    (T +=
                      W !== B || q || Y
                        ? '<div class="gantt-group-bar" style="left:' +
                          K +
                          "px;width:" +
                          J +
                          'px">' +
                          (q
                            ? '<div class="gantt-group-bar-startopen"></div>'
                            : '<div class="gantt-group-bar-start"></div>') +
                          '<div class="gantt-group-bar-range"></div>' +
                          (Y
                            ? '<div class="gantt-group-bar-endopen"></div>'
                            : '<div class="gantt-group-bar-end"></div>') +
                          "</div>"
                        : '<div class="gantt-group-square" style="left:' +
                          K +
                          'px"><div class="gantt-group-square-square"></div></div>'),
                  (T += "</div>");
              }
            }
            T += "</div>";
          }
        }
        (T +=
          '<div class="gantt-grid-now" style="height:' +
          x +
          "px;left:" +
          D +
          'px"></div>'),
          (T +=
            '<div class="gantt-grid-indicator" style="height:' +
            x +
            "px;left:" +
            D +
            'px;display:none"></div>');
        var Z,
          Q = 0,
          ee = "none";
        return (
          -1 !==
            (Z = this.getSelectedNid()
              ? n.indexOf(this.getSelectedNid())
              : -1) && ((Q = (Z - t / es) * es), (ee = "")),
          (T +=
            '<div class="t-selection t-selection-row" style="display:' +
            ee +
            ";top:" +
            Q +
            "px;left:0;width:" +
            w +
            "px;height:" +
            ts +
            'px"></div>')
        );
      }),
      (os.prototype.selectionChanged = function () {
        this.visible &&
          (this.openEditor(this.getSelectedNid()), this.updateMetrics());
      }),
      (os.prototype.udpateSelection = function () {}),
      (os.prototype.queryLoaded = function () {
        this.visible && this.updateMetrics();
      }),
      (os.prototype.dataChanged = function () {
        this.visible && this.updateUI();
      }),
      (os.prototype.rowsChanged = function () {
        this.visible && this.updateMetrics();
      }),
      (os.prototype.updateMetrics = function () {
        if (this.visible) {
          this.scrollPane.totalWidth > 0 &&
            (this.scrollPane.scrollX, this.scrollPane.totalWidth),
            this.scrollPane.totalHeight > 0 &&
              (this.scrollPane.scrollY, this.scrollPane.totalHeight);
          var e = this.getQuery(),
            t = e.rows,
            i = (e.cols, e.models),
            o = (e.groups, es),
            a = this.el[0].clientWidth;
          this.el[0].clientHeight;
          (this.width = a), (this.rowHeight = o), this.setupColumns();
          var n = this.getScale(),
            s = n.date0Normalized.getTime(),
            r = n.getNextDate(n.date0Normalized).getTime();
          for (var l in i)
            if (i.hasOwnProperty(l)) {
              var c = i[l];
              if (c) {
                var d = this.getStartValue(c),
                  u = this.getEndValue(c);
                null != d && (d < s && (s = d), d > r && (r = d)),
                  null != u && (u < s && (s = u), u > r && (r = u));
              }
            }
          var p = 0,
            h = t.length * o,
            m = Math.round(s * n.timeZoom - a / 2) - 1,
            f = Math.round(r * n.timeZoom + a / 2) + 1;
          this.scrollPane.setMetrics(m, p, f, h);
        }
      }),
      (os.prototype.setupColumns = function () {
        var e = this.getQuery().cols,
          t = -1,
          i = -1,
          o = "date";
        e: for (var a = 0; a < e.length; a++) {
          switch (e[a].expression.returnType.base) {
            case "date":
            case "timestamp":
              if (-1 === t) t = a;
              else if (-1 === i) {
                i = a;
                break e;
              }
              break;
            case "appointment":
              (o = "appointment"), (t = a), (i = a);
              break e;
          }
        }
        (this.cidxMode = o), (this.cidxStart = t), (this.cidxEnd = i);
      }),
      (os.prototype.getStartValue = function (e) {
        if (e) {
          var t = e.values[this.cidxStart];
          switch (this.cidxMode) {
            case "appointment":
              var i = util.RE_APPOINTMENT.exec(t);
              return i ? parseInt(i[1]) : void 0;
            default:
              return t;
          }
        }
      }),
      (os.prototype.getEndValue = function (e) {
        if (e) {
          var t = e.values[this.cidxEnd];
          switch (this.cidxMode) {
            case "appointment":
              var i = util.RE_APPOINTMENT.exec(t);
              return i ? parseInt(i[1]) + parseInt(i[2]) : void 0;
            default:
              return t;
          }
        }
      }),
      (os.prototype.bodyResized = function () {
        this.visible &&
          (this.updateMetrics(),
          this.$controls.detach(),
          ui.fullWidth < 1171
            ? (this.$smallControlsContainer.appendTo(this.el),
              this.$controls.appendTo(this.$smallControlsContainer))
            : (this.$smallControlsContainer.detach(),
              this.$controls.appendTo(ui.$menuCenter)));
      }),
      (os.prototype.clicked = function (e) {
        var t = $(e.target).closest(".gantt-row").attr("data-nid"),
          i = $(e.target).closest(".t-row").attr("data-nid"),
          o = t || i;
        if (i) this.select(o);
        else {
          var a = $(e.target).closest(".gantt-row").attr("data-gid"),
            n = $(e.target).closest(".t-row").attr("data-gid"),
            s = a || n;
          s && ((s = decodeURIComponent(s)), this.tableView.table.toggle(s));
        }
      }),
      (os.prototype.registerMouseListeners = function () {
        var e, t;
        function i(i) {
          if (!e) {
            var n = $(i.target);
            (t = n.closest(".gantt-row").attr("data-nid")) &&
              (n.is(".gantt-row-grab-left")
                ? (e = "drag-left")
                : n.is(".gantt-row-grab-left") && (e = "drag-right")),
              e &&
                (i.clientX,
                window.addEventListener("mousemove", o, !1),
                window.addEventListener("mouseup", a, !1),
                i.preventDefault(),
                i.stopPropagation());
          }
        }
        function o(e) {
          e.clientX;
          database.loadNodeSync(t) && (e.preventDefault(), e.stopPropagation());
        }
        function a(e) {
          window.removeEventListener("mousemove", o, !1),
            window.removeEventListener("mouseup", a, !1),
            e.preventDefault(),
            e.stopPropagation();
        }
        this.$pane[0].addEventListener("mousedown", i, !1);
      }),
      (os.prototype.getScale = function () {
        return (
          this.scale ||
            (this.scale = this.getScaleConfiguration(new Date(), Qn, 288)),
          this.scale
        );
      }),
      (os.prototype.getScaleConfiguration = function (e, t, i) {
        var o = i / t;
        return {
          scale: t,
          width: i,
          date0: e,
          date0Normalized: ns(e, t),
          ticks: t === Qn ? 12 : t === Jn ? 7 : t === Kn ? 4 : null,
          timeZoom: o,
          pixelPerScale: o / t,
          getNextDate: function (e) {
            return rs(e, this.scale);
          },
          formatScaleDate: ls,
        };
      });
    var ds = o("./src/js/widgets/editors/IconSelector.js");
    function us(e) {
      (this.dontUpdateUI = !1),
        (this.panes = []),
        (this.tableView = e),
        (this.visible = !1),
        (this.resize = $.proxy(this.resize, this)),
        (this.el = $('<div class="kanban-container">').sortable({
          handle: ".kanban-head",
          cancel: ".not-draggable",
          update: $.proxy(this.userSortedPanes, this),
          zIndex: 999999,
          tolerance: "pointer",
        })),
        (this.mousedown = $.proxy(this.mousedown, this)),
        this.el[0].addEventListener(
          TOUCH ? EVENT_touchstart : "mousedown",
          this.mousedown,
          !1
        ),
        this.el.touch($.proxy(this.clicked, this)),
        (this.updateUI = util.debounceFast(this.updateUI, this));
    }
    Object.assign(us.prototype, zn.prototype),
      (us.prototype.isKanban = !0),
      (us.prototype.mode = "kanban"),
      (us.prototype.didShow = function (e) {}),
      (us.prototype.didHide = function (e) {}),
      (us.prototype.updateUI = async function () {
        if (!this.dontUpdateUI && this.visible) {
          var e = this.getQuery();
          if (e.ready) {
            var t = e.cols,
              i = e.models,
              o = e.groups,
              a = e.groupsSorted,
              n = e.cidxGroup,
              s = this.canCreateRecord(),
              r = this.getSelectedNid(),
              l = (this.panes = this.getPanes(this.panes, t, n, o, a)),
              c = "";
            if (null != n) {
              var d = t[n];
              if (d && !d.isReadable)
                return void this.el.html(
                  '<h1 style="padding:16px;margin:0 auto">' +
                    htmlEscape(locale.errorNotAuthorized) +
                    "</h1>"
                );
              for (var u = 0; u < l.length; u++) {
                if (u > 100) {
                  c +=
                    '<div class="kanban-pane not-draggable"><div class="kanban-head"><div class="kanban-head-label">' +
                    htmlEscape(l.length - 100 + " more ...") +
                    "</div></div></div>";
                  break;
                }
                var p = l[u],
                  h = o[p.gid],
                  m = (h && h.children) || [],
                  f = p.icon;
                (c +=
                  '<div class="kanban-pane' +
                  (null == p.value ? "  not-draggable" : "") +
                  '" style="background-color:' +
                  p.color.light +
                  '" data-pane="' +
                  p.index +
                  '">'),
                  (c +=
                    '<div class="kanban-head" style="background-color:' +
                    p.color.light +
                    '">' +
                    (f
                      ? '<div class="kanban-head-icon ic ic-' + f + '"></div>'
                      : "") +
                    '<div class="kanban-head-label" style="color:' +
                    util.contrastingTextColorTo(p.color.light) +
                    '">' +
                    htmlEscape(p.caption) +
                    "</div></div>"),
                  (c += `<div class="kanban-cards" style="background-color: ${p.color.dark}">`);
                for (var g = 0; g < m.length; g++) {
                  if (g > 1e3) {
                    c +=
                      '<div class="card"><div class="card-padding-top"></div><div style="text-align:center">' +
                      htmlEscape(m.length - 1e3 + " more ...") +
                      '</div><div class="card-padding-bottom"></div></div>';
                    break;
                  }
                  var v = m[g],
                    b = i[v],
                    y = v === r;
                  c += await this.renderCard(
                    b,
                    t,
                    n,
                    y ? " selected" : "",
                    void 0,
                    !0
                  );
                }
                (c += "</div>"),
                  s &&
                    (c += `<div class="kanban-bottom" style="background-color:${
                      p.color.light
                    };padding: 8px 8px 0 8px;">\n                        <div class="nx-button-text grey" style="border: none">\n                            <div class="kanban-bottom-icon i-32-24 i-light-grey i-setting-add" style="margin-top: 1px;"></div>\n                            <span class="kanban-bottom-label">${htmlEscape(
                      locale.createRecord
                    )}</span>\n                        </div>\n                    </div>`),
                  (c += "</div>");
              }
              c +=
                '<div class="kanban-add-pane not-draggable"><div class="kanban-add" data-action="add"><div class="kanban-add-label">+ ' +
                htmlEscape(locale.choiceAddValue) +
                "</div></div></div>";
            } else {
              (c += '<div class="kanban-options">'),
                (c += `<div class="kanban-options-head"><div style="width: 250px;">${htmlEscape(
                  locale.kanbanRecommend
                )}</div></div>`);
              var w = {};
              for (let e = 0; e < t.length; e++) {
                var x = t[e];
                "choice" === x.expression.returnType.base &&
                  ((c +=
                    '<div class="nx-button-text grey kanban-options-col" data-col="' +
                    e +
                    '">' +
                    htmlEscape(x.caption || x.expression.caption) +
                    "</div>"),
                  x.directFid && (w[x.directFid] = !0));
              }
              Q.each(e.type.sorted, function (e) {
                "choice" !== e.base ||
                  w[e.id] ||
                  (c +=
                    '<div class="nx-button-text grey kanban-options-col" data-fid="' +
                    e.id +
                    '">' +
                    htmlEscape(e.caption) +
                    "</div>");
              }),
                database.isAdmin() &&
                  (c +=
                    '<div class="nx-button-text blue kanban-options-col blue" data-action="create-choice">+ ' +
                    htmlEscape(locale.createChoiceField) +
                    "</div>"),
                (c +=
                  '<div class="kanban-options-head">' +
                  htmlEscape(locale.otherOptions + ":") +
                  "</div>");
              for (let e = 0; e < t.length; e++) {
                const i = t[e];
                "choice" !== i.expression.returnType.base &&
                  (c +=
                    '<div class="nx-button-text grey kanban-options-col" data-col="' +
                    e +
                    '">' +
                    htmlEscape(i.caption || i.expression.caption) +
                    "</div>");
              }
              c += "</div>";
            }
            this.el.html(c);
          }
        }
      }),
      (us.prototype.queryLoaded = function () {
        this.visible && (this.getQuery().expandAll(), this.updateUI());
      }),
      (us.prototype.rowsChanged = function () {
        this.visible && this.updateUI();
      }),
      (us.prototype.dataChanged = function () {
        this.visible && (this.getQuery().resort(), this.updateUI());
      }),
      (us.prototype.bodyResized = function () {
        this.visible;
      }),
      (us.prototype.mousedown = function (e) {
        if (!TOUCH || 1 === e.touches.length) {
          var t = e.target,
            i = $(t),
            o = this,
            a = o.getQuery(),
            n = a.cols[a.cidxGroup];
          if (n) {
            var s = i.closest(".card");
            if (s.length) {
              var r = s.attr("data-nid");
              if (r) {
                var l = database.loadNodeSync(r);
                if (l) {
                  var c,
                    d = n.directFid && a.type.fields[n.directFid],
                    u =
                      d &&
                      database.canWrite(d) &&
                      database.canWriteNodeField2(l, d),
                    p = s.offset(),
                    h = s.width(),
                    m = s.height(),
                    f = p.left,
                    g = p.top,
                    v = TOUCH ? e.touches[0].clientX : e.clientX,
                    b = TOUCH ? e.touches[0].clientY : e.clientY,
                    y = s.closest(".kanban-pane")[0],
                    w = !1;
                  o.dontUpdateUI = !0;
                  var x = Date.now(),
                    T = !1,
                    C = window.NINOX_APP_TAB ? t : window;
                  TOUCH
                    ? (C.addEventListener(EVENT_touchmove, k, !1),
                      C.addEventListener(EVENT_touchend, S, !1))
                    : (window.addEventListener("mousemove", k, !1),
                      window.addEventListener("mouseup", S, !1));
                }
              }
            }
          }
        }
        function k(e) {
          if (
            (console.log("mousemove"),
            !((TOUCH && 1 !== e.touches.length) || T))
          ) {
            var t = Date.now(),
              i = (TOUCH ? e.touches[0].clientX : e.clientX) - v,
              a = (TOUCH ? e.touches[0].clientY : e.clientY) - b;
            if (w) {
              s.css({ left: f + i, top: g + a });
              var n = o.findPaneAt(
                  TOUCH ? e.touches[0].clientX : e.clientX,
                  TOUCH ? e.touches[0].clientY : e.clientY
                ),
                r = n && n[0];
              if (r !== y) {
                if (
                  (y && $(y).removeClass("dropping").css("border-color", ""), r)
                ) {
                  const e = o.panes[$(r).attr("data-pane")] || { color: {} };
                  $(r)
                    .addClass("dropping")
                    .css("border-color", e.color.light || "");
                }
                y = r;
              }
            } else if (i * i + a * a > 10) {
              if (TOUCH && t - x < 250)
                return (
                  (T = !0),
                  C.removeEventListener(EVENT_touchmove, k, !1),
                  C.removeEventListener(EVENT_touchend, S, !1),
                  void (o.dontUpdateUI = !1)
                );
              if (u) {
                (w = !0),
                  (c = $('<div class="kanban-cards-placeholder">')
                    .css({ width: h, height: m })
                    .insertBefore(s)),
                  s
                    .detach()
                    .appendTo(document.body)
                    .css({
                      position: "absolute",
                      left: f + i,
                      top: g + a,
                      width: h,
                      height: m,
                      "box-shadow": "0 0 32px rgba(0,0,0,0.5)",
                    });
                var l = o.panes[$(y).attr("data-pane")] || { color: {} };
                $(y)
                  .addClass("dropping")
                  .css("border-color", l.color.light || "");
              }
            }
            e.preventDefault();
          }
        }
        function S(e) {
          if (
            (console.log("mouseup"), !((TOUCH && 0 !== e.touches.length) || T))
          ) {
            if (w) {
              s.css({ "box-shadow": "none" });
              var t = !0;
              if (y) {
                $(y).removeClass("dropping").css("border-color", "");
                var i = $(y).attr("data-pane");
                if (i) {
                  var n = o.panes[i];
                  n &&
                    ((t = !1),
                    s.remove(),
                    c.remove(),
                    $.loading(!0),
                    database.update(r, d.id, n.value, function (e) {
                      $.loading(!1),
                        e && $.alert(e),
                        a.resort(),
                        a.expandAll(),
                        (o.dontUpdateUI = !1),
                        o.updateUI();
                    }));
                }
              }
              t && _();
            } else o.getQuery().expandAll(), o.select(r);
            (o.dontUpdateUI = !1),
              TOUCH
                ? (C.removeEventListener(EVENT_touchmove, k, !1),
                  C.removeEventListener(EVENT_touchend, S, !1))
                : (window.removeEventListener("mousemove", k, !1),
                  window.removeEventListener("mouseup", S, !1)),
              e.preventDefault();
          }
        }
        function _() {
          console.log("revertDrag"),
            s
              .detach()
              .insertBefore(c)
              .css({
                position: "",
                left: "",
                top: "",
                width: "",
                height: "",
                "box-shadow": "",
              }),
            c.remove(),
            (c = void 0);
        }
      }),
      (us.prototype.setup = function (e) {
        var t = this,
          i = $(e.target).closest(".kanban-options-col"),
          o = this.getQuery();
        if ("create-choice" === i.attr("data-action")) {
          var a = o.type.schema.createField(
            o.type,
            o.type.createNewFieldName("choice"),
            "choice"
          );
          const e = o.getConfig();
          e.cols.splice(0, 0, { expression: a.id }),
            (e.group = 0),
            e.sort && e.sort++,
            o.setConfig(e),
            o.load(function () {
              t.updateUI();
            }),
            t.tableView.saveView();
        } else if (i.attr("data-fid")) {
          var n = i.attr("data-fid");
          const e = o.getConfig();
          e.cols.splice(0, 0, { expression: n }),
            (e.group = 0),
            e.sort && e.sort++,
            o.setConfig(e),
            o.load(function () {
              t.updateUI();
            }),
            t.tableView.saveView();
        } else {
          var s = i.attr("data-col");
          s && (o.group(parseInt(s, 10)), this.updateUI()),
            t.tableView.saveView();
        }
      }),
      (us.prototype.clicked = function (e) {
        var t = $(e.target);
        t.closest(".kanban-options-col").length
          ? this.setup(e)
          : t.closest(".kanban-add").length
          ? this.popupCreateChoiceValue(e)
          : t.closest(".kanban-head").length
          ? this.popupChoiceValue(e)
          : t.closest(".kanban-bottom").length && this.createRecord(e);
      }),
      (us.prototype.createRecord = function (e) {
        if (this.canCreateRecord()) {
          var t = this,
            i = $(e.target),
            o = t.getQuery(),
            a = t.getGroupField(),
            n = i.closest(".kanban-pane").attr("data-pane");
          if (n) {
            var s = t.panes[n];
            if (s) {
              $.loading(!0);
              var r = {};
              (r[a.id] = s.value),
                database.create(o.type.id, r, function (e, i) {
                  $.loading(!1),
                    e && $.alert(e),
                    i && (t.getQuery().expandAll(), t.select(i._id));
                });
            }
          }
        }
      }),
      (us.prototype.getPanes = function (e, t, i, o, a) {
        if (null == i) return [];
        var n = [],
          s = t[i].expression.returnType;
        if ("choice" === s.base || "boolean" === s.base) {
          var r = Q.sortBy(s.getValues(), "order");
          s.required || r.unshift({ id: void 0, value: null });
          for (let e = 0; e < r.length; e++) {
            const t = r[e].id;
            n.push({
              caption: null == t ? locale.empty : s.format(t),
              value: t,
              index: e,
              color: this.getGroupColor(s, t),
              icon: this.getGroupIcon(s, t),
              gid: "_group_" + (null == t ? "" : JSON.stringify(t)),
            });
          }
        } else
          for (let e = 0; e < a.length; e++) {
            var l = o[a[e]];
            if (l) {
              var c = l.value;
              n.push({
                caption: null == c ? locale.empty : s.format(c),
                value: c,
                index: e,
                color: this.getGroupColor(s, c),
                icon: this.getGroupIcon(s, c),
                gid: l.id,
              });
            }
          }
        return n;
      }),
      (us.prototype.renderCard = Pn.prototype.renderCard),
      (us.prototype.getGroupColor = Pn.prototype.getGroupColor),
      (us.prototype.getGroupIcon = Pn.prototype.getGroupIcon),
      (us.prototype.findPaneAt = function (e, t) {
        for (var i = this.el.children(), o = 0; o < i.length; o++) {
          var a = $(i[o]),
            n = a.offset(),
            s = a.width(),
            r = a.height();
          if (e >= n.left && e <= n.left + s && t >= n.top && t <= n.top + r)
            return a;
        }
      }),
      (us.prototype.userSortedPanes = function (e, t) {
        if (this.canChangeStructure()) {
          var i = this.getQuery();
          if (i.ready) {
            var o = i.cols[i.cidxGroup];
            if (o) {
              var a = o.expression.returnType;
              if ("choice" === a.base) {
                for (
                  var n = a.values,
                    s = this.panes,
                    r = this.el.children(),
                    l = 1,
                    c = !1,
                    d = 0;
                  d < r.length;
                  d++
                ) {
                  console.log("  pane " + d);
                  var u = $(r[d]),
                    p = s[parseInt(u.attr("data-pane"), 10)];
                  if (p) {
                    var h = n[p.value];
                    console.log(
                      "  pane " + d + " with value " + p.value + "=> " + h
                    ),
                      h &&
                        (h.order != l &&
                          (console.log(
                            "  pane " +
                              d +
                              " with value " +
                              p.value +
                              "=> " +
                              h +
                              " changes order from " +
                              h.order +
                              " to " +
                              l
                          ),
                          (h.order = l),
                          (c = !0)),
                        l++);
                  }
                }
                c && database.schema.trigger("change");
              }
            }
          }
        }
      }),
      (us.prototype.getGroupColumn = function () {
        var e = this.getQuery();
        return e.cols[e.cidxGroup];
      }),
      (us.prototype.getGroupField = function () {
        this.getQuery().cols;
        var e = this.getGroupColumn();
        if (e) return e.expression.returnType;
      }),
      (us.prototype.getPaneInfo = function (e) {
        var t = $(e.target).closest(".kanban-pane");
        if (t.length) {
          var i = parseInt(t.attr("data-pane"), 10),
            o = this.panes[i];
          if (o) {
            var a = this.getGroupField();
            if (a) {
              var n = void 0,
                s = void 0;
              return (
                "choice" === a.base && (s = (n = a.values)[o.value]),
                { pane: o, field: a, fieldValues: n, choice: s }
              );
            }
          }
        }
      }),
      (us.prototype.popupCreateChoiceValue = function (e) {
        if (this.canChangeStructure()) {
          var t = this.getGroupField();
          if (t && "choice" === t.base) {
            var i = { icon: void 0, color: void 0, caption: "" };
            new this.inlineChoiceValueEditor(
              {
                $el: $(e.target).closest(".kanban-add"),
                field: t,
                updateUI: function () {},
                closed: function () {
                  i.caption && t.createValue(i.caption, i.color, i.icon);
                },
              },
              i
            );
          }
        }
      }),
      (us.prototype.popupChoiceValue = function (e) {
        if (this.canChangeStructure()) {
          var t = this.getPaneInfo(e);
          t &&
            t.choice &&
            new this.inlineChoiceValueEditor(
              {
                $el: $(e.target).closest(".kanban-head"),
                field: t.field,
                updateUI: function () {},
              },
              t.choice
            );
        }
      }),
      (us.prototype.inlineChoiceValueEditor = function (e, t) {
        var i = $.backplane({ beforeClose: g }),
          o = e.$el,
          a = o.offset(),
          n = o.width(),
          s = o.height(),
          r = $('<div class="inline-choice-value-editor">')
            .css({ top: a.top, left: a.left, width: n, height: s })
            .appendTo(i),
          l = $('<div class="inline-choice-value-editor-icon">')
            .appendTo(r)
            .touch(h),
          c = $('<input class="inline-choice-value-editor-input" type="text">')
            .val(t.caption)
            .appendTo(r)
            .on("change", m),
          d = $('<div class="inline-choice-value-editor-color">')
            .appendTo(r)
            .touch(p);
        function u() {
          l.attr(
            "class",
            "inline-choice-value-editor-icon" +
              (t.icon ? " ic ic-" + t.icon : "")
          ),
            d.css("background-color", t.color || "#fff");
        }
        function p() {
          new Ei.a({
            $el: d,
            value: t.color,
            update: function (e) {
              (t.color = e), u(), f();
            },
          });
        }
        function h() {
          new ds.a({
            $el: l,
            value: t.icon,
            update: function (e) {
              (t.icon = e), u(), f();
            },
          });
        }
        function m() {
          var e = c.val();
          e !== t.caption && ((t.caption = e), f());
        }
        function f() {
          e.field.trigger("change"),
            e.field.schema.trigger("change"),
            e.updateUI();
        }
        function g() {
          m(), e.closed && e.closed();
        }
        u(), c.focus();
      }),
      (us.prototype.canCreateRecord = function () {
        var e = this.getQuery(),
          t = this.getGroupColumn();
        return (
          null != t &&
          t.directFid &&
          database.canCreate(e.type) &&
          database.canWrite(t.field)
        );
      }),
      (us.prototype.canMoveRecord = function () {
        var e = this.getGroupColumn();
        return null != e && e.directFid && database.canWrite(e.field);
      }),
      (us.prototype.canChangeStructure = function () {
        return database.isAdmin();
      }),
      (us.prototype.updateSelection = function () {
        var e = this.getSelectedNid();
        this.el.find(".card.selected").removeClass("selected"),
          e &&
            b.schemas.RE_NID.test(e) &&
            this.el.find('.card[data-nid="' + e + '"]').addClass("selected");
      });
    const ps = 40,
      hs = 40;
    function ms(e) {
      (this.dontUpdateUI = !1),
        (this.panes = []),
        (this.tableView = e),
        (this.visible = !1),
        (this.resize = $.proxy(this.resize, this)),
        (this.el = $('<div class="pivot-container">')),
        (this.pivotCellCols = []),
        (this.pivotRows = []),
        (this.pivotCols = []),
        (this.pivotCells = {}),
        (this.pivotRowValues = []),
        (this.cellColsWidth = 0),
        (this.mousedown = $.proxy(this.mousedown, this)),
        this.el[0].addEventListener(
          TOUCH ? EVENT_touchstart : "mousedown",
          this.mousedown,
          !1
        );
      var t = this;
      (this.scrollPane = new Bn({
        viewPaddingX: 400,
        viewPaddingY: 400,
        modX: 100,
        modY: ps,
        $parent: this.el,
        leftDivider: !1,
        render: function (e, i, o, a) {
          return t.renderHTML(e, i, o, a);
        },
        head: {
          height: 2 * ps,
          render: function (e, i) {
            return t.renderHeadHTML(e, i);
          },
        },
        foot: {
          height: ps,
          render: function (e, i) {
            return t.renderFootHTML(e, i);
          },
        },
        left: {
          width: hs,
          render: function (e, i) {
            return t.renderLeftHTML(e, i);
          },
          renderHead: function () {
            return t.renderLeftHeadHTML();
          },
          renderFoot: function () {
            return t.renderLeftFootHTML();
          },
        },
        right: {
          width: 0,
          render: function (e, t) {
            return "";
          },
        },
      })),
        this.scrollPane.$headView.nxdraggable({
          selector: ".t-head-resizer",
          dragStart: function (e) {
            if (
              ((this.cidx = e.$el.closest(".t-head-cell").attr("data-cidx")),
              (this.gidx = e.$el.closest(".t-head-cell").attr("data-gidx")),
              this.cidx)
            ) {
              var i = t.getQuery().cols[this.cidx];
              this.width0 = i.width;
            } else if (this.gidx) {
              var o = t.getQuery().cols.slice(2);
              this.colWidth0 = [];
              for (var a = 0; a < o.length; a++) {
                i = o[a];
                this.colWidth0[a] = i.width;
              }
              this.width0 = t.cellColsWidth;
            }
          },
          drag: function (e) {
            if (this.cidx)
              (t.getQuery().cols[this.cidx].width = Math.max(
                hs,
                this.width0 + (e.x2 - e.x0)
              )),
                t.resizeColumns();
            else if (this.gidx) {
              for (
                var i = t.getQuery().cols.slice(2),
                  o = this.width0,
                  a = Math.max(hs * i.length, o + (e.x2 - e.x0)),
                  n = this.colWidth0,
                  s = 0;
                s < i.length;
                s++
              ) {
                i[s].width = Math.round((n[s] * a) / o);
              }
              t.resizeColumns();
            }
          },
        }),
        this.scrollPane.$leftHeadView.nxdraggable({
          selector: ".t-head-resizer",
          dragStart: function (e) {
            console.log("left drag start");
            var i = t.getQuery().cols[0];
            this.width0 = i.width;
          },
          drag: function (e) {
            console.log("left drag", this.width0, e.x2, e.x0),
              (t.getQuery().cols[0].width = Math.max(
                hs,
                this.width0 + (e.x2 - e.x0)
              )),
              t.resizeColumns();
          },
        });
    }
    Object.assign(ms.prototype, zn.prototype),
      (ms.prototype.isPivot = !0),
      (ms.prototype.mode = "pivot"),
      (ms.prototype.didShow = function (e) {
        this.updateStructure(), this.scrollPane.show(e);
      }),
      (ms.prototype.didHide = function (e) {
        this.scrollPane.hide();
      }),
      (ms.prototype.updateUI = function () {
        this.visible && this.updateStructure();
      }),
      (ms.prototype.updateStructure = function () {
        var e = this.getQuery(),
          t = e.rows,
          i = e.cols,
          o = e.models || {},
          a = e.groups || {},
          n = (i[0], i[1]),
          s = i.slice(2),
          r = [],
          l = [],
          c = {},
          d = {},
          u = {};
        if (i.length > 2) {
          if (e.ready) {
            for (var p = 0; p < t.length; p++) {
              var h = t[p],
                m = o[h] || a[h];
              if (m) {
                var f = m.values[0],
                  g = JSON.stringify(f),
                  v = m.values[1],
                  b = JSON.stringify(v),
                  y = g + "#" + b;
                if (
                  (d[g] || ((d[g] = !0), r.push(f)),
                  u[b] || ((u[b] = !0), l.push(v)),
                  !(T = c[y]))
                ) {
                  T = c[y] = { cellCols: [], cellAggs: [] };
                  for (var w = 2; w < i.length; w++) T.cellCols[w - 2] = [];
                }
                for (w = 2; w < i.length; w++) {
                  var x = m.values[w];
                  null != x && T.cellCols[w - 2].push(x);
                }
              }
            }
            for (var y in c)
              if (c.hasOwnProperty(y)) {
                var T = c[y];
                for (w = 2; w < i.length; w++) {
                  var C = i[w],
                    k = T.cellCols[w - 2];
                  C.agg && (T.cellAggs[w - 2] = this.aggregate(C, k));
                }
              }
          }
          l.sort(function (e, t) {
            return n.field.compare(e, t);
          });
        }
        (this.pivotCellCols = s),
          (this.pivotRows = r),
          (this.pivotCols = l),
          (this.pivotCells = c),
          (this.pivotRowValues = d),
          this.updateMetrics();
      }),
      (ms.prototype.aggregate = function (e, t) {
        var o, a;
        switch (e.agg) {
          case "sum":
          case "cnt":
            o = 0;
            break;
          case "avg":
            o = [0, 0];
            break;
          case "min":
            o = 1 / 0;
            break;
          case "max":
            o = -1 / 0;
            break;
          case "first":
          case "last":
            o = null;
            break;
          case "concat":
            o = [];
        }
        for (var n = 0; n < t.length; n++) {
          var s = t[n],
            r = Number(s);
          switch (e.agg) {
            case "sum":
              isNaN(r) || (o += r);
              break;
            case "cnt":
              null != s && !1 !== s && "" !== s && o++;
              break;
            case "avg":
              null == s ||
                "number" != typeof s ||
                isNaN(r) ||
                ((o[0] += r), o[1]++);
              break;
            case "min":
              null !== s && s < o && (o = s);
              break;
            case "max":
              null !== s && s > o && (o = s);
              break;
            case "first":
              0 === i && (o = s);
              break;
            case "last":
              i === t.length - 1 && (o = s);
              break;
            case "concat":
              null != s &&
                (o.length < 20
                  ? o.push(e.field.format(s))
                  : 20 === o.length && o.push("..."));
          }
        }
        switch (e.agg) {
          case "sum":
          case "cnt":
            a = o;
            break;
          case "avg":
            a = o[1] > 0 ? o[0] / o[1] : void 0;
            break;
          case "min":
            a = o === 1 / 0 ? void 0 : o;
            break;
          case "max":
            a = o === -1 / 0 ? void 0 : o;
            break;
          case "first":
          case "last":
            a = o;
            break;
          case "concat":
            a = o.join(", ");
        }
        return a;
      }),
      (ms.prototype.updateMetrics = function () {
        for (
          var e = this.getQuery().cols, t = e[0], i = 0, o = 2;
          o < e.length;
          o++
        ) {
          i += e[o].width;
        }
        this.cellColsWidth = i;
        var a = i * this.pivotCols.length,
          n = this.pivotRows.length * ps;
        this.scrollPane.setLeftWidth((t && t.width) || 0),
          this.scrollPane.setMetrics(0, 0, a, n);
      }),
      (ms.prototype.resizeColumns = function () {
        this.updateMetrics();
      }),
      (ms.prototype.renderLeftHeadHTML = function () {
        var e = this.getQuery().cols,
          t = e[0],
          i = e[1];
        return (
          '<div class="t-row" style="top:0"><div class="t-head-cell" style="left:0;width:' +
          ((t && t.width) || 0) +
          'px"><div class="t-head-resizer"></div><span>' +
          htmlEscape((i && (i.caption || i.expression.caption)) || "") +
          '</span></div><div class="t-row" style="top:' +
          ps +
          'px"><div class="t-head-cell" style="left:0;width:' +
          ((t && t.width) || 0) +
          'px"><div class="t-head-resizer"></div><span>' +
          htmlEscape((t && (t.caption || t.expression.caption)) || "") +
          "</span></div>"
        );
      }),
      (ms.prototype.renderLeftHTML = function (e, t) {
        for (
          var i = this.getQuery().cols[0],
            o = (i && i.width) || 0,
            a = this.pivotRows,
            n = Math.floor(e / ps),
            s = Math.floor(t / ps),
            r = "",
            l = n;
          l <= s;
          l++
        ) {
          var c = l % 2 == 0;
          if (
            ((r +=
              '<div class="' +
              ("t-row" +
                (l >= 0 && l < a.length
                  ? c
                    ? " t-row-2nd"
                    : " t-row-1st"
                  : " t-row-empty")) +
              '" style="top:' +
              (l * ps - e) +
              'px">'),
            l >= 0 && l < a.length)
          ) {
            var d = a[l];
            r +=
              '<div class="t-cell t-cell-emph" style="left:0;width:' +
              o +
              'px">' +
              (i ? htmlEscape(i.field.format(d)) : "") +
              "</div>";
          } else
            r +=
              '<div class="t-cell t-cell-emph" style="left:0;width:' +
              o +
              'px"></div>';
          r += "</div>";
        }
        return r;
      }),
      (ms.prototype.renderHTML = function (e, t, i, o) {
        for (
          var a = this.getQuery(),
            n = this.pivotRows,
            s = this.pivotCols,
            r = this.pivotCells,
            l = a.cols,
            c = Math.floor(t / ps),
            d = Math.floor(o / ps),
            u = "",
            p = c;
          p <= d;
          p++
        ) {
          var h = p % 2 == 0,
            m = 0;
          if (
            ((u +=
              '<div class="' +
              ("t-row" +
                (p >= 0 && p < n.length
                  ? h
                    ? " t-row-2nd"
                    : " t-row-1st"
                  : " t-row-empty")) +
              '" style="top:' +
              (p * ps - t) +
              "px;left:" +
              -e +
              'px">'),
            p >= 0 && p < n.length)
          )
            for (var f = n[p], g = JSON.stringify(f), v = 0; v < s.length; v++)
              for (
                var b = s[v], y = r[g + "#" + JSON.stringify(b)], w = 2;
                w < l.length;
                w++
              ) {
                (u +=
                  '<div class="t-cell t-cell-' +
                  (((x = l[w]).aggType && x.aggType.base) || "number") +
                  '" style="left:' +
                  m +
                  "px;width:" +
                  x.width +
                  'px">'),
                  y &&
                    x.aggType &&
                    (u += htmlEscape(x.aggType.format(y.cellAggs[w - 2]))),
                  (u += "</div>"),
                  (m += x.width);
              }
          else
            for (v = 0; v < s.length; v++)
              for (w = 2; w < l.length; w++) {
                var x;
                (u +=
                  '<div class="t-cell t-cell-empty" style="left:' +
                  m +
                  "px;width:" +
                  (x = l[w]).width +
                  'px"></div>'),
                  (m += x.width);
              }
          u += "</div>";
        }
        return u;
      }),
      (ms.prototype.renderHeadHTML = function (e, t) {
        var i = this.getQuery().cols,
          o = i[1],
          a = this.pivotCols,
          n = this.cellColsWidth,
          s = "";
        s += '<div class="t-row" style="top:0;left:' + -e + 'px">';
        for (var r = 0, l = 0; l < a.length; l++)
          (s +=
            '<div class="t-head-cell" style="left:' +
            r +
            "px;width:" +
            n +
            'px" data-gidx="' +
            l +
            '"><div class="t-head-resizer"></div><span>' +
            (o ? htmlEscape(o.expression.returnType.format(a[l])) : "") +
            "</span></div>"),
            (r += n);
        (s += "</div>"),
          (r = 0),
          (s +=
            '<div class="t-row" style="top:' + ps + "px;left:" + -e + 'px">');
        for (l = 0; l < a.length; l++)
          for (var c = 2; c < i.length; c++) {
            var d = i[c];
            (s +=
              '<div class="t-head-cell" style="left:' +
              r +
              "px;width:" +
              d.width +
              'px" data-cidx="' +
              c +
              '"><div class="t-head-resizer"></div><span>' +
              htmlEscape(d.caption || d.expression.caption || "") +
              "</span></div>"),
              (r += d.width);
          }
        return (s += "</div>");
      }),
      (ms.prototype.renderLeftFootHTML = function () {
        var e = this.getQuery().cols[0];
        return (
          '<div class="t-row"><div class="t-foot-cell" style="width:' +
          ((e && e.width) || 0) +
          'px"></div></div>'
        );
      }),
      (ms.prototype.renderFootHTML = function (e, t) {
        var i = this.getQuery().cols,
          o = this.pivotCols,
          a = "",
          n = 0;
        a += '<div class="t-row" style="left:' + -e + 'px">';
        for (var s = 0; s < o.length; s++)
          for (var r = 2; r < i.length; r++) {
            var l = i[r];
            (a +=
              '<div class="t-foot-cell" style="left:' +
              n +
              "px;width:" +
              l.width +
              'px"></div>'),
              (n += l.width);
          }
        return (a += "</div>");
      }),
      (ms.prototype.queryLoaded = function () {
        this.updateUI();
      }),
      (ms.prototype.dataChanged = function () {
        this.updateUI();
      }),
      (ms.prototype.rowsChanged = function () {
        this.updateUI();
      }),
      (ms.prototype.bodyResized = function () {
        this.visible && this.scrollPane.resize();
      });
    var fs = o("./src/js/admin/ViewEditor.js");
    const gs = { xlsUseFieldFormat: !1 };
    function vs(e) {
      var t = e.$container;
      function i() {
        e.onUpdate && e.onUpdate();
      }
      (this.xlsUseFieldFormat = new util.SimpleModel(
        new schemas.TBoolean(void 0, void 0, {
          caption: "Maintain number and date formats",
          required: !0,
          formWidth: 1,
          booleanRenderer: "check",
        })
      )),
        (this.xlsUseFieldFormat.value = gs.xlsUseFieldFormat),
        this.xlsUseFieldFormat.onUpdate(i),
        (this.xlsUseFieldFormatField = new ct.a(
          void 0,
          this.xlsUseFieldFormat,
          t
        ));
    }
    function bs(e) {
      if (!database.authorizationExport) return $.alert(locale.notAuthorized);
      this.table = e;
      var t = (this.popdown = $.popdown({ close: $.proxy(this.closed, this) }));
      Object(l.f)("TableExportData", "Open"),
        $('<div class="nx-section-head">')
          .text(locale.exportData)
          .appendTo(t.$pane);
      var i = $('<div class="nx-switch-big">').appendTo(t.$pane),
        o = $('<div class="nx-switch-big-item selected">')
          .text(locale.exportCSV)
          .appendTo(i),
        a = $('<div class="nx-section-pane">').appendTo(t.$pane);
      this.exportCSVSettings = new ht({ $container: a });
      var n = $('<div class="nx-button-bar">').appendTo(a);
      $('<div class="nx-button-text grey">')
        .text(locale.cancel)
        .appendTo(n)
        .touch($.proxy(this.destroy, this)),
        $('<div class="nx-hspace-flex">').appendTo(n),
        $('<div class="nx-button-text blue">')
          .text(locale.csvExportOpen)
          .appendTo(n)
          .touch($.proxy(this.csvExportOpen_WEB, this));
      var s = $('<div class="nx-switch-big-item">')
          .text(locale.exportXLS)
          .appendTo(i),
        r = $('<div class="nx-section-pane">').hide().appendTo(t.$pane);
      this.exportXLSSettings = new vs({ $container: r });
      var c = $('<div class="nx-button-bar">').appendTo(r);
      $('<div class="nx-button-text grey">')
        .text(locale.cancel)
        .appendTo(c)
        .touch($.proxy(this.destroy, this)),
        $('<div class="nx-hspace-flex">').appendTo(c),
        $('<div class="nx-button-text blue">')
          .text(locale.xlsExportOpen)
          .appendTo(c)
          .touch($.proxy(this.xlsExportOpen_WEB, this)),
        o.touch(function () {
          o.addClass("selected"), s.removeClass("selected"), a.show(), r.hide();
        }),
        s.touch(function () {
          s.addClass("selected"), o.removeClass("selected"), r.show(), a.hide();
        });
    }
    function ys(e) {
      (e.prototype.cutEnabled = function () {
        return "cell" === this.selectionMode || "block" === this.selectionMode;
      }),
        (e.prototype.cut = function () {
          var e = this.getSelectedText();
          return this.editorDelete(), e;
        }),
        (e.prototype.copyEnabled = function () {
          return !!this.selectionMode;
        }),
        (e.prototype.copy = function () {
          return this.getSelectedText();
        }),
        (e.prototype.pasteEnabled = function () {
          var e = this.getSelectedColumn(),
            t = this.getSelectedRow();
          return null != e && null != t;
        }),
        (e.prototype.paste = function (e) {
          var t = this,
            i = this.getSelectedColumn(),
            o = this.getSelectedRow();
          if (null == i || null == o) return !1;
          for (
            var a = util.parseTABDelimitedTable(e),
              n = this.type,
              s = n.id,
              r = this.rows,
              l = this.cols,
              c = this.models,
              d = (this.groups, null != this.cidxGroup),
              u = database.canCreate(n),
              p = [],
              h = i,
              m = o,
              f = 1,
              g = 0;
            g < a.length;
            g++
          ) {
            var v = o + g,
              b = a[g],
              y = v >= r.length,
              w = y ? void 0 : r[v],
              x = y ? void 0 : c[w];
            if (y || x) {
              var T = {};
              y ? ((T._type = s), (T._clientId = f++)) : (T._id = w);
              for (var C = 0; C < b.length; C++) {
                var k = i + C,
                  S = b[C];
                if (l[k]) {
                  var _ = this.getWritableField(k);
                  if (_) {
                    var E = _.id;
                    if ((y || database.canWriteNodeField(w, E)) && (!y || u)) {
                      var D = y ? void 0 : x.values[E],
                        N = _.parseClipboard(S);
                      _.equals(D, N) || ((T[E] = N), !0);
                    }
                  }
                }
              }
              p.push(T), (h = Math.max(h, i + b.length)), m++;
            }
          }
          function M() {
            d
              ? (t.reload(), $.loading(!1))
              : t.calc(t._reloadId, r, function () {
                  $.loading(!1),
                    t.aggregate(),
                    t.updateRows(),
                    t.updateFoot(),
                    t.selectBlock(o, i, m - 1, h - 1);
                });
          }
          p.length &&
            ($.loading(!0),
            (t.silent = !0),
            database.updateNodes(p, function (e, i) {
              if (((t.silent = !1), e)) return $.loading(!1), void $.alert(e);
              if (f > 1) {
                r = r.slice();
                for (var o = [], a = 1; a <= f; a++) {
                  var n = i[a];
                  n && (r.push(n), o.push(n));
                }
                database.loadNodes2(o, t.getDependencies(), function (e) {
                  M();
                });
              } else M();
            }));
        }),
        (e.prototype.getTextAtCell = function (e, t) {
          var i = this.rows,
            o = this.cols,
            a = this.models,
            n = this.groups,
            s = i[t];
          if (!s) return "";
          var r = a[s],
            l = n[s],
            c = o[e];
          return c
            ? r
              ? c.field.formatClipboard(r.values[e])
              : l
              ? e === this.cidxGroup
                ? c.field.formatClipboard(l.values[e])
                : c.agg
                ? c.aggType.formatClipboard(l.values[e])
                : ""
              : ""
            : "";
        }),
        (e.prototype.getTextAtRange = function (e, t, i, o) {
          if (e > i) {
            var a = i;
            (i = e), (e = a);
          }
          if (t > o) {
            var n = o;
            (o = t), (t = n);
          }
          for (
            var s = this.rows,
              r = this.cols,
              l = this.models,
              c = this.groups,
              d = "",
              u = t;
            u <= o;
            u++
          ) {
            for (var p = e; p <= i; p++) {
              var h = "",
                m = s[u];
              if (m) {
                var f = l[m],
                  g = c[m],
                  v = r[p];
                v &&
                  (f
                    ? (h = v.field.formatClipboard(f.values[p]))
                    : g &&
                      (p === this.cidxGroup
                        ? (h = v.field.formatClipboard(g.values[p]))
                        : v.agg &&
                          (h = v.aggType.formatClipboard(g.values[p]))));
              }
              (d += util.formatTABDelimitedCell(h)), p < i && (d += "\t");
            }
            u < o && (d += "\r\n");
          }
          return d;
        });
    }
    function ws(e) {
      (e.prototype.isEditable = function (e, t) {
        var i = this.cols[e];
        if (!i) return !1;
        if (!i.expression) return !1;
        var o = i.expression.toString(),
          a = this.type.fields[o];
        if (!a) return !1;
        if ("file" === a.base || "html" === a.base) return !1;
        if (!database.canWrite(a)) return !1;
        var n = this.rows[t];
        return !!n && !!this.models[n] && !!database.canWriteNodeField(n, o);
      }),
        (e.prototype.startEdit = function (e, t) {
          if (
            (null == e && (e = this.getSelectedColumn()),
            null == t && (t = this.getSelectedRow()),
            this.editor)
          ) {
            if (this.editor.isCell(e, t)) return void this.editor.startEdit();
            this.editor.destroy(), (this.editor = void 0);
          }
          var i = this.cols[e];
          if (i && i.expression) {
            var o = i.expression.toString(),
              a = this.type.fields[o];
            if (
              a &&
              "file" !== a.base &&
              "html" !== a.base &&
              database.canWrite(a)
            ) {
              var n = this.rows[t];
              n &&
                this.models[n] &&
                ((this.editor = tables.createCellEditor(this, o, n, e, t)),
                this.editor.startEdit());
            }
          }
        }),
        (e.prototype.stopEdit = function (e) {
          this.editor &&
            (this.editor.stopEdit(e),
            this.editor.destroy(),
            (this.editor = void 0));
        }),
        (e.prototype.updateEditor = function () {
          this.editor && this.editor.update();
        }),
        (e.prototype.editorInsert = function (e) {
          var t = this,
            i = !!this.editor;
          t.stopEdit(!0);
          var o = this.type;
          if (database.canCreate(o)) {
            var a = this.getSelectedColumn(),
              n = this.getSelectedRow(),
              s =
                "start" === e
                  ? 0
                  : "end" === e
                  ? t.rows.length
                  : "up" === e
                  ? null != n
                    ? n
                    : 0
                  : "down" === e && null != n
                  ? n + 1
                  : t.rows.length;
            (t.silent = !0),
              $.loading(!0),
              database.create(this.type.id, {}, function (e, o) {
                if (((t.silent = !1), $.loading(!1), e)) return $.alert(e);
                if (o) {
                  var n = o._id;
                  (t.models[n] = { id: n, values: [] }),
                    t.rows.splice(s, 0, n),
                    t.recalc(n, function () {
                      t.aggregate(),
                        t.updateRows(),
                        t.updateFoot(),
                        t.selectCell(s, a),
                        i && t.startEdit(a, s);
                    });
                }
              });
          }
        }),
        (e.prototype.editorPageUp = function () {
          this.rows;
          var e = this.selectionR0 || 0,
            t = Math.max(0, e - this.rowsPerPage() + 1);
          this.selectCell(t, this.selectionC0);
        }),
        (e.prototype.editorPageDown = function () {
          var e = this.rows.length - 1,
            t = this.rowsPerPage(),
            i = this.selectionR0 || 0,
            o = Math.min(e, i + t),
            a = Math.min(e, o + t - 1);
          this.scrollToCell(void 0, a), this.selectCell(o, this.selectionC0);
        }),
        (e.prototype.editorNextGroup = function () {
          if (null != this.cidxGroup)
            for (
              var e = this.rows,
                t = this.groups,
                i = (null == this.selectionR0 ? -1 : this.selectionR0) + 1;
              i < e.length;
              i++
            )
              if (t[e[i]]) return void this.selectCell(i, void 0);
        }),
        (e.prototype.editorPrevGroup = function () {
          if (null != this.cidxGroup)
            for (
              var e = this.rows,
                t = this.groups,
                i = (this.selectionR0 || e.length) - 1;
              i >= 0;
              i--
            )
              if (t[e[i]]) return void this.selectCell(i, void 0);
        }),
        (e.prototype.editorUp = function (e) {
          var t = this.cols,
            i = this.rows,
            o = !!this.editor;
          if ((this.stopEdit(!0), t.length && i.length))
            if (
              !e ||
              ("cell" !== this.selectionMode && "block" !== this.selectionMode)
            ) {
              var a = void 0,
                n = 0;
              this.selectionMode
                ? ((a = this.getSelectedColumn()), (n = this.selectionR0 - 1))
                : (n = i.length - 1),
                n < 0 && (n = i.length - 1),
                this.selectCell(n, a),
                o && this.startEdit(a, n);
            } else
              this.selectionR0 === this.selectionR1 &&
                (this.extendSelectionUp = !0),
                this.extendSelectionUp
                  ? this.selectBlock(
                      this.selectionR1,
                      this.selectionC0,
                      Math.max(0, this.selectionR0 - 1),
                      this.selectionC1
                    )
                  : this.selectBlock(
                      this.selectionR0,
                      this.selectionC0,
                      Math.max(0, this.selectionR1 - 1),
                      this.selectionC1
                    ),
                this.scrollToCell(void 0, this.selectionR1);
        }),
        (e.prototype.editorDown = function (e) {
          var t = this.cols,
            i = this.rows,
            o = !!this.editor;
          if ((this.stopEdit(!0), t.length && i.length))
            if (
              !e ||
              ("cell" !== this.selectionMode && "block" !== this.selectionMode)
            ) {
              var a = void 0,
                n = 0;
              this.selectionMode &&
                ((a = this.getSelectedColumn()), (n = this.selectionR0 + 1)),
                n >= i.length && (n = 0),
                this.selectCell(n, a),
                o && this.startEdit(a, n);
            } else
              this.selectionR0 === this.selectionR1 &&
                (this.extendSelectionUp = !1),
                this.extendSelectionUp
                  ? this.selectBlock(
                      this.selectionR1,
                      this.selectionC0,
                      Math.min(i.length - 1, this.selectionR0 + 1),
                      this.selectionC1
                    )
                  : this.selectBlock(
                      this.selectionR0,
                      this.selectionC0,
                      Math.min(i.length - 1, this.selectionR1 + 1),
                      this.selectionC1
                    ),
                this.scrollToCell(void 0, this.selectionR1);
        }),
        (e.prototype.editorPrev = function (e) {
          if ("cell" === this.selectionMode || "block" === this.selectionMode) {
            var t = !!this.editor;
            this.stopEdit(!0);
            var i = this.cols,
              o = this.rows;
            if (i.length && o.length)
              if (
                !e ||
                ("cell" !== this.selectionMode &&
                  "block" !== this.selectionMode)
              ) {
                var a = this.selectionC0 - 1,
                  n = this.selectionR0;
                a < 0 && ((a = i.length - 1), n--),
                  n < 0 && (n = o.length - 1),
                  this.selectCell(n, a),
                  t && this.startEdit(a, n);
              } else
                this.selectionC0 === this.selectionC1 &&
                  (this.extendSelectionLeft = !0),
                  this.extendSelectionLeft
                    ? (this.selectBlock(
                        this.selectionR0,
                        this.selectionC1,
                        this.selectionR1,
                        Math.max(0, this.selectionC0 - 1)
                      ),
                      this.scrollToCell(this.selectionC0, void 0))
                    : (this.selectBlock(
                        this.selectionR0,
                        this.selectionC0,
                        this.selectionR1,
                        Math.max(0, this.selectionC1 - 1)
                      ),
                      this.scrollToCell(this.selectionC1, void 0));
          }
        }),
        (e.prototype.editorNext = function (e) {
          if ("cell" === this.selectionMode || "block" === this.selectionMode) {
            var t = !!this.editor;
            this.stopEdit(!0);
            var i = this.cols,
              o = this.rows;
            if (i.length && o.length)
              if (
                !e ||
                ("cell" !== this.selectionMode &&
                  "block" !== this.selectionMode)
              ) {
                var a = this.selectionC0 + 1,
                  n = this.selectionR0;
                a >= i.length && ((a = 0), n++),
                  n >= o.length && (n = 0),
                  this.selectCell(n, a),
                  t && this.startEdit(a, n);
              } else
                this.selectionC0 === this.selectionC1 &&
                  (this.extendSelectionLeft = !1),
                  this.extendSelectionLeft
                    ? (this.selectBlock(
                        this.selectionR0,
                        this.selectionC1,
                        this.selectionR1,
                        Math.min(this.selectionC0 + 1, i.length - 1)
                      ),
                      this.scrollToCell(this.selectionC0, void 0))
                    : (this.selectBlock(
                        this.selectionR0,
                        this.selectionC0,
                        this.selectionR1,
                        Math.min(this.selectionC1 + 1, i.length - 1)
                      ),
                      this.scrollToCell(this.selectionC1, void 0));
          }
        }),
        (e.prototype.editorFirst = function (e) {
          var t = !!this.editor;
          if (
            (this.stopEdit(!0),
            !e ||
              ("cell" !== this.selectionMode && "block" !== this.selectionMode))
          ) {
            var i = this.getSelectedColumn();
            this.rows.length > 0 &&
              (this.selectCell(0, i), t && this.startEdit(i, 0));
          } else
            this.selectBlock(
              0,
              this.selectionC0,
              this.selectionR1,
              this.selectionC1
            );
        }),
        (e.prototype.editorLast = function (e) {
          var t = !!this.editor;
          if (
            (this.stopEdit(!0),
            !e ||
              ("cell" !== this.selectionMode && "block" !== this.selectionMode))
          ) {
            var i = this.getSelectedColumn(),
              o = this.rows.length - 1;
            o >= 0 && (this.selectCell(o, i), t && this.startEdit(i, o));
          } else
            this.selectBlock(
              this.selectionR0,
              this.selectionC0,
              this.rows.length - 1,
              this.selectionC1
            );
        }),
        (e.prototype.editorDelete = function () {
          var e = this.type,
            t = this.rows,
            i = this.cols,
            o = this.models,
            a = this.selectionR0,
            n = this.selectionR1,
            s = this.selectionC0,
            r = this.selectionC1,
            l = this.selectionMode;
          if ("block" === l) {
            for (var c = [], d = a; d <= n; d++) {
              if (o[(f = t[d])]) {
                for (var u = 0, p = { _id: f }, h = s; h <= r; h++) {
                  var m = i[h].expression.toString();
                  (g = e.fields[m]) &&
                    database.canWrite(g) &&
                    ((p[m] = null), u++);
                }
                u > 0 && c.push(p);
              }
            }
            c.length &&
              ($.loading(!0),
              database.updateNodes(c, function (e) {
                $.loading(!1), e && $.alert(e);
              }));
          } else if ("cell" === l) {
            var f;
            if (o[(f = t[a])]) {
              var g;
              m = i[s].expression.toString();
              (g = e.fields[m]) &&
                database.canWrite(g) &&
                database.update(f, m, null);
            }
          }
        }),
        (e.prototype.isEditing = function () {
          return !!this.editor;
        });
    }
    function xs(e) {
      (e.prototype.menuNextRecordEnabled = function () {
        return this.rows.length > 0;
      }),
        (e.prototype.menuNextRecord = function () {
          this.editorDown();
        }),
        (e.prototype.menuPrevRecordEnabled = function () {
          return this.rows.length > 0;
        }),
        (e.prototype.menuPrevRecord = function () {
          this.editorUp();
        }),
        (e.prototype.menuFirstRecordEnabled = function () {
          return this.rows.length > 0;
        }),
        (e.prototype.menuFirstRecord = function () {
          this.editorFirst();
        }),
        (e.prototype.menuLastRecordEnabled = function () {
          return this.rows.length > 0;
        }),
        (e.prototype.menuLastRecord = function () {
          this.editorLast();
        }),
        (e.prototype.menuCreateRecordEnabled = function () {
          return !(!this.type || !database.canCreate(this.type));
        }),
        (e.prototype.menuCreateRecord = function () {
          this.create();
        }),
        (e.prototype.menuDuplicateRecordEnabled = function () {
          return !!(
            this.getSelectedNid() &&
            this.type &&
            database.canCreate(this.type)
          );
        }),
        (e.prototype.menuDuplicateRecord = function () {
          this.duplicate();
        }),
        (e.prototype.menuDeleteRecordEnabled = function () {
          return !!(
            this.getSelectedNid() &&
            this.type &&
            database.canDelete(this.type)
          );
        }),
        (e.prototype.menuDeleteRecord = function () {
          this.remove();
        }),
        (e.prototype.menuPrintRecordEnabled = function () {
          return (
            null != this.getSelectedNid() && !1 !== database.authorizationPrint
          );
        }),
        (e.prototype.menuPrintRecord = function () {
          this.print();
        }),
        (e.prototype.menuCloseRecordEnabled = function () {
          return null != this.getSelectedNid();
        }),
        (e.prototype.menuCloseRecord = function () {
          this.unselect();
        }),
        (e.prototype.menuNewViewEnabled = function () {
          return database.isAdmin();
        }),
        (e.prototype.menuNewView = function () {
          database.isAdmin() && this.container.createView();
        }),
        (e.prototype.menuRenameViewEnabled = function () {
          return database.isAdmin();
        }),
        (e.prototype.menuRenameView = function () {
          database.isAdmin() && this.container.renameView();
        }),
        (e.prototype.menuDeleteViewEnabled = function () {
          return database.isAdmin();
        }),
        (e.prototype.menuDeleteView = function () {
          database.isAdmin() && this.container.removeView();
        }),
        (e.prototype.menuEditColumnsEnabled = function () {
          return database.isAdmin();
        }),
        (e.prototype.menuEditColumns = function () {
          database.isAdmin() && this.container.popupColumnMenu();
        }),
        (e.prototype.menuShowViewAsFormEnabled = function () {
          return database.isAdmin();
        }),
        (e.prototype.menuShowViewAsForm = function () {
          database.isAdmin() && this.container.showForm();
        }),
        (e.prototype.menuShowViewAsTableEnabled = function () {
          return database.isAdmin();
        }),
        (e.prototype.menuShowViewAsTable = function () {
          database.isAdmin() && this.container.showTable();
        }),
        (e.prototype.menuShowViewAsChartEnabled = function () {
          return database.isAdmin();
        }),
        (e.prototype.menuShowViewAsChart = function () {
          database.isAdmin() && this.container.showChart();
        }),
        (e.prototype.menuFindInViewEnabled = function () {
          return !0;
        }),
        (e.prototype.menuFindInView = function () {
          this.openFindMenu();
        }),
        (e.prototype.menuSelectAllRecordsEnabled = function () {
          return !0;
        }),
        (e.prototype.menuSelectAllRecords = function () {
          this.chooseAll();
        }),
        (e.prototype.menuClearSelectionEnabled = function () {
          return !Q.isEmpty(this.midChoosen);
        }),
        (e.prototype.menuClearSelection = function () {
          this.clearChoosen();
        }),
        (e.prototype.menuToggleSelectionEnabled = function () {
          return !Q.isEmpty(this.midChoosen);
        }),
        (e.prototype.menuToggleSelection = function () {
          this.toggleChoosen();
        }),
        (e.prototype.menuShowAllRecordsEnabled = function () {
          return !Q.isEmpty(this.midChoosen);
        }),
        (e.prototype.menuShowAllRecords = function () {
          this.showAll();
        }),
        (e.prototype.menuShowSelectedRecordsEnabled = function () {
          return !Q.isEmpty(this.midChoosen);
        }),
        (e.prototype.menuShowSelectedRecords = function () {
          this.showOnlyChoosen();
        }),
        (e.prototype.menuExpandAllGroupsEnabled = function () {
          return null != this.cidxGroup;
        }),
        (e.prototype.menuExpandAllGroups = function () {
          this.expandAll();
        }),
        (e.prototype.menuCollapseAllGroupsEnabled = function () {
          return null != this.cidxGroup;
        }),
        (e.prototype.menuCollapseAllGroups = function () {
          this.collapseAll();
        }),
        (e.prototype.menuPrintViewEnabled = function () {
          return !!database.authorizationPrint;
        }),
        (e.prototype.menuPrintView = function () {
          database.authorizationPrint && Object(le.a)(this);
        }),
        (e.prototype.menuImportDataEnabled = function () {
          return !!database.authorizationImport;
        }),
        (e.prototype.menuImportData = function () {
          database.authorizationImport && new bt({ tid: this.type.id });
        }),
        (e.prototype.menuExportDataEnabled = function () {
          return !!database.authorizationExport;
        }),
        (e.prototype.menuExportData = function () {
          database.authorizationExport &&
            this.exportData(function (e) {
              e && $.alert(e);
            });
        }),
        (e.prototype.menuMassDataUpdateEnabled = function () {
          return !!database.authorizationMassDataUpdate;
        }),
        (e.prototype.menuMassDataUpdate = function () {
          database.authorizationMassDataUpdate && new An(this);
        }),
        (e.prototype.menuReloadViewEnabled = function () {
          return !0;
        }),
        (e.prototype.menuReloadView = function () {
          this.reload();
        }),
        (e.prototype.menuNewTableEnabled = function () {
          return database.isAdminEnabled();
        }),
        (e.prototype.menuNewTable = function () {
          database.isAdminEnabled() && new ni({});
        }),
        (e.prototype.menuEditTableEnabled = function () {
          return database.isAdminEnabled();
        }),
        (e.prototype.menuEditTable = function () {
          database.isAdminEnabled() && new ni({ type: this.tid });
        }),
        (e.prototype.menuDeleteTableEnabled = function () {
          return database.isAdminEnabled();
        }),
        (e.prototype.menuDeleteTable = function () {
          var e = this;
          $.dialog({
            closable: !0,
            caption: locale.removeTable,
            message: locale.confirmRemoveTable,
            buttons: [
              {
                color: "red",
                caption: locale.removeTable,
                callback: function () {
                  database.schema.removeType(e.type);
                },
              },
            ],
          });
        }),
        (e.prototype.menuPageUpEnabled = function () {
          return this.rows.length > 0;
        }),
        (e.prototype.menuPageUp = function () {
          this.editorPageUp();
        }),
        (e.prototype.menuPageDownEnabled = function () {
          return this.rows.length > 0;
        }),
        (e.prototype.menuPageDown = function () {
          this.editorPageDown();
        }),
        (e.prototype.menuNextGroupEnabled = function () {
          return null != this.cidxGroup;
        }),
        (e.prototype.menuNextGroup = function () {
          this.editorNextGroup();
        }),
        (e.prototype.menuPrevGroupEnabled = function () {
          return null != this.cidxGroup;
        }),
        (e.prototype.menuPrevGroup = function () {
          this.editorPrevGroup();
        }),
        (e.prototype.menuExpandGroupEnabled =
          e.prototype.menuCollapseGroupEnabled =
          e.prototype.menuToggleGroupEnabled =
            function () {
              return !!this.groups[this.rows[this.selectionR0]];
            }),
        (e.prototype.menuExpandGroup = function () {
          this.expand(this.rows[this.selectionR0]);
        }),
        (e.prototype.menuCollapseGroup = function () {
          this.collapse(this.rows[this.selectionR0]);
        }),
        (e.prototype.menuToggleGroup = function () {
          this.toggle(this.rows[this.selectionR0]);
        });
    }
    function Ts(e) {
      const t = 0;
      (e.prototype.registerScrollListeners = function () {
        TOUCH
          ? (this.registerScrollTouchListeners(),
            this.registerScrollbarVTouchListeners())
          : (this.registerScrollMouseListeners(),
            this.registerScrollbarVMouseListeners(),
            this.registerScrollbarHMouseListeners()),
          this.registerRowResizeListeners();
      }),
        (e.prototype.registerRowResizeListeners = function () {
          var e = this;
          function t(t) {
            if (!TOUCH || 1 === t.touches.length) {
              var i = t.target;
              if ($(i).is(".t-rowhead-resizer")) {
                var o = TOUCH ? t.touches[0].clientY : t.clientY,
                  a = e.rowHeight,
                  n = e.scrollTop;
                TOUCH
                  ? (EVENT_target(t).addEventListener(EVENT_touchend, r, !1),
                    EVENT_target(t).addEventListener(EVENT_touchmove, s, !1))
                  : (window.addEventListener("mouseup", r, !1),
                    window.addEventListener("mousemove", s, !1)),
                  t.preventDefault(),
                  t.stopPropagation();
              }
            }
            function s(t) {
              if (!TOUCH || 1 === t.touches.length) {
                var i = (TOUCH ? t.touches[0].clientY : t.clientY) - o;
                a < 40
                  ? a + i > 40 && (i = Math.max(40 - a, i - 24))
                  : a + i < 40 && (i = Math.min(40 - a, i + 24));
                var s = Math.min(120, Math.max(28, Math.round(a + i))),
                  r = s - a;
                (e.rowHeight = s),
                  (e.scrollTop = n + (n / a) * r),
                  e.resizeRows(),
                  e.updateSelection(),
                  e.updateRows(),
                  t.preventDefault();
              }
            }
            function r(t) {
              (TOUCH && 0 !== t.touches.length) ||
                (TOUCH
                  ? (EVENT_target(t).removeEventListener(EVENT_touchend, r, !1),
                    EVENT_target(t).removeEventListener(EVENT_touchmove, s, !1))
                  : (window.removeEventListener("mousemove", s, !1),
                    window.removeEventListener("mouseup", r, !1)),
                t.preventDefault(),
                e.saveTableRowHeight(e.rowHeight));
            }
          }
          this.$view.addEventListener(
            TOUCH ? EVENT_touchstart : "mousedown",
            t,
            !1
          );
        }),
        (e.prototype.registerScrollbarVMouseListeners = function () {
          var e = this;
          function i(i) {
            i.target;
            var o = i.clientY,
              a = e.scrollTop,
              n = e.rows.length + 1,
              s = e.containerHeight() - e.headHeight - e.footHeight,
              r = s - 4,
              l = Math.max(s, (e.rowHeight + t) * n),
              c = l / r;
            function d(t) {
              var i = t.clientY - o;
              e.scrollTo(
                e.scrollLeft,
                Math.max(0, Math.min(l - s, Math.round(a + c * i)))
              ),
                t.preventDefault();
            }
            function u(e) {
              window.removeEventListener("mousemove", d, !1),
                window.removeEventListener("mouseup", u, !1),
                e.preventDefault();
            }
            window.addEventListener("mouseup", u, !1),
              window.addEventListener("mousemove", d, !1),
              i.preventDefault();
          }
          this.$scrollbarV.addEventListener("mousedown", i, !1);
        }),
        (e.prototype.registerScrollbarVTouchListeners = function () {
          var e = this;
          function i(i) {
            if (1 === i.touches.length) {
              var o = i.touches[0].clientY,
                a = e.scrollTop,
                n = e.rows.length + 1,
                s = e.containerHeight() - e.headHeight - e.footHeight,
                r = s - 4,
                l = Math.max(s, (e.rowHeight + t) * n),
                c = l / r;
              EVENT_target(i).addEventListener(EVENT_touchmove, d, !1),
                EVENT_target(i).addEventListener(EVENT_touchend, u, !1);
            }
            function d(t) {
              if (1 === t.touches.length) {
                var i = t.touches[0].clientY - o;
                e.scrollTo(
                  e.scrollLeft,
                  Math.max(0, Math.min(l - s, Math.round(a + c * i)))
                ),
                  t.preventDefault();
              }
            }
            function u(e) {
              0 === e.touches.length &&
                (EVENT_target(e).removeEventListener(EVENT_touchmove, d, !1),
                EVENT_target(e).removeEventListener(EVENT_touchend, u, !1),
                e.preventDefault());
            }
          }
          this.$scrollbarV.addEventListener(EVENT_touchstart, i, !1);
        }),
        (e.prototype.registerScrollbarHMouseListeners = function () {
          var e = this;
          function t(t) {
            t.target;
            var i = t.clientX,
              o = e.scrollLeft,
              a = e.$container.clientWidth,
              n = a - 4,
              s = e.viewWidth + 40,
              r = s / n;
            function l(t) {
              var n = t.clientX - i;
              e.scrollTo(
                Math.max(0, Math.min(s - a, Math.round(o + r * n))),
                e.scrollTop
              ),
                t.preventDefault();
            }
            function c(e) {
              window.removeEventListener("mousemove", l, !1),
                window.removeEventListener("mouseup", c, !1),
                e.preventDefault();
            }
            window.addEventListener("mouseup", c, !1),
              window.addEventListener("mousemove", l, !1),
              t.preventDefault();
          }
          this.$scrollbarH.addEventListener("mousedown", t, !1);
        }),
        (e.prototype.registerScrollMouseListeners = function () {
          var e = this;
          function i(i) {
            var o = Math.max(
                0,
                (e.rows.length + 1) * (e.rowHeight + t) -
                  e.containerHeight() +
                  e.headHeight +
                  e.footHeight
              ),
              a =
                (OSX_10_9_MODE ? -i.wheelDeltaY : i.deltaY) *
                (1 == i.deltaMode
                  ? e.rowHeight + t
                  : 2 == i.deltaMode
                  ? window.getHeight()
                  : 1),
              n = OSX_10_9_MODE ? i.wheelDeltaX : -i.deltaX;
            Math.abs(n) > Math.abs(a) ? (a = 0) : (n = 0);
            var s = e.scrollTop,
              r = Math.min(Math.max(s + a, 0), o),
              l = Math.min(
                Math.max(0, e.scrollLeft - n),
                Math.max(0, e.viewWidth + 40 - e.$container.clientWidth)
              );
            e.scrollTo(l, r), i.preventDefault();
          }
          OSX_10_9_MODE
            ? e.$body.addEventListener("mousewheel", i, !1)
            : e.$body.addEventListener("wheel", i, !1);
        }),
        (e.prototype.registerScrollTouchListeners = function () {
          var e,
            i = this,
            o = 0,
            a = 0,
            n = 0,
            s = 0,
            r = 0,
            l = 0,
            c = 0,
            d = null,
            u = !1,
            p = 500,
            h = p * p,
            m = p / 60,
            f = !1;
          function g(t) {
            1 === t.touches.length &&
              ((u = !1),
              (o = n = t.touches[0].clientX),
              (a = s = t.touches[0].clientY),
              (e = new Date().getTime()),
              (d = null),
              (f = !1),
              window.addEventListener(EVENT_touchmove, v, !1),
              window.addEventListener(EVENT_touchend, b, !1));
          }
          function v(e) {
            if (1 === e.touches.length) {
              u = !1;
              var t = e.touches[0].clientX,
                o = e.touches[0].clientY,
                a = t - n,
                r = o - s;
              if (!f) {
                if (a * a + r * r <= 4) return;
                f = !0;
              }
              d || (d = Math.abs(a) > Math.abs(r) ? "H" : "V"),
                "H" === d ? (r = 0) : (a = 0);
              var l = Math.min(
                  Math.max(0, i.scrollLeft - a),
                  Math.max(0, i.viewWidth + 40 - i.$container.clientWidth)
                ),
                c = i.scrollTop - r;
              i.scrollTo(l, c), (n = t), (s = o), e.preventDefault();
            }
          }
          function b(t) {
            if (
              0 === t.touches.length &&
              (window.removeEventListener(EVENT_touchmove, v, !1),
              window.removeEventListener(EVENT_touchend, b, !1),
              f)
            ) {
              var p = new Date().getTime() - e;
              (r = "H" === d ? ((n - o) * m) / p : 0),
                (l = "V" === d ? (i.scrollTop < 0 ? 0 : ((s - a) * m) / p) : 0),
                (c = 0),
                (u = !0),
                requestAnimationFrame(y);
            }
          }
          function y() {
            if (u) {
              var e = i.scrollTop,
                o = i.scrollLeft,
                a = Math.max(
                  0,
                  (i.rows.length + 1) * (i.rowHeight + t) -
                    i.containerHeight() +
                    i.headHeight +
                    i.footHeight
                );
              if (e < 0) {
                var n = e - (10 * e * m) / p;
                Math.abs(n) < 0.1 && (n = 0),
                  i.scrollTo(o, n),
                  requestAnimationFrame(y);
              } else if (0 === e) u = !1;
              else if (e > a) {
                n = e - (10 * (e - a) * m) / p;
                Math.abs(n - a) < 0.1 && (n = a),
                  i.scrollTo(o, n),
                  requestAnimationFrame(y);
              } else if (e === a) u = !1;
              else if (c >= p) u = !1;
              else {
                var s = 1 - (c * c) / h;
                if (!isNaN(s)) {
                  var d = s * r,
                    f = s * l,
                    g = Math.min(
                      Math.max(0, o - d),
                      Math.max(0, i.viewWidth + 40 - i.$container.clientWidth)
                    );
                  n = e - f;
                  i.scrollTo(g, n);
                }
                (c += m), requestAnimationFrame(y);
              }
            }
          }
          i.$body.addEventListener(EVENT_touchstart, g, !1);
        }),
        (e.prototype.registerHeadResizeListeners = function () {
          var e = this;
          function t(t) {
            if (!TOUCH || 1 === t.touches.length) {
              var o = t.target;
              if ("t-head-resizer" === o.className) {
                var a = o.parentNode.getAttribute("data-cidx");
                if (a) {
                  a = parseInt(a);
                  var n = e.cols[a];
                  if (n) {
                    var s = n.width,
                      r = TOUCH ? t.touches[0].clientX : t.clientX,
                      l = TOUCH ? t.touches[0].clientY : t.clientY,
                      c = !1;
                    return (
                      TOUCH
                        ? (EVENT_target(t).addEventListener(
                            EVENT_touchmove,
                            d,
                            !1
                          ),
                          EVENT_target(t).addEventListener(
                            EVENT_touchend,
                            u,
                            !1
                          ))
                        : (document.addEventListener("mousemove", d, !1),
                          document.addEventListener("mouseup", u, !1)),
                      i(t),
                      !1
                    );
                  }
                }
              }
            }
            function d(t) {
              if (!TOUCH || 1 === t.touches.length) {
                var o = TOUCH ? t.touches[0].clientX : t.clientX,
                  a = TOUCH ? t.touches[0].clientY : t.clientY,
                  d = o - r,
                  u = a - l,
                  p = Math.abs(d) > Math.abs(u) ? d : u;
                if ((Math.abs(p) > 1 && (c = !0), c)) {
                  c = !0;
                  var h = Math.max(e.minColWidth, s + p);
                  (n.width = h), e.resizeColumns();
                }
                return i(t), !1;
              }
            }
            function u(t) {
              if (!TOUCH || 0 === t.touches.length)
                return (
                  TOUCH
                    ? (EVENT_target(t).removeEventListener(
                        EVENT_touchmove,
                        d,
                        !1
                      ),
                      EVENT_target(t).removeEventListener(
                        EVENT_touchend,
                        u,
                        !1
                      ))
                    : (document.removeEventListener("mousemove", d, !1),
                      document.removeEventListener("mouseup", u, !1)),
                  c ? e.setColumnWidth(a, s, n.width) : e.touchHead(t),
                  e.saveView(),
                  i(t),
                  !1
                );
            }
          }
          function i(e) {
            e.preventDefault(), e.stopPropagation();
          }
          TOUCH
            ? e.$head.addEventListener(EVENT_touchstart, t, !1)
            : e.$head.addEventListener("mousedown", t, !1);
        }),
        (e.prototype.registerHeadDragListeners = function () {
          var e = this;
          function t(t) {
            if (!TOUCH || 1 === t.touches.length) {
              var i = t.target;
              if ("t-head-resizer" !== i.className) {
                for (; i && "t-head-cell" !== i.className; ) i = i.parentNode;
                if (i)
                  if (i.getAttribute("data-action")) e.touchHead(t);
                  else {
                    var o = i.getAttribute("data-cidx");
                    if (o) {
                      o = parseInt(o);
                      var a = e.cols,
                        n = a[o];
                      if (n) {
                        var s = e.$container.getBoundingClientRect(),
                          r = n.left,
                          l = TOUCH ? t.touches[0].clientX : t.clientX,
                          c = (e.scrollLeft, !1),
                          d = o,
                          u = [];
                        m(),
                          TOUCH
                            ? (EVENT_target(t).addEventListener(
                                EVENT_touchmove,
                                p,
                                !0
                              ),
                              EVENT_target(t).addEventListener(
                                EVENT_touchend,
                                h,
                                !0
                              ))
                            : (window.addEventListener("mousemove", p, !0),
                              window.addEventListener("mouseup", h, !0)),
                          t.preventDefault(),
                          t.stopPropagation();
                      }
                    }
                  }
              }
            }
            function p(t) {
              if (!TOUCH || 1 === t.touches.length) {
                var i = TOUCH ? t.touches[0].clientX : t.clientX,
                  p = i - l;
                if (Math.abs(p) > 3) {
                  (c = !0),
                    (n.$headCell.style.zIndex = "1"),
                    (n.$headCell.style.backgroundColor =
                      "rgba(200,200,200,.5)"),
                    (n.$footCell.style.zIndex = "1"),
                    (n.$footCell.style.backgroundColor =
                      "rgba(200,200,200,.5)");
                  for (var h = e.viewRows, f = 0; f < h.length; f++) {
                    h[f].$cells[o].style.zIndex = 1;
                  }
                }
                if (c) {
                  var g = r + p + "px";
                  (n.$headCell.style.left = g), (n.$footCell.style.left = g);
                  for (h = e.viewRows, f = 0; f < h.length; f++)
                    h[f].$cells[o].style.left = g;
                  for (var v = e.leftWidth + s.left, b = 0; b < u.length; b++) {
                    var y = a[u[b]],
                      w = v - e.scrollLeft,
                      x = w + y.width / 3,
                      T = w + (2 * y.width) / 3,
                      C = w + y.width;
                    if (b !== d) {
                      if (w <= i && x > i) {
                        (d = b), m();
                        break;
                      }
                      if (T < i && C >= i) {
                        (d = b + 1), m();
                        break;
                      }
                    }
                    v += y.width;
                  }
                }
                t.preventDefault(), t.stopPropagation();
              }
            }
            function h(t) {
              if (!TOUCH || 0 === t.touches.length) {
                if (
                  (TOUCH
                    ? (EVENT_target(t).removeEventListener(
                        EVENT_touchmove,
                        p,
                        !0
                      ),
                      EVENT_target(t).removeEventListener(
                        EVENT_touchend,
                        h,
                        !0
                      ))
                    : (window.removeEventListener("mousemove", p, !0),
                      window.removeEventListener("mouseup", h, !0)),
                  c)
                ) {
                  (n.$headCell.style.zIndex = ""),
                    (n.$headCell.style.backgroundColor = ""),
                    (n.$footCell.style.zIndex = ""),
                    (n.$footCell.style.backgroundColor = "");
                  for (var i = e.viewRows, s = 0; s < i.length; s++) {
                    i[s].$cells[o].style.zIndex = "";
                  }
                  if (o === d) e.resizeColumns();
                  else {
                    var r = void 0 !== e.cidxSort ? a[e.cidxSort] : void 0,
                      l = void 0 !== e.cidxSort ? a[e.cidxGroup] : void 0;
                    oo(a, o, d),
                      r && (e.cidxSort = a.indexOf(r)),
                      l && (e.cidxGroup = a.indexOf(l));
                    e.rows;
                    var u = e.models,
                      m = e.groups;
                    for (var f in u) {
                      if (u.hasOwnProperty(f)) oo(u[f].values, o, d);
                    }
                    for (var g in m) {
                      if (m.hasOwnProperty(g)) oo(m[g].values, o, d);
                    }
                    oo(e.foot.values, o, d),
                      e.createCells(),
                      e.resizeColumns(),
                      e.updateHead(),
                      e.updateRows(),
                      e.updateFoot(),
                      e.saveView(),
                      e.retainSelection();
                  }
                } else e.touchHead(t);
                t.preventDefault(), t.stopPropagation();
              }
            }
            function m() {
              u = [];
              for (var t = 0; t < a.length; t++) u[t] = t;
              u.splice(o, 1), u.splice(d, 0, o);
              for (
                var i = e.leftWidth, n = e.viewRows, s = 0;
                s < n.length;
                s++
              ) {
                var r = n[s];
                i = e.leftWidth;
                for (t = 0; t < u.length; t++) {
                  var l = (c = a[u[t]]).width;
                  if (t !== d) r.$cells[u[t]].style.left = i + "px";
                  i += l;
                }
              }
              i = e.leftWidth;
              for (t = 0; t < u.length; t++) {
                var c;
                l = (c = a[u[t]]).width;
                if (t !== d)
                  (c.$headCell.style.left = i + "px"),
                    (c.$footCell.style.left = i + "px");
                i += l;
              }
            }
          }
          TOUCH
            ? e.$head.addEventListener(EVENT_touchstart, t, !1)
            : e.$head.addEventListener("mousedown", t, !1);
        }),
        (e.prototype.registerBodyListeners = function () {
          TOUCH
            ? this.registerBodyListeners_TOUCH()
            : this.registerBodyListeners_NOTOUCH();
        }),
        (e.prototype.registerBodyListeners_TOUCH = function () {
          var e = this;
          function i(i) {
            if (1 === i.touches.length) {
              i.preventDefault(), i.stopPropagation();
              var o = e.cols,
                a = e.$container.getBoundingClientRect(),
                n = a.height,
                s = (a.top, i.touches[0].clientX),
                r = i.touches[0].clientY,
                c = s,
                d = r,
                u = 0,
                p = 0,
                h = w(s),
                m = x(r),
                f = !1,
                g = e.rows[m],
                v = e.groups[g];
              EVENT_target(i).addEventListener(EVENT_touchmove, b, !1),
                EVENT_target(i).addEventListener(EVENT_touchend, y, !1);
            }
            function b(e) {
              1 === e.touches.length &&
                ((c = e.touches[0].clientX),
                (d = e.touches[0].clientY),
                (u = c - s) * u + (p = d - d) * p > 4 && (f = !0));
            }
            function y(t) {
              if (
                0 === t.touches.length &&
                (EVENT_target(t).removeEventListener(EVENT_touchmove, b, !1),
                EVENT_target(t).removeEventListener(EVENT_touchend, y, !1),
                !f)
              ) {
                if (v) return void e.toggle(g);
                if (m > e.rows.length || m < 0) return void e.selectNothing();
                if (m === e.rows.length)
                  return e.create(), void Object(l.f)("Table", "CreateRecord");
                if (-1 === h)
                  return void (e.isTableEditMode()
                    ? e.selectRow(m)
                    : e.toggleRowChoosen(m, t.shiftKey));
                e.getSelectedRow() === m ? e.selectNothing() : e.selectRow(m);
              }
            }
            function w(t) {
              var i = a.left,
                n = i + e.leftWidth;
              if (t >= i && t <= n) return -1;
              for (var s = n - e.scrollLeft, r = 0; r < o.length; r++) {
                var l = o[r];
                if (t >= s && t <= s + l.width) return r;
                s += l.width;
              }
              return o.length - 1;
            }
            function x(i) {
              var o = a.top + e.headHeight;
              return Math.floor((i + e.scrollTop - o) / (e.rowHeight + t));
            }
          }
          e.$body.addEventListener(EVENT_touchstart, i, !1);
        }),
        (e.prototype.registerBodyListeners_NOTOUCH = function () {
          var e = this;
          function i(i) {
            if (
              (!TOUCH || 1 === i.touches.length) &&
              (TOUCH || 1 === i.which)
            ) {
              var o,
                a,
                n = e.cols,
                s = e.$container.getBoundingClientRect(),
                r = s.height,
                c = s.top,
                d = c + r,
                u = TOUCH ? i.touches[0].clientX : i.clientX,
                p = TOUCH ? i.touches[0].clientY : i.clientY,
                h = u,
                m = p,
                f = 0,
                g = 0,
                v = O(u),
                b = z(p),
                y = v,
                w = b,
                x = null,
                T = null,
                C = 0,
                k = 0,
                S = Date.now(),
                $ = Math.abs(S - e.lastMouseDown);
              e.lastMouseDown = S;
              var _ = e.rows[b],
                E = e.groups[_];
              if (!e.editor || v !== e.editor.c || b !== e.editor.r)
                if (
                  (e.stopEdit(!0), i.preventDefault(), i.stopPropagation(), E)
                )
                  e.toggle(_);
                else if (b > e.rows.length || b < 0) e.selectNothing();
                else {
                  if (b === e.rows.length)
                    return (
                      e.create(), void Object(l.f)("Table", "CreateRecord")
                    );
                  if (-1 !== v)
                    if ($ < 400 && !e.isTableEditMode()) e.selectCell(b, v);
                    else {
                      if ("t-selection-drag" === i.target.className) {
                        if (
                          ((o = e.getSelectedRow()),
                          (a = e.getSelectedColumn()),
                          !e.getWritableField(a))
                        )
                          return;
                        (x = "drag"),
                          (T = $DIV("t-drag", e.$view)),
                          (w = o),
                          I();
                      } else if (i.shiftKey)
                        return (
                          (b = e.getSelectedRow()),
                          (v = e.getSelectedColumn()),
                          null == b && (b = 0),
                          null == v && ((v = 0), (y = n.length - 1)),
                          void e.selectBlock(b, v, w, y)
                        );
                      window.addEventListener(
                        TOUCH ? EVENT_touchmove : "mousemove",
                        D,
                        !1
                      ),
                        window.addEventListener(
                          TOUCH ? EVENT_touchend : "mouseup",
                          M,
                          !1
                        );
                    }
                  else
                    e.isTableEditMode()
                      ? e.selectRow(b)
                      : e.toggleRowChoosen(b, i.shiftKey);
                }
            }
            function D(i) {
              if (!TOUCH || 1 === i.touches.length) {
                (h = TOUCH ? i.touches[0].clientX : i.clientX),
                  (m = TOUCH ? i.touches[0].clientY : i.clientY),
                  (f = h - u),
                  (g = m - p);
                var o = m - c,
                  a = m - d;
                o < e.rowHeight + t
                  ? R(o - (e.rowHeight + t))
                  : a > -(e.rowHeight + t)
                  ? R(a + (e.rowHeight + t))
                  : F(),
                  i.preventDefault(),
                  i.stopPropagation(),
                  N();
              }
            }
            function N() {
              (y = O(h)) < 0 && (y = 0),
                (w = z(m)) < 0 && (w = 0),
                w > e.rows.length && (w = e.rows.length - 1),
                x
                  ? "select" === x
                    ? e.selectBlock(b, v, w, y)
                    : "drag" === x &&
                      (w > e.rows.length - 1 && (w = e.rows.length - 1), I())
                  : f * f + g * g > 4 &&
                    ((x = "select"), e.selectBlock(b, v, w, y));
            }
            function M(t) {
              (TOUCH && 0 !== t.touches.length) ||
                (window.removeEventListener(
                  TOUCH ? EVENT_touchmove : "mousemove",
                  D,
                  !1
                ),
                window.removeEventListener(
                  TOUCH ? EVENT_touchend : "mouseup",
                  M,
                  !1
                ),
                F(),
                "select" === x
                  ? v === y && b === w && (x = null)
                  : "drag" === x &&
                    ($REMOVE(T),
                    o !== w &&
                      e.dragValue(
                        a,
                        o,
                        w < o ? w : o + 1,
                        w < o ? o - 1 : w,
                        t.shiftKey,
                        w < o
                      )),
                x ||
                  (e.isCellSelection()
                    ? e.isCellSelected(b, v)
                      ? e.startEdit(v, b)
                      : e.selectCell(b, v)
                    : e.isTableEditMode()
                    ? e.selectCell(b, v)
                    : e.isRowSelected(b)
                    ? e.selectNothing()
                    : e.selectRow(b)),
                (x = null),
                t.preventDefault(),
                t.stopPropagation());
            }
            function I() {
              if (o === w) T.style.display = "none";
              else {
                var t = o < w ? o + 1 : w,
                  i = o < w ? w : o - 1;
                (T.style.display = ""),
                  (T.style.left = e.colX(a, a) + "px"),
                  (T.style.width = e.colW(a, a) + "px"),
                  (T.style.top = e.rowY(t, t) + "px"),
                  (T.style.height = e.rowHWithMargin(t, i) + "px");
              }
            }
            function R(e) {
              var t = Math.min(1, Math.max(-1, e / 80)),
                i =
                  Math.sign(t) *
                  (Math.sin(t * Math.PI - Math.PI / 2) + 1) *
                  1024;
              0 === C
                ? ((C = i), (k = performance.now()), requestAnimationFrame(A))
                : (C = i);
            }
            function F() {
              C = 0;
            }
            function A() {
              if (0 !== C) {
                var i = performance.now(),
                  o = Math.abs(i - k),
                  a = Math.round((C * o) / 1e3),
                  n = e.scrollTop + a,
                  s = e.rows.length + 1,
                  r = e.containerHeight() - 2 * (e.rowHeight + t),
                  l = Math.max(r, (e.rowHeight + t) * (s - 1));
                e.scrollTo(e.scrollLeft, Math.max(0, Math.min(l - r, n))),
                  (k = i),
                  N(),
                  requestAnimationFrame(A);
              }
            }
            function O(t) {
              var i = s.left,
                o = i + e.leftWidth;
              if (t >= i && t <= o) return -1;
              for (var a = o - e.scrollLeft, r = 0; r < n.length; r++) {
                var l = n[r];
                if (t >= a && t <= a + l.width) return r;
                a += l.width;
              }
              return n.length - 1;
            }
            function z(i) {
              var o = s.top + e.headHeight;
              return Math.floor((i + e.scrollTop - o) / (e.rowHeight + t));
            }
          }
          e.$body.addEventListener(
            TOUCH ? EVENT_touchstart : "mousedown",
            i,
            !1
          );
        });
    }
    function Cs(e) {
      (e.prototype.selectLastRow = function () {
        this.selectRow(
          void 0 === this.lastSelectedRow ? 0 : this.lastSelectedRow,
          "row"
        ),
          this.scrollToCell(0, this.lastSelectedRow);
      }),
        (e.prototype.isTableEditMode = function () {
          return (
            "cell" === this.selectionMode || "block" === this.selectionMode
          );
        }),
        (e.prototype.isRowSelection = function () {
          return "row" === this.selectionMode;
        }),
        (e.prototype.isRowSelected = function (e) {
          return "row" === this.selectionMode && this.selectionR0 === e;
        }),
        (e.prototype.isCellSelection = function () {
          return "cell" === this.selectionMode;
        }),
        (e.prototype.isCellSelected = function (e, t) {
          return (
            "cell" === this.selectionMode &&
            this.selectionR0 === e &&
            this.selectionC0 === t
          );
        }),
        (e.prototype.getSelectedRow = function () {
          return this.selectionMode ? this.selectionR0 : void 0;
        }),
        (e.prototype.getSelectedColumn = function () {
          var e = this.selectionMode;
          return "cell" === e || "block" === e ? this.selectionC0 : void 0;
        }),
        (e.prototype.getSelectedNid = function () {
          return this.selectionMid0;
        }),
        (e.prototype.selectNothing = function () {
          this.stopEdit(),
            this.setSelection(void 0, void 0, void 0, void 0, void 0, !1);
        }),
        (e.prototype.selectRow = function (e, t) {
          (this.lastSelectedRow = e), this.stopEdit();
          var i = this.rows,
            o = this.models;
          e >= 0 && e < i.length && o[i[e]]
            ? this.setSelection("row", e, void 0, e, void 0, !!t)
            : this.selectNothing();
        }),
        (e.prototype.selectCell = function (e, t, i) {
          this.lastSelectedRow = e;
          var o = this.rows,
            a = this.cols;
          e >= 0 && e < o.length && (null == t || (t >= 0 && t < a.length))
            ? (null != t
                ? this.setSelection("cell", e, t, e, t, !!i)
                : this.setSelection("row", e, void 0, e, void 0, !!i),
              this.scrollToCell(t, e))
            : this.selectNothing();
        }),
        (e.prototype.selectBlock = function (e, t, i, o, a) {
          (this.lastSelectedRow = e), this.stopEdit();
          var n = this.rows,
            s = this.cols;
          e >= 0 &&
          e < n.length &&
          i >= 0 &&
          i < n.length &&
          t >= 0 &&
          t < s.length &&
          o >= 0 &&
          o < s.length
            ? this.setSelection(
                "block",
                Math.min(e, i),
                Math.min(t, o),
                Math.max(e, i),
                Math.max(t, o),
                !!a
              )
            : this.selectNothing();
        }),
        (e.prototype.setSelection = function (e, t, i, o, a, n) {
          var s = this.selectionMode !== e;
          if (
            (s && this.removeSelection(),
            (this.selectionMode = e),
            (this.selectionR0 = t),
            (this.selectionC0 = i),
            (this.selectionR1 = o),
            (this.selectionC1 = a),
            e)
          ) {
            var r = this.rows;
            (this.selectionMid0 = r[t]), (this.selectionMid1 = r[o]);
          } else (this.selectionMid0 = void 0), (this.selectionMid1 = void 0);
          s && this.createSelection(),
            this.updateSelection(),
            this.retainSideEditor(n),
            this.container.selectionChanged();
        }),
        (e.prototype.createSelection = function () {
          if (!this.selectionIsCreated)
            switch (((this.selectionIsCreated = !0), this.selectionMode)) {
              case "row":
                (this.$selectionEl1 = $DIV(
                  "t-selection t-selection-row",
                  this.$selectionContainer
                )),
                  (this.$headSelection = $DIV(
                    "t-selection t-selection-row-head",
                    this.$headSelectionContainer
                  ));
                break;
              case "cell":
                (this.$selectionEl1 = $DIV(
                  "t-selection t-selection-cell-1",
                  this.$selectionContainer
                )),
                  (this.$selectionElDrag = $DIV(
                    "t-selection-drag",
                    this.$selectionContainer
                  ));
                break;
              case "block":
                this.$selectionEl1 = $DIV(
                  "t-selection t-selection-block",
                  this.$selectionContainer
                );
            }
        }),
        (e.prototype.removeSelection = function () {
          if (this.selectionIsCreated)
            switch (((this.selectionIsCreated = !1), this.selectionMode)) {
              case "row":
                $REMOVE(this.$selectionEl1),
                  $REMOVE(this.$headSelection),
                  (this.$selectionEl1 = void 0);
                break;
              case "cell":
                $REMOVE(this.$selectionEl1),
                  $REMOVE(this.$selectionElDrag),
                  (this.$selectionEl1 = void 0),
                  (this.$selectionElDrag = void 0);
                break;
              case "block":
                $REMOVE(this.$selectionEl1), (this.$selectionEl1 = void 0);
            }
        }),
        (e.prototype.updateSelection = function () {
          const e = this.leftWidth;
          switch (this.selectionMode) {
            case "row":
              var t = this.rowY(this.selectionR0, this.selectionR0),
                i = this.rowH(this.selectionR0, this.selectionR0) - 1,
                o = this.viewWidth,
                a = this.$selectionEl1,
                n = this.$headSelection;
              (n.style.left = "2px"),
                (n.style.top = t + "px"),
                (n.style.width = "40px"),
                (n.style.height = i + "px"),
                (a.style.left = e + 1 + "px"),
                (a.style.top = t + "px"),
                (a.style.width = o - e - 2 + "px"),
                (a.style.height = i + "px");
              break;
            case "cell":
              a = this.$selectionEl1;
              var s = this.$selectionElDrag,
                r = this.selectionC0,
                l = this.selectionR0,
                c =
                  ((t = this.rowY(l, l)),
                  (i = this.rowH(l, l) - 1),
                  this.colX(r, r)),
                d = c + this.colW(r, r) - 1;
              this.viewWidth;
              (a.style.left = c + "px"),
                (a.style.top = t + "px"),
                (a.style.width = d - c + "px"),
                (a.style.height = i + "px"),
                this.isEditable(r, l)
                  ? (a.className = "t-selection t-selection-cell-2 editable")
                  : (a.className = "t-selection t-selection-cell-2"),
                !!this.getWritableField(r)
                  ? ((s.style.display = ""),
                    (s.style.left = d - 4 + "px"),
                    (s.style.top = t + i - 5 + "px"))
                  : (s.style.display = "none");
              break;
            case "block":
              var u = this.$selectionEl1,
                p = this.selectionC0,
                h = this.selectionC1,
                m = this.selectionR0,
                f = this.selectionR1,
                g = this.colX(p, h);
              (o = this.colW(p, h) - 1),
                (t = this.rowY(m, f)),
                (i = this.rowHWithMargin(m, f));
              (u.style.left = g + "px"),
                (u.style.width = o + "px"),
                (u.style.top = t + "px"),
                (u.style.height = i + "px");
          }
        }),
        (e.prototype.getSelectedText = function () {
          switch (this.selectionMode) {
            case "row":
              return this.getTextAtRange(
                0,
                this.selectionR0,
                this.cols.length - 1,
                this.selectionR0
              );
            case "cell":
              return this.getTextAtCell(this.selectionC0, this.selectionR0);
            case "block":
              return this.getTextAtRange(
                this.selectionC0,
                this.selectionR0,
                this.selectionC1,
                this.selectionR1
              );
            default:
              return "";
          }
        }),
        (e.prototype.retainSelection = function (e) {
          if ((console.log("Table.retainSelection"), this.selectionMode)) {
            var t = this.rows,
              i = this.cols.length - 1,
              o = t.indexOf(this.selectionMid0),
              a = t.indexOf(this.selectionMid1);
            if (-1 === o || -1 === a) {
              let t = !1;
              if (!e && null != this.cidxGroup)
                for (const e in this.groups)
                  if (
                    this.groups.hasOwnProperty(e) &&
                    -1 !== this.groups[e].children.indexOf(this.selectionMid0)
                  ) {
                    this.expanded[e] ||
                      (this.expandSilently(e),
                      this.updateRows(),
                      this.rowsChanged()),
                      (t = !0);
                    break;
                  }
              return t
                ? void this.select(this.selectionMid0)
                : void this.selectNothing();
            }
            (this.selectionR0 = Math.min(o, a)),
              (this.selectionR1 = Math.max(o, a)),
              null != this.selectionC0 &&
                ((this.selectionC0 = Math.min(
                  i,
                  Math.max(0, this.selectionC0)
                )),
                null != this.selectionC1 &&
                  (this.selectionC1 = Math.min(
                    i,
                    Math.max(0, this.selectionC0, this.selectionC1)
                  ))),
              this.updateSelection();
          }
          this.retainSideEditor(!1);
        }),
        (e.prototype.retainSideEditor = function (e) {
          if (this.visible) {
            var t = this.selectionMid0;
            t && !!this.models[t] && "row" === this.selectionMode
              ? ui.sideEditor.open(t, this.sideEditorOptions, !!e)
              : ui.sideEditor.close(!0),
              ui.recordNavigation.updateUI();
          }
        });
    }
    (vs.prototype.destroy = function () {
      this.xlsUseFieldFormatField.destroy();
    }),
      (vs.prototype.getXLSExportOptions = function () {
        return { useFieldFormat: this.xlsUseFieldFormat.value };
      }),
      (vs.prototype.saveXLSExportOptions = function () {
        gs.xlsUseFieldFormat = this.xlsUseFieldFormat.value;
      }),
      (bs.prototype.destroy = function () {
        this.popdown.close($.proxy(this.closed, this));
      }),
      (bs.prototype.closed = function () {
        this.exportCSVSettings.destroy(), this.exportXLSSettings.destroy();
      }),
      (bs.prototype.close = function () {
        this.destroy();
      }),
      (bs.prototype.csvExportOpen = async function () {
        Object(l.f)("ExportData", "TableCSVOpen");
        this.exportCSVSettings.saveCSVExportOptions();
        this.exportCSVSettings.csvEncoding.value;
        var e = "data:text/csv;charset=utf-8," + this.renderCSV();
        window.open(e);
      }),
      (bs.prototype.csvExportOpen_WEB = function () {
        Object(l.f)("ExportData", "TableCSVOpenWeb");
        var e = this;
        this.exportCSVSettings.saveCSVExportOptions();
        this.exportCSVSettings.csvEncoding.value;
        var t = this.renderCSV(),
          i = e.suggestFileName() + ".csv",
          o = "text/csv";
        NinoxDocumentInteraction.openFileWithServer(i, o, t, !1, !0),
          e.destroy();
      }),
      (bs.prototype.csvExportSaveAs = function () {
        Object(l.f)("ExportData", "TableCSVSaveAs");
      }),
      (bs.prototype.suggestFileName = function () {
        var e = this.table,
          t = (e.type && e.type.caption) || locale.unnamed,
          i = (e.container && e.container.getViewCaption()) || void 0;
        i == locale.all && (i = void 0);
        var o = t + (i ? " - " + i : "");
        return util.escapeFileName(o);
      }),
      (bs.prototype.csvExportSaveICloud = async function () {
        Object(l.f)("ExportData", "TableCSVSaveICloud");
      }),
      (bs.prototype.renderCSV = function () {
        return util.renderCSV(
          database,
          this.table,
          this.exportCSVSettings.getCSVExportOptions()
        );
      }),
      (bs.prototype.xlsExportOpen = async function () {
        Object(l.f)("ExportData", "TableExcelOpen");
        this.exportXLSSettings.saveXLSExportOptions();
        this.renderXLS();
      }),
      (bs.prototype.xlsExportOpen_WEB = function () {
        Object(l.f)("ExportData", "TableExcelOpenWeb");
        var e = this;
        this.exportXLSSettings.saveXLSExportOptions();
        var t = this.renderXLS(),
          i = e.suggestFileName() + ".xlsx",
          o =
            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
        NinoxDocumentInteraction.openFileWithServer(i, o, t, !0, !0),
          e.destroy();
      }),
      (bs.prototype.xlsExportSaveAs = function () {
        Object(l.f)("ExportData", "TableExcelSaveAs");
      }),
      (bs.prototype.xlsExportSaveICloud = async function () {
        Object(l.f)("ExportData", "TableExcelSaveICloud");
      }),
      (bs.prototype.renderXLS = function () {
        var e = this.exportXLSSettings.getXLSExportOptions(),
          t = e && e.useFieldFormat,
          i = {},
          o = this.table,
          a = o.cols,
          n = o.rows,
          s = o.groups,
          r = o.models,
          l = [],
          c = [];
        l.push(c);
        for (var d = {}, u = 0; u < a.length; u++) {
          for (
            var p = a[u],
              h = util.escapeXLSColumnHead(
                p.caption || p.expression.caption,
                u
              ),
              m = h,
              f = 2;
            d[m.toLocaleLowerCase()];
            f++
          )
            m = h + f;
          (d[m.toLocaleLowerCase()] = !0), (c[u] = { value: m, autoWidth: !0 });
        }
        if (n.length)
          for (var g = 0; g < n.length; g++) {
            var v = n[g],
              b = s[v];
            c = [];
            if ((l.push(c), b))
              for (u = 0; u < a.length; u++) {
                p = a[u];
                database.canRead(p.expression)
                  ? u === o.cidxGroup
                    ? (c[u] = x(p.field, b.values[u]))
                    : p.aggType
                    ? (c[u] = x(p.aggType, b.values[u]))
                    : (c[u] = "")
                  : (c[u] = "");
              }
            else {
              var y = r[v];
              for (u = 0; u < a.length; u++) {
                p = a[u];
                database.canRead(p.expression)
                  ? (c[u] = x(p.field, y.values[u]))
                  : (c[u] = "");
              }
            }
          }
        else {
          var c = [];
          l.push(c);
          for (var u = 0; u < a.length; u++) c[u] = "";
        }
        var w = {
          worksheets: [
            {
              table: !0,
              name: util.escapeFileName(o.type.caption).substr(0, 30),
              data: l,
            },
          ],
        };
        return xlsx(w).base64;
        function x(e, i) {
          if (t)
            switch (e.base) {
              case "number":
                return {
                  value: null == i ? "" : i,
                  formatCode: T(e.numberFormat),
                };
              case "date":
              case "timestamp":
                return null == i ? "" : new Date(i);
              case "html":
                return i ? String(i) : "";
              default:
                return e.format(i);
            }
          else
            switch (e.base) {
              case "number":
                return null == i ? "" : i;
              case "date":
              case "timestamp":
                return null == i ? "" : new Date(i);
              case "html":
                return i ? String(i) : "";
              default:
                return e.format(i);
            }
        }
        function T(e) {
          if (e) {
            var t = i[e];
            if (t) return i[e];
            var o = util.parseNumberFormat(e);
            return (
              (t =
                C(o.prefix) +
                (o.group ? "#,##0" : "0") +
                (o.allDigits
                  ? ".#"
                  : o.trailingZeros
                  ? "." + k("0", o.trailingZeros)
                  : "") +
                C(o.suffix)),
              (i[e] = t),
              t
            );
          }
        }
        function C(e) {
          return (e ? '"' + e.replace(/\"/g, '"\\""') + '"' : "").replace(
            /\"/g,
            "&quot;"
          );
        }
        function k(e, t) {
          for (var i = "", o = 0; o < t; o++) i += e;
          return i;
        }
      });
    var ks = 0,
      Ss = 20,
      $s = void 0;
    function _s(e) {
      var t = this;
      (this.contextState = {}),
        (this._reloadId = 0),
        (this._loadCallbacks = []),
        (this.rowHeight = this.loadTableRowHeight()),
        (this.headHeight = 40),
        (this.footHeight = 40),
        (this.leftWidth = 44),
        (this.minColWidth = 32),
        (this.rowHeadWidth = 44),
        (this.container = e),
        (this.models = {}),
        (this.groups = {}),
        (this.groupsSorted = []),
        (this.rows = []),
        (this.cols = []),
        (this.ridxTop = 0),
        (this.viewRows = []),
        (this.removedIndex = {}),
        (this.selectionMode = void 0),
        (this.selectionR0 = void 0),
        (this.selectionC0 = void 0),
        (this.selectionR1 = void 0),
        (this.selectionC1 = void 0),
        (this.selectionMid0 = void 0),
        (this.selectionMid1 = void 0),
        (this.selectionIsCreated = !1),
        (this.extendSelectionUp = !1),
        (this.extendSelectionLeft = !1),
        (this.editor = void 0),
        (this.midChoosen = {}),
        (this.expanded = {}),
        (this.cidxSort = 0),
        (this.cidxGroup = void 0),
        (this.sortDescending = !1),
        (this.onlyChoosen = !1),
        (this.ready = !1),
        (this.visible = !1),
        (this.silent = !1),
        (this.mouseover = !1),
        (this.scrollTop = 0),
        (this.scrollLeft = 0),
        (this.viewX = 0),
        (this.viewY = 0),
        (this.scrollDoneTimeout = null),
        (this.scrollDoneTime = 0),
        (this.scrollDone = $.proxy(this.scrollDone, this)),
        (this.viewTop = 0),
        (this.viewLeft = 0),
        (this.viewHeight = 0),
        (this.viewWidth = 0),
        (this.viewRows = 0),
        (this.isMouseOver = !1),
        (this.lastMouseDown = 0),
        (this.recordController = {
          hasNextRecord: function () {
            return t.rows.length > 0;
          },
          nextRecord: function () {
            t.editorDown();
          },
          hasPrevRecord: function () {
            return t.rows.length > 0;
          },
          prevRecord: function () {
            t.editorUp();
          },
          lastRecord: function () {
            t.editorLast();
          },
          firstRecord: function () {
            t.editorFirst();
          },
          hasAddRecord: function () {
            return !(!t.type || !database.canCreate(t.type));
          },
          addRecord: function () {
            t.create();
          },
          hasDuplicateRecord: function () {
            return !!(
              t.getSelectedNid() &&
              t.type &&
              database.canCreate(t.type)
            );
          },
          duplicateRecord: function () {
            t.duplicate();
          },
          hasRemoveRecord: function () {
            return !!(
              t.getSelectedNid() &&
              t.type &&
              database.canDelete(t.type)
            );
          },
          removeRecord: function () {
            t.remove();
          },
          hasPrintRecord: function () {
            return !(!t.getSelectedNid() || !1 === database.authorizationPrint);
          },
          printRecord: function () {
            t.print();
          },
        }),
        (this.$container = $DIV("t-container")),
        (this.$selectionContainer = void 0),
        (this.$headSelectionContainer = void 0),
        (this.$head = $DIV("t-head", this.$container)),
        (this.$foot = $DIV("t-foot", this.$container));
      this.$body = $DIV("t-body", this.$container);
      (this.$content = $DIV("t-content --ul-table-content", this.$body)),
        (this.$view = $DIV("t-view", this.$content)),
        (this.$rowHeads = $DIV("t-rowheads", this.$view)),
        (this.$headRuler = $DIV(
          "t-head-ruler i-16 i-light-grey i-reload",
          this.$container
        )),
        $(this.$headRuler).touch($.proxy(this.reload, this)),
        (this.$footRuler = $DIV("t-foot-ruler", this.$container)),
        (this.$scrollbarVContainer = $DIV(
          "t-scrollbar-v-container",
          this.$container
        )),
        (this.$scrollbarV = $DIV("t-scrollbar-v", this.$scrollbarVContainer)),
        (this.$scrollbarHContainer = $DIV(
          "t-scrollbar-h-container",
          this.$container
        )),
        (this.$scrollbarH = $DIV("t-scrollbar-h", this.$scrollbarHContainer)),
        (this.$scrollHIndicator = $DIV(
          "t-scroll-h-indicator",
          this.$container
        )),
        (this.$scrollVIndicator = $DIV(
          "t-scroll-v-indicator",
          this.$container
        )),
        this.registerHeadResizeListeners(),
        this.registerHeadDragListeners(),
        this.registerScrollListeners(),
        this.registerBodyListeners(),
        this.$body.addEventListener(
          "contextmenu",
          $.proxy(this.openContextMenu, this),
          !1
        ),
        this.$head.addEventListener(
          "contextmenu",
          function (e) {
            e.preventDefault();
          },
          !1
        ),
        this.$foot.addEventListener(
          "contextmenu",
          function (e) {
            e.preventDefault();
          },
          !1
        ),
        (this.resizeListener = Q.debounce(
          $.proxy(this.resizeListener, this),
          100
        )),
        (this.sideEditorOptions = {
          close: $.proxy(this.unselect, this),
          next: $.proxy(this.editorDown, this),
          prev: $.proxy(this.editorUp, this),
          first: $.proxy(this.editorFirst, this),
          last: $.proxy(this.editorLast, this),
          duplicate: $.proxy(this.duplicate, this),
          getSelectedNids: $.proxy(this.getSelectedNids, this),
        }),
        database.on("rename", void 0, this.nodeRenamed, this),
        database.on("create", void 0, this.nodeCreated, this),
        database.on("change", void 0, this.nodeChanged, this),
        database.on("remove", void 0, this.nodeRemoved, this),
        database.on("schema", void 0, this.schemaChanged, this);
    }
    function Es(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function Ds(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? Es(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : Es(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    function Ns() {
      var e = this;
      (this.popupTabsOpen = null),
        (this.$controls = $(
          '<div class="hud-menu-group" style="margin-left:12px">'
        )),
        database.isAdmin() &&
          $(
            '<div class="hud-menu-button i-32-24 i-light-grey i-setting-filter" title="' +
              htmlEscape(locale.editColumns) +
              '" style="margin-right:2px">'
          )
            .appendTo(this.$controls)
            .touch(function () {
              e.popupColumnMenu();
            }),
        (this.$popupActions = $(
          `<div \n            class="hud-menu-button i-32-24 i-light-grey i-setting-settings" \n            title="${htmlEscape(
            locale.actions
          )}" \n         />\n        <div class="hud-menu-button i-24-12 i-light-grey i-line-down-thick table-head-settings-arrow"/>`
        )
          .appendTo(this.$controls)
          .touch(function () {
            e.popupActions();
          })),
        (this.$searchContainer = $('<div class="hud-menu-search">').appendTo(
          this.$controls
        )),
        (this.$menuSmall = $('<span style="display: none">').appendTo(
          this.$controls
        )),
        (this.$popupContext = $(
          '<div class="hud-menu-button i-24-24 i-light-grey i-column">'
        )
          .appendTo(this.$menuSmall)
          .touch(function (t) {
            e.popupContextMenu(t);
          })),
        (this.$searchPlaceholder = $(
          '<div class="hud-menu-search-placeholder">'
        ).appendTo(this.$searchContainer)),
        $(
          '<div class="i-24-16 i-light-grey i-search table-head-search">'
        ).appendTo(this.$searchPlaceholder),
        (this.$searchText = $('<div class="table-head-search-text">').appendTo(
          this.$searchPlaceholder
        )),
        (this.$search = $(
          '<input type="text" class="hud-menu-search-input" style="display:none" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false">'
        )
          .appendTo(this.$searchContainer)
          .change($.proxy(this.searchChanged, this))),
        (this.$searchCancel = $(
          '<div class="i-32-16 i-light-grey i-close" style="margin-left:-32px;margin-top:4px;display:none">'
        )
          .appendTo(
            $(
              '<div style="width:0;flex:0 0 0px;-webkit-flex:0 0 0px">'
            ).appendTo(this.$searchContainer)
          )
          .touch(function () {
            e.$search.val(""), e.searchChanged();
          })),
        this.$searchPlaceholder.touch(function () {
          e.$searchPlaceholder.css("display", "none"),
            e.$search.css("display", "").focus();
        }),
        this.$search.blur(function () {
          e.$searchPlaceholder.css("display", ""),
            e.$search.css("display", "none");
        }),
        (this.$menuContainer = $("<div>")),
        (this.$tabs = $(
          '<div style="display:flex;display:-webkit-flex;align-items:center;-webkit-align-items:center;width:100%;">'
        )),
        (this.views = []),
        (this.selectedView = {}),
        (this.navigationStateByTid = {}),
        (this.table = new _s(this)),
        (this.renderers = {
          chart: new Hn(this),
          cards: new Pn(this),
          gantt: new os(this),
          kanban: new us(this),
          full: new Wn(this),
          pivot: new ms(this),
        }),
        database.on("schema", void 0, this.schemaChanged, this),
        database.on("change", void 0, this.dataChanged, this),
        database.on("create", void 0, this.dataChanged, this),
        database.on("remove", void 0, this.dataChanged, this),
        database.on("view", void 0, this.viewsChanged, this);
    }
    (_s.prototype.mode = "table"),
      (_s.prototype.destroy = function () {
        database.off("rename", void 0, this.nodeRenamed, this),
          database.off("create", void 0, this.nodeCreated, this),
          database.off("change", void 0, this.nodeChanged, this),
          database.off("remove", void 0, this.nodeRemoved, this),
          database.off("schema", void 0, this.schemaChanged, this),
          this.hide(),
          this.$container.parentNode &&
            this.$container.parentNode.removeChild(this.$container);
      }),
      ys(_s),
      ws(_s),
      xs(_s),
      Ts(_s),
      Cs(_s),
      (_s.prototype.updateUI = function () {
        n.a.render(
          r.a.createElement(Yo, {
            items: this.contextState.items,
            clickTarget: this.contextState.target,
            onClick: () => {
              (this.contextState.target = null), this.updateUI();
            },
            show: null !== this.contextState.target,
          }),
          ui.$tableContextMenuContainer[0]
        );
      }),
      (_s.prototype.setVisible = function (e) {
        e ? this.show() : this.hide();
      }),
      (_s.prototype.show = function () {
        this.visible ||
          ((this.visible = !0),
          $(this.$container).appendTo(ui.$body),
          window.addEventListener("resize", this.resizeListener, !1),
          $.pushInputHandler(this),
          ui.recordNavigation.pushController(this.recordController),
          this.resize(),
          this.scroll(!0, !1));
      }),
      (_s.prototype.hide = function () {
        this.visible &&
          ((this.visible = !1),
          ui.sideEditor.close(!0),
          n.a.unmountComponentAtNode(ui.$tableContextMenuContainer[0]),
          $(this.$container).detach(),
          window.removeEventListener("resize", this.resizeListener, !1),
          $.popInputHandler(this),
          ui.recordNavigation.popController(this.recordController));
      }),
      (_s.prototype.update = function () {}),
      (_s.prototype.addRow = function (e, t) {
        if ((console.log("Table.addRow", e, t), !this.silent)) {
          var i = this;
          i.models[e] ||
            o(function (t) {
              t &&
                database.filterReadable(i.type, [e], function (t) {
                  if (t && 1 === t.length && !i.models[e]) {
                    var o = i.removedIndex[e];
                    (i.models[e] = { id: e, values: [] }),
                      null != o && o >= 0 && o < i.rows.length
                        ? i.rows.splice(o, 0, e)
                        : i.rows.push(e),
                      i.recalc(e, function () {
                        i.aggregate(),
                          i.updateRows(),
                          i.updateFoot(),
                          i.rowsChanged();
                      });
                  }
                });
            });
        }
        function o(o) {
          if (!t) return o(!0);
          database.loadNode(e, function (e, t) {
            if (!t) return o(!1);
            var a = i.getWhereExpression();
            if (!a) return o(!0);
            a.evaluate(database, t, function (e, t) {
              o(t);
            });
          });
        }
      }),
      (_s.prototype.nodeCreated = function (e, t, i) {
        this.ready &&
          (this.silent || (t === this.type.id && this.addRow(i, !0)));
      }),
      (_s.prototype.nodeChanged = function (e, t) {
        if (this.ready && !this.silent) {
          var i = this,
            o = i.models,
            a = [],
            n = {};
          s(t, 0), r();
        }
        function s(e, t) {
          if (!(t > 2 || n[e])) {
            n[e] = !0;
            var i = database.loadNodeSync(e);
            if (i) {
              o[e] && a.push(e);
              var r = database.typeOf(e);
              if (r) {
                var l = r.fields;
                if (l)
                  for (var c in l)
                    if (l.hasOwnProperty(c)) {
                      var d = l[c];
                      if (d.isReference) {
                        if ((h = i[c])) s(d.refType.id + h, t + 1);
                      } else if (d.isReverse) {
                        var u = i[c];
                        if (u)
                          for (var p = 0; p < u.length; p++) {
                            var h = u[p];
                            s(d.refType.id + h, t + 1);
                          }
                      }
                    }
              }
            }
          }
        }
        function r() {
          var e = a.length;
          if (e)
            for (var t = 0; t < a.length; t++)
              i.recalc(a[t], function () {
                0 === --e && l();
              });
        }
        function l() {
          i.aggregate(), i.updateRows(), i.updateFoot();
        }
      }),
      (_s.prototype.nodeRemoved = function (e, t) {
        if (this.ready) {
          var i = this.models[t];
          if ((delete this.midChoosen[t], i)) {
            delete this.models[t];
            var o = this.rows.indexOf(t);
            -1 !== o && this.rows.splice(o, 1), (this.removedIndex[t] = o);
            var a = this.groups;
            for (var n in a)
              if (a.hasOwnProperty(n)) {
                var s = a[n],
                  r = s.children.indexOf(t);
                if (-1 !== r && (s.children.splice(r, 1), !s.children.length)) {
                  var l = this.rows.indexOf(n);
                  -1 !== l && this.rows.splice(l, 1);
                }
              }
            this.aggregate(),
              this.updateRows(),
              this.updateFoot(),
              this.retainSelection(),
              this.rowsChanged();
          }
        }
      }),
      (_s.prototype.schemaChanged = function (e, t, i) {
        if (this.ready)
          if (!0 === t || !0 === i) {
            var o = this.getConfiguration();
            this.configureAndLoad(o);
          } else this.reload();
      }),
      (_s.prototype.configureAndLoad = function (e) {
        this.setConfig(e), this.reload();
      }),
      (_s.prototype.reload = function () {
        this.load(function (e) {
          e && console.log(e);
        });
      }),
      (_s.prototype.setConfig = function (e, t) {
        console.log("Table.setConfig: " + e.type), (this.ready = !1);
        var i = e.type,
          o = database.schema.types[i];
        if (o) {
          (this.config = e), (this.type = o);
          var a = [];
          if (e.cols && 0 !== e.cols.length)
            for (var n = 0; n < e.cols.length; n++) {
              var s = e.cols[n],
                r = s.expression,
                l = ((f = void 0), o.fields[r]);
              l &&
                l.isField &&
                "fn" !== l.base &&
                "file" !== l.base &&
                "memory-global" !== l.binding &&
                "memory-record" !== l.binding &&
                (f = l.id);
              try {
                g = queries.parseSystem(database.schema, o, r, {}, !1);
              } catch (e) {
                console.warn(e, e.stack);
                continue;
              }
              if (g)
                if (g.hasErrors())
                  console.log(
                    "Invalid expression at column " + n,
                    g.errorMessage()
                  );
                else if (!g.isMultiple() && !g.isUpdating()) {
                  var c = s.agg,
                    d = c ? aggregations.aggType(c, g.returnType) : void 0;
                  v = {
                    caption: s.caption,
                    expression: g,
                    field: g.returnType,
                    width: s.width || g.returnType.columnWidth,
                    agg: c,
                    aggType: d,
                    filter: s.filter,
                    directFid: f,
                    isReadable: database.canRead(g),
                    conditionalStyling: s.conditionalStyling,
                  };
                  a.push(v);
                }
            }
          else {
            for (
              var u = 8, p = o.sorted, h = 0;
              h < p.length && a.length < u;
              h++
            ) {
              var m = p[h];
              if (m.isField) {
                var f = void 0;
                "fn" !== m.base &&
                  "file" !== m.base &&
                  "memory-local" !== m.binding &&
                  "memory-record" !== m.binding &&
                  (f = m.id);
                try {
                  var g;
                  if (
                    !(g = queries.parseSystem(
                      database.schema,
                      o,
                      m.id,
                      {},
                      !1
                    )).hasErrors() &&
                    !g.isMultiple() &&
                    !g.isUpdating()
                  ) {
                    var v = {
                      width: m.columnWidth,
                      expression: g,
                      field: g.returnType,
                      agg: void 0,
                      aggType: d,
                      directFid: f,
                      isReadable: database.canRead(m),
                    };
                    a.push(v);
                  }
                } catch (e) {}
              }
            }
            if (!a.length) {
              var b = queries.parseSystem(database.schema, o, "_id", {});
              a.push({
                width: 50,
                expression: b,
                field: b.returnType,
                agg: "cnt",
                aggType: aggregations.aggType("cnt", b.returnType),
                isReadable: !0,
              });
            }
          }
          (this.cols = a),
            (this.tid = i),
            (this.cidxSort = parseInt(e.sort)),
            isNaN(this.cidxSort) && (this.cidxSort = 0),
            (this.sortDescending = !0 === e.descending),
            (this.cidxGroup = void 0 === e.group ? void 0 : parseInt(e.group)),
            isNaN(this.cidxGroup) && (this.cidxGroup = void 0),
            (this.midChoosen = e.choosen || {}),
            (this.onlyChoosen = !0 === e.onlyChoosen),
            t &&
              ((this.midChoosen = t.midChoosen || {}),
              (this.onlyChoosen = !0 === t.onlyChoosen),
              (this.expanded = t.expanded || {}),
              (this.scrollTop = null == t.scrollTop ? 0 : t.scrollTop),
              (this.scrollLeft = null == t.scrollLeft ? 0 : t.scrollLeft),
              this.removeSelection(),
              (this.lastSelectedRow = t.selectionR0),
              (this.selectionMode = t.selectionMode),
              (this.selectionR0 = t.selectionR0),
              (this.selectionR1 = t.selectionR1),
              (this.selectionC0 = t.selectionC0),
              (this.selectionC1 = t.selectionC1),
              (this.selectionMid0 = t.selectionMid0),
              (this.selectionMid1 = t.selectionMid1)),
            this.createCells();
        }
      }),
      (_s.prototype.getNavigationState = function () {
        return {
          scrollLeft: this.scrollLeft,
          scrollTop: this.scrollTop,
          midChoosen: this.midChoosen,
          onlyChoosen: this.onlyChoosen,
          expanded: this.expanded,
          selectionMode: this.selectionMode,
          selectionR0: this.selectionR0,
          selectionR1: this.selectionR1,
          selectionC0: this.selectionC0,
          selectionC1: this.selectionC1,
          selectionMid0: this.selectionMid0,
          selectionMid1: this.selectionMid1,
        };
      }),
      (_s.prototype.getConfig = _s.prototype.getConfiguration =
        function () {
          for (var e = this.cols, t = [], i = 0; i < e.length; i++) {
            var o = e[i],
              a = {
                caption: o.caption,
                expression: o.expression.toString(),
                width: o.width,
                agg: o.agg,
                filter: o.filter,
                conditionalStyling: o.conditionalStyling,
              };
            t.push(a);
          }
          return {
            type: this.tid,
            cols: t,
            sort: this.cidxSort,
            descending: this.sortDescending,
            group: this.cidxGroup,
            choosen: this.midChoosen,
            onlyChoosen: this.onlyChoosen,
          };
        }),
      (_s.prototype.showOnlyChoosen = function () {
        (this.onlyChoosen = !0), this.reload();
      }),
      (_s.prototype.showAll = function () {
        (this.onlyChoosen = !1), this.reload();
      }),
      (_s.prototype.clearChoosen = function () {
        (this.midChoosen = {}),
          this.updateRows(),
          this.aggregateFoot(),
          this.updateFoot();
      }),
      (_s.prototype.toggleChoosen = function () {
        var e = this.midChoosen,
          t = (this.midChoosen = {}),
          i = this.models;
        for (var o in i) i.hasOwnProperty(o) && (e[o] || (t[o] = !0));
        this.updateRows(), this.aggregateFoot(), this.updateFoot();
      }),
      (_s.prototype.chooseAll = function () {
        var e = (this.midChoosen = {}),
          t = this.models;
        for (var i in t) t.hasOwnProperty(i) && (e[i] = !0);
        this.updateRows(), this.aggregateFoot(), this.updateFoot();
      }),
      (_s.prototype.removeAllChoosen = function () {
        var e = this,
          t = this.type;
        if (!database.canDelete(t)) return $.alert(locale.errorNotAuthorized);
        $.dialog({
          closable: !0,
          caption: locale.removeNRecords.replace(
            "$",
            Object.keys(e.midChoosen).length
          ),
          message: locale.confirmRemoveAllChoosen,
          buttons: [
            {
              color: "red",
              caption: locale.removeNRecords.replace(
                "$",
                Object.keys(e.midChoosen).length
              ),
              callback: function () {
                var t = e.midChoosen;
                (e.midChoosen = {}), database.removeAll(Q.keys(t));
              },
            },
          ],
        });
      }),
      (_s.prototype.touchHead = function (e) {
        var t = $(e.target).closest(".t-head-cell");
        if (t.length) {
          var i = t.attr("data-cidx");
          i && this.popupColumnMenu(parseInt(i), e);
        }
      }),
      (_s.prototype.unselect = function () {
        this.selectNothing();
      }),
      (_s.prototype.select = function (e, t, i) {
        if (e) {
          null == i && (i = this.getSelectedColumn());
          var o = this.rows.indexOf(e);
          -1 !== o ? this.selectCell(o, i, t) : this.selectNothing();
        } else this.selectNothing();
      }),
      (_s.prototype.scrollToRow = function (e) {
        var t = this.scrollTop,
          i = this.bodyHeight(),
          o = e * (this.rowHeight + ks);
        o < t
          ? this.scrollTo(this.scrollLeft, o)
          : o > t + i - (this.headHeight + this.footHeight) &&
            this.scrollTo(
              this.scrollLeft,
              o + (this.headHeight + this.footHeight) - i
            );
      }),
      (_s.prototype.scrollToCell = function (e, t) {
        var i = this.scrollLeft,
          o = this.scrollTop,
          a = this.bodyHeight(),
          n = this.$container.clientWidth - this.leftWidth,
          s = o;
        if (null != t) {
          var r = t * (this.rowHeight + ks);
          r < o
            ? (s = r)
            : r > o + a - (this.headHeight + this.footHeight) &&
              (s = r + (this.headHeight + this.footHeight) - a);
        }
        var l = i;
        if (null != e) {
          var c = this.colX(e, e) - this.leftWidth,
            d = c + this.colW(e, e);
          d > i + n && (l = Math.max(0, d - n)), c < i && (l = c);
        }
        (s === o && l === i) || this.scrollTo(l, s);
      }),
      (_s.prototype.scroll = function (e, t) {
        var i = this.scrollTop,
          o = this.scrollLeft,
          a = Math.floor(i / (this.rowHeight + ks)),
          n = this.ridxTop;
        a > this.ridxTop + Ss - 1
          ? (n = a)
          : a < this.ridxTop && (n = a - Ss + 1),
          n !== this.ridxTop &&
            ((this.ridxTop = n),
            this.updateRows(),
            this.updateSelection(),
            this.updateEditor());
        var s = i % (this.rowHeight + ks);
        s < 0 && (s += this.rowHeight + ks);
        var r = -(s + (a - n) * (this.rowHeight + ks)),
          l = -o;
        (this.$head.style.transform = this.$head.style.WebkitTransform =
          "translate3d(" + l + "px,0px,0px)"),
          (this.$rowHeads.style.transform =
            this.$rowHeads.style.WebkitTransform =
              "translate3d(" + Math.max(-l, 0) + "px,0px,0px)"),
          (this.$view.style.transform = this.$view.style.WebkitTransform =
            "translate3d(" + l + "px," + r + "px,0px)"),
          (this.viewX = l),
          (this.viewY = r),
          this.updateFootPosition(),
          this.updateScrollbar(t);
      }),
      (_s.prototype.updateFootPosition = function () {
        var e = this.rows.length + 1,
          t = this.containerHeight() - 2 * (this.rowHeight + ks);
        Math.max(t, (this.rowHeight + ks) * e) > t
          ? ((this.$foot.style.bottom = 0),
            (this.$foot.style.top = ""),
            (this.$footRuler.style.bottom = 0),
            (this.$footRuler.style.top = ""),
            (this.$foot.style.transform = this.$foot.style.WebkitTransform =
              "translate3d(" + this.viewX + "px,0px,0px)"),
            (this.$footRuler.style.transform =
              this.$footRuler.style.WebkitTransform =
                ""))
          : ((this.$scrollbarHContainer.style.bottom = 0),
            (this.$footRuler.style.top =
              e * (this.rowHeight + ks) + this.headHeight + "px"),
            (this.$footRuler.style.bottom = ""),
            (this.$footRuler.style.zIndex = 1),
            (this.$foot.style.top =
              e * (this.rowHeight + ks) + this.headHeight - 1 + "px"),
            (this.$foot.style.bottom = ""),
            (this.$foot.style.zIndex = 1),
            (this.$foot.style.transform = this.$foot.style.WebkitTransform =
              "translate3d(" +
              this.viewX +
              "px," +
              -this.scrollTop +
              "px,0px)"),
            (this.$footRuler.style.transform =
              this.$footRuler.style.WebkitTransform =
                "translate3d(0px," + -this.scrollTop + "px,0px)"));
      }),
      (_s.prototype.updateScrollbar = function (e) {
        var t = this.rows.length + 1,
          i = this.scrollTop,
          o = this.scrollLeft,
          a = this.containerHeight() - (this.headHeight + this.footHeight),
          n = Math.max(a, (this.rowHeight + ks) * t),
          s = this.viewWidth + 40,
          r = this.$container.clientWidth - this.rowHeadWidth,
          l = n > a,
          c = s > r + this.leftWidth,
          d = a,
          u = r,
          p = Math.max(40, Math.round((d * a) / n)),
          h =
            Math.max(0, Math.min(d - p, Math.round((i / (n - a)) * (d - p)))) +
            2,
          m = Math.max(40, Math.min(u, Math.round(u * (r / s)))),
          f = Math.max(
            0,
            Math.min(u - m, Math.round((o / (s - 40 - r)) * (u - m)))
          ),
          g = this.$scrollbarV;
        (g.style.top = h + "px"), (g.style.height = p + "px");
        var v = this.$scrollbarH;
        (v.style.left = f + "px"),
          (v.style.width = m + "px"),
          e &&
            ((this.scrollDoneTime = Date.now() + 1e3),
            this.scrollDoneTimeout ||
              (l && (g.className = "t-scrollbar-v scrolling"),
              c && (v.className = "t-scrollbar-h scrolling"),
              (this.scrollDoneTimeout = setTimeout(this.scrollDone, 1e3)))),
          (this.$scrollHIndicator.style.opacity = 0 != o ? 1 : 0),
          (this.$scrollVIndicator.style.opacity = 0 != i ? 1 : 0);
      }),
      (_s.prototype.scrollDone = function () {
        var e = Date.now(),
          t = this.scrollDoneTime - e;
        t < 100
          ? ((this.$scrollbarV.className = "t-scrollbar-v"),
            (this.$scrollbarH.className = "t-scrollbar-h"),
            (this.scrollDoneTimeout = null))
          : (this.scrollDoneTimeout = setTimeout(this.scrollDone, t));
      }),
      (_s.prototype.scrollTo = function (e, t) {
        (this.scrollTop = t), (this.scrollLeft = e), this.scroll(!1, !0);
      }),
      (_s.prototype.scrollToVisible = function () {
        var e = this.scrollTop,
          t = this.bodyHeight(),
          i = Math.max(0, (this.rows.length + 1) * (this.rowHeight + ks) - t);
        e > i && (this.scrollTop = i), this.scroll(!0, !1);
      }),
      (_s.prototype.resizeListener = function () {
        this.resize();
      }),
      (_s.prototype.resize = function () {
        this.createCells(),
          this.updateHead(),
          this.updateRows(),
          this.updateFoot(),
          this.updateScrollbar(!1),
          this.updateSelection();
      }),
      (_s.prototype.rowsPerPage = function () {
        var e = this.bodyHeight();
        return Math.floor(e / (this.rowHeight + ks));
      }),
      (_s.prototype.createCells = function () {
        var e = this.$head,
          t = this.$foot,
          i = this.$view,
          o = (this.$body, this.cols);
        this.removeSelection(), $EMPTY(e), $EMPTY(t), $EMPTY(i);
        for (var a = 0; a < o.length; a++) {
          ((p = o[a]).$headCell = $DIV("t-head-cell", e, { "data-cidx": a })),
            $DIV("t-head-resizer", p.$headCell),
            ($EL("span", p.$headCell).innerHTML = htmlEscape(
              p.caption || p.expression.caption
            )),
            (p.$footCell = $DIV("t-foot-cell t-foot-cell-" + p.field.base, t));
        }
        var n = (this.$rowHeads = $DIV("t-rowheads"));
        (this.$selectionContainer = $DIV("t-selection-container")),
          (this.$headSelectionContainer = $DIV("t-head-selection-container"));
        for (
          var s = this.bodyHeight(),
            r = Ss + Math.ceil(s / (this.rowHeight + ks)),
            l = [],
            c = 0;
          c < r;
          c++
        ) {
          var d = $DIV("t-row", i, { "data-ridx": c });
          (d.style.top = c * (this.rowHeight + ks) + "px"),
            (d.style.height = this.rowHeight + "px"),
            ((e = $DIV("t-rowhead", n, { "data-ridx": c })).style.top =
              c * (this.rowHeight + ks) + "px"),
            (e.style.height = this.rowHeight + "px"),
            $DIV("t-rowhead-content", e),
            $DIV("t-rowhead-resizer", e);
          var u = [];
          for (a = 0; a < o.length; a++) {
            var p = o[a];
            u[a] = $DIV("--ul-row-cell t-cell t-cell-" + p.field.base, d);
          }
          var h = { $row: d, $head: e, $cells: u };
          l.push(h);
        }
        n.appendChild(this.$headSelectionContainer),
          i.appendChild(this.$selectionContainer),
          i.appendChild(n),
          (this.viewRows = l),
          this.createSelection(),
          this.resizeColumns(),
          this.resizeRows();
      }),
      (_s.prototype.resizeRows = function () {
        for (var e = this.viewRows, t = 0; t < e.length; t++) {
          var i = e[t];
          (i.$head.style.top = t * (this.rowHeight + ks) + "px"),
            (i.$head.style.height = this.rowHeight + "px"),
            (i.$row.style.top = t * (this.rowHeight + ks) + "px"),
            (i.$row.style.height = this.rowHeight + "px");
          for (
            var o = i.$cells,
              a = this.cols,
              n =
                this.rowHeight < 40
                  ? Math.floor((this.rowHeight - 18) / 2) + "px"
                  : "",
              s = 0;
            s < a.length;
            s++
          )
            o[s].style.paddingTop = n;
        }
        this.$view.className =
          this.rowHeight <= "40" ? "t-view" : "t-view t-view-resized-rows";
      }),
      (_s.prototype.containerHeight = function () {
        return (
          window.getHeight() - ui.headHeight - ui.footHeight - ui.topPadding
        );
      }),
      (_s.prototype.bodyHeight = function () {
        return this.containerHeight() - (this.headHeight + this.footHeight);
      }),
      (_s.prototype.updateRows = function () {
        this._updateRowsId = (this._updateRowsId || 0) + 1;
        const e = this._updateRowsId;
        if (!this.visible) return;
        if (!this.ready) return;
        if (this.silent) return;
        const t = this.viewRows,
          i = this.midChoosen,
          o = this.expanded,
          a = this.models,
          n = this.groups,
          s = this.ridxTop,
          r = this.cidxGroup,
          l = this.rows,
          c = this.cols;
        this.updateFootPosition();
        let d = 0;
        for (let u = 0; u < t.length; u++) {
          const p = t[u],
            h = p.$row,
            m = p.$head,
            f = u + s,
            g = p.$cells;
          let v = !1,
            b = !1,
            y = !1;
          if (f < 0 || f >= l.length)
            for (let e = 0; e < c.length; e++) {
              c[e];
              const t = g[e];
              (t.innerHTML = ""), (t.style.backgroundColor = "");
            }
          else {
            const t = l[f],
              s = n[t] || a[t];
            if (s) {
              const a = s.values;
              (v = !!i[t]), (b = !!n[t]), (y = b && !!o[t]), b ? (d = 0) : d++;
              for (let i = 0; i < c.length; i++) {
                const o = c[i],
                  n = g[i];
                if (o.isReadable) {
                  const s = a[i],
                    l = n.innerHTML;
                  let c = "",
                    d = "",
                    u = !1;
                  if (b && o.agg && i !== r) {
                    const e = o.aggType.format(s);
                    null != e && (c = tables.aggTypeToSymbol(o.agg, e));
                  } else {
                    const i = o.field,
                      a = i.base;
                    if ("choice" === a) {
                      const e = i.getValues()[s];
                      e &&
                        (c += `\n                                            <div \n                                                class="multicombo-item" \n                                                style="${
                          e.color
                            ? "background-color:" +
                              e.color +
                              ";color:" +
                              util.contrastingTextColorTo(e.color)
                            : ""
                        }"\n                                            >\n                                                ${
                          e.icon
                            ? `<div class="choice-symbol ic ic-${e.icon}"></div>`
                            : ""
                        }\n                                                <span>${htmlEscape(
                          e.caption || ""
                        )}</span>\n                                            </div>`);
                    } else if ("dchoice" === a)
                      (u = !0),
                        i.loadValue(t, s, (t) => {
                          if (e === this._updateRowsId)
                            if (t) {
                              const e = `\n                                                <div \n                                                    class="multicombo-item" \n                                                    style="${
                                t.color
                                  ? "background-color:" +
                                    t.color +
                                    ";color:" +
                                    util.contrastingTextColorTo(t.color)
                                  : ""
                              }"\n                                                >\n                                                    ${
                                t.icon
                                  ? `<div class="choice-symbol ic ic-${t.icon}"></div>`
                                  : ""
                              }\n                                                    <span>${htmlEscape(
                                t.caption || ""
                              )}</span>\n                                                </div>`;
                              (n.innerHTML = e), (n.style.background = "");
                            } else
                              (n.innerHTML = ""), (n.style.background = "");
                        });
                    else if ("multi" === a) {
                      const e = util.multiDecode(s);
                      if (e) {
                        const t = i.getValues();
                        e.sort(function (e, i) {
                          const o = t[e],
                            a = t[i];
                          return o ? (a ? o.order - a.order : -1) : 0;
                        });
                        for (let i = 0; i < e.length; i++) {
                          const o = t[e[i]];
                          o &&
                            (c += `\n                                            <div \n                                                class="multicombo-item" \n                                                style="${
                              o.color
                                ? "background-color:" +
                                  o.color +
                                  ";color:" +
                                  util.contrastingTextColorTo(o.color)
                                : ""
                            }"\n                                            >\n                                                ${
                              o.icon
                                ? `<div class="choice-symbol ic ic-${o.icon}"></div>`
                                : ""
                            }\n                                                <span>${htmlEscape(
                              o.caption || ""
                            )}</span>\n                                            </div>`);
                        }
                      }
                    } else if ("dmulti" === a) {
                      const o = util.multiDecode(s);
                      o &&
                        ((u = !0),
                        i.loadValues(t, (t, i) => {
                          if (e === this._updateRowsId) {
                            i = i || {};
                            let e = "";
                            o.sort(function (e, t) {
                              const o = i[e],
                                a = i[t];
                              return o ? (a ? o.order - a.order : -1) : 0;
                            });
                            for (let t = 0; t < o.length; t++) {
                              const a = i[o[t]];
                              a &&
                                (e += `\n                                                    <div \n                                                        class="multicombo-item" \n                                                        style="${
                                  a.color
                                    ? "background-color:" +
                                      a.color +
                                      ";color:" +
                                      util.contrastingTextColorTo(a.color)
                                    : ""
                                }"\n                                                    >\n                                                        ${
                                  a.icon
                                    ? `<div class="choice-symbol ic ic-${a.icon}"></div>`
                                    : ""
                                }\n                                                        <span>${htmlEscape(
                                  a.caption || ""
                                )}</span>\n                                                    </div>`);
                            }
                            (n.innerHTML = e), (n.style.background = "");
                          }
                        }));
                    } else if ("color" === a)
                      s &&
                        (c += `<div\n                                        class="t-cell-content-colored" \n                                        style="background-color:${s}"></div>`);
                    else if ("icon" === a)
                      s &&
                        (c =
                          '<div class="choice-symbol ic ic-' + s + '"></div>');
                    else if (
                      ("number" === a || "string" === a) &&
                      null != o.conditionalStyling &&
                      o.conditionalStyling.length > 0
                    ) {
                      let e = !1;
                      for (
                        let a = 0;
                        a < o.conditionalStyling.length && !e;
                        a++
                      ) {
                        const n = o.conditionalStyling[a];
                        switch (n.operand) {
                          case "=":
                            s === n.value && (e = !0);
                            break;
                          case ">":
                            s > n.value && (e = !0);
                            break;
                          case ">=":
                            s >= n.value && (e = !0);
                            break;
                          case "<":
                            s < n.value && (e = !0);
                            break;
                          case "<=":
                            s <= n.value && (e = !0);
                            break;
                          case "!=":
                            null != s && s !== n.value && (e = !0);
                            break;
                          case "startsWith":
                            null != s &&
                              String(s).startsWith(n.value) &&
                              (e = !0);
                            break;
                          case "endsWith":
                            null != s &&
                              String(s).endsWith(n.value) &&
                              (e = !0);
                            break;
                          case "contains":
                            null != s &&
                              String(s).includes(n.value) &&
                              (e = !0);
                            break;
                          case "f(x)": {
                            const i = database.loadNodeSync(t),
                              o = queries.parseSystem(
                                database.schema,
                                this.type,
                                n.value,
                                {}
                              );
                            if (i && o) {
                              o.evaluateSync(database, i) && (e = !0);
                            }
                            break;
                          }
                        }
                        e &&
                          ((c = `\n                                            <div \n                                                class="multicombo-item" \n                                                style="${
                            "background-color:" +
                              (n.background || "") +
                              ";color:" +
                              n.color || !1
                          }"\n                                            >\n                                                ${
                            n.icon
                              ? `<div class="choice-symbol ic ic-${n.icon}"></div>`
                              : ""
                          }\n                                                <span>${htmlEscape(
                            i.format(s)
                          )}</span>\n                                            </div>`),
                          (d = n.cell || ""));
                      }
                      e || (c = htmlEscape(i.format(s)));
                    } else if ("styled" === a)
                      s &&
                        (c += `<div \n                                        class="multicombo-item" \n                                        style="${
                          s.background
                            ? `background-color:${s.background};`
                            : ""
                        }${
                          s.color ? `color:${s.color};` : ""
                        }"\n                                    >\n                                        ${
                          s.icon
                            ? `<div class="choice-symbol ic ic-${s.icon}"></div>`
                            : ""
                        }\n                                        <span>${htmlEscape(
                          s.text || ""
                        )}</span>\n                                    </div>`);
                    else if ("file" === i.base) {
                      if (s) {
                        const e = database.thumbURL1(s);
                        e && (c = '<img style="height:100%" src="' + e + '">');
                      }
                    } else {
                      const e = i.format(s);
                      c = htmlEscape(e);
                    }
                  }
                  u || (l !== c && (n.innerHTML = c), (n.style.background = d));
                } else
                  (n.innerHTML = ""), (n.style.backgroundColor = "#f7f7f7");
              }
            }
          }
          const w = null == r && (u + s) % 2 == 0,
            x =
              "t-row" +
              (f === l.length
                ? " new --ul-new-row"
                : f < 0 || f > l.length
                ? " empty"
                : (v ? " choosen" : b ? " group" : "") +
                  (w ? " t-row-2nd" : " t-row-1st"));
          x !== h.className && (h.className = x),
            (m.firstChild.innerHTML =
              f < 0 || f >= l.length || v || b ? "" : String(f + 1));
          const T =
            "t-rowhead" +
            (f === l.length
              ? " i-16 i-light-grey i-plus"
              : f < 0 || f > l.length
              ? "empty"
              : v
              ? " choosen i-16 i-blue i-check"
              : b
              ? y
                ? " group i-24 i-light-grey i-line-down"
                : " group i-24 i-light-grey i-line-right"
              : "");
          T !== m.className && (m.className = T);
        }
      }),
      (_s.prototype.resizeColumns = function () {
        for (
          var e = this.viewRows, t = this.cols, i = 0, o = 0;
          o < e.length;
          o++
        ) {
          var a = e[o];
          i = this.leftWidth;
          for (var n = 0; n < t.length; n++) {
            var s = (l = t[n]).width,
              r = a.$cells[n];
            (r.style.left = i + "px"), (r.style.width = s + "px"), (i += s);
          }
        }
        i = this.leftWidth;
        for (n = 0; n < t.length; n++) {
          var l;
          (l = t[n]).left = i;
          s = l.width;
          var c = l.$headCell;
          (c.style.left = i + "px"), (c.style.width = s + "px");
          var d = l.$footCell;
          (d.style.left = i + "px"), (d.style.width = s + "px"), (i += s);
        }
        (this.viewWidth = i),
          (this.$head.style.width = i + "px"),
          (this.$foot.style.width = i + "px"),
          this.updateScrollbar(),
          this.updateSelection(),
          this.updateEditor();
      }),
      (_s.prototype.toggle = function (e) {
        this.groups[e] &&
          (this.expanded[e] ? this.collapse(e) : this.expand(e));
      }),
      (_s.prototype.expandSilently = function (e) {
        var t = this.groups[e];
        if (t && !this.expanded[e]) {
          var i = this.rows.indexOf(e);
          -1 !== i &&
            ((this.expanded[e] = !0),
            (this.rows = this.rows
              .slice(0, i + 1)
              .concat(t.children)
              .concat(this.rows.slice(i + 1))));
        }
      }),
      (_s.prototype.expand = function (e) {
        this.expandSilently(e),
          this.updateRows(),
          this.rowsChanged(),
          this.retainSelection();
      }),
      (_s.prototype.expandAll = function () {
        var e = this.expanded,
          t = this.groups,
          i = this.rows,
          o = !1;
        for (var a in t)
          if (t.hasOwnProperty(a) && !e[a]) {
            var n = t[a],
              s = i.indexOf(a);
            (i = i
              .slice(0, s + 1)
              .concat(n.children)
              .concat(i.slice(s + 1))),
              (e[a] = !0),
              (o = !0);
          }
        o &&
          ((this.rows = i),
          this.updateRows(),
          this.rowsChanged(),
          this.retainSelection());
      }),
      (_s.prototype.collapse = function (e) {
        var t = this.groups[e];
        if (t && this.expanded[e]) {
          delete this.expanded[e];
          var i = this.rows.indexOf(e);
          -1 !== i &&
            ((this.rows = this.rows
              .slice(0, i + 1)
              .concat(this.rows.slice(i + 1 + t.children.length))),
            this.updateRows(),
            this.rowsChanged(),
            this.retainSelection(!0));
        }
      }),
      (_s.prototype.collapseAll = function () {
        var e = this.expanded,
          t = this.groups,
          i = this.rows,
          o = !1;
        for (var a in t)
          if (t.hasOwnProperty(a) && e[a]) {
            var n = t[a],
              s = i.indexOf(a);
            (i = i.slice(0, s + 1).concat(i.slice(s + 1 + n.children.length))),
              delete e[a],
              (o = !0);
          }
        o &&
          ((this.rows = i),
          this.updateRows(),
          this.rowsChanged(),
          this.retainSelection(!0));
      }),
      (_s.prototype.getDependencies = function () {
        for (var e = this.cols, t = {}, i = 0; i < e.length; i++) {
          var o = e[i];
          t = queries.extendDependencies(t, o.expression.dependencies);
        }
        return t;
      }),
      (_s.prototype.load = function (e) {
        console.log("Table.load: " + this.tid);
        var t = this;
        t._loadCallbacks.push(e), (t.ready = !1);
        var i = (t._reloadId || 0) + 1;
        t._reloadId = i;
        var o = database.schema.types[t.tid];
        if (!o) return c("Type not found " + t.tid);
        if (o.isNew) return c();
        var a = t.getWhereExpression(),
          n = t.getDependencies();
        function s() {
          database.selectFromTypeWhere(o.id, a, function (e, o) {
            if (i === t._reloadId) {
              Date.now();
              if (e) return c(e);
              l(o);
            }
          });
        }
        function r() {
          var e = t.getSQLFilter();
          database.selectFromTypeWhereSQL(o.id, a, e, function (e, o) {
            if (i === t._reloadId) return e ? c(e) : void l(o);
          });
        }
        function l(e) {
          database.loadNodes2(e, n, function (a) {
            if (i === t._reloadId)
              return a
                ? c(a)
                : void database.filterReadable(o, e, function (e) {
                    i === t._reloadId &&
                      t.calc(i, e, function () {
                        i === t._reloadId &&
                          (t.resort(),
                          t.scrollToVisible(),
                          console.log("Table.load loaded: " + t.tid, t.rows),
                          t.container.loaded(),
                          c());
                      });
                  });
          });
        }
        function c(e) {
          console.log("Table.load done: " + t.tid);
          var i = t._loadCallbacks;
          t._loadCallbacks = [];
          for (var o = 0; o < i.length; o++)
            try {
              i[o](e);
            } catch (e) {
              console.log(e);
            }
        }
        database.selectFromTypeWhereSQL ? r() : s();
      }),
      (_s.prototype.getSQLFilter = function () {
        this.type;
        for (var e = [], t = this.cols, i = 0; i < t.length; i++) {
          var o = t[i];
          if (o.filter && o.directFid && o.field.isSQLFilterable)
            try {
              var a = queries.parseFilter(o.filter);
              a.isSQLFilterable && e.push(a.toSQLFilter("f_" + o.directFid));
            } catch (e) {
              console.warn(e);
            }
        }
        return e.join(" AND ");
      }),
      (_s.prototype.getWhereExpression = function () {
        for (var e = [], t = this.cols, i = 0; i < t.length; i++) {
          var o = t[i];
          if (o.filter)
            try {
              var a = queries.parseFilter(o.filter);
              a && e.push("(" + a.toQueryPart(o.expression.toString()) + ")");
            } catch (e) {
              console.warn(e);
            }
        }
        if (e.length) {
          var n = e.join(" and ");
          return queries.parseSystem(database.schema, this.type, n, {});
        }
      }),
      (_s.prototype.calc = function (e, t, i) {
        for (
          var o = this,
            a = database.isSync,
            n = {},
            s = [],
            r = o.cols,
            l = [],
            c = [],
            d = o.midChoosen,
            u = o.onlyChoosen,
            p = 1,
            h = 0;
          h < r.length;
          h++
        ) {
          var m = (x = r[h]).expression;
          x.directFid
            ? ((l[h] = x.directFid), (c[h] = void 0))
            : ((l[h] = void 0),
              a || m.isSync() ? (c[h] = m.getSyncJS()) : (c[h] = void 0));
        }
        for (var f = 0; f < t.length; f++) {
          var g = t[f],
            v = [],
            b = database.loadNodeSync(g);
          if (b) {
            var y = { id: g, values: (v = []) };
            (n[g] = y), u ? d[g] && s.push(g) : s.push(g);
            for (h = 0; h < r.length; h++) {
              var w = l[h];
              if (w) v[h] = b[w];
              else {
                var x,
                  T = c[h];
                if (T) v[h] = T(T.ctx, database, b);
                else C((m = (x = r[h]).expression), b, v, h);
              }
            }
          }
        }
        function C(t, i, a, n) {
          p++;
          var s = t.getAsyncJS();
          s(s.ctx, database, i, {}, function (t) {
            e === o._reloadId && ((a[n] = t), 0 === --p && k());
          });
        }
        function k() {
          if (e === o._reloadId) {
            (o.groups = {}),
              (o.groupsSorted = []),
              (o.models = n),
              (o.rows = s),
              (o.removedIndex = {});
            var t = o.midChoosen,
              a = {};
            for (var r in t) t.hasOwnProperty(r) && n[r] && (a[r] = !0);
            (o.midChoosen = a), i();
          }
        }
        0 === --p && k();
      }),
      (_s.prototype.recalc = function (e, t) {
        var i = 1,
          o = database.isSync,
          a = this.models[e];
        if (a) {
          var n = a.values,
            s = database.loadNodeSync(e),
            r = this.cols;
          if (s)
            for (var l = 0; l < r.length; l++) {
              var c = r[l],
                d = c.expression,
                u = c.directFid;
              u
                ? (n[l] = s[u])
                : o || d.isSync()
                ? (n[l] = d.evaluateSync(database, s))
                : p(d, s, n, l);
            }
          else {
            console.warn("MISSING NODE", e);
            for (l = 0; l < r.length; l++) n[l] = void 0;
          }
          0 === --i && h();
        }
        function p(e, t, o, a) {
          i++;
          var n = e.getAsyncJS();
          n(n.ctx, database, t, {}, function (e) {
            (o[a] = e), 0 === --i && h();
          });
        }
        function h() {
          t();
        }
      }),
      (_s.prototype.aggregate = function () {
        this.aggregateGroups(), this.aggregateFoot();
      }),
      (_s.prototype.aggregateGroups = function () {
        var e = this.groups,
          t = this.cols,
          i = this.cidxGroup;
        for (var o in e)
          if (e.hasOwnProperty(o))
            for (
              var a = e[o], n = this._aggregate(a.children), s = 0;
              s < t.length;
              s++
            ) {
              if (s !== i)
                t[s].agg ? (a.values[s] = n[s]) : (a.values[s] = void 0);
            }
      }),
      (_s.prototype.aggregateFoot = function () {
        var e,
          t,
          i,
          o,
          a,
          n,
          s = this.rows,
          r = this.midChoosen,
          l = this.models,
          c = this.groups,
          d = this.expanded,
          u = [];
        if (null != this.cidxGroup) {
          if (Q.isEmpty(r))
            for (t = 0; t < s.length; t++)
              l[(i = s[t])]
                ? u.push(i)
                : (e = c[i]) && !d[i] && (u = u.concat(e.children));
          else
            for (t = 0; t < s.length; t++)
              if (l[(i = s[t])] && r[i]) u.push(i);
              else if ((e = c[i]) && !d[i])
                for (a = e.children, o = 0; o < a.length; o++)
                  l[(n = a[o])] && r[n] && u.push(n);
        } else if (Q.isEmpty(r))
          for (t = 0; t < s.length; t++) l[(i = s[t])] && u.push(i);
        else for (t = 0; t < s.length; t++) r[(i = s[t])] && u.push(i);
        this.foot = { values: this._aggregate(u) };
      }),
      (_s.prototype._aggregate = function (e) {
        for (
          var t = this.cols, i = this.models, o = [], a = 0;
          a < t.length;
          a++
        ) {
          switch ((u = t[a]).agg) {
            case "sum":
            case "cnt":
              o[a] = 0;
              break;
            case "avg":
              o[a] = [0, 0];
              break;
            case "min":
              o[a] = 1 / 0;
              break;
            case "max":
              o[a] = -1 / 0;
              break;
            case "first":
            case "last":
              o[a] = null;
              break;
            case "concat":
              o[a] = [];
          }
        }
        for (var n = 0; n < e.length; n++) {
          var s = i[e[n]];
          if (s) {
            var r = s.values;
            for (a = 0; a < t.length; a++) {
              if ((u = t[a]).agg) {
                var l = r[a],
                  c = Number(l);
                switch (u.agg) {
                  case "sum":
                    isNaN(c) || (o[a] += c);
                    break;
                  case "cnt":
                    null != l && !1 !== l && "" !== l && o[a]++;
                    break;
                  case "avg":
                    null == l ||
                      "number" != typeof l ||
                      isNaN(c) ||
                      ((o[a][0] += c), o[a][1]++);
                    break;
                  case "min":
                    null !== l && l < o[a] && (o[a] = l);
                    break;
                  case "max":
                    null !== l && l > o[a] && (o[a] = l);
                    break;
                  case "first":
                    0 === n && (o[a] = l);
                    break;
                  case "last":
                    n === e.length - 1 && (o[a] = l);
                    break;
                  case "concat":
                    null != l &&
                      (o[a].length < 20
                        ? o[a].push(u.field.format(l))
                        : 20 === o[a].length && o[a].push("..."));
                }
              }
            }
          }
        }
        var d = [];
        for (a = 0; a < t.length; a++) {
          var u;
          switch ((u = t[a]).agg) {
            case "sum":
            case "cnt":
              d[a] = o[a];
              break;
            case "avg":
              d[a] = o[a][1] > 0 ? o[a][0] / o[a][1] : void 0;
              break;
            case "min":
              d[a] = o[a] === 1 / 0 ? void 0 : o[a];
              break;
            case "max":
              d[a] = o[a] === -1 / 0 ? void 0 : o[a];
              break;
            case "first":
            case "last":
              d[a] = o[a];
              break;
            case "concat":
              d[a] = o[a].join(", ");
              break;
            default:
              d[a] = void 0;
          }
        }
        return d;
      }),
      (_s.prototype.updateHead = function () {
        for (
          var e = this.cols,
            t = this.sortDescending,
            i = this.cidxGroup,
            o = this.cidxSort,
            a = 0;
          a < e.length;
          a++
        ) {
          var n = e[a],
            s = n.$headCell,
            r = a === i,
            l = a === o,
            c = !!n.filter,
            d =
              '<div class="t-head-resizer"></div><span>' +
              htmlEscape(n.caption || n.expression.caption) +
              "</span>" +
              (c
                ? '<div class="i-40-16 i-light-grey i-setting-filter" style="width: 12px;"></div>'
                : "") +
              (r
                ? '<div class="i-40-18 i-light-grey i-table-group" style="width: 24px"></div>'
                : l
                ? t
                  ? '<div class="i-40-12 i-light-grey i-line-down-thick" style="width: 12px;"></div>'
                  : '<div class="i-40-12 i-light-grey i-line-up-thick" style="width: 12px;"></div>'
                : "");
          s.innerHTML = d;
        }
      }),
      (_s.prototype.updateFoot = function () {
        if (this.visible && this.ready && !this.silent) {
          for (var e = this.cols, t = this.foot, i = 0; i < e.length; i++) {
            var o = e[i];
            if (o.isReadable)
              if (o.agg) {
                o.aggType.base;
                var a = o.aggType.format(t.values[i]);
                null == a && (a = "");
                var n = tables.aggTypeToSymbol(o.agg, a);
                o.$footCell.innerHTML = n;
              } else o.$footCell.innerHTML = "";
            else o.$footCell.innerHTML = "";
          }
          Q.isEmpty(this.midChoosen) && !this.onlyChoosen
            ? ((this.$footRuler.className = "t-foot-ruler"),
              (this.$foot.className = "t-foot"))
            : ((this.$footRuler.className = "t-foot-ruler choosen"),
              (this.$foot.className = "t-foot choosen"));
        }
      }),
      (_s.prototype.resort = function () {
        void 0 === this.cidxGroup
          ? this.sort(this.cidxSort, this.sortDescending)
          : this.group(this.cidxGroup, this.cidxSort, this.sortDescending);
      }),
      (_s.prototype.sort = function (e, t) {
        if (void 0 !== this.cidxGroup) return this.group(this.cidxGroup, e, t);
        var i = this.models,
          o = this.rows;
        (this.removedIndex = {}), (this.groups = {}), (this.groupsSorted = []);
        var a = this.cols[e];
        if (a) {
          var n = a.field;
          (this.cidxSort = e),
            (this.cidxGroup = void 0),
            (this.sortDescending = !0 === t);
          var s = this.sortDescending ? -1 : 1,
            r = n.comparator;
          if (r) {
            for (var l = [], c = 0; c < o.length; c++) {
              var d = o[c],
                u = i[d];
              l[c] = [n.comparable(u.values[e]), d];
            }
            "string" === r
              ? l.sort(function (e, t) {
                  return s * e[0].localeCompare(t[0]);
                })
              : "number" === r &&
                l.sort(function (e, t) {
                  return s * (e[0] - t[0]);
                });
            for (c = 0; c < o.length; c++) o[c] = l[c][1];
          }
        }
        this.aggregate(),
          (this.ready = !0),
          this.updateRows(),
          this.updateHead(),
          this.updateFoot(),
          this.retainSelection();
      }),
      (_s.prototype.ungroup = function () {
        (this.cidxGroup = void 0),
          (this.expanded = {}),
          (this.rows = Q.keys(this.models)),
          this.sort(this.cidxSort, this.sortDescending);
      }),
      (_s.prototype.group = function (e, t, i) {
        (i = this.sortDescending = !0 === i),
          (t = this.cidxSort = void 0 === t ? this.cidxSort : t);
        var o = this.models,
          a = this.cols,
          n = a[e],
          s = a[t];
        if (!n) return (this.cidxGroup = void 0), void this.sort(t, i);
        if (
          ((this.cidxGroup = e),
          (this.removedIndex = {}),
          s || ((this.cidxSort = 0), (s = a[0])),
          s && n)
        ) {
          var r = n.field,
            l = s.field,
            c = {},
            d = [];
          for (var u in o)
            if (
              o.hasOwnProperty(u) &&
              (!this.onlyChoosen || this.midChoosen[u])
            ) {
              var p = o[u].values[e],
                h = "_group_" + (null == p ? "" : JSON.stringify(p));
              (b = c[h]) ||
                ((b = { id: h, value: p, children: [], values: [] }),
                (c[h] = b),
                (b.values[e] = p),
                d.push(h)),
                b.children.push(u);
            }
          var m = this.sortDescending ? -1 : 1;
          for (var f in c) {
            if (c.hasOwnProperty(f))
              (b = c[f]).children.sort(function (e, i) {
                var a = o[e],
                  n = o[i],
                  s = a.values[t],
                  r = n.values[t];
                return m * l.compare(s, r);
              });
          }
          (m = e === t && i ? -1 : 1),
            d.sort(function (e, t) {
              var i = c[e],
                o = c[t];
              return m * r.compare(i.value, o.value);
            }),
            (this.cidxGroup = e),
            (this.groups = c),
            (this.groupsSorted = d),
            (this.rows = d);
          var g = this.expanded,
            v = {};
          for (var f in g) {
            var b;
            if (g.hasOwnProperty(f))
              if ((b = c[f])) {
                var y = this.rows.indexOf(f);
                (this.rows = this.rows
                  .slice(0, y + 1)
                  .concat(b.children)
                  .concat(this.rows.slice(y + 1))),
                  (v[f] = !0);
              }
          }
          this.expanded = v;
        }
        this.aggregate(),
          (this.ready = !0),
          this.updateRows(),
          this.updateHead(),
          this.updateFoot(),
          this.retainSelection();
      }),
      (_s.prototype.openFindMenu = function () {
        var e = this,
          t = $.backplane({}),
          i = $(
            '<div class="nx-menu-popup grey find-popup-width" style="border-radius:4px">'
          ).appendTo(t);
        $("<h1>").text(locale.search).appendTo(i);
        var o = $.input({ $container: i, enter: n, escape: r }),
          a = [];
        function n() {
          var t = o.val();
          r(), e.applyFind(t);
        }
        function s() {
          r(), e.clearFind();
        }
        function r() {
          t.close();
        }
        a.push({ caption: locale.cancel, click: r }),
          a.push("-"),
          (!e.onlyChoosen && Q.isEmpty(e.midChoosen)) ||
            (a.push({ caption: locale.showAll, click: s }), a.push(" ")),
          a.push({ caption: locale.search, click: n, cls: "blue" }),
          $.buttons({ $container: i, items: a }),
          i.center(),
          o.focus();
      }),
      (_s.prototype.clearFind = function () {
        (this.midChoosen = {}), this.showAll();
      }),
      (_s.prototype.applyFind = function (e) {
        if (e && "string" == typeof e) {
          Object(l.f)("TableSearch", "Apply");
          var t = e.toLocaleLowerCase().trim().split(" ");
          if (!(t.length < 1)) {
            for (var i = [], o = [], a = [], n = 0; n < t.length; n++) {
              var s = t[n];
              s.length > 0 &&
                (i.push(s), o.push(Number(s)), a.push(util.containsRegExp(s)));
            }
            if (!(i.length < 1)) {
              var r = {},
                c = this.cols,
                d = this.models;
              for (var u in d) {
                if (d.hasOwnProperty(u)) p(d[u]) && (r[u] = !0);
              }
              (this.midChoosen = r), this.showOnlyChoosen();
            }
          }
        }
        function p(e) {
          var t,
            n,
            s,
            r,
            l,
            d,
            u = e.values,
            p = !0;
          e: for (t = 0; t < a.length; t++) {
            for (s = a[t], o[t], i[t], n = 0; n < c.length; n++)
              if (((r = c[n].field), null != (l = u[n])))
                switch (r.base) {
                  case "string":
                  case "html":
                  case "file":
                  case "link":
                  case "email":
                    if (s.test(l)) continue e;
                    break;
                  case "choice":
                    if ((d = r.values[l]) && s.test(d.caption)) continue e;
                    break;
                  default:
                    if (s.test(r.format(l))) continue e;
                }
            p = !1;
            break e;
          }
          return p;
        }
      }),
      (_s.prototype.openContextMenu = function (e) {
        (this.contextState = {
          target: {
            getBoundingClientRect: () => ({
              bottom: e.clientY,
              height: 0,
              left: e.clientX,
              right: e.clientX,
              top: e.clientY,
              width: 0,
            }),
          },
        }),
          this.isTableEditMode()
            ? (this.contextState.items = this.openContextMenu_TABLE(e))
            : (this.contextState.items = this.openContextMenu_FORM(e)),
          this.updateUI();
      }),
      (_s.prototype.openContextMenu_TABLE = function (e) {
        return (
          e.preventDefault(),
          [
            {
              text: locale.cut,
              onClick: () => NinoxDocumentInteraction.execCut(),
            },
            {
              text: locale.copy,
              onClick: () => NinoxDocumentInteraction.execCopy(),
            },
            {
              text: locale.paste,
              onClick: () => NinoxDocumentInteraction.execPaste(),
            },
          ]
        );
      }),
      (_s.prototype.openContextMenu_FORM = function (e) {
        var t = this.type,
          i = $(e.target).closest(".t-head-cell");
        if (i.length) {
          var o = parseInt(i.attr("data-cidx"));
          return (
            null != o && this.popupColumnMenu(o, e), void e.preventDefault()
          );
        }
        var a = !Q.isEmpty(this.midChoosen),
          n = this;
        const s = [];
        return (
          s.push({
            text: locale.clearSelection,
            onClick: () => n.clearChoosen(),
            disabled: !a,
          }),
          s.push({
            text: locale.toggleSelection,
            onClick: () => n.toggleChoosen(),
            disabled: !a,
          }),
          s.push({ text: locale.selectAll, onClick: () => n.chooseAll() }),
          s.push({
            topBorder: !0,
            text: locale.showOnlyChoosen,
            onClick: () => n.showOnlyChoosen(),
            disabled: !a || n.onlyChoosen,
          }),
          s.push({
            text: locale.showAll,
            onClick: () => n.showAll(),
            disabled: !n.onlyChoosen,
          }),
          null != n.cidxGroup &&
            (s.push({
              topBorder: !0,
              text: locale.expandAll,
              onClick: () => n.expandAll(),
            }),
            s.push({
              text: locale.collapseAll,
              onClick: () => n.collapseAll(),
            })),
          s.push({
            topBorder: !0,
            text: locale.removeAllChoosen,
            onClick: () => n.removeAllChoosen(),
            disabled: !a || (a && !database.canDelete(t)),
          }),
          e.preventDefault(),
          s
        );
      }),
      (_s.prototype.exportData = function () {
        new bs(this);
      }),
      (_s.prototype.setColumnWidth = function (e, t, i, o) {
        var a = this.cols[e];
        a &&
          (null == t && (t = a.width),
          (a.width = i),
          this.resizeColumns(),
          this.saveView(),
          o && o());
      }),
      (_s.prototype.duplicate = function () {
        var e = this;
        Object(c.d)(this.getSelectedNid(), function (t) {
          e.addRow(t, !1), e.select(t, !0, void 0);
        });
      }),
      (_s.prototype.create = function () {
        var e = this;
        Object(c.c)(this.type, function (t) {
          e.addRow(t, !1), e.select(t, !0);
        });
      }),
      (_s.prototype.remove = function () {
        Object(c.j)(this.getSelectedNid());
      }),
      (_s.prototype.print = function () {
        Object(c.i)(this.getSelectedNid(), this.getChoosenOrSelectedNids());
      }),
      (_s.prototype.popupColumnMenu = function (e, t) {
        var i = this,
          o = i.cols[e];
        if (!o) return;
        var a = $(t.target).closest(".t-head-cell").offset();
        t && null != t.clientX && (a.left = t.clientX);
        var n = e === i.cidxSort && !i.sortDescending,
          s = e === i.cidxSort && i.sortDescending,
          r = e === i.cidxGroup,
          l = $.backplane({ closed: D });
        const c =
          "number" === o.expression.returnType.base
            ? "number"
            : "string" === o.expression.returnType.base
            ? "string"
            : null;
        var d = $('<div class="nx-menu-popup grey column-menu">').appendTo(l);
        if (database.isAdmin())
          var u = $(
              '<div class="column-menu-section" style="display:flex;display:-webkit-flex;flex-direction:row;-webkit-flex-direction:row">'
            ).appendTo(d),
            p = $(
              '<div style="flex-grow:1;-webkit-flex-grow:1;width:48px">'
            ).appendTo(u),
            h =
              ($(
                '<div style="width:32px;padding:8px"><div class="nx-button-icon blue"><div class="type-symbol type-symbol-white type-symbol-fn"></div></div></div>'
              )
                .appendTo(u)
                .click(function () {
                  new Vt.a({
                    schema: i.type.schema,
                    type: i.type,
                    variables: {},
                    supportsCommands: !1,
                    value: o.expression.toString(),
                    okay: function (e, t) {
                      if ((l.close(), e && t)) {
                        (o.expression = t),
                          (o.field = t.returnType),
                          o.agg &&
                            (-1 === t.returnType.aggregations.indexOf(o.agg)
                              ? (o.agg = void 0)
                              : (o.aggType = aggregations.aggType(
                                  o.agg,
                                  t.returnType
                                )));
                        var a = i.type.fields[t.toString()];
                        a && a.isField && "fn" !== a.base && "file" !== a.base
                          ? (o.directFid = a.id)
                          : (o.directFid = void 0);
                      }
                      i.reload(), i.resize(), i.saveView();
                    },
                    cancel: function () {},
                  });
                }),
              $('<div class="component editor" style="width:100%">').appendTo(
                p
              )),
            m = $('<input type="text">')
              .val(o.caption)
              .attr("placeholder", o.expression.caption)
              .appendTo($('<div class="stringeditor">').appendTo(h))
              .change(function () {
                (o.caption = m.val() || void 0),
                  l.close(),
                  i.resize(),
                  i.saveView();
              });
        var f = $('<div class="column-menu-section">').appendTo(d),
          g = $('<div class="component editor" style="width:100%">').appendTo(
            f
          ),
          v = tables.createFilterEditor(
            {
              updateFilter: function (e) {
                e && l.close(),
                  (o.filter = v.getFilter()),
                  i.reload(),
                  i.rowsChanged(),
                  i.saveView();
              },
            },
            g,
            o.field,
            o.filter
          ),
          b = $('<div class="column-menu-section">').appendTo(d),
          y = $(
            '<div class="component editor" style="width:100%;padding:0 8px">'
          ).appendTo(b),
          w = $('<div class="switch table-popup-sorting">').appendTo(y);
        $('<div class="switch-item' + (n ? " selected" : "") + '">')
          .append(
            $(
              '<div class="icon i-32-12 i-light-grey i-line-up-thick inline-block">'
            )
          )
          .append($("<span>").text(locale.sortAscending))
          .appendTo(w)
          .click(function () {
            l.close(), i.sort(e, !1), i.rowsChanged(), i.saveView();
          }),
          $('<div class="switch-item' + (s ? " selected" : "") + '">')
            .append(
              $(
                '<div class="icon i-32-12 i-light-grey i-line-down-thick inline-block">'
              )
            )
            .append($("<span>").text(locale.sortDescending))
            .appendTo(w)
            .click(function () {
              l.close(), i.sort(e, !0), i.rowsChanged(), i.saveView();
            }),
          $(
            '<div class="switch-item' +
              (r ? " selected" : "") +
              '" style="margin-top: 4px;">'
          )
            .append(
              $(
                '<div class="icon i-32-16 i-light-grey i-table-group inline-block">'
              )
            )
            .append($("<span>").text(locale.grouped))
            .appendTo(w)
            .click(function () {
              l.close(),
                r ? i.ungroup() : i.group(e),
                i.rowsChanged(),
                i.saveView();
            });
        var x = o.field.aggregations;
        if (x && x.length) {
          var T = $('<div class="column-menu-section">').appendTo(d),
            C = $(
              '<div class="component editor" style="width:100%;padding:0 8px 8px 0">'
            ).appendTo(T),
            k = $('<div class="switch">').appendTo(C);
          Q.each(x, function (e) {
            $(
              '<div class="switch-item' +
                (e === o.agg ? " selected" : "") +
                '">'
            )
              .text(locale.agg[e])
              .appendTo(k)
              .click(function () {
                l.close(),
                  e !== o.agg
                    ? ((o.agg = e),
                      (o.aggType = aggregations.aggType(e, o.field)))
                    : ((o.agg = void 0), (o.aggType = void 0)),
                  i.aggregate(),
                  i.updateRows(),
                  i.updateFoot(),
                  i.rowsChanged(),
                  i.saveView();
              });
          });
        }
        if (
          (null !== c &&
            $('<div class="buttons">')
              .appendTo(d)
              .append(
                `<div class="root-help-link">${locale.conditionalStyling}...</div>`
              )
              .touch(function () {
                l.close(),
                  new io(
                    i.type,
                    o,
                    function (t) {
                      const o = i.getConfig();
                      (o.cols[e].conditionalStyling = t),
                        i.configureAndLoad(o),
                        i.saveView();
                    },
                    c
                  );
              }),
          "email" === o.field.base &&
            $('<div class="buttons">')
              .appendTo(d)
              .append('<div class="nx-button-text grey">Send mail...</div>')
              .touch(function () {
                l.close(), i.sendMailForColumn(o);
              }),
          database.isAdmin())
        ) {
          var S = $('<div class="buttons">').appendTo(d);
          $('<div class="nx-button-text grey">')
            .text(locale.hideColumn)
            .appendTo(S)
            .click(function () {
              l.close(), i.removeColumn(e);
            }),
            $('<div class="nx-hspace-flex">').appendTo(S),
            $('<div class="nx-button-text blue">')
              .text(locale.showColumn + "...")
              .appendTo(S)
              .click(function () {
                l.close(), i.popupAddColumnMenu(e, void 0, t);
              });
        }
        var _ = d.outerWidth(),
          E = d.outerHeight();
        function D() {
          v.destroy();
        }
        (a.left -= 8),
          (a.top += this.rowHeight + ks),
          a.left + _ > window.getWidth() && (a.left = window.getWidth() - _),
          a.top + E > window.getHeight() && (a.top = window.getHeight() - E),
          d.offset(a);
      }),
      (_s.prototype.sendMailForColumn = function (e) {
        var t = this.cols.indexOf(e);
        if (-1 !== t) {
          for (
            var i = this.rows, o = this.models, a = {}, n = 0;
            n < i.length;
            n++
          ) {
            var s = o[i[n]];
            if (s) {
              var r = s.values[t];
              r && util.isValidEmail(r) && (a[r] = 1);
            }
          }
          var l = Object.keys(a);
          for (n = 0; n < l.length; n++) l[n] = encodeURIComponent(l[n]);
          var c = "mailto:" + l.join(",");
          NinoxDocumentInteraction.openBrowser(c);
        }
      }),
      (_s.prototype.popupAddColumnMenu = function (e, t, i) {
        var o = this.cols;
        null == e && (e = o.length);
        o[e];
        var a = $(i.target).closest(".t-head-cell").offset();
        a.top += this.rowHeight + ks;
        var n = this;
        t || (t = [{ type: this.type, path: "", multiple: !1 }]);
        var s = !1,
          r = [];
        s &&
          (r.push({
            icon: "i-32-24 i-light-grey i-plus",
            caption: locale.createField,
          }),
          r.push(locale.showColumn));
        for (var l = {}, c = 0; c < o.length; c++) {
          var d = o[c].expression;
          d && (l[d.toString()] = !0);
        }
        t.length > 1
          ? r.push({
              icon: "i-32-24 i-light-grey i-arrow-solid-left",
              caption: locale.back,
              click: x,
            })
          : r.push({
              icon: "i-light-grey i-32-24 i-field-fn",
              caption: locale.function,
              click: y,
            });
        var u = t[0].type,
          p = t[0].path,
          h = t[0].multiple;
        l[p + "_id"] ||
          r.push({
            icon: "i-32-24 i-light-grey i-field-number",
            caption: locale.id,
            field: u.field_id,
            click: v,
          });
        var m = u.sorted;
        database.supports.authentication &&
          (m = m.concat([u.field_cu, u.field_cd, u.field_mu, u.field_md]));
        for (var f = 0; f < m.length; f++) {
          var g = m[f];
          (g.isField || g.isReverse || g.isReference) &&
            database.canRead(g) &&
            (l[p + g.id] ||
              r.push({
                icon: "i-light-grey i-32-24 i-field-" + g.base,
                caption: g.caption,
                field: g,
                click: v,
              }));
        }
        function v() {
          var o = this.field;
          if (o.isReference) {
            var s = [
              { type: o.refType, path: p + o.id + ".", multiple: h },
            ].concat(t);
            n.popupAddColumnMenu(e, s, i);
          } else if (o.isReverse) {
            s = [
              { type: o.refType, path: p + o.id + ".", multiple: !0 },
            ].concat(t);
            n.popupAddColumnMenu(e, s, i);
          } else if (o.isField)
            if (h) {
              for (
                var r = [
                    {
                      icon: "i-32-24 i-light-grey i-arrow-solid-left",
                      caption: locale.back,
                      click: w,
                    },
                  ],
                  l = o.aggregations,
                  c = 0;
                c < l.length;
                c++
              ) {
                var d = l[c];
                r.push({
                  caption: locale.agg[d] + "(" + o.caption + ")",
                  field: o,
                  agg: d,
                  click: b,
                });
              }
              new eo({
                offset: a,
                head: { caption: locale.showColumn },
                items: r,
              });
            } else n.addColumn(e + 1, p + o.id);
        }
        function b() {
          var t = this.agg,
            i = this.field;
          n.addColumn(e + 1, t + "(" + p + i.id + ")");
        }
        function y() {
          new Vt.a({
            schema: n.type.schema,
            type: n.type,
            variables: {},
            supportsCommands: !1,
            value: "",
            okay: function (t, i) {
              t && i && n.addColumn(e + 1, t);
            },
            cancel: function () {},
          });
        }
        function w() {
          n.popupAddColumnMenu(e, t, i);
        }
        function x() {
          var o = t.slice(1);
          n.popupAddColumnMenu(e, o, i);
        }
        new eo({
          offset: a,
          head: s ? void 0 : { caption: locale.showColumn },
          items: r,
        });
      }),
      (_s.prototype.removeColumn = function (e) {
        var t = this.getConfiguration();
        t.cols.splice(e, 1),
          e === t.sort ? (t.sort = void 0) : e < t.sort && t.sort--,
          e === t.group && (t.group = void 0),
          e < t.group && t.group--,
          this.configureAndLoad(t),
          this.saveView();
      }),
      (_s.prototype.addColumn = function (e, t) {
        var i = this.getConfiguration();
        i.cols.splice(e, 0, { expression: t }),
          e <= i.sort && i.sort++,
          e <= i.group && i.group++,
          this.configureAndLoad(i),
          this.saveView();
      }),
      (_s.prototype.saveView = function () {
        this.container.saveView();
      }),
      (_s.prototype.getSelectedNids = function () {
        for (
          var e = this.rows, t = this.models, i = [], o = 0;
          o < e.length;
          o++
        ) {
          var a = e[o];
          t[a] && i.push(a);
        }
        return i;
      }),
      (_s.prototype.getChoosenNids = function () {
        for (
          var e = this.midChoosen,
            t = this.rows,
            i = this.models,
            o = [],
            a = 0;
          a < t.length;
          a++
        ) {
          var n = t[a];
          i[n] && e[n] && o.push(n);
        }
        return o;
      }),
      (_s.prototype.getChoosenOrSelectedNids = function () {
        return Q.isEmpty(this.midChoosen)
          ? this.getSelectedNids()
          : this.getChoosenNids();
      }),
      (_s.prototype.dragValue = function (e, t, i, o, a, n) {
        var s = this,
          r = this.rows,
          l = this.models,
          c = this.getWritableField(e);
        if (c) {
          var d = c.base,
            u = c.id,
            p = a
              ? "date" === d
                ? E
                : "datx" === d
                ? D
                : "timestamp" === d
                ? E
                : "time" === d || "timeinterval" === d
                ? N
                : "number" === d
                ? _
                : S
              : S,
            h = r[t];
          if (h) {
            var m = l[h];
            if (m) {
              var f = m.values[e];
              void 0 === f && (f = null);
              for (var g = [], v = n ? i - o - 1 : 1, b = i; b <= o; b++) {
                var y = r[b];
                if (y) {
                  var w = l[y];
                  if (w) {
                    var x = p(f, v),
                      T = w.values[e];
                    if (!c.equals(x, T) && database.canWriteNodeField(y, u)) {
                      var C = { _id: y };
                      (C[u] = x), g.push(C);
                    }
                    v++;
                  }
                }
              }
              g.length
                ? ($.loading(!0),
                  (s.silent = !0),
                  database.updateNodes(g, function (e) {
                    $.loading(!1),
                      (s.silent = !1),
                      e && $.alert(e),
                      s.calc(s._reloadId, r, function () {
                        s.aggregate(), s.updateRows(), s.updateFoot(), k();
                      });
                  }))
                : k();
            }
          }
        }
        function k() {
          s.selectBlock(Math.min(t, i, o), e, Math.max(t, i, o), e);
        }
        function S(e, t) {
          return null == e ? null : e;
        }
        function _(e, t) {
          return null == e ? null : e + t;
        }
        function E(e, t) {
          if (null == e) return null;
          var i = new Date(e);
          return i.setDate(i.getDate() + t), i.getTime();
        }
        function D(e, t) {
          if (null == e) return null;
          var i = new Date(e);
          return i.setDate(i.getDate() + t), i.getTime();
        }
        function N(e, t) {
          return null == e ? null : e + 36e5 * t;
        }
      }),
      (_s.prototype.getWritableField = function (e) {
        var t = this.type,
          i = this.cols[e];
        if (i) {
          var o = i.expression ? i.expression.toString() : void 0,
            a = t.fields[o];
          if (a && database.canWrite(a)) return a;
        }
      }),
      (_s.prototype.toggleRowChoosen = function (e, t) {
        var i = this.rows,
          o = i[e];
        if (o) {
          var a = this.models;
          if (a[o]) {
            var n,
              s = this.midChoosen;
            if (s[o]) {
              if ((delete s[o], !1, t))
                if (null != (n = this.selectionR0)) {
                  n > e ? ((l = n), (n = e)) : (l = e);
                  for (var r = n; r <= l; r++) {
                    a[(c = i[r])] && delete s[c];
                  }
                }
            } else if (((s[o] = !0), !0, t))
              if (null != (n = this.selectionR0)) {
                var l;
                n > e ? ((l = n), (n = e)) : (l = e);
                for (r = n; r <= l; r++) {
                  var c;
                  a[(c = i[r])] && (s[c] = !0);
                }
              }
            this.updateRows(), this.aggregateFoot(), this.updateFoot();
          }
        }
      }),
      (_s.prototype.colX = function (e, t) {
        var i = this.cols;
        return i[Math.max(0, Math.min(e, t, i.length - 1))].left;
      }),
      (_s.prototype.colW = function (e, t) {
        var i = this.cols,
          o = i.length - 1;
        e >= 0 || (e = 0),
          t >= 0 || (t = 0),
          e <= o || (e = o),
          t <= o || (t = o);
        var a = i[Math.min(e, t)],
          n = i[Math.max(e, t)];
        return n.left + n.width - a.left;
      }),
      (_s.prototype.rowY = function (e, t) {
        var i = e < t ? e : t;
        return (i - this.ridxTop) * this.rowHeight + (i - this.ridxTop) * ks;
      }),
      (_s.prototype.rowH = function (e, t) {
        return (Math.abs(t - e) + 1) * this.rowHeight;
      }),
      (_s.prototype.rowHWithMargin = function (e, t) {
        return (Math.abs(t - e) + 1) * (this.rowHeight + ks) - ks;
      }),
      (_s.prototype.keydown = function (e) {
        console.log("Table.keydown", e.which);
        var t = e.which,
          i = this.isEditing(),
          o = this.isTableEditMode();
        switch (t) {
          case 8:
            i ||
            ("cell" !== this.selectionMode && "block" !== this.selectionMode)
              ? e.metaKey &&
                !i &&
                "row" === this.selectionMode &&
                (Q.isEmpty(this.midChoosen)
                  ? this.remove()
                  : this.removeAllChoosen(),
                e.preventDefault())
              : (this.editorDelete(), e.preventDefault());
            break;
          case 9:
            o
              ? e.shiftKey
                ? this.editorPrev()
                : this.editorNext()
              : ui.sideEditor.focus(),
              e.preventDefault();
            break;
          case 13:
            if (e.shiftKey) this.editorInsert("down");
            else {
              var a = this.rows[this.selectionR0];
              "row" === this.selectionMode && a && this.groups[a]
                ? this.toggle(a)
                : i
                ? this.editorDown()
                : this.startEdit();
            }
            e.preventDefault();
            break;
          case 27:
            i ? this.stopEdit(!1) : this.selectNothing(), e.preventDefault();
            break;
          case 32:
            this.onlyChoosen
              ? this.showAll()
              : Q.isEmpty(this.midChoosen) || this.showOnlyChoosen(),
              e.preventDefault();
            break;
          case 33:
            e.metaKey ? this.editorPrevGroup() : this.editorPageUp(),
              e.preventDefault();
            break;
          case 34:
            e.metaKey ? this.editorNextGroup() : this.editorPageDown(),
              e.preventDefault();
            break;
          case 35:
            this.editorLast(), e.preventDefault();
            break;
          case 36:
            this.editorFirst(), e.preventDefault();
            break;
          case 37:
            a = this.rows[this.selectionR0];
            "row" === this.selectionMode && a && this.groups[a]
              ? this.collapse(a)
              : this.editorPrev(e.shiftKey),
              e.preventDefault();
            break;
          case 38:
            e.metaKey
              ? this.editorFirst(e.shiftKey)
              : e.altKey
              ? this.editorPageUp()
              : this.editorUp(e.shiftKey),
              e.preventDefault();
            break;
          case 39:
            a = this.rows[this.selectionR0];
            "row" === this.selectionMode && a && this.groups[a]
              ? this.expand(a)
              : this.editorNext(e.shiftKey),
              e.preventDefault();
            break;
          case 40:
            e.metaKey
              ? this.editorLast(e.shiftKey)
              : e.altKey
              ? this.editorPageDown()
              : this.editorDown(e.shiftKey),
              e.preventDefault();
            break;
          default:
            i ||
              ((e.metaKey || e.ctrlKey) && 70 === t
                ? (this.openFindMenu(), e.preventDefault())
                : !o ||
                  e.metaKey ||
                  e.ctrlKey ||
                  8 === t ||
                  16 === t ||
                  17 === t ||
                  18 === t ||
                  91 === t ||
                  93 === t ||
                  (t >= 112 && t <= 123) ||
                  this.startEdit());
        }
      }),
      (_s.prototype.nodeRenamed = function (e, t, i) {
        var o = this,
          a = this.models[t];
        a && ((a.id = i), delete this.models[t], (this.models[i] = a));
        var n = this.rows.indexOf(t);
        -1 !== n && (this.rows[n] = i),
          this.midChoosen[t] &&
            (delete this.midChoosen[t], (this.midChoosen[i] = !0)),
          (this.selectionMid0 = t) && (this.selectionMid0 = i),
          (this.selectionMid1 = t) && (this.selectionMid1 = i),
          o.recalc(i, function () {
            o.aggregate(), o.updateRows(), o.updateFoot();
          });
      }),
      (_s.prototype.rowsChanged = function () {
        this.container.rowsChanged();
      }),
      (_s.prototype.loadTableRowHeight = function () {
        if (void 0 === $s) {
          $s = 40;
          const e =
            NinoxDocumentInteraction.getUserDefault("ui.table.rowHeight");
          if (e) {
            const t = parseInt(e);
            t >= 28 && t <= 120 && ($s = t);
          }
        }
        return $s;
      }),
      (_s.prototype.saveTableRowHeight = function (e) {
        ($s = e),
          NinoxDocumentInteraction.setUserDefault(
            "ui.table.rowHeight",
            String(e)
          );
      }),
      (Ns.prototype.base = "table"),
      (Ns.prototype.destroy = function () {
        return (
          database.off("schema", void 0, this.schemaChanged, this),
          database.off("change", void 0, this.dataChanged, this),
          database.off("create", void 0, this.dataChanged, this),
          database.off("remove", void 0, this.dataChanged, this),
          database.off("view", void 0, this.viewsChanged, this),
          this.$controls.remove(),
          a.unmountComponentAtNode(this.$tabs[0]),
          this.$tabs.remove(),
          this.table.destroy(),
          Q.each(this.renderers, function (e) {
            e.destroy();
          }),
          !1
        );
      }),
      (Ns.prototype.show = function () {
        this.visible ||
          (ui.currentTab && ui.currentTab.hide(),
          (this.visible = !0),
          (ui.currentTab = this),
          this.$controls.appendTo(ui.$menuCenter),
          this.$tabs.appendTo(ui.$header),
          this.updateTabs(),
          this.reloadViews(),
          this.showView());
      }),
      (Ns.prototype.hide = function () {
        this.visible &&
          ((this.visible = !1),
          this.saveView(),
          this.$controls.detach(),
          a.unmountComponentAtNode(this.$tabs[0]),
          this.$tabs.detach(),
          this.hideView());
      }),
      (Ns.prototype.schemaChanged = function (e, t, i) {
        this.visible &&
          (database.schema.types[this.tid]
            ? this.updateSwitch()
            : ui.openHome());
      }),
      (Ns.prototype.dataChanged = function (e) {
        this.visible &&
          Q.each(this.renderers, function (e) {
            e.dataChanged();
          });
      }),
      (Ns.prototype.viewsChanged = function (e, t, i) {
        this.visible &&
          (this.reloadViews(), this.updateTabs(), this.showView());
      }),
      (Ns.prototype.reloadViews = function () {
        var e = this,
          t = this.tid;
        if (
          ((e.views = []),
          Q.each(
            util.localeSortBy(
              Q.filter(Q.where(database.views, { type: t }), function (e) {
                return database.canReadView(e);
              }),
              "caption"
            ),
            function (t) {
              t &&
                (t.config &&
                  t.config.type !== t.type &&
                  (console.log("Correct view config"),
                  (t.config.type = t.type)),
                e.views.push(t));
            }
          ),
          0 === this.views.length)
        ) {
          var i = {
            id: util.createUUID(16),
            type: t,
            caption: locale.all,
            order: 10,
            config: { type: t },
          };
          this.views.push(i), database.saveView(i, function () {});
        } else {
          for (let e = 0; e < this.views.length; e++)
            void 0 === this.views[e].order &&
              (this.views[e].order = 10 * (e + 1));
          this.views = util.localeSortBy(this.views, "order");
        }
        this.updateSwitch();
      }),
      (Ns.prototype.reorderView = function (e, t, i) {
        const o = this.views[e];
        let a = null;
        this.selectedView[this.tid] === e && (a = t),
          e > t
            ? (null === a &&
                this.selectedView[this.tid] <= e &&
                this.selectedView[this.tid] >= t &&
                (a = this.selectedView[this.tid] + 1),
              (o.order =
                0 === t
                  ? this.views[0].order / 2
                  : (this.views[t - 1].order + this.views[t].order) / 2))
            : t > e &&
              (null === a &&
                this.selectedView[this.tid] >= e &&
                this.selectedView[this.tid] <= t &&
                (a = this.selectedView[this.tid] - 1),
              t === this.views.length - 1
                ? (o.order = this.views[this.views.length - 1].order + 10)
                : (o.order =
                    (this.views[t + 1].order + this.views[t].order) / 2)),
          null !== a && (this.selectedView[this.tid] = a),
          (this.views = util.localeSortBy(this.views, "order")),
          database.saveView(o, function () {}),
          this.updateTabs(),
          this.popupTabsOpen && this.popupTabs(null, i);
      }),
      (Ns.prototype.updateTabs = function () {
        this.visible &&
          ((null == this.selectedView[this.tid] && 0 !== this.views.length) ||
            a.render(
              s.createElement(Fn, {
                onReorder: (e, t) => this.reorderView(e, t),
                isAdmin: database.isAdmin(),
                selectedIndex: this.selectedView[this.tid],
                views: this.views,
                onNewViewClick: () => this.createView(),
                onTabClick: (e) => this.tabsClicked(e),
                onRemoveView: (e) => this.removeView(e),
                onRenameView: (e) => this.renameView(e),
                onEditColumns: (e) => this.popupColumnMenu(e),
              }),
              this.$tabs[0]
            ));
      }),
      (Ns.prototype.updateSwitch = function () {
        var e = this.views[this.selectedView[this.tid]];
        e && e.mode;
        this.showSearch(), this.showSmallMenu();
        var t = (e && e.searchString) || "";
        this.$search.val(t),
          this.$searchText
            .text(
              t ||
                locale.searchIn$.replace(
                  "$",
                  database.schema.types[this.tid].caption
                )
            )
            .css("color", t ? "" : "#676d82"),
          this.$searchCancel.css("display", t ? "" : "none");
      }),
      (Ns.prototype.showSearch = function () {
        ui.fullWidth - ui.leftWidth <= 510
          ? this.$searchContainer.css("width", "162px")
          : this.$searchContainer.css("width", "236px");
      }),
      (Ns.prototype.showSmallMenu = function () {
        TOUCH || ui.fullWidth <= 640
          ? this.$menuSmall.css("display", "flex")
          : this.$menuSmall.css("display", "none");
      }),
      (Ns.prototype.tabsClicked = function (e) {
        var t = this.views[e];
        t && ui.openTable(t.type, t.id);
      }),
      (Ns.prototype.showView = function () {
        var e = this.views[this.selectedView[this.tid]];
        if (e) {
          var t = e.mode,
            i = this.renderers[t] ? t : "table";
          this.table.setVisible("table" === i),
            Q.each(this.renderers, function (e) {
              e.setVisible(i === e.mode);
            }),
            this.updateSwitch();
        }
      }),
      (Ns.prototype.hideView = function () {
        this.table.hide(),
          Q.each(this.renderers, function (e) {
            e.hide();
          });
      }),
      (Ns.prototype.removeView = function (e) {
        if (
          (Object(l.f)("View", "Remove"),
          console.log("TableView.removeView"),
          null == e && (e = this.selectedView[this.tid]),
          null == e)
        )
          return;
        const t = this.views[e];
        if (!t) return;
        const i = this.selectedView[this.tid],
          o = this.views[i] ? this.views[i].id : void 0,
          a = e === i ? i - 1 : i,
          n = this.views[a],
          s = n ? n.id : void 0;
        $.loading(!0),
          database.removeView(t.id, () => {
            (this.selectedView[this.tid] = a),
              $.loading(!1),
              s === o
                ? ((this.selectedView[this.tid] = e < i ? i - 1 : i),
                  this.viewsChanged())
                : ui.openTable(t.type, s);
          });
      }),
      (Ns.prototype.renameView = function (e) {
        Object(l.f)("View", "Rename");
        var t = this;
        null == e && (e = this.selectedView[this.tid]);
        var i = this.views[e];
        if (i) {
          var o = $.popdown({ cls: "small" });
          $('<div class="nx-section-head">')
            .text(locale.renameView)
            .appendTo(o.$pane);
          var a = $('<div class="nx-section-pane">').appendTo(o.$pane),
            n = $(
              '<div class="component editor editor-string" style="width:100%">'
            ).appendTo(a);
          $("<label>").text(locale.enterViewName).appendTo(n);
          var s = $('<input type="text">')
              .val(i.caption || "")
              .appendTo($('<div class="stringeditor">').appendTo(n))
              .keydown(function (e) {
                13 === e.which && c(), 27 === e.which && d();
              }),
            r = $('<div class="nx-button-bar">').appendTo(a);
          $('<div class="nx-button-text grey">')
            .text(locale.cancel)
            .appendTo(r)
            .click(d),
            $('<div class="nx-hspace-flex">').appendTo(r),
            $('<div class="nx-button-text blue">')
              .text(locale.rename)
              .appendTo(r)
              .click(c),
            setTimeout(function () {
              s.focus();
            }, 400);
        }
        function c() {
          var e = s.val().trim();
          e
            ? (Object(l.f)("View", "RenameConfirm"),
              d(),
              (i.caption = e),
              database.saveView(i, function () {}),
              (t.selectedIndex = t.views.indexOf(i)),
              t.updateTabs(),
              t.updateSwitch())
            : s.focus();
        }
        function d() {
          o.close();
        }
      }),
      (Ns.prototype.createView = function () {
        if (database.isAdmin()) {
          Object(l.f)("View", "Create");
          var e = this,
            t = this.tid,
            i = this.views[this.selectedView[this.tid]];
          i || (i = { type: t, mode: "table", config: { type: t } });
          var o = $.popdown({ cls: "small" });
          $('<div class="nx-section-head">')
            .text(locale.newView)
            .appendTo(o.$pane);
          var a = $('<div class="nx-section-pane">').appendTo(o.$pane),
            n = $(
              '<div class="component editor editor-string" style="width:100%">'
            ).appendTo(a),
            s = $('<input type="text">')
              .attr("placeholder", locale.enterViewName)
              .appendTo($('<div class="stringeditor">').appendTo(n))
              .keydown(function (e) {
                13 === e.which && d(), 27 === e.which && u();
              }),
            r = i.mode || "table";
          $.switchpane({
            items: [
              {
                id: "table",
                caption: locale.table,
                icon: "i-32-24 i-light-grey i-setting-table",
              },
              {
                id: "full",
                caption: locale.form,
                icon: "i-32-24 i-light-grey i-form",
              },
              {
                id: "chart",
                caption: locale.chartView,
                icon: "i-32-24 i-light-grey i-setting-table-chart",
              },
              {
                id: "cards",
                caption: locale.cards,
                icon: "i-32-24 i-light-grey i-home",
              },
              {
                id: "kanban",
                caption: locale.kanban,
                icon: " i-32-24 i-light-grey i-kanban",
              },
              {
                id: "gantt",
                caption: locale.gantt,
                icon: "i-32-24 i-light-grey i-gantt",
              },
              {
                id: "pivot",
                caption: "Pivot",
                icon: "i-32-24 i-light-grey i-setting-table",
              },
            ],
            value: r,
            update: function (e) {
              (r = e), s.focus();
            },
          }).appendTo(a);
          var c = $('<div class="nx-button-bar">').appendTo(a);
          $('<div class="nx-button-text grey">')
            .text(locale.cancel)
            .appendTo(c)
            .click(u),
            $('<div class="nx-hspace-flex">').appendTo(c),
            $('<div class="nx-button-text blue">')
              .text(locale.okay)
              .appendTo(c)
              .click(d),
            setTimeout(function () {
              s.focus();
            }, 400);
        }
        function d() {
          Object(l.f)("View", "CreateConfirm", {
            viewType: r,
            databaseId: database.id,
            teamId: database.account.id,
          });
          var t = s.val().trim();
          t ||
            (t = {
              table: locale.table,
              chart: locale.chartView,
              cards: "Cards",
              kanban: "Kanban",
              gantt: "GANTT",
              calendar: "Calendar",
              full: locale.form,
              pivot: "Pivot",
            }[r]),
            u();
          var o = util.getPersistentView(i);
          let a;
          (o.id = util.createUUID(16)),
            (o.mode = r),
            (o.caption = t || locale.unnamed);
          const n = e.views[e.views.length - 1].order;
          (a = void 0 !== n ? n + 10 : 10 * (e.views.length + 1)),
            (o.order = a),
            $.loading(!0),
            database.saveView(o, () => {
              $.loading(!1), e.reloadViews(), ui.openTable(o.type, o.id);
            });
        }
        function u() {
          o.close();
        }
      }),
      (Ns.prototype.setViewMode = function (e) {
        var t = this.selectedView[this.tid],
          i = this.views[t];
        i &&
          ((i.mode = "form" === e ? "table" : e),
          this.saveView(),
          this.showView());
      }),
      (Ns.prototype.getViewCaption = function () {
        var e = this.selectedView[this.tid],
          t = this.views[e];
        if (t) return t.caption;
      }),
      (Ns.prototype.getViewProperty = function (e) {
        var t = this.selectedView[this.tid],
          i = this.views[t];
        if (i) return i[e];
      }),
      (Ns.prototype.setViewProperties = function (e) {
        var t = this.selectedView[this.tid],
          i = this.views[t];
        if (i) {
          var o = !1;
          for (var a in e)
            if (e.hasOwnProperty(a)) {
              var n = e[a];
              i[a] !== n && ((i[a] = n), (o = !0));
            }
          o && this.saveView();
        }
      }),
      (Ns.prototype.showPrint = function () {
        Object(l.f)("Table", "PrintView"), Object(le.a)(this.table);
      }),
      (Ns.prototype.popupColumnMenu = function (e) {
        Object(l.f)("Table", "EditColumns"),
          null == e && (e = this.selectedView[this.tid]);
        var t = this,
          i = this.views[e];
        if (i) {
          var o = this.table;
          new fs.a({
            hasTop: !0,
            caption: i.caption,
            readRoles: i.readRoles,
            config: o.getConfiguration(),
            save: function (e) {
              var a = e.config;
              (i.caption = e.caption),
                (i.readRoles = e.readRoles),
                (i.config = a),
                database.saveView(i, function () {}),
                t.updateTabs(),
                t.updateSwitch(),
                o.setConfig(i.config),
                t.showView(),
                t.reload();
            },
          });
        }
      }),
      (Ns.prototype.popupActions = function () {
        var e = this,
          t = this.tid,
          i = this.table,
          o = $.backplane(),
          a = $(
            '<div class="nx-menu-popup" style="border-radius:4px">'
          ).appendTo(o);
        database.isAdminEnabled() &&
          $('<div class="nx-menu-item">')
            .append(
              $('<div class="nx-menu-label">').text(locale.editFields + "...")
            )
            .touch(function () {
              Object(l.f)("Table", "EditFields"), c(), new ni({ type: t });
            })
            .appendTo(a),
          database.authorizationMassDataUpdate &&
            $('<div class="nx-menu-item">')
              .append(
                $('<div class="nx-menu-label">').text(
                  locale.updateAssistant + "..."
                )
              )
              .appendTo(a)
              .touch(function () {
                c(), new An(i);
              }),
          database.authorizationImport &&
            $('<div class="nx-menu-item">')
              .append(
                $('<div class="nx-menu-label">').text(locale.importData + "...")
              )
              .appendTo(a)
              .touch(function () {
                Object(l.f)("Table", "ImportData"), c(), new bt({ tid: t });
              }),
          database.authorizationExport &&
            $('<div class="nx-menu-item">')
              .append(
                $('<div class="nx-menu-label">').text(locale.exportData + "...")
              )
              .appendTo(a)
              .touch(function () {
                c(),
                  Object(l.f)("Table", "ExportData"),
                  i.exportData(function (e) {
                    e && $.alert(e);
                  });
              }),
          database.authorizationExport &&
            database.supports.sharing &&
            $('<div class="nx-menu-item">')
              .append(
                $('<div class="nx-menu-label">').text(locale.shareView + "...")
              )
              .appendTo(a)
              .touch(function () {
                c(), e.shareView();
              }),
          database.authorizationPrint &&
            $('<div class="nx-menu-item">')
              .append($('<div class="nx-menu-label">').text(locale.printView))
              .appendTo(a)
              .touch(function () {
                c(), e.showPrint();
              });
        var n = a.outerWidth(),
          s = a.outerHeight(),
          r = e.$popupActions.offset();
        function c() {
          o.close();
        }
        (r.top += 32),
          r.left + n > window.getWidth() && (r.left = window.getWidth() - n),
          r.top + s > window.getHeight() && (r.top = window.getHeight() - s),
          a.offset(r);
      }),
      (Ns.prototype.saveView = function () {
        if (database.schema.types[this.tid]) {
          var e = this.selectedView[this.tid];
          if (null !== e) {
            var t = this.views[e];
            t &&
              ((t.config = this.table.getConfiguration()),
              database.saveView(t, function () {}));
          }
        }
      }),
      (Ns.prototype.getNavigationState = function () {
        var e = this.views[this.selectedView[this.tid]],
          t = e ? e.id : void 0;
        return {
          base: "table",
          tid: this.tid,
          vid: t,
          table: this.table.getNavigationState(),
        };
      }),
      (Ns.prototype.setNavigationState = function (e) {
        var t = this;
        console.log("TableView.setNavigationState", e);
        var i = e.tid,
          o = e.nid;
        const a = this.views[this.selectedView[i]];
        if (i !== this.tid) {
          if (
            this.navigationStateByTid[i] &&
            (void 0 === e.nid || void 0 === e.tabId)
          ) {
            const e = this.navigationStateByTid[i];
            console.log("TableView.setNavigationState => new state 1"),
              A(Ds({}, H(), { nid: e.nid, tabId: e.tabId }));
          }
        } else if (a) {
          const t = H(),
            i = ui.getCurrentEditor();
          if (
            !(
              (i && i.getSelectedTab() !== t.tabId) ||
              (this.table.getSelectedNid() !== t.nid && "table" !== a.mode) ||
              e.vid !== a.id
            )
          )
            return void console.log("TableView.setNavigationState: no change");
        }
        this.selectedView[this.tid];
        var n = e.vid,
          s = e.tab,
          r = e.table || {};
        o &&
          ((r.selectionMid0 = o),
          (r.selectionMid1 = o),
          (r.selectionMode = "row")),
          (this.tid = i),
          (this.navigationStateByTid[i] = { nid: o, tabId: s }),
          this.reloadViews();
        var l = 0;
        if ("default" === n)
          l = null != this.selectedView[i] ? this.selectedView[i] : 0;
        else
          for (var c = 0; c < this.views.length; c++) {
            if (this.views[c].id === n) {
              l = c;
              break;
            }
          }
        var d = this.views[l];
        if (d) {
          (this.selectedView[i] = d.id),
            n !== d.id && A(Ds({}, H(), { vid: d.id })),
            (this.selectedView[i] = l),
            this.updateSwitch(),
            this.table.setConfig(d.config, r),
            this.selectionChanged(),
            this.visible ? this.showView() : this.show(),
            (this._reloadId = (this._reloadId || 0) + 1);
          var u = this._reloadId;
          this.reload(function () {
            if (
              t.visible &&
              u === t._reloadId &&
              (t.updateTabs(), o && !t.table.groups[o])
            )
              if (t.table.models[o]) {
                for (let e = 0; e < t.table.rows.length; e++)
                  if (t.table.rows[e] === o) {
                    t.table.scrollToRow(e);
                    break;
                  }
                if (s) {
                  const e = ui.getCurrentEditor();
                  null != e && e.selectTab(s);
                }
              } else A(Ds({}, H(), { nid: void 0, tab: void 0 }));
          });
        } else $.alert("View not found.");
      }),
      (Ns.prototype.reload = function (e) {
        console.log("TableView.reload");
        var t = this;
        $.loading(!0),
          t.table.load(function (t) {
            console.log("TableView.reload: done"),
              $.loading(!1),
              t && console.warn(t),
              e && e();
          });
      }),
      (Ns.prototype.loaded = function () {
        Q.each(this.renderers, function (e) {
          e.queryLoaded();
        });
      }),
      (Ns.prototype.rowsChanged = function () {
        this.visible &&
          Q.each(this.renderers, function (e) {
            e.rowsChanged();
          });
      }),
      (Ns.prototype.popupContextMenu = function (e) {
        var t = this.views[this.selectedView[this.tid]],
          i = (t && "chart" !== t.mode) || !1;
        this.table && i && this.table.openContextMenu(e);
      }),
      (Ns.prototype.shareView = function () {
        Object(l.f)("Table", "ShareView");
        var e = this.views[this.selectedView[this.tid]];
        e &&
          ($.loading(!0),
          database.loadSharedView(e.id, function (t, i) {
            if (($.loading(!1), t)) return $.alert(t);
            var o = !1,
              a = $.popdown({
                head: locale.shareView,
                buttons: [
                  { caption: locale.cancel, cls: "grey", click: b },
                  "-",
                  { caption: locale.okay, cls: "blue", click: v },
                ],
                closable: !1,
              }),
              n = new util.SimpleModel(
                new schemas.TBoolean(void 0, void 0, {
                  caption: locale.activateSharing,
                  required: !0,
                  booleanRenderer: "switch",
                  width: 1,
                })
              );
            (n.value = !!i.url),
              n.on("update", function () {
                n.value
                  ? f(function (e) {
                      e && $.alert(e);
                    })
                  : g(function (e) {
                      e && $.alert(e);
                    });
              });
            new ct.a(void 0, n, a.$content);
            var s = new util.SimpleModel(
              new schemas.TLink(void 0, void 0, {
                caption: locale.shareURL,
                width: 3,
              })
            );
            s.isWritable = function () {
              return !1;
            };
            var r = new ct.a(void 0, s, a.$content),
              l = new util.SimpleModel(
                new schemas.TChoice(void 0, void 0, {
                  caption: locale.showAs,
                  width: 4,
                  required: !0,
                  choiceRenderer: "switch",
                  values: {
                    html: { id: "html", caption: "HTML", order: 1 },
                    pdf: { id: "pdf", caption: "PDF", order: 2 },
                    xlsx: { id: "xlsx", caption: "Excel", order: 3 },
                    csv: { id: "csv", caption: "CSV", order: 4 },
                    json: { id: "json", caption: "JSON", order: 5 },
                  },
                })
              );
            (l.value = (i.options && i.options.contentType) || "html"),
              l.on("update", function () {
                h(),
                  m(),
                  f(function (e) {
                    e && $.alert(e);
                  });
              });
            var c = new ct.a(void 0, l, a.$content),
              d = $("<div>").appendTo(a.$content),
              u = new ht(
                Object.assign({}, i.csv, { $container: d, onUpdate: p })
              );
            function p() {
              h(),
                f(function (e) {
                  e && $.alert(e);
                });
            }
            function h() {
              o = !0;
            }
            function m() {
              r.el.css("display", i.url ? "" : "none"),
                c.el.css("display", i.url ? "" : "none"),
                d.css("display", i.url && "csv" === l.value ? "" : "none"),
                s.setValue(i.url || "");
            }
            function f(t) {
              $.loading(!0),
                database.shareView(
                  e.id,
                  { contentType: l.value, csv: u.getCSVExportOptions() },
                  function (e, a) {
                    if (($.loading(!1), e)) return t(e);
                    (i = a), (o = !1), m(), t();
                  }
                );
            }
            function g(t) {
              $.loading(!0),
                database.unshareView(e.id, function (e) {
                  if (($.loading(!1), e)) return t(e);
                  (i = {}), (o = !1), m(), t();
                });
            }
            function v() {
              if (!o) return y();
              f(function (e) {
                if (e) return $.alert(e);
                y();
              });
            }
            function b() {
              y();
            }
            function y() {
              a.close(function () {
                c.destroy(), r.destroy(), u.destroy();
              });
            }
            m();
          }));
      }),
      (Ns.prototype.bodyResized = function () {
        Q.each(this.renderers, function (e) {
          e.bodyResized();
        }),
          this.updateTabs(),
          this.showSearch(),
          this.showSmallMenu();
      }),
      (Ns.prototype.selectionChanged = function () {
        Q.each(this.renderers, function (e) {
          e.selectionChanged();
        });
        const e = H(),
          t = this.table.getSelectedNid();
        t !== e.nid &&
          "form" === this.views[this.selectedView[this.tid]].mode &&
          A(Ds({}, e, { nid: t }));
      }),
      (Ns.prototype.searchChanged = function (e) {
        var t = this.$search.val();
        this.$searchText
          .text(
            t ||
              locale.searchIn$.replace(
                "$",
                database.schema.types[this.tid].caption
              )
          )
          .css("color", t ? "" : "#676d82"),
          this.$searchCancel.css("display", t ? "" : "none");
        var i = this.views[this.selectedView[this.tid]];
        i && (i.searchString = t),
          t ? this.table.applyFind(t) : this.table.clearFind();
      }),
      (Ns.prototype.hasLash = function () {
        var e = this.views[this.selectedView[this.tid]];
        return e && ("table" === e.mode || void 0 === e.mode);
      });
    const Ms = (e) => {
      const t = Object(b.getLocale)(),
        [i, o] = s.useState(!1),
        [a, n] = s.useState(!1),
        [r, c] = s.useState(""),
        d = e.email.length && r.length;
      function u() {
        if (!d) return o(!0);
        const t = window.dbms;
        $.loading(!0),
          t.getRemoteConnection().login(e.email, r, (t) => {
            if (
              (window.trackEvent("login", t ? "error" : "success"),
              Object(l.f)("Login", t ? "Error" : "Success"),
              $.loading(!1),
              t)
            )
              return n(!0);
            e.close(!1), e.afterLogin();
          });
      }
      async function p() {
        const t = window.dbms,
          i = await t.getRemoteConnection().googleLogin(),
          { userId: o, newUser: a } = i;
        !0 === a ||
          "true" === a ||
          (NinoxDocumentInteraction.setUserDefault(
            "nx.session.login.user",
            i.email
          ),
          e.close(!1),
          e.afterLogin());
      }
      function h(e) {
        13 === e.nativeEvent.keyCode && d && u();
      }
      return s.createElement(
        "div",
        { className: "credentials-popup--background" },
        s.createElement(
          "div",
          { className: "credentials-popup--content" },
          s.createElement(
            "div",
            { className: "credentials" },
            s.createElement(ze.a, {
              className: "close-popup",
              onFastClick: () => e.close(!0),
            }),
            s.createElement(
              "div",
              { className: "credentials-relogin" },
              s.createElement("h1", null, Object(b.getLocale)().reloginHeader),
              s.createElement("p", null, Object(b.getLocale)().reloginMessage)
            ),
            s.createElement(
              "div",
              { className: "mb-24" },
              s.createElement(
                "label",
                { className: "form-control required" },
                s.createElement(
                  "span",
                  { className: "caption" },
                  t.emailAddress
                ),
                s.createElement("input", {
                  type: "email",
                  required: !0,
                  disabled: !0,
                  value: e.email,
                })
              ),
              s.createElement(
                "label",
                { className: "form-control required" },
                s.createElement("span", { className: "caption" }, t.password),
                s.createElement("input", {
                  className: Object(qo.a)({ error: i && 0 === r.length }),
                  type: "password",
                  required: !0,
                  onKeyDown: h,
                  onChange: (e) => {
                    c(e.target.value), n(!1);
                  },
                  value: r,
                })
              )
            ),
            a
              ? s.createElement(
                  "div",
                  { className: "form-error-message mb-24 center" },
                  t.invalidCredentials
                )
              : null,
            s.createElement(
              "div",
              { className: "mb-24" },
              s.createElement(
                ze.a,
                { className: "button button--filled", onFastClick: u },
                t.login
              )
            ),
            e.isGoogleAvailable
              ? s.createElement(
                  s.Fragment,
                  null,
                  s.createElement(
                    "div",
                    { className: "mb-24" },
                    s.createElement(
                      ze.a,
                      { onFastClick: p, className: "google-login-button" },
                      s.createElement("span", {
                        className: "google-logo logo",
                      }),
                      s.createElement("span", null, " ", t.loginWithGoogle, " ")
                    )
                  )
                )
              : null
          )
        )
      );
    };
    function Is(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function Rs(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? Is(Object(i), !0).forEach(function (t) {
              Ie()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : Is(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    const Fs = 0,
      As = 48,
      Os = 48;
    function zs() {
      const e = {};
      return (
        (window.log = da),
        Object.assign(e, b.util.events),
        (e.Views = { home: Bo, calendar: oa, search: ra }),
        (e.leftDivider = void 0),
        (e.rightDivider = void 0),
        (e.$head = void 0),
        (e.$left = void 0),
        (e.$right = void 0),
        (e.$body = void 0),
        (e.$overlays = void 0),
        (e.$tableContextMenuContainer = void 0),
        (e.$foot = void 0),
        (e.$header = void 0),
        (e.$menu = void 0),
        (e.$menuCenter = void 0),
        (e.$menuRight = void 0),
        (e.setIsInitialized = (t) => {
          e.isInitialized = t;
        }),
        e.setIsInitialized(!1),
        (e.topPadding = Fs),
        (e.planInfo = void 0),
        (e.$planInfo = void 0),
        (e.setTopPadding = or),
        (e.currentView = void 0),
        (e.navigationStates = {}),
        (e.destroy = Er),
        (e.backToRoot = Mr),
        (e.handleLogout = Ir),
        (e.init = zr),
        (e.updateBackground = Dr),
        (e.showRight = Sr),
        (e.hideRight = _r),
        (e.getAvailableTypes = Hs),
        (e.openTable = lr),
        (e.createTable = cr),
        (e.openCalendar = nr),
        (e.openSearch = sr),
        (e.openHome = rr),
        (e.openRecord = dr),
        (e.popupRecord = ur),
        (e.openFullscreen = mr),
        (e.closeFullscreen = fr),
        (e.closeRecord = hr),
        (e.closeAllRecords = gr),
        (e.navigate = ar),
        (e.getCurrentEditor = vr),
        (e.dropDatabase = Hr),
        (e.saveArchiveAs = Ur),
        (e.duplicateDatabase = Vr),
        (e.renameDatabase = Wr),
        (e.evictDatabase = Br),
        (e.reorganizeDatabase = qr),
        (e.createDatabase = Yr),
        (e.importArchive = Gr),
        (e.showLeftPanel = Bs),
        (e.hideLeftPanel = qs),
        (e.setCloudSyncState = Lr),
        (e.views = {}),
        (e.fullscreenStack = []),
        (e.rightVisible = !1),
        (e.fullWidth = 0),
        (e.bodyWidth = 0),
        (e.leftWidth = 180),
        (e.isLeftOpen = !0),
        (e.isLeftOpenSaved = !0),
        (e.isLeftOpenVerticalSaved = !0),
        (e.rightWidth = 672),
        (e.leftWidthSaved = 180),
        (e.rightWidthSaved = 672),
        (e.leftWidthVerticalSaved = 180),
        (e.rightWidthVerticalSaved = 672),
        (e.footHeight = 0),
        (e.headHeight = 96),
        (e.initRoot = function () {
          window.root = new En();
        }),
        (e.setupListeners = function () {
          const e = window.dbms;
          if (!e) return console.warn("Cannot setup listeners. No dbms");
          const t = e.getRemoteConnection();
          if (!t)
            return console.warn(
              "Cannot setup listerns. RemoteConnection not initialised"
            );
          t.on(K.NEED_RELOGIN, () => Ls());
        }),
        (e.ninoxCloudRelogin = Ls),
        e
      );
    }
    function Ls() {
      var e, t;
      const i = dbms.getRemoteConnection();
      if (!i)
        return console.warn(
          "Cannot perform ninoxCloudRelogin. Remote not initiaised"
        );
      const o =
          (null === (e = i.getSessionInfo()) ||
          void 0 === e ||
          null === (t = e.user) ||
          void 0 === t
            ? void 0
            : t.email) || "",
        n =
          i.isSamlEnabled() || i.isOidcEnabled() ? () => i.ssoLogin() : void 0,
        r = i.isSamlEnabled() ? Y() : i.isOidcEnabled() ? G() : { error: "" };
      if (n) {
        const { error: e } = r;
        if (e) {
          const e = () => a.unmountComponentAtNode(t[0]),
            t = $.backplane({
              close: e,
              scrollable: !0,
              closable: !1,
              cls: "sso-error",
            });
          return a.render(
            s.createElement(Ve, {
              onTryAgain: () => {
                t.close(), setTimeout(n, 0);
              },
            }),
            t[0]
          );
        }
        n();
      } else if (i.isAddsEnabled()) {
        const e = () => a.unmountComponentAtNode(t[0]),
          t = $.backplane({ close: e, scrollable: !0, closable: !1 });
        a.render(
          s.createElement(Ca, {
            email: o,
            close: (e) => {
              t.close(), e && i.trigger(K.RELOGIN_CANCELLED);
            },
            afterLogin: () => i.trigger(K.RELOGIN_SUCCESSFUL),
          }),
          t[0]
        );
      } else {
        const e = () => a.unmountComponentAtNode(t[0]),
          t = $.backplane({ close: e, scrollable: !0, closable: !1 });
        let n = !Object(c.g)() && !0;
        a.render(
          s.createElement(Ms, {
            email: o,
            close: (e) => {
              t.close(), e && i.trigger(K.RELOGIN_CANCELLED);
            },
            afterLogin: () => i.trigger(K.RELOGIN_SUCCESSFUL),
            isGoogleAvailable: n,
          }),
          t[0]
        );
      }
    }
    function js(e) {
      let t,
        i = void 0,
        o = void 0,
        a = void 0,
        n = e.moduleId;
      switch (e.moduleId) {
        case "default":
          (n = "home"), (t = "home");
          break;
        case "home":
        case "calendar":
        case "search":
          t = e.moduleId;
          break;
        default:
          let s = void 0;
          const r = Hs(!0);
          for (const t of r)
            if (
              ((s =
                t.id === e.moduleId
                  ? t
                  : t.children.find((t) => t.id === e.moduleId)),
              s)
            )
              break;
          void 0 === s ? ((n = "default"), (i = "default")) : (i = s.id),
            (o = e.nid),
            (a = e.tabId),
            (t = "table");
      }
      return "default" === e.moduleId || "default" === i
        ? (A(Rs({}, e, { moduleId: n, vid: "default" })),
          js(Rs({}, e, { moduleId: n, vid: "default" })))
        : { base: t, tid: i, vid: e.vid, nid: o, tab: a };
    }
    function Ps() {
      const e = (e) => {
        window.database &&
          (e.teamId !== database.account.id || e.dbId !== database.id
            ? dbms.closeDatabase(function () {
                window.location.reload();
              })
            : br(js(e)));
      };
      U("tab", e, null),
        U("view", e, null),
        U(
          "team",
          (e) => {
            window.database &&
              dbms.closeDatabase(function () {
                window.location.reload();
              });
          },
          null
        );
    }
    function Hs(e) {
      const t = b.util
          .localeSortBy(database.schema.types, "order")
          .filter((t) => Us(t, e)),
        i = [];
      for (const o of t) {
        if (o.master) continue;
        const t = o.getAllChildren().filter((t) => Us(t, e));
        (o.children = b.util.localeSortBy(t, "order")), i.push(o);
      }
      return i;
    }
    function Us(e, t) {
      return (
        (database.canRead(e) && (t || !e.hidden)) ||
        (database.adminMode && database.isAdminEnabled())
      );
    }
    function Vs() {
      return 0 === window.orientation || 180 === window.orientation;
    }
    function Ws() {
      Zs(!0);
    }
    function Bs({ shouldResetWidth: e }) {
      (ui.isLeftOpenSaved = !0), e ? Ys(ui.leftWidth || 180) : Zs(), Ks();
    }
    function qs() {
      (ui.isLeftOpenSaved = !1), Zs(), Ks();
    }
    function Ys(e) {
      (e = e < 20 ? 0 : Xs(e, 180, 54, 640)), (ui.leftWidthSaved = e), Zs();
    }
    function Gs() {
      var e = NinoxDocumentInteraction.getUserDefault("ui.left.width");
      ui.leftWidthSaved = 0 === e || "0" === e ? 0 : Xs(e, 180, 54, 640);
      var t = NinoxDocumentInteraction.getUserDefault("ui.left.isOpen");
      ui.isLeftOpenSaved = !("false" === t || !1 === t);
      var i = NinoxDocumentInteraction.getUserDefault("ui.right.width");
      ui.rightWidthSaved = Xs(i, 672, 128, 2048);
    }
    function Xs(e, t, i, o) {
      return (
        e || (e = t),
        (e = "number" != typeof e ? parseInt(e, 10) : Math.round(e)),
        isNaN(e) && (e = t),
        e < i && (e = i),
        e > o && (e = o),
        e
      );
    }
    function Ks() {
      NinoxDocumentInteraction.setUserDefault(
        "ui.left.width",
        ui.leftWidthSaved
      ),
        NinoxDocumentInteraction.setUserDefault(
          "ui.right.width",
          ui.rightWidthSaved
        ),
        NinoxDocumentInteraction.setUserDefault(
          "ui.left.isOpen",
          ui.isLeftOpenSaved
        );
    }
    function Js(e) {
      (e = Xs(e, 672, 128, 2048)), (ui.rightWidthSaved = e), Zs();
    }
    function Zs(e) {
      Vs();
      var t = ui.isLeftOpenSaved,
        i = ui.leftWidthSaved,
        o = ui.rightWidthSaved,
        a = window.getWidth(),
        n =
          a -
          (i =
            0 === i || "0" === i
              ? 0
              : Math.max(
                  54,
                  Math.min(Math.floor(a - 480), Math.floor(a / 3), i)
                )) -
          (o = Math.max(320, Math.min(a - i, o)));
      ui.fullWidth !== a ||
      ui.leftWidth !== i ||
      ui.rightWidth !== o ||
      ui.bodyWidth !== n ||
      ui.isLeftOpen !== t
        ? ((ui.fullWidth = a),
          (ui.leftWidth = i),
          (ui.rightWidth = o),
          (ui.bodyWidth = n),
          (ui.isLeftOpen = t),
          ir())
        : e &&
          ui.currentView &&
          ui.currentView.bodyResized &&
          ui.currentView.bodyResized();
      const s = ui.currentView ? ui.currentView.base : "",
        r =
          ui.currentView && ui.currentView.view ? ui.currentView.view.base : "";
      er(s, r), tr(s, r);
    }
    function Qs(e, t) {
      return (
        { table: 1, calendar: 1, search: 1 }[e] ||
        ("home" === e && "history" === t)
      );
    }
    function er(e, t) {
      ui.fullWidth >= 640 && Qs(e, t)
        ? ui.$head.css("display", "")
        : ui.$head.css(
            "display",
            { table: 1, calendar: 1, search: 1 }[e] ? "" : "none"
          );
    }
    function tr(e, t) {
      ui.fullWidth <= 640 && Qs(e, t)
        ? ((ui.$foot[0].style.display = ""),
          (ui.footHeight = 48 + $.getDevicePadding().bottom))
        : ((ui.$foot[0].style.display = "none"),
          (ui.footHeight = 0 + $.getDevicePadding().bottom)),
        (ui.$foot[0].style.height = ui.footHeight + "px"),
        (ui.$body[0].style.bottom = ui.footHeight + "px"),
        (ui.$right[0].style.bottom = ui.footHeight + "px"),
        (ui.$left[0].style.bottom = ui.footHeight + "px");
    }
    function ir() {
      var e = window.getWidth() <= 640,
        t = ui.isLeftOpen ? ui.leftWidth : 0,
        i = ui.rightVisible ? ui.rightWidth : 0;
      NinoxViewController.setLeftWidth && NinoxViewController.setLeftWidth(t),
        (ui.$left[0].style.width = t + "px"),
        (ui.$body[0].style.left = t + "px"),
        (ui.$body[0].style.right = i + "px"),
        (ui.$head[0].style.left = t + "px"),
        (ui.$headerContainer[0].style.left = t + "px"),
        (ui.$menu[0].style.left = t + "px"),
        (ui.$head[0].style.top = ui.topPadding + Os + "px"),
        (ui.$headerContainer[0].style.top = ui.topPadding + "px"),
        (ui.$menu[0].style.top = ui.topPadding + Os + 8 + "px"),
        (ui.$menuRight[0].style.top = ui.topPadding + Os + 8 + "px"),
        (ui.$left[0].style.top = ui.topPadding + "px"),
        (ui.$body[0].style.top = ui.topPadding + As + Os + "px"),
        (ui.$lashRight[0].style.top = ui.topPadding + As + Os + "px"),
        (ui.$adminContainer[0].style.top = ui.topPadding + 8 + "px"),
        e
          ? ((ui.$right[0].style.top = "0"),
            (ui.$right[0].style.left = "0"),
            (ui.$right[0].style.right = "0"),
            (ui.$right[0].style.width = ""),
            (ui.$right[0].style.zIndex = 10),
            (ui.rightDivider[0].style.display = "none"))
          : ((ui.saveSchemaDialog[0].style.top = ui.topPadding + 6 + "px"),
            (ui.$right[0].style.top = ui.topPadding + As + Os + "px"),
            (ui.$right[0].style.width = ui.rightWidth + "px"),
            (ui.$right[0].style.left = ""),
            (ui.$right[0].style.right = ""),
            (ui.$right[0].style.zIndex = ""),
            (ui.rightDivider[0].style.display = "")),
        ui.currentView &&
          ui.currentView.bodyResized &&
          ui.currentView.bodyResized(),
        ui.sideEditor && ui.sideEditor.resize(),
        ui.navigation && ui.navigation.resize(),
        ui.recordNavigation && ui.recordNavigation.resize(),
        Ji();
    }
    function or(e) {
      (ui.topPadding = 0 === e ? Fs : e), ui.isInitialized && ir();
    }
    function ar(e) {
      br(e);
    }
    function nr() {
      Object(l.f)("Calendar", "Open"),
        F(
          Rs({}, H(), {
            moduleId: "calendar",
            vid: "default",
            nid: void 0,
            tabId: void 0,
          })
        );
    }
    function sr() {
      Object(l.f)("Search", "Open"),
        F(
          Rs({}, H(), {
            moduleId: "search",
            vid: "default",
            nid: void 0,
            tabId: void 0,
          })
        );
    }
    function rr() {
      Object(l.f)("DatabaseHome", "Open"),
        F(
          Rs({}, H(), {
            moduleId: "home",
            vid: "default",
            nid: void 0,
            tabId: void 0,
          })
        );
    }
    function lr(e, t, i, o) {
      Object(l.f)("Table", "Open"),
        F(Rs({}, H(), { moduleId: e, vid: t || "default", nid: i, tabId: o }));
    }
    function cr() {
      Object(l.f)("Table", "Create"),
        new ni({ afterSaveType: function (e) {} });
    }
    function dr(e, t) {
      const i = pr(b.schemas.tidOf(e), t);
      lr(b.schemas.tidOf(e), void 0, e, i);
    }
    function ur(e, t) {
      const i = new No.PopupEditor(e),
        o = pr(b.schemas.tidOf(e), t);
      o && i.editor.selectTab(o);
    }
    function pr(e, t) {
      if (!t) return;
      const i = database.schema.types[e],
        o = i && i.sorted.find((e) => "tab" === e.base && e.caption === t);
      return o && o.id;
    }
    function hr() {
      widgets.popupEditorStack.length > 0
        ? widgets.popupEditorStack[widgets.popupEditorStack.length - 1].close()
        : ui.sideEditor && ui.sideEditor.close();
    }
    function mr(e, t, i) {
      const o = new la(e, t);
      ui.fullscreenStack.push(o);
      const a = pr(b.schemas.tidOf(e), t.tab || i);
      a && o.editor.selectTab(a);
    }
    function fr() {
      var e = ui.fullscreenStack.pop();
      e && e.close();
    }
    function gr() {
      for (; widgets.popupEditorStack.length > 0; ) {
        widgets.popupEditorStack[widgets.popupEditorStack.length - 1].close();
      }
      ui.sideEditor && ui.sideEditor.close();
    }
    function vr() {
      return ui.currentView &&
        "table" === ui.currentView.base &&
        ui.currentView.renderers &&
        ui.currentView.renderers.full &&
        ui.currentView.renderers.full.visible
        ? ui.currentView.renderers.full.editor
        : ui.sideEditor.editor;
    }
    function br(e) {
      if (null === e) return;
      var t;
      if (ui.currentView) {
        var i = ui.currentView.getNavigationState();
        wr(i),
          (t = yr(e)).base !== i.base
            ? (ui.currentView.hide(),
              (ui.currentView = xr(t)),
              ui.currentView.show())
            : ui.currentView.setNavigationState(t);
      } else (t = yr(e)), (ui.currentView = xr(t)), ui.currentView.show();
      ui.navigation.updateState(t),
        trackPageView({ home: "database" }[e.base] || e.base);
      const o = ui.currentView.view ? ui.currentView.view.base : "default";
      er(ui.currentView.base, o),
        tr(ui.currentView.base, o),
        ui.currentView && ui.currentView.hasLash && ui.currentView.hasLash()
          ? ui.rightVisible || Cr()
          : kr();
    }
    function yr(e) {
      switch (e.base) {
        case "table":
          return Object.assign(
            {},
            (e.tid &&
              e.vid &&
              ui.navigationStates["table:" + e.tid + ":" + e.vid]) ||
              (e.tid && ui.navigationStates["table:" + e.tid]) ||
              {},
            e
          );
        default:
          return Object.assign(ui.navigationStates[e.base] || {}, e);
      }
    }
    function wr(e) {
      switch (e.base) {
        case "table":
          (ui.navigationStates["table:" + e.tid] = e),
            (ui.navigationStates["table:" + e.tid + ":" + e.vid] = e);
          break;
        default:
          ui.navigationStates[e.base] = e;
      }
    }
    function xr(e) {
      const t = ui.views[e.base];
      return (
        null == t && A(Rs({}, H(), { vid: "default" })),
        t.setNavigationState(e),
        t
      );
    }
    function Tr(e) {}
    function Cr() {
      ui.fullWidth > 640 &&
        !TOUCH &&
        (ui.$lashRight.show(),
        (ui.$lashRight[0].style.transform =
          ui.$lashRight[0].style.WebkitTransform =
            "translateX(0)"));
    }
    function kr() {
      (ui.$lashRight[0].style.transform =
        ui.$lashRight[0].style.WebkitTransform =
          "translateX(100%)"),
        ui.$lashRight.hide();
    }
    function Sr() {
      $r(),
        ui.rightVisible ||
          (kr(),
          (ui.rightVisible = !0),
          (ui.$right[0].style.display = ""),
          (ui.rightAnimationTimeout = setTimeout(function () {
            (ui.$right[0].style.transform = ui.$right[0].style.WebkitTransform =
              "translateX(0px)"),
              (ui.rightAnimationTimeout = setTimeout(function () {
                ir();
              }, 400));
          }, 0)));
    }
    function $r() {
      ui.rightAnimationTimeout &&
        (clearTimeout(ui.rightAnimationTimeout),
        (ui.rightAnimationTimeout = void 0)),
        ui.rightHidingCallback &&
          (ui.rightHidingCallback(), (ui.rightHidingCallback = void 0));
    }
    function _r(e) {
      $r(),
        ui.rightVisible
          ? ((ui.rightVisible = !1),
            (ui.$right[0].style.transform = ui.$right[0].style.WebkitTransform =
              "translateX(100%)"),
            ir(),
            (ui.rightHidingCallback = e),
            (ui.rightAnimationTimeout = setTimeout(function () {
              (ui.rightHidingTimeout = void 0),
                (ui.rightHidingCallback = void 0),
                (ui.$right[0].style.display = "none"),
                e && e();
            }, 400)),
            Cr())
          : e && e();
    }
    function Er(e) {
      if (
        (a.unmountComponentAtNode(ui.leftDivider[0]),
        a.unmountComponentAtNode(ui.rightDivider[0]),
        !ui.isInitialized)
      )
        return e();
      window.removeEventListener("popstate", Tr, !1),
        ui.views.home.destroy(),
        ui.views.calendar.destroy(),
        ui.views.search.destroy(),
        ui.views.table.destroy(),
        (ui.views = {}),
        (ui.currentView = void 0),
        (ui.rightDivider = void 0),
        (ui.leftDivider = void 0),
        (ui.$head = void 0),
        (ui.$left = void 0),
        (ui.$right = void 0),
        (ui.$body = void 0),
        (ui.$foot = void 0),
        (ui.$header = void 0),
        (ui.$menu = void 0),
        (ui.$menuCenter = void 0),
        (ui.$menuRight = void 0),
        ui.setIsInitialized(!1),
        (ui.rightVisible = !1),
        (ui.currentView = void 0),
        (ui.$overlays = void 0),
        (ui.$tableContextMenuContainer = void 0),
        (ui.navigationStates = {}),
        (ui.undoManager = void 0),
        $(document.body).empty(),
        window.removeEventListener("resize", Ws),
        dbms.closeDatabase(e);
    }
    function Dr(e) {
      ui.currentView &&
        ui.currentView.updateBackground &&
        ui.currentView.updateBackground(e);
    }
    function Nr() {
      ui.isInitialized &&
        (ui.setIsInitialized(!1), window.removeEventListener("resize", Ws));
    }
    function Mr() {
      Nr();
      const e = database.account.id;
      dbms.closeDatabase(function () {
        F({ teamId: e }), ui.destroy(() => {}), window.location.reload();
      });
    }
    function Ir(e) {
      Nr(), ui.destroy(() => e());
    }
    function Rr() {
      Ar(), Or(), Fr();
    }
    function Fr() {
      a.render(
        s.createElement(Be, { adminMode: database.adminMode }),
        ui.rightDivider[0]
      ),
        a.render(
          s.createElement(Be, { adminMode: database.adminMode }),
          ui.leftDivider[0]
        );
    }
    function Ar() {
      (ui.leftDivider = $('<div class="hud-left-divider">').appendTo(ui.$left)),
        TOUCH
          ? ui.leftDivider[0].addEventListener(EVENT_touchstart, a)
          : ui.leftDivider[0].addEventListener("mousedown", a);
      var e = 0,
        t = 0,
        i = 0,
        o = !1;
      function a(a) {
        if (TOUCH) {
          if (1 !== a.touches.length) return;
          (e = a.touches[0].clientX),
            (t = a.touches[0].clientY),
            EVENT_target(a).addEventListener(EVENT_touchmove, n),
            EVENT_target(a).addEventListener(EVENT_touchend, s),
            EVENT_target(a).addEventListener("touchcancel", s);
        } else
          (e = a.clientX),
            (t = a.clientY),
            window.addEventListener("mousemove", n),
            window.addEventListener("mouseup", s);
        (o = !1),
          (i = ui.leftWidth),
          ui.leftDivider.addClass("selected"),
          !1 !== a.cancelable && a.preventDefault();
      }
      function n(a) {
        var n, s;
        if (TOUCH) {
          if (1 !== a.touches.length) return;
          (n = a.touches[0].clientX), (s = a.touches[0].clientY);
        } else (n = a.clientX), (s = a.clientY);
        var r = n - e,
          l = s - t;
        o || (r * r + l * l > 4 && (o = !0)),
          o && Ys(i + r),
          a.preventDefault();
      }
      function s(e) {
        if (TOUCH) {
          if (0 !== e.touches.length) return;
          EVENT_target(e).removeEventListener(EVENT_touchmove, n),
            EVENT_target(e).removeEventListener(EVENT_touchend, s),
            EVENT_target(e).removeEventListener("touchcancel", s);
        } else
          window.removeEventListener("mousemove", n),
            window.removeEventListener("mouseup", s);
        ui.leftDivider.removeClass("selected"), Ks(), e.preventDefault();
      }
    }
    function Or() {
      (ui.rightDivider = $('<div class="hud-right-divider">').appendTo(
        ui.$right
      )),
        TOUCH
          ? ui.rightDivider[0].addEventListener(EVENT_touchstart, o)
          : ui.rightDivider[0].addEventListener("mousedown", o);
      var e = 0,
        t = 0,
        i = 0;
      function o(o) {
        var s = Date.now();
        if (Math.abs(s - i) < 1e3) Js(672), Ks();
        else {
          if (((i = Date.now()), TOUCH)) {
            if (1 !== o.touches.length) return;
            (e = o.touches[0].clientX),
              EVENT_target(o).addEventListener(EVENT_touchmove, a),
              EVENT_target(o).addEventListener(EVENT_touchend, n),
              EVENT_target(o).addEventListener("touchcancel", n);
          } else
            (e = o.clientX),
              window.addEventListener("mousemove", a),
              window.addEventListener("mouseup", n);
          (t = ui.rightWidth), ui.rightDivider.addClass("selected");
        }
        o.preventDefault();
      }
      function a(i) {
        var o;
        if (TOUCH) {
          if (1 !== i.touches.length) return;
          o = i.touches[0].clientX;
        } else o = i.clientX;
        Js(t + (e - o)), i.preventDefault();
      }
      function n(e) {
        if (TOUCH) {
          if (0 !== e.touches.length) return;
          EVENT_target(e).removeEventListener(EVENT_touchmove, a),
            EVENT_target(e).removeEventListener(EVENT_touchend, n),
            EVENT_target(e).removeEventListener("touchcancel", n);
        } else
          window.removeEventListener("mousemove", a),
            window.removeEventListener("mouseup", n);
        ui.rightDivider.removeClass("selected"), Ks(), e.preventDefault();
      }
    }
    function zr() {
      if (ui.isInitialized) return;
      ui.setIsInitialized(!0),
        Ps(),
        window.addEventListener("popstate", Tr, !1);
      const e = dbms.getRemoteConnection().getServerConfig("settings") || {},
        t = e.windowTitle ? e.windowTitle + " - " : "";
      NinoxDocumentInteraction.setWindowTitle(
        t +
          database.name +
          (database.accountName ? " | " + database.accountName : "")
      ),
        (ui.currentView = void 0),
        (ui.navigationStates = {}),
        ui.updateBackground(),
        (ui.$left = $('<div class="hud-left">').appendTo($(document.body))),
        (ui.$body = $('<div class="hud-body">').appendTo($(document.body))),
        (ui.$foot = $('<div class="hud-foot" style="display:none;">').appendTo(
          $(document.body)
        )),
        (ui.$right = $(
          '<div class="hud-right" style="transform:translateX(100%);-webkit-transform:translateX(100%)">'
        )
          .hide()
          .appendTo($(document.body))),
        (ui.$lashRight = $(
          '<div class="hud-right-lash"><div class="i-40-24 i-white i-line-left"/>'
        )
          .touch(() => ui.currentView.table.selectLastRow())
          .hide()
          .appendTo($(document.body))),
        Cr(),
        $('<div class="hud-right-border">').appendTo(ui.$right),
        (ui.$head = $('<div class="hud-title">').appendTo($(document.body))),
        (ui.$overlays = $('<div style="z-index: 10">').appendTo(
          $(document.body)
        )),
        (ui.$tableContextMenuContainer = $("<div>").appendTo($(document.body))),
        (ui.$menu = $('<div class="hud-menu">').appendTo($(document.body))),
        (ui.$menuCenter = $('<div class="hud-menu-center">').appendTo(
          ui.$menu
        )),
        $('<div class="nx-hspace-flex">').appendTo(ui.$menu),
        (ui.$menuRight = $('<div class="hud-menu-right">').appendTo(
          $(document.body)
        )),
        (ui.$headerContainer = $('<div class="header">').appendTo(
          $(document.body)
        )),
        (ui.navigation = new st()),
        (ui.$header = $('<div class="header-body">').appendTo(
          ui.$headerContainer
        )),
        $('<div class="header-admin-placeholder">').appendTo(ui.$header),
        (ui.$adminContainer = $(
          '<div class="header-admin-container">'
        ).appendTo($(document.body))),
        new Sn(ui.$adminContainer),
        database.adminEnabled &&
          database.isAdmin() &&
          new Wt(ui.$adminContainer),
        Gs(),
        (ui.rightVisible = !1),
        Rr(),
        database.on("admin", void 0, Pr),
        (ui.undoManager = new qe()),
        (window.performUndo = function (e) {
          ui.undoManager && ui.undoManager.performUndo(e, function () {});
        }),
        (window.performRedo = function (e) {
          ui.undoManager && ui.undoManager.performUndo(e, function () {});
        }),
        (ui.recordNavigation = new rt()),
        (ui.sideEditor = new Xi()),
        (ui.saveSchemaDialog = $('<div class="admin-saveschema">')
          .hide()
          .appendTo($(document.body))),
        $(
          '<div class="nx-button-text red admin-saveschema-button" style="margin-right: 2px;">'
        )
          .append(
            $('<div class="i-24-16 i-red i-close admin-saveschema-icon">')
          )
          .append($("<span>").text(locale.resetSchema))
          .appendTo(ui.saveSchemaDialog)
          .touch(function () {
            $.loading(!0),
              database.resetSchema(function () {
                Object(l.f)("Database", "RevertChanges"),
                  $.loading(!1),
                  ui.saveSchemaDialog.hide();
              });
          }),
        $(
          '<div class="nx-button-text blue --ul-save-schema-button admin-saveschema-button">'
        )
          .append(
            $('<div class="i-24-16 i-white i-check admin-saveschema-icon">')
          )
          .append($("<span>").text(locale.saveSchema))
          .appendTo(ui.saveSchemaDialog)
          .touch(function () {
            $.loading(!0),
              ui.trigger("saveSchema"),
              database.saveSchema(function () {
                Object(l.f)("Database", "SaveChanges"),
                  $.loading(!1),
                  ui.saveSchemaDialog.hide();
              });
          }),
        database.on("schema", void 0, jr),
        Q.isEmpty(database.schema.types) &&
          database.adminEnabled &&
          database.setAdminMode(!0),
        Zs(),
        ui.navigation.initialResize(),
        window.addEventListener("resize", Ws),
        (ui.views = {}),
        (ui.views.home = new Bo()),
        (ui.views.calendar = new oa()),
        (ui.views.search = new ra()),
        (ui.views.table = new Ns()),
        va(),
        window.Appcues && window.Appcues.page();
      const i = H();
      i.moduleId && br(js(i)), Object(c.e)(database.schema.afterOpen);
    }
    function Lr(e) {
      ui.navigation && ui.navigation.setCloudSyncState(e);
    }
    function jr(e, t, i) {
      !0 === t
        ? ui.saveSchemaDialog.show()
        : !1 === t && ui.saveSchemaDialog.hide();
    }
    function Pr() {
      Fr();
    }
    function Hr() {
      $.dialog({
        closable: !0,
        caption: locale.dropDatabase,
        message: locale.confirmDropDatabase,
        buttons: [
          {
            color: "red",
            caption: locale.dropDatabase,
            callback: function () {
              var e = database.descriptor();
              Er(function () {
                root.removeDatabase(e, function (e) {
                  e && alert(e),
                    A({ teamId: H().teamId }),
                    window.location.reload();
                });
              });
            },
          },
        ],
      });
    }
    function Ur(e) {
      database.saveEverything(function () {
        var t = database.descriptor();
        root.saveDatabaseArchiveAs(t, e);
      });
    }
    function Vr() {
      database.saveEverything(function () {
        var e = database.descriptor();
        root.duplicateDatabase(e, function (e, t) {
          !e && t && (F(Rs({}, H(), { dbId: t.id })), window.location.reload());
        });
      });
    }
    function Wr() {
      database.saveEverything(function () {
        var e = database.descriptor();
        root.renameDatabase(e, function (e, t) {
          !e && t && (A(Rs({}, H(), { dbId: t.id })), window.location.reload());
        });
      });
    }
    function Br() {
      database.saveEverything(function () {
        var e = database.descriptor();
        Er(function () {
          root.evictDatabase(e, function (e) {
            window.location.reload();
          });
        });
      });
    }
    function qr() {
      database.saveEverything(function () {
        var e = database.descriptor();
        Er(function () {
          root.reorganizeDatabase(e, function (e, t) {
            !e && t
              ? (F(Rs({}, H(), { dbId: t.id })), window.location.reload())
              : window.location.reload();
          });
        });
      });
    }
    function Yr() {
      ui.isInitialized
        ? database.saveEverything(function () {
            root.createDatabase();
          })
        : root.createDatabase();
    }
    function Gr() {
      ui.isInitialized
        ? database.saveEverything(function () {
            root.importArchive();
          })
        : root.importArchive();
    }
    function Xr(e, t, i, o) {
      i.base;
      (this.parent = e),
        (this.field = i),
        (this.filter = o),
        (this.silent = !1),
        (this.el = $('<div style="margin:-8px">').appendTo(t)),
        (this.fromModel = new util.SimpleModel(
          new schemas.TTime(void 0, void 0, {
            caption: locale.fromDate,
            formWidth: 0.5,
          })
        )),
        this.fromModel.on("update", this.filtersChanged, this),
        (this.fromField = new ct.a(void 0, this.fromModel, this.el)),
        (this.toModel = new util.SimpleModel(
          new schemas.TTime(void 0, void 0, {
            caption: locale.toDate,
            formWidth: 0.5,
          })
        )),
        this.toModel.on("update", this.filtersChanged, this),
        (this.toField = new ct.a(void 0, this.toModel, this.el)),
        this.updateUI();
    }
    function Kr(e, t, i, o) {
      (this.parent = e),
        (this.value = o),
        (this.field = i),
        (this.el = $('<div class="stringeditor">')
          .appendTo(t)
          .touch($.proxy(this.popup, this))),
        (this.text = $('<div class="input-text">').appendTo(this.el)),
        $('<div class="choice-dropdown">').appendTo(this.el),
        this.updateUI();
    }
    function Jr(e, t, i, o, a) {
      (this.table = e),
        (this.fid = t),
        (this.nid = i),
        (this.c = o),
        (this.r = a),
        (this.isEditing = !1),
        (this.$input = void 0),
        (this.val = void 0),
        (this.str = void 0),
        (this.stringMultiline = !1);
    }
    function Zr(e, t, i, o, a) {
      tables.editors.string.apply(this, arguments),
        (this.$aux = void 0),
        (this.orderedValues = []),
        (this.visibleValues = []),
        (this.selectedValueId = void 0),
        (this.filterString = ""),
        (this.currentString = ""),
        (this.nid = i);
    }
    function Qr(e, t) {
      for (var i = 0; i < e.length; i++) {
        if (e[i].id === t) return i;
      }
      return -1;
    }
    function el(e, t, i, o) {
      (this.parent = e),
        (this.field = i),
        (this.filter = o),
        t.addClass("editor-choice"),
        (this.el = $('<div class="stringeditor">')
          .appendTo(t)
          .touch($.proxy(this.popup, this))),
        (this.text = $('<div class="input-text multicombo">').appendTo(
          this.el
        )),
        $('<div class="choice-dropdown">').appendTo(this.el),
        this.updateUI();
    }
    function tl(e, t) {
      return "multi" === e.base || "dmulti" === e.base ? il(e, t) : ol(e, t);
    }
    function il(e, t) {
      var i = {},
        o = /^\s*\>\s*\[\s*((?:[0-9]+(?:\s*\,\s*[0-9]+)*)?)\s*\]$/.exec(t);
      if (o)
        for (var a = o[1].split(","), n = 0; n < a.length; n++)
          i[parseInt(a[n].trim())] = !0;
      return i;
    }
    function ol(e, t) {
      var i = {};
      if (t)
        for (var o = t.split(" or "), a = 0; a < o.length; a++) {
          var n =
            /=\s*(?:([0-9]+|true|false|null)|\"([a-zA-Z0-9\.\_\-]+)\")/.exec(
              o[a]
            );
          n && (i[null != n[1] ? n[1] : n[2]] = !0);
        }
      return i;
    }
    function al(e, t) {
      return "multi" === e.base || "dmulti" === e.base ? nl(e, t) : sl(e, t);
    }
    function nl(e, t) {
      var i = ">[",
        o = 0;
      for (var a in t)
        t.hasOwnProperty(a) && t[a] && ((i += (o > 0 ? "," : "") + a), o++);
      return (i += "]"), o > 0 ? i : "";
    }
    function sl(e, t) {
      var i = "";
      for (var o in t)
        t.hasOwnProperty(o) && t[o] && (i += (i ? " or " : "") + "=" + rl(o));
      return i;
    }
    function rl(e) {
      return /^[0-9]+|true|false|null$/.test(e)
        ? String(e)
        : '"' + String(e) + '"';
    }
    function ll(e, t, i, o) {
      var a = this,
        n = i.base;
      (this.parent = e),
        (this.field = i),
        (this.filter = o),
        (this.silent = !1),
        (this.el = $('<div style="margin:-8px">').appendTo(t));
      var s = $('<div class="switch">').appendTo(this.el);
      (this.$switchRange = $('<div class="switch-item selected">')
        .text(locale.filter)
        .appendTo(s)
        .touch(function () {
          "range" !== util.getFilterDateRange(a.filter).mode &&
            a.updateModel("");
        })),
        (this.$switchEmpty = $('<div class="switch-item">')
          .text(locale.empty)
          .appendTo(s)
          .touch(function () {
            "empty" !== util.getFilterDateRange(a.filter).mode
              ? a.updateModel("=null")
              : a.updateModel(null);
          })),
        (this.$switchNotEmpty = $('<div class="switch-item">')
          .text(locale.notEmpty)
          .appendTo(s)
          .touch(function () {
            "not-empty" !== util.getFilterDateRange(a.filter).mode
              ? a.updateModel("!=null")
              : a.updateModel(null);
          })),
        (this.$range = $("<div>").appendTo(this.el)),
        (this.fromModel =
          "date" === n
            ? new util.SimpleModel(
                new schemas.TDate(void 0, void 0, {
                  caption: locale.fromDate,
                  formWidth: 0.5,
                })
              )
            : "datx" === n
            ? new util.SimpleModel(
                new schemas.TDatx(void 0, void 0, {
                  caption: locale.fromDate,
                  formWidth: 0.5,
                })
              )
            : new util.SimpleModel(
                new schemas.TTimestamp(void 0, void 0, {
                  caption: locale.fromDate,
                  formWidth: 0.5,
                })
              )),
        this.fromModel.on("update", this.filtersChanged, this),
        (this.fromField = new ct.a(void 0, this.fromModel, this.$range)),
        (this.toModel =
          "date" === n
            ? new util.SimpleModel(
                new schemas.TDate(void 0, void 0, {
                  caption: locale.toDate,
                  formWidth: 0.5,
                })
              )
            : "datx" === n
            ? new util.SimpleModel(
                new schemas.TDatx(void 0, void 0, {
                  caption: locale.toDate,
                  formWidth: 0.5,
                })
              )
            : new util.SimpleModel(
                new schemas.TTimestamp(void 0, void 0, {
                  caption: locale.toDate,
                  formWidth: 0.5,
                })
              )),
        this.toModel.on("update", this.filtersChanged, this),
        (this.toField = new ct.a(void 0, this.toModel, this.$range)),
        this.updateUI();
    }
    function cl(e, t, i, o) {
      (this.parent = e),
        (this.parentEl = t),
        (this.value = o),
        (this.el = $('<div class="stringeditor">').appendTo(t)),
        (this.input = $(
          '<input type="text" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false">'
        )
          .attr("placeholder", locale.filter)
          .appendTo(this.el)
          .val(this.value || "")
          .change($.proxy(this.updateModel, this))),
        (this.button = $(
          '<div class="stringeditor-button"><div class="icon-big-black icon-big-close2"></div></div>'
        )
          .appendTo(this.el)
          .touch($.proxy(this.clear, this))),
        this.updateUI();
    }
    function dl(e, t, i, o, a) {
      tables.editors.string.apply(this, arguments),
        (this.$aux = void 0),
        (this.orderedValues = []),
        (this.visibleValues = []),
        (this.selectedValues = []),
        (this.filterString = ""),
        (this.currentString = ""),
        (this.nid = i),
        (this.$backplane = null);
    }
    function ul(e, t) {
      for (var i = 0; i < e.length; i++) {
        if (e[i].id === t) return i;
      }
      return -1;
    }
    function pl() {
      const e = {};
      return (
        (e.editors = {
          choice: Zr,
          dchoice: Zr,
          multi: dl,
          dmulti: dl,
          string: Jr,
        }),
        (e.createFilterEditor = ml),
        (e.createCellEditor = hl),
        (e.aggTypeToSymbol = fl),
        e
      );
    }
    function hl(e, t, i, o, a) {
      var n = e.type.fields[t];
      return new (tables.editors[n.base] || tables.editors.string)(
        e,
        t,
        i,
        o,
        a
      );
    }
    function ml(e, t, i, o) {
      switch (i.base) {
        case "boolean":
          return new Kr(e, t, i, o);
        case "user":
        case "choice":
        case "multi":
        case "dchoice":
        case "dmulti":
          return new el(e, t, i, o);
        case "date":
        case "datx":
        case "timestamp":
        case "appointment":
          return new ll(e, t, i, o);
        case "time":
          return new Xr(e, t, i, o);
        case "number":
        case "string":
        default:
          return new cl(e, t, i, o);
      }
    }
    function fl(e, t) {
      var i = {
        sum: "Σ",
        first: "⤒",
        last: "⤓",
        avg: "Ø",
        cnt: "#",
        min: "⬇",
        max: "⬆",
      }[e];
      return (
        (i ? '<span class="table-summary-agg">' + i + "</span> " : "") +
        "<span>" +
        htmlEscape(t) +
        "</span>"
      );
    }
    if (
      ((Xr.prototype.destroy = function () {
        this.fromField.destroy(),
          this.toField.destroy(),
          this.el.remove(),
          this.menu.remove();
      }),
      (Xr.prototype.updateModel = function (e) {
        (this.filter = e), this.updateUI(), this.parent.updateFilter(!1);
      }),
      (Xr.prototype.filtersChanged = function () {
        if (!this.silent) {
          this.field.base;
          var e = this.fromModel.value,
            t = this.toModel.value;
          if (null != e && null != t && t < e) {
            var i = e;
            (e = t), (t = i);
          }
          this.updateModel(util.getTimeRangeFilter({ from: e, to: t }));
        }
      }),
      (Xr.prototype.updateUI = function () {
        this.field.base;
        var e = this.filter,
          t = util.getFilterTimeRange(e) || {},
          i = t.from,
          o = t.to;
        (this.silent = !0),
          this.fromModel.setValue(i),
          this.toModel.setValue(o),
          (this.silent = !1);
      }),
      (Xr.prototype.setFilter = function (e) {
        (this.filter = e), this.updateUI();
      }),
      (Xr.prototype.getFilter = function () {
        return this.filter;
      }),
      (Xr.prototype.show = function () {
        this.el.show();
      }),
      (Xr.prototype.hide = function () {
        this.el.hide();
      }),
      (Kr.prototype.destroy = function () {
        this.el.remove();
      }),
      (Kr.prototype.updateModel = function (e) {
        (this.value = e), this.updateUI(), this.parent.updateFilter(!0);
      }),
      (Kr.prototype.updateUI = function () {
        var e = this.value,
          t = "";
        (t = e
          ? /^\s*\=\s*null\s*$/.test(e)
            ? "<span>" + htmlEscape(locale.empty) + "</span>"
            : /^\s*\!\=\s*null\s*$/.test(e)
            ? "<span>" + htmlEscape(locale.notEmpty) + "</span>"
            : /^\s*\=\s*true\s*$/.test(e)
            ? "<span>" + htmlEscape(locale.yes) + "</span>"
            : /^\s*\=\s*false\s*$/.test(e)
            ? "<span>" + htmlEscape(locale.no) + "</span>"
            : '<span color="#f00">' + htmlEscape(e) + "</span>"
          : '<span style="color:#999">' +
            htmlEscape(locale.filter) +
            "</span>"),
          this.text.html(t);
      }),
      (Kr.prototype.setFilter = function (e) {
        (this.value = e), this.updateUI();
      }),
      (Kr.prototype.show = function () {
        this.el.show();
      }),
      (Kr.prototype.hide = function () {
        this.el.hide();
      }),
      (Kr.prototype.getFilter = function () {
        return this.value;
      }),
      (Kr.prototype.popup = function () {
        var e = this,
          t = this.value,
          i = $.backplane({}),
          o = $('<div class="choice-menu">')
            .css({ "min-width": this.el.width() })
            .appendTo(i),
          a = $('<div class="choice-menu-head">').appendTo(o);
        $(
          '<div class="choice-menu-item"><div class="choice-label">' +
            locale.all +
            "</div></div>"
        )
          .click(function () {
            e.updateModel(void 0), i.close();
          })
          .appendTo(a),
          $(
            '<div class="choice-menu-item"><div class="choice-label">' +
              locale.empty +
              "</div></div>"
          )
            .touch(function () {
              i.close(), e.updateModel("=null");
            })
            .appendTo(a),
          $(
            '<div class="choice-menu-item"><div class="choice-label">' +
              locale.notEmpty +
              "</div></div>"
          )
            .touch(function () {
              i.close(), e.updateModel("!=null");
            })
            .appendTo(a),
          $(
            '<div class="choice-menu-item"><div class="choice-indicator' +
              ("=true" === t ? " selected" : "") +
              '"></div><div class="choice-symbol"></div><div class="choice-label">' +
              locale.yes +
              "</div></div>"
          )
            .click(function () {
              e.updateModel("=true"), i.close();
            })
            .appendTo(o),
          $(
            '<div class="choice-menu-item"><div class="choice-indicator' +
              ("=false" === t ? " selected" : "") +
              '"></div><div class="choice-symbol"></div><div class="choice-label">' +
              locale.no +
              "</div></div>"
          )
            .click(function () {
              e.updateModel("=false"), i.close();
            })
            .appendTo(o);
        var n = o.outerWidth(),
          s = o.outerHeight(),
          r = this.el.offset();
        (r.top += 32),
          r.left + n > window.getWidth() && (r.left = window.getWidth() - n),
          r.top + s > window.getHeight() && (r.top = window.getHeight() - s),
          o.offset(r);
      }),
      (Jr.prototype.showAux = function () {}),
      (Jr.prototype.hideAux = function () {}),
      (Jr.prototype.updateAux = function () {}),
      (Jr.prototype.keyupCallback = function () {}),
      (Jr.prototype.keydownCallback = function () {}),
      (Jr.prototype.destroy = function () {
        this.stopEdit(!1);
      }),
      (Jr.prototype.getNid = function () {
        return this.nid;
      }),
      (Jr.prototype.isCell = function (e, t) {
        return this.c === e && this.r === t;
      }),
      (Jr.prototype.getRow = function () {
        return this.r;
      }),
      (Jr.prototype.getColumn = function () {
        return this.c;
      }),
      (Jr.prototype.keydown = function (e) {
        if (!1 !== this.keydownCallback(e)) {
          var t = this.table,
            i = this.stringMultiline;
          switch (e.which) {
            case 9:
              e.shiftKey
                ? (t.stopEdit(!0), t.editorPrev())
                : (t.stopEdit(!0), t.editorNext()),
                e.preventDefault();
              break;
            case 13:
              i ||
                (e.shiftKey
                  ? t.editorInsert("down")
                  : (t.stopEdit(!0), t.editorDown()),
                e.preventDefault());
              break;
            case 27:
              t.stopEdit(!1), e.preventDefault();
          }
        }
      }),
      (Jr.prototype.keyup = function (e) {
        this.keyupCallback(e);
      }),
      (Jr.prototype.blur = function (e) {
        this.isEditing && this.table.stopEdit();
      }),
      (Jr.prototype.startEdit = function () {
        if (!this.isEditing && this.isWritable()) {
          var e = this.table,
            t = this.nid,
            i = this.fid,
            o = e.type.fields[i];
          if (o) {
            var a = database.loadNodeSync(t);
            a &&
              ((this.val = a[i]),
              (this.str = o.formatEditor(this.val)),
              (this.isEditing = !0),
              o.stringMultiline
                ? ((this.$input = $EL(
                    "textarea",
                    "t-editor-textarea",
                    e.$view
                  )),
                  (this.stringMultiline = !0))
                : (o.base,
                  (this.$input = $EL("input", "t-editor-input", e.$view, {
                    type: "text",
                    autocomplete: "off",
                    autocorrect: "off",
                    spellcheck: "false",
                  })),
                  (this.stringMultiline = !1)),
              this.$input.addEventListener(
                "keydown",
                $.proxy(this.keydown, this),
                !1
              ),
              this.$input.addEventListener(
                "keyup",
                $.proxy(this.keyup, this),
                !1
              ),
              this.$input.addEventListener(
                "blur",
                $.proxy(this.blur, this),
                !1
              ),
              this.update(),
              (this.$input.value = this.str),
              this.$input.focus(),
              this.$input.select(),
              this.showAux());
          }
        }
      }),
      (Jr.prototype.isWritable = function () {
        return database.canWriteNodeField(this.nid, this.fid);
      }),
      (Jr.prototype.stopEdit = function (e) {
        if (this.isEditing) {
          (this.isEditing = !1), this.hideAux();
          var t = this.$input;
          this.$input = void 0;
          var i = t.value;
          if (($REMOVE(t), e && i !== this.str)) {
            var o = this.table,
              a = (this.nid, this.fid),
              n = o.type.fields[a];
            if (!n) return;
            var s = n.parseEditor(i);
            (this.str = i),
              (this.val = s),
              this.saveValue(s, function (e) {
                e && $.alert(e);
              });
          }
        }
      }),
      (Jr.prototype.saveValue = function (e, t) {
        database.update(this.nid, this.fid, e, t);
      }),
      (Jr.prototype.update = function () {
        if (this.isEditing) {
          var e = this.c,
            t = this.r,
            i = this.table,
            o = this.$input;
          (o.style.left = i.colX(e, e) - 1 + "px"),
            (o.style.top = i.rowY(t, t) + "px"),
            (o.style.width = i.colW(e, e) + 2 + "px"),
            (o.style.height = i.rowH(t, t) + "px"),
            this.updateAux();
        }
      }),
      Object.assign(Zr.prototype, Jr.prototype),
      (Zr.prototype.showAux = function () {
        if (!this.$aux) {
          var e = this,
            t = this.table.type.fields[this.fid];
          t.loadValuesSorted(this.getNid(), (e) => {
            (this.selectedValueId = null == this.val ? "###NULL###" : this.val),
              (this.orderedValues = e),
              (this.filterString = ""),
              (this.currentString = this.$input.value || ""),
              (this.visibleValues = []),
              (this.$aux = $(
                '<div class="choice-menu" style="min-width:' +
                  this.$input.clientWidth +
                  'px;overflow:auto;z-index:12">'
              )
                .appendTo($(document.body))
                .on(TOUCH ? EVENT_touchstart : "mousedown", function (e) {
                  var o = $(e.target)
                    .closest(".choice-menu-item")
                    .attr("data-id");
                  null != o && i("###NULL###" === o ? null : t.convert(o));
                })),
              this.updateAux();
          });
        }
        function i(t) {
          e.saveValue(t, function (t) {
            e.table.stopEdit(!1);
          });
        }
      }),
      (Zr.prototype.hideAux = function () {
        this.$aux &&
          (this.$aux.remove(),
          (this.$aux = null),
          (this.orderedValues = []),
          (this.visibleValues = []),
          (this.selectedValueId = void 0));
      }),
      (Zr.prototype.updateAux = function () {
        var e = this,
          t = this.$aux,
          i = this.table.type.fields[this.fid];
        if (t) {
          var o = 0,
            a = "",
            n = this.filterString,
            s = !n,
            r = this.selectedValueId,
            l = (this.visibleValues = []);
          if (!i.required && s)
            l.push({ id: "###NULL###", caption: "" }),
              (a += `<div class="choice-menu-item" data-id="###NULL###">\n                <div class="choice-indicator${
                "###NULL###" === r ? " selected" : ""
              }"></div>\n                <div class="choice-label">${htmlEscape(
                locale.empty
              )}</div>\n            </div>`),
              o++;
          Q.each(this.orderedValues, function (e) {
            if (s || 0 === (e.caption || "").toLocaleLowerCase().indexOf(n)) {
              l.push(e);
              var t = e.id === r;
              (a +=
                '<div data-id="' +
                e.id +
                '" class="choice-menu-item" style="' +
                (e.color
                  ? "background-color:" + e.color + ";color:" + e.textColor
                  : "") +
                '"><div class="choice-indicator' +
                (t ? " selected" : "") +
                '"></div><div class="multicombo-item" style="background-color:transparent;color:' +
                e.textColor +
                '">' +
                (e.icon
                  ? '<div class="choice-symbol ic ic-' + e.icon + '"></div>'
                  : "") +
                "<span>" +
                htmlEscape(e.caption || "") +
                "</span></div></div>"),
                o++;
            }
          }),
            t.html(a),
            c();
        }
        function c() {
          var i = $(e.$input).offset(),
            a = window.getWidth(),
            n = window.getHeight(),
            s = i.left,
            r = i.top + 36,
            l = t.outerWidth(),
            c = 32 * o;
          c > n - r &&
            (n - r >= i.top - 4
              ? (c = n - r)
              : ((c = Math.min(i.top - 4, c)), (r = i.top - 4 - c))),
            s + l > a && (s = a - l),
            t.css({ left: s, top: r, height: c });
          var d = t.children(".selected");
          if (d.length) {
            var u = d.offset().top,
              p = u + 32;
            u < r
              ? t.scrollTop(t.scrollTop() + u - r)
              : p > r + c && t.scrollTop(t.scrollTop() + p - r - c);
          }
        }
      }),
      (Zr.prototype.keyupCallback = function (e) {
        switch (e.which) {
          case 38:
          case 40:
            return (
              e.preventDefault(), e.stopPropagation(), this.updateAux(), !1
            );
          default:
            var t = this.$input.value || "";
            return (
              t !== this.currentString &&
                ((this.filterString = t.toLocaleLowerCase()),
                (this.currentString = t),
                this.updateAux()),
              !0
            );
        }
      }),
      (Zr.prototype.keydownCallback = function (e) {
        switch (e.which) {
          case 38:
            if ((i = this.visibleValues) && i.length) {
              if (-1 === (o = Qr(i, this.selectedValueId))) {
                var t = i[i.length - 1];
                (this.selectedValueId = t.id), (this.$input.value = t.caption);
              } else if (o > 0) {
                t = i[o - 1];
                (this.selectedValueId = t.id), (this.$input.value = t.caption);
              }
            } else this.selectedValueId = void 0;
            return (
              this.updateAux(), e.preventDefault(), e.stopPropagation(), !1
            );
          case 40:
            var i, o;
            if ((i = this.visibleValues) && i.length) {
              if (-1 === (o = Qr(i, this.selectedValueId))) {
                t = i[0];
                (this.selectedValueId = t.id), (this.$input.value = t.caption);
              } else if (o < i.length - 1) {
                t = i[o + 1];
                (this.selectedValueId = t.id), (this.$input.value = t.caption);
              }
            } else this.selectedValueId = void 0;
            return (
              this.updateAux(), e.preventDefault(), e.stopPropagation(), !1
            );
        }
      }),
      (el.prototype.destroy = function () {
        this.el.remove();
      }),
      (el.prototype.updateModel = function (e, t) {
        (this.filter = e), this.updateUI(), this.parent.updateFilter(t);
      }),
      (el.prototype.updateUI = function () {
        const e = this.field;
        null == this.filter
          ? this.text.html(
              '<span style="color:#999">' +
                htmlEscape(locale.filter) +
                "</span>"
            )
          : /^\s*\=\s*null\s*$/.test(this.filter)
          ? this.text.html(
              '<div class="multicombo-item"><span>' +
                htmlEscape(locale.empty) +
                "</span></div>"
            )
          : /^\s*\!\=\s*null\s*$/.test(this.filter)
          ? this.text.html(
              '<div class="multicombo-item"><span>' +
                htmlEscape(locale.notEmpty) +
                "</span></div>"
            )
          : e.loadValuesSorted(void 0, (e) => {
              const t = tl(this.field, this.filter);
              let i = "";
              for (var o = 0; o < e.length; o++) {
                var a = e[o];
                t[a.id] &&
                  (i +=
                    '<div class="multicombo-item" style="' +
                    (a.color
                      ? "background-color:" + a.color + ";color:" + a.textColor
                      : "") +
                    '" data-id="' +
                    a.id +
                    '">' +
                    (a.icon
                      ? '<div class="choice-symbol ic ic-' + a.icon + '"></div>'
                      : "") +
                    "<span>" +
                    htmlEscape(a.caption || "") +
                    "</span></div>");
              }
              this.text.html(i);
            });
      }),
      (el.prototype.setFilter = function (e) {
        (this.filter = e), this.updateUI();
      }),
      (el.prototype.getFilter = function () {
        return this.filter;
      }),
      (el.prototype.show = function () {
        this.el.show();
      }),
      (el.prototype.hide = function () {
        this.el.hide();
      }),
      (el.prototype.popup = function () {
        var e = this,
          t = this.field,
          i = { "=null": 1, "!=null": 1 }[this.filter]
            ? {}
            : tl(t, this.filter),
          o = $.backplane({}),
          a = $(
            '<div class="choice-menu" style="min-width:' +
              this.el.width() +
              "px;max-height:" +
              (window.getHeight() - 64) +
              'px;overflow:auto">'
          )
            .appendTo(o)
            .touch(c);
        l();
        var n = a.outerWidth(),
          s = a.outerHeight(),
          r = this.el.offset();
        function l() {
          t.loadValuesSorted(void 0, (e) => {
            var t = '<div class="choice-menu-head">';
            (t +=
              '<div data-id="#all" class="choice-menu-item"><div class="choice-label">' +
              htmlEscape(locale.all) +
              "</div></div>"),
              (t +=
                '<div data-id="#empty" class="choice-menu-item"><div class="choice-label">' +
                htmlEscape(locale.empty) +
                "</div></div>"),
              (t +=
                '<div data-id="#full" class="choice-menu-item"><div class="choice-label">' +
                htmlEscape(locale.notEmpty) +
                "</div></div>"),
              (t += "</div>"),
              e.forEach((e) => {
                t +=
                  '<div data-id="' +
                  e.id +
                  '" class="choice-menu-item"><div class="choice-indicator' +
                  (i[e.id] ? " selected" : "") +
                  '"></div><div class="multicombo-item" style="' +
                  (e.color
                    ? "background-color:" + e.color + ";color:" + e.textColor
                    : "") +
                  '" data-id="' +
                  e.id +
                  '">' +
                  (e.icon
                    ? '<div class="choice-symbol ic ic-' + e.icon + '"></div>'
                    : "") +
                  "<span>" +
                  htmlEscape(e.caption || "") +
                  "</span></div></div>";
              }),
              a.html(t);
          });
        }
        function c(e) {
          var t = $(e.target).closest(".choice-menu-item").attr("data-id");
          t &&
            ("#all" === t
              ? ((i = {}), u(void 0, !0))
              : "#empty" === t
              ? ((i = {}), u("=null", !0))
              : "#full" === t
              ? ((i = {}), u("!=null", !0))
              : u(d(t), !1));
        }
        function d(e) {
          return (i[e] = !i[e]), l(), al(t, i);
        }
        function u(t, i) {
          i && o.close(), e.updateModel(t, !1);
        }
        (r.top += 32),
          r.left + n > window.getWidth() && (r.left = window.getWidth() - n),
          r.top + s > window.getHeight() && (r.top = window.getHeight() - s),
          a.offset(r);
      }),
      (ll.prototype.destroy = function () {
        this.fromField.destroy(), this.toField.destroy(), this.el.remove();
      }),
      (ll.prototype.updateModel = function (e) {
        (this.filter = e), this.updateUI(), this.parent.updateFilter(!1);
      }),
      (ll.prototype.filtersChanged = function () {
        if (!this.silent) {
          var e = this.field.base,
            t = this.fromModel.value,
            i = this.toModel.value;
          if (null != t && null != i && i < t) {
            var o = t;
            (t = i), (i = o);
          }
          if ("date" === e) {
            if (null != t) {
              var a = new Date(t);
              t = new Date(
                a.getFullYear(),
                a.getMonth(),
                a.getDate()
              ).getTime();
            }
            if (null != i) {
              var n = new Date(i);
              i = new Date(
                n.getFullYear(),
                n.getMonth(),
                n.getDate() + 1
              ).getTime();
            }
          } else if ("datx" === e) {
            if (null != t) {
              a = new Date(t);
              t = Date.UTC(a.getUTCFullYear(), a.getUTCMonth(), a.getUTCDate());
            }
            if (null != i) {
              n = new Date(i);
              i = Date.UTC(
                n.getUTCFullYear(),
                n.getUTCMonth(),
                n.getUTCDate() + 1
              );
            }
          }
          this.updateModel(util.getDateRangeFilter({ from: t, to: i }));
        }
      }),
      (ll.prototype.updateUI = function () {
        var e = this.field.base,
          t = this.filter,
          i = util.getFilterDateRange(t),
          o = i.from,
          a = i.to;
        if ("date" === e) {
          if (null != o) {
            var n = new Date(o);
            o = new Date(n.getFullYear(), n.getMonth(), n.getDate()).getTime();
          }
          if (null != a) {
            var s = new Date(a);
            a = new Date(
              s.getFullYear(),
              s.getMonth(),
              s.getDate() - 1
            ).getTime();
          }
        } else if ("datx" === e) {
          if (null != o) {
            n = new Date(o);
            o = Date.UTC(n.getUTCFullYear(), n.getUTCMonth(), n.getUTCDate());
          }
          if (null != a) {
            s = new Date(a);
            a = Date.UTC(
              s.getUTCFullYear(),
              s.getUTCMonth(),
              s.getUTCDate() - 1
            );
          }
        }
        (this.silent = !0),
          this.fromModel.setValue(o),
          this.toModel.setValue(a),
          (this.silent = !1);
        var r = "empty" !== i.mode && "not-empty" !== i.mode;
        this.$range.css("display", r ? "" : "none"),
          this.$switchRange.toggleClass("selected", r),
          this.$switchEmpty.toggleClass("selected", "empty" === i.mode),
          this.$switchNotEmpty.toggleClass("selected", "not-empty" === i.mode);
      }),
      (ll.prototype.setFilter = function (e) {
        (this.filter = e), this.updateUI();
      }),
      (ll.prototype.getFilter = function () {
        return this.filter;
      }),
      (ll.prototype.show = function () {
        this.el.show();
      }),
      (ll.prototype.hide = function () {
        this.el.hide();
      }),
      (cl.prototype.updateModel = function () {
        try {
          var e = (this.input.val() || "").trim();
          0 === e.length
            ? (this.value = void 0)
            : (queries.parseFilter(e),
              this.parentEl.removeClass("error"),
              (this.value = e));
        } catch (e) {
          log(e), this.parentEl.addClass("error"), (this.value = void 0);
        }
        this.updateUI(), this.parent.updateFilter(!0);
      }),
      (cl.prototype.getFilter = function () {
        return this.value;
      }),
      (cl.prototype.setFilter = function (e) {
        (this.value = e), this.input.val(e || ""), this.updateUI();
      }),
      (cl.prototype.destroy = function () {
        this.el.remove();
      }),
      (cl.prototype.show = function () {
        this.el.show();
      }),
      (cl.prototype.hide = function () {
        this.el.hide();
      }),
      (cl.prototype.updateUI = function () {
        this.button.css("display", this.value ? "" : "none");
      }),
      (cl.prototype.clear = function () {
        this.input.val(""), this.updateModel();
      }),
      Object.assign(dl.prototype, Jr.prototype),
      (dl.prototype.showAux = function () {
        if (!this.$aux) {
          this.$backplane = $.backplane({
            close: () => {
              this.$backplane = null;
            },
          });
          var e = this;
          this.table.type.fields[this.fid].loadValuesSorted(
            this.getNid(),
            (t) => {
              function i(i) {
                var o = util.multiDecode(e.selectedValues[0]),
                  a = $(i.target).closest(".choice-menu-item").attr("data-id");
                if (a) {
                  if ("#all" === a) {
                    o = [];
                    for (var n = 0; n < t.length; n++) o.push(t[n].id);
                  } else if ("#none" === a) o = [];
                  else {
                    var s = parseInt(a),
                      r = o.indexOf(s);
                    -1 === r ? o.push(s) : o.splice(r, 1);
                  }
                  (e.selectedValues[0] = util.multiEncode(o)),
                    e.saveValue(e.selectedValues[0] || null, function () {
                      e.updateAux();
                    });
                }
              }
              this.$backplane &&
                (this.selectedValues.push(null == this.val ? "" : this.val),
                (this.orderedValues = t),
                (this.filterString = ""),
                (this.currentString = this.$input.value || ""),
                (this.visibleValues = []),
                (this.$aux = $(
                  `<div class="choice-menu" style="min-width:${this.$input.clientWidth}px;overflow:auto;z-index:12">`
                )
                  .appendTo(this.$backplane)
                  .touch(i)),
                this.updateAux());
            }
          );
        }
      }),
      (dl.prototype.updateAux = function () {
        var e = this,
          t = this.$aux;
        if (t) {
          var i = 0,
            o = "",
            a = this.filterString,
            n = !a,
            s = this.selectedValues,
            r = (this.visibleValues = []);
          (o += `<div class="choice-menu-head">\n            <div data-id="#all" class="choice-menu-item">\n                <div class="choice-label">${htmlEscape(
            locale.all
          )}</div>\n            </div>\n            <div data-id="#none" class="choice-menu-item">\n                <div class="choice-label">${htmlEscape(
            locale.none
          )}</div>\n            </div>\n        </div>`),
            i++,
            Q.each(this.orderedValues, function (e) {
              if (n || 0 === (e.caption || "").toLocaleLowerCase().indexOf(a)) {
                r.push(e);
                var t = util.multiDecode(s[0]),
                  l = Q.first(Q.filter(t, (t) => t == e.id));
                (o += `<div data-id="${
                  e.id
                }" class="choice-menu-item">\n                    <div class="choice-indicator${
                  l ? " selected" : ""
                }"></div>\n                    <div class="multicombo-item" style="${
                  e.color
                    ? "background-color:" + e.color + ";color:" + e.textColor
                    : ""
                }" data-id="${e.id}">\n                        ${
                  e.icon
                    ? `<div class="choice-symbol ic ic-${e.icon}"></div>`
                    : ""
                }\n                        <span>${htmlEscape(
                  e.caption || ""
                )}</span>\n                    </div>\n                </div>`),
                  i++;
              }
            }),
            t.html(o);
          try {
            l();
          } catch (e) {}
        }
        function l() {
          var o = $(e.$input).offset(),
            a = window.getWidth(),
            n = window.getHeight(),
            s = o.left,
            r = o.top + 36,
            l = t.outerWidth(),
            c = 32 * i;
          c > n - r &&
            (n - r >= o.top - 4
              ? (c = n - r)
              : ((c = Math.min(o.top - 4, c)), (r = o.top - 4 - c))),
            s + l > a && (s = a - l),
            t.css({ left: s, top: r, height: c });
          var d = t.children(".selected");
          if (d.length) {
            var u = d.offset().top,
              p = u + 32;
            u < r
              ? t.scrollTop(t.scrollTop() + u - r)
              : p > r + c && t.scrollTop(t.scrollTop() + p - r - c);
          }
        }
      }),
      (dl.prototype.keyupCallback = function (e) {
        switch (e.which) {
          case 38:
          case 40:
            return (
              e.preventDefault(), e.stopPropagation(), this.updateAux(), !1
            );
          default:
            var t = this.$input.value || "";
            return (
              t !== this.currentString &&
                ((this.filterString = t.toLocaleLowerCase()),
                (this.currentString = t),
                this.updateAux()),
              !0
            );
        }
      }),
      (dl.prototype.keydownCallback = function (e) {
        switch (e.which) {
          case 38:
            if ((i = this.visibleValues) && i.length) {
              if (-1 === (o = ul(i, this.selectedValueId))) {
                var t = i[i.length - 1];
                (this.selectedValueId = t.id), (this.$input.value = t.caption);
              } else if (o > 0) {
                t = i[o - 1];
                (this.selectedValueId = t.id), (this.$input.value = t.caption);
              }
            } else this.selectedValueId = void 0;
            return (
              this.updateAux(), e.preventDefault(), e.stopPropagation(), !1
            );
          case 40:
            var i, o;
            if ((i = this.visibleValues) && i.length) {
              if (-1 === (o = ul(i, this.selectedValueId))) {
                t = i[0];
                (this.selectedValueId = t.id), (this.$input.value = t.caption);
              } else if (o < i.length - 1) {
                t = i[o + 1];
                (this.selectedValueId = t.id), (this.$input.value = t.caption);
              }
            } else this.selectedValues = void 0;
            return (
              this.updateAux(), e.preventDefault(), e.stopPropagation(), !1
            );
        }
      }),
      $.browser.msie)
    )
      throw (
        ((document.body.innerHTML = ""),
        a.render(s.createElement(Ee, {}), document.body),
        new Error(
          "your browser is not supported, please use the current version of any modern browser instead"
        ))
      );
    (window.dbms = new se()),
      (window.dbms.RemoteConnection = J),
      (window.dbms.SessionInfo = u),
      (window.dbms.MessageService = ee),
      (window.dbms.AccountRemote = ne),
      (window.dbms.HTTPServer = ie),
      (window.dbms.RemoteDB = ae.a),
      De($),
      Ne(),
      (window.ui = zs()),
      (window.widgets = Object(ki.a)()),
      (window.tables = pl()),
      (window.printer = ue()),
      (window.reports = $e()),
      We(),
      window.ninox_init();
  },
  "./src/init_lib.js": function (e, t, i) {
    "use strict";
    i.r(t);
    var o = i("./src/js/localesEngine/localesManager.ts");
    i("./node_modules/core-js/stable/index.js"),
      i("./node_modules/regenerator-runtime/runtime.js"),
      i(
        "./node_modules/script-loader/index.js!./node_modules/jquery/dist/jquery.min.js"
      ),
      i("./node_modules/core-js/modules/es.string.replace.js");
    !(function (e, t) {
      var i,
        o,
        a = 0,
        n = /^ui-id-\d+$/;
      function s(t, i) {
        var o,
          a,
          n,
          s = t.nodeName.toLowerCase();
        return "area" === s
          ? ((a = (o = t.parentNode).name),
            !(!t.href || !a || "map" !== o.nodeName.toLowerCase()) &&
              !!(n = e("img[usemap=#" + a + "]")[0]) &&
              r(n))
          : (/input|select|textarea|button|object/.test(s)
              ? !t.disabled
              : ("a" === s && t.href) || i) && r(t);
      }
      function r(t) {
        return (
          e.expr.filters.visible(t) &&
          !e(t)
            .parents()
            .addBack()
            .filter(function () {
              return "hidden" === e.css(this, "visibility");
            }).length
        );
      }
      (e.ui = e.ui || {}),
        e.extend(e.ui, {
          version: "1.10.4",
          keyCode: {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38,
          },
        }),
        e.fn.extend({
          focus:
            ((i = e.fn.focus),
            function (t, o) {
              return "number" == typeof t
                ? this.each(function () {
                    var i = this;
                    setTimeout(function () {
                      e(i).focus(), o && o.call(i);
                    }, t);
                  })
                : i.apply(this, arguments);
            }),
          scrollParent: function () {
            var t;
            return (
              (t =
                (e.ui.ie && /(static|relative)/.test(this.css("position"))) ||
                /absolute/.test(this.css("position"))
                  ? this.parents()
                      .filter(function () {
                        return (
                          /(relative|absolute|fixed)/.test(
                            e.css(this, "position")
                          ) &&
                          /(auto|scroll)/.test(
                            e.css(this, "overflow") +
                              e.css(this, "overflow-y") +
                              e.css(this, "overflow-x")
                          )
                        );
                      })
                      .eq(0)
                  : this.parents()
                      .filter(function () {
                        return /(auto|scroll)/.test(
                          e.css(this, "overflow") +
                            e.css(this, "overflow-y") +
                            e.css(this, "overflow-x")
                        );
                      })
                      .eq(0)),
              /fixed/.test(this.css("position")) || !t.length ? e(document) : t
            );
          },
          zIndex: function (i) {
            if (i !== t) return this.css("zIndex", i);
            if (this.length)
              for (var o, a, n = e(this[0]); n.length && n[0] !== document; ) {
                if (
                  ("absolute" === (o = n.css("position")) ||
                    "relative" === o ||
                    "fixed" === o) &&
                  ((a = parseInt(n.css("zIndex"), 10)), !isNaN(a) && 0 !== a)
                )
                  return a;
                n = n.parent();
              }
            return 0;
          },
          uniqueId: function () {
            return this.each(function () {
              this.id || (this.id = "ui-id-" + ++a);
            });
          },
          removeUniqueId: function () {
            return this.each(function () {
              n.test(this.id) && e(this).removeAttr("id");
            });
          },
        }),
        e.extend(e.expr[":"], {
          data: e.expr.createPseudo
            ? e.expr.createPseudo(function (t) {
                return function (i) {
                  return !!e.data(i, t);
                };
              })
            : function (t, i, o) {
                return !!e.data(t, o[3]);
              },
          focusable: function (t) {
            return s(t, !isNaN(e.attr(t, "tabindex")));
          },
          tabbable: function (t) {
            var i = e.attr(t, "tabindex"),
              o = isNaN(i);
            return (o || i >= 0) && s(t, !o);
          },
        }),
        e("<a>").outerWidth(1).jquery ||
          e.each(["Width", "Height"], function (i, o) {
            var a = "Width" === o ? ["Left", "Right"] : ["Top", "Bottom"],
              n = o.toLowerCase(),
              s = {
                innerWidth: e.fn.innerWidth,
                innerHeight: e.fn.innerHeight,
                outerWidth: e.fn.outerWidth,
                outerHeight: e.fn.outerHeight,
              };
            function r(t, i, o, n) {
              return (
                e.each(a, function () {
                  (i -= parseFloat(e.css(t, "padding" + this)) || 0),
                    o &&
                      (i -=
                        parseFloat(e.css(t, "border" + this + "Width")) || 0),
                    n && (i -= parseFloat(e.css(t, "margin" + this)) || 0);
                }),
                i
              );
            }
            (e.fn["inner" + o] = function (i) {
              return i === t
                ? s["inner" + o].call(this)
                : this.each(function () {
                    e(this).css(n, r(this, i) + "px");
                  });
            }),
              (e.fn["outer" + o] = function (t, i) {
                return "number" != typeof t
                  ? s["outer" + o].call(this, t)
                  : this.each(function () {
                      e(this).css(n, r(this, t, !0, i) + "px");
                    });
              });
          }),
        e.fn.addBack ||
          (e.fn.addBack = function (e) {
            return this.add(
              null == e ? this.prevObject : this.prevObject.filter(e)
            );
          }),
        e("<a>").data("a-b", "a").removeData("a-b").data("a-b") &&
          (e.fn.removeData =
            ((o = e.fn.removeData),
            function (t) {
              return arguments.length
                ? o.call(this, e.camelCase(t))
                : o.call(this);
            })),
        (e.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase())),
        (e.support.selectstart =
          "onselectstart" in document.createElement("div")),
        e.fn.extend({
          disableSelection: function () {
            return this.bind(
              (e.support.selectstart ? "selectstart" : "mousedown") +
                ".ui-disableSelection",
              function (e) {
                e.preventDefault();
              }
            );
          },
          enableSelection: function () {
            return this.unbind(".ui-disableSelection");
          },
        }),
        e.extend(e.ui, {
          plugin: {
            add: function (t, i, o) {
              var a,
                n = e.ui[t].prototype;
              for (a in o)
                (n.plugins[a] = n.plugins[a] || []),
                  n.plugins[a].push([i, o[a]]);
            },
            call: function (e, t, i) {
              var o,
                a = e.plugins[t];
              if (
                a &&
                e.element[0].parentNode &&
                11 !== e.element[0].parentNode.nodeType
              )
                for (o = 0; o < a.length; o++)
                  e.options[a[o][0]] && a[o][1].apply(e.element, i);
            },
          },
          hasScroll: function (t, i) {
            if ("hidden" === e(t).css("overflow")) return !1;
            var o = i && "left" === i ? "scrollLeft" : "scrollTop",
              a = !1;
            return t[o] > 0 || ((t[o] = 1), (a = t[o] > 0), (t[o] = 0), a);
          },
        });
    })(jQuery),
      (function (e, t) {
        var i = 0,
          o = Array.prototype.slice,
          a = e.cleanData;
        (e.cleanData = function (t) {
          for (var i, o = 0; null != (i = t[o]); o++)
            try {
              e(i).triggerHandler("remove");
            } catch (e) {}
          a(t);
        }),
          (e.widget = function (t, i, o) {
            var a,
              n,
              s,
              r,
              l = {},
              c = t.split(".")[0];
            (t = t.split(".")[1]),
              (a = c + "-" + t),
              o || ((o = i), (i = e.Widget)),
              (e.expr[":"][a.toLowerCase()] = function (t) {
                return !!e.data(t, a);
              }),
              (e[c] = e[c] || {}),
              (n = e[c][t]),
              (s = e[c][t] =
                function (e, t) {
                  if (!this._createWidget) return new s(e, t);
                  arguments.length && this._createWidget(e, t);
                }),
              e.extend(s, n, {
                version: o.version,
                _proto: e.extend({}, o),
                _childConstructors: [],
              }),
              ((r = new i()).options = e.widget.extend({}, r.options)),
              e.each(o, function (t, o) {
                var a, n;
                e.isFunction(o)
                  ? (l[t] =
                      ((a = function () {
                        return i.prototype[t].apply(this, arguments);
                      }),
                      (n = function (e) {
                        return i.prototype[t].apply(this, e);
                      }),
                      function () {
                        var e,
                          t = this._super,
                          i = this._superApply;
                        return (
                          (this._super = a),
                          (this._superApply = n),
                          (e = o.apply(this, arguments)),
                          (this._super = t),
                          (this._superApply = i),
                          e
                        );
                      }))
                  : (l[t] = o);
              }),
              (s.prototype = e.widget.extend(
                r,
                { widgetEventPrefix: (n && r.widgetEventPrefix) || t },
                l,
                {
                  constructor: s,
                  namespace: c,
                  widgetName: t,
                  widgetFullName: a,
                }
              )),
              n
                ? (e.each(n._childConstructors, function (t, i) {
                    var o = i.prototype;
                    e.widget(o.namespace + "." + o.widgetName, s, i._proto);
                  }),
                  delete n._childConstructors)
                : i._childConstructors.push(s),
              e.widget.bridge(t, s);
          }),
          (e.widget.extend = function (i) {
            for (
              var a, n, s = o.call(arguments, 1), r = 0, l = s.length;
              r < l;
              r++
            )
              for (a in s[r])
                (n = s[r][a]),
                  s[r].hasOwnProperty(a) &&
                    n !== t &&
                    (e.isPlainObject(n)
                      ? (i[a] = e.isPlainObject(i[a])
                          ? e.widget.extend({}, i[a], n)
                          : e.widget.extend({}, n))
                      : (i[a] = n));
            return i;
          }),
          (e.widget.bridge = function (i, a) {
            var n = a.prototype.widgetFullName || i;
            e.fn[i] = function (s) {
              var r = "string" == typeof s,
                l = o.call(arguments, 1),
                c = this;
              return (
                (s =
                  !r && l.length
                    ? e.widget.extend.apply(null, [s].concat(l))
                    : s),
                r
                  ? this.each(function () {
                      var o,
                        a = e.data(this, n);
                      return a
                        ? e.isFunction(a[s]) && "_" !== s.charAt(0)
                          ? (o = a[s].apply(a, l)) !== a && o !== t
                            ? ((c = o && o.jquery ? c.pushStack(o.get()) : o),
                              !1)
                            : void 0
                          : e.error(
                              "no such method '" +
                                s +
                                "' for " +
                                i +
                                " widget instance"
                            )
                        : e.error(
                            "cannot call methods on " +
                              i +
                              " prior to initialization; attempted to call method '" +
                              s +
                              "'"
                          );
                    })
                  : this.each(function () {
                      var t = e.data(this, n);
                      t
                        ? t.option(s || {})._init()
                        : e.data(this, n, new a(s, this));
                    }),
                c
              );
            };
          }),
          (e.Widget = function () {}),
          (e.Widget._childConstructors = []),
          (e.Widget.prototype = {
            widgetName: "widget",
            widgetEventPrefix: "",
            defaultElement: "<div>",
            options: { disabled: !1, create: null },
            _createWidget: function (t, o) {
              (o = e(o || this.defaultElement || this)[0]),
                (this.element = e(o)),
                (this.uuid = i++),
                (this.eventNamespace = "." + this.widgetName + this.uuid),
                (this.options = e.widget.extend(
                  {},
                  this.options,
                  this._getCreateOptions(),
                  t
                )),
                (this.bindings = e()),
                (this.hoverable = e()),
                (this.focusable = e()),
                o !== this &&
                  (e.data(o, this.widgetFullName, this),
                  this._on(!0, this.element, {
                    remove: function (e) {
                      e.target === o && this.destroy();
                    },
                  }),
                  (this.document = e(
                    o.style ? o.ownerDocument : o.document || o
                  )),
                  (this.window = e(
                    this.document[0].defaultView ||
                      this.document[0].parentWindow
                  ))),
                this._create(),
                this._trigger("create", null, this._getCreateEventData()),
                this._init();
            },
            _getCreateOptions: e.noop,
            _getCreateEventData: e.noop,
            _create: e.noop,
            _init: e.noop,
            destroy: function () {
              this._destroy(),
                this.element
                  .unbind(this.eventNamespace)
                  .removeData(this.widgetName)
                  .removeData(this.widgetFullName)
                  .removeData(e.camelCase(this.widgetFullName)),
                this.widget()
                  .unbind(this.eventNamespace)
                  .removeAttr("aria-disabled")
                  .removeClass(
                    this.widgetFullName + "-disabled ui-state-disabled"
                  ),
                this.bindings.unbind(this.eventNamespace),
                this.hoverable.removeClass("ui-state-hover"),
                this.focusable.removeClass("ui-state-focus");
            },
            _destroy: e.noop,
            widget: function () {
              return this.element;
            },
            option: function (i, o) {
              var a,
                n,
                s,
                r = i;
              if (0 === arguments.length)
                return e.widget.extend({}, this.options);
              if ("string" == typeof i)
                if (((r = {}), (a = i.split(".")), (i = a.shift()), a.length)) {
                  for (
                    n = r[i] = e.widget.extend({}, this.options[i]), s = 0;
                    s < a.length - 1;
                    s++
                  )
                    (n[a[s]] = n[a[s]] || {}), (n = n[a[s]]);
                  if (((i = a.pop()), 1 === arguments.length))
                    return n[i] === t ? null : n[i];
                  n[i] = o;
                } else {
                  if (1 === arguments.length)
                    return this.options[i] === t ? null : this.options[i];
                  r[i] = o;
                }
              return this._setOptions(r), this;
            },
            _setOptions: function (e) {
              var t;
              for (t in e) this._setOption(t, e[t]);
              return this;
            },
            _setOption: function (e, t) {
              return (
                (this.options[e] = t),
                "disabled" === e &&
                  (this.widget()
                    .toggleClass(
                      this.widgetFullName + "-disabled ui-state-disabled",
                      !!t
                    )
                    .attr("aria-disabled", t),
                  this.hoverable.removeClass("ui-state-hover"),
                  this.focusable.removeClass("ui-state-focus")),
                this
              );
            },
            enable: function () {
              return this._setOption("disabled", !1);
            },
            disable: function () {
              return this._setOption("disabled", !0);
            },
            _on: function (t, i, o) {
              var a,
                n = this;
              "boolean" != typeof t && ((o = i), (i = t), (t = !1)),
                o
                  ? ((i = a = e(i)), (this.bindings = this.bindings.add(i)))
                  : ((o = i), (i = this.element), (a = this.widget())),
                e.each(o, function (o, s) {
                  function r() {
                    if (
                      t ||
                      (!0 !== n.options.disabled &&
                        !e(this).hasClass("ui-state-disabled"))
                    )
                      return ("string" == typeof s ? n[s] : s).apply(
                        n,
                        arguments
                      );
                  }
                  "string" != typeof s &&
                    (r.guid = s.guid = s.guid || r.guid || e.guid++);
                  var l = o.match(/^(\w+)\s*(.*)$/),
                    c = l[1] + n.eventNamespace,
                    d = l[2];
                  d ? a.delegate(d, c, r) : i.bind(c, r);
                });
            },
            _off: function (e, t) {
              (t =
                (t || "").split(" ").join(this.eventNamespace + " ") +
                this.eventNamespace),
                e.unbind(t).undelegate(t);
            },
            _delay: function (e, t) {
              function i() {
                return ("string" == typeof e ? o[e] : e).apply(o, arguments);
              }
              var o = this;
              return setTimeout(i, t || 0);
            },
            _hoverable: function (t) {
              (this.hoverable = this.hoverable.add(t)),
                this._on(t, {
                  mouseenter: function (t) {
                    e(t.currentTarget).addClass("ui-state-hover");
                  },
                  mouseleave: function (t) {
                    e(t.currentTarget).removeClass("ui-state-hover");
                  },
                });
            },
            _focusable: function (t) {
              (this.focusable = this.focusable.add(t)),
                this._on(t, {
                  focusin: function (t) {
                    e(t.currentTarget).addClass("ui-state-focus");
                  },
                  focusout: function (t) {
                    e(t.currentTarget).removeClass("ui-state-focus");
                  },
                });
            },
            _trigger: function (t, i, o) {
              var a,
                n,
                s = this.options[t];
              if (
                ((o = o || {}),
                ((i = e.Event(i)).type = (
                  t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t
                ).toLowerCase()),
                (i.target = this.element[0]),
                (n = i.originalEvent))
              )
                for (a in n) a in i || (i[a] = n[a]);
              return (
                this.element.trigger(i, o),
                !(
                  (e.isFunction(s) &&
                    !1 === s.apply(this.element[0], [i].concat(o))) ||
                  i.isDefaultPrevented()
                )
              );
            },
          }),
          e.each({ show: "fadeIn", hide: "fadeOut" }, function (t, i) {
            e.Widget.prototype["_" + t] = function (o, a, n) {
              "string" == typeof a && (a = { effect: a });
              var s,
                r = a
                  ? !0 === a || "number" == typeof a
                    ? i
                    : a.effect || i
                  : t;
              "number" == typeof (a = a || {}) && (a = { duration: a }),
                (s = !e.isEmptyObject(a)),
                (a.complete = n),
                a.delay && o.delay(a.delay),
                s && e.effects && e.effects.effect[r]
                  ? o[t](a)
                  : r !== t && o[r]
                  ? o[r](a.duration, a.easing, n)
                  : o.queue(function (i) {
                      e(this)[t](), n && n.call(o[0]), i();
                    });
            };
          });
      })(jQuery),
      (function (e, t) {
        var i = !1;
        e(document).mouseup(function () {
          i = !1;
        }),
          e.widget("ui.mouse", {
            version: "1.10.4",
            options: {
              cancel: "input,textarea,button,select,option",
              distance: 1,
              delay: 0,
            },
            _mouseInit: function () {
              var t = this;
              this.element
                .bind("mousedown." + this.widgetName, function (e) {
                  return t._mouseDown(e);
                })
                .bind("click." + this.widgetName, function (i) {
                  if (
                    !0 === e.data(i.target, t.widgetName + ".preventClickEvent")
                  )
                    return (
                      e.removeData(
                        i.target,
                        t.widgetName + ".preventClickEvent"
                      ),
                      i.stopImmediatePropagation(),
                      !1
                    );
                }),
                (this.started = !1);
            },
            _mouseDestroy: function () {
              this.element.unbind("." + this.widgetName),
                this._mouseMoveDelegate &&
                  e(document)
                    .unbind(
                      "mousemove." + this.widgetName,
                      this._mouseMoveDelegate
                    )
                    .unbind(
                      "mouseup." + this.widgetName,
                      this._mouseUpDelegate
                    );
            },
            _mouseDown: function (t) {
              if (!i) {
                this._mouseStarted && this._mouseUp(t),
                  (this._mouseDownEvent = t);
                var o = this,
                  a = 1 === t.which,
                  n =
                    !(
                      "string" != typeof this.options.cancel ||
                      !t.target.nodeName
                    ) && e(t.target).closest(this.options.cancel).length;
                return (
                  !(a && !n && this._mouseCapture(t)) ||
                  ((this.mouseDelayMet = !this.options.delay),
                  this.mouseDelayMet ||
                    (this._mouseDelayTimer = setTimeout(function () {
                      o.mouseDelayMet = !0;
                    }, this.options.delay)),
                  this._mouseDistanceMet(t) &&
                  this._mouseDelayMet(t) &&
                  ((this._mouseStarted = !1 !== this._mouseStart(t)),
                  !this._mouseStarted)
                    ? (t.preventDefault(), !0)
                    : (!0 ===
                        e.data(
                          t.target,
                          this.widgetName + ".preventClickEvent"
                        ) &&
                        e.removeData(
                          t.target,
                          this.widgetName + ".preventClickEvent"
                        ),
                      (this._mouseMoveDelegate = function (e) {
                        return o._mouseMove(e);
                      }),
                      (this._mouseUpDelegate = function (e) {
                        return o._mouseUp(e);
                      }),
                      e(document)
                        .bind(
                          "mousemove." + this.widgetName,
                          this._mouseMoveDelegate
                        )
                        .bind(
                          "mouseup." + this.widgetName,
                          this._mouseUpDelegate
                        ),
                      t.preventDefault(),
                      (i = !0),
                      !0))
                );
              }
            },
            _mouseMove: function (t) {
              return e.ui.ie &&
                (!document.documentMode || document.documentMode < 9) &&
                !t.button
                ? this._mouseUp(t)
                : this._mouseStarted
                ? (this._mouseDrag(t), t.preventDefault())
                : (this._mouseDistanceMet(t) &&
                    this._mouseDelayMet(t) &&
                    ((this._mouseStarted =
                      !1 !== this._mouseStart(this._mouseDownEvent, t)),
                    this._mouseStarted ? this._mouseDrag(t) : this._mouseUp(t)),
                  !this._mouseStarted);
            },
            _mouseUp: function (t) {
              return (
                e(document)
                  .unbind(
                    "mousemove." + this.widgetName,
                    this._mouseMoveDelegate
                  )
                  .unbind("mouseup." + this.widgetName, this._mouseUpDelegate),
                this._mouseStarted &&
                  ((this._mouseStarted = !1),
                  t.target === this._mouseDownEvent.target &&
                    e.data(
                      t.target,
                      this.widgetName + ".preventClickEvent",
                      !0
                    ),
                  this._mouseStop(t)),
                !1
              );
            },
            _mouseDistanceMet: function (e) {
              return (
                Math.max(
                  Math.abs(this._mouseDownEvent.pageX - e.pageX),
                  Math.abs(this._mouseDownEvent.pageY - e.pageY)
                ) >= this.options.distance
              );
            },
            _mouseDelayMet: function () {
              return this.mouseDelayMet;
            },
            _mouseStart: function () {},
            _mouseDrag: function () {},
            _mouseStop: function () {},
            _mouseCapture: function () {
              return !0;
            },
          });
      })(jQuery),
      (function (e, t) {
        e.ui = e.ui || {};
        var i,
          o = Math.max,
          a = Math.abs,
          n = Math.round,
          s = /left|center|right/,
          r = /top|center|bottom/,
          l = /[\+\-]\d+(\.[\d]+)?%?/,
          c = /^\w+/,
          d = /%$/,
          u = e.fn.position;
        function p(e, t, i) {
          return [
            parseFloat(e[0]) * (d.test(e[0]) ? t / 100 : 1),
            parseFloat(e[1]) * (d.test(e[1]) ? i / 100 : 1),
          ];
        }
        function h(t, i) {
          return parseInt(e.css(t, i), 10) || 0;
        }
        function m(t) {
          var i = t[0];
          return 9 === i.nodeType
            ? {
                width: t.width(),
                height: t.height(),
                offset: { top: 0, left: 0 },
              }
            : e.isWindow(i)
            ? {
                width: t.width(),
                height: t.height(),
                offset: { top: t.scrollTop(), left: t.scrollLeft() },
              }
            : i.preventDefault
            ? { width: 0, height: 0, offset: { top: i.pageY, left: i.pageX } }
            : {
                width: t.outerWidth(),
                height: t.outerHeight(),
                offset: t.offset(),
              };
        }
        (e.position = {
          scrollbarWidth: function () {
            if (i !== t) return i;
            var o,
              a,
              n = e(
                "<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"
              ),
              s = n.children()[0];
            return (
              e("body").append(n),
              (o = s.offsetWidth),
              n.css("overflow", "scroll"),
              o === (a = s.offsetWidth) && (a = n[0].clientWidth),
              n.remove(),
              (i = o - a)
            );
          },
          getScrollInfo: function (t) {
            var i =
                t.isWindow || t.isDocument ? "" : t.element.css("overflow-x"),
              o = t.isWindow || t.isDocument ? "" : t.element.css("overflow-y"),
              a =
                "scroll" === i ||
                ("auto" === i && t.width < t.element[0].scrollWidth);
            return {
              width:
                "scroll" === o ||
                ("auto" === o && t.height < t.element[0].scrollHeight)
                  ? e.position.scrollbarWidth()
                  : 0,
              height: a ? e.position.scrollbarWidth() : 0,
            };
          },
          getWithinInfo: function (t) {
            var i = e(t || window),
              o = e.isWindow(i[0]);
            return {
              element: i,
              isWindow: o,
              isDocument: !!i[0] && 9 === i[0].nodeType,
              offset: i.offset() || { left: 0, top: 0 },
              scrollLeft: i.scrollLeft(),
              scrollTop: i.scrollTop(),
              width: o ? i.width() : i.outerWidth(),
              height: o ? i.height() : i.outerHeight(),
            };
          },
        }),
          (e.fn.position = function (t) {
            if (!t || !t.of) return u.apply(this, arguments);
            t = e.extend({}, t);
            var i,
              d,
              f,
              g,
              v,
              b,
              y = e(t.of),
              w = e.position.getWithinInfo(t.within),
              x = e.position.getScrollInfo(w),
              T = (t.collision || "flip").split(" "),
              C = {};
            return (
              (b = m(y)),
              y[0].preventDefault && (t.at = "left top"),
              (d = b.width),
              (f = b.height),
              (g = b.offset),
              (v = e.extend({}, g)),
              e.each(["my", "at"], function () {
                var e,
                  i,
                  o = (t[this] || "").split(" ");
                1 === o.length &&
                  (o = s.test(o[0])
                    ? o.concat(["center"])
                    : r.test(o[0])
                    ? ["center"].concat(o)
                    : ["center", "center"]),
                  (o[0] = s.test(o[0]) ? o[0] : "center"),
                  (o[1] = r.test(o[1]) ? o[1] : "center"),
                  (e = l.exec(o[0])),
                  (i = l.exec(o[1])),
                  (C[this] = [e ? e[0] : 0, i ? i[0] : 0]),
                  (t[this] = [c.exec(o[0])[0], c.exec(o[1])[0]]);
              }),
              1 === T.length && (T[1] = T[0]),
              "right" === t.at[0]
                ? (v.left += d)
                : "center" === t.at[0] && (v.left += d / 2),
              "bottom" === t.at[1]
                ? (v.top += f)
                : "center" === t.at[1] && (v.top += f / 2),
              (i = p(C.at, d, f)),
              (v.left += i[0]),
              (v.top += i[1]),
              this.each(function () {
                var s,
                  r,
                  l = e(this),
                  c = l.outerWidth(),
                  u = l.outerHeight(),
                  m = h(this, "marginLeft"),
                  b = h(this, "marginTop"),
                  k = c + m + h(this, "marginRight") + x.width,
                  S = u + b + h(this, "marginBottom") + x.height,
                  $ = e.extend({}, v),
                  _ = p(C.my, l.outerWidth(), l.outerHeight());
                "right" === t.my[0]
                  ? ($.left -= c)
                  : "center" === t.my[0] && ($.left -= c / 2),
                  "bottom" === t.my[1]
                    ? ($.top -= u)
                    : "center" === t.my[1] && ($.top -= u / 2),
                  ($.left += _[0]),
                  ($.top += _[1]),
                  e.support.offsetFractions ||
                    (($.left = n($.left)), ($.top = n($.top))),
                  (s = { marginLeft: m, marginTop: b }),
                  e.each(["left", "top"], function (o, a) {
                    e.ui.position[T[o]] &&
                      e.ui.position[T[o]][a]($, {
                        targetWidth: d,
                        targetHeight: f,
                        elemWidth: c,
                        elemHeight: u,
                        collisionPosition: s,
                        collisionWidth: k,
                        collisionHeight: S,
                        offset: [i[0] + _[0], i[1] + _[1]],
                        my: t.my,
                        at: t.at,
                        within: w,
                        elem: l,
                      });
                  }),
                  t.using &&
                    (r = function (e) {
                      var i = g.left - $.left,
                        n = i + d - c,
                        s = g.top - $.top,
                        r = s + f - u,
                        p = {
                          target: {
                            element: y,
                            left: g.left,
                            top: g.top,
                            width: d,
                            height: f,
                          },
                          element: {
                            element: l,
                            left: $.left,
                            top: $.top,
                            width: c,
                            height: u,
                          },
                          horizontal:
                            n < 0 ? "left" : i > 0 ? "right" : "center",
                          vertical: r < 0 ? "top" : s > 0 ? "bottom" : "middle",
                        };
                      d < c && a(i + n) < d && (p.horizontal = "center"),
                        f < u && a(s + r) < f && (p.vertical = "middle"),
                        o(a(i), a(n)) > o(a(s), a(r))
                          ? (p.important = "horizontal")
                          : (p.important = "vertical"),
                        t.using.call(this, e, p);
                    }),
                  l.offset(e.extend($, { using: r }));
              })
            );
          }),
          (e.ui.position = {
            fit: {
              left: function (e, t) {
                var i,
                  a = t.within,
                  n = a.isWindow ? a.scrollLeft : a.offset.left,
                  s = a.width,
                  r = e.left - t.collisionPosition.marginLeft,
                  l = n - r,
                  c = r + t.collisionWidth - s - n;
                t.collisionWidth > s
                  ? l > 0 && c <= 0
                    ? ((i = e.left + l + t.collisionWidth - s - n),
                      (e.left += l - i))
                    : (e.left =
                        c > 0 && l <= 0
                          ? n
                          : l > c
                          ? n + s - t.collisionWidth
                          : n)
                  : l > 0
                  ? (e.left += l)
                  : c > 0
                  ? (e.left -= c)
                  : (e.left = o(e.left - r, e.left));
              },
              top: function (e, t) {
                var i,
                  a = t.within,
                  n = a.isWindow ? a.scrollTop : a.offset.top,
                  s = t.within.height,
                  r = e.top - t.collisionPosition.marginTop,
                  l = n - r,
                  c = r + t.collisionHeight - s - n;
                t.collisionHeight > s
                  ? l > 0 && c <= 0
                    ? ((i = e.top + l + t.collisionHeight - s - n),
                      (e.top += l - i))
                    : (e.top =
                        c > 0 && l <= 0
                          ? n
                          : l > c
                          ? n + s - t.collisionHeight
                          : n)
                  : l > 0
                  ? (e.top += l)
                  : c > 0
                  ? (e.top -= c)
                  : (e.top = o(e.top - r, e.top));
              },
            },
            flip: {
              left: function (e, t) {
                var i,
                  o,
                  n = t.within,
                  s = n.offset.left + n.scrollLeft,
                  r = n.width,
                  l = n.isWindow ? n.scrollLeft : n.offset.left,
                  c = e.left - t.collisionPosition.marginLeft,
                  d = c - l,
                  u = c + t.collisionWidth - r - l,
                  p =
                    "left" === t.my[0]
                      ? -t.elemWidth
                      : "right" === t.my[0]
                      ? t.elemWidth
                      : 0,
                  h =
                    "left" === t.at[0]
                      ? t.targetWidth
                      : "right" === t.at[0]
                      ? -t.targetWidth
                      : 0,
                  m = -2 * t.offset[0];
                d < 0
                  ? ((i = e.left + p + h + m + t.collisionWidth - r - s) < 0 ||
                      i < a(d)) &&
                    (e.left += p + h + m)
                  : u > 0 &&
                    ((o =
                      e.left - t.collisionPosition.marginLeft + p + h + m - l) >
                      0 ||
                      a(o) < u) &&
                    (e.left += p + h + m);
              },
              top: function (e, t) {
                var i,
                  o,
                  n = t.within,
                  s = n.offset.top + n.scrollTop,
                  r = n.height,
                  l = n.isWindow ? n.scrollTop : n.offset.top,
                  c = e.top - t.collisionPosition.marginTop,
                  d = c - l,
                  u = c + t.collisionHeight - r - l,
                  p =
                    "top" === t.my[1]
                      ? -t.elemHeight
                      : "bottom" === t.my[1]
                      ? t.elemHeight
                      : 0,
                  h =
                    "top" === t.at[1]
                      ? t.targetHeight
                      : "bottom" === t.at[1]
                      ? -t.targetHeight
                      : 0,
                  m = -2 * t.offset[1];
                d < 0
                  ? ((o = e.top + p + h + m + t.collisionHeight - r - s),
                    e.top + p + h + m > d &&
                      (o < 0 || o < a(d)) &&
                      (e.top += p + h + m))
                  : u > 0 &&
                    ((i =
                      e.top - t.collisionPosition.marginTop + p + h + m - l),
                    e.top + p + h + m > u &&
                      (i > 0 || a(i) < u) &&
                      (e.top += p + h + m));
              },
            },
            flipfit: {
              left: function () {
                e.ui.position.flip.left.apply(this, arguments),
                  e.ui.position.fit.left.apply(this, arguments);
              },
              top: function () {
                e.ui.position.flip.top.apply(this, arguments),
                  e.ui.position.fit.top.apply(this, arguments);
              },
            },
          }),
          (function () {
            var t,
              i,
              o,
              a,
              n,
              s = document.getElementsByTagName("body")[0],
              r = document.createElement("div");
            for (n in ((t = document.createElement(s ? "div" : "body")),
            (o = {
              visibility: "hidden",
              width: 0,
              height: 0,
              border: 0,
              margin: 0,
              background: "none",
            }),
            s &&
              e.extend(o, {
                position: "absolute",
                left: "-1000px",
                top: "-1000px",
              }),
            o))
              t.style[n] = o[n];
            t.appendChild(r),
              (i = s || document.documentElement).insertBefore(t, i.firstChild),
              (r.style.cssText = "position: absolute; left: 10.7432222px;"),
              (a = e(r).offset().left),
              (e.support.offsetFractions = a > 10 && a < 11),
              (t.innerHTML = ""),
              i.removeChild(t);
          })();
      })(jQuery),
      (function (e, t) {
        e.widget("ui.draggable", e.ui.mouse, {
          version: "1.10.4",
          widgetEventPrefix: "drag",
          options: {
            addClasses: !0,
            appendTo: "parent",
            axis: !1,
            connectToSortable: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            iframeFix: !1,
            opacity: !1,
            refreshPositions: !1,
            revert: !1,
            revertDuration: 500,
            scope: "default",
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: !1,
            snapMode: "both",
            snapTolerance: 20,
            stack: !1,
            zIndex: !1,
            drag: null,
            start: null,
            stop: null,
          },
          _create: function () {
            "original" !== this.options.helper ||
              /^(?:r|a|f)/.test(this.element.css("position")) ||
              (this.element[0].style.position = "relative"),
              this.options.addClasses && this.element.addClass("ui-draggable"),
              this.options.disabled &&
                this.element.addClass("ui-draggable-disabled"),
              this._mouseInit();
          },
          _destroy: function () {
            this.element.removeClass(
              "ui-draggable ui-draggable-dragging ui-draggable-disabled"
            ),
              this._mouseDestroy();
          },
          _mouseCapture: function (t) {
            var i = this.options;
            return (
              !(
                this.helper ||
                i.disabled ||
                e(t.target).closest(".ui-resizable-handle").length > 0
              ) &&
              ((this.handle = this._getHandle(t)),
              !!this.handle &&
                (e(!0 === i.iframeFix ? "iframe" : i.iframeFix).each(
                  function () {
                    e(
                      "<div class='ui-draggable-iframeFix' style='background: #fff;'></div>"
                    )
                      .css({
                        width: this.offsetWidth + "px",
                        height: this.offsetHeight + "px",
                        position: "absolute",
                        opacity: "0.001",
                        zIndex: 1e3,
                      })
                      .css(e(this).offset())
                      .appendTo("body");
                  }
                ),
                !0))
            );
          },
          _mouseStart: function (t) {
            var i = this.options;
            return (
              (this.helper = this._createHelper(t)),
              this.helper.addClass("ui-draggable-dragging"),
              this._cacheHelperProportions(),
              e.ui.ddmanager && (e.ui.ddmanager.current = this),
              this._cacheMargins(),
              (this.cssPosition = this.helper.css("position")),
              (this.scrollParent = this.helper.scrollParent()),
              (this.offsetParent = this.helper.offsetParent()),
              (this.offsetParentCssPosition =
                this.offsetParent.css("position")),
              (this.offset = this.positionAbs = this.element.offset()),
              (this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left,
              }),
              (this.offset.scroll = !1),
              e.extend(this.offset, {
                click: {
                  left: t.pageX - this.offset.left,
                  top: t.pageY - this.offset.top,
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset(),
              }),
              (this.originalPosition = this.position =
                this._generatePosition(t)),
              (this.originalPageX = t.pageX),
              (this.originalPageY = t.pageY),
              i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt),
              this._setContainment(),
              !1 === this._trigger("start", t)
                ? (this._clear(), !1)
                : (this._cacheHelperProportions(),
                  e.ui.ddmanager &&
                    !i.dropBehaviour &&
                    e.ui.ddmanager.prepareOffsets(this, t),
                  this._mouseDrag(t, !0),
                  e.ui.ddmanager && e.ui.ddmanager.dragStart(this, t),
                  !0)
            );
          },
          _mouseDrag: function (t, i) {
            if (
              ("fixed" === this.offsetParentCssPosition &&
                (this.offset.parent = this._getParentOffset()),
              (this.position = this._generatePosition(t)),
              (this.positionAbs = this._convertPositionTo("absolute")),
              !i)
            ) {
              var o = this._uiHash();
              if (!1 === this._trigger("drag", t, o))
                return this._mouseUp({}), !1;
              this.position = o.position;
            }
            return (
              (this.options.axis && "y" === this.options.axis) ||
                (this.helper[0].style.left = this.position.left + "px"),
              (this.options.axis && "x" === this.options.axis) ||
                (this.helper[0].style.top = this.position.top + "px"),
              e.ui.ddmanager && e.ui.ddmanager.drag(this, t),
              !1
            );
          },
          _mouseStop: function (t) {
            var i = this,
              o = !1;
            return (
              e.ui.ddmanager &&
                !this.options.dropBehaviour &&
                (o = e.ui.ddmanager.drop(this, t)),
              this.dropped && ((o = this.dropped), (this.dropped = !1)),
              !(
                "original" === this.options.helper &&
                !e.contains(this.element[0].ownerDocument, this.element[0])
              ) &&
                (("invalid" === this.options.revert && !o) ||
                ("valid" === this.options.revert && o) ||
                !0 === this.options.revert ||
                (e.isFunction(this.options.revert) &&
                  this.options.revert.call(this.element, o))
                  ? e(this.helper).animate(
                      this.originalPosition,
                      parseInt(this.options.revertDuration, 10),
                      function () {
                        !1 !== i._trigger("stop", t) && i._clear();
                      }
                    )
                  : !1 !== this._trigger("stop", t) && this._clear(),
                !1)
            );
          },
          _mouseUp: function (t) {
            return (
              e("div.ui-draggable-iframeFix").each(function () {
                this.parentNode.removeChild(this);
              }),
              e.ui.ddmanager && e.ui.ddmanager.dragStop(this, t),
              e.ui.mouse.prototype._mouseUp.call(this, t)
            );
          },
          cancel: function () {
            return (
              this.helper.is(".ui-draggable-dragging")
                ? this._mouseUp({})
                : this._clear(),
              this
            );
          },
          _getHandle: function (t) {
            return (
              !this.options.handle ||
              !!e(t.target).closest(this.element.find(this.options.handle))
                .length
            );
          },
          _createHelper: function (t) {
            var i = this.options,
              o = e.isFunction(i.helper)
                ? e(i.helper.apply(this.element[0], [t]))
                : "clone" === i.helper
                ? this.element.clone().removeAttr("id")
                : this.element;
            return (
              o.parents("body").length ||
                o.appendTo(
                  "parent" === i.appendTo
                    ? this.element[0].parentNode
                    : i.appendTo
                ),
              o[0] === this.element[0] ||
                /(fixed|absolute)/.test(o.css("position")) ||
                o.css("position", "absolute"),
              o
            );
          },
          _adjustOffsetFromHelper: function (t) {
            "string" == typeof t && (t = t.split(" ")),
              e.isArray(t) && (t = { left: +t[0], top: +t[1] || 0 }),
              "left" in t &&
                (this.offset.click.left = t.left + this.margins.left),
              "right" in t &&
                (this.offset.click.left =
                  this.helperProportions.width - t.right + this.margins.left),
              "top" in t && (this.offset.click.top = t.top + this.margins.top),
              "bottom" in t &&
                (this.offset.click.top =
                  this.helperProportions.height - t.bottom + this.margins.top);
          },
          _getParentOffset: function () {
            var t = this.offsetParent.offset();
            return (
              "absolute" === this.cssPosition &&
                this.scrollParent[0] !== document &&
                e.contains(this.scrollParent[0], this.offsetParent[0]) &&
                ((t.left += this.scrollParent.scrollLeft()),
                (t.top += this.scrollParent.scrollTop())),
              (this.offsetParent[0] === document.body ||
                (this.offsetParent[0].tagName &&
                  "html" === this.offsetParent[0].tagName.toLowerCase() &&
                  e.ui.ie)) &&
                (t = { top: 0, left: 0 }),
              {
                top:
                  t.top +
                  (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left:
                  t.left +
                  (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0),
              }
            );
          },
          _getRelativeOffset: function () {
            if ("relative" === this.cssPosition) {
              var e = this.element.position();
              return {
                top:
                  e.top -
                  (parseInt(this.helper.css("top"), 10) || 0) +
                  this.scrollParent.scrollTop(),
                left:
                  e.left -
                  (parseInt(this.helper.css("left"), 10) || 0) +
                  this.scrollParent.scrollLeft(),
              };
            }
            return { top: 0, left: 0 };
          },
          _cacheMargins: function () {
            this.margins = {
              left: parseInt(this.element.css("marginLeft"), 10) || 0,
              top: parseInt(this.element.css("marginTop"), 10) || 0,
              right: parseInt(this.element.css("marginRight"), 10) || 0,
              bottom: parseInt(this.element.css("marginBottom"), 10) || 0,
            };
          },
          _cacheHelperProportions: function () {
            this.helperProportions = {
              width: this.helper.outerWidth(),
              height: this.helper.outerHeight(),
            };
          },
          _setContainment: function () {
            var t,
              i,
              o,
              a = this.options;
            a.containment
              ? "window" !== a.containment
                ? "document" !== a.containment
                  ? a.containment.constructor !== Array
                    ? ("parent" === a.containment &&
                        (a.containment = this.helper[0].parentNode),
                      (o = (i = e(a.containment))[0]) &&
                        ((t = "hidden" !== i.css("overflow")),
                        (this.containment = [
                          (parseInt(i.css("borderLeftWidth"), 10) || 0) +
                            (parseInt(i.css("paddingLeft"), 10) || 0),
                          (parseInt(i.css("borderTopWidth"), 10) || 0) +
                            (parseInt(i.css("paddingTop"), 10) || 0),
                          (t
                            ? Math.max(o.scrollWidth, o.offsetWidth)
                            : o.offsetWidth) -
                            (parseInt(i.css("borderRightWidth"), 10) || 0) -
                            (parseInt(i.css("paddingRight"), 10) || 0) -
                            this.helperProportions.width -
                            this.margins.left -
                            this.margins.right,
                          (t
                            ? Math.max(o.scrollHeight, o.offsetHeight)
                            : o.offsetHeight) -
                            (parseInt(i.css("borderBottomWidth"), 10) || 0) -
                            (parseInt(i.css("paddingBottom"), 10) || 0) -
                            this.helperProportions.height -
                            this.margins.top -
                            this.margins.bottom,
                        ]),
                        (this.relative_container = i)))
                    : (this.containment = a.containment)
                  : (this.containment = [
                      0,
                      0,
                      e(document).width() -
                        this.helperProportions.width -
                        this.margins.left,
                      (e(document).height() ||
                        document.body.parentNode.scrollHeight) -
                        this.helperProportions.height -
                        this.margins.top,
                    ])
                : (this.containment = [
                    e(window).scrollLeft() -
                      this.offset.relative.left -
                      this.offset.parent.left,
                    e(window).scrollTop() -
                      this.offset.relative.top -
                      this.offset.parent.top,
                    e(window).scrollLeft() +
                      e(window).width() -
                      this.helperProportions.width -
                      this.margins.left,
                    e(window).scrollTop() +
                      (e(window).height() ||
                        document.body.parentNode.scrollHeight) -
                      this.helperProportions.height -
                      this.margins.top,
                  ])
              : (this.containment = null);
          },
          _convertPositionTo: function (t, i) {
            i || (i = this.position);
            var o = "absolute" === t ? 1 : -1,
              a =
                "absolute" !== this.cssPosition ||
                (this.scrollParent[0] !== document &&
                  e.contains(this.scrollParent[0], this.offsetParent[0]))
                  ? this.scrollParent
                  : this.offsetParent;
            return (
              this.offset.scroll ||
                (this.offset.scroll = {
                  top: a.scrollTop(),
                  left: a.scrollLeft(),
                }),
              {
                top:
                  i.top +
                  this.offset.relative.top * o +
                  this.offset.parent.top * o -
                  ("fixed" === this.cssPosition
                    ? -this.scrollParent.scrollTop()
                    : this.offset.scroll.top) *
                    o,
                left:
                  i.left +
                  this.offset.relative.left * o +
                  this.offset.parent.left * o -
                  ("fixed" === this.cssPosition
                    ? -this.scrollParent.scrollLeft()
                    : this.offset.scroll.left) *
                    o,
              }
            );
          },
          _generatePosition: function (t) {
            var i,
              o,
              a,
              n,
              s = this.options,
              r =
                "absolute" !== this.cssPosition ||
                (this.scrollParent[0] !== document &&
                  e.contains(this.scrollParent[0], this.offsetParent[0]))
                  ? this.scrollParent
                  : this.offsetParent,
              l = t.pageX,
              c = t.pageY;
            return (
              this.offset.scroll ||
                (this.offset.scroll = {
                  top: r.scrollTop(),
                  left: r.scrollLeft(),
                }),
              this.originalPosition &&
                (this.containment &&
                  (this.relative_container
                    ? ((o = this.relative_container.offset()),
                      (i = [
                        this.containment[0] + o.left,
                        this.containment[1] + o.top,
                        this.containment[2] + o.left,
                        this.containment[3] + o.top,
                      ]))
                    : (i = this.containment),
                  t.pageX - this.offset.click.left < i[0] &&
                    (l = i[0] + this.offset.click.left),
                  t.pageY - this.offset.click.top < i[1] &&
                    (c = i[1] + this.offset.click.top),
                  t.pageX - this.offset.click.left > i[2] &&
                    (l = i[2] + this.offset.click.left),
                  t.pageY - this.offset.click.top > i[3] &&
                    (c = i[3] + this.offset.click.top)),
                s.grid &&
                  ((a = s.grid[1]
                    ? this.originalPageY +
                      Math.round((c - this.originalPageY) / s.grid[1]) *
                        s.grid[1]
                    : this.originalPageY),
                  (c = i
                    ? a - this.offset.click.top >= i[1] ||
                      a - this.offset.click.top > i[3]
                      ? a
                      : a - this.offset.click.top >= i[1]
                      ? a - s.grid[1]
                      : a + s.grid[1]
                    : a),
                  (n = s.grid[0]
                    ? this.originalPageX +
                      Math.round((l - this.originalPageX) / s.grid[0]) *
                        s.grid[0]
                    : this.originalPageX),
                  (l = i
                    ? n - this.offset.click.left >= i[0] ||
                      n - this.offset.click.left > i[2]
                      ? n
                      : n - this.offset.click.left >= i[0]
                      ? n - s.grid[0]
                      : n + s.grid[0]
                    : n))),
              {
                top:
                  c -
                  this.offset.click.top -
                  this.offset.relative.top -
                  this.offset.parent.top +
                  ("fixed" === this.cssPosition
                    ? -this.scrollParent.scrollTop()
                    : this.offset.scroll.top),
                left:
                  l -
                  this.offset.click.left -
                  this.offset.relative.left -
                  this.offset.parent.left +
                  ("fixed" === this.cssPosition
                    ? -this.scrollParent.scrollLeft()
                    : this.offset.scroll.left),
              }
            );
          },
          _clear: function () {
            this.helper.removeClass("ui-draggable-dragging"),
              this.helper[0] === this.element[0] ||
                this.cancelHelperRemoval ||
                this.helper.remove(),
              (this.helper = null),
              (this.cancelHelperRemoval = !1);
          },
          _trigger: function (t, i, o) {
            return (
              (o = o || this._uiHash()),
              e.ui.plugin.call(this, t, [i, o]),
              "drag" === t &&
                (this.positionAbs = this._convertPositionTo("absolute")),
              e.Widget.prototype._trigger.call(this, t, i, o)
            );
          },
          plugins: {},
          _uiHash: function () {
            return {
              helper: this.helper,
              position: this.position,
              originalPosition: this.originalPosition,
              offset: this.positionAbs,
            };
          },
        }),
          e.ui.plugin.add("draggable", "connectToSortable", {
            start: function (t, i) {
              var o = e(this).data("ui-draggable"),
                a = o.options,
                n = e.extend({}, i, { item: o.element });
              (o.sortables = []),
                e(a.connectToSortable).each(function () {
                  var i = e.data(this, "ui-sortable");
                  i &&
                    !i.options.disabled &&
                    (o.sortables.push({
                      instance: i,
                      shouldRevert: i.options.revert,
                    }),
                    i.refreshPositions(),
                    i._trigger("activate", t, n));
                });
            },
            stop: function (t, i) {
              var o = e(this).data("ui-draggable"),
                a = e.extend({}, i, { item: o.element });
              e.each(o.sortables, function () {
                this.instance.isOver
                  ? ((this.instance.isOver = 0),
                    (o.cancelHelperRemoval = !0),
                    (this.instance.cancelHelperRemoval = !1),
                    this.shouldRevert &&
                      (this.instance.options.revert = this.shouldRevert),
                    this.instance._mouseStop(t),
                    (this.instance.options.helper =
                      this.instance.options._helper),
                    "original" === o.options.helper &&
                      this.instance.currentItem.css({
                        top: "auto",
                        left: "auto",
                      }))
                  : ((this.instance.cancelHelperRemoval = !1),
                    this.instance._trigger("deactivate", t, a));
              });
            },
            drag: function (t, i) {
              var o = e(this).data("ui-draggable"),
                a = this;
              e.each(o.sortables, function () {
                var n = !1,
                  s = this;
                (this.instance.positionAbs = o.positionAbs),
                  (this.instance.helperProportions = o.helperProportions),
                  (this.instance.offset.click = o.offset.click),
                  this.instance._intersectsWith(this.instance.containerCache) &&
                    ((n = !0),
                    e.each(o.sortables, function () {
                      return (
                        (this.instance.positionAbs = o.positionAbs),
                        (this.instance.helperProportions = o.helperProportions),
                        (this.instance.offset.click = o.offset.click),
                        this !== s &&
                          this.instance._intersectsWith(
                            this.instance.containerCache
                          ) &&
                          e.contains(
                            s.instance.element[0],
                            this.instance.element[0]
                          ) &&
                          (n = !1),
                        n
                      );
                    })),
                  n
                    ? (this.instance.isOver ||
                        ((this.instance.isOver = 1),
                        (this.instance.currentItem = e(a)
                          .clone()
                          .removeAttr("id")
                          .appendTo(this.instance.element)
                          .data("ui-sortable-item", !0)),
                        (this.instance.options._helper =
                          this.instance.options.helper),
                        (this.instance.options.helper = function () {
                          return i.helper[0];
                        }),
                        (t.target = this.instance.currentItem[0]),
                        this.instance._mouseCapture(t, !0),
                        this.instance._mouseStart(t, !0, !0),
                        (this.instance.offset.click.top = o.offset.click.top),
                        (this.instance.offset.click.left = o.offset.click.left),
                        (this.instance.offset.parent.left -=
                          o.offset.parent.left -
                          this.instance.offset.parent.left),
                        (this.instance.offset.parent.top -=
                          o.offset.parent.top -
                          this.instance.offset.parent.top),
                        o._trigger("toSortable", t),
                        (o.dropped = this.instance.element),
                        (o.currentItem = o.element),
                        (this.instance.fromOutside = o)),
                      this.instance.currentItem && this.instance._mouseDrag(t))
                    : this.instance.isOver &&
                      ((this.instance.isOver = 0),
                      (this.instance.cancelHelperRemoval = !0),
                      (this.instance.options.revert = !1),
                      this.instance._trigger(
                        "out",
                        t,
                        this.instance._uiHash(this.instance)
                      ),
                      this.instance._mouseStop(t, !0),
                      (this.instance.options.helper =
                        this.instance.options._helper),
                      this.instance.currentItem.remove(),
                      this.instance.placeholder &&
                        this.instance.placeholder.remove(),
                      o._trigger("fromSortable", t),
                      (o.dropped = !1));
              });
            },
          }),
          e.ui.plugin.add("draggable", "cursor", {
            start: function () {
              var t = e("body"),
                i = e(this).data("ui-draggable").options;
              t.css("cursor") && (i._cursor = t.css("cursor")),
                t.css("cursor", i.cursor);
            },
            stop: function () {
              var t = e(this).data("ui-draggable").options;
              t._cursor && e("body").css("cursor", t._cursor);
            },
          }),
          e.ui.plugin.add("draggable", "opacity", {
            start: function (t, i) {
              var o = e(i.helper),
                a = e(this).data("ui-draggable").options;
              o.css("opacity") && (a._opacity = o.css("opacity")),
                o.css("opacity", a.opacity);
            },
            stop: function (t, i) {
              var o = e(this).data("ui-draggable").options;
              o._opacity && e(i.helper).css("opacity", o._opacity);
            },
          }),
          e.ui.plugin.add("draggable", "scroll", {
            start: function () {
              var t = e(this).data("ui-draggable");
              t.scrollParent[0] !== document &&
                "HTML" !== t.scrollParent[0].tagName &&
                (t.overflowOffset = t.scrollParent.offset());
            },
            drag: function (t) {
              var i = e(this).data("ui-draggable"),
                o = i.options,
                a = !1;
              i.scrollParent[0] !== document &&
              "HTML" !== i.scrollParent[0].tagName
                ? ((o.axis && "x" === o.axis) ||
                    (i.overflowOffset.top +
                      i.scrollParent[0].offsetHeight -
                      t.pageY <
                    o.scrollSensitivity
                      ? (i.scrollParent[0].scrollTop = a =
                          i.scrollParent[0].scrollTop + o.scrollSpeed)
                      : t.pageY - i.overflowOffset.top < o.scrollSensitivity &&
                        (i.scrollParent[0].scrollTop = a =
                          i.scrollParent[0].scrollTop - o.scrollSpeed)),
                  (o.axis && "y" === o.axis) ||
                    (i.overflowOffset.left +
                      i.scrollParent[0].offsetWidth -
                      t.pageX <
                    o.scrollSensitivity
                      ? (i.scrollParent[0].scrollLeft = a =
                          i.scrollParent[0].scrollLeft + o.scrollSpeed)
                      : t.pageX - i.overflowOffset.left < o.scrollSensitivity &&
                        (i.scrollParent[0].scrollLeft = a =
                          i.scrollParent[0].scrollLeft - o.scrollSpeed)))
                : ((o.axis && "x" === o.axis) ||
                    (t.pageY - e(document).scrollTop() < o.scrollSensitivity
                      ? (a = e(document).scrollTop(
                          e(document).scrollTop() - o.scrollSpeed
                        ))
                      : e(window).height() -
                          (t.pageY - e(document).scrollTop()) <
                          o.scrollSensitivity &&
                        (a = e(document).scrollTop(
                          e(document).scrollTop() + o.scrollSpeed
                        ))),
                  (o.axis && "y" === o.axis) ||
                    (t.pageX - e(document).scrollLeft() < o.scrollSensitivity
                      ? (a = e(document).scrollLeft(
                          e(document).scrollLeft() - o.scrollSpeed
                        ))
                      : e(window).width() -
                          (t.pageX - e(document).scrollLeft()) <
                          o.scrollSensitivity &&
                        (a = e(document).scrollLeft(
                          e(document).scrollLeft() + o.scrollSpeed
                        )))),
                !1 !== a &&
                  e.ui.ddmanager &&
                  !o.dropBehaviour &&
                  e.ui.ddmanager.prepareOffsets(i, t);
            },
          }),
          e.ui.plugin.add("draggable", "snap", {
            start: function () {
              var t = e(this).data("ui-draggable"),
                i = t.options;
              (t.snapElements = []),
                e(
                  i.snap.constructor !== String
                    ? i.snap.items || ":data(ui-draggable)"
                    : i.snap
                ).each(function () {
                  var i = e(this),
                    o = i.offset();
                  this !== t.element[0] &&
                    t.snapElements.push({
                      item: this,
                      width: i.outerWidth(),
                      height: i.outerHeight(),
                      top: o.top,
                      left: o.left,
                    });
                });
            },
            drag: function (t, i) {
              var o,
                a,
                n,
                s,
                r,
                l,
                c,
                d,
                u,
                p,
                h = e(this).data("ui-draggable"),
                m = h.options,
                f = m.snapTolerance,
                g = i.offset.left,
                v = g + h.helperProportions.width,
                b = i.offset.top,
                y = b + h.helperProportions.height;
              for (u = h.snapElements.length - 1; u >= 0; u--)
                (l = (r = h.snapElements[u].left) + h.snapElements[u].width),
                  (d = (c = h.snapElements[u].top) + h.snapElements[u].height),
                  v < r - f ||
                  g > l + f ||
                  y < c - f ||
                  b > d + f ||
                  !e.contains(
                    h.snapElements[u].item.ownerDocument,
                    h.snapElements[u].item
                  )
                    ? (h.snapElements[u].snapping &&
                        h.options.snap.release &&
                        h.options.snap.release.call(
                          h.element,
                          t,
                          e.extend(h._uiHash(), {
                            snapItem: h.snapElements[u].item,
                          })
                        ),
                      (h.snapElements[u].snapping = !1))
                    : ("inner" !== m.snapMode &&
                        ((o = Math.abs(c - y) <= f),
                        (a = Math.abs(d - b) <= f),
                        (n = Math.abs(r - v) <= f),
                        (s = Math.abs(l - g) <= f),
                        o &&
                          (i.position.top =
                            h._convertPositionTo("relative", {
                              top: c - h.helperProportions.height,
                              left: 0,
                            }).top - h.margins.top),
                        a &&
                          (i.position.top =
                            h._convertPositionTo("relative", {
                              top: d,
                              left: 0,
                            }).top - h.margins.top),
                        n &&
                          (i.position.left =
                            h._convertPositionTo("relative", {
                              top: 0,
                              left: r - h.helperProportions.width,
                            }).left - h.margins.left),
                        s &&
                          (i.position.left =
                            h._convertPositionTo("relative", {
                              top: 0,
                              left: l,
                            }).left - h.margins.left)),
                      (p = o || a || n || s),
                      "outer" !== m.snapMode &&
                        ((o = Math.abs(c - b) <= f),
                        (a = Math.abs(d - y) <= f),
                        (n = Math.abs(r - g) <= f),
                        (s = Math.abs(l - v) <= f),
                        o &&
                          (i.position.top =
                            h._convertPositionTo("relative", {
                              top: c,
                              left: 0,
                            }).top - h.margins.top),
                        a &&
                          (i.position.top =
                            h._convertPositionTo("relative", {
                              top: d - h.helperProportions.height,
                              left: 0,
                            }).top - h.margins.top),
                        n &&
                          (i.position.left =
                            h._convertPositionTo("relative", {
                              top: 0,
                              left: r,
                            }).left - h.margins.left),
                        s &&
                          (i.position.left =
                            h._convertPositionTo("relative", {
                              top: 0,
                              left: l - h.helperProportions.width,
                            }).left - h.margins.left)),
                      !h.snapElements[u].snapping &&
                        (o || a || n || s || p) &&
                        h.options.snap.snap &&
                        h.options.snap.snap.call(
                          h.element,
                          t,
                          e.extend(h._uiHash(), {
                            snapItem: h.snapElements[u].item,
                          })
                        ),
                      (h.snapElements[u].snapping = o || a || n || s || p));
            },
          }),
          e.ui.plugin.add("draggable", "stack", {
            start: function () {
              var t,
                i = this.data("ui-draggable").options,
                o = e.makeArray(e(i.stack)).sort(function (t, i) {
                  return (
                    (parseInt(e(t).css("zIndex"), 10) || 0) -
                    (parseInt(e(i).css("zIndex"), 10) || 0)
                  );
                });
              o.length &&
                ((t = parseInt(e(o[0]).css("zIndex"), 10) || 0),
                e(o).each(function (i) {
                  e(this).css("zIndex", t + i);
                }),
                this.css("zIndex", t + o.length));
            },
          }),
          e.ui.plugin.add("draggable", "zIndex", {
            start: function (t, i) {
              var o = e(i.helper),
                a = e(this).data("ui-draggable").options;
              o.css("zIndex") && (a._zIndex = o.css("zIndex")),
                o.css("zIndex", a.zIndex);
            },
            stop: function (t, i) {
              var o = e(this).data("ui-draggable").options;
              o._zIndex && e(i.helper).css("zIndex", o._zIndex);
            },
          });
      })(jQuery),
      (function (e, t) {
        function i(e, t, i) {
          return e > t && e < t + i;
        }
        e.widget("ui.droppable", {
          version: "1.10.4",
          widgetEventPrefix: "drop",
          options: {
            accept: "*",
            activeClass: !1,
            addClasses: !0,
            greedy: !1,
            hoverClass: !1,
            scope: "default",
            tolerance: "intersect",
            activate: null,
            deactivate: null,
            drop: null,
            out: null,
            over: null,
          },
          _create: function () {
            var t,
              i = this.options,
              o = i.accept;
            (this.isover = !1),
              (this.isout = !0),
              (this.accept = e.isFunction(o)
                ? o
                : function (e) {
                    return e.is(o);
                  }),
              (this.proportions = function () {
                if (!arguments.length)
                  return (
                    t ||
                    (t = {
                      width: this.element[0].offsetWidth,
                      height: this.element[0].offsetHeight,
                    })
                  );
                t = arguments[0];
              }),
              (e.ui.ddmanager.droppables[i.scope] =
                e.ui.ddmanager.droppables[i.scope] || []),
              e.ui.ddmanager.droppables[i.scope].push(this),
              i.addClasses && this.element.addClass("ui-droppable");
          },
          _destroy: function () {
            for (
              var t = 0, i = e.ui.ddmanager.droppables[this.options.scope];
              t < i.length;
              t++
            )
              i[t] === this && i.splice(t, 1);
            this.element.removeClass("ui-droppable ui-droppable-disabled");
          },
          _setOption: function (t, i) {
            "accept" === t &&
              (this.accept = e.isFunction(i)
                ? i
                : function (e) {
                    return e.is(i);
                  }),
              e.Widget.prototype._setOption.apply(this, arguments);
          },
          _activate: function (t) {
            var i = e.ui.ddmanager.current;
            this.options.activeClass &&
              this.element.addClass(this.options.activeClass),
              i && this._trigger("activate", t, this.ui(i));
          },
          _deactivate: function (t) {
            var i = e.ui.ddmanager.current;
            this.options.activeClass &&
              this.element.removeClass(this.options.activeClass),
              i && this._trigger("deactivate", t, this.ui(i));
          },
          _over: function (t) {
            var i = e.ui.ddmanager.current;
            i &&
              (i.currentItem || i.element)[0] !== this.element[0] &&
              this.accept.call(this.element[0], i.currentItem || i.element) &&
              (this.options.hoverClass &&
                this.element.addClass(this.options.hoverClass),
              this._trigger("over", t, this.ui(i)));
          },
          _out: function (t) {
            var i = e.ui.ddmanager.current;
            i &&
              (i.currentItem || i.element)[0] !== this.element[0] &&
              this.accept.call(this.element[0], i.currentItem || i.element) &&
              (this.options.hoverClass &&
                this.element.removeClass(this.options.hoverClass),
              this._trigger("out", t, this.ui(i)));
          },
          _drop: function (t, i) {
            var o = i || e.ui.ddmanager.current,
              a = !1;
            return (
              !(!o || (o.currentItem || o.element)[0] === this.element[0]) &&
              (this.element
                .find(":data(ui-droppable)")
                .not(".ui-draggable-dragging")
                .each(function () {
                  var t = e.data(this, "ui-droppable");
                  if (
                    t.options.greedy &&
                    !t.options.disabled &&
                    t.options.scope === o.options.scope &&
                    t.accept.call(t.element[0], o.currentItem || o.element) &&
                    e.ui.intersect(
                      o,
                      e.extend(t, { offset: t.element.offset() }),
                      t.options.tolerance
                    )
                  )
                    return (a = !0), !1;
                }),
              !a &&
                !!this.accept.call(
                  this.element[0],
                  o.currentItem || o.element
                ) &&
                (this.options.activeClass &&
                  this.element.removeClass(this.options.activeClass),
                this.options.hoverClass &&
                  this.element.removeClass(this.options.hoverClass),
                this._trigger("drop", t, this.ui(o)),
                this.element))
            );
          },
          ui: function (e) {
            return {
              draggable: e.currentItem || e.element,
              helper: e.helper,
              position: e.position,
              offset: e.positionAbs,
            };
          },
        }),
          (e.ui.intersect = function (e, t, o) {
            if (!t.offset) return !1;
            var a,
              n = (e.positionAbs || e.position.absolute).left,
              s = (e.positionAbs || e.position.absolute).top,
              r = n + e.helperProportions.width,
              l = s + e.helperProportions.height,
              c = t.offset.left,
              d = t.offset.top,
              u = c + t.proportions().width,
              p = d + t.proportions().height;
            switch (o) {
              case "fit":
                return c <= n && r <= u && d <= s && l <= p;
              case "intersect":
                return (
                  c < n + e.helperProportions.width / 2 &&
                  r - e.helperProportions.width / 2 < u &&
                  d < s + e.helperProportions.height / 2 &&
                  l - e.helperProportions.height / 2 < p
                );
              case "pointer":
                return (
                  (a =
                    (e.positionAbs || e.position.absolute).left +
                    (e.clickOffset || e.offset.click).left),
                  i(
                    (e.positionAbs || e.position.absolute).top +
                      (e.clickOffset || e.offset.click).top,
                    d,
                    t.proportions().height
                  ) && i(a, c, t.proportions().width)
                );
              case "touch":
                return (
                  ((s >= d && s <= p) ||
                    (l >= d && l <= p) ||
                    (s < d && l > p)) &&
                  ((n >= c && n <= u) || (r >= c && r <= u) || (n < c && r > u))
                );
              default:
                return !1;
            }
          }),
          (e.ui.ddmanager = {
            current: null,
            droppables: { default: [] },
            prepareOffsets: function (t, i) {
              var o,
                a,
                n = e.ui.ddmanager.droppables[t.options.scope] || [],
                s = i ? i.type : null,
                r = (t.currentItem || t.element)
                  .find(":data(ui-droppable)")
                  .addBack();
              e: for (o = 0; o < n.length; o++)
                if (
                  !(
                    n[o].options.disabled ||
                    (t &&
                      !n[o].accept.call(
                        n[o].element[0],
                        t.currentItem || t.element
                      ))
                  )
                ) {
                  for (a = 0; a < r.length; a++)
                    if (r[a] === n[o].element[0]) {
                      n[o].proportions().height = 0;
                      continue e;
                    }
                  (n[o].visible = "none" !== n[o].element.css("display")),
                    n[o].visible &&
                      ("mousedown" === s && n[o]._activate.call(n[o], i),
                      (n[o].offset = n[o].element.offset()),
                      n[o].proportions({
                        width: n[o].element[0].offsetWidth,
                        height: n[o].element[0].offsetHeight,
                      }));
                }
            },
            drop: function (t, i) {
              var o = !1;
              return (
                e.each(
                  (e.ui.ddmanager.droppables[t.options.scope] || []).slice(),
                  function () {
                    this.options &&
                      (!this.options.disabled &&
                        this.visible &&
                        e.ui.intersect(t, this, this.options.tolerance) &&
                        (o = this._drop.call(this, i) || o),
                      !this.options.disabled &&
                        this.visible &&
                        this.accept.call(
                          this.element[0],
                          t.currentItem || t.element
                        ) &&
                        ((this.isout = !0),
                        (this.isover = !1),
                        this._deactivate.call(this, i)));
                  }
                ),
                o
              );
            },
            dragStart: function (t, i) {
              t.element
                .parentsUntil("body")
                .bind("scroll.droppable", function () {
                  t.options.refreshPositions ||
                    e.ui.ddmanager.prepareOffsets(t, i);
                });
            },
            drag: function (t, i) {
              t.options.refreshPositions && e.ui.ddmanager.prepareOffsets(t, i),
                e.each(
                  e.ui.ddmanager.droppables[t.options.scope] || [],
                  function () {
                    if (
                      !this.options.disabled &&
                      !this.greedyChild &&
                      this.visible
                    ) {
                      var o,
                        a,
                        n,
                        s = e.ui.intersect(t, this, this.options.tolerance),
                        r =
                          !s && this.isover
                            ? "isout"
                            : s && !this.isover
                            ? "isover"
                            : null;
                      r &&
                        (this.options.greedy &&
                          ((a = this.options.scope),
                          (n = this.element
                            .parents(":data(ui-droppable)")
                            .filter(function () {
                              return (
                                e.data(this, "ui-droppable").options.scope === a
                              );
                            })).length &&
                            ((o = e.data(n[0], "ui-droppable")).greedyChild =
                              "isover" === r)),
                        o &&
                          "isover" === r &&
                          ((o.isover = !1), (o.isout = !0), o._out.call(o, i)),
                        (this[r] = !0),
                        (this["isout" === r ? "isover" : "isout"] = !1),
                        this["isover" === r ? "_over" : "_out"].call(this, i),
                        o &&
                          "isout" === r &&
                          ((o.isout = !1),
                          (o.isover = !0),
                          o._over.call(o, i)));
                    }
                  }
                );
            },
            dragStop: function (t, i) {
              t.element.parentsUntil("body").unbind("scroll.droppable"),
                t.options.refreshPositions ||
                  e.ui.ddmanager.prepareOffsets(t, i);
            },
          });
      })(jQuery),
      (function (e, t) {
        function i(e) {
          return parseInt(e, 10) || 0;
        }
        function o(e) {
          return !isNaN(parseInt(e, 10));
        }
        e.widget("ui.resizable", e.ui.mouse, {
          version: "1.10.4",
          widgetEventPrefix: "resize",
          options: {
            alsoResize: !1,
            animate: !1,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: !1,
            autoHide: !1,
            containment: !1,
            ghost: !1,
            grid: !1,
            handles: "e,s,se",
            helper: !1,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 90,
            resize: null,
            start: null,
            stop: null,
          },
          _create: function () {
            var t,
              i,
              o,
              a,
              n = this,
              s = this.options;
            if (
              (this.element.addClass("ui-resizable"),
              e.extend(this, {
                _aspectRatio: !!s.aspectRatio,
                aspectRatio: s.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper:
                  s.helper || s.ghost || s.animate
                    ? s.helper || "ui-resizable-helper"
                    : null,
              }),
              this.element[0].nodeName.match(
                /canvas|textarea|input|select|button|img/i
              ) &&
                (this.element.wrap(
                  e(
                    "<div class='ui-wrapper' style='overflow: hidden;'></div>"
                  ).css({
                    position: this.element.css("position"),
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight(),
                    top: this.element.css("top"),
                    left: this.element.css("left"),
                  })
                ),
                (this.element = this.element
                  .parent()
                  .data("ui-resizable", this.element.data("ui-resizable"))),
                (this.elementIsWrapper = !0),
                this.element.css({
                  marginLeft: this.originalElement.css("marginLeft"),
                  marginTop: this.originalElement.css("marginTop"),
                  marginRight: this.originalElement.css("marginRight"),
                  marginBottom: this.originalElement.css("marginBottom"),
                }),
                this.originalElement.css({
                  marginLeft: 0,
                  marginTop: 0,
                  marginRight: 0,
                  marginBottom: 0,
                }),
                (this.originalResizeStyle = this.originalElement.css("resize")),
                this.originalElement.css("resize", "none"),
                this._proportionallyResizeElements.push(
                  this.originalElement.css({
                    position: "static",
                    zoom: 1,
                    display: "block",
                  })
                ),
                this.originalElement.css({
                  margin: this.originalElement.css("margin"),
                }),
                this._proportionallyResize()),
              (this.handles =
                s.handles ||
                (e(".ui-resizable-handle", this.element).length
                  ? {
                      n: ".ui-resizable-n",
                      e: ".ui-resizable-e",
                      s: ".ui-resizable-s",
                      w: ".ui-resizable-w",
                      se: ".ui-resizable-se",
                      sw: ".ui-resizable-sw",
                      ne: ".ui-resizable-ne",
                      nw: ".ui-resizable-nw",
                    }
                  : "e,s,se")),
              this.handles.constructor === String)
            )
              for (
                "all" === this.handles &&
                  (this.handles = "n,e,s,w,se,sw,ne,nw"),
                  t = this.handles.split(","),
                  this.handles = {},
                  i = 0;
                i < t.length;
                i++
              )
                (o = e.trim(t[i])),
                  (a = e(
                    "<div class='ui-resizable-handle " +
                      ("ui-resizable-" + o) +
                      "'></div>"
                  )).css({ zIndex: s.zIndex }),
                  "se" === o &&
                    a.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),
                  (this.handles[o] = ".ui-resizable-" + o),
                  this.element.append(a);
            (this._renderAxis = function (t) {
              var i, o, a, n;
              for (i in ((t = t || this.element), this.handles))
                this.handles[i].constructor === String &&
                  (this.handles[i] = e(this.handles[i], this.element).show()),
                  this.elementIsWrapper &&
                    this.originalElement[0].nodeName.match(
                      /textarea|input|select|button/i
                    ) &&
                    ((o = e(this.handles[i], this.element)),
                    (n = /sw|ne|nw|se|n|s/.test(i)
                      ? o.outerHeight()
                      : o.outerWidth()),
                    (a = [
                      "padding",
                      /ne|nw|n/.test(i)
                        ? "Top"
                        : /se|sw|s/.test(i)
                        ? "Bottom"
                        : /^e$/.test(i)
                        ? "Right"
                        : "Left",
                    ].join("")),
                    t.css(a, n),
                    this._proportionallyResize()),
                  e(this.handles[i]).length;
            }),
              this._renderAxis(this.element),
              (this._handles = e(
                ".ui-resizable-handle",
                this.element
              ).disableSelection()),
              this._handles.mouseover(function () {
                n.resizing ||
                  (this.className &&
                    (a = this.className.match(
                      /ui-resizable-(se|sw|ne|nw|n|e|s|w)/i
                    )),
                  (n.axis = a && a[1] ? a[1] : "se"));
              }),
              s.autoHide &&
                (this._handles.hide(),
                e(this.element)
                  .addClass("ui-resizable-autohide")
                  .mouseenter(function () {
                    s.disabled ||
                      (e(this).removeClass("ui-resizable-autohide"),
                      n._handles.show());
                  })
                  .mouseleave(function () {
                    s.disabled ||
                      n.resizing ||
                      (e(this).addClass("ui-resizable-autohide"),
                      n._handles.hide());
                  })),
              this._mouseInit();
          },
          _destroy: function () {
            this._mouseDestroy();
            var t,
              i = function (t) {
                e(t)
                  .removeClass(
                    "ui-resizable ui-resizable-disabled ui-resizable-resizing"
                  )
                  .removeData("resizable")
                  .removeData("ui-resizable")
                  .unbind(".resizable")
                  .find(".ui-resizable-handle")
                  .remove();
              };
            return (
              this.elementIsWrapper &&
                (i(this.element),
                (t = this.element),
                this.originalElement
                  .css({
                    position: t.css("position"),
                    width: t.outerWidth(),
                    height: t.outerHeight(),
                    top: t.css("top"),
                    left: t.css("left"),
                  })
                  .insertAfter(t),
                t.remove()),
              this.originalElement.css("resize", this.originalResizeStyle),
              i(this.originalElement),
              this
            );
          },
          _mouseCapture: function (t) {
            var i,
              o,
              a = !1;
            for (i in this.handles)
              ((o = e(this.handles[i])[0]) === t.target ||
                e.contains(o, t.target)) &&
                (a = !0);
            return !this.options.disabled && a;
          },
          _mouseStart: function (t) {
            var o,
              a,
              n,
              s = this.options,
              r = this.element.position(),
              l = this.element;
            return (
              (this.resizing = !0),
              /absolute/.test(l.css("position"))
                ? l.css({
                    position: "absolute",
                    top: l.css("top"),
                    left: l.css("left"),
                  })
                : l.is(".ui-draggable") &&
                  l.css({ position: "absolute", top: r.top, left: r.left }),
              this._renderProxy(),
              (o = i(this.helper.css("left"))),
              (a = i(this.helper.css("top"))),
              s.containment &&
                ((o += e(s.containment).scrollLeft() || 0),
                (a += e(s.containment).scrollTop() || 0)),
              (this.offset = this.helper.offset()),
              (this.position = { left: o, top: a }),
              (this.size = this._helper
                ? { width: this.helper.width(), height: this.helper.height() }
                : { width: l.width(), height: l.height() }),
              (this.originalSize = this._helper
                ? { width: l.outerWidth(), height: l.outerHeight() }
                : { width: l.width(), height: l.height() }),
              (this.originalPosition = { left: o, top: a }),
              (this.sizeDiff = {
                width: l.outerWidth() - l.width(),
                height: l.outerHeight() - l.height(),
              }),
              (this.originalMousePosition = { left: t.pageX, top: t.pageY }),
              (this.aspectRatio =
                "number" == typeof s.aspectRatio
                  ? s.aspectRatio
                  : this.originalSize.width / this.originalSize.height || 1),
              (n = e(".ui-resizable-" + this.axis).css("cursor")),
              e("body").css("cursor", "auto" === n ? this.axis + "-resize" : n),
              l.addClass("ui-resizable-resizing"),
              this._propagate("start", t),
              !0
            );
          },
          _mouseDrag: function (t) {
            var i,
              o = this.helper,
              a = {},
              n = this.originalMousePosition,
              s = this.axis,
              r = this.position.top,
              l = this.position.left,
              c = this.size.width,
              d = this.size.height,
              u = t.pageX - n.left || 0,
              p = t.pageY - n.top || 0,
              h = this._change[s];
            return (
              !!h &&
              ((i = h.apply(this, [t, u, p])),
              this._updateVirtualBoundaries(t.shiftKey),
              (this._aspectRatio || t.shiftKey) &&
                (i = this._updateRatio(i, t)),
              (i = this._respectSize(i, t)),
              this._updateCache(i),
              this._propagate("resize", t),
              this.position.top !== r && (a.top = this.position.top + "px"),
              this.position.left !== l && (a.left = this.position.left + "px"),
              this.size.width !== c && (a.width = this.size.width + "px"),
              this.size.height !== d && (a.height = this.size.height + "px"),
              o.css(a),
              !this._helper &&
                this._proportionallyResizeElements.length &&
                this._proportionallyResize(),
              e.isEmptyObject(a) || this._trigger("resize", t, this.ui()),
              !1)
            );
          },
          _mouseStop: function (t) {
            this.resizing = !1;
            var i,
              o,
              a,
              n,
              s,
              r,
              l,
              c = this.options,
              d = this;
            return (
              this._helper &&
                ((a =
                  (o =
                    (i = this._proportionallyResizeElements).length &&
                    /textarea/i.test(i[0].nodeName)) &&
                  e.ui.hasScroll(i[0], "left")
                    ? 0
                    : d.sizeDiff.height),
                (n = o ? 0 : d.sizeDiff.width),
                (s = {
                  width: d.helper.width() - n,
                  height: d.helper.height() - a,
                }),
                (r =
                  parseInt(d.element.css("left"), 10) +
                    (d.position.left - d.originalPosition.left) || null),
                (l =
                  parseInt(d.element.css("top"), 10) +
                    (d.position.top - d.originalPosition.top) || null),
                c.animate || this.element.css(e.extend(s, { top: l, left: r })),
                d.helper.height(d.size.height),
                d.helper.width(d.size.width),
                this._helper && !c.animate && this._proportionallyResize()),
              e("body").css("cursor", "auto"),
              this.element.removeClass("ui-resizable-resizing"),
              this._propagate("stop", t),
              this._helper && this.helper.remove(),
              !1
            );
          },
          _updateVirtualBoundaries: function (e) {
            var t,
              i,
              a,
              n,
              s,
              r = this.options;
            (s = {
              minWidth: o(r.minWidth) ? r.minWidth : 0,
              maxWidth: o(r.maxWidth) ? r.maxWidth : 1 / 0,
              minHeight: o(r.minHeight) ? r.minHeight : 0,
              maxHeight: o(r.maxHeight) ? r.maxHeight : 1 / 0,
            }),
              (this._aspectRatio || e) &&
                ((t = s.minHeight * this.aspectRatio),
                (a = s.minWidth / this.aspectRatio),
                (i = s.maxHeight * this.aspectRatio),
                (n = s.maxWidth / this.aspectRatio),
                t > s.minWidth && (s.minWidth = t),
                a > s.minHeight && (s.minHeight = a),
                i < s.maxWidth && (s.maxWidth = i),
                n < s.maxHeight && (s.maxHeight = n)),
              (this._vBoundaries = s);
          },
          _updateCache: function (e) {
            (this.offset = this.helper.offset()),
              o(e.left) && (this.position.left = e.left),
              o(e.top) && (this.position.top = e.top),
              o(e.height) && (this.size.height = e.height),
              o(e.width) && (this.size.width = e.width);
          },
          _updateRatio: function (e) {
            var t = this.position,
              i = this.size,
              a = this.axis;
            return (
              o(e.height)
                ? (e.width = e.height * this.aspectRatio)
                : o(e.width) && (e.height = e.width / this.aspectRatio),
              "sw" === a &&
                ((e.left = t.left + (i.width - e.width)), (e.top = null)),
              "nw" === a &&
                ((e.top = t.top + (i.height - e.height)),
                (e.left = t.left + (i.width - e.width))),
              e
            );
          },
          _respectSize: function (e) {
            var t = this._vBoundaries,
              i = this.axis,
              a = o(e.width) && t.maxWidth && t.maxWidth < e.width,
              n = o(e.height) && t.maxHeight && t.maxHeight < e.height,
              s = o(e.width) && t.minWidth && t.minWidth > e.width,
              r = o(e.height) && t.minHeight && t.minHeight > e.height,
              l = this.originalPosition.left + this.originalSize.width,
              c = this.position.top + this.size.height,
              d = /sw|nw|w/.test(i),
              u = /nw|ne|n/.test(i);
            return (
              s && (e.width = t.minWidth),
              r && (e.height = t.minHeight),
              a && (e.width = t.maxWidth),
              n && (e.height = t.maxHeight),
              s && d && (e.left = l - t.minWidth),
              a && d && (e.left = l - t.maxWidth),
              r && u && (e.top = c - t.minHeight),
              n && u && (e.top = c - t.maxHeight),
              e.width || e.height || e.left || !e.top
                ? e.width || e.height || e.top || !e.left || (e.left = null)
                : (e.top = null),
              e
            );
          },
          _proportionallyResize: function () {
            if (this._proportionallyResizeElements.length) {
              var e,
                t,
                i,
                o,
                a,
                n = this.helper || this.element;
              for (e = 0; e < this._proportionallyResizeElements.length; e++) {
                if (
                  ((a = this._proportionallyResizeElements[e]), !this.borderDif)
                )
                  for (
                    this.borderDif = [],
                      i = [
                        a.css("borderTopWidth"),
                        a.css("borderRightWidth"),
                        a.css("borderBottomWidth"),
                        a.css("borderLeftWidth"),
                      ],
                      o = [
                        a.css("paddingTop"),
                        a.css("paddingRight"),
                        a.css("paddingBottom"),
                        a.css("paddingLeft"),
                      ],
                      t = 0;
                    t < i.length;
                    t++
                  )
                    this.borderDif[t] =
                      (parseInt(i[t], 10) || 0) + (parseInt(o[t], 10) || 0);
                a.css({
                  height:
                    n.height() - this.borderDif[0] - this.borderDif[2] || 0,
                  width: n.width() - this.borderDif[1] - this.borderDif[3] || 0,
                });
              }
            }
          },
          _renderProxy: function () {
            var t = this.element,
              i = this.options;
            (this.elementOffset = t.offset()),
              this._helper
                ? ((this.helper =
                    this.helper || e("<div style='overflow:hidden;'></div>")),
                  this.helper
                    .addClass(this._helper)
                    .css({
                      width: this.element.outerWidth() - 1,
                      height: this.element.outerHeight() - 1,
                      position: "absolute",
                      left: this.elementOffset.left + "px",
                      top: this.elementOffset.top + "px",
                      zIndex: ++i.zIndex,
                    }),
                  this.helper.appendTo("body").disableSelection())
                : (this.helper = this.element);
          },
          _change: {
            e: function (e, t) {
              return { width: this.originalSize.width + t };
            },
            w: function (e, t) {
              var i = this.originalSize;
              return {
                left: this.originalPosition.left + t,
                width: i.width - t,
              };
            },
            n: function (e, t, i) {
              var o = this.originalSize;
              return {
                top: this.originalPosition.top + i,
                height: o.height - i,
              };
            },
            s: function (e, t, i) {
              return { height: this.originalSize.height + i };
            },
            se: function (t, i, o) {
              return e.extend(
                this._change.s.apply(this, arguments),
                this._change.e.apply(this, [t, i, o])
              );
            },
            sw: function (t, i, o) {
              return e.extend(
                this._change.s.apply(this, arguments),
                this._change.w.apply(this, [t, i, o])
              );
            },
            ne: function (t, i, o) {
              return e.extend(
                this._change.n.apply(this, arguments),
                this._change.e.apply(this, [t, i, o])
              );
            },
            nw: function (t, i, o) {
              return e.extend(
                this._change.n.apply(this, arguments),
                this._change.w.apply(this, [t, i, o])
              );
            },
          },
          _propagate: function (t, i) {
            e.ui.plugin.call(this, t, [i, this.ui()]),
              "resize" !== t && this._trigger(t, i, this.ui());
          },
          plugins: {},
          ui: function () {
            return {
              originalElement: this.originalElement,
              element: this.element,
              helper: this.helper,
              position: this.position,
              size: this.size,
              originalSize: this.originalSize,
              originalPosition: this.originalPosition,
            };
          },
        }),
          e.ui.plugin.add("resizable", "animate", {
            stop: function (t) {
              var i = e(this).data("ui-resizable"),
                o = i.options,
                a = i._proportionallyResizeElements,
                n = a.length && /textarea/i.test(a[0].nodeName),
                s = n && e.ui.hasScroll(a[0], "left") ? 0 : i.sizeDiff.height,
                r = n ? 0 : i.sizeDiff.width,
                l = { width: i.size.width - r, height: i.size.height - s },
                c =
                  parseInt(i.element.css("left"), 10) +
                    (i.position.left - i.originalPosition.left) || null,
                d =
                  parseInt(i.element.css("top"), 10) +
                    (i.position.top - i.originalPosition.top) || null;
              i.element.animate(
                e.extend(l, d && c ? { top: d, left: c } : {}),
                {
                  duration: o.animateDuration,
                  easing: o.animateEasing,
                  step: function () {
                    var o = {
                      width: parseInt(i.element.css("width"), 10),
                      height: parseInt(i.element.css("height"), 10),
                      top: parseInt(i.element.css("top"), 10),
                      left: parseInt(i.element.css("left"), 10),
                    };
                    a &&
                      a.length &&
                      e(a[0]).css({ width: o.width, height: o.height }),
                      i._updateCache(o),
                      i._propagate("resize", t);
                  },
                }
              );
            },
          }),
          e.ui.plugin.add("resizable", "containment", {
            start: function () {
              var t,
                o,
                a,
                n,
                s,
                r,
                l,
                c = e(this).data("ui-resizable"),
                d = c.options,
                u = c.element,
                p = d.containment,
                h =
                  p instanceof e
                    ? p.get(0)
                    : /parent/.test(p)
                    ? u.parent().get(0)
                    : p;
              h &&
                ((c.containerElement = e(h)),
                /document/.test(p) || p === document
                  ? ((c.containerOffset = { left: 0, top: 0 }),
                    (c.containerPosition = { left: 0, top: 0 }),
                    (c.parentData = {
                      element: e(document),
                      left: 0,
                      top: 0,
                      width: e(document).width(),
                      height:
                        e(document).height() ||
                        document.body.parentNode.scrollHeight,
                    }))
                  : ((t = e(h)),
                    (o = []),
                    e(["Top", "Right", "Left", "Bottom"]).each(function (e, a) {
                      o[e] = i(t.css("padding" + a));
                    }),
                    (c.containerOffset = t.offset()),
                    (c.containerPosition = t.position()),
                    (c.containerSize = {
                      height: t.innerHeight() - o[3],
                      width: t.innerWidth() - o[1],
                    }),
                    (a = c.containerOffset),
                    (n = c.containerSize.height),
                    (s = c.containerSize.width),
                    (r = e.ui.hasScroll(h, "left") ? h.scrollWidth : s),
                    (l = e.ui.hasScroll(h) ? h.scrollHeight : n),
                    (c.parentData = {
                      element: h,
                      left: a.left,
                      top: a.top,
                      width: r,
                      height: l,
                    })));
            },
            resize: function (t) {
              var i,
                o,
                a,
                n,
                s = e(this).data("ui-resizable"),
                r = s.options,
                l = s.containerOffset,
                c = s.position,
                d = s._aspectRatio || t.shiftKey,
                u = { top: 0, left: 0 },
                p = s.containerElement;
              p[0] !== document && /static/.test(p.css("position")) && (u = l),
                c.left < (s._helper ? l.left : 0) &&
                  ((s.size.width =
                    s.size.width +
                    (s._helper
                      ? s.position.left - l.left
                      : s.position.left - u.left)),
                  d && (s.size.height = s.size.width / s.aspectRatio),
                  (s.position.left = r.helper ? l.left : 0)),
                c.top < (s._helper ? l.top : 0) &&
                  ((s.size.height =
                    s.size.height +
                    (s._helper ? s.position.top - l.top : s.position.top)),
                  d && (s.size.width = s.size.height * s.aspectRatio),
                  (s.position.top = s._helper ? l.top : 0)),
                (s.offset.left = s.parentData.left + s.position.left),
                (s.offset.top = s.parentData.top + s.position.top),
                (i = Math.abs(
                  (s._helper, s.offset.left - u.left + s.sizeDiff.width)
                )),
                (o = Math.abs(
                  (s._helper ? s.offset.top - u.top : s.offset.top - l.top) +
                    s.sizeDiff.height
                )),
                (a = s.containerElement.get(0) === s.element.parent().get(0)),
                (n = /relative|absolute/.test(
                  s.containerElement.css("position")
                )),
                a && n && (i -= Math.abs(s.parentData.left)),
                i + s.size.width >= s.parentData.width &&
                  ((s.size.width = s.parentData.width - i),
                  d && (s.size.height = s.size.width / s.aspectRatio)),
                o + s.size.height >= s.parentData.height &&
                  ((s.size.height = s.parentData.height - o),
                  d && (s.size.width = s.size.height * s.aspectRatio));
            },
            stop: function () {
              var t = e(this).data("ui-resizable"),
                i = t.options,
                o = t.containerOffset,
                a = t.containerPosition,
                n = t.containerElement,
                s = e(t.helper),
                r = s.offset(),
                l = s.outerWidth() - t.sizeDiff.width,
                c = s.outerHeight() - t.sizeDiff.height;
              t._helper &&
                !i.animate &&
                /relative/.test(n.css("position")) &&
                e(this).css({
                  left: r.left - a.left - o.left,
                  width: l,
                  height: c,
                }),
                t._helper &&
                  !i.animate &&
                  /static/.test(n.css("position")) &&
                  e(this).css({
                    left: r.left - a.left - o.left,
                    width: l,
                    height: c,
                  });
            },
          }),
          e.ui.plugin.add("resizable", "alsoResize", {
            start: function () {
              var t = e(this).data("ui-resizable").options,
                i = function (t) {
                  e(t).each(function () {
                    var t = e(this);
                    t.data("ui-resizable-alsoresize", {
                      width: parseInt(t.width(), 10),
                      height: parseInt(t.height(), 10),
                      left: parseInt(t.css("left"), 10),
                      top: parseInt(t.css("top"), 10),
                    });
                  });
                };
              "object" != typeof t.alsoResize || t.alsoResize.parentNode
                ? i(t.alsoResize)
                : t.alsoResize.length
                ? ((t.alsoResize = t.alsoResize[0]), i(t.alsoResize))
                : e.each(t.alsoResize, function (e) {
                    i(e);
                  });
            },
            resize: function (t, i) {
              var o = e(this).data("ui-resizable"),
                a = o.options,
                n = o.originalSize,
                s = o.originalPosition,
                r = {
                  height: o.size.height - n.height || 0,
                  width: o.size.width - n.width || 0,
                  top: o.position.top - s.top || 0,
                  left: o.position.left - s.left || 0,
                },
                l = function (t, o) {
                  e(t).each(function () {
                    var t = e(this),
                      a = e(this).data("ui-resizable-alsoresize"),
                      n = {},
                      s =
                        o && o.length
                          ? o
                          : t.parents(i.originalElement[0]).length
                          ? ["width", "height"]
                          : ["width", "height", "top", "left"];
                    e.each(s, function (e, t) {
                      var i = (a[t] || 0) + (r[t] || 0);
                      i && i >= 0 && (n[t] = i || null);
                    }),
                      t.css(n);
                  });
                };
              "object" != typeof a.alsoResize || a.alsoResize.nodeType
                ? l(a.alsoResize)
                : e.each(a.alsoResize, function (e, t) {
                    l(e, t);
                  });
            },
            stop: function () {
              e(this).removeData("resizable-alsoresize");
            },
          }),
          e.ui.plugin.add("resizable", "ghost", {
            start: function () {
              var t = e(this).data("ui-resizable"),
                i = t.options,
                o = t.size;
              (t.ghost = t.originalElement.clone()),
                t.ghost
                  .css({
                    opacity: 0.25,
                    display: "block",
                    position: "relative",
                    height: o.height,
                    width: o.width,
                    margin: 0,
                    left: 0,
                    top: 0,
                  })
                  .addClass("ui-resizable-ghost")
                  .addClass("string" == typeof i.ghost ? i.ghost : ""),
                t.ghost.appendTo(t.helper);
            },
            resize: function () {
              var t = e(this).data("ui-resizable");
              t.ghost &&
                t.ghost.css({
                  position: "relative",
                  height: t.size.height,
                  width: t.size.width,
                });
            },
            stop: function () {
              var t = e(this).data("ui-resizable");
              t.ghost &&
                t.helper &&
                t.helper.get(0).removeChild(t.ghost.get(0));
            },
          }),
          e.ui.plugin.add("resizable", "grid", {
            resize: function () {
              var t = e(this).data("ui-resizable"),
                i = t.options,
                o = t.size,
                a = t.originalSize,
                n = t.originalPosition,
                s = t.axis,
                r = "number" == typeof i.grid ? [i.grid, i.grid] : i.grid,
                l = r[0] || 1,
                c = r[1] || 1,
                d = Math.round((o.width - a.width) / l) * l,
                u = Math.round((o.height - a.height) / c) * c,
                p = a.width + d,
                h = a.height + u,
                m = i.maxWidth && i.maxWidth < p,
                f = i.maxHeight && i.maxHeight < h,
                g = i.minWidth && i.minWidth > p,
                v = i.minHeight && i.minHeight > h;
              (i.grid = r),
                g && (p += l),
                v && (h += c),
                m && (p -= l),
                f && (h -= c),
                /^(se|s|e)$/.test(s)
                  ? ((t.size.width = p), (t.size.height = h))
                  : /^(ne)$/.test(s)
                  ? ((t.size.width = p),
                    (t.size.height = h),
                    (t.position.top = n.top - u))
                  : /^(sw)$/.test(s)
                  ? ((t.size.width = p),
                    (t.size.height = h),
                    (t.position.left = n.left - d))
                  : (h - c > 0
                      ? ((t.size.height = h), (t.position.top = n.top - u))
                      : ((t.size.height = c),
                        (t.position.top = n.top + a.height - c)),
                    p - l > 0
                      ? ((t.size.width = p), (t.position.left = n.left - d))
                      : ((t.size.width = l),
                        (t.position.left = n.left + a.width - l)));
            },
          });
      })(jQuery),
      (function (e, t) {
        e.widget("ui.selectable", e.ui.mouse, {
          version: "1.10.4",
          options: {
            appendTo: "body",
            autoRefresh: !0,
            distance: 0,
            filter: "*",
            tolerance: "touch",
            selected: null,
            selecting: null,
            start: null,
            stop: null,
            unselected: null,
            unselecting: null,
          },
          _create: function () {
            var t,
              i = this;
            this.element.addClass("ui-selectable"),
              (this.dragged = !1),
              (this.refresh = function () {
                (t = e(i.options.filter, i.element[0])).addClass("ui-selectee"),
                  t.each(function () {
                    var t = e(this),
                      i = t.offset();
                    e.data(this, "selectable-item", {
                      element: this,
                      $element: t,
                      left: i.left,
                      top: i.top,
                      right: i.left + t.outerWidth(),
                      bottom: i.top + t.outerHeight(),
                      startselected: !1,
                      selected: t.hasClass("ui-selected"),
                      selecting: t.hasClass("ui-selecting"),
                      unselecting: t.hasClass("ui-unselecting"),
                    });
                  });
              }),
              this.refresh(),
              (this.selectees = t.addClass("ui-selectee")),
              this._mouseInit(),
              (this.helper = e("<div class='ui-selectable-helper'></div>"));
          },
          _destroy: function () {
            this.selectees
              .removeClass("ui-selectee")
              .removeData("selectable-item"),
              this.element.removeClass("ui-selectable ui-selectable-disabled"),
              this._mouseDestroy();
          },
          _mouseStart: function (t) {
            var i = this,
              o = this.options;
            (this.opos = [t.pageX, t.pageY]),
              this.options.disabled ||
                ((this.selectees = e(o.filter, this.element[0])),
                this._trigger("start", t),
                e(o.appendTo).append(this.helper),
                this.helper.css({
                  left: t.pageX,
                  top: t.pageY,
                  width: 0,
                  height: 0,
                }),
                o.autoRefresh && this.refresh(),
                this.selectees.filter(".ui-selected").each(function () {
                  var o = e.data(this, "selectable-item");
                  (o.startselected = !0),
                    t.metaKey ||
                      t.ctrlKey ||
                      (o.$element.removeClass("ui-selected"),
                      (o.selected = !1),
                      o.$element.addClass("ui-unselecting"),
                      (o.unselecting = !0),
                      i._trigger("unselecting", t, { unselecting: o.element }));
                }),
                e(t.target)
                  .parents()
                  .addBack()
                  .each(function () {
                    var o,
                      a = e.data(this, "selectable-item");
                    if (a)
                      return (
                        (o =
                          (!t.metaKey && !t.ctrlKey) ||
                          !a.$element.hasClass("ui-selected")),
                        a.$element
                          .removeClass(o ? "ui-unselecting" : "ui-selected")
                          .addClass(o ? "ui-selecting" : "ui-unselecting"),
                        (a.unselecting = !o),
                        (a.selecting = o),
                        (a.selected = o),
                        o
                          ? i._trigger("selecting", t, { selecting: a.element })
                          : i._trigger("unselecting", t, {
                              unselecting: a.element,
                            }),
                        !1
                      );
                  }));
          },
          _mouseDrag: function (t) {
            if (((this.dragged = !0), !this.options.disabled)) {
              var i,
                o = this,
                a = this.options,
                n = this.opos[0],
                s = this.opos[1],
                r = t.pageX,
                l = t.pageY;
              return (
                n > r && ((i = r), (r = n), (n = i)),
                s > l && ((i = l), (l = s), (s = i)),
                this.helper.css({
                  left: n,
                  top: s,
                  width: r - n,
                  height: l - s,
                }),
                this.selectees.each(function () {
                  var i = e.data(this, "selectable-item"),
                    c = !1;
                  i &&
                    i.element !== o.element[0] &&
                    ("touch" === a.tolerance
                      ? (c = !(
                          i.left > r ||
                          i.right < n ||
                          i.top > l ||
                          i.bottom < s
                        ))
                      : "fit" === a.tolerance &&
                        (c =
                          i.left > n &&
                          i.right < r &&
                          i.top > s &&
                          i.bottom < l),
                    c
                      ? (i.selected &&
                          (i.$element.removeClass("ui-selected"),
                          (i.selected = !1)),
                        i.unselecting &&
                          (i.$element.removeClass("ui-unselecting"),
                          (i.unselecting = !1)),
                        i.selecting ||
                          (i.$element.addClass("ui-selecting"),
                          (i.selecting = !0),
                          o._trigger("selecting", t, { selecting: i.element })))
                      : (i.selecting &&
                          ((t.metaKey || t.ctrlKey) && i.startselected
                            ? (i.$element.removeClass("ui-selecting"),
                              (i.selecting = !1),
                              i.$element.addClass("ui-selected"),
                              (i.selected = !0))
                            : (i.$element.removeClass("ui-selecting"),
                              (i.selecting = !1),
                              i.startselected &&
                                (i.$element.addClass("ui-unselecting"),
                                (i.unselecting = !0)),
                              o._trigger("unselecting", t, {
                                unselecting: i.element,
                              }))),
                        i.selected &&
                          (t.metaKey ||
                            t.ctrlKey ||
                            i.startselected ||
                            (i.$element.removeClass("ui-selected"),
                            (i.selected = !1),
                            i.$element.addClass("ui-unselecting"),
                            (i.unselecting = !0),
                            o._trigger("unselecting", t, {
                              unselecting: i.element,
                            })))));
                }),
                !1
              );
            }
          },
          _mouseStop: function (t) {
            var i = this;
            return (
              (this.dragged = !1),
              e(".ui-unselecting", this.element[0]).each(function () {
                var o = e.data(this, "selectable-item");
                o.$element.removeClass("ui-unselecting"),
                  (o.unselecting = !1),
                  (o.startselected = !1),
                  i._trigger("unselected", t, { unselected: o.element });
              }),
              e(".ui-selecting", this.element[0]).each(function () {
                var o = e.data(this, "selectable-item");
                o.$element.removeClass("ui-selecting").addClass("ui-selected"),
                  (o.selecting = !1),
                  (o.selected = !0),
                  (o.startselected = !0),
                  i._trigger("selected", t, { selected: o.element });
              }),
              this._trigger("stop", t),
              this.helper.remove(),
              !1
            );
          },
        });
      })(jQuery),
      (function (e, t) {
        function i(e, t, i) {
          return e > t && e < t + i;
        }
        function o(e) {
          return (
            /left|right/.test(e.css("float")) ||
            /inline|table-cell/.test(e.css("display"))
          );
        }
        e.widget("ui.sortable", e.ui.mouse, {
          version: "1.10.4",
          widgetEventPrefix: "sort",
          ready: !1,
          options: {
            appendTo: "parent",
            axis: !1,
            connectWith: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            dropOnEmpty: !0,
            forcePlaceholderSize: !1,
            forceHelperSize: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            items: "> *",
            opacity: !1,
            placeholder: !1,
            revert: !1,
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1e3,
            activate: null,
            beforeStop: null,
            change: null,
            deactivate: null,
            out: null,
            over: null,
            receive: null,
            remove: null,
            sort: null,
            start: null,
            stop: null,
            update: null,
          },
          _create: function () {
            var e = this.options;
            (this.containerCache = {}),
              this.element.addClass("ui-sortable"),
              this.refresh(),
              (this.floating =
                !!this.items.length &&
                ("x" === e.axis || o(this.items[0].item))),
              (this.offset = this.element.offset()),
              this._mouseInit(),
              (this.ready = !0);
          },
          _destroy: function () {
            this.element.removeClass("ui-sortable ui-sortable-disabled"),
              this._mouseDestroy();
            for (var e = this.items.length - 1; e >= 0; e--)
              this.items[e].item.removeData(this.widgetName + "-item");
            return this;
          },
          _setOption: function (t, i) {
            "disabled" === t
              ? ((this.options[t] = i),
                this.widget().toggleClass("ui-sortable-disabled", !!i))
              : e.Widget.prototype._setOption.apply(this, arguments);
          },
          _mouseCapture: function (t, i) {
            var o = null,
              a = !1,
              n = this;
            return (
              !this.reverting &&
              !this.options.disabled &&
              "static" !== this.options.type &&
              (this._refreshItems(t),
              e(t.target)
                .parents()
                .each(function () {
                  if (e.data(this, n.widgetName + "-item") === n)
                    return (o = e(this)), !1;
                }),
              e.data(t.target, n.widgetName + "-item") === n &&
                (o = e(t.target)),
              !!o &&
                !(
                  this.options.handle &&
                  !i &&
                  (e(this.options.handle, o)
                    .find("*")
                    .addBack()
                    .each(function () {
                      this === t.target && (a = !0);
                    }),
                  !a)
                ) &&
                ((this.currentItem = o), this._removeCurrentsFromItems(), !0))
            );
          },
          _mouseStart: function (t, i, o) {
            var a,
              n,
              s = this.options;
            if (
              ((this.currentContainer = this),
              this.refreshPositions(),
              (this.helper = this._createHelper(t)),
              this._cacheHelperProportions(),
              this._cacheMargins(),
              (this.scrollParent = this.helper.scrollParent()),
              (this.offset = this.currentItem.offset()),
              (this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left,
              }),
              e.extend(this.offset, {
                click: {
                  left: t.pageX - this.offset.left,
                  top: t.pageY - this.offset.top,
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset(),
              }),
              this.helper.css("position", "absolute"),
              (this.cssPosition = this.helper.css("position")),
              (this.originalPosition = this._generatePosition(t)),
              (this.originalPageX = t.pageX),
              (this.originalPageY = t.pageY),
              s.cursorAt && this._adjustOffsetFromHelper(s.cursorAt),
              (this.domPosition = {
                prev: this.currentItem.prev()[0],
                parent: this.currentItem.parent()[0],
              }),
              this.helper[0] !== this.currentItem[0] && this.currentItem.hide(),
              this._createPlaceholder(),
              s.containment && this._setContainment(),
              s.cursor &&
                "auto" !== s.cursor &&
                ((n = this.document.find("body")),
                (this.storedCursor = n.css("cursor")),
                n.css("cursor", s.cursor),
                (this.storedStylesheet = e(
                  "<style>*{ cursor: " + s.cursor + " !important; }</style>"
                ).appendTo(n))),
              s.opacity &&
                (this.helper.css("opacity") &&
                  (this._storedOpacity = this.helper.css("opacity")),
                this.helper.css("opacity", s.opacity)),
              s.zIndex &&
                (this.helper.css("zIndex") &&
                  (this._storedZIndex = this.helper.css("zIndex")),
                this.helper.css("zIndex", s.zIndex)),
              this.scrollParent[0] !== document &&
                "HTML" !== this.scrollParent[0].tagName &&
                (this.overflowOffset = this.scrollParent.offset()),
              this._trigger("start", t, this._uiHash()),
              this._preserveHelperProportions || this._cacheHelperProportions(),
              !o)
            )
              for (a = this.containers.length - 1; a >= 0; a--)
                this.containers[a]._trigger("activate", t, this._uiHash(this));
            return (
              e.ui.ddmanager && (e.ui.ddmanager.current = this),
              e.ui.ddmanager &&
                !s.dropBehaviour &&
                e.ui.ddmanager.prepareOffsets(this, t),
              (this.dragging = !0),
              this.helper.addClass("ui-sortable-helper"),
              this._mouseDrag(t),
              !0
            );
          },
          _mouseDrag: function (t) {
            var i,
              o,
              a,
              n,
              s = this.options,
              r = !1;
            for (
              this.position = this._generatePosition(t),
                this.positionAbs = this._convertPositionTo("absolute"),
                this.lastPositionAbs ||
                  (this.lastPositionAbs = this.positionAbs),
                this.options.scroll &&
                  (this.scrollParent[0] !== document &&
                  "HTML" !== this.scrollParent[0].tagName
                    ? (this.overflowOffset.top +
                        this.scrollParent[0].offsetHeight -
                        t.pageY <
                      s.scrollSensitivity
                        ? (this.scrollParent[0].scrollTop = r =
                            this.scrollParent[0].scrollTop + s.scrollSpeed)
                        : t.pageY - this.overflowOffset.top <
                            s.scrollSensitivity &&
                          (this.scrollParent[0].scrollTop = r =
                            this.scrollParent[0].scrollTop - s.scrollSpeed),
                      this.overflowOffset.left +
                        this.scrollParent[0].offsetWidth -
                        t.pageX <
                      s.scrollSensitivity
                        ? (this.scrollParent[0].scrollLeft = r =
                            this.scrollParent[0].scrollLeft + s.scrollSpeed)
                        : t.pageX - this.overflowOffset.left <
                            s.scrollSensitivity &&
                          (this.scrollParent[0].scrollLeft = r =
                            this.scrollParent[0].scrollLeft - s.scrollSpeed))
                    : (t.pageY - e(document).scrollTop() < s.scrollSensitivity
                        ? (r = e(document).scrollTop(
                            e(document).scrollTop() - s.scrollSpeed
                          ))
                        : e(window).height() -
                            (t.pageY - e(document).scrollTop()) <
                            s.scrollSensitivity &&
                          (r = e(document).scrollTop(
                            e(document).scrollTop() + s.scrollSpeed
                          )),
                      t.pageX - e(document).scrollLeft() < s.scrollSensitivity
                        ? (r = e(document).scrollLeft(
                            e(document).scrollLeft() - s.scrollSpeed
                          ))
                        : e(window).width() -
                            (t.pageX - e(document).scrollLeft()) <
                            s.scrollSensitivity &&
                          (r = e(document).scrollLeft(
                            e(document).scrollLeft() + s.scrollSpeed
                          ))),
                  !1 !== r &&
                    e.ui.ddmanager &&
                    !s.dropBehaviour &&
                    e.ui.ddmanager.prepareOffsets(this, t)),
                this.positionAbs = this._convertPositionTo("absolute"),
                (this.options.axis && "y" === this.options.axis) ||
                  (this.helper[0].style.left = this.position.left + "px"),
                (this.options.axis && "x" === this.options.axis) ||
                  (this.helper[0].style.top = this.position.top + "px"),
                i = this.items.length - 1;
              i >= 0;
              i--
            )
              if (
                ((a = (o = this.items[i]).item[0]),
                (n = this._intersectsWithPointer(o)) &&
                  o.instance === this.currentContainer &&
                  !(
                    a === this.currentItem[0] ||
                    this.placeholder[1 === n ? "next" : "prev"]()[0] === a ||
                    e.contains(this.placeholder[0], a) ||
                    ("semi-dynamic" === this.options.type &&
                      e.contains(this.element[0], a))
                  ))
              ) {
                if (
                  ((this.direction = 1 === n ? "down" : "up"),
                  "pointer" !== this.options.tolerance &&
                    !this._intersectsWithSides(o))
                )
                  break;
                this._rearrange(t, o),
                  this._trigger("change", t, this._uiHash());
                break;
              }
            return (
              this._contactContainers(t),
              e.ui.ddmanager && e.ui.ddmanager.drag(this, t),
              this._trigger("sort", t, this._uiHash()),
              (this.lastPositionAbs = this.positionAbs),
              !1
            );
          },
          _mouseStop: function (t, i) {
            if (t) {
              if (
                (e.ui.ddmanager &&
                  !this.options.dropBehaviour &&
                  e.ui.ddmanager.drop(this, t),
                this.options.revert)
              ) {
                var o = this,
                  a = this.placeholder.offset(),
                  n = this.options.axis,
                  s = {};
                (n && "x" !== n) ||
                  (s.left =
                    a.left -
                    this.offset.parent.left -
                    this.margins.left +
                    (this.offsetParent[0] === document.body
                      ? 0
                      : this.offsetParent[0].scrollLeft)),
                  (n && "y" !== n) ||
                    (s.top =
                      a.top -
                      this.offset.parent.top -
                      this.margins.top +
                      (this.offsetParent[0] === document.body
                        ? 0
                        : this.offsetParent[0].scrollTop)),
                  (this.reverting = !0),
                  e(this.helper).animate(
                    s,
                    parseInt(this.options.revert, 10) || 500,
                    function () {
                      o._clear(t);
                    }
                  );
              } else this._clear(t, i);
              return !1;
            }
          },
          cancel: function () {
            if (this.dragging) {
              this._mouseUp({ target: null }),
                "original" === this.options.helper
                  ? this.currentItem
                      .css(this._storedCSS)
                      .removeClass("ui-sortable-helper")
                  : this.currentItem.show();
              for (var t = this.containers.length - 1; t >= 0; t--)
                this.containers[t]._trigger(
                  "deactivate",
                  null,
                  this._uiHash(this)
                ),
                  this.containers[t].containerCache.over &&
                    (this.containers[t]._trigger(
                      "out",
                      null,
                      this._uiHash(this)
                    ),
                    (this.containers[t].containerCache.over = 0));
            }
            return (
              this.placeholder &&
                (this.placeholder[0].parentNode &&
                  this.placeholder[0].parentNode.removeChild(
                    this.placeholder[0]
                  ),
                "original" !== this.options.helper &&
                  this.helper &&
                  this.helper[0].parentNode &&
                  this.helper.remove(),
                e.extend(this, {
                  helper: null,
                  dragging: !1,
                  reverting: !1,
                  _noFinalSort: null,
                }),
                this.domPosition.prev
                  ? e(this.domPosition.prev).after(this.currentItem)
                  : e(this.domPosition.parent).prepend(this.currentItem)),
              this
            );
          },
          serialize: function (t) {
            var i = this._getItemsAsjQuery(t && t.connected),
              o = [];
            return (
              (t = t || {}),
              e(i).each(function () {
                var i = (
                  e(t.item || this).attr(t.attribute || "id") || ""
                ).match(t.expression || /(.+)[\-=_](.+)/);
                i &&
                  o.push(
                    (t.key || i[1] + "[]") +
                      "=" +
                      (t.key && t.expression ? i[1] : i[2])
                  );
              }),
              !o.length && t.key && o.push(t.key + "="),
              o.join("&")
            );
          },
          toArray: function (t) {
            var i = this._getItemsAsjQuery(t && t.connected),
              o = [];
            return (
              (t = t || {}),
              i.each(function () {
                o.push(e(t.item || this).attr(t.attribute || "id") || "");
              }),
              o
            );
          },
          _intersectsWith: function (e) {
            var t = this.positionAbs.left,
              i = t + this.helperProportions.width,
              o = this.positionAbs.top,
              a = o + this.helperProportions.height,
              n = e.left,
              s = n + e.width,
              r = e.top,
              l = r + e.height,
              c = this.offset.click.top,
              d = this.offset.click.left,
              u = "x" === this.options.axis || (o + c > r && o + c < l),
              p = "y" === this.options.axis || (t + d > n && t + d < s),
              h = u && p;
            return "pointer" === this.options.tolerance ||
              this.options.forcePointerForContainers ||
              ("pointer" !== this.options.tolerance &&
                this.helperProportions[this.floating ? "width" : "height"] >
                  e[this.floating ? "width" : "height"])
              ? h
              : n < t + this.helperProportions.width / 2 &&
                  i - this.helperProportions.width / 2 < s &&
                  r < o + this.helperProportions.height / 2 &&
                  a - this.helperProportions.height / 2 < l;
          },
          _intersectsWithPointer: function (e) {
            var t =
                "x" === this.options.axis ||
                i(
                  this.positionAbs.top + this.offset.click.top,
                  e.top,
                  e.height
                ),
              o =
                "y" === this.options.axis ||
                i(
                  this.positionAbs.left + this.offset.click.left,
                  e.left,
                  e.width
                ),
              a = t && o,
              n = this._getDragVerticalDirection(),
              s = this._getDragHorizontalDirection();
            return (
              !!a &&
              (this.floating
                ? (s && "right" === s) || "down" === n
                  ? 2
                  : 1
                : n && ("down" === n ? 2 : 1))
            );
          },
          _intersectsWithSides: function (e) {
            var t = i(
                this.positionAbs.top + this.offset.click.top,
                e.top + e.height / 2,
                e.height
              ),
              o = i(
                this.positionAbs.left + this.offset.click.left,
                e.left + e.width / 2,
                e.width
              ),
              a = this._getDragVerticalDirection(),
              n = this._getDragHorizontalDirection();
            return this.floating && n
              ? ("right" === n && o) || ("left" === n && !o)
              : a && (("down" === a && t) || ("up" === a && !t));
          },
          _getDragVerticalDirection: function () {
            var e = this.positionAbs.top - this.lastPositionAbs.top;
            return 0 !== e && (e > 0 ? "down" : "up");
          },
          _getDragHorizontalDirection: function () {
            var e = this.positionAbs.left - this.lastPositionAbs.left;
            return 0 !== e && (e > 0 ? "right" : "left");
          },
          refresh: function (e) {
            return this._refreshItems(e), this.refreshPositions(), this;
          },
          _connectWith: function () {
            var e = this.options;
            return e.connectWith.constructor === String
              ? [e.connectWith]
              : e.connectWith;
          },
          _getItemsAsjQuery: function (t) {
            var i,
              o,
              a,
              n,
              s = [],
              r = [],
              l = this._connectWith();
            if (l && t)
              for (i = l.length - 1; i >= 0; i--)
                for (o = (a = e(l[i])).length - 1; o >= 0; o--)
                  (n = e.data(a[o], this.widgetFullName)) &&
                    n !== this &&
                    !n.options.disabled &&
                    r.push([
                      e.isFunction(n.options.items)
                        ? n.options.items.call(n.element)
                        : e(n.options.items, n.element)
                            .not(".ui-sortable-helper")
                            .not(".ui-sortable-placeholder"),
                      n,
                    ]);
            function c() {
              s.push(this);
            }
            for (
              r.push([
                e.isFunction(this.options.items)
                  ? this.options.items.call(this.element, null, {
                      options: this.options,
                      item: this.currentItem,
                    })
                  : e(this.options.items, this.element)
                      .not(".ui-sortable-helper")
                      .not(".ui-sortable-placeholder"),
                this,
              ]),
                i = r.length - 1;
              i >= 0;
              i--
            )
              r[i][0].each(c);
            return e(s);
          },
          _removeCurrentsFromItems: function () {
            var t = this.currentItem.find(
              ":data(" + this.widgetName + "-item)"
            );
            this.items = e.grep(this.items, function (e) {
              for (var i = 0; i < t.length; i++)
                if (t[i] === e.item[0]) return !1;
              return !0;
            });
          },
          _refreshItems: function (t) {
            (this.items = []), (this.containers = [this]);
            var i,
              o,
              a,
              n,
              s,
              r,
              l,
              c,
              d = this.items,
              u = [
                [
                  e.isFunction(this.options.items)
                    ? this.options.items.call(this.element[0], t, {
                        item: this.currentItem,
                      })
                    : e(this.options.items, this.element),
                  this,
                ],
              ],
              p = this._connectWith();
            if (p && this.ready)
              for (i = p.length - 1; i >= 0; i--)
                for (o = (a = e(p[i])).length - 1; o >= 0; o--)
                  (n = e.data(a[o], this.widgetFullName)) &&
                    n !== this &&
                    !n.options.disabled &&
                    (u.push([
                      e.isFunction(n.options.items)
                        ? n.options.items.call(n.element[0], t, {
                            item: this.currentItem,
                          })
                        : e(n.options.items, n.element),
                      n,
                    ]),
                    this.containers.push(n));
            for (i = u.length - 1; i >= 0; i--)
              for (s = u[i][1], o = 0, c = (r = u[i][0]).length; o < c; o++)
                (l = e(r[o])).data(this.widgetName + "-item", s),
                  d.push({
                    item: l,
                    instance: s,
                    width: 0,
                    height: 0,
                    left: 0,
                    top: 0,
                  });
          },
          refreshPositions: function (t) {
            var i, o, a, n;
            for (
              this.offsetParent &&
                this.helper &&
                (this.offset.parent = this._getParentOffset()),
                i = this.items.length - 1;
              i >= 0;
              i--
            )
              ((o = this.items[i]).instance !== this.currentContainer &&
                this.currentContainer &&
                o.item[0] !== this.currentItem[0]) ||
                ((a = this.options.toleranceElement
                  ? e(this.options.toleranceElement, o.item)
                  : o.item),
                t || ((o.width = a.outerWidth()), (o.height = a.outerHeight())),
                (n = a.offset()),
                (o.left = n.left),
                (o.top = n.top));
            if (this.options.custom && this.options.custom.refreshContainers)
              this.options.custom.refreshContainers.call(this);
            else
              for (i = this.containers.length - 1; i >= 0; i--)
                (n = this.containers[i].element.offset()),
                  (this.containers[i].containerCache.left = n.left),
                  (this.containers[i].containerCache.top = n.top),
                  (this.containers[i].containerCache.width =
                    this.containers[i].element.outerWidth()),
                  (this.containers[i].containerCache.height =
                    this.containers[i].element.outerHeight());
            return this;
          },
          _createPlaceholder: function (t) {
            var i,
              o = (t = t || this).options;
            (o.placeholder && o.placeholder.constructor !== String) ||
              ((i = o.placeholder),
              (o.placeholder = {
                element: function () {
                  var o = t.currentItem[0].nodeName.toLowerCase(),
                    a = e("<" + o + ">", t.document[0])
                      .addClass(
                        i ||
                          t.currentItem[0].className +
                            " ui-sortable-placeholder"
                      )
                      .removeClass("ui-sortable-helper");
                  return (
                    "tr" === o
                      ? t.currentItem.children().each(function () {
                          e("<td>&#160;</td>", t.document[0])
                            .attr("colspan", e(this).attr("colspan") || 1)
                            .appendTo(a);
                        })
                      : "img" === o && a.attr("src", t.currentItem.attr("src")),
                    i || a.css("visibility", "hidden"),
                    a
                  );
                },
                update: function (e, a) {
                  (i && !o.forcePlaceholderSize) ||
                    (a.height() ||
                      a.height(
                        t.currentItem.innerHeight() -
                          parseInt(t.currentItem.css("paddingTop") || 0, 10) -
                          parseInt(t.currentItem.css("paddingBottom") || 0, 10)
                      ),
                    a.width() ||
                      a.width(
                        t.currentItem.innerWidth() -
                          parseInt(t.currentItem.css("paddingLeft") || 0, 10) -
                          parseInt(t.currentItem.css("paddingRight") || 0, 10)
                      ));
                },
              })),
              (t.placeholder = e(
                o.placeholder.element.call(t.element, t.currentItem)
              )),
              t.currentItem.after(t.placeholder),
              o.placeholder.update(t, t.placeholder);
          },
          _contactContainers: function (t) {
            var a,
              n,
              s,
              r,
              l,
              c,
              d,
              u,
              p,
              h,
              m = null,
              f = null;
            for (a = this.containers.length - 1; a >= 0; a--)
              if (
                !e.contains(this.currentItem[0], this.containers[a].element[0])
              )
                if (this._intersectsWith(this.containers[a].containerCache)) {
                  if (
                    m &&
                    e.contains(this.containers[a].element[0], m.element[0])
                  )
                    continue;
                  (m = this.containers[a]), (f = a);
                } else
                  this.containers[a].containerCache.over &&
                    (this.containers[a]._trigger("out", t, this._uiHash(this)),
                    (this.containers[a].containerCache.over = 0));
            if (m)
              if (1 === this.containers.length)
                this.containers[f].containerCache.over ||
                  (this.containers[f]._trigger("over", t, this._uiHash(this)),
                  (this.containers[f].containerCache.over = 1));
              else {
                for (
                  s = 1e4,
                    r = null,
                    l = (h = m.floating || o(this.currentItem))
                      ? "left"
                      : "top",
                    c = h ? "width" : "height",
                    d = this.positionAbs[l] + this.offset.click[l],
                    n = this.items.length - 1;
                  n >= 0;
                  n--
                )
                  e.contains(
                    this.containers[f].element[0],
                    this.items[n].item[0]
                  ) &&
                    this.items[n].item[0] !== this.currentItem[0] &&
                    ((h &&
                      !i(
                        this.positionAbs.top + this.offset.click.top,
                        this.items[n].top,
                        this.items[n].height
                      )) ||
                      ((u = this.items[n].item.offset()[l]),
                      (p = !1),
                      Math.abs(u - d) > Math.abs(u + this.items[n][c] - d) &&
                        ((p = !0), (u += this.items[n][c])),
                      Math.abs(u - d) < s &&
                        ((s = Math.abs(u - d)),
                        (r = this.items[n]),
                        (this.direction = p ? "up" : "down"))));
                if (!r && !this.options.dropOnEmpty) return;
                if (this.currentContainer === this.containers[f]) return;
                r
                  ? this._rearrange(t, r, null, !0)
                  : this._rearrange(t, null, this.containers[f].element, !0),
                  this._trigger("change", t, this._uiHash()),
                  this.containers[f]._trigger("change", t, this._uiHash(this)),
                  (this.currentContainer = this.containers[f]),
                  this.options.placeholder.update(
                    this.currentContainer,
                    this.placeholder
                  ),
                  this.containers[f]._trigger("over", t, this._uiHash(this)),
                  (this.containers[f].containerCache.over = 1);
              }
          },
          _createHelper: function (t) {
            var i = this.options,
              o = e.isFunction(i.helper)
                ? e(i.helper.apply(this.element[0], [t, this.currentItem]))
                : "clone" === i.helper
                ? this.currentItem.clone()
                : this.currentItem;
            return (
              o.parents("body").length ||
                e(
                  "parent" !== i.appendTo
                    ? i.appendTo
                    : this.currentItem[0].parentNode
                )[0].appendChild(o[0]),
              o[0] === this.currentItem[0] &&
                (this._storedCSS = {
                  width: this.currentItem[0].style.width,
                  height: this.currentItem[0].style.height,
                  position: this.currentItem.css("position"),
                  top: this.currentItem.css("top"),
                  left: this.currentItem.css("left"),
                }),
              (o[0].style.width && !i.forceHelperSize) ||
                o.width(this.currentItem.width()),
              (o[0].style.height && !i.forceHelperSize) ||
                o.height(this.currentItem.height()),
              o
            );
          },
          _adjustOffsetFromHelper: function (t) {
            "string" == typeof t && (t = t.split(" ")),
              e.isArray(t) && (t = { left: +t[0], top: +t[1] || 0 }),
              "left" in t &&
                (this.offset.click.left = t.left + this.margins.left),
              "right" in t &&
                (this.offset.click.left =
                  this.helperProportions.width - t.right + this.margins.left),
              "top" in t && (this.offset.click.top = t.top + this.margins.top),
              "bottom" in t &&
                (this.offset.click.top =
                  this.helperProportions.height - t.bottom + this.margins.top);
          },
          _getParentOffset: function () {
            this.offsetParent = this.helper.offsetParent();
            var t = this.offsetParent.offset();
            return (
              "absolute" === this.cssPosition &&
                this.scrollParent[0] !== document &&
                e.contains(this.scrollParent[0], this.offsetParent[0]) &&
                ((t.left += this.scrollParent.scrollLeft()),
                (t.top += this.scrollParent.scrollTop())),
              (this.offsetParent[0] === document.body ||
                (this.offsetParent[0].tagName &&
                  "html" === this.offsetParent[0].tagName.toLowerCase() &&
                  e.ui.ie)) &&
                (t = { top: 0, left: 0 }),
              {
                top:
                  t.top +
                  (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left:
                  t.left +
                  (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0),
              }
            );
          },
          _getRelativeOffset: function () {
            if ("relative" === this.cssPosition) {
              var e = this.currentItem.position();
              return {
                top:
                  e.top -
                  (parseInt(this.helper.css("top"), 10) || 0) +
                  this.scrollParent.scrollTop(),
                left:
                  e.left -
                  (parseInt(this.helper.css("left"), 10) || 0) +
                  this.scrollParent.scrollLeft(),
              };
            }
            return { top: 0, left: 0 };
          },
          _cacheMargins: function () {
            this.margins = {
              left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
              top: parseInt(this.currentItem.css("marginTop"), 10) || 0,
            };
          },
          _cacheHelperProportions: function () {
            this.helperProportions = {
              width: this.helper.outerWidth(),
              height: this.helper.outerHeight(),
            };
          },
          _setContainment: function () {
            var t,
              i,
              o,
              a = this.options;
            "parent" === a.containment &&
              (a.containment = this.helper[0].parentNode),
              ("document" !== a.containment && "window" !== a.containment) ||
                (this.containment = [
                  0 - this.offset.relative.left - this.offset.parent.left,
                  0 - this.offset.relative.top - this.offset.parent.top,
                  e("document" === a.containment ? document : window).width() -
                    this.helperProportions.width -
                    this.margins.left,
                  (e(
                    "document" === a.containment ? document : window
                  ).height() || document.body.parentNode.scrollHeight) -
                    this.helperProportions.height -
                    this.margins.top,
                ]),
              /^(document|window|parent)$/.test(a.containment) ||
                ((t = e(a.containment)[0]),
                (i = e(a.containment).offset()),
                (o = "hidden" !== e(t).css("overflow")),
                (this.containment = [
                  i.left +
                    (parseInt(e(t).css("borderLeftWidth"), 10) || 0) +
                    (parseInt(e(t).css("paddingLeft"), 10) || 0) -
                    this.margins.left,
                  i.top +
                    (parseInt(e(t).css("borderTopWidth"), 10) || 0) +
                    (parseInt(e(t).css("paddingTop"), 10) || 0) -
                    this.margins.top,
                  i.left +
                    (o
                      ? Math.max(t.scrollWidth, t.offsetWidth)
                      : t.offsetWidth) -
                    (parseInt(e(t).css("borderLeftWidth"), 10) || 0) -
                    (parseInt(e(t).css("paddingRight"), 10) || 0) -
                    this.helperProportions.width -
                    this.margins.left,
                  i.top +
                    (o
                      ? Math.max(t.scrollHeight, t.offsetHeight)
                      : t.offsetHeight) -
                    (parseInt(e(t).css("borderTopWidth"), 10) || 0) -
                    (parseInt(e(t).css("paddingBottom"), 10) || 0) -
                    this.helperProportions.height -
                    this.margins.top,
                ]));
          },
          _convertPositionTo: function (t, i) {
            i || (i = this.position);
            var o = "absolute" === t ? 1 : -1,
              a =
                "absolute" !== this.cssPosition ||
                (this.scrollParent[0] !== document &&
                  e.contains(this.scrollParent[0], this.offsetParent[0]))
                  ? this.scrollParent
                  : this.offsetParent,
              n = /(html|body)/i.test(a[0].tagName);
            return {
              top:
                i.top +
                this.offset.relative.top * o +
                this.offset.parent.top * o -
                ("fixed" === this.cssPosition
                  ? -this.scrollParent.scrollTop()
                  : n
                  ? 0
                  : a.scrollTop()) *
                  o,
              left:
                i.left +
                this.offset.relative.left * o +
                this.offset.parent.left * o -
                ("fixed" === this.cssPosition
                  ? -this.scrollParent.scrollLeft()
                  : n
                  ? 0
                  : a.scrollLeft()) *
                  o,
            };
          },
          _generatePosition: function (t) {
            var i,
              o,
              a = this.options,
              n = t.pageX,
              s = t.pageY,
              r =
                "absolute" !== this.cssPosition ||
                (this.scrollParent[0] !== document &&
                  e.contains(this.scrollParent[0], this.offsetParent[0]))
                  ? this.scrollParent
                  : this.offsetParent,
              l = /(html|body)/i.test(r[0].tagName);
            return (
              "relative" !== this.cssPosition ||
                (this.scrollParent[0] !== document &&
                  this.scrollParent[0] !== this.offsetParent[0]) ||
                (this.offset.relative = this._getRelativeOffset()),
              this.originalPosition &&
                (this.containment &&
                  (t.pageX - this.offset.click.left < this.containment[0] &&
                    (n = this.containment[0] + this.offset.click.left),
                  t.pageY - this.offset.click.top < this.containment[1] &&
                    (s = this.containment[1] + this.offset.click.top),
                  t.pageX - this.offset.click.left > this.containment[2] &&
                    (n = this.containment[2] + this.offset.click.left),
                  t.pageY - this.offset.click.top > this.containment[3] &&
                    (s = this.containment[3] + this.offset.click.top)),
                a.grid &&
                  ((i =
                    this.originalPageY +
                    Math.round((s - this.originalPageY) / a.grid[1]) *
                      a.grid[1]),
                  (s = this.containment
                    ? i - this.offset.click.top >= this.containment[1] &&
                      i - this.offset.click.top <= this.containment[3]
                      ? i
                      : i - this.offset.click.top >= this.containment[1]
                      ? i - a.grid[1]
                      : i + a.grid[1]
                    : i),
                  (o =
                    this.originalPageX +
                    Math.round((n - this.originalPageX) / a.grid[0]) *
                      a.grid[0]),
                  (n = this.containment
                    ? o - this.offset.click.left >= this.containment[0] &&
                      o - this.offset.click.left <= this.containment[2]
                      ? o
                      : o - this.offset.click.left >= this.containment[0]
                      ? o - a.grid[0]
                      : o + a.grid[0]
                    : o))),
              {
                top:
                  s -
                  this.offset.click.top -
                  this.offset.relative.top -
                  this.offset.parent.top +
                  ("fixed" === this.cssPosition
                    ? -this.scrollParent.scrollTop()
                    : l
                    ? 0
                    : r.scrollTop()),
                left:
                  n -
                  this.offset.click.left -
                  this.offset.relative.left -
                  this.offset.parent.left +
                  ("fixed" === this.cssPosition
                    ? -this.scrollParent.scrollLeft()
                    : l
                    ? 0
                    : r.scrollLeft()),
              }
            );
          },
          _rearrange: function (e, t, i, o) {
            i
              ? i[0].appendChild(this.placeholder[0])
              : t.item[0].parentNode.insertBefore(
                  this.placeholder[0],
                  "down" === this.direction ? t.item[0] : t.item[0].nextSibling
                ),
              (this.counter = this.counter ? ++this.counter : 1);
            var a = this.counter;
            this._delay(function () {
              a === this.counter && this.refreshPositions(!o);
            });
          },
          _clear: function (e, t) {
            this.reverting = !1;
            var i,
              o = [];
            if (
              (!this._noFinalSort &&
                this.currentItem.parent().length &&
                this.placeholder.before(this.currentItem),
              (this._noFinalSort = null),
              this.helper[0] === this.currentItem[0])
            ) {
              for (i in this._storedCSS)
                ("auto" !== this._storedCSS[i] &&
                  "static" !== this._storedCSS[i]) ||
                  (this._storedCSS[i] = "");
              this.currentItem
                .css(this._storedCSS)
                .removeClass("ui-sortable-helper");
            } else this.currentItem.show();
            function a(e, t, i) {
              return function (o) {
                i._trigger(e, o, t._uiHash(t));
              };
            }
            for (
              this.fromOutside &&
                !t &&
                o.push(function (e) {
                  this._trigger("receive", e, this._uiHash(this.fromOutside));
                }),
                (!this.fromOutside &&
                  this.domPosition.prev ===
                    this.currentItem.prev().not(".ui-sortable-helper")[0] &&
                  this.domPosition.parent === this.currentItem.parent()[0]) ||
                  t ||
                  o.push(function (e) {
                    this._trigger("update", e, this._uiHash());
                  }),
                this !== this.currentContainer &&
                  (t ||
                    (o.push(function (e) {
                      this._trigger("remove", e, this._uiHash());
                    }),
                    o.push(
                      function (e) {
                        return function (t) {
                          e._trigger("receive", t, this._uiHash(this));
                        };
                      }.call(this, this.currentContainer)
                    ),
                    o.push(
                      function (e) {
                        return function (t) {
                          e._trigger("update", t, this._uiHash(this));
                        };
                      }.call(this, this.currentContainer)
                    ))),
                i = this.containers.length - 1;
              i >= 0;
              i--
            )
              t || o.push(a("deactivate", this, this.containers[i])),
                this.containers[i].containerCache.over &&
                  (o.push(a("out", this, this.containers[i])),
                  (this.containers[i].containerCache.over = 0));
            if (
              (this.storedCursor &&
                (this.document.find("body").css("cursor", this.storedCursor),
                this.storedStylesheet.remove()),
              this._storedOpacity &&
                this.helper.css("opacity", this._storedOpacity),
              this._storedZIndex &&
                this.helper.css(
                  "zIndex",
                  "auto" === this._storedZIndex ? "" : this._storedZIndex
                ),
              (this.dragging = !1),
              this.cancelHelperRemoval)
            ) {
              if (!t) {
                for (
                  this._trigger("beforeStop", e, this._uiHash()), i = 0;
                  i < o.length;
                  i++
                )
                  o[i].call(this, e);
                this._trigger("stop", e, this._uiHash());
              }
              return (this.fromOutside = !1), !1;
            }
            if (
              (t || this._trigger("beforeStop", e, this._uiHash()),
              this.placeholder[0].parentNode.removeChild(this.placeholder[0]),
              this.helper[0] !== this.currentItem[0] && this.helper.remove(),
              (this.helper = null),
              !t)
            ) {
              for (i = 0; i < o.length; i++) o[i].call(this, e);
              this._trigger("stop", e, this._uiHash());
            }
            return (this.fromOutside = !1), !0;
          },
          _trigger: function () {
            !1 === e.Widget.prototype._trigger.apply(this, arguments) &&
              this.cancel();
          },
          _uiHash: function (t) {
            var i = t || this;
            return {
              helper: i.helper,
              placeholder: i.placeholder || e([]),
              position: i.position,
              originalPosition: i.originalPosition,
              offset: i.positionAbs,
              item: i.currentItem,
              sender: t ? t.element : null,
            };
          },
        });
      })(jQuery),
      (function (e, t) {
        var i = 0,
          o = {},
          a = {};
        (o.height =
          o.paddingTop =
          o.paddingBottom =
          o.borderTopWidth =
          o.borderBottomWidth =
            "hide"),
          (a.height =
            a.paddingTop =
            a.paddingBottom =
            a.borderTopWidth =
            a.borderBottomWidth =
              "show"),
          e.widget("ui.accordion", {
            version: "1.10.4",
            options: {
              active: 0,
              animate: {},
              collapsible: !1,
              event: "click",
              header: "> li > :first-child,> :not(li):even",
              heightStyle: "auto",
              icons: {
                activeHeader: "ui-icon-triangle-1-s",
                header: "ui-icon-triangle-1-e",
              },
              activate: null,
              beforeActivate: null,
            },
            _create: function () {
              var t = this.options;
              (this.prevShow = this.prevHide = e()),
                this.element
                  .addClass("ui-accordion ui-widget ui-helper-reset")
                  .attr("role", "tablist"),
                t.collapsible ||
                  (!1 !== t.active && null != t.active) ||
                  (t.active = 0),
                this._processPanels(),
                t.active < 0 && (t.active += this.headers.length),
                this._refresh();
            },
            _getCreateEventData: function () {
              return {
                header: this.active,
                panel: this.active.length ? this.active.next() : e(),
                content: this.active.length ? this.active.next() : e(),
              };
            },
            _createIcons: function () {
              var t = this.options.icons;
              t &&
                (e("<span>")
                  .addClass("ui-accordion-header-icon ui-icon " + t.header)
                  .prependTo(this.headers),
                this.active
                  .children(".ui-accordion-header-icon")
                  .removeClass(t.header)
                  .addClass(t.activeHeader),
                this.headers.addClass("ui-accordion-icons"));
            },
            _destroyIcons: function () {
              this.headers
                .removeClass("ui-accordion-icons")
                .children(".ui-accordion-header-icon")
                .remove();
            },
            _destroy: function () {
              var e;
              this.element
                .removeClass("ui-accordion ui-widget ui-helper-reset")
                .removeAttr("role"),
                this.headers
                  .removeClass(
                    "ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top"
                  )
                  .removeAttr("role")
                  .removeAttr("aria-expanded")
                  .removeAttr("aria-selected")
                  .removeAttr("aria-controls")
                  .removeAttr("tabIndex")
                  .each(function () {
                    /^ui-accordion/.test(this.id) && this.removeAttribute("id");
                  }),
                this._destroyIcons(),
                (e = this.headers
                  .next()
                  .css("display", "")
                  .removeAttr("role")
                  .removeAttr("aria-hidden")
                  .removeAttr("aria-labelledby")
                  .removeClass(
                    "ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled"
                  )
                  .each(function () {
                    /^ui-accordion/.test(this.id) && this.removeAttribute("id");
                  })),
                "content" !== this.options.heightStyle && e.css("height", "");
            },
            _setOption: function (e, t) {
              "active" !== e
                ? ("event" === e &&
                    (this.options.event &&
                      this._off(this.headers, this.options.event),
                    this._setupEvents(t)),
                  this._super(e, t),
                  "collapsible" !== e ||
                    t ||
                    !1 !== this.options.active ||
                    this._activate(0),
                  "icons" === e &&
                    (this._destroyIcons(), t && this._createIcons()),
                  "disabled" === e &&
                    this.headers
                      .add(this.headers.next())
                      .toggleClass("ui-state-disabled", !!t))
                : this._activate(t);
            },
            _keydown: function (t) {
              if (!t.altKey && !t.ctrlKey) {
                var i = e.ui.keyCode,
                  o = this.headers.length,
                  a = this.headers.index(t.target),
                  n = !1;
                switch (t.keyCode) {
                  case i.RIGHT:
                  case i.DOWN:
                    n = this.headers[(a + 1) % o];
                    break;
                  case i.LEFT:
                  case i.UP:
                    n = this.headers[(a - 1 + o) % o];
                    break;
                  case i.SPACE:
                  case i.ENTER:
                    this._eventHandler(t);
                    break;
                  case i.HOME:
                    n = this.headers[0];
                    break;
                  case i.END:
                    n = this.headers[o - 1];
                }
                n &&
                  (e(t.target).attr("tabIndex", -1),
                  e(n).attr("tabIndex", 0),
                  n.focus(),
                  t.preventDefault());
              }
            },
            _panelKeyDown: function (t) {
              t.keyCode === e.ui.keyCode.UP &&
                t.ctrlKey &&
                e(t.currentTarget).prev().focus();
            },
            refresh: function () {
              var t = this.options;
              this._processPanels(),
                (!1 === t.active && !0 === t.collapsible) ||
                !this.headers.length
                  ? ((t.active = !1), (this.active = e()))
                  : !1 === t.active
                  ? this._activate(0)
                  : this.active.length &&
                    !e.contains(this.element[0], this.active[0])
                  ? this.headers.length ===
                    this.headers.find(".ui-state-disabled").length
                    ? ((t.active = !1), (this.active = e()))
                    : this._activate(Math.max(0, t.active - 1))
                  : (t.active = this.headers.index(this.active)),
                this._destroyIcons(),
                this._refresh();
            },
            _processPanels: function () {
              (this.headers = this.element
                .find(this.options.header)
                .addClass(
                  "ui-accordion-header ui-helper-reset ui-state-default ui-corner-all"
                )),
                this.headers
                  .next()
                  .addClass(
                    "ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"
                  )
                  .filter(":not(.ui-accordion-content-active)")
                  .hide();
            },
            _refresh: function () {
              var t,
                o = this.options,
                a = o.heightStyle,
                n = this.element.parent(),
                s = (this.accordionId =
                  "ui-accordion-" + (this.element.attr("id") || ++i));
              (this.active = this._findActive(o.active)
                .addClass(
                  "ui-accordion-header-active ui-state-active ui-corner-top"
                )
                .removeClass("ui-corner-all")),
                this.active
                  .next()
                  .addClass("ui-accordion-content-active")
                  .show(),
                this.headers
                  .attr("role", "tab")
                  .each(function (t) {
                    var i = e(this),
                      o = i.attr("id"),
                      a = i.next(),
                      n = a.attr("id");
                    o || ((o = s + "-header-" + t), i.attr("id", o)),
                      n || ((n = s + "-panel-" + t), a.attr("id", n)),
                      i.attr("aria-controls", n),
                      a.attr("aria-labelledby", o);
                  })
                  .next()
                  .attr("role", "tabpanel"),
                this.headers
                  .not(this.active)
                  .attr({
                    "aria-selected": "false",
                    "aria-expanded": "false",
                    tabIndex: -1,
                  })
                  .next()
                  .attr({ "aria-hidden": "true" })
                  .hide(),
                this.active.length
                  ? this.active
                      .attr({
                        "aria-selected": "true",
                        "aria-expanded": "true",
                        tabIndex: 0,
                      })
                      .next()
                      .attr({ "aria-hidden": "false" })
                  : this.headers.eq(0).attr("tabIndex", 0),
                this._createIcons(),
                this._setupEvents(o.event),
                "fill" === a
                  ? ((t = n.height()),
                    this.element.siblings(":visible").each(function () {
                      var i = e(this),
                        o = i.css("position");
                      "absolute" !== o &&
                        "fixed" !== o &&
                        (t -= i.outerHeight(!0));
                    }),
                    this.headers.each(function () {
                      t -= e(this).outerHeight(!0);
                    }),
                    this.headers
                      .next()
                      .each(function () {
                        e(this).height(
                          Math.max(
                            0,
                            t - e(this).innerHeight() + e(this).height()
                          )
                        );
                      })
                      .css("overflow", "auto"))
                  : "auto" === a &&
                    ((t = 0),
                    this.headers
                      .next()
                      .each(function () {
                        t = Math.max(t, e(this).css("height", "").height());
                      })
                      .height(t));
            },
            _activate: function (t) {
              var i = this._findActive(t)[0];
              i !== this.active[0] &&
                ((i = i || this.active[0]),
                this._eventHandler({
                  target: i,
                  currentTarget: i,
                  preventDefault: e.noop,
                }));
            },
            _findActive: function (t) {
              return "number" == typeof t ? this.headers.eq(t) : e();
            },
            _setupEvents: function (t) {
              var i = { keydown: "_keydown" };
              t &&
                e.each(t.split(" "), function (e, t) {
                  i[t] = "_eventHandler";
                }),
                this._off(this.headers.add(this.headers.next())),
                this._on(this.headers, i),
                this._on(this.headers.next(), { keydown: "_panelKeyDown" }),
                this._hoverable(this.headers),
                this._focusable(this.headers);
            },
            _eventHandler: function (t) {
              var i = this.options,
                o = this.active,
                a = e(t.currentTarget),
                n = a[0] === o[0],
                s = n && i.collapsible,
                r = s ? e() : a.next(),
                l = o.next(),
                c = {
                  oldHeader: o,
                  oldPanel: l,
                  newHeader: s ? e() : a,
                  newPanel: r,
                };
              t.preventDefault(),
                (n && !i.collapsible) ||
                  !1 === this._trigger("beforeActivate", t, c) ||
                  ((i.active = !s && this.headers.index(a)),
                  (this.active = n ? e() : a),
                  this._toggle(c),
                  o.removeClass("ui-accordion-header-active ui-state-active"),
                  i.icons &&
                    o
                      .children(".ui-accordion-header-icon")
                      .removeClass(i.icons.activeHeader)
                      .addClass(i.icons.header),
                  n ||
                    (a
                      .removeClass("ui-corner-all")
                      .addClass(
                        "ui-accordion-header-active ui-state-active ui-corner-top"
                      ),
                    i.icons &&
                      a
                        .children(".ui-accordion-header-icon")
                        .removeClass(i.icons.header)
                        .addClass(i.icons.activeHeader),
                    a.next().addClass("ui-accordion-content-active")));
            },
            _toggle: function (t) {
              var i = t.newPanel,
                o = this.prevShow.length ? this.prevShow : t.oldPanel;
              this.prevShow.add(this.prevHide).stop(!0, !0),
                (this.prevShow = i),
                (this.prevHide = o),
                this.options.animate
                  ? this._animate(i, o, t)
                  : (o.hide(), i.show(), this._toggleComplete(t)),
                o.attr({ "aria-hidden": "true" }),
                o.prev().attr("aria-selected", "false"),
                i.length && o.length
                  ? o.prev().attr({ tabIndex: -1, "aria-expanded": "false" })
                  : i.length &&
                    this.headers
                      .filter(function () {
                        return 0 === e(this).attr("tabIndex");
                      })
                      .attr("tabIndex", -1),
                i
                  .attr("aria-hidden", "false")
                  .prev()
                  .attr({
                    "aria-selected": "true",
                    tabIndex: 0,
                    "aria-expanded": "true",
                  });
            },
            _animate: function (e, t, i) {
              var n,
                s,
                r,
                l = this,
                c = 0,
                d = e.length && (!t.length || e.index() < t.index()),
                u = this.options.animate || {},
                p = (d && u.down) || u,
                h = function () {
                  l._toggleComplete(i);
                };
              return (
                "number" == typeof p && (r = p),
                "string" == typeof p && (s = p),
                (s = s || p.easing || u.easing),
                (r = r || p.duration || u.duration),
                t.length
                  ? e.length
                    ? ((n = e.show().outerHeight()),
                      t.animate(o, {
                        duration: r,
                        easing: s,
                        step: function (e, t) {
                          t.now = Math.round(e);
                        },
                      }),
                      void e.hide().animate(a, {
                        duration: r,
                        easing: s,
                        complete: h,
                        step: function (e, i) {
                          (i.now = Math.round(e)),
                            "height" !== i.prop
                              ? (c += i.now)
                              : "content" !== l.options.heightStyle &&
                                ((i.now = Math.round(n - t.outerHeight() - c)),
                                (c = 0));
                        },
                      }))
                    : t.animate(o, r, s, h)
                  : e.animate(a, r, s, h)
              );
            },
            _toggleComplete: function (e) {
              var t = e.oldPanel;
              t
                .removeClass("ui-accordion-content-active")
                .prev()
                .removeClass("ui-corner-top")
                .addClass("ui-corner-all"),
                t.length && (t.parent()[0].className = t.parent()[0].className),
                this._trigger("activate", null, e);
            },
          });
      })(jQuery),
      (function (e, t) {
        e.widget("ui.autocomplete", {
          version: "1.10.4",
          defaultElement: "<input>",
          options: {
            appendTo: null,
            autoFocus: !1,
            delay: 300,
            minLength: 1,
            position: { my: "left top", at: "left bottom", collision: "none" },
            source: null,
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null,
          },
          requestIndex: 0,
          pending: 0,
          _create: function () {
            var t,
              i,
              o,
              a = this.element[0].nodeName.toLowerCase(),
              n = "textarea" === a,
              s = "input" === a;
            (this.isMultiLine =
              !!n || (!s && this.element.prop("isContentEditable"))),
              (this.valueMethod = this.element[n || s ? "val" : "text"]),
              (this.isNewMenu = !0),
              this.element
                .addClass("ui-autocomplete-input")
                .attr("autocomplete", "off"),
              this._on(this.element, {
                keydown: function (a) {
                  if (this.element.prop("readOnly"))
                    return (t = !0), (o = !0), void (i = !0);
                  (t = !1), (o = !1), (i = !1);
                  var n = e.ui.keyCode;
                  switch (a.keyCode) {
                    case n.PAGE_UP:
                      (t = !0), this._move("previousPage", a);
                      break;
                    case n.PAGE_DOWN:
                      (t = !0), this._move("nextPage", a);
                      break;
                    case n.UP:
                      (t = !0), this._keyEvent("previous", a);
                      break;
                    case n.DOWN:
                      (t = !0), this._keyEvent("next", a);
                      break;
                    case n.ENTER:
                    case n.NUMPAD_ENTER:
                      this.menu.active &&
                        ((t = !0), a.preventDefault(), this.menu.select(a));
                      break;
                    case n.TAB:
                      this.menu.active && this.menu.select(a);
                      break;
                    case n.ESCAPE:
                      this.menu.element.is(":visible") &&
                        (this._value(this.term),
                        this.close(a),
                        a.preventDefault());
                      break;
                    default:
                      (i = !0), this._searchTimeout(a);
                  }
                },
                keypress: function (o) {
                  if (t)
                    return (
                      (t = !1),
                      void (
                        (this.isMultiLine &&
                          !this.menu.element.is(":visible")) ||
                        o.preventDefault()
                      )
                    );
                  if (!i) {
                    var a = e.ui.keyCode;
                    switch (o.keyCode) {
                      case a.PAGE_UP:
                        this._move("previousPage", o);
                        break;
                      case a.PAGE_DOWN:
                        this._move("nextPage", o);
                        break;
                      case a.UP:
                        this._keyEvent("previous", o);
                        break;
                      case a.DOWN:
                        this._keyEvent("next", o);
                    }
                  }
                },
                input: function (e) {
                  if (o) return (o = !1), void e.preventDefault();
                  this._searchTimeout(e);
                },
                focus: function () {
                  (this.selectedItem = null), (this.previous = this._value());
                },
                blur: function (e) {
                  this.cancelBlur
                    ? delete this.cancelBlur
                    : (clearTimeout(this.searching),
                      this.close(e),
                      this._change(e));
                },
              }),
              this._initSource(),
              (this.menu = e("<ul>")
                .addClass("ui-autocomplete ui-front")
                .appendTo(this._appendTo())
                .menu({ role: null })
                .hide()
                .data("ui-menu")),
              this._on(this.menu.element, {
                mousedown: function (t) {
                  t.preventDefault(),
                    (this.cancelBlur = !0),
                    this._delay(function () {
                      delete this.cancelBlur;
                    });
                  var i = this.menu.element[0];
                  e(t.target).closest(".ui-menu-item").length ||
                    this._delay(function () {
                      var t = this;
                      this.document.one("mousedown", function (o) {
                        o.target === t.element[0] ||
                          o.target === i ||
                          e.contains(i, o.target) ||
                          t.close();
                      });
                    });
                },
                menufocus: function (t, i) {
                  if (
                    this.isNewMenu &&
                    ((this.isNewMenu = !1),
                    t.originalEvent && /^mouse/.test(t.originalEvent.type))
                  )
                    return (
                      this.menu.blur(),
                      void this.document.one("mousemove", function () {
                        e(t.target).trigger(t.originalEvent);
                      })
                    );
                  var o = i.item.data("ui-autocomplete-item");
                  !1 !== this._trigger("focus", t, { item: o })
                    ? t.originalEvent &&
                      /^key/.test(t.originalEvent.type) &&
                      this._value(o.value)
                    : this.liveRegion.text(o.value);
                },
                menuselect: function (e, t) {
                  var i = t.item.data("ui-autocomplete-item"),
                    o = this.previous;
                  this.element[0] !== this.document[0].activeElement &&
                    (this.element.focus(),
                    (this.previous = o),
                    this._delay(function () {
                      (this.previous = o), (this.selectedItem = i);
                    })),
                    !1 !== this._trigger("select", e, { item: i }) &&
                      this._value(i.value),
                    (this.term = this._value()),
                    this.close(e),
                    (this.selectedItem = i);
                },
              }),
              (this.liveRegion = e("<span>", {
                role: "status",
                "aria-live": "polite",
              })
                .addClass("ui-helper-hidden-accessible")
                .insertBefore(this.element)),
              this._on(this.window, {
                beforeunload: function () {
                  this.element.removeAttr("autocomplete");
                },
              });
          },
          _destroy: function () {
            clearTimeout(this.searching),
              this.element
                .removeClass("ui-autocomplete-input")
                .removeAttr("autocomplete"),
              this.menu.element.remove(),
              this.liveRegion.remove();
          },
          _setOption: function (e, t) {
            this._super(e, t),
              "source" === e && this._initSource(),
              "appendTo" === e && this.menu.element.appendTo(this._appendTo()),
              "disabled" === e && t && this.xhr && this.xhr.abort();
          },
          _appendTo: function () {
            var t = this.options.appendTo;
            return (
              t &&
                (t =
                  t.jquery || t.nodeType ? e(t) : this.document.find(t).eq(0)),
              t || (t = this.element.closest(".ui-front")),
              t.length || (t = this.document[0].body),
              t
            );
          },
          _initSource: function () {
            var t,
              i,
              o = this;
            e.isArray(this.options.source)
              ? ((t = this.options.source),
                (this.source = function (i, o) {
                  o(e.ui.autocomplete.filter(t, i.term));
                }))
              : "string" == typeof this.options.source
              ? ((i = this.options.source),
                (this.source = function (t, a) {
                  o.xhr && o.xhr.abort(),
                    (o.xhr = e.ajax({
                      url: i,
                      data: t,
                      dataType: "json",
                      success: function (e) {
                        a(e);
                      },
                      error: function () {
                        a([]);
                      },
                    }));
                }))
              : (this.source = this.options.source);
          },
          _searchTimeout: function (e) {
            clearTimeout(this.searching),
              (this.searching = this._delay(function () {
                this.term !== this._value() &&
                  ((this.selectedItem = null), this.search(null, e));
              }, this.options.delay));
          },
          search: function (e, t) {
            return (
              (e = null != e ? e : this._value()),
              (this.term = this._value()),
              e.length < this.options.minLength
                ? this.close(t)
                : !1 !== this._trigger("search", t)
                ? this._search(e)
                : void 0
            );
          },
          _search: function (e) {
            this.pending++,
              this.element.addClass("ui-autocomplete-loading"),
              (this.cancelSearch = !1),
              this.source({ term: e }, this._response());
          },
          _response: function () {
            var t = ++this.requestIndex;
            return e.proxy(function (e) {
              t === this.requestIndex && this.__response(e),
                this.pending--,
                this.pending ||
                  this.element.removeClass("ui-autocomplete-loading");
            }, this);
          },
          __response: function (e) {
            e && (e = this._normalize(e)),
              this._trigger("response", null, { content: e }),
              !this.options.disabled && e && e.length && !this.cancelSearch
                ? (this._suggest(e), this._trigger("open"))
                : this._close();
          },
          close: function (e) {
            (this.cancelSearch = !0), this._close(e);
          },
          _close: function (e) {
            this.menu.element.is(":visible") &&
              (this.menu.element.hide(),
              this.menu.blur(),
              (this.isNewMenu = !0),
              this._trigger("close", e));
          },
          _change: function (e) {
            this.previous !== this._value() &&
              this._trigger("change", e, { item: this.selectedItem });
          },
          _normalize: function (t) {
            return t.length && t[0].label && t[0].value
              ? t
              : e.map(t, function (t) {
                  return "string" == typeof t
                    ? { label: t, value: t }
                    : e.extend(
                        {
                          label: t.label || t.value,
                          value: t.value || t.label,
                        },
                        t
                      );
                });
          },
          _suggest: function (t) {
            var i = this.menu.element.empty();
            this._renderMenu(i, t),
              (this.isNewMenu = !0),
              this.menu.refresh(),
              i.show(),
              this._resizeMenu(),
              i.position(e.extend({ of: this.element }, this.options.position)),
              this.options.autoFocus && this.menu.next();
          },
          _resizeMenu: function () {
            var e = this.menu.element;
            e.outerWidth(
              Math.max(e.width("").outerWidth() + 1, this.element.outerWidth())
            );
          },
          _renderMenu: function (t, i) {
            var o = this;
            e.each(i, function (e, i) {
              o._renderItemData(t, i);
            });
          },
          _renderItemData: function (e, t) {
            return this._renderItem(e, t).data("ui-autocomplete-item", t);
          },
          _renderItem: function (t, i) {
            return e("<li>").append(e("<a>").text(i.label)).appendTo(t);
          },
          _move: function (e, t) {
            if (this.menu.element.is(":visible"))
              return (this.menu.isFirstItem() && /^previous/.test(e)) ||
                (this.menu.isLastItem() && /^next/.test(e))
                ? (this._value(this.term), void this.menu.blur())
                : void this.menu[e](t);
            this.search(null, t);
          },
          widget: function () {
            return this.menu.element;
          },
          _value: function () {
            return this.valueMethod.apply(this.element, arguments);
          },
          _keyEvent: function (e, t) {
            (this.isMultiLine && !this.menu.element.is(":visible")) ||
              (this._move(e, t), t.preventDefault());
          },
        }),
          e.extend(e.ui.autocomplete, {
            escapeRegex: function (e) {
              return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
            },
            filter: function (t, i) {
              var o = new RegExp(e.ui.autocomplete.escapeRegex(i), "i");
              return e.grep(t, function (e) {
                return o.test(e.label || e.value || e);
              });
            },
          }),
          e.widget("ui.autocomplete", e.ui.autocomplete, {
            options: {
              messages: {
                noResults: "No search results.",
                results: function (e) {
                  return (
                    e +
                    (e > 1 ? " results are" : " result is") +
                    " available, use up and down arrow keys to navigate."
                  );
                },
              },
            },
            __response: function (e) {
              var t;
              this._superApply(arguments),
                this.options.disabled ||
                  this.cancelSearch ||
                  ((t =
                    e && e.length
                      ? this.options.messages.results(e.length)
                      : this.options.messages.noResults),
                  this.liveRegion.text(t));
            },
          });
      })(jQuery),
      (function (e, t) {
        var i,
          o = "ui-button ui-widget ui-state-default ui-corner-all",
          a =
            "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",
          n = function () {
            var t = e(this);
            setTimeout(function () {
              t.find(":ui-button").button("refresh");
            }, 1);
          },
          s = function (t) {
            var i = t.name,
              o = t.form,
              a = e([]);
            return (
              i &&
                ((i = i.replace(/'/g, "\\'")),
                (a = o
                  ? e(o).find("[name='" + i + "']")
                  : e("[name='" + i + "']", t.ownerDocument).filter(
                      function () {
                        return !this.form;
                      }
                    ))),
              a
            );
          };
        e.widget("ui.button", {
          version: "1.10.4",
          defaultElement: "<button>",
          options: {
            disabled: null,
            text: !0,
            label: null,
            icons: { primary: null, secondary: null },
          },
          _create: function () {
            this.element
              .closest("form")
              .unbind("reset" + this.eventNamespace)
              .bind("reset" + this.eventNamespace, n),
              "boolean" != typeof this.options.disabled
                ? (this.options.disabled = !!this.element.prop("disabled"))
                : this.element.prop("disabled", this.options.disabled),
              this._determineButtonType(),
              (this.hasTitle = !!this.buttonElement.attr("title"));
            var t = this,
              a = this.options,
              r = "checkbox" === this.type || "radio" === this.type,
              l = r ? "" : "ui-state-active";
            null === a.label &&
              (a.label =
                "input" === this.type
                  ? this.buttonElement.val()
                  : this.buttonElement.html()),
              this._hoverable(this.buttonElement),
              this.buttonElement
                .addClass(o)
                .attr("role", "button")
                .bind("mouseenter" + this.eventNamespace, function () {
                  a.disabled ||
                    (this === i && e(this).addClass("ui-state-active"));
                })
                .bind("mouseleave" + this.eventNamespace, function () {
                  a.disabled || e(this).removeClass(l);
                })
                .bind("click" + this.eventNamespace, function (e) {
                  a.disabled &&
                    (e.preventDefault(), e.stopImmediatePropagation());
                }),
              this._on({
                focus: function () {
                  this.buttonElement.addClass("ui-state-focus");
                },
                blur: function () {
                  this.buttonElement.removeClass("ui-state-focus");
                },
              }),
              r &&
                this.element.bind("change" + this.eventNamespace, function () {
                  t.refresh();
                }),
              "checkbox" === this.type
                ? this.buttonElement.bind(
                    "click" + this.eventNamespace,
                    function () {
                      if (a.disabled) return !1;
                    }
                  )
                : "radio" === this.type
                ? this.buttonElement.bind(
                    "click" + this.eventNamespace,
                    function () {
                      if (a.disabled) return !1;
                      e(this).addClass("ui-state-active"),
                        t.buttonElement.attr("aria-pressed", "true");
                      var i = t.element[0];
                      s(i)
                        .not(i)
                        .map(function () {
                          return e(this).button("widget")[0];
                        })
                        .removeClass("ui-state-active")
                        .attr("aria-pressed", "false");
                    }
                  )
                : (this.buttonElement
                    .bind("mousedown" + this.eventNamespace, function () {
                      if (a.disabled) return !1;
                      e(this).addClass("ui-state-active"),
                        (i = this),
                        t.document.one("mouseup", function () {
                          i = null;
                        });
                    })
                    .bind("mouseup" + this.eventNamespace, function () {
                      if (a.disabled) return !1;
                      e(this).removeClass("ui-state-active");
                    })
                    .bind("keydown" + this.eventNamespace, function (t) {
                      if (a.disabled) return !1;
                      (t.keyCode !== e.ui.keyCode.SPACE &&
                        t.keyCode !== e.ui.keyCode.ENTER) ||
                        e(this).addClass("ui-state-active");
                    })
                    .bind(
                      "keyup" +
                        this.eventNamespace +
                        " blur" +
                        this.eventNamespace,
                      function () {
                        e(this).removeClass("ui-state-active");
                      }
                    ),
                  this.buttonElement.is("a") &&
                    this.buttonElement.keyup(function (t) {
                      t.keyCode === e.ui.keyCode.SPACE && e(this).click();
                    })),
              this._setOption("disabled", a.disabled),
              this._resetButton();
          },
          _determineButtonType: function () {
            var e, t, i;
            this.element.is("[type=checkbox]")
              ? (this.type = "checkbox")
              : this.element.is("[type=radio]")
              ? (this.type = "radio")
              : this.element.is("input")
              ? (this.type = "input")
              : (this.type = "button"),
              "checkbox" === this.type || "radio" === this.type
                ? ((e = this.element.parents().last()),
                  (t = "label[for='" + this.element.attr("id") + "']"),
                  (this.buttonElement = e.find(t)),
                  this.buttonElement.length ||
                    ((e = e.length ? e.siblings() : this.element.siblings()),
                    (this.buttonElement = e.filter(t)),
                    this.buttonElement.length ||
                      (this.buttonElement = e.find(t))),
                  this.element.addClass("ui-helper-hidden-accessible"),
                  (i = this.element.is(":checked")) &&
                    this.buttonElement.addClass("ui-state-active"),
                  this.buttonElement.prop("aria-pressed", i))
                : (this.buttonElement = this.element);
          },
          widget: function () {
            return this.buttonElement;
          },
          _destroy: function () {
            this.element.removeClass("ui-helper-hidden-accessible"),
              this.buttonElement
                .removeClass(o + " ui-state-active " + a)
                .removeAttr("role")
                .removeAttr("aria-pressed")
                .html(this.buttonElement.find(".ui-button-text").html()),
              this.hasTitle || this.buttonElement.removeAttr("title");
          },
          _setOption: function (e, t) {
            if ((this._super(e, t), "disabled" === e))
              return (
                this.element.prop("disabled", !!t),
                void (t && this.buttonElement.removeClass("ui-state-focus"))
              );
            this._resetButton();
          },
          refresh: function () {
            var t = this.element.is("input, button")
              ? this.element.is(":disabled")
              : this.element.hasClass("ui-button-disabled");
            t !== this.options.disabled && this._setOption("disabled", t),
              "radio" === this.type
                ? s(this.element[0]).each(function () {
                    e(this).is(":checked")
                      ? e(this)
                          .button("widget")
                          .addClass("ui-state-active")
                          .attr("aria-pressed", "true")
                      : e(this)
                          .button("widget")
                          .removeClass("ui-state-active")
                          .attr("aria-pressed", "false");
                  })
                : "checkbox" === this.type &&
                  (this.element.is(":checked")
                    ? this.buttonElement
                        .addClass("ui-state-active")
                        .attr("aria-pressed", "true")
                    : this.buttonElement
                        .removeClass("ui-state-active")
                        .attr("aria-pressed", "false"));
          },
          _resetButton: function () {
            if ("input" !== this.type) {
              var t = this.buttonElement.removeClass(a),
                i = e("<span></span>", this.document[0])
                  .addClass("ui-button-text")
                  .html(this.options.label)
                  .appendTo(t.empty())
                  .text(),
                o = this.options.icons,
                n = o.primary && o.secondary,
                s = [];
              o.primary || o.secondary
                ? (this.options.text &&
                    s.push(
                      "ui-button-text-icon" +
                        (n ? "s" : o.primary ? "-primary" : "-secondary")
                    ),
                  o.primary &&
                    t.prepend(
                      "<span class='ui-button-icon-primary ui-icon " +
                        o.primary +
                        "'></span>"
                    ),
                  o.secondary &&
                    t.append(
                      "<span class='ui-button-icon-secondary ui-icon " +
                        o.secondary +
                        "'></span>"
                    ),
                  this.options.text ||
                    (s.push(n ? "ui-button-icons-only" : "ui-button-icon-only"),
                    this.hasTitle || t.attr("title", e.trim(i))))
                : s.push("ui-button-text-only"),
                t.addClass(s.join(" "));
            } else this.options.label && this.element.val(this.options.label);
          },
        }),
          e.widget("ui.buttonset", {
            version: "1.10.4",
            options: {
              items:
                "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)",
            },
            _create: function () {
              this.element.addClass("ui-buttonset");
            },
            _init: function () {
              this.refresh();
            },
            _setOption: function (e, t) {
              "disabled" === e && this.buttons.button("option", e, t),
                this._super(e, t);
            },
            refresh: function () {
              var t = "rtl" === this.element.css("direction");
              this.buttons = this.element
                .find(this.options.items)
                .filter(":ui-button")
                .button("refresh")
                .end()
                .not(":ui-button")
                .button()
                .end()
                .map(function () {
                  return e(this).button("widget")[0];
                })
                .removeClass("ui-corner-all ui-corner-left ui-corner-right")
                .filter(":first")
                .addClass(t ? "ui-corner-right" : "ui-corner-left")
                .end()
                .filter(":last")
                .addClass(t ? "ui-corner-left" : "ui-corner-right")
                .end()
                .end();
            },
            _destroy: function () {
              this.element.removeClass("ui-buttonset"),
                this.buttons
                  .map(function () {
                    return e(this).button("widget")[0];
                  })
                  .removeClass("ui-corner-left ui-corner-right")
                  .end()
                  .button("destroy");
            },
          });
      })(jQuery),
      (function (e, t) {
        e.extend(e.ui, { datepicker: { version: "1.10.4" } });
        var i,
          o = "datepicker";
        function a() {
          (this._curInst = null),
            (this._keyEvent = !1),
            (this._disabledInputs = []),
            (this._datepickerShowing = !1),
            (this._inDialog = !1),
            (this._mainDivId = "ui-datepicker-div"),
            (this._inlineClass = "ui-datepicker-inline"),
            (this._appendClass = "ui-datepicker-append"),
            (this._triggerClass = "ui-datepicker-trigger"),
            (this._dialogClass = "ui-datepicker-dialog"),
            (this._disableClass = "ui-datepicker-disabled"),
            (this._unselectableClass = "ui-datepicker-unselectable"),
            (this._currentClass = "ui-datepicker-current-day"),
            (this._dayOverClass = "ui-datepicker-days-cell-over"),
            (this.regional = []),
            (this.regional[""] = {
              closeText: "Done",
              prevText: "Prev",
              nextText: "Next",
              currentText: "Today",
              monthNames: [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December",
              ],
              monthNamesShort: [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
              ],
              dayNames: [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
              ],
              dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
              dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
              weekHeader: "Wk",
              dateFormat: "mm/dd/yy",
              firstDay: 0,
              isRTL: !1,
              showMonthAfterYear: !1,
              yearSuffix: "",
            }),
            (this._defaults = {
              showOn: "focus",
              showAnim: "fadeIn",
              showOptions: {},
              defaultDate: null,
              appendText: "",
              buttonText: "...",
              buttonImage: "",
              buttonImageOnly: !1,
              hideIfNoPrevNext: !1,
              navigationAsDateFormat: !1,
              gotoCurrent: !1,
              changeMonth: !1,
              changeYear: !1,
              yearRange: "c-10:c+10",
              showOtherMonths: !1,
              selectOtherMonths: !1,
              showWeek: !1,
              calculateWeek: this.iso8601Week,
              shortYearCutoff: "+10",
              minDate: null,
              maxDate: null,
              duration: "fast",
              beforeShowDay: null,
              beforeShow: null,
              onSelect: null,
              onChangeMonthYear: null,
              onClose: null,
              numberOfMonths: 1,
              showCurrentAtPos: 0,
              stepMonths: 1,
              stepBigMonths: 12,
              altField: "",
              altFormat: "",
              constrainInput: !0,
              showButtonPanel: !1,
              autoSize: !1,
              disabled: !1,
            }),
            e.extend(this._defaults, this.regional[""]),
            (this.dpDiv = n(
              e(
                "<div id='" +
                  this._mainDivId +
                  "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"
              )
            ));
        }
        function n(t) {
          var o =
            "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
          return t
            .delegate(o, "mouseout", function () {
              e(this).removeClass("ui-state-hover"),
                -1 !== this.className.indexOf("ui-datepicker-prev") &&
                  e(this).removeClass("ui-datepicker-prev-hover"),
                -1 !== this.className.indexOf("ui-datepicker-next") &&
                  e(this).removeClass("ui-datepicker-next-hover");
            })
            .delegate(o, "mouseover", function () {
              e.datepicker._isDisabledDatepicker(
                i.inline ? t.parent()[0] : i.input[0]
              ) ||
                (e(this)
                  .parents(".ui-datepicker-calendar")
                  .find("a")
                  .removeClass("ui-state-hover"),
                e(this).addClass("ui-state-hover"),
                -1 !== this.className.indexOf("ui-datepicker-prev") &&
                  e(this).addClass("ui-datepicker-prev-hover"),
                -1 !== this.className.indexOf("ui-datepicker-next") &&
                  e(this).addClass("ui-datepicker-next-hover"));
            });
        }
        function s(t, i) {
          for (var o in (e.extend(t, i), i)) null == i[o] && (t[o] = i[o]);
          return t;
        }
        e.extend(a.prototype, {
          markerClassName: "hasDatepicker",
          maxRows: 4,
          _widgetDatepicker: function () {
            return this.dpDiv;
          },
          setDefaults: function (e) {
            return s(this._defaults, e || {}), this;
          },
          _attachDatepicker: function (t, i) {
            var o, a, n;
            (a = "div" === (o = t.nodeName.toLowerCase()) || "span" === o),
              t.id || ((this.uuid += 1), (t.id = "dp" + this.uuid)),
              ((n = this._newInst(e(t), a)).settings = e.extend({}, i || {})),
              "input" === o
                ? this._connectDatepicker(t, n)
                : a && this._inlineDatepicker(t, n);
          },
          _newInst: function (t, i) {
            return {
              id: t[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"),
              input: t,
              selectedDay: 0,
              selectedMonth: 0,
              selectedYear: 0,
              drawMonth: 0,
              drawYear: 0,
              inline: i,
              dpDiv: i
                ? n(
                    e(
                      "<div class='" +
                        this._inlineClass +
                        " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"
                    )
                  )
                : this.dpDiv,
            };
          },
          _connectDatepicker: function (t, i) {
            var a = e(t);
            (i.append = e([])),
              (i.trigger = e([])),
              a.hasClass(this.markerClassName) ||
                (this._attachments(a, i),
                a
                  .addClass(this.markerClassName)
                  .keydown(this._doKeyDown)
                  .keypress(this._doKeyPress)
                  .keyup(this._doKeyUp),
                this._autoSize(i),
                e.data(t, o, i),
                i.settings.disabled && this._disableDatepicker(t));
          },
          _attachments: function (t, i) {
            var o,
              a,
              n,
              s = this._get(i, "appendText"),
              r = this._get(i, "isRTL");
            i.append && i.append.remove(),
              s &&
                ((i.append = e(
                  "<span class='" + this._appendClass + "'>" + s + "</span>"
                )),
                t[r ? "before" : "after"](i.append)),
              t.unbind("focus", this._showDatepicker),
              i.trigger && i.trigger.remove(),
              ("focus" !== (o = this._get(i, "showOn")) && "both" !== o) ||
                t.focus(this._showDatepicker),
              ("button" !== o && "both" !== o) ||
                ((a = this._get(i, "buttonText")),
                (n = this._get(i, "buttonImage")),
                (i.trigger = e(
                  this._get(i, "buttonImageOnly")
                    ? e("<img/>")
                        .addClass(this._triggerClass)
                        .attr({ src: n, alt: a, title: a })
                    : e("<button type='button'></button>")
                        .addClass(this._triggerClass)
                        .html(
                          n ? e("<img/>").attr({ src: n, alt: a, title: a }) : a
                        )
                )),
                t[r ? "before" : "after"](i.trigger),
                i.trigger.click(function () {
                  return (
                    e.datepicker._datepickerShowing &&
                    e.datepicker._lastInput === t[0]
                      ? e.datepicker._hideDatepicker()
                      : e.datepicker._datepickerShowing &&
                        e.datepicker._lastInput !== t[0]
                      ? (e.datepicker._hideDatepicker(),
                        e.datepicker._showDatepicker(t[0]))
                      : e.datepicker._showDatepicker(t[0]),
                    !1
                  );
                }));
          },
          _autoSize: function (e) {
            if (this._get(e, "autoSize") && !e.inline) {
              var t,
                i,
                o,
                a,
                n = new Date(2009, 11, 20),
                s = this._get(e, "dateFormat");
              s.match(/[DM]/) &&
                ((t = function (e) {
                  for (i = 0, o = 0, a = 0; a < e.length; a++)
                    e[a].length > i && ((i = e[a].length), (o = a));
                  return o;
                }),
                n.setMonth(
                  t(
                    this._get(
                      e,
                      s.match(/MM/) ? "monthNames" : "monthNamesShort"
                    )
                  )
                ),
                n.setDate(
                  t(
                    this._get(e, s.match(/DD/) ? "dayNames" : "dayNamesShort")
                  ) +
                    20 -
                    n.getDay()
                )),
                e.input.attr("size", this._formatDate(e, n).length);
            }
          },
          _inlineDatepicker: function (t, i) {
            var a = e(t);
            a.hasClass(this.markerClassName) ||
              (a.addClass(this.markerClassName).append(i.dpDiv),
              e.data(t, o, i),
              this._setDate(i, this._getDefaultDate(i), !0),
              this._updateDatepicker(i),
              this._updateAlternate(i),
              i.settings.disabled && this._disableDatepicker(t),
              i.dpDiv.css("display", "block"));
          },
          _dialogDatepicker: function (t, i, a, n, r) {
            var l,
              c,
              d,
              u,
              p,
              h = this._dialogInst;
            return (
              h ||
                ((this.uuid += 1),
                (l = "dp" + this.uuid),
                (this._dialogInput = e(
                  "<input type='text' id='" +
                    l +
                    "' style='position: absolute; top: -100px; width: 0px;'/>"
                )),
                this._dialogInput.keydown(this._doKeyDown),
                e("body").append(this._dialogInput),
                ((h = this._dialogInst =
                  this._newInst(this._dialogInput, !1)).settings = {}),
                e.data(this._dialogInput[0], o, h)),
              s(h.settings, n || {}),
              (i = i && i.constructor === Date ? this._formatDate(h, i) : i),
              this._dialogInput.val(i),
              (this._pos = r ? (r.length ? r : [r.pageX, r.pageY]) : null),
              this._pos ||
                ((c = document.documentElement.clientWidth),
                (d = document.documentElement.clientHeight),
                (u =
                  document.documentElement.scrollLeft ||
                  document.body.scrollLeft),
                (p =
                  document.documentElement.scrollTop ||
                  document.body.scrollTop),
                (this._pos = [c / 2 - 100 + u, d / 2 - 150 + p])),
              this._dialogInput
                .css("left", this._pos[0] + 20 + "px")
                .css("top", this._pos[1] + "px"),
              (h.settings.onSelect = a),
              (this._inDialog = !0),
              this.dpDiv.addClass(this._dialogClass),
              this._showDatepicker(this._dialogInput[0]),
              e.blockUI && e.blockUI(this.dpDiv),
              e.data(this._dialogInput[0], o, h),
              this
            );
          },
          _destroyDatepicker: function (t) {
            var i,
              a = e(t),
              n = e.data(t, o);
            a.hasClass(this.markerClassName) &&
              ((i = t.nodeName.toLowerCase()),
              e.removeData(t, o),
              "input" === i
                ? (n.append.remove(),
                  n.trigger.remove(),
                  a
                    .removeClass(this.markerClassName)
                    .unbind("focus", this._showDatepicker)
                    .unbind("keydown", this._doKeyDown)
                    .unbind("keypress", this._doKeyPress)
                    .unbind("keyup", this._doKeyUp))
                : ("div" !== i && "span" !== i) ||
                  a.removeClass(this.markerClassName).empty());
          },
          _enableDatepicker: function (t) {
            var i,
              a,
              n = e(t),
              s = e.data(t, o);
            n.hasClass(this.markerClassName) &&
              ("input" === (i = t.nodeName.toLowerCase())
                ? ((t.disabled = !1),
                  s.trigger
                    .filter("button")
                    .each(function () {
                      this.disabled = !1;
                    })
                    .end()
                    .filter("img")
                    .css({ opacity: "1.0", cursor: "" }))
                : ("div" !== i && "span" !== i) ||
                  ((a = n.children("." + this._inlineClass))
                    .children()
                    .removeClass("ui-state-disabled"),
                  a
                    .find(
                      "select.ui-datepicker-month, select.ui-datepicker-year"
                    )
                    .prop("disabled", !1)),
              (this._disabledInputs = e.map(this._disabledInputs, function (e) {
                return e === t ? null : e;
              })));
          },
          _disableDatepicker: function (t) {
            var i,
              a,
              n = e(t),
              s = e.data(t, o);
            n.hasClass(this.markerClassName) &&
              ("input" === (i = t.nodeName.toLowerCase())
                ? ((t.disabled = !0),
                  s.trigger
                    .filter("button")
                    .each(function () {
                      this.disabled = !0;
                    })
                    .end()
                    .filter("img")
                    .css({ opacity: "0.5", cursor: "default" }))
                : ("div" !== i && "span" !== i) ||
                  ((a = n.children("." + this._inlineClass))
                    .children()
                    .addClass("ui-state-disabled"),
                  a
                    .find(
                      "select.ui-datepicker-month, select.ui-datepicker-year"
                    )
                    .prop("disabled", !0)),
              (this._disabledInputs = e.map(this._disabledInputs, function (e) {
                return e === t ? null : e;
              })),
              (this._disabledInputs[this._disabledInputs.length] = t));
          },
          _isDisabledDatepicker: function (e) {
            if (!e) return !1;
            for (var t = 0; t < this._disabledInputs.length; t++)
              if (this._disabledInputs[t] === e) return !0;
            return !1;
          },
          _getInst: function (t) {
            try {
              return e.data(t, o);
            } catch (e) {
              throw "Missing instance data for this datepicker";
            }
          },
          _optionDatepicker: function (i, o, a) {
            var n,
              r,
              l,
              c,
              d = this._getInst(i);
            if (2 === arguments.length && "string" == typeof o)
              return "defaults" === o
                ? e.extend({}, e.datepicker._defaults)
                : d
                ? "all" === o
                  ? e.extend({}, d.settings)
                  : this._get(d, o)
                : null;
            (n = o || {}),
              "string" == typeof o && ((n = {})[o] = a),
              d &&
                (this._curInst === d && this._hideDatepicker(),
                (r = this._getDateDatepicker(i, !0)),
                (l = this._getMinMaxDate(d, "min")),
                (c = this._getMinMaxDate(d, "max")),
                s(d.settings, n),
                null !== l &&
                  n.dateFormat !== t &&
                  n.minDate === t &&
                  (d.settings.minDate = this._formatDate(d, l)),
                null !== c &&
                  n.dateFormat !== t &&
                  n.maxDate === t &&
                  (d.settings.maxDate = this._formatDate(d, c)),
                "disabled" in n &&
                  (n.disabled
                    ? this._disableDatepicker(i)
                    : this._enableDatepicker(i)),
                this._attachments(e(i), d),
                this._autoSize(d),
                this._setDate(d, r),
                this._updateAlternate(d),
                this._updateDatepicker(d));
          },
          _changeDatepicker: function (e, t, i) {
            this._optionDatepicker(e, t, i);
          },
          _refreshDatepicker: function (e) {
            var t = this._getInst(e);
            t && this._updateDatepicker(t);
          },
          _setDateDatepicker: function (e, t) {
            var i = this._getInst(e);
            i &&
              (this._setDate(i, t),
              this._updateDatepicker(i),
              this._updateAlternate(i));
          },
          _getDateDatepicker: function (e, t) {
            var i = this._getInst(e);
            return (
              i && !i.inline && this._setDateFromField(i, t),
              i ? this._getDate(i) : null
            );
          },
          _doKeyDown: function (t) {
            var i,
              o,
              a,
              n = e.datepicker._getInst(t.target),
              s = !0,
              r = n.dpDiv.is(".ui-datepicker-rtl");
            if (((n._keyEvent = !0), e.datepicker._datepickerShowing))
              switch (t.keyCode) {
                case 9:
                  e.datepicker._hideDatepicker(), (s = !1);
                  break;
                case 13:
                  return (
                    (a = e(
                      "td." +
                        e.datepicker._dayOverClass +
                        ":not(." +
                        e.datepicker._currentClass +
                        ")",
                      n.dpDiv
                    ))[0] &&
                      e.datepicker._selectDay(
                        t.target,
                        n.selectedMonth,
                        n.selectedYear,
                        a[0]
                      ),
                    (i = e.datepicker._get(n, "onSelect"))
                      ? ((o = e.datepicker._formatDate(n)),
                        i.apply(n.input ? n.input[0] : null, [o, n]))
                      : e.datepicker._hideDatepicker(),
                    !1
                  );
                case 27:
                  e.datepicker._hideDatepicker();
                  break;
                case 33:
                  e.datepicker._adjustDate(
                    t.target,
                    t.ctrlKey
                      ? -e.datepicker._get(n, "stepBigMonths")
                      : -e.datepicker._get(n, "stepMonths"),
                    "M"
                  );
                  break;
                case 34:
                  e.datepicker._adjustDate(
                    t.target,
                    t.ctrlKey
                      ? +e.datepicker._get(n, "stepBigMonths")
                      : +e.datepicker._get(n, "stepMonths"),
                    "M"
                  );
                  break;
                case 35:
                  (t.ctrlKey || t.metaKey) && e.datepicker._clearDate(t.target),
                    (s = t.ctrlKey || t.metaKey);
                  break;
                case 36:
                  (t.ctrlKey || t.metaKey) && e.datepicker._gotoToday(t.target),
                    (s = t.ctrlKey || t.metaKey);
                  break;
                case 37:
                  (t.ctrlKey || t.metaKey) &&
                    e.datepicker._adjustDate(t.target, r ? 1 : -1, "D"),
                    (s = t.ctrlKey || t.metaKey),
                    t.originalEvent.altKey &&
                      e.datepicker._adjustDate(
                        t.target,
                        t.ctrlKey
                          ? -e.datepicker._get(n, "stepBigMonths")
                          : -e.datepicker._get(n, "stepMonths"),
                        "M"
                      );
                  break;
                case 38:
                  (t.ctrlKey || t.metaKey) &&
                    e.datepicker._adjustDate(t.target, -7, "D"),
                    (s = t.ctrlKey || t.metaKey);
                  break;
                case 39:
                  (t.ctrlKey || t.metaKey) &&
                    e.datepicker._adjustDate(t.target, r ? -1 : 1, "D"),
                    (s = t.ctrlKey || t.metaKey),
                    t.originalEvent.altKey &&
                      e.datepicker._adjustDate(
                        t.target,
                        t.ctrlKey
                          ? +e.datepicker._get(n, "stepBigMonths")
                          : +e.datepicker._get(n, "stepMonths"),
                        "M"
                      );
                  break;
                case 40:
                  (t.ctrlKey || t.metaKey) &&
                    e.datepicker._adjustDate(t.target, 7, "D"),
                    (s = t.ctrlKey || t.metaKey);
                  break;
                default:
                  s = !1;
              }
            else
              36 === t.keyCode && t.ctrlKey
                ? e.datepicker._showDatepicker(this)
                : (s = !1);
            s && (t.preventDefault(), t.stopPropagation());
          },
          _doKeyPress: function (t) {
            var i,
              o,
              a = e.datepicker._getInst(t.target);
            if (e.datepicker._get(a, "constrainInput"))
              return (
                (i = e.datepicker._possibleChars(
                  e.datepicker._get(a, "dateFormat")
                )),
                (o = String.fromCharCode(
                  null == t.charCode ? t.keyCode : t.charCode
                )),
                t.ctrlKey || t.metaKey || o < " " || !i || i.indexOf(o) > -1
              );
          },
          _doKeyUp: function (t) {
            var i = e.datepicker._getInst(t.target);
            if (i.input.val() !== i.lastVal)
              try {
                e.datepicker.parseDate(
                  e.datepicker._get(i, "dateFormat"),
                  i.input ? i.input.val() : null,
                  e.datepicker._getFormatConfig(i)
                ) &&
                  (e.datepicker._setDateFromField(i),
                  e.datepicker._updateAlternate(i),
                  e.datepicker._updateDatepicker(i));
              } catch (e) {}
            return !0;
          },
          _showDatepicker: function (t) {
            var i, o, a, n, r, l, c;
            ("input" !== (t = t.target || t).nodeName.toLowerCase() &&
              (t = e("input", t.parentNode)[0]),
            e.datepicker._isDisabledDatepicker(t) ||
              e.datepicker._lastInput === t) ||
              ((i = e.datepicker._getInst(t)),
              e.datepicker._curInst &&
                e.datepicker._curInst !== i &&
                (e.datepicker._curInst.dpDiv.stop(!0, !0),
                i &&
                  e.datepicker._datepickerShowing &&
                  e.datepicker._hideDatepicker(e.datepicker._curInst.input[0])),
              !1 !==
                (a = (o = e.datepicker._get(i, "beforeShow"))
                  ? o.apply(t, [t, i])
                  : {}) &&
                (s(i.settings, a),
                (i.lastVal = null),
                (e.datepicker._lastInput = t),
                e.datepicker._setDateFromField(i),
                e.datepicker._inDialog && (t.value = ""),
                e.datepicker._pos ||
                  ((e.datepicker._pos = e.datepicker._findPos(t)),
                  (e.datepicker._pos[1] += t.offsetHeight)),
                (n = !1),
                e(t)
                  .parents()
                  .each(function () {
                    return !(n |= "fixed" === e(this).css("position"));
                  }),
                (r = { left: e.datepicker._pos[0], top: e.datepicker._pos[1] }),
                (e.datepicker._pos = null),
                i.dpDiv.empty(),
                i.dpDiv.css({
                  position: "absolute",
                  display: "block",
                  top: "-1000px",
                }),
                e.datepicker._updateDatepicker(i),
                (r = e.datepicker._checkOffset(i, r, n)),
                i.dpDiv.css({
                  position:
                    e.datepicker._inDialog && e.blockUI
                      ? "static"
                      : n
                      ? "fixed"
                      : "absolute",
                  display: "none",
                  left: r.left + "px",
                  top: r.top + "px",
                }),
                i.inline ||
                  ((l = e.datepicker._get(i, "showAnim")),
                  (c = e.datepicker._get(i, "duration")),
                  i.dpDiv.zIndex(e(t).zIndex() + 1),
                  (e.datepicker._datepickerShowing = !0),
                  e.effects && e.effects.effect[l]
                    ? i.dpDiv.show(l, e.datepicker._get(i, "showOptions"), c)
                    : i.dpDiv[l || "show"](l ? c : null),
                  e.datepicker._shouldFocusInput(i) && i.input.focus(),
                  (e.datepicker._curInst = i))));
          },
          _updateDatepicker: function (t) {
            (this.maxRows = 4),
              (i = t),
              t.dpDiv.empty().append(this._generateHTML(t)),
              this._attachHandlers(t),
              t.dpDiv.find("." + this._dayOverClass + " a").mouseover();
            var o,
              a = this._getNumberOfMonths(t),
              n = a[1],
              s = 17;
            t.dpDiv
              .removeClass(
                "ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4"
              )
              .width(""),
              n > 1 &&
                t.dpDiv
                  .addClass("ui-datepicker-multi-" + n)
                  .css("width", s * n + "em"),
              t.dpDiv[(1 !== a[0] || 1 !== a[1] ? "add" : "remove") + "Class"](
                "ui-datepicker-multi"
              ),
              t.dpDiv[(this._get(t, "isRTL") ? "add" : "remove") + "Class"](
                "ui-datepicker-rtl"
              ),
              t === e.datepicker._curInst &&
                e.datepicker._datepickerShowing &&
                e.datepicker._shouldFocusInput(t) &&
                t.input.focus(),
              t.yearshtml &&
                ((o = t.yearshtml),
                setTimeout(function () {
                  o === t.yearshtml &&
                    t.yearshtml &&
                    t.dpDiv
                      .find("select.ui-datepicker-year:first")
                      .replaceWith(t.yearshtml),
                    (o = t.yearshtml = null);
                }, 0));
          },
          _shouldFocusInput: function (e) {
            return (
              e.input &&
              e.input.is(":visible") &&
              !e.input.is(":disabled") &&
              !e.input.is(":focus")
            );
          },
          _checkOffset: function (t, i, o) {
            var a = t.dpDiv.outerWidth(),
              n = t.dpDiv.outerHeight(),
              s = t.input ? t.input.outerWidth() : 0,
              r = t.input ? t.input.outerHeight() : 0,
              l =
                document.documentElement.clientWidth +
                (o ? 0 : e(document).scrollLeft()),
              c =
                document.documentElement.clientHeight +
                (o ? 0 : e(document).scrollTop());
            return (
              (i.left -= this._get(t, "isRTL") ? a - s : 0),
              (i.left -=
                o && i.left === t.input.offset().left
                  ? e(document).scrollLeft()
                  : 0),
              (i.top -=
                o && i.top === t.input.offset().top + r
                  ? e(document).scrollTop()
                  : 0),
              (i.left -= Math.min(
                i.left,
                i.left + a > l && l > a ? Math.abs(i.left + a - l) : 0
              )),
              (i.top -= Math.min(
                i.top,
                i.top + n > c && c > n ? Math.abs(n + r) : 0
              )),
              i
            );
          },
          _findPos: function (t) {
            for (
              var i, o = this._getInst(t), a = this._get(o, "isRTL");
              t &&
              ("hidden" === t.type ||
                1 !== t.nodeType ||
                e.expr.filters.hidden(t));

            )
              t = t[a ? "previousSibling" : "nextSibling"];
            return [(i = e(t).offset()).left, i.top];
          },
          _hideDatepicker: function (t) {
            var i,
              a,
              n,
              s,
              r = this._curInst;
            !r ||
              (t && r !== e.data(t, o)) ||
              (this._datepickerShowing &&
                ((i = this._get(r, "showAnim")),
                (a = this._get(r, "duration")),
                (n = function () {
                  e.datepicker._tidyDialog(r);
                }),
                e.effects && (e.effects.effect[i] || e.effects[i])
                  ? r.dpDiv.hide(i, e.datepicker._get(r, "showOptions"), a, n)
                  : r.dpDiv[
                      "slideDown" === i
                        ? "slideUp"
                        : "fadeIn" === i
                        ? "fadeOut"
                        : "hide"
                    ](i ? a : null, n),
                i || n(),
                (this._datepickerShowing = !1),
                (s = this._get(r, "onClose")) &&
                  s.apply(r.input ? r.input[0] : null, [
                    r.input ? r.input.val() : "",
                    r,
                  ]),
                (this._lastInput = null),
                this._inDialog &&
                  (this._dialogInput.css({
                    position: "absolute",
                    left: "0",
                    top: "-100px",
                  }),
                  e.blockUI && (e.unblockUI(), e("body").append(this.dpDiv))),
                (this._inDialog = !1)));
          },
          _tidyDialog: function (e) {
            e.dpDiv
              .removeClass(this._dialogClass)
              .unbind(".ui-datepicker-calendar");
          },
          _checkExternalClick: function (t) {
            if (e.datepicker._curInst) {
              var i = e(t.target),
                o = e.datepicker._getInst(i[0]);
              ((i[0].id === e.datepicker._mainDivId ||
                0 !== i.parents("#" + e.datepicker._mainDivId).length ||
                i.hasClass(e.datepicker.markerClassName) ||
                i.closest("." + e.datepicker._triggerClass).length ||
                !e.datepicker._datepickerShowing ||
                (e.datepicker._inDialog && e.blockUI)) &&
                (!i.hasClass(e.datepicker.markerClassName) ||
                  e.datepicker._curInst === o)) ||
                e.datepicker._hideDatepicker();
            }
          },
          _adjustDate: function (t, i, o) {
            var a = e(t),
              n = this._getInst(a[0]);
            this._isDisabledDatepicker(a[0]) ||
              (this._adjustInstDate(
                n,
                i + ("M" === o ? this._get(n, "showCurrentAtPos") : 0),
                o
              ),
              this._updateDatepicker(n));
          },
          _gotoToday: function (t) {
            var i,
              o = e(t),
              a = this._getInst(o[0]);
            this._get(a, "gotoCurrent") && a.currentDay
              ? ((a.selectedDay = a.currentDay),
                (a.drawMonth = a.selectedMonth = a.currentMonth),
                (a.drawYear = a.selectedYear = a.currentYear))
              : ((i = new Date()),
                (a.selectedDay = i.getDate()),
                (a.drawMonth = a.selectedMonth = i.getMonth()),
                (a.drawYear = a.selectedYear = i.getFullYear())),
              this._notifyChange(a),
              this._adjustDate(o);
          },
          _selectMonthYear: function (t, i, o) {
            var a = e(t),
              n = this._getInst(a[0]);
            (n["selected" + ("M" === o ? "Month" : "Year")] = n[
              "draw" + ("M" === o ? "Month" : "Year")
            ] =
              parseInt(i.options[i.selectedIndex].value, 10)),
              this._notifyChange(n),
              this._adjustDate(a);
          },
          _selectDay: function (t, i, o, a) {
            var n,
              s = e(t);
            e(a).hasClass(this._unselectableClass) ||
              this._isDisabledDatepicker(s[0]) ||
              (((n = this._getInst(s[0])).selectedDay = n.currentDay =
                e("a", a).html()),
              (n.selectedMonth = n.currentMonth = i),
              (n.selectedYear = n.currentYear = o),
              this._selectDate(
                t,
                this._formatDate(n, n.currentDay, n.currentMonth, n.currentYear)
              ));
          },
          _clearDate: function (t) {
            var i = e(t);
            this._selectDate(i, "");
          },
          _selectDate: function (t, i) {
            var o,
              a = e(t),
              n = this._getInst(a[0]);
            (i = null != i ? i : this._formatDate(n)),
              n.input && n.input.val(i),
              this._updateAlternate(n),
              (o = this._get(n, "onSelect"))
                ? o.apply(n.input ? n.input[0] : null, [i, n])
                : n.input && n.input.trigger("change"),
              n.inline
                ? this._updateDatepicker(n)
                : (this._hideDatepicker(),
                  (this._lastInput = n.input[0]),
                  "object" != typeof n.input[0] && n.input.focus(),
                  (this._lastInput = null));
          },
          _updateAlternate: function (t) {
            var i,
              o,
              a,
              n = this._get(t, "altField");
            n &&
              ((i = this._get(t, "altFormat") || this._get(t, "dateFormat")),
              (o = this._getDate(t)),
              (a = this.formatDate(i, o, this._getFormatConfig(t))),
              e(n).each(function () {
                e(this).val(a);
              }));
          },
          noWeekends: function (e) {
            var t = e.getDay();
            return [t > 0 && t < 6, ""];
          },
          iso8601Week: function (e) {
            var t,
              i = new Date(e.getTime());
            return (
              i.setDate(i.getDate() + 4 - (i.getDay() || 7)),
              (t = i.getTime()),
              i.setMonth(0),
              i.setDate(1),
              Math.floor(Math.round((t - i) / 864e5) / 7) + 1
            );
          },
          parseDate: function (t, i, o) {
            if (null == t || null == i) throw "Invalid arguments";
            if ("" === (i = "object" == typeof i ? i.toString() : i + ""))
              return null;
            var a,
              n,
              s,
              r,
              l = 0,
              c =
                (o ? o.shortYearCutoff : null) ||
                this._defaults.shortYearCutoff,
              d =
                "string" != typeof c
                  ? c
                  : (new Date().getFullYear() % 100) + parseInt(c, 10),
              u = (o ? o.dayNamesShort : null) || this._defaults.dayNamesShort,
              p = (o ? o.dayNames : null) || this._defaults.dayNames,
              h =
                (o ? o.monthNamesShort : null) ||
                this._defaults.monthNamesShort,
              m = (o ? o.monthNames : null) || this._defaults.monthNames,
              f = -1,
              g = -1,
              v = -1,
              b = -1,
              y = !1,
              w = function (e) {
                var i = a + 1 < t.length && t.charAt(a + 1) === e;
                return i && a++, i;
              },
              x = function (e) {
                var t = w(e),
                  o = new RegExp(
                    "^\\d{1," +
                      ("@" === e
                        ? 14
                        : "!" === e
                        ? 20
                        : "y" === e && t
                        ? 4
                        : "o" === e
                        ? 3
                        : 2) +
                      "}"
                  ),
                  a = i.substring(l).match(o);
                if (!a) throw "Missing number at position " + l;
                return (l += a[0].length), parseInt(a[0], 10);
              },
              T = function (t, o, a) {
                var n = -1,
                  s = e
                    .map(w(t) ? a : o, function (e, t) {
                      return [[t, e]];
                    })
                    .sort(function (e, t) {
                      return -(e[1].length - t[1].length);
                    });
                if (
                  (e.each(s, function (e, t) {
                    var o = t[1];
                    if (i.substr(l, o.length).toLowerCase() === o.toLowerCase())
                      return (n = t[0]), (l += o.length), !1;
                  }),
                  -1 !== n)
                )
                  return n + 1;
                throw "Unknown name at position " + l;
              },
              C = function () {
                if (i.charAt(l) !== t.charAt(a))
                  throw "Unexpected literal at position " + l;
                l++;
              };
            for (a = 0; a < t.length; a++)
              if (y) "'" !== t.charAt(a) || w("'") ? C() : (y = !1);
              else
                switch (t.charAt(a)) {
                  case "d":
                    v = x("d");
                    break;
                  case "D":
                    T("D", u, p);
                    break;
                  case "o":
                    b = x("o");
                    break;
                  case "m":
                    g = x("m");
                    break;
                  case "M":
                    g = T("M", h, m);
                    break;
                  case "y":
                    f = x("y");
                    break;
                  case "@":
                    (f = (r = new Date(x("@"))).getFullYear()),
                      (g = r.getMonth() + 1),
                      (v = r.getDate());
                    break;
                  case "!":
                    (f = (r = new Date(
                      (x("!") - this._ticksTo1970) / 1e4
                    )).getFullYear()),
                      (g = r.getMonth() + 1),
                      (v = r.getDate());
                    break;
                  case "'":
                    w("'") ? C() : (y = !0);
                    break;
                  default:
                    C();
                }
            if (l < i.length && ((s = i.substr(l)), !/^\s+/.test(s)))
              throw "Extra/unparsed characters found in date: " + s;
            if (
              (-1 === f
                ? (f = new Date().getFullYear())
                : f < 100 &&
                  (f +=
                    new Date().getFullYear() -
                    (new Date().getFullYear() % 100) +
                    (f <= d ? 0 : -100)),
              b > -1)
            )
              for (g = 1, v = b; ; ) {
                if (v <= (n = this._getDaysInMonth(f, g - 1))) break;
                g++, (v -= n);
              }
            if (
              (r = this._daylightSavingAdjust(
                new Date(f, g - 1, v)
              )).getFullYear() !== f ||
              r.getMonth() + 1 !== g ||
              r.getDate() !== v
            )
              throw "Invalid date";
            return r;
          },
          ATOM: "yy-mm-dd",
          COOKIE: "D, dd M yy",
          ISO_8601: "yy-mm-dd",
          RFC_822: "D, d M y",
          RFC_850: "DD, dd-M-y",
          RFC_1036: "D, d M y",
          RFC_1123: "D, d M yy",
          RFC_2822: "D, d M yy",
          RSS: "D, d M y",
          TICKS: "!",
          TIMESTAMP: "@",
          W3C: "yy-mm-dd",
          _ticksTo1970:
            24 *
            (718685 +
              Math.floor(492.5) -
              Math.floor(19.7) +
              Math.floor(4.925)) *
            60 *
            60 *
            1e7,
          formatDate: function (e, t, i) {
            if (!t) return "";
            var o,
              a = (i ? i.dayNamesShort : null) || this._defaults.dayNamesShort,
              n = (i ? i.dayNames : null) || this._defaults.dayNames,
              s =
                (i ? i.monthNamesShort : null) ||
                this._defaults.monthNamesShort,
              r = (i ? i.monthNames : null) || this._defaults.monthNames,
              l = function (t) {
                var i = o + 1 < e.length && e.charAt(o + 1) === t;
                return i && o++, i;
              },
              c = function (e, t, i) {
                var o = "" + t;
                if (l(e)) for (; o.length < i; ) o = "0" + o;
                return o;
              },
              d = function (e, t, i, o) {
                return l(e) ? o[t] : i[t];
              },
              u = "",
              p = !1;
            if (t)
              for (o = 0; o < e.length; o++)
                if (p)
                  "'" !== e.charAt(o) || l("'") ? (u += e.charAt(o)) : (p = !1);
                else
                  switch (e.charAt(o)) {
                    case "d":
                      u += c("d", t.getDate(), 2);
                      break;
                    case "D":
                      u += d("D", t.getDay(), a, n);
                      break;
                    case "o":
                      u += c(
                        "o",
                        Math.round(
                          (new Date(
                            t.getFullYear(),
                            t.getMonth(),
                            t.getDate()
                          ).getTime() -
                            new Date(t.getFullYear(), 0, 0).getTime()) /
                            864e5
                        ),
                        3
                      );
                      break;
                    case "m":
                      u += c("m", t.getMonth() + 1, 2);
                      break;
                    case "M":
                      u += d("M", t.getMonth(), s, r);
                      break;
                    case "y":
                      u += l("y")
                        ? t.getFullYear()
                        : (t.getYear() % 100 < 10 ? "0" : "") +
                          (t.getYear() % 100);
                      break;
                    case "@":
                      u += t.getTime();
                      break;
                    case "!":
                      u += 1e4 * t.getTime() + this._ticksTo1970;
                      break;
                    case "'":
                      l("'") ? (u += "'") : (p = !0);
                      break;
                    default:
                      u += e.charAt(o);
                  }
            return u;
          },
          _possibleChars: function (e) {
            var t,
              i = "",
              o = !1,
              a = function (i) {
                var o = t + 1 < e.length && e.charAt(t + 1) === i;
                return o && t++, o;
              };
            for (t = 0; t < e.length; t++)
              if (o)
                "'" !== e.charAt(t) || a("'") ? (i += e.charAt(t)) : (o = !1);
              else
                switch (e.charAt(t)) {
                  case "d":
                  case "m":
                  case "y":
                  case "@":
                    i += "0123456789";
                    break;
                  case "D":
                  case "M":
                    return null;
                  case "'":
                    a("'") ? (i += "'") : (o = !0);
                    break;
                  default:
                    i += e.charAt(t);
                }
            return i;
          },
          _get: function (e, i) {
            return e.settings[i] !== t ? e.settings[i] : this._defaults[i];
          },
          _setDateFromField: function (e, t) {
            if (e.input.val() !== e.lastVal) {
              var i = this._get(e, "dateFormat"),
                o = (e.lastVal = e.input ? e.input.val() : null),
                a = this._getDefaultDate(e),
                n = a,
                s = this._getFormatConfig(e);
              try {
                n = this.parseDate(i, o, s) || a;
              } catch (e) {
                o = t ? "" : o;
              }
              (e.selectedDay = n.getDate()),
                (e.drawMonth = e.selectedMonth = n.getMonth()),
                (e.drawYear = e.selectedYear = n.getFullYear()),
                (e.currentDay = o ? n.getDate() : 0),
                (e.currentMonth = o ? n.getMonth() : 0),
                (e.currentYear = o ? n.getFullYear() : 0),
                this._adjustInstDate(e);
            }
          },
          _getDefaultDate: function (e) {
            return this._restrictMinMax(
              e,
              this._determineDate(e, this._get(e, "defaultDate"), new Date())
            );
          },
          _determineDate: function (t, i, o) {
            var a = function (e) {
                var t = new Date();
                return t.setDate(t.getDate() + e), t;
              },
              n = function (i) {
                try {
                  return e.datepicker.parseDate(
                    e.datepicker._get(t, "dateFormat"),
                    i,
                    e.datepicker._getFormatConfig(t)
                  );
                } catch (e) {}
                for (
                  var o =
                      (i.toLowerCase().match(/^c/)
                        ? e.datepicker._getDate(t)
                        : null) || new Date(),
                    a = o.getFullYear(),
                    n = o.getMonth(),
                    s = o.getDate(),
                    r = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
                    l = r.exec(i);
                  l;

                ) {
                  switch (l[2] || "d") {
                    case "d":
                    case "D":
                      s += parseInt(l[1], 10);
                      break;
                    case "w":
                    case "W":
                      s += 7 * parseInt(l[1], 10);
                      break;
                    case "m":
                    case "M":
                      (n += parseInt(l[1], 10)),
                        (s = Math.min(s, e.datepicker._getDaysInMonth(a, n)));
                      break;
                    case "y":
                    case "Y":
                      (a += parseInt(l[1], 10)),
                        (s = Math.min(s, e.datepicker._getDaysInMonth(a, n)));
                  }
                  l = r.exec(i);
                }
                return new Date(a, n, s);
              },
              s =
                null == i || "" === i
                  ? o
                  : "string" == typeof i
                  ? n(i)
                  : "number" == typeof i
                  ? isNaN(i)
                    ? o
                    : a(i)
                  : new Date(i.getTime());
            return (
              (s = s && "Invalid Date" === s.toString() ? o : s) &&
                (s.setHours(0),
                s.setMinutes(0),
                s.setSeconds(0),
                s.setMilliseconds(0)),
              this._daylightSavingAdjust(s)
            );
          },
          _daylightSavingAdjust: function (e) {
            return e
              ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0), e)
              : null;
          },
          _setDate: function (e, t, i) {
            var o = !t,
              a = e.selectedMonth,
              n = e.selectedYear,
              s = this._restrictMinMax(
                e,
                this._determineDate(e, t, new Date())
              );
            (e.selectedDay = e.currentDay = s.getDate()),
              (e.drawMonth = e.selectedMonth = e.currentMonth = s.getMonth()),
              (e.drawYear = e.selectedYear = e.currentYear = s.getFullYear()),
              (a === e.selectedMonth && n === e.selectedYear) ||
                i ||
                this._notifyChange(e),
              this._adjustInstDate(e),
              e.input && e.input.val(o ? "" : this._formatDate(e));
          },
          _getDate: function (e) {
            return !e.currentYear || (e.input && "" === e.input.val())
              ? null
              : this._daylightSavingAdjust(
                  new Date(e.currentYear, e.currentMonth, e.currentDay)
                );
          },
          _attachHandlers: function (t) {
            var i = this._get(t, "stepMonths"),
              o = "#" + t.id.replace(/\\\\/g, "\\");
            t.dpDiv.find("[data-handler]").map(function () {
              var t = {
                prev: function () {
                  e.datepicker._adjustDate(o, -i, "M");
                },
                next: function () {
                  e.datepicker._adjustDate(o, +i, "M");
                },
                hide: function () {
                  e.datepicker._hideDatepicker();
                },
                today: function () {
                  e.datepicker._gotoToday(o);
                },
                selectDay: function () {
                  return (
                    e.datepicker._selectDay(
                      o,
                      +this.getAttribute("data-month"),
                      +this.getAttribute("data-year"),
                      this
                    ),
                    !1
                  );
                },
                selectMonth: function () {
                  return e.datepicker._selectMonthYear(o, this, "M"), !1;
                },
                selectYear: function () {
                  return e.datepicker._selectMonthYear(o, this, "Y"), !1;
                },
              };
              e(this).bind(
                this.getAttribute("data-event"),
                t[this.getAttribute("data-handler")]
              );
            });
          },
          _generateHTML: function (e) {
            var t,
              i,
              o,
              a,
              n,
              s,
              r,
              l,
              c,
              d,
              u,
              p,
              h,
              m,
              f,
              g,
              v,
              b,
              y,
              w,
              x,
              T,
              C,
              k,
              S,
              $,
              _,
              E,
              D,
              N,
              M,
              I,
              R,
              F,
              A,
              O,
              z,
              L,
              j,
              P = new Date(),
              H = this._daylightSavingAdjust(
                new Date(P.getFullYear(), P.getMonth(), P.getDate())
              ),
              U = this._get(e, "isRTL"),
              V = this._get(e, "showButtonPanel"),
              W = this._get(e, "hideIfNoPrevNext"),
              B = this._get(e, "navigationAsDateFormat"),
              q = this._getNumberOfMonths(e),
              Y = this._get(e, "showCurrentAtPos"),
              G = this._get(e, "stepMonths"),
              X = 1 !== q[0] || 1 !== q[1],
              K = this._daylightSavingAdjust(
                e.currentDay
                  ? new Date(e.currentYear, e.currentMonth, e.currentDay)
                  : new Date(9999, 9, 9)
              ),
              J = this._getMinMaxDate(e, "min"),
              Z = this._getMinMaxDate(e, "max"),
              Q = e.drawMonth - Y,
              ee = e.drawYear;
            if ((Q < 0 && ((Q += 12), ee--), Z))
              for (
                t = this._daylightSavingAdjust(
                  new Date(
                    Z.getFullYear(),
                    Z.getMonth() - q[0] * q[1] + 1,
                    Z.getDate()
                  )
                ),
                  t = J && t < J ? J : t;
                this._daylightSavingAdjust(new Date(ee, Q, 1)) > t;

              )
                --Q < 0 && ((Q = 11), ee--);
            for (
              e.drawMonth = Q,
                e.drawYear = ee,
                i = this._get(e, "prevText"),
                i = B
                  ? this.formatDate(
                      i,
                      this._daylightSavingAdjust(new Date(ee, Q - G, 1)),
                      this._getFormatConfig(e)
                    )
                  : i,
                o = this._canAdjustMonth(e, -1, ee, Q)
                  ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" +
                    i +
                    "'><span class='ui-icon ui-icon-circle-triangle-" +
                    (U ? "e" : "w") +
                    "'>" +
                    i +
                    "</span></a>"
                  : W
                  ? ""
                  : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" +
                    i +
                    "'><span class='ui-icon ui-icon-circle-triangle-" +
                    (U ? "e" : "w") +
                    "'>" +
                    i +
                    "</span></a>",
                a = this._get(e, "nextText"),
                a = B
                  ? this.formatDate(
                      a,
                      this._daylightSavingAdjust(new Date(ee, Q + G, 1)),
                      this._getFormatConfig(e)
                    )
                  : a,
                n = this._canAdjustMonth(e, 1, ee, Q)
                  ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" +
                    a +
                    "'><span class='ui-icon ui-icon-circle-triangle-" +
                    (U ? "w" : "e") +
                    "'>" +
                    a +
                    "</span></a>"
                  : W
                  ? ""
                  : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" +
                    a +
                    "'><span class='ui-icon ui-icon-circle-triangle-" +
                    (U ? "w" : "e") +
                    "'>" +
                    a +
                    "</span></a>",
                s = this._get(e, "currentText"),
                r = this._get(e, "gotoCurrent") && e.currentDay ? K : H,
                s = B ? this.formatDate(s, r, this._getFormatConfig(e)) : s,
                l = e.inline
                  ? ""
                  : "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" +
                    this._get(e, "closeText") +
                    "</button>",
                c = V
                  ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" +
                    (U ? l : "") +
                    (this._isInRange(e, r)
                      ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" +
                        s +
                        "</button>"
                      : "") +
                    (U ? "" : l) +
                    "</div>"
                  : "",
                d = parseInt(this._get(e, "firstDay"), 10),
                d = isNaN(d) ? 0 : d,
                u = this._get(e, "showWeek"),
                p = this._get(e, "dayNames"),
                h = this._get(e, "dayNamesMin"),
                m = this._get(e, "monthNames"),
                f = this._get(e, "monthNamesShort"),
                g = this._get(e, "beforeShowDay"),
                v = this._get(e, "showOtherMonths"),
                b = this._get(e, "selectOtherMonths"),
                y = this._getDefaultDate(e),
                w = "",
                T = 0;
              T < q[0];
              T++
            ) {
              for (C = "", this.maxRows = 4, k = 0; k < q[1]; k++) {
                if (
                  ((S = this._daylightSavingAdjust(
                    new Date(ee, Q, e.selectedDay)
                  )),
                  ($ = " ui-corner-all"),
                  (_ = ""),
                  X)
                ) {
                  if (((_ += "<div class='ui-datepicker-group"), q[1] > 1))
                    switch (k) {
                      case 0:
                        (_ += " ui-datepicker-group-first"),
                          ($ = " ui-corner-" + (U ? "right" : "left"));
                        break;
                      case q[1] - 1:
                        (_ += " ui-datepicker-group-last"),
                          ($ = " ui-corner-" + (U ? "left" : "right"));
                        break;
                      default:
                        (_ += " ui-datepicker-group-middle"), ($ = "");
                    }
                  _ += "'>";
                }
                for (
                  _ +=
                    "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" +
                    $ +
                    "'>" +
                    (/all|left/.test($) && 0 === T ? (U ? n : o) : "") +
                    (/all|right/.test($) && 0 === T ? (U ? o : n) : "") +
                    this._generateMonthYearHeader(
                      e,
                      Q,
                      ee,
                      J,
                      Z,
                      T > 0 || k > 0,
                      m,
                      f
                    ) +
                    "</div><table class='ui-datepicker-calendar'><thead><tr>",
                    E = u
                      ? "<th class='ui-datepicker-week-col'>" +
                        this._get(e, "weekHeader") +
                        "</th>"
                      : "",
                    x = 0;
                  x < 7;
                  x++
                )
                  E +=
                    "<th" +
                    ((x + d + 6) % 7 >= 5
                      ? " class='ui-datepicker-week-end'"
                      : "") +
                    "><span title='" +
                    p[(D = (x + d) % 7)] +
                    "'>" +
                    h[D] +
                    "</span></th>";
                for (
                  _ += E + "</tr></thead><tbody>",
                    N = this._getDaysInMonth(ee, Q),
                    ee === e.selectedYear &&
                      Q === e.selectedMonth &&
                      (e.selectedDay = Math.min(e.selectedDay, N)),
                    M = (this._getFirstDayOfMonth(ee, Q) - d + 7) % 7,
                    I = Math.ceil((M + N) / 7),
                    R = X && this.maxRows > I ? this.maxRows : I,
                    this.maxRows = R,
                    F = this._daylightSavingAdjust(new Date(ee, Q, 1 - M)),
                    A = 0;
                  A < R;
                  A++
                ) {
                  for (
                    _ += "<tr>",
                      O = u
                        ? "<td class='ui-datepicker-week-col'>" +
                          this._get(e, "calculateWeek")(F) +
                          "</td>"
                        : "",
                      x = 0;
                    x < 7;
                    x++
                  )
                    (z = g
                      ? g.apply(e.input ? e.input[0] : null, [F])
                      : [!0, ""]),
                      (j =
                        ((L = F.getMonth() !== Q) && !b) ||
                        !z[0] ||
                        (J && F < J) ||
                        (Z && F > Z)),
                      (O +=
                        "<td class='" +
                        ((x + d + 6) % 7 >= 5
                          ? " ui-datepicker-week-end"
                          : "") +
                        (L ? " ui-datepicker-other-month" : "") +
                        ((F.getTime() === S.getTime() &&
                          Q === e.selectedMonth &&
                          e._keyEvent) ||
                        (y.getTime() === F.getTime() &&
                          y.getTime() === S.getTime())
                          ? " " + this._dayOverClass
                          : "") +
                        (j
                          ? " " + this._unselectableClass + " ui-state-disabled"
                          : "") +
                        (L && !v
                          ? ""
                          : " " +
                            z[1] +
                            (F.getTime() === K.getTime()
                              ? " " + this._currentClass
                              : "") +
                            (F.getTime() === H.getTime()
                              ? " ui-datepicker-today"
                              : "")) +
                        "'" +
                        ((L && !v) || !z[2]
                          ? ""
                          : " title='" + z[2].replace(/'/g, "&#39;") + "'") +
                        (j
                          ? ""
                          : " data-handler='selectDay' data-event='click' data-month='" +
                            F.getMonth() +
                            "' data-year='" +
                            F.getFullYear() +
                            "'") +
                        ">" +
                        (L && !v
                          ? "&#xa0;"
                          : j
                          ? "<span class='ui-state-default'>" +
                            F.getDate() +
                            "</span>"
                          : "<a class='ui-state-default" +
                            (F.getTime() === H.getTime()
                              ? " ui-state-highlight"
                              : "") +
                            (F.getTime() === K.getTime()
                              ? " ui-state-active"
                              : "") +
                            (L ? " ui-priority-secondary" : "") +
                            "' href='#'>" +
                            F.getDate() +
                            "</a>") +
                        "</td>"),
                      F.setDate(F.getDate() + 1),
                      (F = this._daylightSavingAdjust(F));
                  _ += O + "</tr>";
                }
                ++Q > 11 && ((Q = 0), ee++),
                  (C += _ +=
                    "</tbody></table>" +
                    (X
                      ? "</div>" +
                        (q[0] > 0 && k === q[1] - 1
                          ? "<div class='ui-datepicker-row-break'></div>"
                          : "")
                      : ""));
              }
              w += C;
            }
            return (w += c), (e._keyEvent = !1), w;
          },
          _generateMonthYearHeader: function (e, t, i, o, a, n, s, r) {
            var l,
              c,
              d,
              u,
              p,
              h,
              m,
              f,
              g = this._get(e, "changeMonth"),
              v = this._get(e, "changeYear"),
              b = this._get(e, "showMonthAfterYear"),
              y = "<div class='ui-datepicker-title'>",
              w = "";
            if (n || !g)
              w += "<span class='ui-datepicker-month'>" + s[t] + "</span>";
            else {
              for (
                l = o && o.getFullYear() === i,
                  c = a && a.getFullYear() === i,
                  w +=
                    "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",
                  d = 0;
                d < 12;
                d++
              )
                (!l || d >= o.getMonth()) &&
                  (!c || d <= a.getMonth()) &&
                  (w +=
                    "<option value='" +
                    d +
                    "'" +
                    (d === t ? " selected='selected'" : "") +
                    ">" +
                    r[d] +
                    "</option>");
              w += "</select>";
            }
            if ((b || (y += w + (!n && g && v ? "" : "&#xa0;")), !e.yearshtml))
              if (((e.yearshtml = ""), n || !v))
                y += "<span class='ui-datepicker-year'>" + i + "</span>";
              else {
                for (
                  u = this._get(e, "yearRange").split(":"),
                    p = new Date().getFullYear(),
                    m = (h = function (e) {
                      var t = e.match(/c[+\-].*/)
                        ? i + parseInt(e.substring(1), 10)
                        : e.match(/[+\-].*/)
                        ? p + parseInt(e, 10)
                        : parseInt(e, 10);
                      return isNaN(t) ? p : t;
                    })(u[0]),
                    f = Math.max(m, h(u[1] || "")),
                    m = o ? Math.max(m, o.getFullYear()) : m,
                    f = a ? Math.min(f, a.getFullYear()) : f,
                    e.yearshtml +=
                      "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";
                  m <= f;
                  m++
                )
                  e.yearshtml +=
                    "<option value='" +
                    m +
                    "'" +
                    (m === i ? " selected='selected'" : "") +
                    ">" +
                    m +
                    "</option>";
                (e.yearshtml += "</select>"),
                  (y += e.yearshtml),
                  (e.yearshtml = null);
              }
            return (
              (y += this._get(e, "yearSuffix")),
              b && (y += (!n && g && v ? "" : "&#xa0;") + w),
              (y += "</div>")
            );
          },
          _adjustInstDate: function (e, t, i) {
            var o = e.drawYear + ("Y" === i ? t : 0),
              a = e.drawMonth + ("M" === i ? t : 0),
              n =
                Math.min(e.selectedDay, this._getDaysInMonth(o, a)) +
                ("D" === i ? t : 0),
              s = this._restrictMinMax(
                e,
                this._daylightSavingAdjust(new Date(o, a, n))
              );
            (e.selectedDay = s.getDate()),
              (e.drawMonth = e.selectedMonth = s.getMonth()),
              (e.drawYear = e.selectedYear = s.getFullYear()),
              ("M" !== i && "Y" !== i) || this._notifyChange(e);
          },
          _restrictMinMax: function (e, t) {
            var i = this._getMinMaxDate(e, "min"),
              o = this._getMinMaxDate(e, "max"),
              a = i && t < i ? i : t;
            return o && a > o ? o : a;
          },
          _notifyChange: function (e) {
            var t = this._get(e, "onChangeMonthYear");
            t &&
              t.apply(e.input ? e.input[0] : null, [
                e.selectedYear,
                e.selectedMonth + 1,
                e,
              ]);
          },
          _getNumberOfMonths: function (e) {
            var t = this._get(e, "numberOfMonths");
            return null == t ? [1, 1] : "number" == typeof t ? [1, t] : t;
          },
          _getMinMaxDate: function (e, t) {
            return this._determineDate(e, this._get(e, t + "Date"), null);
          },
          _getDaysInMonth: function (e, t) {
            return (
              32 - this._daylightSavingAdjust(new Date(e, t, 32)).getDate()
            );
          },
          _getFirstDayOfMonth: function (e, t) {
            return new Date(e, t, 1).getDay();
          },
          _canAdjustMonth: function (e, t, i, o) {
            var a = this._getNumberOfMonths(e),
              n = this._daylightSavingAdjust(
                new Date(i, o + (t < 0 ? t : a[0] * a[1]), 1)
              );
            return (
              t < 0 &&
                n.setDate(this._getDaysInMonth(n.getFullYear(), n.getMonth())),
              this._isInRange(e, n)
            );
          },
          _isInRange: function (e, t) {
            var i,
              o,
              a = this._getMinMaxDate(e, "min"),
              n = this._getMinMaxDate(e, "max"),
              s = null,
              r = null,
              l = this._get(e, "yearRange");
            return (
              l &&
                ((i = l.split(":")),
                (o = new Date().getFullYear()),
                (s = parseInt(i[0], 10)),
                (r = parseInt(i[1], 10)),
                i[0].match(/[+\-].*/) && (s += o),
                i[1].match(/[+\-].*/) && (r += o)),
              (!a || t.getTime() >= a.getTime()) &&
                (!n || t.getTime() <= n.getTime()) &&
                (!s || t.getFullYear() >= s) &&
                (!r || t.getFullYear() <= r)
            );
          },
          _getFormatConfig: function (e) {
            var t = this._get(e, "shortYearCutoff");
            return {
              shortYearCutoff: (t =
                "string" != typeof t
                  ? t
                  : (new Date().getFullYear() % 100) + parseInt(t, 10)),
              dayNamesShort: this._get(e, "dayNamesShort"),
              dayNames: this._get(e, "dayNames"),
              monthNamesShort: this._get(e, "monthNamesShort"),
              monthNames: this._get(e, "monthNames"),
            };
          },
          _formatDate: function (e, t, i, o) {
            t ||
              ((e.currentDay = e.selectedDay),
              (e.currentMonth = e.selectedMonth),
              (e.currentYear = e.selectedYear));
            var a = t
              ? "object" == typeof t
                ? t
                : this._daylightSavingAdjust(new Date(o, i, t))
              : this._daylightSavingAdjust(
                  new Date(e.currentYear, e.currentMonth, e.currentDay)
                );
            return this.formatDate(
              this._get(e, "dateFormat"),
              a,
              this._getFormatConfig(e)
            );
          },
        }),
          (e.fn.datepicker = function (t) {
            if (!this.length) return this;
            e.datepicker.initialized ||
              (e(document).mousedown(e.datepicker._checkExternalClick),
              (e.datepicker.initialized = !0)),
              0 === e("#" + e.datepicker._mainDivId).length &&
                e("body").append(e.datepicker.dpDiv);
            var i = Array.prototype.slice.call(arguments, 1);
            return "string" != typeof t ||
              ("isDisabled" !== t && "getDate" !== t && "widget" !== t)
              ? "option" === t &&
                2 === arguments.length &&
                "string" == typeof arguments[1]
                ? e.datepicker["_" + t + "Datepicker"].apply(
                    e.datepicker,
                    [this[0]].concat(i)
                  )
                : this.each(function () {
                    "string" == typeof t
                      ? e.datepicker["_" + t + "Datepicker"].apply(
                          e.datepicker,
                          [this].concat(i)
                        )
                      : e.datepicker._attachDatepicker(this, t);
                  })
              : e.datepicker["_" + t + "Datepicker"].apply(
                  e.datepicker,
                  [this[0]].concat(i)
                );
          }),
          (e.datepicker = new a()),
          (e.datepicker.initialized = !1),
          (e.datepicker.uuid = new Date().getTime()),
          (e.datepicker.version = "1.10.4");
      })(jQuery),
      (function (e, t) {
        var i = {
            buttons: !0,
            height: !0,
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0,
            width: !0,
          },
          o = { maxHeight: !0, maxWidth: !0, minHeight: !0, minWidth: !0 };
        e.widget("ui.dialog", {
          version: "1.10.4",
          options: {
            appendTo: "body",
            autoOpen: !0,
            buttons: [],
            closeOnEscape: !0,
            closeText: "close",
            dialogClass: "",
            draggable: !0,
            hide: null,
            height: "auto",
            maxHeight: null,
            maxWidth: null,
            minHeight: 150,
            minWidth: 150,
            modal: !1,
            position: {
              my: "center",
              at: "center",
              of: window,
              collision: "fit",
              using: function (t) {
                var i = e(this).css(t).offset().top;
                i < 0 && e(this).css("top", t.top - i);
              },
            },
            resizable: !0,
            show: null,
            title: null,
            width: 300,
            beforeClose: null,
            close: null,
            drag: null,
            dragStart: null,
            dragStop: null,
            focus: null,
            open: null,
            resize: null,
            resizeStart: null,
            resizeStop: null,
          },
          _create: function () {
            (this.originalCss = {
              display: this.element[0].style.display,
              width: this.element[0].style.width,
              minHeight: this.element[0].style.minHeight,
              maxHeight: this.element[0].style.maxHeight,
              height: this.element[0].style.height,
            }),
              (this.originalPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element),
              }),
              (this.originalTitle = this.element.attr("title")),
              (this.options.title = this.options.title || this.originalTitle),
              this._createWrapper(),
              this.element
                .show()
                .removeAttr("title")
                .addClass("ui-dialog-content ui-widget-content")
                .appendTo(this.uiDialog),
              this._createTitlebar(),
              this._createButtonPane(),
              this.options.draggable && e.fn.draggable && this._makeDraggable(),
              this.options.resizable && e.fn.resizable && this._makeResizable(),
              (this._isOpen = !1);
          },
          _init: function () {
            this.options.autoOpen && this.open();
          },
          _appendTo: function () {
            var t = this.options.appendTo;
            return t && (t.jquery || t.nodeType)
              ? e(t)
              : this.document.find(t || "body").eq(0);
          },
          _destroy: function () {
            var e,
              t = this.originalPosition;
            this._destroyOverlay(),
              this.element
                .removeUniqueId()
                .removeClass("ui-dialog-content ui-widget-content")
                .css(this.originalCss)
                .detach(),
              this.uiDialog.stop(!0, !0).remove(),
              this.originalTitle &&
                this.element.attr("title", this.originalTitle),
              (e = t.parent.children().eq(t.index)).length &&
              e[0] !== this.element[0]
                ? e.before(this.element)
                : t.parent.append(this.element);
          },
          widget: function () {
            return this.uiDialog;
          },
          disable: e.noop,
          enable: e.noop,
          close: function (t) {
            var i,
              o = this;
            if (this._isOpen && !1 !== this._trigger("beforeClose", t)) {
              if (
                ((this._isOpen = !1),
                this._destroyOverlay(),
                !this.opener.filter(":focusable").focus().length)
              )
                try {
                  (i = this.document[0].activeElement) &&
                    "body" !== i.nodeName.toLowerCase() &&
                    e(i).blur();
                } catch (e) {}
              this._hide(this.uiDialog, this.options.hide, function () {
                o._trigger("close", t);
              });
            }
          },
          isOpen: function () {
            return this._isOpen;
          },
          moveToTop: function () {
            this._moveToTop();
          },
          _moveToTop: function (e, t) {
            var i = !!this.uiDialog
              .nextAll(":visible")
              .insertBefore(this.uiDialog).length;
            return i && !t && this._trigger("focus", e), i;
          },
          open: function () {
            var t = this;
            this._isOpen
              ? this._moveToTop() && this._focusTabbable()
              : ((this._isOpen = !0),
                (this.opener = e(this.document[0].activeElement)),
                this._size(),
                this._position(),
                this._createOverlay(),
                this._moveToTop(null, !0),
                this._show(this.uiDialog, this.options.show, function () {
                  t._focusTabbable(), t._trigger("focus");
                }),
                this._trigger("open"));
          },
          _focusTabbable: function () {
            var e = this.element.find("[autofocus]");
            e.length || (e = this.element.find(":tabbable")),
              e.length || (e = this.uiDialogButtonPane.find(":tabbable")),
              e.length || (e = this.uiDialogTitlebarClose.filter(":tabbable")),
              e.length || (e = this.uiDialog),
              e.eq(0).focus();
          },
          _keepFocus: function (t) {
            function i() {
              var t = this.document[0].activeElement;
              this.uiDialog[0] === t ||
                e.contains(this.uiDialog[0], t) ||
                this._focusTabbable();
            }
            t.preventDefault(), i.call(this), this._delay(i);
          },
          _createWrapper: function () {
            (this.uiDialog = e("<div>")
              .addClass(
                "ui-dialog ui-widget ui-widget-content ui-corner-all ui-front " +
                  this.options.dialogClass
              )
              .hide()
              .attr({ tabIndex: -1, role: "dialog" })
              .appendTo(this._appendTo())),
              this._on(this.uiDialog, {
                keydown: function (t) {
                  if (
                    this.options.closeOnEscape &&
                    !t.isDefaultPrevented() &&
                    t.keyCode &&
                    t.keyCode === e.ui.keyCode.ESCAPE
                  )
                    return t.preventDefault(), void this.close(t);
                  if (t.keyCode === e.ui.keyCode.TAB) {
                    var i = this.uiDialog.find(":tabbable"),
                      o = i.filter(":first"),
                      a = i.filter(":last");
                    (t.target !== a[0] && t.target !== this.uiDialog[0]) ||
                    t.shiftKey
                      ? (t.target !== o[0] && t.target !== this.uiDialog[0]) ||
                        !t.shiftKey ||
                        (a.focus(1), t.preventDefault())
                      : (o.focus(1), t.preventDefault());
                  }
                },
                mousedown: function (e) {
                  this._moveToTop(e) && this._focusTabbable();
                },
              }),
              this.element.find("[aria-describedby]").length ||
                this.uiDialog.attr({
                  "aria-describedby": this.element.uniqueId().attr("id"),
                });
          },
          _createTitlebar: function () {
            var t;
            (this.uiDialogTitlebar = e("<div>")
              .addClass(
                "ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix"
              )
              .prependTo(this.uiDialog)),
              this._on(this.uiDialogTitlebar, {
                mousedown: function (t) {
                  e(t.target).closest(".ui-dialog-titlebar-close") ||
                    this.uiDialog.focus();
                },
              }),
              (this.uiDialogTitlebarClose = e("<button type='button'></button>")
                .button({
                  label: this.options.closeText,
                  icons: { primary: "ui-icon-closethick" },
                  text: !1,
                })
                .addClass("ui-dialog-titlebar-close")
                .appendTo(this.uiDialogTitlebar)),
              this._on(this.uiDialogTitlebarClose, {
                click: function (e) {
                  e.preventDefault(), this.close(e);
                },
              }),
              (t = e("<span>")
                .uniqueId()
                .addClass("ui-dialog-title")
                .prependTo(this.uiDialogTitlebar)),
              this._title(t),
              this.uiDialog.attr({ "aria-labelledby": t.attr("id") });
          },
          _title: function (e) {
            this.options.title || e.html("&#160;"), e.text(this.options.title);
          },
          _createButtonPane: function () {
            (this.uiDialogButtonPane = e("<div>").addClass(
              "ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"
            )),
              (this.uiButtonSet = e("<div>")
                .addClass("ui-dialog-buttonset")
                .appendTo(this.uiDialogButtonPane)),
              this._createButtons();
          },
          _createButtons: function () {
            var t = this,
              i = this.options.buttons;
            this.uiDialogButtonPane.remove(),
              this.uiButtonSet.empty(),
              e.isEmptyObject(i) || (e.isArray(i) && !i.length)
                ? this.uiDialog.removeClass("ui-dialog-buttons")
                : (e.each(i, function (i, o) {
                    var a, n;
                    (o = e.isFunction(o) ? { click: o, text: i } : o),
                      (o = e.extend({ type: "button" }, o)),
                      (a = o.click),
                      (o.click = function () {
                        a.apply(t.element[0], arguments);
                      }),
                      (n = { icons: o.icons, text: o.showText }),
                      delete o.icons,
                      delete o.showText,
                      e("<button></button>", o)
                        .button(n)
                        .appendTo(t.uiButtonSet);
                  }),
                  this.uiDialog.addClass("ui-dialog-buttons"),
                  this.uiDialogButtonPane.appendTo(this.uiDialog));
          },
          _makeDraggable: function () {
            var t = this,
              i = this.options;
            function o(e) {
              return { position: e.position, offset: e.offset };
            }
            this.uiDialog.draggable({
              cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
              handle: ".ui-dialog-titlebar",
              containment: "document",
              start: function (i, a) {
                e(this).addClass("ui-dialog-dragging"),
                  t._blockFrames(),
                  t._trigger("dragStart", i, o(a));
              },
              drag: function (e, i) {
                t._trigger("drag", e, o(i));
              },
              stop: function (a, n) {
                (i.position = [
                  n.position.left - t.document.scrollLeft(),
                  n.position.top - t.document.scrollTop(),
                ]),
                  e(this).removeClass("ui-dialog-dragging"),
                  t._unblockFrames(),
                  t._trigger("dragStop", a, o(n));
              },
            });
          },
          _makeResizable: function () {
            var t = this,
              i = this.options,
              o = i.resizable,
              a = this.uiDialog.css("position"),
              n = "string" == typeof o ? o : "n,e,s,w,se,sw,ne,nw";
            function s(e) {
              return {
                originalPosition: e.originalPosition,
                originalSize: e.originalSize,
                position: e.position,
                size: e.size,
              };
            }
            this.uiDialog
              .resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: i.maxWidth,
                maxHeight: i.maxHeight,
                minWidth: i.minWidth,
                minHeight: this._minHeight(),
                handles: n,
                start: function (i, o) {
                  e(this).addClass("ui-dialog-resizing"),
                    t._blockFrames(),
                    t._trigger("resizeStart", i, s(o));
                },
                resize: function (e, i) {
                  t._trigger("resize", e, s(i));
                },
                stop: function (o, a) {
                  (i.height = e(this).height()),
                    (i.width = e(this).width()),
                    e(this).removeClass("ui-dialog-resizing"),
                    t._unblockFrames(),
                    t._trigger("resizeStop", o, s(a));
                },
              })
              .css("position", a);
          },
          _minHeight: function () {
            var e = this.options;
            return "auto" === e.height
              ? e.minHeight
              : Math.min(e.minHeight, e.height);
          },
          _position: function () {
            var e = this.uiDialog.is(":visible");
            e || this.uiDialog.show(),
              this.uiDialog.position(this.options.position),
              e || this.uiDialog.hide();
          },
          _setOptions: function (t) {
            var a = this,
              n = !1,
              s = {};
            e.each(t, function (e, t) {
              a._setOption(e, t), e in i && (n = !0), e in o && (s[e] = t);
            }),
              n && (this._size(), this._position()),
              this.uiDialog.is(":data(ui-resizable)") &&
                this.uiDialog.resizable("option", s);
          },
          _setOption: function (e, t) {
            var i,
              o,
              a = this.uiDialog;
            "dialogClass" === e &&
              a.removeClass(this.options.dialogClass).addClass(t),
              "disabled" !== e &&
                (this._super(e, t),
                "appendTo" === e && this.uiDialog.appendTo(this._appendTo()),
                "buttons" === e && this._createButtons(),
                "closeText" === e &&
                  this.uiDialogTitlebarClose.button({ label: "" + t }),
                "draggable" === e &&
                  ((i = a.is(":data(ui-draggable)")) &&
                    !t &&
                    a.draggable("destroy"),
                  !i && t && this._makeDraggable()),
                "position" === e && this._position(),
                "resizable" === e &&
                  ((o = a.is(":data(ui-resizable)")) &&
                    !t &&
                    a.resizable("destroy"),
                  o &&
                    "string" == typeof t &&
                    a.resizable("option", "handles", t),
                  o || !1 === t || this._makeResizable()),
                "title" === e &&
                  this._title(this.uiDialogTitlebar.find(".ui-dialog-title")));
          },
          _size: function () {
            var e,
              t,
              i,
              o = this.options;
            this.element
              .show()
              .css({
                width: "auto",
                minHeight: 0,
                maxHeight: "none",
                height: 0,
              }),
              o.minWidth > o.width && (o.width = o.minWidth),
              (e = this.uiDialog
                .css({ height: "auto", width: o.width })
                .outerHeight()),
              (t = Math.max(0, o.minHeight - e)),
              (i =
                "number" == typeof o.maxHeight
                  ? Math.max(0, o.maxHeight - e)
                  : "none"),
              "auto" === o.height
                ? this.element.css({
                    minHeight: t,
                    maxHeight: i,
                    height: "auto",
                  })
                : this.element.height(Math.max(0, o.height - e)),
              this.uiDialog.is(":data(ui-resizable)") &&
                this.uiDialog.resizable(
                  "option",
                  "minHeight",
                  this._minHeight()
                );
          },
          _blockFrames: function () {
            this.iframeBlocks = this.document.find("iframe").map(function () {
              var t = e(this);
              return e("<div>")
                .css({
                  position: "absolute",
                  width: t.outerWidth(),
                  height: t.outerHeight(),
                })
                .appendTo(t.parent())
                .offset(t.offset())[0];
            });
          },
          _unblockFrames: function () {
            this.iframeBlocks &&
              (this.iframeBlocks.remove(), delete this.iframeBlocks);
          },
          _allowInteraction: function (t) {
            return (
              !!e(t.target).closest(".ui-dialog").length ||
              !!e(t.target).closest(".ui-datepicker").length
            );
          },
          _createOverlay: function () {
            if (this.options.modal) {
              var t = this,
                i = this.widgetFullName;
              e.ui.dialog.overlayInstances ||
                this._delay(function () {
                  e.ui.dialog.overlayInstances &&
                    this.document.bind("focusin.dialog", function (o) {
                      t._allowInteraction(o) ||
                        (o.preventDefault(),
                        e(".ui-dialog:visible:last .ui-dialog-content")
                          .data(i)
                          ._focusTabbable());
                    });
                }),
                (this.overlay = e("<div>")
                  .addClass("ui-widget-overlay ui-front")
                  .appendTo(this._appendTo())),
                this._on(this.overlay, { mousedown: "_keepFocus" }),
                e.ui.dialog.overlayInstances++;
            }
          },
          _destroyOverlay: function () {
            this.options.modal &&
              this.overlay &&
              (e.ui.dialog.overlayInstances--,
              e.ui.dialog.overlayInstances ||
                this.document.unbind("focusin.dialog"),
              this.overlay.remove(),
              (this.overlay = null));
          },
        }),
          (e.ui.dialog.overlayInstances = 0),
          !1 !== e.uiBackCompat &&
            e.widget("ui.dialog", e.ui.dialog, {
              _position: function () {
                var t,
                  i = this.options.position,
                  o = [],
                  a = [0, 0];
                i
                  ? (("string" == typeof i ||
                      ("object" == typeof i && "0" in i)) &&
                      (1 ===
                        (o = i.split ? i.split(" ") : [i[0], i[1]]).length &&
                        (o[1] = o[0]),
                      e.each(["left", "top"], function (e, t) {
                        +o[e] === o[e] && ((a[e] = o[e]), (o[e] = t));
                      }),
                      (i = {
                        my:
                          o[0] +
                          (a[0] < 0 ? a[0] : "+" + a[0]) +
                          " " +
                          o[1] +
                          (a[1] < 0 ? a[1] : "+" + a[1]),
                        at: o.join(" "),
                      })),
                    (i = e.extend(
                      {},
                      e.ui.dialog.prototype.options.position,
                      i
                    )))
                  : (i = e.ui.dialog.prototype.options.position),
                  (t = this.uiDialog.is(":visible")) || this.uiDialog.show(),
                  this.uiDialog.position(i),
                  t || this.uiDialog.hide();
              },
            });
      })(jQuery),
      (function (e, t) {
        e.widget("ui.menu", {
          version: "1.10.4",
          defaultElement: "<ul>",
          delay: 300,
          options: {
            icons: { submenu: "ui-icon-carat-1-e" },
            menus: "ul",
            position: { my: "left top", at: "right top" },
            role: "menu",
            blur: null,
            focus: null,
            select: null,
          },
          _create: function () {
            (this.activeMenu = this.element),
              (this.mouseHandled = !1),
              this.element
                .uniqueId()
                .addClass("ui-menu ui-widget ui-widget-content ui-corner-all")
                .toggleClass(
                  "ui-menu-icons",
                  !!this.element.find(".ui-icon").length
                )
                .attr({ role: this.options.role, tabIndex: 0 })
                .bind(
                  "click" + this.eventNamespace,
                  e.proxy(function (e) {
                    this.options.disabled && e.preventDefault();
                  }, this)
                ),
              this.options.disabled &&
                this.element
                  .addClass("ui-state-disabled")
                  .attr("aria-disabled", "true"),
              this._on({
                "mousedown .ui-menu-item > a": function (e) {
                  e.preventDefault();
                },
                "click .ui-state-disabled > a": function (e) {
                  e.preventDefault();
                },
                "click .ui-menu-item:has(a)": function (t) {
                  var i = e(t.target).closest(".ui-menu-item");
                  !this.mouseHandled &&
                    i.not(".ui-state-disabled").length &&
                    (this.select(t),
                    t.isPropagationStopped() || (this.mouseHandled = !0),
                    i.has(".ui-menu").length
                      ? this.expand(t)
                      : !this.element.is(":focus") &&
                        e(this.document[0].activeElement).closest(".ui-menu")
                          .length &&
                        (this.element.trigger("focus", [!0]),
                        this.active &&
                          1 === this.active.parents(".ui-menu").length &&
                          clearTimeout(this.timer)));
                },
                "mouseenter .ui-menu-item": function (t) {
                  var i = e(t.currentTarget);
                  i
                    .siblings()
                    .children(".ui-state-active")
                    .removeClass("ui-state-active"),
                    this.focus(t, i);
                },
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function (e, t) {
                  var i =
                    this.active || this.element.children(".ui-menu-item").eq(0);
                  t || this.focus(e, i);
                },
                blur: function (t) {
                  this._delay(function () {
                    e.contains(
                      this.element[0],
                      this.document[0].activeElement
                    ) || this.collapseAll(t);
                  });
                },
                keydown: "_keydown",
              }),
              this.refresh(),
              this._on(this.document, {
                click: function (t) {
                  e(t.target).closest(".ui-menu").length || this.collapseAll(t),
                    (this.mouseHandled = !1);
                },
              });
          },
          _destroy: function () {
            this.element
              .removeAttr("aria-activedescendant")
              .find(".ui-menu")
              .addBack()
              .removeClass(
                "ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons"
              )
              .removeAttr("role")
              .removeAttr("tabIndex")
              .removeAttr("aria-labelledby")
              .removeAttr("aria-expanded")
              .removeAttr("aria-hidden")
              .removeAttr("aria-disabled")
              .removeUniqueId()
              .show(),
              this.element
                .find(".ui-menu-item")
                .removeClass("ui-menu-item")
                .removeAttr("role")
                .removeAttr("aria-disabled")
                .children("a")
                .removeUniqueId()
                .removeClass("ui-corner-all ui-state-hover")
                .removeAttr("tabIndex")
                .removeAttr("role")
                .removeAttr("aria-haspopup")
                .children()
                .each(function () {
                  var t = e(this);
                  t.data("ui-menu-submenu-carat") && t.remove();
                }),
              this.element
                .find(".ui-menu-divider")
                .removeClass("ui-menu-divider ui-widget-content");
          },
          _keydown: function (t) {
            var i,
              o,
              a,
              n,
              s,
              r = !0;
            function l(e) {
              return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
            }
            switch (t.keyCode) {
              case e.ui.keyCode.PAGE_UP:
                this.previousPage(t);
                break;
              case e.ui.keyCode.PAGE_DOWN:
                this.nextPage(t);
                break;
              case e.ui.keyCode.HOME:
                this._move("first", "first", t);
                break;
              case e.ui.keyCode.END:
                this._move("last", "last", t);
                break;
              case e.ui.keyCode.UP:
                this.previous(t);
                break;
              case e.ui.keyCode.DOWN:
                this.next(t);
                break;
              case e.ui.keyCode.LEFT:
                this.collapse(t);
                break;
              case e.ui.keyCode.RIGHT:
                this.active &&
                  !this.active.is(".ui-state-disabled") &&
                  this.expand(t);
                break;
              case e.ui.keyCode.ENTER:
              case e.ui.keyCode.SPACE:
                this._activate(t);
                break;
              case e.ui.keyCode.ESCAPE:
                this.collapse(t);
                break;
              default:
                (r = !1),
                  (o = this.previousFilter || ""),
                  (a = String.fromCharCode(t.keyCode)),
                  (n = !1),
                  clearTimeout(this.filterTimer),
                  a === o ? (n = !0) : (a = o + a),
                  (s = new RegExp("^" + l(a), "i")),
                  (i = this.activeMenu
                    .children(".ui-menu-item")
                    .filter(function () {
                      return s.test(e(this).children("a").text());
                    })),
                  (i =
                    n && -1 !== i.index(this.active.next())
                      ? this.active.nextAll(".ui-menu-item")
                      : i).length ||
                    ((a = String.fromCharCode(t.keyCode)),
                    (s = new RegExp("^" + l(a), "i")),
                    (i = this.activeMenu
                      .children(".ui-menu-item")
                      .filter(function () {
                        return s.test(e(this).children("a").text());
                      }))),
                  i.length
                    ? (this.focus(t, i),
                      i.length > 1
                        ? ((this.previousFilter = a),
                          (this.filterTimer = this._delay(function () {
                            delete this.previousFilter;
                          }, 1e3)))
                        : delete this.previousFilter)
                    : delete this.previousFilter;
            }
            r && t.preventDefault();
          },
          _activate: function (e) {
            this.active.is(".ui-state-disabled") ||
              (this.active.children("a[aria-haspopup='true']").length
                ? this.expand(e)
                : this.select(e));
          },
          refresh: function () {
            var t,
              i = this.options.icons.submenu,
              o = this.element.find(this.options.menus);
            this.element.toggleClass(
              "ui-menu-icons",
              !!this.element.find(".ui-icon").length
            ),
              o
                .filter(":not(.ui-menu)")
                .addClass("ui-menu ui-widget ui-widget-content ui-corner-all")
                .hide()
                .attr({
                  role: this.options.role,
                  "aria-hidden": "true",
                  "aria-expanded": "false",
                })
                .each(function () {
                  var t = e(this),
                    o = t.prev("a"),
                    a = e("<span>")
                      .addClass("ui-menu-icon ui-icon " + i)
                      .data("ui-menu-submenu-carat", !0);
                  o.attr("aria-haspopup", "true").prepend(a),
                    t.attr("aria-labelledby", o.attr("id"));
                }),
              (t = o.add(this.element))
                .children(":not(.ui-menu-item):has(a)")
                .addClass("ui-menu-item")
                .attr("role", "presentation")
                .children("a")
                .uniqueId()
                .addClass("ui-corner-all")
                .attr({ tabIndex: -1, role: this._itemRole() }),
              t.children(":not(.ui-menu-item)").each(function () {
                var t = e(this);
                /[^\-\u2014\u2013\s]/.test(t.text()) ||
                  t.addClass("ui-widget-content ui-menu-divider");
              }),
              t.children(".ui-state-disabled").attr("aria-disabled", "true"),
              this.active &&
                !e.contains(this.element[0], this.active[0]) &&
                this.blur();
          },
          _itemRole: function () {
            return { menu: "menuitem", listbox: "option" }[this.options.role];
          },
          _setOption: function (e, t) {
            "icons" === e &&
              this.element
                .find(".ui-menu-icon")
                .removeClass(this.options.icons.submenu)
                .addClass(t.submenu),
              this._super(e, t);
          },
          focus: function (e, t) {
            var i, o;
            this.blur(e, e && "focus" === e.type),
              this._scrollIntoView(t),
              (this.active = t.first()),
              (o = this.active.children("a").addClass("ui-state-focus")),
              this.options.role &&
                this.element.attr("aria-activedescendant", o.attr("id")),
              this.active
                .parent()
                .closest(".ui-menu-item")
                .children("a:first")
                .addClass("ui-state-active"),
              e && "keydown" === e.type
                ? this._close()
                : (this.timer = this._delay(function () {
                    this._close();
                  }, this.delay)),
              (i = t.children(".ui-menu")).length &&
                e &&
                /^mouse/.test(e.type) &&
                this._startOpening(i),
              (this.activeMenu = t.parent()),
              this._trigger("focus", e, { item: t });
          },
          _scrollIntoView: function (t) {
            var i, o, a, n, s, r;
            this._hasScroll() &&
              ((i =
                parseFloat(e.css(this.activeMenu[0], "borderTopWidth")) || 0),
              (o = parseFloat(e.css(this.activeMenu[0], "paddingTop")) || 0),
              (a = t.offset().top - this.activeMenu.offset().top - i - o),
              (n = this.activeMenu.scrollTop()),
              (s = this.activeMenu.height()),
              (r = t.height()),
              a < 0
                ? this.activeMenu.scrollTop(n + a)
                : a + r > s && this.activeMenu.scrollTop(n + a - s + r));
          },
          blur: function (e, t) {
            t || clearTimeout(this.timer),
              this.active &&
                (this.active.children("a").removeClass("ui-state-focus"),
                (this.active = null),
                this._trigger("blur", e, { item: this.active }));
          },
          _startOpening: function (e) {
            clearTimeout(this.timer),
              "true" === e.attr("aria-hidden") &&
                (this.timer = this._delay(function () {
                  this._close(), this._open(e);
                }, this.delay));
          },
          _open: function (t) {
            var i = e.extend({ of: this.active }, this.options.position);
            clearTimeout(this.timer),
              this.element
                .find(".ui-menu")
                .not(t.parents(".ui-menu"))
                .hide()
                .attr("aria-hidden", "true"),
              t
                .show()
                .removeAttr("aria-hidden")
                .attr("aria-expanded", "true")
                .position(i);
          },
          collapseAll: function (t, i) {
            clearTimeout(this.timer),
              (this.timer = this._delay(function () {
                var o = i
                  ? this.element
                  : e(t && t.target).closest(this.element.find(".ui-menu"));
                o.length || (o = this.element),
                  this._close(o),
                  this.blur(t),
                  (this.activeMenu = o);
              }, this.delay));
          },
          _close: function (e) {
            e || (e = this.active ? this.active.parent() : this.element),
              e
                .find(".ui-menu")
                .hide()
                .attr("aria-hidden", "true")
                .attr("aria-expanded", "false")
                .end()
                .find("a.ui-state-active")
                .removeClass("ui-state-active");
          },
          collapse: function (e) {
            var t =
              this.active &&
              this.active.parent().closest(".ui-menu-item", this.element);
            t && t.length && (this._close(), this.focus(e, t));
          },
          expand: function (e) {
            var t =
              this.active &&
              this.active
                .children(".ui-menu ")
                .children(".ui-menu-item")
                .first();
            t &&
              t.length &&
              (this._open(t.parent()),
              this._delay(function () {
                this.focus(e, t);
              }));
          },
          next: function (e) {
            this._move("next", "first", e);
          },
          previous: function (e) {
            this._move("prev", "last", e);
          },
          isFirstItem: function () {
            return this.active && !this.active.prevAll(".ui-menu-item").length;
          },
          isLastItem: function () {
            return this.active && !this.active.nextAll(".ui-menu-item").length;
          },
          _move: function (e, t, i) {
            var o;
            this.active &&
              (o =
                "first" === e || "last" === e
                  ? this.active["first" === e ? "prevAll" : "nextAll"](
                      ".ui-menu-item"
                    ).eq(-1)
                  : this.active[e + "All"](".ui-menu-item").eq(0)),
              (o && o.length && this.active) ||
                (o = this.activeMenu.children(".ui-menu-item")[t]()),
              this.focus(i, o);
          },
          nextPage: function (t) {
            var i, o, a;
            this.active
              ? this.isLastItem() ||
                (this._hasScroll()
                  ? ((o = this.active.offset().top),
                    (a = this.element.height()),
                    this.active.nextAll(".ui-menu-item").each(function () {
                      return (i = e(this)).offset().top - o - a < 0;
                    }),
                    this.focus(t, i))
                  : this.focus(
                      t,
                      this.activeMenu
                        .children(".ui-menu-item")
                        [this.active ? "last" : "first"]()
                    ))
              : this.next(t);
          },
          previousPage: function (t) {
            var i, o, a;
            this.active
              ? this.isFirstItem() ||
                (this._hasScroll()
                  ? ((o = this.active.offset().top),
                    (a = this.element.height()),
                    this.active.prevAll(".ui-menu-item").each(function () {
                      return (i = e(this)).offset().top - o + a > 0;
                    }),
                    this.focus(t, i))
                  : this.focus(
                      t,
                      this.activeMenu.children(".ui-menu-item").first()
                    ))
              : this.next(t);
          },
          _hasScroll: function () {
            return (
              this.element.outerHeight() < this.element.prop("scrollHeight")
            );
          },
          select: function (t) {
            this.active = this.active || e(t.target).closest(".ui-menu-item");
            var i = { item: this.active };
            this.active.has(".ui-menu").length || this.collapseAll(t, !0),
              this._trigger("select", t, i);
          },
        });
      })(jQuery),
      (function (e, t) {
        e.widget("ui.progressbar", {
          version: "1.10.4",
          options: { max: 100, value: 0, change: null, complete: null },
          min: 0,
          _create: function () {
            (this.oldValue = this.options.value = this._constrainedValue()),
              this.element
                .addClass(
                  "ui-progressbar ui-widget ui-widget-content ui-corner-all"
                )
                .attr({ role: "progressbar", "aria-valuemin": this.min }),
              (this.valueDiv = e(
                "<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>"
              ).appendTo(this.element)),
              this._refreshValue();
          },
          _destroy: function () {
            this.element
              .removeClass(
                "ui-progressbar ui-widget ui-widget-content ui-corner-all"
              )
              .removeAttr("role")
              .removeAttr("aria-valuemin")
              .removeAttr("aria-valuemax")
              .removeAttr("aria-valuenow"),
              this.valueDiv.remove();
          },
          value: function (e) {
            if (e === t) return this.options.value;
            (this.options.value = this._constrainedValue(e)),
              this._refreshValue();
          },
          _constrainedValue: function (e) {
            return (
              e === t && (e = this.options.value),
              (this.indeterminate = !1 === e),
              "number" != typeof e && (e = 0),
              !this.indeterminate &&
                Math.min(this.options.max, Math.max(this.min, e))
            );
          },
          _setOptions: function (e) {
            var t = e.value;
            delete e.value,
              this._super(e),
              (this.options.value = this._constrainedValue(t)),
              this._refreshValue();
          },
          _setOption: function (e, t) {
            "max" === e && (t = Math.max(this.min, t)), this._super(e, t);
          },
          _percentage: function () {
            return this.indeterminate
              ? 100
              : (100 * (this.options.value - this.min)) /
                  (this.options.max - this.min);
          },
          _refreshValue: function () {
            var t = this.options.value,
              i = this._percentage();
            this.valueDiv
              .toggle(this.indeterminate || t > this.min)
              .toggleClass("ui-corner-right", t === this.options.max)
              .width(i.toFixed(0) + "%"),
              this.element.toggleClass(
                "ui-progressbar-indeterminate",
                this.indeterminate
              ),
              this.indeterminate
                ? (this.element.removeAttr("aria-valuenow"),
                  this.overlayDiv ||
                    (this.overlayDiv = e(
                      "<div class='ui-progressbar-overlay'></div>"
                    ).appendTo(this.valueDiv)))
                : (this.element.attr({
                    "aria-valuemax": this.options.max,
                    "aria-valuenow": t,
                  }),
                  this.overlayDiv &&
                    (this.overlayDiv.remove(), (this.overlayDiv = null))),
              this.oldValue !== t &&
                ((this.oldValue = t), this._trigger("change")),
              t === this.options.max && this._trigger("complete");
          },
        });
      })(jQuery),
      (function (e, t) {
        var i = 5;
        e.widget("ui.slider", e.ui.mouse, {
          version: "1.10.4",
          widgetEventPrefix: "slide",
          options: {
            animate: !1,
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: !1,
            step: 1,
            value: 0,
            values: null,
            change: null,
            slide: null,
            start: null,
            stop: null,
          },
          _create: function () {
            (this._keySliding = !1),
              (this._mouseSliding = !1),
              (this._animateOff = !0),
              (this._handleIndex = null),
              this._detectOrientation(),
              this._mouseInit(),
              this.element.addClass(
                "ui-slider ui-slider-" +
                  this.orientation +
                  " ui-widget ui-widget-content ui-corner-all"
              ),
              this._refresh(),
              this._setOption("disabled", this.options.disabled),
              (this._animateOff = !1);
          },
          _refresh: function () {
            this._createRange(),
              this._createHandles(),
              this._setupEvents(),
              this._refreshValue();
          },
          _createHandles: function () {
            var t,
              i,
              o = this.options,
              a = this.element
                .find(".ui-slider-handle")
                .addClass("ui-state-default ui-corner-all"),
              n =
                "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",
              s = [];
            for (
              i = (o.values && o.values.length) || 1,
                a.length > i && (a.slice(i).remove(), (a = a.slice(0, i))),
                t = a.length;
              t < i;
              t++
            )
              s.push(n);
            (this.handles = a.add(e(s.join("")).appendTo(this.element))),
              (this.handle = this.handles.eq(0)),
              this.handles.each(function (t) {
                e(this).data("ui-slider-handle-index", t);
              });
          },
          _createRange: function () {
            var t = this.options,
              i = "";
            t.range
              ? (!0 === t.range &&
                  (t.values
                    ? t.values.length && 2 !== t.values.length
                      ? (t.values = [t.values[0], t.values[0]])
                      : e.isArray(t.values) && (t.values = t.values.slice(0))
                    : (t.values = [this._valueMin(), this._valueMin()])),
                this.range && this.range.length
                  ? this.range
                      .removeClass("ui-slider-range-min ui-slider-range-max")
                      .css({ left: "", bottom: "" })
                  : ((this.range = e("<div></div>").appendTo(this.element)),
                    (i = "ui-slider-range ui-widget-header ui-corner-all")),
                this.range.addClass(
                  i +
                    ("min" === t.range || "max" === t.range
                      ? " ui-slider-range-" + t.range
                      : "")
                ))
              : (this.range && this.range.remove(), (this.range = null));
          },
          _setupEvents: function () {
            var e = this.handles.add(this.range).filter("a");
            this._off(e),
              this._on(e, this._handleEvents),
              this._hoverable(e),
              this._focusable(e);
          },
          _destroy: function () {
            this.handles.remove(),
              this.range && this.range.remove(),
              this.element.removeClass(
                "ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all"
              ),
              this._mouseDestroy();
          },
          _mouseCapture: function (t) {
            var i,
              o,
              a,
              n,
              s,
              r,
              l,
              c = this,
              d = this.options;
            return (
              !d.disabled &&
              ((this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
              }),
              (this.elementOffset = this.element.offset()),
              (i = { x: t.pageX, y: t.pageY }),
              (o = this._normValueFromMouse(i)),
              (a = this._valueMax() - this._valueMin() + 1),
              this.handles.each(function (t) {
                var i = Math.abs(o - c.values(t));
                (a > i ||
                  (a === i &&
                    (t === c._lastChangedValue || c.values(t) === d.min))) &&
                  ((a = i), (n = e(this)), (s = t));
              }),
              !1 !== this._start(t, s) &&
                ((this._mouseSliding = !0),
                (this._handleIndex = s),
                n.addClass("ui-state-active").focus(),
                (r = n.offset()),
                (l = !e(t.target).parents().addBack().is(".ui-slider-handle")),
                (this._clickOffset = l
                  ? { left: 0, top: 0 }
                  : {
                      left: t.pageX - r.left - n.width() / 2,
                      top:
                        t.pageY -
                        r.top -
                        n.height() / 2 -
                        (parseInt(n.css("borderTopWidth"), 10) || 0) -
                        (parseInt(n.css("borderBottomWidth"), 10) || 0) +
                        (parseInt(n.css("marginTop"), 10) || 0),
                    }),
                this.handles.hasClass("ui-state-hover") || this._slide(t, s, o),
                (this._animateOff = !0),
                !0))
            );
          },
          _mouseStart: function () {
            return !0;
          },
          _mouseDrag: function (e) {
            var t = { x: e.pageX, y: e.pageY },
              i = this._normValueFromMouse(t);
            return this._slide(e, this._handleIndex, i), !1;
          },
          _mouseStop: function (e) {
            return (
              this.handles.removeClass("ui-state-active"),
              (this._mouseSliding = !1),
              this._stop(e, this._handleIndex),
              this._change(e, this._handleIndex),
              (this._handleIndex = null),
              (this._clickOffset = null),
              (this._animateOff = !1),
              !1
            );
          },
          _detectOrientation: function () {
            this.orientation =
              "vertical" === this.options.orientation
                ? "vertical"
                : "horizontal";
          },
          _normValueFromMouse: function (e) {
            var t, i, o, a, n;
            return (
              "horizontal" === this.orientation
                ? ((t = this.elementSize.width),
                  (i =
                    e.x -
                    this.elementOffset.left -
                    (this._clickOffset ? this._clickOffset.left : 0)))
                : ((t = this.elementSize.height),
                  (i =
                    e.y -
                    this.elementOffset.top -
                    (this._clickOffset ? this._clickOffset.top : 0))),
              (o = i / t) > 1 && (o = 1),
              o < 0 && (o = 0),
              "vertical" === this.orientation && (o = 1 - o),
              (a = this._valueMax() - this._valueMin()),
              (n = this._valueMin() + o * a),
              this._trimAlignValue(n)
            );
          },
          _start: function (e, t) {
            var i = { handle: this.handles[t], value: this.value() };
            return (
              this.options.values &&
                this.options.values.length &&
                ((i.value = this.values(t)), (i.values = this.values())),
              this._trigger("start", e, i)
            );
          },
          _slide: function (e, t, i) {
            var o, a, n;
            this.options.values && this.options.values.length
              ? ((o = this.values(t ? 0 : 1)),
                2 === this.options.values.length &&
                  !0 === this.options.range &&
                  ((0 === t && i > o) || (1 === t && i < o)) &&
                  (i = o),
                i !== this.values(t) &&
                  (((a = this.values())[t] = i),
                  (n = this._trigger("slide", e, {
                    handle: this.handles[t],
                    value: i,
                    values: a,
                  })),
                  (o = this.values(t ? 0 : 1)),
                  !1 !== n && this.values(t, i)))
              : i !== this.value() &&
                !1 !==
                  (n = this._trigger("slide", e, {
                    handle: this.handles[t],
                    value: i,
                  })) &&
                this.value(i);
          },
          _stop: function (e, t) {
            var i = { handle: this.handles[t], value: this.value() };
            this.options.values &&
              this.options.values.length &&
              ((i.value = this.values(t)), (i.values = this.values())),
              this._trigger("stop", e, i);
          },
          _change: function (e, t) {
            if (!this._keySliding && !this._mouseSliding) {
              var i = { handle: this.handles[t], value: this.value() };
              this.options.values &&
                this.options.values.length &&
                ((i.value = this.values(t)), (i.values = this.values())),
                (this._lastChangedValue = t),
                this._trigger("change", e, i);
            }
          },
          value: function (e) {
            return arguments.length
              ? ((this.options.value = this._trimAlignValue(e)),
                this._refreshValue(),
                void this._change(null, 0))
              : this._value();
          },
          values: function (t, i) {
            var o, a, n;
            if (arguments.length > 1)
              return (
                (this.options.values[t] = this._trimAlignValue(i)),
                this._refreshValue(),
                void this._change(null, t)
              );
            if (!arguments.length) return this._values();
            if (!e.isArray(arguments[0]))
              return this.options.values && this.options.values.length
                ? this._values(t)
                : this.value();
            for (
              o = this.options.values, a = arguments[0], n = 0;
              n < o.length;
              n += 1
            )
              (o[n] = this._trimAlignValue(a[n])), this._change(null, n);
            this._refreshValue();
          },
          _setOption: function (t, i) {
            var o,
              a = 0;
            switch (
              ("range" === t &&
                !0 === this.options.range &&
                ("min" === i
                  ? ((this.options.value = this._values(0)),
                    (this.options.values = null))
                  : "max" === i &&
                    ((this.options.value = this._values(
                      this.options.values.length - 1
                    )),
                    (this.options.values = null))),
              e.isArray(this.options.values) &&
                (a = this.options.values.length),
              e.Widget.prototype._setOption.apply(this, arguments),
              t)
            ) {
              case "orientation":
                this._detectOrientation(),
                  this.element
                    .removeClass("ui-slider-horizontal ui-slider-vertical")
                    .addClass("ui-slider-" + this.orientation),
                  this._refreshValue();
                break;
              case "value":
                (this._animateOff = !0),
                  this._refreshValue(),
                  this._change(null, 0),
                  (this._animateOff = !1);
                break;
              case "values":
                for (
                  this._animateOff = !0, this._refreshValue(), o = 0;
                  o < a;
                  o += 1
                )
                  this._change(null, o);
                this._animateOff = !1;
                break;
              case "min":
              case "max":
                (this._animateOff = !0),
                  this._refreshValue(),
                  (this._animateOff = !1);
                break;
              case "range":
                (this._animateOff = !0),
                  this._refresh(),
                  (this._animateOff = !1);
            }
          },
          _value: function () {
            var e = this.options.value;
            return (e = this._trimAlignValue(e));
          },
          _values: function (e) {
            var t, i, o;
            if (arguments.length)
              return (
                (t = this.options.values[e]), (t = this._trimAlignValue(t))
              );
            if (this.options.values && this.options.values.length) {
              for (i = this.options.values.slice(), o = 0; o < i.length; o += 1)
                i[o] = this._trimAlignValue(i[o]);
              return i;
            }
            return [];
          },
          _trimAlignValue: function (e) {
            if (e <= this._valueMin()) return this._valueMin();
            if (e >= this._valueMax()) return this._valueMax();
            var t = this.options.step > 0 ? this.options.step : 1,
              i = (e - this._valueMin()) % t,
              o = e - i;
            return (
              2 * Math.abs(i) >= t && (o += i > 0 ? t : -t),
              parseFloat(o.toFixed(5))
            );
          },
          _valueMin: function () {
            return this.options.min;
          },
          _valueMax: function () {
            return this.options.max;
          },
          _refreshValue: function () {
            var t,
              i,
              o,
              a,
              n,
              s = this.options.range,
              r = this.options,
              l = this,
              c = !this._animateOff && r.animate,
              d = {};
            this.options.values && this.options.values.length
              ? this.handles.each(function (o) {
                  (i =
                    ((l.values(o) - l._valueMin()) /
                      (l._valueMax() - l._valueMin())) *
                    100),
                    (d["horizontal" === l.orientation ? "left" : "bottom"] =
                      i + "%"),
                    e(this).stop(1, 1)[c ? "animate" : "css"](d, r.animate),
                    !0 === l.options.range &&
                      ("horizontal" === l.orientation
                        ? (0 === o &&
                            l.range
                              .stop(1, 1)
                              [c ? "animate" : "css"](
                                { left: i + "%" },
                                r.animate
                              ),
                          1 === o &&
                            l.range[c ? "animate" : "css"](
                              { width: i - t + "%" },
                              { queue: !1, duration: r.animate }
                            ))
                        : (0 === o &&
                            l.range
                              .stop(1, 1)
                              [c ? "animate" : "css"](
                                { bottom: i + "%" },
                                r.animate
                              ),
                          1 === o &&
                            l.range[c ? "animate" : "css"](
                              { height: i - t + "%" },
                              { queue: !1, duration: r.animate }
                            ))),
                    (t = i);
                })
              : ((o = this.value()),
                (a = this._valueMin()),
                (n = this._valueMax()),
                (i = n !== a ? ((o - a) / (n - a)) * 100 : 0),
                (d["horizontal" === this.orientation ? "left" : "bottom"] =
                  i + "%"),
                this.handle.stop(1, 1)[c ? "animate" : "css"](d, r.animate),
                "min" === s &&
                  "horizontal" === this.orientation &&
                  this.range
                    .stop(1, 1)
                    [c ? "animate" : "css"]({ width: i + "%" }, r.animate),
                "max" === s &&
                  "horizontal" === this.orientation &&
                  this.range[c ? "animate" : "css"](
                    { width: 100 - i + "%" },
                    { queue: !1, duration: r.animate }
                  ),
                "min" === s &&
                  "vertical" === this.orientation &&
                  this.range
                    .stop(1, 1)
                    [c ? "animate" : "css"]({ height: i + "%" }, r.animate),
                "max" === s &&
                  "vertical" === this.orientation &&
                  this.range[c ? "animate" : "css"](
                    { height: 100 - i + "%" },
                    { queue: !1, duration: r.animate }
                  ));
          },
          _handleEvents: {
            keydown: function (t) {
              var o,
                a,
                n,
                s = e(t.target).data("ui-slider-handle-index");
              switch (t.keyCode) {
                case e.ui.keyCode.HOME:
                case e.ui.keyCode.END:
                case e.ui.keyCode.PAGE_UP:
                case e.ui.keyCode.PAGE_DOWN:
                case e.ui.keyCode.UP:
                case e.ui.keyCode.RIGHT:
                case e.ui.keyCode.DOWN:
                case e.ui.keyCode.LEFT:
                  if (
                    (t.preventDefault(),
                    !this._keySliding &&
                      ((this._keySliding = !0),
                      e(t.target).addClass("ui-state-active"),
                      !1 === this._start(t, s)))
                  )
                    return;
              }
              switch (
                ((n = this.options.step),
                (o = a =
                  this.options.values && this.options.values.length
                    ? this.values(s)
                    : this.value()),
                t.keyCode)
              ) {
                case e.ui.keyCode.HOME:
                  a = this._valueMin();
                  break;
                case e.ui.keyCode.END:
                  a = this._valueMax();
                  break;
                case e.ui.keyCode.PAGE_UP:
                  a = this._trimAlignValue(
                    o + (this._valueMax() - this._valueMin()) / i
                  );
                  break;
                case e.ui.keyCode.PAGE_DOWN:
                  a = this._trimAlignValue(
                    o - (this._valueMax() - this._valueMin()) / i
                  );
                  break;
                case e.ui.keyCode.UP:
                case e.ui.keyCode.RIGHT:
                  if (o === this._valueMax()) return;
                  a = this._trimAlignValue(o + n);
                  break;
                case e.ui.keyCode.DOWN:
                case e.ui.keyCode.LEFT:
                  if (o === this._valueMin()) return;
                  a = this._trimAlignValue(o - n);
              }
              this._slide(t, s, a);
            },
            click: function (e) {
              e.preventDefault();
            },
            keyup: function (t) {
              var i = e(t.target).data("ui-slider-handle-index");
              this._keySliding &&
                ((this._keySliding = !1),
                this._stop(t, i),
                this._change(t, i),
                e(t.target).removeClass("ui-state-active"));
            },
          },
        });
      })(jQuery),
      (function (e) {
        function t(e) {
          return function () {
            var t = this.element.val();
            e.apply(this, arguments),
              this._refresh(),
              t !== this.element.val() && this._trigger("change");
          };
        }
        e.widget("ui.spinner", {
          version: "1.10.4",
          defaultElement: "<input>",
          widgetEventPrefix: "spin",
          options: {
            culture: null,
            icons: { down: "ui-icon-triangle-1-s", up: "ui-icon-triangle-1-n" },
            incremental: !0,
            max: null,
            min: null,
            numberFormat: null,
            page: 10,
            step: 1,
            change: null,
            spin: null,
            start: null,
            stop: null,
          },
          _create: function () {
            this._setOption("max", this.options.max),
              this._setOption("min", this.options.min),
              this._setOption("step", this.options.step),
              "" !== this.value() && this._value(this.element.val(), !0),
              this._draw(),
              this._on(this._events),
              this._refresh(),
              this._on(this.window, {
                beforeunload: function () {
                  this.element.removeAttr("autocomplete");
                },
              });
          },
          _getCreateOptions: function () {
            var t = {},
              i = this.element;
            return (
              e.each(["min", "max", "step"], function (e, o) {
                var a = i.attr(o);
                void 0 !== a && a.length && (t[o] = a);
              }),
              t
            );
          },
          _events: {
            keydown: function (e) {
              this._start(e) && this._keydown(e) && e.preventDefault();
            },
            keyup: "_stop",
            focus: function () {
              this.previous = this.element.val();
            },
            blur: function (e) {
              this.cancelBlur
                ? delete this.cancelBlur
                : (this._stop(),
                  this._refresh(),
                  this.previous !== this.element.val() &&
                    this._trigger("change", e));
            },
            mousewheel: function (e, t) {
              if (t) {
                if (!this.spinning && !this._start(e)) return !1;
                this._spin((t > 0 ? 1 : -1) * this.options.step, e),
                  clearTimeout(this.mousewheelTimer),
                  (this.mousewheelTimer = this._delay(function () {
                    this.spinning && this._stop(e);
                  }, 100)),
                  e.preventDefault();
              }
            },
            "mousedown .ui-spinner-button": function (t) {
              var i;
              function o() {
                this.element[0] === this.document[0].activeElement ||
                  (this.element.focus(),
                  (this.previous = i),
                  this._delay(function () {
                    this.previous = i;
                  }));
              }
              (i =
                this.element[0] === this.document[0].activeElement
                  ? this.previous
                  : this.element.val()),
                t.preventDefault(),
                o.call(this),
                (this.cancelBlur = !0),
                this._delay(function () {
                  delete this.cancelBlur, o.call(this);
                }),
                !1 !== this._start(t) &&
                  this._repeat(
                    null,
                    e(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1,
                    t
                  );
            },
            "mouseup .ui-spinner-button": "_stop",
            "mouseenter .ui-spinner-button": function (t) {
              if (e(t.currentTarget).hasClass("ui-state-active"))
                return (
                  !1 !== this._start(t) &&
                  void this._repeat(
                    null,
                    e(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1,
                    t
                  )
                );
            },
            "mouseleave .ui-spinner-button": "_stop",
          },
          _draw: function () {
            var e = (this.uiSpinner = this.element
              .addClass("ui-spinner-input")
              .attr("autocomplete", "off")
              .wrap(this._uiSpinnerHtml())
              .parent()
              .append(this._buttonHtml()));
            this.element.attr("role", "spinbutton"),
              (this.buttons = e
                .find(".ui-spinner-button")
                .attr("tabIndex", -1)
                .button()
                .removeClass("ui-corner-all")),
              this.buttons.height() > Math.ceil(0.5 * e.height()) &&
                e.height() > 0 &&
                e.height(e.height()),
              this.options.disabled && this.disable();
          },
          _keydown: function (t) {
            var i = this.options,
              o = e.ui.keyCode;
            switch (t.keyCode) {
              case o.UP:
                return this._repeat(null, 1, t), !0;
              case o.DOWN:
                return this._repeat(null, -1, t), !0;
              case o.PAGE_UP:
                return this._repeat(null, i.page, t), !0;
              case o.PAGE_DOWN:
                return this._repeat(null, -i.page, t), !0;
            }
            return !1;
          },
          _uiSpinnerHtml: function () {
            return "<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>";
          },
          _buttonHtml: function () {
            return (
              "<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon " +
              this.options.icons.up +
              "'>&#9650;</span></a><a class='ui-spinner-button ui-spinner-down ui-corner-br'><span class='ui-icon " +
              this.options.icons.down +
              "'>&#9660;</span></a>"
            );
          },
          _start: function (e) {
            return (
              !(!this.spinning && !1 === this._trigger("start", e)) &&
              (this.counter || (this.counter = 1), (this.spinning = !0), !0)
            );
          },
          _repeat: function (e, t, i) {
            (e = e || 500),
              clearTimeout(this.timer),
              (this.timer = this._delay(function () {
                this._repeat(40, t, i);
              }, e)),
              this._spin(t * this.options.step, i);
          },
          _spin: function (e, t) {
            var i = this.value() || 0;
            this.counter || (this.counter = 1),
              (i = this._adjustValue(i + e * this._increment(this.counter))),
              (this.spinning &&
                !1 === this._trigger("spin", t, { value: i })) ||
                (this._value(i), this.counter++);
          },
          _increment: function (t) {
            var i = this.options.incremental;
            return i
              ? e.isFunction(i)
                ? i(t)
                : Math.floor(
                    (t * t * t) / 5e4 - (t * t) / 500 + (17 * t) / 200 + 1
                  )
              : 1;
          },
          _precision: function () {
            var e = this._precisionOf(this.options.step);
            return (
              null !== this.options.min &&
                (e = Math.max(e, this._precisionOf(this.options.min))),
              e
            );
          },
          _precisionOf: function (e) {
            var t = e.toString(),
              i = t.indexOf(".");
            return -1 === i ? 0 : t.length - i - 1;
          },
          _adjustValue: function (e) {
            var t,
              i,
              o = this.options;
            return (
              (i = e - (t = null !== o.min ? o.min : 0)),
              (e = t + (i = Math.round(i / o.step) * o.step)),
              (e = parseFloat(e.toFixed(this._precision()))),
              null !== o.max && e > o.max
                ? o.max
                : null !== o.min && e < o.min
                ? o.min
                : e
            );
          },
          _stop: function (e) {
            this.spinning &&
              (clearTimeout(this.timer),
              clearTimeout(this.mousewheelTimer),
              (this.counter = 0),
              (this.spinning = !1),
              this._trigger("stop", e));
          },
          _setOption: function (e, t) {
            if ("culture" === e || "numberFormat" === e) {
              var i = this._parse(this.element.val());
              return (
                (this.options[e] = t), void this.element.val(this._format(i))
              );
            }
            ("max" !== e && "min" !== e && "step" !== e) ||
              ("string" == typeof t && (t = this._parse(t))),
              "icons" === e &&
                (this.buttons
                  .first()
                  .find(".ui-icon")
                  .removeClass(this.options.icons.up)
                  .addClass(t.up),
                this.buttons
                  .last()
                  .find(".ui-icon")
                  .removeClass(this.options.icons.down)
                  .addClass(t.down)),
              this._super(e, t),
              "disabled" === e &&
                (t
                  ? (this.element.prop("disabled", !0),
                    this.buttons.button("disable"))
                  : (this.element.prop("disabled", !1),
                    this.buttons.button("enable")));
          },
          _setOptions: t(function (e) {
            this._super(e), this._value(this.element.val());
          }),
          _parse: function (e) {
            return (
              "string" == typeof e &&
                "" !== e &&
                (e =
                  window.Globalize && this.options.numberFormat
                    ? Globalize.parseFloat(e, 10, this.options.culture)
                    : +e),
              "" === e || isNaN(e) ? null : e
            );
          },
          _format: function (e) {
            return "" === e
              ? ""
              : window.Globalize && this.options.numberFormat
              ? Globalize.format(
                  e,
                  this.options.numberFormat,
                  this.options.culture
                )
              : e;
          },
          _refresh: function () {
            this.element.attr({
              "aria-valuemin": this.options.min,
              "aria-valuemax": this.options.max,
              "aria-valuenow": this._parse(this.element.val()),
            });
          },
          _value: function (e, t) {
            var i;
            "" !== e &&
              null !== (i = this._parse(e)) &&
              (t || (i = this._adjustValue(i)), (e = this._format(i))),
              this.element.val(e),
              this._refresh();
          },
          _destroy: function () {
            this.element
              .removeClass("ui-spinner-input")
              .prop("disabled", !1)
              .removeAttr("autocomplete")
              .removeAttr("role")
              .removeAttr("aria-valuemin")
              .removeAttr("aria-valuemax")
              .removeAttr("aria-valuenow"),
              this.uiSpinner.replaceWith(this.element);
          },
          stepUp: t(function (e) {
            this._stepUp(e);
          }),
          _stepUp: function (e) {
            this._start() &&
              (this._spin((e || 1) * this.options.step), this._stop());
          },
          stepDown: t(function (e) {
            this._stepDown(e);
          }),
          _stepDown: function (e) {
            this._start() &&
              (this._spin((e || 1) * -this.options.step), this._stop());
          },
          pageUp: t(function (e) {
            this._stepUp((e || 1) * this.options.page);
          }),
          pageDown: t(function (e) {
            this._stepDown((e || 1) * this.options.page);
          }),
          value: function (e) {
            if (!arguments.length) return this._parse(this.element.val());
            t(this._value).call(this, e);
          },
          widget: function () {
            return this.uiSpinner;
          },
        });
      })(jQuery),
      (function (e, t) {
        var i = 0,
          o = /#.*$/;
        function a() {
          return ++i;
        }
        function n(e) {
          return (
            (e = e.cloneNode(!1)).hash.length > 1 &&
            decodeURIComponent(e.href.replace(o, "")) ===
              decodeURIComponent(location.href.replace(o, ""))
          );
        }
        e.widget("ui.tabs", {
          version: "1.10.4",
          delay: 300,
          options: {
            active: null,
            collapsible: !1,
            event: "click",
            heightStyle: "content",
            hide: null,
            show: null,
            activate: null,
            beforeActivate: null,
            beforeLoad: null,
            load: null,
          },
          _create: function () {
            var t = this,
              i = this.options;
            (this.running = !1),
              this.element
                .addClass("ui-tabs ui-widget ui-widget-content ui-corner-all")
                .toggleClass("ui-tabs-collapsible", i.collapsible)
                .delegate(
                  ".ui-tabs-nav > li",
                  "mousedown" + this.eventNamespace,
                  function (t) {
                    e(this).is(".ui-state-disabled") && t.preventDefault();
                  }
                )
                .delegate(
                  ".ui-tabs-anchor",
                  "focus" + this.eventNamespace,
                  function () {
                    e(this).closest("li").is(".ui-state-disabled") &&
                      this.blur();
                  }
                ),
              this._processTabs(),
              (i.active = this._initialActive()),
              e.isArray(i.disabled) &&
                (i.disabled = e
                  .unique(
                    i.disabled.concat(
                      e.map(
                        this.tabs.filter(".ui-state-disabled"),
                        function (e) {
                          return t.tabs.index(e);
                        }
                      )
                    )
                  )
                  .sort()),
              !1 !== this.options.active && this.anchors.length
                ? (this.active = this._findActive(i.active))
                : (this.active = e()),
              this._refresh(),
              this.active.length && this.load(i.active);
          },
          _initialActive: function () {
            var t = this.options.active,
              i = this.options.collapsible,
              o = location.hash.substring(1);
            return (
              null === t &&
                (o &&
                  this.tabs.each(function (i, a) {
                    if (e(a).attr("aria-controls") === o) return (t = i), !1;
                  }),
                null === t &&
                  (t = this.tabs.index(this.tabs.filter(".ui-tabs-active"))),
                (null !== t && -1 !== t) || (t = !!this.tabs.length && 0)),
              !1 !== t &&
                -1 === (t = this.tabs.index(this.tabs.eq(t))) &&
                (t = !i && 0),
              !i && !1 === t && this.anchors.length && (t = 0),
              t
            );
          },
          _getCreateEventData: function () {
            return {
              tab: this.active,
              panel: this.active.length
                ? this._getPanelForTab(this.active)
                : e(),
            };
          },
          _tabKeydown: function (t) {
            var i = e(this.document[0].activeElement).closest("li"),
              o = this.tabs.index(i),
              a = !0;
            if (!this._handlePageNav(t)) {
              switch (t.keyCode) {
                case e.ui.keyCode.RIGHT:
                case e.ui.keyCode.DOWN:
                  o++;
                  break;
                case e.ui.keyCode.UP:
                case e.ui.keyCode.LEFT:
                  (a = !1), o--;
                  break;
                case e.ui.keyCode.END:
                  o = this.anchors.length - 1;
                  break;
                case e.ui.keyCode.HOME:
                  o = 0;
                  break;
                case e.ui.keyCode.SPACE:
                  return (
                    t.preventDefault(),
                    clearTimeout(this.activating),
                    void this._activate(o)
                  );
                case e.ui.keyCode.ENTER:
                  return (
                    t.preventDefault(),
                    clearTimeout(this.activating),
                    void this._activate(o !== this.options.active && o)
                  );
                default:
                  return;
              }
              t.preventDefault(),
                clearTimeout(this.activating),
                (o = this._focusNextTab(o, a)),
                t.ctrlKey ||
                  (i.attr("aria-selected", "false"),
                  this.tabs.eq(o).attr("aria-selected", "true"),
                  (this.activating = this._delay(function () {
                    this.option("active", o);
                  }, this.delay)));
            }
          },
          _panelKeydown: function (t) {
            this._handlePageNav(t) ||
              (t.ctrlKey &&
                t.keyCode === e.ui.keyCode.UP &&
                (t.preventDefault(), this.active.focus()));
          },
          _handlePageNav: function (t) {
            return t.altKey && t.keyCode === e.ui.keyCode.PAGE_UP
              ? (this._activate(
                  this._focusNextTab(this.options.active - 1, !1)
                ),
                !0)
              : t.altKey && t.keyCode === e.ui.keyCode.PAGE_DOWN
              ? (this._activate(
                  this._focusNextTab(this.options.active + 1, !0)
                ),
                !0)
              : void 0;
          },
          _findNextTab: function (t, i) {
            var o = this.tabs.length - 1;
            function a() {
              return t > o && (t = 0), t < 0 && (t = o), t;
            }
            for (; -1 !== e.inArray(a(), this.options.disabled); )
              t = i ? t + 1 : t - 1;
            return t;
          },
          _focusNextTab: function (e, t) {
            return (e = this._findNextTab(e, t)), this.tabs.eq(e).focus(), e;
          },
          _setOption: function (e, t) {
            "active" !== e
              ? "disabled" !== e
                ? (this._super(e, t),
                  "collapsible" === e &&
                    (this.element.toggleClass("ui-tabs-collapsible", t),
                    t || !1 !== this.options.active || this._activate(0)),
                  "event" === e && this._setupEvents(t),
                  "heightStyle" === e && this._setupHeightStyle(t))
                : this._setupDisabled(t)
              : this._activate(t);
          },
          _tabId: function (e) {
            return e.attr("aria-controls") || "ui-tabs-" + a();
          },
          _sanitizeSelector: function (e) {
            return e
              ? e.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&")
              : "";
          },
          refresh: function () {
            var t = this.options,
              i = this.tablist.children(":has(a[href])");
            (t.disabled = e.map(i.filter(".ui-state-disabled"), function (e) {
              return i.index(e);
            })),
              this._processTabs(),
              !1 !== t.active && this.anchors.length
                ? this.active.length &&
                  !e.contains(this.tablist[0], this.active[0])
                  ? this.tabs.length === t.disabled.length
                    ? ((t.active = !1), (this.active = e()))
                    : this._activate(
                        this._findNextTab(Math.max(0, t.active - 1), !1)
                      )
                  : (t.active = this.tabs.index(this.active))
                : ((t.active = !1), (this.active = e())),
              this._refresh();
          },
          _refresh: function () {
            this._setupDisabled(this.options.disabled),
              this._setupEvents(this.options.event),
              this._setupHeightStyle(this.options.heightStyle),
              this.tabs
                .not(this.active)
                .attr({ "aria-selected": "false", tabIndex: -1 }),
              this.panels
                .not(this._getPanelForTab(this.active))
                .hide()
                .attr({ "aria-expanded": "false", "aria-hidden": "true" }),
              this.active.length
                ? (this.active
                    .addClass("ui-tabs-active ui-state-active")
                    .attr({ "aria-selected": "true", tabIndex: 0 }),
                  this._getPanelForTab(this.active)
                    .show()
                    .attr({ "aria-expanded": "true", "aria-hidden": "false" }))
                : this.tabs.eq(0).attr("tabIndex", 0);
          },
          _processTabs: function () {
            var t = this;
            (this.tablist = this._getList()
              .addClass(
                "ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"
              )
              .attr("role", "tablist")),
              (this.tabs = this.tablist
                .find("> li:has(a[href])")
                .addClass("ui-state-default ui-corner-top")
                .attr({ role: "tab", tabIndex: -1 })),
              (this.anchors = this.tabs
                .map(function () {
                  return e("a", this)[0];
                })
                .addClass("ui-tabs-anchor")
                .attr({ role: "presentation", tabIndex: -1 })),
              (this.panels = e()),
              this.anchors.each(function (i, o) {
                var a,
                  s,
                  r,
                  l = e(o).uniqueId().attr("id"),
                  c = e(o).closest("li"),
                  d = c.attr("aria-controls");
                n(o)
                  ? ((a = o.hash), (s = t.element.find(t._sanitizeSelector(a))))
                  : ((a = "#" + (r = t._tabId(c))),
                    (s = t.element.find(a)).length ||
                      (s = t._createPanel(r)).insertAfter(
                        t.panels[i - 1] || t.tablist
                      ),
                    s.attr("aria-live", "polite")),
                  s.length && (t.panels = t.panels.add(s)),
                  d && c.data("ui-tabs-aria-controls", d),
                  c.attr({
                    "aria-controls": a.substring(1),
                    "aria-labelledby": l,
                  }),
                  s.attr("aria-labelledby", l);
              }),
              this.panels
                .addClass("ui-tabs-panel ui-widget-content ui-corner-bottom")
                .attr("role", "tabpanel");
          },
          _getList: function () {
            return this.tablist || this.element.find("ol,ul").eq(0);
          },
          _createPanel: function (t) {
            return e("<div>")
              .attr("id", t)
              .addClass("ui-tabs-panel ui-widget-content ui-corner-bottom")
              .data("ui-tabs-destroy", !0);
          },
          _setupDisabled: function (t) {
            e.isArray(t) &&
              (t.length
                ? t.length === this.anchors.length && (t = !0)
                : (t = !1));
            for (var i, o = 0; (i = this.tabs[o]); o++)
              !0 === t || -1 !== e.inArray(o, t)
                ? e(i)
                    .addClass("ui-state-disabled")
                    .attr("aria-disabled", "true")
                : e(i)
                    .removeClass("ui-state-disabled")
                    .removeAttr("aria-disabled");
            this.options.disabled = t;
          },
          _setupEvents: function (t) {
            var i = {
              click: function (e) {
                e.preventDefault();
              },
            };
            t &&
              e.each(t.split(" "), function (e, t) {
                i[t] = "_eventHandler";
              }),
              this._off(this.anchors.add(this.tabs).add(this.panels)),
              this._on(this.anchors, i),
              this._on(this.tabs, { keydown: "_tabKeydown" }),
              this._on(this.panels, { keydown: "_panelKeydown" }),
              this._focusable(this.tabs),
              this._hoverable(this.tabs);
          },
          _setupHeightStyle: function (t) {
            var i,
              o = this.element.parent();
            "fill" === t
              ? ((i = o.height()),
                (i -= this.element.outerHeight() - this.element.height()),
                this.element.siblings(":visible").each(function () {
                  var t = e(this),
                    o = t.css("position");
                  "absolute" !== o && "fixed" !== o && (i -= t.outerHeight(!0));
                }),
                this.element
                  .children()
                  .not(this.panels)
                  .each(function () {
                    i -= e(this).outerHeight(!0);
                  }),
                this.panels
                  .each(function () {
                    e(this).height(
                      Math.max(0, i - e(this).innerHeight() + e(this).height())
                    );
                  })
                  .css("overflow", "auto"))
              : "auto" === t &&
                ((i = 0),
                this.panels
                  .each(function () {
                    i = Math.max(i, e(this).height("").height());
                  })
                  .height(i));
          },
          _eventHandler: function (t) {
            var i = this.options,
              o = this.active,
              a = e(t.currentTarget).closest("li"),
              n = a[0] === o[0],
              s = n && i.collapsible,
              r = s ? e() : this._getPanelForTab(a),
              l = o.length ? this._getPanelForTab(o) : e(),
              c = { oldTab: o, oldPanel: l, newTab: s ? e() : a, newPanel: r };
            t.preventDefault(),
              a.hasClass("ui-state-disabled") ||
                a.hasClass("ui-tabs-loading") ||
                this.running ||
                (n && !i.collapsible) ||
                !1 === this._trigger("beforeActivate", t, c) ||
                ((i.active = !s && this.tabs.index(a)),
                (this.active = n ? e() : a),
                this.xhr && this.xhr.abort(),
                l.length ||
                  r.length ||
                  e.error("jQuery UI Tabs: Mismatching fragment identifier."),
                r.length && this.load(this.tabs.index(a), t),
                this._toggle(t, c));
          },
          _toggle: function (t, i) {
            var o = this,
              a = i.newPanel,
              n = i.oldPanel;
            function s() {
              (o.running = !1), o._trigger("activate", t, i);
            }
            function r() {
              i.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),
                a.length && o.options.show
                  ? o._show(a, o.options.show, s)
                  : (a.show(), s());
            }
            (this.running = !0),
              n.length && this.options.hide
                ? this._hide(n, this.options.hide, function () {
                    i.oldTab
                      .closest("li")
                      .removeClass("ui-tabs-active ui-state-active"),
                      r();
                  })
                : (i.oldTab
                    .closest("li")
                    .removeClass("ui-tabs-active ui-state-active"),
                  n.hide(),
                  r()),
              n.attr({ "aria-expanded": "false", "aria-hidden": "true" }),
              i.oldTab.attr("aria-selected", "false"),
              a.length && n.length
                ? i.oldTab.attr("tabIndex", -1)
                : a.length &&
                  this.tabs
                    .filter(function () {
                      return 0 === e(this).attr("tabIndex");
                    })
                    .attr("tabIndex", -1),
              a.attr({ "aria-expanded": "true", "aria-hidden": "false" }),
              i.newTab.attr({ "aria-selected": "true", tabIndex: 0 });
          },
          _activate: function (t) {
            var i,
              o = this._findActive(t);
            o[0] !== this.active[0] &&
              (o.length || (o = this.active),
              (i = o.find(".ui-tabs-anchor")[0]),
              this._eventHandler({
                target: i,
                currentTarget: i,
                preventDefault: e.noop,
              }));
          },
          _findActive: function (t) {
            return !1 === t ? e() : this.tabs.eq(t);
          },
          _getIndex: function (e) {
            return (
              "string" == typeof e &&
                (e = this.anchors.index(
                  this.anchors.filter("[href$='" + e + "']")
                )),
              e
            );
          },
          _destroy: function () {
            this.xhr && this.xhr.abort(),
              this.element.removeClass(
                "ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"
              ),
              this.tablist
                .removeClass(
                  "ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"
                )
                .removeAttr("role"),
              this.anchors
                .removeClass("ui-tabs-anchor")
                .removeAttr("role")
                .removeAttr("tabIndex")
                .removeUniqueId(),
              this.tabs.add(this.panels).each(function () {
                e.data(this, "ui-tabs-destroy")
                  ? e(this).remove()
                  : e(this)
                      .removeClass(
                        "ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel"
                      )
                      .removeAttr("tabIndex")
                      .removeAttr("aria-live")
                      .removeAttr("aria-busy")
                      .removeAttr("aria-selected")
                      .removeAttr("aria-labelledby")
                      .removeAttr("aria-hidden")
                      .removeAttr("aria-expanded")
                      .removeAttr("role");
              }),
              this.tabs.each(function () {
                var t = e(this),
                  i = t.data("ui-tabs-aria-controls");
                i
                  ? t
                      .attr("aria-controls", i)
                      .removeData("ui-tabs-aria-controls")
                  : t.removeAttr("aria-controls");
              }),
              this.panels.show(),
              "content" !== this.options.heightStyle &&
                this.panels.css("height", "");
          },
          enable: function (i) {
            var o = this.options.disabled;
            !1 !== o &&
              (i === t
                ? (o = !1)
                : ((i = this._getIndex(i)),
                  (o = e.isArray(o)
                    ? e.map(o, function (e) {
                        return e !== i ? e : null;
                      })
                    : e.map(this.tabs, function (e, t) {
                        return t !== i ? t : null;
                      }))),
              this._setupDisabled(o));
          },
          disable: function (i) {
            var o = this.options.disabled;
            if (!0 !== o) {
              if (i === t) o = !0;
              else {
                if (((i = this._getIndex(i)), -1 !== e.inArray(i, o))) return;
                o = e.isArray(o) ? e.merge([i], o).sort() : [i];
              }
              this._setupDisabled(o);
            }
          },
          load: function (t, i) {
            t = this._getIndex(t);
            var o = this,
              a = this.tabs.eq(t),
              s = a.find(".ui-tabs-anchor"),
              r = this._getPanelForTab(a),
              l = { tab: a, panel: r };
            n(s[0]) ||
              ((this.xhr = e.ajax(this._ajaxSettings(s, i, l))),
              this.xhr &&
                "canceled" !== this.xhr.statusText &&
                (a.addClass("ui-tabs-loading"),
                r.attr("aria-busy", "true"),
                this.xhr
                  .success(function (e) {
                    setTimeout(function () {
                      r.html(e), o._trigger("load", i, l);
                    }, 1);
                  })
                  .complete(function (e, t) {
                    setTimeout(function () {
                      "abort" === t && o.panels.stop(!1, !0),
                        a.removeClass("ui-tabs-loading"),
                        r.removeAttr("aria-busy"),
                        e === o.xhr && delete o.xhr;
                    }, 1);
                  })));
          },
          _ajaxSettings: function (t, i, o) {
            var a = this;
            return {
              url: t.attr("href"),
              beforeSend: function (t, n) {
                return a._trigger(
                  "beforeLoad",
                  i,
                  e.extend({ jqXHR: t, ajaxSettings: n }, o)
                );
              },
            };
          },
          _getPanelForTab: function (t) {
            var i = e(t).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + i));
          },
        });
      })(jQuery),
      (function (e) {
        var t = 0;
        function i(t, i) {
          var o = (t.attr("aria-describedby") || "").split(/\s+/);
          o.push(i),
            t
              .data("ui-tooltip-id", i)
              .attr("aria-describedby", e.trim(o.join(" ")));
        }
        function o(t) {
          var i = t.data("ui-tooltip-id"),
            o = (t.attr("aria-describedby") || "").split(/\s+/),
            a = e.inArray(i, o);
          -1 !== a && o.splice(a, 1),
            t.removeData("ui-tooltip-id"),
            (o = e.trim(o.join(" ")))
              ? t.attr("aria-describedby", o)
              : t.removeAttr("aria-describedby");
        }
        e.widget("ui.tooltip", {
          version: "1.10.4",
          options: {
            content: function () {
              var t = e(this).attr("title") || "";
              return e("<a>").text(t).html();
            },
            hide: !0,
            items: "[title]:not([disabled])",
            position: {
              my: "left top+15",
              at: "left bottom",
              collision: "flipfit flip",
            },
            show: !0,
            tooltipClass: null,
            track: !1,
            close: null,
            open: null,
          },
          _create: function () {
            this._on({ mouseover: "open", focusin: "open" }),
              (this.tooltips = {}),
              (this.parents = {}),
              this.options.disabled && this._disable();
          },
          _setOption: function (t, i) {
            var o = this;
            if ("disabled" === t)
              return (
                this[i ? "_disable" : "_enable"](), void (this.options[t] = i)
              );
            this._super(t, i),
              "content" === t &&
                e.each(this.tooltips, function (e, t) {
                  o._updateContent(t);
                });
          },
          _disable: function () {
            var t = this;
            e.each(this.tooltips, function (i, o) {
              var a = e.Event("blur");
              (a.target = a.currentTarget = o[0]), t.close(a, !0);
            }),
              this.element
                .find(this.options.items)
                .addBack()
                .each(function () {
                  var t = e(this);
                  t.is("[title]") &&
                    t
                      .data("ui-tooltip-title", t.attr("title"))
                      .attr("title", "");
                });
          },
          _enable: function () {
            this.element
              .find(this.options.items)
              .addBack()
              .each(function () {
                var t = e(this);
                t.data("ui-tooltip-title") &&
                  t.attr("title", t.data("ui-tooltip-title"));
              });
          },
          open: function (t) {
            var i = this,
              o = e(t ? t.target : this.element).closest(this.options.items);
            o.length &&
              !o.data("ui-tooltip-id") &&
              (o.attr("title") && o.data("ui-tooltip-title", o.attr("title")),
              o.data("ui-tooltip-open", !0),
              t &&
                "mouseover" === t.type &&
                o.parents().each(function () {
                  var t,
                    o = e(this);
                  o.data("ui-tooltip-open") &&
                    (((t = e.Event("blur")).target = t.currentTarget = this),
                    i.close(t, !0)),
                    o.attr("title") &&
                      (o.uniqueId(),
                      (i.parents[this.id] = {
                        element: this,
                        title: o.attr("title"),
                      }),
                      o.attr("title", ""));
                }),
              this._updateContent(o, t));
          },
          _updateContent: function (e, t) {
            var i,
              o = this.options.content,
              a = this,
              n = t ? t.type : null;
            if ("string" == typeof o) return this._open(t, e, o);
            (i = o.call(e[0], function (i) {
              e.data("ui-tooltip-open") &&
                a._delay(function () {
                  t && (t.type = n), this._open(t, e, i);
                });
            })) && this._open(t, e, i);
          },
          _open: function (t, o, a) {
            var n,
              s,
              r,
              l = e.extend({}, this.options.position);
            function c(e) {
              (l.of = e), n.is(":hidden") || n.position(l);
            }
            a &&
              ((n = this._find(o)).length
                ? n.find(".ui-tooltip-content").html(a)
                : (o.is("[title]") &&
                    (t && "mouseover" === t.type
                      ? o.attr("title", "")
                      : o.removeAttr("title")),
                  (n = this._tooltip(o)),
                  i(o, n.attr("id")),
                  n.find(".ui-tooltip-content").html(a),
                  this.options.track && t && /^mouse/.test(t.type)
                    ? (this._on(this.document, { mousemove: c }), c(t))
                    : n.position(e.extend({ of: o }, this.options.position)),
                  n.hide(),
                  this._show(n, this.options.show),
                  this.options.show &&
                    this.options.show.delay &&
                    (r = this.delayedShow =
                      setInterval(function () {
                        n.is(":visible") && (c(l.of), clearInterval(r));
                      }, e.fx.interval)),
                  this._trigger("open", t, { tooltip: n }),
                  (s = {
                    keyup: function (t) {
                      if (t.keyCode === e.ui.keyCode.ESCAPE) {
                        var i = e.Event(t);
                        (i.currentTarget = o[0]), this.close(i, !0);
                      }
                    },
                    remove: function () {
                      this._removeTooltip(n);
                    },
                  }),
                  (t && "mouseover" !== t.type) || (s.mouseleave = "close"),
                  (t && "focusin" !== t.type) || (s.focusout = "close"),
                  this._on(!0, o, s)));
          },
          close: function (t) {
            var i = this,
              a = e(t ? t.currentTarget : this.element),
              n = this._find(a);
            this.closing ||
              (clearInterval(this.delayedShow),
              a.data("ui-tooltip-title") &&
                a.attr("title", a.data("ui-tooltip-title")),
              o(a),
              n.stop(!0),
              this._hide(n, this.options.hide, function () {
                i._removeTooltip(e(this));
              }),
              a.removeData("ui-tooltip-open"),
              this._off(a, "mouseleave focusout keyup"),
              a[0] !== this.element[0] && this._off(a, "remove"),
              this._off(this.document, "mousemove"),
              t &&
                "mouseleave" === t.type &&
                e.each(this.parents, function (t, o) {
                  e(o.element).attr("title", o.title), delete i.parents[t];
                }),
              (this.closing = !0),
              this._trigger("close", t, { tooltip: n }),
              (this.closing = !1));
          },
          _tooltip: function (i) {
            var o = "ui-tooltip-" + t++,
              a = e("<div>")
                .attr({ id: o, role: "tooltip" })
                .addClass(
                  "ui-tooltip ui-widget ui-corner-all ui-widget-content " +
                    (this.options.tooltipClass || "")
                );
            return (
              e("<div>").addClass("ui-tooltip-content").appendTo(a),
              a.appendTo(this.document[0].body),
              (this.tooltips[o] = i),
              a
            );
          },
          _find: function (t) {
            var i = t.data("ui-tooltip-id");
            return i ? e("#" + i) : e();
          },
          _removeTooltip: function (e) {
            e.remove(), delete this.tooltips[e.attr("id")];
          },
          _destroy: function () {
            var t = this;
            e.each(this.tooltips, function (i, o) {
              var a = e.Event("blur");
              (a.target = a.currentTarget = o[0]),
                t.close(a, !0),
                e("#" + i).remove(),
                o.data("ui-tooltip-title") &&
                  (o.attr("title", o.data("ui-tooltip-title")),
                  o.removeData("ui-tooltip-title"));
            });
          },
        });
      })(jQuery),
      (function (e, t) {
        var i,
          o = "ui-effects-";
        (e.effects = { effect: {} }),
          (function (e, t) {
            var i,
              o =
                "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",
              a = /^([\-+])=\s*(\d+\.?\d*)/,
              n = [
                {
                  re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                  parse: function (e) {
                    return [e[1], e[2], e[3], e[4]];
                  },
                },
                {
                  re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                  parse: function (e) {
                    return [2.55 * e[1], 2.55 * e[2], 2.55 * e[3], e[4]];
                  },
                },
                {
                  re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
                  parse: function (e) {
                    return [
                      parseInt(e[1], 16),
                      parseInt(e[2], 16),
                      parseInt(e[3], 16),
                    ];
                  },
                },
                {
                  re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
                  parse: function (e) {
                    return [
                      parseInt(e[1] + e[1], 16),
                      parseInt(e[2] + e[2], 16),
                      parseInt(e[3] + e[3], 16),
                    ];
                  },
                },
                {
                  re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
                  space: "hsla",
                  parse: function (e) {
                    return [e[1], e[2] / 100, e[3] / 100, e[4]];
                  },
                },
              ],
              s = (e.Color = function (t, i, o, a) {
                return new e.Color.fn.parse(t, i, o, a);
              }),
              r = {
                rgba: {
                  props: {
                    red: { idx: 0, type: "byte" },
                    green: { idx: 1, type: "byte" },
                    blue: { idx: 2, type: "byte" },
                  },
                },
                hsla: {
                  props: {
                    hue: { idx: 0, type: "degrees" },
                    saturation: { idx: 1, type: "percent" },
                    lightness: { idx: 2, type: "percent" },
                  },
                },
              },
              l = {
                byte: { floor: !0, max: 255 },
                percent: { max: 1 },
                degrees: { mod: 360, floor: !0 },
              },
              c = (s.support = {}),
              d = e("<p>")[0],
              u = e.each;
            function p(e, t, i) {
              var o = l[t.type] || {};
              return null == e
                ? i || !t.def
                  ? null
                  : t.def
                : ((e = o.floor ? ~~e : parseFloat(e)),
                  isNaN(e)
                    ? t.def
                    : o.mod
                    ? (e + o.mod) % o.mod
                    : 0 > e
                    ? 0
                    : o.max < e
                    ? o.max
                    : e);
            }
            function h(t) {
              var o = s(),
                a = (o._rgba = []);
              return (
                (t = t.toLowerCase()),
                u(n, function (e, i) {
                  var n,
                    s = i.re.exec(t),
                    l = s && i.parse(s),
                    c = i.space || "rgba";
                  if (l)
                    return (
                      (n = o[c](l)),
                      (o[r[c].cache] = n[r[c].cache]),
                      (a = o._rgba = n._rgba),
                      !1
                    );
                }),
                a.length
                  ? ("0,0,0,0" === a.join() && e.extend(a, i.transparent), o)
                  : i[t]
              );
            }
            function m(e, t, i) {
              return 6 * (i = (i + 1) % 1) < 1
                ? e + (t - e) * i * 6
                : 2 * i < 1
                ? t
                : 3 * i < 2
                ? e + (t - e) * (2 / 3 - i) * 6
                : e;
            }
            (d.style.cssText = "background-color:rgba(1,1,1,.5)"),
              (c.rgba = d.style.backgroundColor.indexOf("rgba") > -1),
              u(r, function (e, t) {
                (t.cache = "_" + e),
                  (t.props.alpha = { idx: 3, type: "percent", def: 1 });
              }),
              (s.fn = e.extend(s.prototype, {
                parse: function (o, a, n, l) {
                  if (o === t)
                    return (this._rgba = [null, null, null, null]), this;
                  (o.jquery || o.nodeType) && ((o = e(o).css(a)), (a = t));
                  var c = this,
                    d = e.type(o),
                    m = (this._rgba = []);
                  return (
                    a !== t && ((o = [o, a, n, l]), (d = "array")),
                    "string" === d
                      ? this.parse(h(o) || i._default)
                      : "array" === d
                      ? (u(r.rgba.props, function (e, t) {
                          m[t.idx] = p(o[t.idx], t);
                        }),
                        this)
                      : "object" === d
                      ? (u(
                          r,
                          o instanceof s
                            ? function (e, t) {
                                o[t.cache] && (c[t.cache] = o[t.cache].slice());
                              }
                            : function (t, i) {
                                var a = i.cache;
                                u(i.props, function (e, t) {
                                  if (!c[a] && i.to) {
                                    if ("alpha" === e || null == o[e]) return;
                                    c[a] = i.to(c._rgba);
                                  }
                                  c[a][t.idx] = p(o[e], t, !0);
                                }),
                                  c[a] &&
                                    e.inArray(null, c[a].slice(0, 3)) < 0 &&
                                    ((c[a][3] = 1),
                                    i.from && (c._rgba = i.from(c[a])));
                              }
                        ),
                        this)
                      : void 0
                  );
                },
                is: function (e) {
                  var t = s(e),
                    i = !0,
                    o = this;
                  return (
                    u(r, function (e, a) {
                      var n,
                        s = t[a.cache];
                      return (
                        s &&
                          ((n = o[a.cache] || (a.to && a.to(o._rgba)) || []),
                          u(a.props, function (e, t) {
                            if (null != s[t.idx])
                              return (i = s[t.idx] === n[t.idx]);
                          })),
                        i
                      );
                    }),
                    i
                  );
                },
                _space: function () {
                  var e = [],
                    t = this;
                  return (
                    u(r, function (i, o) {
                      t[o.cache] && e.push(i);
                    }),
                    e.pop()
                  );
                },
                transition: function (e, t) {
                  var i = s(e),
                    o = i._space(),
                    a = r[o],
                    n = 0 === this.alpha() ? s("transparent") : this,
                    c = n[a.cache] || a.to(n._rgba),
                    d = c.slice();
                  return (
                    (i = i[a.cache]),
                    u(a.props, function (e, o) {
                      var a = o.idx,
                        n = c[a],
                        s = i[a],
                        r = l[o.type] || {};
                      null !== s &&
                        (null === n
                          ? (d[a] = s)
                          : (r.mod &&
                              (s - n > r.mod / 2
                                ? (n += r.mod)
                                : n - s > r.mod / 2 && (n -= r.mod)),
                            (d[a] = p((s - n) * t + n, o))));
                    }),
                    this[o](d)
                  );
                },
                blend: function (t) {
                  if (1 === this._rgba[3]) return this;
                  var i = this._rgba.slice(),
                    o = i.pop(),
                    a = s(t)._rgba;
                  return s(
                    e.map(i, function (e, t) {
                      return (1 - o) * a[t] + o * e;
                    })
                  );
                },
                toRgbaString: function () {
                  var t = "rgba(",
                    i = e.map(this._rgba, function (e, t) {
                      return null == e ? (t > 2 ? 1 : 0) : e;
                    });
                  return (
                    1 === i[3] && (i.pop(), (t = "rgb(")), t + i.join() + ")"
                  );
                },
                toHslaString: function () {
                  var t = "hsla(",
                    i = e.map(this.hsla(), function (e, t) {
                      return (
                        null == e && (e = t > 2 ? 1 : 0),
                        t && t < 3 && (e = Math.round(100 * e) + "%"),
                        e
                      );
                    });
                  return (
                    1 === i[3] && (i.pop(), (t = "hsl(")), t + i.join() + ")"
                  );
                },
                toHexString: function (t) {
                  var i = this._rgba.slice(),
                    o = i.pop();
                  return (
                    t && i.push(~~(255 * o)),
                    "#" +
                      e
                        .map(i, function (e) {
                          return 1 === (e = (e || 0).toString(16)).length
                            ? "0" + e
                            : e;
                        })
                        .join("")
                  );
                },
                toString: function () {
                  return 0 === this._rgba[3]
                    ? "transparent"
                    : this.toRgbaString();
                },
              })),
              (s.fn.parse.prototype = s.fn),
              (r.hsla.to = function (e) {
                if (null == e[0] || null == e[1] || null == e[2])
                  return [null, null, null, e[3]];
                var t,
                  i,
                  o = e[0] / 255,
                  a = e[1] / 255,
                  n = e[2] / 255,
                  s = e[3],
                  r = Math.max(o, a, n),
                  l = Math.min(o, a, n),
                  c = r - l,
                  d = r + l,
                  u = 0.5 * d;
                return (
                  (t =
                    l === r
                      ? 0
                      : o === r
                      ? (60 * (a - n)) / c + 360
                      : a === r
                      ? (60 * (n - o)) / c + 120
                      : (60 * (o - a)) / c + 240),
                  (i = 0 === c ? 0 : u <= 0.5 ? c / d : c / (2 - d)),
                  [Math.round(t) % 360, i, u, null == s ? 1 : s]
                );
              }),
              (r.hsla.from = function (e) {
                if (null == e[0] || null == e[1] || null == e[2])
                  return [null, null, null, e[3]];
                var t = e[0] / 360,
                  i = e[1],
                  o = e[2],
                  a = e[3],
                  n = o <= 0.5 ? o * (1 + i) : o + i - o * i,
                  s = 2 * o - n;
                return [
                  Math.round(255 * m(s, n, t + 1 / 3)),
                  Math.round(255 * m(s, n, t)),
                  Math.round(255 * m(s, n, t - 1 / 3)),
                  a,
                ];
              }),
              u(r, function (i, o) {
                var n = o.props,
                  r = o.cache,
                  l = o.to,
                  c = o.from;
                (s.fn[i] = function (i) {
                  if ((l && !this[r] && (this[r] = l(this._rgba)), i === t))
                    return this[r].slice();
                  var o,
                    a = e.type(i),
                    d = "array" === a || "object" === a ? i : arguments,
                    h = this[r].slice();
                  return (
                    u(n, function (e, t) {
                      var i = d["object" === a ? e : t.idx];
                      null == i && (i = h[t.idx]), (h[t.idx] = p(i, t));
                    }),
                    c ? (((o = s(c(h)))[r] = h), o) : s(h)
                  );
                }),
                  u(n, function (t, o) {
                    s.fn[t] ||
                      (s.fn[t] = function (n) {
                        var s,
                          r = e.type(n),
                          l =
                            "alpha" === t ? (this._hsla ? "hsla" : "rgba") : i,
                          c = this[l](),
                          d = c[o.idx];
                        return "undefined" === r
                          ? d
                          : ("function" === r &&
                              ((n = n.call(this, d)), (r = e.type(n))),
                            null == n && o.empty
                              ? this
                              : ("string" === r &&
                                  (s = a.exec(n)) &&
                                  (n =
                                    d +
                                    parseFloat(s[2]) * ("+" === s[1] ? 1 : -1)),
                                (c[o.idx] = n),
                                this[l](c)));
                      });
                  });
              }),
              (s.hook = function (t) {
                var i = t.split(" ");
                u(i, function (t, i) {
                  (e.cssHooks[i] = {
                    set: function (t, o) {
                      var a,
                        n,
                        r = "";
                      if (
                        "transparent" !== o &&
                        ("string" !== e.type(o) || (a = h(o)))
                      ) {
                        if (((o = s(a || o)), !c.rgba && 1 !== o._rgba[3])) {
                          for (
                            n = "backgroundColor" === i ? t.parentNode : t;
                            ("" === r || "transparent" === r) && n && n.style;

                          )
                            try {
                              (r = e.css(n, "backgroundColor")),
                                (n = n.parentNode);
                            } catch (e) {}
                          o = o.blend(
                            r && "transparent" !== r ? r : "_default"
                          );
                        }
                        o = o.toRgbaString();
                      }
                      try {
                        t.style[i] = o;
                      } catch (e) {}
                    },
                  }),
                    (e.fx.step[i] = function (t) {
                      t.colorInit ||
                        ((t.start = s(t.elem, i)),
                        (t.end = s(t.end)),
                        (t.colorInit = !0)),
                        e.cssHooks[i].set(
                          t.elem,
                          t.start.transition(t.end, t.pos)
                        );
                    });
                });
              }),
              s.hook(o),
              (e.cssHooks.borderColor = {
                expand: function (e) {
                  var t = {};
                  return (
                    u(["Top", "Right", "Bottom", "Left"], function (i, o) {
                      t["border" + o + "Color"] = e;
                    }),
                    t
                  );
                },
              }),
              (i = e.Color.names =
                {
                  aqua: "#00ffff",
                  black: "#000000",
                  blue: "#0000ff",
                  fuchsia: "#ff00ff",
                  gray: "#808080",
                  green: "#008000",
                  lime: "#00ff00",
                  maroon: "#800000",
                  navy: "#000080",
                  olive: "#808000",
                  purple: "#800080",
                  red: "#ff0000",
                  silver: "#c0c0c0",
                  teal: "#008080",
                  white: "#ffffff",
                  yellow: "#ffff00",
                  transparent: [null, null, null, 0],
                  _default: "#ffffff",
                });
          })(jQuery),
          (function () {
            var i,
              o = ["add", "remove", "toggle"],
              a = {
                border: 1,
                borderBottom: 1,
                borderColor: 1,
                borderLeft: 1,
                borderRight: 1,
                borderTop: 1,
                borderWidth: 1,
                margin: 1,
                padding: 1,
              };
            function n(t) {
              var i,
                o,
                a = t.ownerDocument.defaultView
                  ? t.ownerDocument.defaultView.getComputedStyle(t, null)
                  : t.currentStyle,
                n = {};
              if (a && a.length && a[0] && a[a[0]])
                for (o = a.length; o--; )
                  "string" == typeof a[(i = a[o])] &&
                    (n[e.camelCase(i)] = a[i]);
              else for (i in a) "string" == typeof a[i] && (n[i] = a[i]);
              return n;
            }
            function s(t, i) {
              var o,
                n,
                s = {};
              for (o in i)
                (n = i[o]),
                  t[o] !== n &&
                    (a[o] ||
                      (!e.fx.step[o] && isNaN(parseFloat(n))) ||
                      (s[o] = n));
              return s;
            }
            e.each(
              [
                "borderLeftStyle",
                "borderRightStyle",
                "borderBottomStyle",
                "borderTopStyle",
              ],
              function (t, i) {
                e.fx.step[i] = function (e) {
                  (("none" !== e.end && !e.setAttr) ||
                    (1 === e.pos && !e.setAttr)) &&
                    (jQuery.style(e.elem, i, e.end), (e.setAttr = !0));
                };
              }
            ),
              e.fn.addBack ||
                (e.fn.addBack = function (e) {
                  return this.add(
                    null == e ? this.prevObject : this.prevObject.filter(e)
                  );
                }),
              (e.effects.animateClass = function (t, i, a, r) {
                var l = e.speed(i, a, r);
                return this.queue(function () {
                  var i,
                    a = e(this),
                    r = a.attr("class") || "",
                    c = l.children ? a.find("*").addBack() : a;
                  (c = c.map(function () {
                    return { el: e(this), start: n(this) };
                  })),
                    (i = function () {
                      e.each(o, function (e, i) {
                        t[i] && a[i + "Class"](t[i]);
                      });
                    })(),
                    (c = c.map(function () {
                      return (
                        (this.end = n(this.el[0])),
                        (this.diff = s(this.start, this.end)),
                        this
                      );
                    })),
                    a.attr("class", r),
                    (c = c.map(function () {
                      var t = this,
                        i = e.Deferred(),
                        o = e.extend({}, l, {
                          queue: !1,
                          complete: function () {
                            i.resolve(t);
                          },
                        });
                      return this.el.animate(this.diff, o), i.promise();
                    })),
                    e.when.apply(e, c.get()).done(function () {
                      i(),
                        e.each(arguments, function () {
                          var t = this.el;
                          e.each(this.diff, function (e) {
                            t.css(e, "");
                          });
                        }),
                        l.complete.call(a[0]);
                    });
                });
              }),
              e.fn.extend({
                addClass:
                  ((i = e.fn.addClass),
                  function (t, o, a, n) {
                    return o
                      ? e.effects.animateClass.call(this, { add: t }, o, a, n)
                      : i.apply(this, arguments);
                  }),
                removeClass: (function (t) {
                  return function (i, o, a, n) {
                    return arguments.length > 1
                      ? e.effects.animateClass.call(
                          this,
                          { remove: i },
                          o,
                          a,
                          n
                        )
                      : t.apply(this, arguments);
                  };
                })(e.fn.removeClass),
                toggleClass: (function (i) {
                  return function (o, a, n, s, r) {
                    return "boolean" == typeof a || a === t
                      ? n
                        ? e.effects.animateClass.call(
                            this,
                            a ? { add: o } : { remove: o },
                            n,
                            s,
                            r
                          )
                        : i.apply(this, arguments)
                      : e.effects.animateClass.call(
                          this,
                          { toggle: o },
                          a,
                          n,
                          s
                        );
                  };
                })(e.fn.toggleClass),
                switchClass: function (t, i, o, a, n) {
                  return e.effects.animateClass.call(
                    this,
                    { add: i, remove: t },
                    o,
                    a,
                    n
                  );
                },
              });
          })(),
          (function () {
            function i(t, i, o, a) {
              return (
                e.isPlainObject(t) && ((i = t), (t = t.effect)),
                (t = { effect: t }),
                null == i && (i = {}),
                e.isFunction(i) && ((a = i), (o = null), (i = {})),
                ("number" == typeof i || e.fx.speeds[i]) &&
                  ((a = o), (o = i), (i = {})),
                e.isFunction(o) && ((a = o), (o = null)),
                i && e.extend(t, i),
                (o = o || i.duration),
                (t.duration = e.fx.off
                  ? 0
                  : "number" == typeof o
                  ? o
                  : o in e.fx.speeds
                  ? e.fx.speeds[o]
                  : e.fx.speeds._default),
                (t.complete = a || i.complete),
                t
              );
            }
            function a(t) {
              return (
                !(t && "number" != typeof t && !e.fx.speeds[t]) ||
                ("string" == typeof t && !e.effects.effect[t]) ||
                !!e.isFunction(t) ||
                ("object" == typeof t && !t.effect)
              );
            }
            var n;
            e.extend(e.effects, {
              version: "1.10.4",
              save: function (e, t) {
                for (var i = 0; i < t.length; i++)
                  null !== t[i] && e.data(o + t[i], e[0].style[t[i]]);
              },
              restore: function (e, i) {
                var a, n;
                for (n = 0; n < i.length; n++)
                  null !== i[n] &&
                    ((a = e.data(o + i[n])) === t && (a = ""), e.css(i[n], a));
              },
              setMode: function (e, t) {
                return (
                  "toggle" === t && (t = e.is(":hidden") ? "show" : "hide"), t
                );
              },
              getBaseline: function (e, t) {
                var i, o;
                switch (e[0]) {
                  case "top":
                    i = 0;
                    break;
                  case "middle":
                    i = 0.5;
                    break;
                  case "bottom":
                    i = 1;
                    break;
                  default:
                    i = e[0] / t.height;
                }
                switch (e[1]) {
                  case "left":
                    o = 0;
                    break;
                  case "center":
                    o = 0.5;
                    break;
                  case "right":
                    o = 1;
                    break;
                  default:
                    o = e[1] / t.width;
                }
                return { x: o, y: i };
              },
              createWrapper: function (t) {
                if (t.parent().is(".ui-effects-wrapper")) return t.parent();
                var i = {
                    width: t.outerWidth(!0),
                    height: t.outerHeight(!0),
                    float: t.css("float"),
                  },
                  o = e("<div></div>")
                    .addClass("ui-effects-wrapper")
                    .css({
                      fontSize: "100%",
                      background: "transparent",
                      border: "none",
                      margin: 0,
                      padding: 0,
                    }),
                  a = { width: t.width(), height: t.height() },
                  n = document.activeElement;
                try {
                  n.id;
                } catch (e) {
                  n = document.body;
                }
                return (
                  t.wrap(o),
                  (t[0] === n || e.contains(t[0], n)) && e(n).focus(),
                  (o = t.parent()),
                  "static" === t.css("position")
                    ? (o.css({ position: "relative" }),
                      t.css({ position: "relative" }))
                    : (e.extend(i, {
                        position: t.css("position"),
                        zIndex: t.css("z-index"),
                      }),
                      e.each(
                        ["top", "left", "bottom", "right"],
                        function (e, o) {
                          (i[o] = t.css(o)),
                            isNaN(parseInt(i[o], 10)) && (i[o] = "auto");
                        }
                      ),
                      t.css({
                        position: "relative",
                        top: 0,
                        left: 0,
                        right: "auto",
                        bottom: "auto",
                      })),
                  t.css(a),
                  o.css(i).show()
                );
              },
              removeWrapper: function (t) {
                var i = document.activeElement;
                return (
                  t.parent().is(".ui-effects-wrapper") &&
                    (t.parent().replaceWith(t),
                    (t[0] === i || e.contains(t[0], i)) && e(i).focus()),
                  t
                );
              },
              setTransition: function (t, i, o, a) {
                return (
                  (a = a || {}),
                  e.each(i, function (e, i) {
                    var n = t.cssUnit(i);
                    n[0] > 0 && (a[i] = n[0] * o + n[1]);
                  }),
                  a
                );
              },
            }),
              e.fn.extend({
                effect: function () {
                  var t = i.apply(this, arguments),
                    o = t.mode,
                    a = t.queue,
                    n = e.effects.effect[t.effect];
                  if (e.fx.off || !n)
                    return o
                      ? this[o](t.duration, t.complete)
                      : this.each(function () {
                          t.complete && t.complete.call(this);
                        });
                  function s(i) {
                    var o = e(this),
                      a = t.complete,
                      s = t.mode;
                    function r() {
                      e.isFunction(a) && a.call(o[0]), e.isFunction(i) && i();
                    }
                    (o.is(":hidden") ? "hide" === s : "show" === s)
                      ? (o[s](), r())
                      : n.call(o[0], t, r);
                  }
                  return !1 === a ? this.each(s) : this.queue(a || "fx", s);
                },
                show:
                  ((n = e.fn.show),
                  function (e) {
                    if (a(e)) return n.apply(this, arguments);
                    var t = i.apply(this, arguments);
                    return (t.mode = "show"), this.effect.call(this, t);
                  }),
                hide: (function (e) {
                  return function (t) {
                    if (a(t)) return e.apply(this, arguments);
                    var o = i.apply(this, arguments);
                    return (o.mode = "hide"), this.effect.call(this, o);
                  };
                })(e.fn.hide),
                toggle: (function (e) {
                  return function (t) {
                    if (a(t) || "boolean" == typeof t)
                      return e.apply(this, arguments);
                    var o = i.apply(this, arguments);
                    return (o.mode = "toggle"), this.effect.call(this, o);
                  };
                })(e.fn.toggle),
                cssUnit: function (t) {
                  var i = this.css(t),
                    o = [];
                  return (
                    e.each(["em", "px", "%", "pt"], function (e, t) {
                      i.indexOf(t) > 0 && (o = [parseFloat(i), t]);
                    }),
                    o
                  );
                },
              });
          })(),
          (i = {}),
          e.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function (e, t) {
            i[t] = function (t) {
              return Math.pow(t, e + 2);
            };
          }),
          e.extend(i, {
            Sine: function (e) {
              return 1 - Math.cos((e * Math.PI) / 2);
            },
            Circ: function (e) {
              return 1 - Math.sqrt(1 - e * e);
            },
            Elastic: function (e) {
              return 0 === e || 1 === e
                ? e
                : -Math.pow(2, 8 * (e - 1)) *
                    Math.sin(((80 * (e - 1) - 7.5) * Math.PI) / 15);
            },
            Back: function (e) {
              return e * e * (3 * e - 2);
            },
            Bounce: function (e) {
              for (var t, i = 4; e < ((t = Math.pow(2, --i)) - 1) / 11; );
              return (
                1 / Math.pow(4, 3 - i) -
                7.5625 * Math.pow((3 * t - 2) / 22 - e, 2)
              );
            },
          }),
          e.each(i, function (t, i) {
            (e.easing["easeIn" + t] = i),
              (e.easing["easeOut" + t] = function (e) {
                return 1 - i(1 - e);
              }),
              (e.easing["easeInOut" + t] = function (e) {
                return e < 0.5 ? i(2 * e) / 2 : 1 - i(-2 * e + 2) / 2;
              });
          });
      })(jQuery),
      (function (e, t) {
        var i = /up|down|vertical/,
          o = /up|left|vertical|horizontal/;
        e.effects.effect.blind = function (t, a) {
          var n,
            s,
            r,
            l = e(this),
            c = [
              "position",
              "top",
              "bottom",
              "left",
              "right",
              "height",
              "width",
            ],
            d = e.effects.setMode(l, t.mode || "hide"),
            u = t.direction || "up",
            p = i.test(u),
            h = p ? "height" : "width",
            m = p ? "top" : "left",
            f = o.test(u),
            g = {},
            v = "show" === d;
          l.parent().is(".ui-effects-wrapper")
            ? e.effects.save(l.parent(), c)
            : e.effects.save(l, c),
            l.show(),
            (s = (n = e.effects.createWrapper(l).css({ overflow: "hidden" }))[
              h
            ]()),
            (r = parseFloat(n.css(m)) || 0),
            (g[h] = v ? s : 0),
            f ||
              (l
                .css(p ? "bottom" : "right", 0)
                .css(p ? "top" : "left", "auto")
                .css({ position: "absolute" }),
              (g[m] = v ? r : s + r)),
            v && (n.css(h, 0), f || n.css(m, r + s)),
            n.animate(g, {
              duration: t.duration,
              easing: t.easing,
              queue: !1,
              complete: function () {
                "hide" === d && l.hide(),
                  e.effects.restore(l, c),
                  e.effects.removeWrapper(l),
                  a();
              },
            });
        };
      })(jQuery),
      (function (e, t) {
        e.effects.effect.bounce = function (t, i) {
          var o,
            a,
            n,
            s = e(this),
            r = [
              "position",
              "top",
              "bottom",
              "left",
              "right",
              "height",
              "width",
            ],
            l = e.effects.setMode(s, t.mode || "effect"),
            c = "hide" === l,
            d = "show" === l,
            u = t.direction || "up",
            p = t.distance,
            h = t.times || 5,
            m = 2 * h + (d || c ? 1 : 0),
            f = t.duration / m,
            g = t.easing,
            v = "up" === u || "down" === u ? "top" : "left",
            b = "up" === u || "left" === u,
            y = s.queue(),
            w = y.length;
          for (
            (d || c) && r.push("opacity"),
              e.effects.save(s, r),
              s.show(),
              e.effects.createWrapper(s),
              p || (p = s["top" === v ? "outerHeight" : "outerWidth"]() / 3),
              d &&
                (((n = { opacity: 1 })[v] = 0),
                s
                  .css("opacity", 0)
                  .css(v, b ? 2 * -p : 2 * p)
                  .animate(n, f, g)),
              c && (p /= Math.pow(2, h - 1)),
              (n = {})[v] = 0,
              o = 0;
            o < h;
            o++
          )
            ((a = {})[v] = (b ? "-=" : "+=") + p),
              s.animate(a, f, g).animate(n, f, g),
              (p = c ? 2 * p : p / 2);
          c &&
            (((a = { opacity: 0 })[v] = (b ? "-=" : "+=") + p),
            s.animate(a, f, g)),
            s.queue(function () {
              c && s.hide(),
                e.effects.restore(s, r),
                e.effects.removeWrapper(s),
                i();
            }),
            w > 1 && y.splice.apply(y, [1, 0].concat(y.splice(w, m + 1))),
            s.dequeue();
        };
      })(jQuery),
      (function (e, t) {
        e.effects.effect.clip = function (t, i) {
          var o,
            a,
            n,
            s = e(this),
            r = [
              "position",
              "top",
              "bottom",
              "left",
              "right",
              "height",
              "width",
            ],
            l = "show" === e.effects.setMode(s, t.mode || "hide"),
            c = "vertical" === (t.direction || "vertical"),
            d = c ? "height" : "width",
            u = c ? "top" : "left",
            p = {};
          e.effects.save(s, r),
            s.show(),
            (o = e.effects.createWrapper(s).css({ overflow: "hidden" })),
            (n = (a = "IMG" === s[0].tagName ? o : s)[d]()),
            l && (a.css(d, 0), a.css(u, n / 2)),
            (p[d] = l ? n : 0),
            (p[u] = l ? 0 : n / 2),
            a.animate(p, {
              queue: !1,
              duration: t.duration,
              easing: t.easing,
              complete: function () {
                l || s.hide(),
                  e.effects.restore(s, r),
                  e.effects.removeWrapper(s),
                  i();
              },
            });
        };
      })(jQuery),
      (function (e, t) {
        e.effects.effect.drop = function (t, i) {
          var o,
            a = e(this),
            n = [
              "position",
              "top",
              "bottom",
              "left",
              "right",
              "opacity",
              "height",
              "width",
            ],
            s = e.effects.setMode(a, t.mode || "hide"),
            r = "show" === s,
            l = t.direction || "left",
            c = "up" === l || "down" === l ? "top" : "left",
            d = "up" === l || "left" === l ? "pos" : "neg",
            u = { opacity: r ? 1 : 0 };
          e.effects.save(a, n),
            a.show(),
            e.effects.createWrapper(a),
            (o =
              t.distance ||
              a["top" === c ? "outerHeight" : "outerWidth"](!0) / 2),
            r && a.css("opacity", 0).css(c, "pos" === d ? -o : o),
            (u[c] =
              (r ? ("pos" === d ? "+=" : "-=") : "pos" === d ? "-=" : "+=") +
              o),
            a.animate(u, {
              queue: !1,
              duration: t.duration,
              easing: t.easing,
              complete: function () {
                "hide" === s && a.hide(),
                  e.effects.restore(a, n),
                  e.effects.removeWrapper(a),
                  i();
              },
            });
        };
      })(jQuery),
      (function (e, t) {
        e.effects.effect.explode = function (t, i) {
          var o,
            a,
            n,
            s,
            r,
            l,
            c = t.pieces ? Math.round(Math.sqrt(t.pieces)) : 3,
            d = c,
            u = e(this),
            p = "show" === e.effects.setMode(u, t.mode || "hide"),
            h = u.show().css("visibility", "hidden").offset(),
            m = Math.ceil(u.outerWidth() / d),
            f = Math.ceil(u.outerHeight() / c),
            g = [];
          function v() {
            g.push(this), g.length === c * d && b();
          }
          for (o = 0; o < c; o++)
            for (s = h.top + o * f, l = o - (c - 1) / 2, a = 0; a < d; a++)
              (n = h.left + a * m),
                (r = a - (d - 1) / 2),
                u
                  .clone()
                  .appendTo("body")
                  .wrap("<div></div>")
                  .css({
                    position: "absolute",
                    visibility: "visible",
                    left: -a * m,
                    top: -o * f,
                  })
                  .parent()
                  .addClass("ui-effects-explode")
                  .css({
                    position: "absolute",
                    overflow: "hidden",
                    width: m,
                    height: f,
                    left: n + (p ? r * m : 0),
                    top: s + (p ? l * f : 0),
                    opacity: p ? 0 : 1,
                  })
                  .animate(
                    {
                      left: n + (p ? 0 : r * m),
                      top: s + (p ? 0 : l * f),
                      opacity: p ? 1 : 0,
                    },
                    t.duration || 500,
                    t.easing,
                    v
                  );
          function b() {
            u.css({ visibility: "visible" }), e(g).remove(), p || u.hide(), i();
          }
        };
      })(jQuery),
      (function (e, t) {
        e.effects.effect.fade = function (t, i) {
          var o = e(this),
            a = e.effects.setMode(o, t.mode || "toggle");
          o.animate(
            { opacity: a },
            { queue: !1, duration: t.duration, easing: t.easing, complete: i }
          );
        };
      })(jQuery),
      (function (e, t) {
        e.effects.effect.fold = function (t, i) {
          var o,
            a,
            n = e(this),
            s = [
              "position",
              "top",
              "bottom",
              "left",
              "right",
              "height",
              "width",
            ],
            r = e.effects.setMode(n, t.mode || "hide"),
            l = "show" === r,
            c = "hide" === r,
            d = t.size || 15,
            u = /([0-9]+)%/.exec(d),
            p = !!t.horizFirst,
            h = l !== p,
            m = h ? ["width", "height"] : ["height", "width"],
            f = t.duration / 2,
            g = {},
            v = {};
          e.effects.save(n, s),
            n.show(),
            (o = e.effects.createWrapper(n).css({ overflow: "hidden" })),
            (a = h ? [o.width(), o.height()] : [o.height(), o.width()]),
            u && (d = (parseInt(u[1], 10) / 100) * a[c ? 0 : 1]),
            l && o.css(p ? { height: 0, width: d } : { height: d, width: 0 }),
            (g[m[0]] = l ? a[0] : d),
            (v[m[1]] = l ? a[1] : 0),
            o.animate(g, f, t.easing).animate(v, f, t.easing, function () {
              c && n.hide(),
                e.effects.restore(n, s),
                e.effects.removeWrapper(n),
                i();
            });
        };
      })(jQuery),
      (function (e, t) {
        e.effects.effect.highlight = function (t, i) {
          var o = e(this),
            a = ["backgroundImage", "backgroundColor", "opacity"],
            n = e.effects.setMode(o, t.mode || "show"),
            s = { backgroundColor: o.css("backgroundColor") };
          "hide" === n && (s.opacity = 0),
            e.effects.save(o, a),
            o
              .show()
              .css({
                backgroundImage: "none",
                backgroundColor: t.color || "#ffff99",
              })
              .animate(s, {
                queue: !1,
                duration: t.duration,
                easing: t.easing,
                complete: function () {
                  "hide" === n && o.hide(), e.effects.restore(o, a), i();
                },
              });
        };
      })(jQuery),
      (function (e, t) {
        e.effects.effect.pulsate = function (t, i) {
          var o,
            a = e(this),
            n = e.effects.setMode(a, t.mode || "show"),
            s = "show" === n,
            r = "hide" === n,
            l = s || "hide" === n,
            c = 2 * (t.times || 5) + (l ? 1 : 0),
            d = t.duration / c,
            u = 0,
            p = a.queue(),
            h = p.length;
          for (
            (!s && a.is(":visible")) || (a.css("opacity", 0).show(), (u = 1)),
              o = 1;
            o < c;
            o++
          )
            a.animate({ opacity: u }, d, t.easing), (u = 1 - u);
          a.animate({ opacity: u }, d, t.easing),
            a.queue(function () {
              r && a.hide(), i();
            }),
            h > 1 && p.splice.apply(p, [1, 0].concat(p.splice(h, c + 1))),
            a.dequeue();
        };
      })(jQuery),
      (function (e, t) {
        (e.effects.effect.puff = function (t, i) {
          var o = e(this),
            a = e.effects.setMode(o, t.mode || "hide"),
            n = "hide" === a,
            s = parseInt(t.percent, 10) || 150,
            r = s / 100,
            l = {
              height: o.height(),
              width: o.width(),
              outerHeight: o.outerHeight(),
              outerWidth: o.outerWidth(),
            };
          e.extend(t, {
            effect: "scale",
            queue: !1,
            fade: !0,
            mode: a,
            complete: i,
            percent: n ? s : 100,
            from: n
              ? l
              : {
                  height: l.height * r,
                  width: l.width * r,
                  outerHeight: l.outerHeight * r,
                  outerWidth: l.outerWidth * r,
                },
          }),
            o.effect(t);
        }),
          (e.effects.effect.scale = function (t, i) {
            var o = e(this),
              a = e.extend(!0, {}, t),
              n = e.effects.setMode(o, t.mode || "effect"),
              s =
                parseInt(t.percent, 10) ||
                (0 === parseInt(t.percent, 10) || "hide" === n ? 0 : 100),
              r = t.direction || "both",
              l = t.origin,
              c = {
                height: o.height(),
                width: o.width(),
                outerHeight: o.outerHeight(),
                outerWidth: o.outerWidth(),
              },
              d = {
                y: "horizontal" !== r ? s / 100 : 1,
                x: "vertical" !== r ? s / 100 : 1,
              };
            (a.effect = "size"),
              (a.queue = !1),
              (a.complete = i),
              "effect" !== n &&
                ((a.origin = l || ["middle", "center"]), (a.restore = !0)),
              (a.from =
                t.from ||
                ("show" === n
                  ? { height: 0, width: 0, outerHeight: 0, outerWidth: 0 }
                  : c)),
              (a.to = {
                height: c.height * d.y,
                width: c.width * d.x,
                outerHeight: c.outerHeight * d.y,
                outerWidth: c.outerWidth * d.x,
              }),
              a.fade &&
                ("show" === n && ((a.from.opacity = 0), (a.to.opacity = 1)),
                "hide" === n && ((a.from.opacity = 1), (a.to.opacity = 0))),
              o.effect(a);
          }),
          (e.effects.effect.size = function (t, i) {
            var o,
              a,
              n,
              s = e(this),
              r = [
                "position",
                "top",
                "bottom",
                "left",
                "right",
                "width",
                "height",
                "overflow",
                "opacity",
              ],
              l = [
                "position",
                "top",
                "bottom",
                "left",
                "right",
                "overflow",
                "opacity",
              ],
              c = ["width", "height", "overflow"],
              d = ["fontSize"],
              u = [
                "borderTopWidth",
                "borderBottomWidth",
                "paddingTop",
                "paddingBottom",
              ],
              p = [
                "borderLeftWidth",
                "borderRightWidth",
                "paddingLeft",
                "paddingRight",
              ],
              h = e.effects.setMode(s, t.mode || "effect"),
              m = t.restore || "effect" !== h,
              f = t.scale || "both",
              g = t.origin || ["middle", "center"],
              v = s.css("position"),
              b = m ? r : l,
              y = { height: 0, width: 0, outerHeight: 0, outerWidth: 0 };
            "show" === h && s.show(),
              (o = {
                height: s.height(),
                width: s.width(),
                outerHeight: s.outerHeight(),
                outerWidth: s.outerWidth(),
              }),
              "toggle" === t.mode && "show" === h
                ? ((s.from = t.to || y), (s.to = t.from || o))
                : ((s.from = t.from || ("show" === h ? y : o)),
                  (s.to = t.to || ("hide" === h ? y : o))),
              (n = {
                from: {
                  y: s.from.height / o.height,
                  x: s.from.width / o.width,
                },
                to: { y: s.to.height / o.height, x: s.to.width / o.width },
              }),
              ("box" !== f && "both" !== f) ||
                (n.from.y !== n.to.y &&
                  ((b = b.concat(u)),
                  (s.from = e.effects.setTransition(s, u, n.from.y, s.from)),
                  (s.to = e.effects.setTransition(s, u, n.to.y, s.to))),
                n.from.x !== n.to.x &&
                  ((b = b.concat(p)),
                  (s.from = e.effects.setTransition(s, p, n.from.x, s.from)),
                  (s.to = e.effects.setTransition(s, p, n.to.x, s.to)))),
              ("content" !== f && "both" !== f) ||
                (n.from.y !== n.to.y &&
                  ((b = b.concat(d).concat(c)),
                  (s.from = e.effects.setTransition(s, d, n.from.y, s.from)),
                  (s.to = e.effects.setTransition(s, d, n.to.y, s.to)))),
              e.effects.save(s, b),
              s.show(),
              e.effects.createWrapper(s),
              s.css("overflow", "hidden").css(s.from),
              g &&
                ((a = e.effects.getBaseline(g, o)),
                (s.from.top = (o.outerHeight - s.outerHeight()) * a.y),
                (s.from.left = (o.outerWidth - s.outerWidth()) * a.x),
                (s.to.top = (o.outerHeight - s.to.outerHeight) * a.y),
                (s.to.left = (o.outerWidth - s.to.outerWidth) * a.x)),
              s.css(s.from),
              ("content" !== f && "both" !== f) ||
                ((u = u.concat(["marginTop", "marginBottom"]).concat(d)),
                (p = p.concat(["marginLeft", "marginRight"])),
                (c = r.concat(u).concat(p)),
                s.find("*[width]").each(function () {
                  var i = e(this),
                    o = {
                      height: i.height(),
                      width: i.width(),
                      outerHeight: i.outerHeight(),
                      outerWidth: i.outerWidth(),
                    };
                  m && e.effects.save(i, c),
                    (i.from = {
                      height: o.height * n.from.y,
                      width: o.width * n.from.x,
                      outerHeight: o.outerHeight * n.from.y,
                      outerWidth: o.outerWidth * n.from.x,
                    }),
                    (i.to = {
                      height: o.height * n.to.y,
                      width: o.width * n.to.x,
                      outerHeight: o.height * n.to.y,
                      outerWidth: o.width * n.to.x,
                    }),
                    n.from.y !== n.to.y &&
                      ((i.from = e.effects.setTransition(
                        i,
                        u,
                        n.from.y,
                        i.from
                      )),
                      (i.to = e.effects.setTransition(i, u, n.to.y, i.to))),
                    n.from.x !== n.to.x &&
                      ((i.from = e.effects.setTransition(
                        i,
                        p,
                        n.from.x,
                        i.from
                      )),
                      (i.to = e.effects.setTransition(i, p, n.to.x, i.to))),
                    i.css(i.from),
                    i.animate(i.to, t.duration, t.easing, function () {
                      m && e.effects.restore(i, c);
                    });
                })),
              s.animate(s.to, {
                queue: !1,
                duration: t.duration,
                easing: t.easing,
                complete: function () {
                  0 === s.to.opacity && s.css("opacity", s.from.opacity),
                    "hide" === h && s.hide(),
                    e.effects.restore(s, b),
                    m ||
                      ("static" === v
                        ? s.css({
                            position: "relative",
                            top: s.to.top,
                            left: s.to.left,
                          })
                        : e.each(["top", "left"], function (e, t) {
                            s.css(t, function (t, i) {
                              var o = parseInt(i, 10),
                                a = e ? s.to.left : s.to.top;
                              return "auto" === i ? a + "px" : o + a + "px";
                            });
                          })),
                    e.effects.removeWrapper(s),
                    i();
                },
              });
          });
      })(jQuery),
      (function (e, t) {
        e.effects.effect.shake = function (t, i) {
          var o,
            a = e(this),
            n = [
              "position",
              "top",
              "bottom",
              "left",
              "right",
              "height",
              "width",
            ],
            s = e.effects.setMode(a, t.mode || "effect"),
            r = t.direction || "left",
            l = t.distance || 20,
            c = t.times || 3,
            d = 2 * c + 1,
            u = Math.round(t.duration / d),
            p = "up" === r || "down" === r ? "top" : "left",
            h = "up" === r || "left" === r,
            m = {},
            f = {},
            g = {},
            v = a.queue(),
            b = v.length;
          for (
            e.effects.save(a, n),
              a.show(),
              e.effects.createWrapper(a),
              m[p] = (h ? "-=" : "+=") + l,
              f[p] = (h ? "+=" : "-=") + 2 * l,
              g[p] = (h ? "-=" : "+=") + 2 * l,
              a.animate(m, u, t.easing),
              o = 1;
            o < c;
            o++
          )
            a.animate(f, u, t.easing).animate(g, u, t.easing);
          a
            .animate(f, u, t.easing)
            .animate(m, u / 2, t.easing)
            .queue(function () {
              "hide" === s && a.hide(),
                e.effects.restore(a, n),
                e.effects.removeWrapper(a),
                i();
            }),
            b > 1 && v.splice.apply(v, [1, 0].concat(v.splice(b, d + 1))),
            a.dequeue();
        };
      })(jQuery),
      (function (e, t) {
        e.effects.effect.slide = function (t, i) {
          var o,
            a = e(this),
            n = [
              "position",
              "top",
              "bottom",
              "left",
              "right",
              "width",
              "height",
            ],
            s = e.effects.setMode(a, t.mode || "show"),
            r = "show" === s,
            l = t.direction || "left",
            c = "up" === l || "down" === l ? "top" : "left",
            d = "up" === l || "left" === l,
            u = {};
          e.effects.save(a, n),
            a.show(),
            (o =
              t.distance || a["top" === c ? "outerHeight" : "outerWidth"](!0)),
            e.effects.createWrapper(a).css({ overflow: "hidden" }),
            r && a.css(c, d ? (isNaN(o) ? "-" + o : -o) : o),
            (u[c] = (r ? (d ? "+=" : "-=") : d ? "-=" : "+=") + o),
            a.animate(u, {
              queue: !1,
              duration: t.duration,
              easing: t.easing,
              complete: function () {
                "hide" === s && a.hide(),
                  e.effects.restore(a, n),
                  e.effects.removeWrapper(a),
                  i();
              },
            });
        };
      })(jQuery),
      (function (e, t) {
        e.effects.effect.transfer = function (t, i) {
          var o = e(this),
            a = e(t.to),
            n = "fixed" === a.css("position"),
            s = e("body"),
            r = n ? s.scrollTop() : 0,
            l = n ? s.scrollLeft() : 0,
            c = a.offset(),
            d = {
              top: c.top - r,
              left: c.left - l,
              height: a.innerHeight(),
              width: a.innerWidth(),
            },
            u = o.offset(),
            p = e("<div class='ui-effects-transfer'></div>")
              .appendTo(document.body)
              .addClass(t.className)
              .css({
                top: u.top - r,
                left: u.left - l,
                height: o.innerHeight(),
                width: o.innerWidth(),
                position: n ? "fixed" : "absolute",
              })
              .animate(d, t.duration, t.easing, function () {
                p.remove(), i();
              });
        };
      })(jQuery);
    i(
      "./node_modules/script-loader/index.js!./src/lib/jqueryui/jquery-ui-i18n.js"
    ),
      i(
        "./node_modules/script-loader/index.js!./src/lib/jqueryui/jquery.ui.touch-punch.min.js"
      ),
      i("./src/lib/excel/jszip.js");
    function a(e) {
      var t,
        i,
        o,
        a,
        n,
        s,
        r,
        l,
        c,
        d,
        u,
        p,
        h,
        m,
        f,
        g,
        v,
        b,
        y,
        w,
        x,
        T,
        C,
        k,
        S,
        $,
        _,
        E,
        D,
        N,
        M,
        I,
        R,
        F,
        A,
        O = new JSZip(),
        z = [[], []],
        L = [],
        j = [],
        P = [],
        H = [
          "General",
          "0",
          "0.00",
          "#,##0",
          "#,##0.00",
          ,
          ,
          ,
          ,
          "0%",
          "0.00%",
          "0.00E+00",
          "# ?/?",
          "# ??/??",
          "mm-dd-yy",
          "d-mmm-yy",
          "d-mmm",
          "mmm-yy",
          "h:mm AM/PM",
          "h:mm:ss AM/PM",
          "h:mm",
          "h:mm:ss",
          "m/d/yy h:mm",
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          "#,##0 ;(#,##0)",
          "#,##0 ;[Red](#,##0)",
          "#,##0.00;(#,##0.00)",
          "#,##0.00;[Red](#,##0.00)",
          ,
          ,
          ,
          ,
          "mm:ss",
          "[h]:mm:ss",
          "mmss.0",
          "##0.0E+0",
          "@",
        ],
        U = "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
        V = "Calibri",
        W = 11;
      function B(e) {
        var t = Math.floor(e / 26) - 1;
        return (t > -1 ? B(t) : "") + U.charAt(e % 26);
      }
      function q(e) {
        var t = 0;
        return (
          2 === e.length && (t = q(e.charAt(0)) + 1),
          26 * t + U.indexOf(e.substr(-1))
        );
      }
      function Y(e) {
        var t = new Date(1900, 0, 0),
          i = "object" == typeof e,
          o =
            6e4 *
            ((i ? e.getTimezoneOffset() : new Date().getTimezoneOffset()) -
              t.getTimezoneOffset());
        return i ? (e - t - o) / 864e5 + 1 : new Date(+t - o + 864e5 * (e - 1));
      }
      function G(e) {
        return {}.toString
          .call(e)
          .match(/\s([a-zA-Z]+)/)[1]
          .toLowerCase();
      }
      function X(e, t) {
        return (e = e.substr(e.indexOf(t + '="') + t.length + 2)).substring(
          0,
          e.indexOf('"')
        );
      }
      function K(e) {
        return "string" == typeof e
          ? e
              .replace(/&/g, "&amp;")
              .replace(/</g, "&lt;")
              .replace(/>/g, "&gt;")
              .replace(/"/g, "&quot;")
              .replace(/'/g, "&#x27;")
          : "";
      }
      function J(e) {
        return "string" == typeof e
          ? e
              .replace(/&amp;/g, "&")
              .replace(/&lt;/g, "<")
              .replace(/&gt;/g, ">")
              .replace(/&quot;/g, '"')
              .replace(/&#x27;/g, "'")
          : "";
      }
      if ("string" == typeof e) {
        if (
          ((i = Date.now()),
          (O = O.load(e, { base64: !0 })),
          (t = { worksheets: [], zipTime: Date.now() - i }),
          (o = Date.now()),
          (p = []),
          (h = []),
          (a = O.file("xl/sharedStrings.xml")))
        )
          for (s = (a = a.asText().split(/<t.*?>/g)).length; --s; )
            p[s - 1] = J(a[s].substring(0, a[s].indexOf("</t>")));
        if (
          ((a = O.file("docProps/core.xml")) &&
            ((a = (a = a.asText()).substr(a.indexOf("<dc:creator>") + 12)),
            (t.creator = a.substring(0, a.indexOf("</dc:creator>"))),
            (a = a.substr(a.indexOf("<cp:lastModifiedBy>") + 19)),
            (t.lastModifiedBy = a.substring(
              0,
              a.indexOf("</cp:lastModifiedBy>")
            )),
            (a = a.substr(
              a.indexOf('<dcterms:created xsi:type="dcterms:W3CDTF">') + 43
            )),
            (t.created = new Date(
              a.substring(0, a.indexOf("</dcterms:created>"))
            )),
            (a = a.substr(
              a.indexOf('<dcterms:modified xsi:type="dcterms:W3CDTF">') + 44
            )),
            (t.modified = new Date(
              a.substring(0, a.indexOf("</dcterms:modified>"))
            ))),
          (a = O.file("xl/workbook.xml")))
        )
          for (
            (m = (a = a.asText()).indexOf('activeTab="')) > 0
              ? ((a = a.substr(m + 11)),
                (t.activeWorksheet = +a.substring(0, a.indexOf('"'))))
              : (t.activeWorksheet = 0),
              s = (a = a.split("<sheet ")).length;
            --s;

          )
            (E = a[s].substr(a[s].indexOf('name="') + 6)),
              t.worksheets.unshift({
                name: E.substring(0, E.indexOf('"')),
                data: [],
              });
        if ((a = O.file("xl/styles.xml"))) {
          for (s = (a = a.asText().split("<numFmt ")).length; --s; )
            H[+X((d = a[s]), "numFmtId")] = X(d, "formatCode");
          for (
            s = (a = (a = a[a.length - 1])
              .substr(a.indexOf("cellXfs"))
              .split("<xf ")).length;
            --s;

          )
            (d =
              (n = H[(E = X(a[s], "numFmtId"))]).indexOf("m") > -1
                ? "date"
                : n.indexOf("0") > -1
                ? "number"
                : "@" === n
                ? "string"
                : "unknown"),
              h.unshift({ formatCode: n, type: d });
        }
        for (s = t.worksheets.length; s--; )
          for (
            a = O.file("xl/worksheets/sheet" + (s + 1) + ".xml")
              .asText()
              .split("<row "),
              (u = t.worksheets[s]).table = a[0].indexOf("<tableParts ") > 0,
              d = (d = X(
                a[0].substr(a[0].indexOf("<dimension")),
                "ref"
              )).substr(d.indexOf(":") + 1),
              u.maxCol = q(d.match(/[a-zA-Z]*/g)[0]) + 1,
              u.maxRow = +d.match(/\d*/g).join(""),
              u = u.data,
              r = a.length;
            --r;

          )
            for (
              R = u[+X(a[r], "r") - 1] = [], l = (D = a[r].split("<c ")).length;
              --l;

            ) {
              switch (
                ((n = h[+X((I = D[l]), "s")] || {
                  type: "General",
                  formatCode: "General",
                }),
                (d = X(I, "t") || n.type),
                (g = (g = I.substring(I.indexOf("<v>") + 3, I.indexOf("</v>")))
                  ? +g
                  : ""),
                d)
              ) {
                case "s":
                  g = p[g];
                  break;
                case "b":
                  g = 1 === g;
                  break;
                case "date":
                  g = Y(g);
              }
              R[q(X(I, "r").match(/[a-zA-Z]*/g)[0])] = {
                value: g,
                formatCode: n.formatCode,
              };
            }
        t.processTime = Date.now() - o;
      } else {
        (o = Date.now()), (p = []);
        var Z = {};
        for (
          O.folder("_rels").file(
            ".rels",
            '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId3" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties" Target="docProps/app.xml"/><Relationship Id="rId2" Type="http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties" Target="docProps/core.xml"/><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/></Relationships>'
          ),
            k = O.folder("docProps"),
            (S = O.folder("xl"))
              .folder("theme")
              .file(
                "theme1.xml",
                '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><a:theme xmlns:a="http://schemas.openxmlformats.org/drawingml/2006/main" name="Office Theme"><a:themeElements><a:clrScheme name="Office"><a:dk1><a:sysClr val="windowText" lastClr="000000"/></a:dk1><a:lt1><a:sysClr val="window" lastClr="FFFFFF"/></a:lt1><a:dk2><a:srgbClr val="1F497D"/></a:dk2><a:lt2><a:srgbClr val="EEECE1"/></a:lt2><a:accent1><a:srgbClr val="4F81BD"/></a:accent1><a:accent2><a:srgbClr val="C0504D"/></a:accent2><a:accent3><a:srgbClr val="9BBB59"/></a:accent3><a:accent4><a:srgbClr val="8064A2"/></a:accent4><a:accent5><a:srgbClr val="4BACC6"/></a:accent5><a:accent6><a:srgbClr val="F79646"/></a:accent6><a:hlink><a:srgbClr val="0000FF"/></a:hlink><a:folHlink><a:srgbClr val="800080"/></a:folHlink></a:clrScheme><a:fontScheme name="Office"><a:majorFont><a:latin typeface="Cambria"/><a:ea typeface=""/><a:cs typeface=""/><a:font script="Jpan" typeface="MS P????"/><a:font script="Hang" typeface="?? ??"/><a:font script="Hans" typeface="??"/><a:font script="Hant" typeface="????"/><a:font script="Arab" typeface="Times New Roman"/><a:font script="Hebr" typeface="Times New Roman"/><a:font script="Thai" typeface="Tahoma"/><a:font script="Ethi" typeface="Nyala"/><a:font script="Beng" typeface="Vrinda"/><a:font script="Gujr" typeface="Shruti"/><a:font script="Khmr" typeface="MoolBoran"/><a:font script="Knda" typeface="Tunga"/><a:font script="Guru" typeface="Raavi"/><a:font script="Cans" typeface="Euphemia"/><a:font script="Cher" typeface="Plantagenet Cherokee"/><a:font script="Yiii" typeface="Microsoft Yi Baiti"/><a:font script="Tibt" typeface="Microsoft Himalaya"/><a:font script="Thaa" typeface="MV Boli"/><a:font script="Deva" typeface="Mangal"/><a:font script="Telu" typeface="Gautami"/><a:font script="Taml" typeface="Latha"/><a:font script="Syrc" typeface="Estrangelo Edessa"/><a:font script="Orya" typeface="Kalinga"/><a:font script="Mlym" typeface="Kartika"/><a:font script="Laoo" typeface="DokChampa"/><a:font script="Sinh" typeface="Iskoola Pota"/><a:font script="Mong" typeface="Mongolian Baiti"/><a:font script="Viet" typeface="Times New Roman"/><a:font script="Uigh" typeface="Microsoft Uighur"/><a:font script="Geor" typeface="Sylfaen"/></a:majorFont><a:minorFont><a:latin typeface="Calibri"/><a:ea typeface=""/><a:cs typeface=""/><a:font script="Jpan" typeface="MS P????"/><a:font script="Hang" typeface="?? ??"/><a:font script="Hans" typeface="??"/><a:font script="Hant" typeface="????"/><a:font script="Arab" typeface="Arial"/><a:font script="Hebr" typeface="Arial"/><a:font script="Thai" typeface="Tahoma"/><a:font script="Ethi" typeface="Nyala"/><a:font script="Beng" typeface="Vrinda"/><a:font script="Gujr" typeface="Shruti"/><a:font script="Khmr" typeface="DaunPenh"/><a:font script="Knda" typeface="Tunga"/><a:font script="Guru" typeface="Raavi"/><a:font script="Cans" typeface="Euphemia"/><a:font script="Cher" typeface="Plantagenet Cherokee"/><a:font script="Yiii" typeface="Microsoft Yi Baiti"/><a:font script="Tibt" typeface="Microsoft Himalaya"/><a:font script="Thaa" typeface="MV Boli"/><a:font script="Deva" typeface="Mangal"/><a:font script="Telu" typeface="Gautami"/><a:font script="Taml" typeface="Latha"/><a:font script="Syrc" typeface="Estrangelo Edessa"/><a:font script="Orya" typeface="Kalinga"/><a:font script="Mlym" typeface="Kartika"/><a:font script="Laoo" typeface="DokChampa"/><a:font script="Sinh" typeface="Iskoola Pota"/><a:font script="Mong" typeface="Mongolian Baiti"/><a:font script="Viet" typeface="Arial"/><a:font script="Uigh" typeface="Microsoft Uighur"/><a:font script="Geor" typeface="Sylfaen"/></a:minorFont></a:fontScheme><a:fmtScheme name="Office"><a:fillStyleLst><a:solidFill><a:schemeClr val="phClr"/></a:solidFill><a:gradFill rotWithShape="1"><a:gsLst><a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="50000"/><a:satMod val="300000"/></a:schemeClr></a:gs><a:gs pos="35000"><a:schemeClr val="phClr"><a:tint val="37000"/><a:satMod val="300000"/></a:schemeClr></a:gs><a:gs pos="100000"><a:schemeClr val="phClr"><a:tint val="15000"/><a:satMod val="350000"/></a:schemeClr></a:gs></a:gsLst><a:lin ang="16200000" scaled="1"/></a:gradFill><a:gradFill rotWithShape="1"><a:gsLst><a:gs pos="0"><a:schemeClr val="phClr"><a:shade val="51000"/><a:satMod val="130000"/></a:schemeClr></a:gs><a:gs pos="80000"><a:schemeClr val="phClr"><a:shade val="93000"/><a:satMod val="130000"/></a:schemeClr></a:gs><a:gs pos="100000"><a:schemeClr val="phClr"><a:shade val="94000"/><a:satMod val="135000"/></a:schemeClr></a:gs></a:gsLst><a:lin ang="16200000" scaled="0"/></a:gradFill></a:fillStyleLst><a:lnStyleLst><a:ln w="9525" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"><a:shade val="95000"/><a:satMod val="105000"/></a:schemeClr></a:solidFill><a:prstDash val="solid"/></a:ln><a:ln w="25400" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"/></a:solidFill><a:prstDash val="solid"/></a:ln><a:ln w="38100" cap="flat" cmpd="sng" algn="ctr"><a:solidFill><a:schemeClr val="phClr"/></a:solidFill><a:prstDash val="solid"/></a:ln></a:lnStyleLst><a:effectStyleLst><a:effectStyle><a:effectLst><a:outerShdw blurRad="40000" dist="20000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="38000"/></a:srgbClr></a:outerShdw></a:effectLst></a:effectStyle><a:effectStyle><a:effectLst><a:outerShdw blurRad="40000" dist="23000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="35000"/></a:srgbClr></a:outerShdw></a:effectLst></a:effectStyle><a:effectStyle><a:effectLst><a:outerShdw blurRad="40000" dist="23000" dir="5400000" rotWithShape="0"><a:srgbClr val="000000"><a:alpha val="35000"/></a:srgbClr></a:outerShdw></a:effectLst><a:scene3d><a:camera prst="orthographicFront"><a:rot lat="0" lon="0" rev="0"/></a:camera><a:lightRig rig="threePt" dir="t"><a:rot lat="0" lon="0" rev="1200000"/></a:lightRig></a:scene3d><a:sp3d><a:bevelT w="63500" h="25400"/></a:sp3d></a:effectStyle></a:effectStyleLst><a:bgFillStyleLst><a:solidFill><a:schemeClr val="phClr"/></a:solidFill><a:gradFill rotWithShape="1"><a:gsLst><a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="40000"/><a:satMod val="350000"/></a:schemeClr></a:gs><a:gs pos="40000"><a:schemeClr val="phClr"><a:tint val="45000"/><a:shade val="99000"/><a:satMod val="350000"/></a:schemeClr></a:gs><a:gs pos="100000"><a:schemeClr val="phClr"><a:shade val="20000"/><a:satMod val="255000"/></a:schemeClr></a:gs></a:gsLst><a:path path="circle"><a:fillToRect l="50000" t="-80000" r="50000" b="180000"/></a:path></a:gradFill><a:gradFill rotWithShape="1"><a:gsLst><a:gs pos="0"><a:schemeClr val="phClr"><a:tint val="80000"/><a:satMod val="300000"/></a:schemeClr></a:gs><a:gs pos="100000"><a:schemeClr val="phClr"><a:shade val="30000"/><a:satMod val="200000"/></a:schemeClr></a:gs></a:gsLst><a:path path="circle"><a:fillToRect l="50000" t="50000" r="50000" b="50000"/></a:path></a:gradFill></a:bgFillStyleLst></a:fmtScheme></a:themeElements><a:objectDefaults/><a:extraClrSchemeLst/></a:theme>'
              ),
            $ = S.folder("worksheets"),
            k.file(
              "core.xml",
              '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><cp:coreProperties xmlns:cp="http://schemas.openxmlformats.org/package/2006/metadata/core-properties" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:dcmitype="http://purl.org/dc/dcmitype/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><dc:creator>' +
                (e.creator || "XLSX.js") +
                "</dc:creator><cp:lastModifiedBy>" +
                (e.lastModifiedBy || "XLSX.js") +
                '</cp:lastModifiedBy><dcterms:created xsi:type="dcterms:W3CDTF">' +
                (e.created || new Date()).toISOString() +
                '</dcterms:created><dcterms:modified xsi:type="dcterms:W3CDTF">' +
                (e.modified || new Date()).toISOString() +
                "</dcterms:modified></cp:coreProperties>"
            ),
            h = new Array(1),
            b = new Array(1),
            x = new Array(1),
            u = e.worksheets.length;
          u--;

        ) {
          for (
            E = u + 1,
              a = "",
              D = [],
              F = [],
              s = -1,
              c = (f = (_ = e.worksheets[u]).data).length;
            ++s < c;

          ) {
            for (
              r = -1,
                l = f[s].length,
                a += '<row r="' + (s + 1) + '" x14ac:dyDescent="0.25">';
              ++r < l;

            ) {
              if (
                (null == (I = f[s][r]) && (I = ""),
                (g = I.hasOwnProperty("value") ? I.value : I),
                (d = ""),
                (v = {
                  borders: I.borders,
                  hAlign: I.hAlign,
                  vAlign: I.vAlign,
                  bold: I.bold,
                  italic: I.italic,
                  fontName: I.fontName,
                  fontSize: I.fontSize,
                  formatCode: I.formatCode || "General",
                }),
                (M = 0),
                g && "string" == typeof g
                  ? (void 0 === (m = Z[(g = K(g))]) &&
                      ((m = p.length), p.push(g), (Z[g] = m)),
                    (M = g.length),
                    (g = m),
                    (d = "s"))
                  : "boolean" == typeof g
                  ? ((g = g ? 1 : 0), (d = "b"), (M = 1))
                  : "date" === G(g)
                  ? ((g = Y(g)),
                    (v.formatCode = I.formatCode || "mm-dd-yy"),
                    (M = g.length))
                  : "object" == typeof g
                  ? (g = null)
                  : (M = ("" + g).length),
                (v = JSON.stringify(v)),
                (v = (m = h.indexOf(v)) < 0 ? h.push(v) - 1 : m),
                null == D[r] && (D[r] = { autoWidth: !1, max: 0 }),
                I.autoWidth && (D[r].autoWidth = !0),
                M > D[r].max && (D[r].max = M),
                I.colSpan > 1)
              ) {
                F.push([B(r) + (s + 1), B(r + I.colSpan - 1) + (s + 1)]),
                  (A = [r, 0]);
                for (var Q = 0; Q < I.colSpan - 1; Q++) A.push(I);
                f[s].splice.apply(f[s], A), (l += I.colSpan - 1);
              } else if (I.rowSpan > 1) {
                for (Q = 1; Q < I.rowSpan; Q++) {
                  if (!f[s + Q]) {
                    I.rowSpan = Q;
                    break;
                  }
                  f[s + Q].splice(r, 0, I);
                }
                F.push([B(r) + (s + 1), B(r) + (s + I.rowSpan)]);
              }
              (I.rowSpan > 1 || I.colSpan > 1) &&
                (delete I.value, delete I.rowSpan, delete I.colSpan),
                (a +=
                  '<c r="' +
                  B(r) +
                  (s + 1) +
                  '"' +
                  (v ? ' s="' + v + '"' : "") +
                  (d ? ' t="' + d + '"' : "")),
                (a +=
                  null != g
                    ? ">" +
                      (I.formula ? "<f>" + I.formula + "</f>" : "") +
                      "<v>" +
                      g +
                      "</v></c>"
                    : "/>");
            }
            a += "</row>";
          }
          for (N = [], s = 0; s < D.length; s++)
            D[s].autoWidth &&
              N.push(
                '<col min="',
                s + 1,
                '" max="',
                s + 1,
                '" width="',
                D[s].max,
                '" bestFit="1"/>'
              );
          if (
            (N.length > 0 && (N = ["<cols>"].concat(N, ["</cols>"]).join("")),
            (a =
              '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><dimension ref="A1:' +
              B(f[0].length - 1) +
              f.length +
              '"/><sheetViews><sheetView ' +
              (u === e.activeWorksheet ? 'tabSelected="1" ' : "") +
              ' workbookViewId="0"/></sheetViews><sheetFormatPr defaultRowHeight="15" x14ac:dyDescent="0.25"/>' +
              N +
              "<sheetData>" +
              a +
              "</sheetData>"),
            F.length > 0)
          ) {
            for (
              a += '<mergeCells count="' + F.length + '">', s = 0;
              s < F.length;
              s++
            )
              a += '<mergeCell ref="' + F[s].join(":") + '"/>';
            a += "</mergeCells>";
          }
          if (
            ((a +=
              '<pageMargins left="0.7" right="0.7" top="0.75" bottom="0.75" header="0.3" footer="0.3"/>'),
            _.table &&
              (a +=
                '<tableParts count="1"><tablePart r:id="rId1"/></tableParts>'),
            $.file("sheet" + E + ".xml", a + "</worksheet>"),
            _.table)
          ) {
            for (
              s = -1,
                c = f[0].length,
                a =
                  '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><table xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" id="' +
                  E +
                  '" name="Table' +
                  E +
                  '" displayName="Table' +
                  E +
                  '" ref="A1:' +
                  (d = B(f[0].length - 1) + f.length) +
                  '" totalsRowShown="0"><autoFilter ref="A1:' +
                  d +
                  '"/><tableColumns count="' +
                  f[0].length +
                  '">';
              ++s < c;

            )
              a +=
                '<tableColumn id="' +
                (s + 1) +
                '" name="' +
                (f[0][s].hasOwnProperty("value") ? f[0][s].value : f[0][s]) +
                '"/>';
            (a +=
              '</tableColumns><tableStyleInfo name="TableStyleMedium2" showFirstColumn="0" showLastColumn="0" showRowStripes="1" showColumnStripes="0"/></table>'),
              S.folder("tables").file("table" + E + ".xml", a),
              $.folder("_rels").file(
                "sheet" + E + ".xml.rels",
                '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/table" Target="../tables/table' +
                  E +
                  '.xml"/></Relationships>'
              ),
              z[1].unshift(
                '<Override PartName="/xl/tables/table' +
                  E +
                  '.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml"/>'
              );
          }
          z[0].unshift(
            '<Override PartName="/xl/worksheets/sheet' +
              E +
              '.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml"/>'
          ),
            L.unshift(K(_.name) || "Sheet" + E),
            j.unshift(
              '<Relationship Id="rId' +
                E +
                '" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet' +
                E +
                '.xml"/>'
            ),
            P.unshift(
              '<sheet name="' +
                (K(_.name) || "Sheet" + E) +
                '" sheetId="' +
                E +
                '" r:id="rId' +
                E +
                '"/>'
            );
        }
        for (s = h.length, d = []; --s; ) {
          if (
            ("General" !== (v = JSON.parse(h[s])).formatCode
              ? ((m = H.indexOf(v.formatCode)) < 0 &&
                  ((m = 164 + d.length),
                  d.push(
                    '<numFmt formatCode="' +
                      v.formatCode +
                      '" numFmtId="' +
                      m +
                      '"/>'
                  )),
                (v.formatCode = m))
              : (v.formatCode = 0),
            (w = 0),
            v.borders)
          ) {
            for (var ee in ((y = ["<border>"]),
            { left: 0, right: 0, top: 0, bottom: 0, diagonal: 0 }))
              if (v.borders[ee]) {
                var te = v.borders[ee];
                6 === te.length && (te = "FF" + te),
                  y.push(
                    "<",
                    ee,
                    ' style="thin">',
                    '<color rgb="',
                    v.borders[ee],
                    '"/></',
                    ee,
                    ">"
                  );
              } else y.push("<", ee, "/>");
            y.push("</border>"),
              (y = y.join("")),
              (w = b.indexOf(y)) < 0 && (w = b.push(y) - 1);
          }
          (C = 0),
            (v.bold || v.italic || v.fontSize || v.fontName) &&
              ((T = ["<font>"]),
              v.bold && T.push("<b/>"),
              v.italic && T.push("<i/>"),
              T.push('<sz val="', v.fontSize || W, '"/>'),
              T.push('<color theme="1"/>'),
              T.push('<name val="', v.fontName || V, '"/>'),
              T.push('<family val="2"/>', "</font>"),
              (T = T.join("")),
              (C = x.indexOf(T)) < 0 && (C = x.push(T) - 1)),
            (h[s] = [
              '<xf xfId="0" fillId="0" borderId="',
              w,
              '" fontId="',
              C,
              '" numFmtId="',
              v.formatCode,
              '" ',
              v.hAlign || v.vAlign ? 'applyAlignment="1" ' : " ",
              v.formatCode > 0 ? 'applyNumberFormat="1" ' : " ",
              w > 0 ? 'applyBorder="1" ' : " ",
              C > 0 ? 'applyFont="1" ' : " ",
              ">",
            ]),
            (v.hAlign || v.vAlign) &&
              (h[s].push("<alignment"),
              v.hAlign && h[s].push(' horizontal="', v.hAlign, '"'),
              v.vAlign && h[s].push(' vertical="', v.vAlign, '"'),
              h[s].push("/>")),
            h[s].push("</xf>"),
            (h[s] = h[s].join(""));
        }
        (d = d.length
          ? '<numFmts count="' + d.length + '">' + d.join("") + "</numFmts>"
          : ""),
          S.file(
            "styles.xml",
            '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac">' +
              d +
              '<fonts count="' +
              x.length +
              '" x14ac:knownFonts="1"><font><sz val="' +
              W +
              '"/><color theme="1"/><name val="' +
              V +
              '"/><family val="2"/><scheme val="minor"/></font>' +
              x.join("") +
              '</fonts><fills count="2"><fill><patternFill patternType="none"/></fill><fill><patternFill patternType="gray125"/></fill></fills><borders count="' +
              b.length +
              '"><border><left/><right/><top/><bottom/><diagonal/></border>' +
              b.join("") +
              '</borders><cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0"/></cellStyleXfs><cellXfs count="' +
              h.length +
              '"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" xfId="0"/>' +
              h.join("") +
              '</cellXfs><cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0"/></cellStyles><dxfs count="0"/><tableStyles count="0" defaultTableStyle="TableStyleMedium2" defaultPivotStyle="PivotStyleLight16"/><extLst><ext uri="{EB79DEF2-80B8-43e5-95BD-54CBDDF9020C}" xmlns:x14="http://schemas.microsoft.com/office/spreadsheetml/2009/9/main"><x14:slicerStyles defaultSlicerStyle="SlicerStyleLight1"/></ext></extLst></styleSheet>'
          ),
          O.file(
            "[Content_Types].xml",
            '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types"><Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml"/><Default Extension="xml" ContentType="application/xml"/><Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml"/>' +
              z[0].join("") +
              '<Override PartName="/xl/theme/theme1.xml" ContentType="application/vnd.openxmlformats-officedocument.theme+xml"/><Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml"/><Override PartName="/xl/sharedStrings.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml"/>' +
              z[1].join("") +
              '<Override PartName="/docProps/core.xml" ContentType="application/vnd.openxmlformats-package.core-properties+xml"/><Override PartName="/docProps/app.xml" ContentType="application/vnd.openxmlformats-officedocument.extended-properties+xml"/></Types>'
          ),
          k.file(
            "app.xml",
            '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Properties xmlns="http://schemas.openxmlformats.org/officeDocument/2006/extended-properties" xmlns:vt="http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes"><Application>XLSX.js</Application><DocSecurity>0</DocSecurity><ScaleCrop>false</ScaleCrop><HeadingPairs><vt:vector size="2" baseType="variant"><vt:variant><vt:lpstr>Worksheets</vt:lpstr></vt:variant><vt:variant><vt:i4>' +
              e.worksheets.length +
              '</vt:i4></vt:variant></vt:vector></HeadingPairs><TitlesOfParts><vt:vector size="' +
              L.length +
              '" baseType="lpstr"><vt:lpstr>' +
              L.join("</vt:lpstr><vt:lpstr>") +
              "</vt:lpstr></vt:vector></TitlesOfParts><Manager></Manager><Company>Microsoft Corporation</Company><LinksUpToDate>false</LinksUpToDate><SharedDoc>false</SharedDoc><HyperlinksChanged>false</HyperlinksChanged><AppVersion>1.0</AppVersion></Properties>"
          ),
          S.folder("_rels").file(
            "workbook.xml.rels",
            '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">' +
              j.join("") +
              '<Relationship Id="rId' +
              (j.length + 1) +
              '" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings" Target="sharedStrings.xml"/><Relationship Id="rId' +
              (j.length + 2) +
              '" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/><Relationship Id="rId' +
              (j.length + 3) +
              '" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme" Target="theme/theme1.xml"/></Relationships>'
          ),
          S.file(
            "sharedStrings.xml",
            '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><sst xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" count="' +
              p.length +
              '" uniqueCount="' +
              p.length +
              '"><si><t>' +
              p.join("</t></si><si><t>") +
              "</t></si></sst>"
          ),
          S.file(
            "workbook.xml",
            '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"><fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="9303"/><workbookPr defaultThemeVersion="124226"/><bookViews><workbookView ' +
              (e.activeWorksheet
                ? 'activeTab="' + e.activeWorksheet + '" '
                : "") +
              'xWindow="480" yWindow="60" windowWidth="18195" windowHeight="8505"/></bookViews><sheets>' +
              P.join("") +
              '</sheets><calcPr fullCalcOnLoad="1"/></workbook>'
          ),
          (o = Date.now() - o),
          (i = Date.now()),
          (t = {
            base64: O.generate({ compression: "DEFLATE" }),
            zipTime: Date.now() - i,
            processTime: o,
            href: function () {
              return (
                "data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64," +
                this.base64
              );
            },
          });
      }
      return t;
    }
    i("./src/init_touch.js");
    const n = {
        previewPDFDocument_PREPARE: function () {},
        previewPDFDocumentRich: function (e) {
          if (!database.printRich)
            return $.alert(
              "Printing is only supported on Ninox Cloud databases."
            );
          database.printRich(e, async function (t, i) {
            if (t) return $.alert(t + " - " + i);
            var o = i.id;
            NinoxDocumentInteraction.executeURL(
              database.loadFileURL(o, e.name, "application/pdf", !0)
            );
          });
        },
        savePDFDocumentRich: function (e, t) {
          database.printRich(e, function (i, o) {
            if (i) return t(i);
            t(
              void 0,
              database.loadFileURL(o.id, e.name, "application/pdf", !1)
            );
          });
        },
        previewPDFDocument: function (e) {
          if (!database.printSimple)
            return $.alert(
              "Printing is only supported on Ninox Cloud databases."
            );
          n.previewPDFDocument_PREPARE(),
            database.printSimple(e, async function (t, i) {
              if (t) $.alert(t + " - " + i);
              else {
                var o = i.id;
                NinoxDocumentInteraction.executeURL(
                  database.loadFileURL(o, e.name, "application/pdf", !0)
                );
              }
            });
        },
      },
      s = {
        type: "WebApp",
        availableFontFamilies: function () {
          return [
            "Avenir",
            "Avenir Next",
            "Courier",
            "Courier New",
            "Helvetica",
            "HelveticaNeue",
            "Times",
            "Times New Roman",
            "Verdana",
          ];
        },
        setWindowTitle: function (e) {
          document.title = e;
        },
        getUserDefault: function (e) {
          try {
            return window.localStorage ? window.localStorage[e] : void 0;
          } catch (t) {
            return void console.log("Cannot get user default", e, t);
          }
        },
        setUserDefault: function (e, t) {
          try {
            window.localStorage && (window.localStorage[e] = t);
          } catch (i) {
            console.log("Cannot store user default", e, t, i);
          }
        },
        defaultDecimalSymbolIsComma: function () {
          return "de" === LOCALE;
        },
        saveFile: function (e, t, i) {},
        openBrowser: function (e) {
          /^(mailto|tel)\:/.test(e) && !$.browser.chrome
            ? s.executeURL(e)
            : window.open(e);
        },
        previewDocument: function (e, t) {
          try {
            window.open(e);
          } catch (e) {
            console.warn(e);
          }
          t();
        },
        chooseFile: function (e) {
          $.chooseFile({ clientX: 0, clientY: 0 }, e);
        },
        chooseFileWithExtensions: function (e, t) {
          $.chooseFileWithExtensions(e, t);
        },
        openMap: function (e, t) {
          function i(e) {
            if (window.google)
              return console.info("Google maps included already"), e();
            var t,
              i = /^([A-Z]+)(?:\-([A-Z]+))?$/i.exec(navigator.language);
            i && (t = (i[2] || i[1]).toUpperCase());
            var o = document.createElement("script");
            (o.src =
              "https://maps.googleapis.com/maps/api/js?key=AIzaSyBXwXuSRu4AR3-gB6o1mv8ifEBwROKdNYE&libraries=geometry,places" +
              (t ? "&region=" + t : "")),
              (o.onload = function () {
                e && e();
              }),
              (o.onerror = function () {
                this.mapLoadErrors = !0;
              }),
              document.body.appendChild(o);
          }
          i(function () {
            var i = $.backplane(),
              o = new google.maps.Geocoder(),
              a = "Berlin, Germany",
              n = 52.5200066,
              s = 13.404954;
            new google.maps.LatLng(n, s),
              $('<div id="map-container" >')
                .append($('<div id="map">'))
                .append(
                  $('<div class="search-container"> ').append(
                    $(
                      "<div class='i-32-24 i-light-grey i-search controls search-icon'></div>"
                    )
                  )
                )
                .append(
                  $('<div class="controls-container">')
                    .append(
                      $('<button class="btn-cancel">Cancel</button>').on(
                        "touchstart click",
                        l
                      )
                    )
                    .append(
                      $('<button class="btn-save">Save</button>').on(
                        "touchstart click",
                        r
                      )
                    )
                )
                .append(
                  $(
                    '<input class="search-box" id="pac-input" type="text" placeholder="Search">'
                  )
                )
                .appendTo(i);
            function r() {
              t(null, e), l();
            }
            function l() {
              i.close();
            }
            function c(e, t, i) {
              function a(e, t) {
                return !e || (/^(Unnamed Road)/.test(e) && t.length)
                  ? (i = (i = t.splice(0, 1))[0])
                    ? a(i, t)
                    : e || ""
                  : e;
                var i;
              }
              o.geocode({ location: { lat: e, lng: t } }, function (e, t) {
                if ("OK" === t) {
                  var o = a(
                    null,
                    e.map(function (e) {
                      return e.formatted_address;
                    })
                  );
                  i(null, o);
                } else i(!0);
              });
            }
            function d(e) {
              if (!("geolocation" in navigator)) return e(!0);
              navigator.geolocation.getCurrentPosition(
                function (t) {
                  e(!1, {
                    latitude: t.coords.latitude,
                    longitude: t.coords.longitude,
                  });
                },
                function () {
                  return e(!0);
                }
              );
            }
            function u(t, i, o, r) {
              if (
                (null == e
                  ? (((e = {}).latitude = t), (e.longitude = i), (e.title = o))
                  : ((e.latitude = t), (e.longitude = i)),
                "function" != typeof o || r || ((r = o), (o = void 0)),
                (n = t),
                (s = i),
                new google.maps.LatLng(n, s),
                o)
              )
                return (a = o), (e.title = a), !r || r();
              c(n, s, function (t, i) {
                if (((a = i), (e.title = a), r)) return r();
              });
            }
            function p() {
              h(function (e, t) {
                t.controls[google.maps.ControlPosition.TOP_LEFT].push(
                  document.getElementById("pac-input")
                );
                var i = new google.maps.Marker({
                    position: { lat: n, lng: s },
                    map: t,
                  }),
                  o = new google.maps.places.SearchBox(
                    document.getElementById("pac-input")
                  ),
                  a = new google.maps.places.Autocomplete(
                    document.getElementById("pac-input")
                  );
                t.addListener("click", function (e) {
                  e.latLng &&
                    u(e.latLng.lat(), e.latLng.lng(), function () {
                      i && i.setMap(null),
                        (i = new google.maps.Marker({
                          position: { lat: n, lng: s },
                          map: t,
                        }));
                    });
                }),
                  a.addListener("place_changed", function (e) {
                    var o = a.getPlace();
                    o.geometry &&
                      u(
                        o.geometry.location.lat(),
                        o.geometry.location.lng(),
                        o.formatted_address,
                        function () {
                          o.geometry.viewport
                            ? t.fitBounds(o.geometry.viewport)
                            : (t.setCenter(o.geometry.location), t.setZoom(17)),
                            i && i.setMap(null),
                            (i = new google.maps.Marker({
                              position: { lat: n, lng: s },
                              map: t,
                            }));
                        }
                      );
                  }),
                  o.addListener("places_changed", function (e) {
                    var a = o.getPlaces();
                    if (a.length) {
                      var r = a[0];
                      u(
                        r.geometry.location.lat(),
                        r.geometry.location.lng(),
                        r.formatted_address,
                        function () {
                          r.geometry.viewport
                            ? t.fitBounds(r.geometry.viewport)
                            : (t.setCenter(r.geometry.location), t.setZoom(17)),
                            i && i.setMap(null),
                            (i = new google.maps.Marker({
                              position: { lat: n, lng: s },
                              map: t,
                            }));
                        }
                      );
                    }
                  });
              });
            }
            function h(e) {
              return e(
                null,
                new google.maps.Map(document.getElementById("map"), {
                  center: { lat: n, lng: s },
                  zoom: 15,
                  fullscreenControl: !1,
                })
              );
            }
            e
              ? e.latitude && e.longitude
                ? u(
                    util.parseNumber(e.latitude) || n,
                    util.parseNumber(e.longitude) || s,
                    p
                  )
                : p()
              : d(function (e, t) {
                  return t ? u(t.latitude, t.longitude, p) : p();
                });
          });
        },
        openFileWithServer: function (e, t, i, o, a) {
          var n = !1,
            r = a && !0,
            l = !r && !n,
            c = void 0;
          l && (c = window.open("about:blank"));
          var d = database.saveFileURL(e, t, o);
          $.ajax({
            type: "POST",
            url: d,
            data: i,
            xhrFields: { withCredentials: !0 },
            contentType: "application/octet-stream",
            processData: !1,
            cache: !1,
            success: function (i, o, a) {
              var d = database.loadFileURL(i, e, t, r);
              n && $('<a href="' + d + '">').click(),
                r ? s.executeURL(d) : l && (c.location.href = d);
            },
            error: function (e, t, i) {
              $.alert("Failed to export file");
            },
          });
        },
        executeURL: function (e) {
          var t = document.getElementById("NX-Download-Helper");
          t && t.parentNode.removeChild(t),
            ((t = document.createElement("iframe")).id = "NX-Download-Helper"),
            (t.style.display = "none"),
            document.body.appendChild(t),
            (t.src = e);
        },
        execCut: function () {
          document.execCommand("cut");
        },
        execCopy: function () {
          document.execCommand("copy");
        },
        execPaste: function () {
          document.execCommand("paste");
        },
        coordinatesForAddress: function (e, t) {
          t();
        },
        isOnline: function () {
          return !0;
        },
        barcodeScan: function (e) {
          e(null, "");
        },
      },
      r = {
        enableCalendarSync: function (e) {
          e("Not supported.");
        },
        calendarForDatabase: function (e) {},
        removeEvents: function (e, t, i) {},
        addEvent: function (e, t, i, o, a) {},
        addEvent2: function (e, t, i, o, a, n) {},
        addReminder2: function () {},
        commit: function (e) {
          e();
        },
        getSources: function () {
          return [];
        },
        loadCalendar: function (e, t, i) {
          i();
        },
        getEventCalendar: function (e) {},
        getReminderCalendar: function (e) {},
      },
      l = {
        isBarcodeScannerActive: function () {
          return !1;
        },
        enableBarcodeScanner: function () {},
        disableBarcodeScanner: function () {},
        initializationDone: function () {},
        clearLaunchURL: function () {},
        everythingSaved: function () {},
        setNavigationProperty: function (e, t) {},
        getNavigationProperty: function (e) {},
        clearNavigation: function () {},
      },
      c = {
        cachedURL: function (e, t) {
          return e;
        },
      };
    !(function () {
      if (
        ("undefined" == typeof console &&
          (console = {
            log: function () {},
            info: function () {},
            warn: function () {},
            error: function () {},
            trace: function () {},
          }),
        String.prototype.trim ||
          (String.prototype.trim = function () {
            return this.replace(/^\s+|\s+$/g, "");
          }),
        ($.uaMatch = function (e) {
          e = e.toLowerCase();
          var t =
            /(chrome)[ \/]([\w.]+)/.exec(e) ||
            /(webkit)[ \/]([\w.]+)/.exec(e) ||
            /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) ||
            /(msie) ([\w.]+)/.exec(e) ||
            (e.indexOf("compatible") < 0 &&
              /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e)) ||
            [];
          return { browser: t[1] || "", version: t[2] || "0" };
        }),
        !$.browser)
      ) {
        var e = $.uaMatch(navigator.userAgent),
          t = {};
        e.browser && ((t[e.browser] = !0), (t.version = e.version)),
          t.chrome ? (t.webkit = !0) : t.webkit && (t.safari = !0),
          ($.browser = t);
      }
      var i = window.navigator.userAgent,
        o = /Safari/.test(i),
        a =
          /iPad/i.test(i) ||
          (o &&
            document.documentElement &&
            null != document.documentElement.ontouchstart),
        n = /iPhone/i.test(i),
        s = /Trident/.test(i),
        r = /Android/.test(i);
      (window.NINOX_ANDROID = r),
        (window.NINOX_IOS = a || n),
        (window.NINOX_IPAD = a),
        (window.NINOX_IPHONE = n),
        (window.NINOX_IE = s),
        (window.OSX_10_9_MODE = /OS X 10_9/.test(i)),
        ($.initTouchHandlers = function () {}),
        ($.getDevicePadding = function () {
          var e,
            t = !1,
            i = document.createElement("div");
          if (
            (window.CSS &&
            window.CSS.supports("padding-bottom: env(safe-area-inset-bottom)")
              ? ((i.style.paddingBottom = "env(safe-area-inset-bottom)"),
                (i.style.paddingLeft = "env(safe-area-inset-left)"),
                (i.style.paddingRight = "env(safe-area-inset-right)"),
                (i.style.paddingTop = "env(safe-area-inset-top)"),
                (t = !0))
              : window.CSS &&
                window.CSS.supports(
                  "padding-bottom: constant(safe-area-inset-bottom)"
                ) &&
                ((i.style.paddingBottom = "constant(safe-area-inset-bottom)"),
                (i.style.paddingLeft = "constant(safe-area-inset-left)"),
                (i.style.paddingRight = "constant(safe-area-inset-right)"),
                (i.style.paddingTop = "constant(safe-area-inset-top)"),
                (t = !0)),
            t)
          ) {
            document.body.appendChild(i);
            var o = window.getComputedStyle(i);
            (e = {
              top: parseInt(o.paddingTop),
              left: parseInt(o.paddingLeft),
              right: parseInt(o.paddingRight),
              bottom: parseInt(o.paddingBottom),
            }),
              document.body.removeChild(i);
          } else e = { top: 0, left: 0, right: 0, bottom: 0 };
          return e;
        }),
        (window.TOUCH =
          window.NINOX_IOS ||
          window.NINOX_ANDROID ||
          ("MacIntel" === navigator.platform && navigator.maxTouchPoints > 1)),
        $.initTouchHandlers(),
        ($.fn.touch = $.fn.click),
        TOUCH
          ? ($(document.documentElement).addClass("touch"),
            ($.fn.select = function () {
              if (this[0].setSelectionRange)
                try {
                  this[0].setSelectionRange(0, 9999);
                } catch (e) {
                  console.warn(e);
                }
              return this;
            }))
          : $(document.documentElement).addClass("no-touch"),
        $(document).keydown(function (e) {
          13 === e.which &&
            setTimeout(function () {
              var t = $(e.target);
              t.is("input") && t.blur();
            }, 0);
        }),
        (window.devicePadding = $.getDevicePadding());
    })();
    i(
      "./node_modules/script-loader/index.js!./node_modules/codemirror/lib/codemirror.js"
    ),
      i(
        "./node_modules/script-loader/index.js!./node_modules/codemirror/addon/mode/simple.js"
      );
    var d = i("./node_modules/@ninox/ninox-core/dist/ninox-core.es5.js"),
      u = i("./src/js/printer/printTable.js"),
      p = i("./src/js/ui/ui-util.js");
    (window.NINOX_VERSION = "3.4.0"),
      (window.NINOX_WEB = !0),
      (window.NINOX_APP = !1),
      (window.NINOX_APP_MAC = !1),
      (window.NINOX_APP_IOS = !1),
      (window.NINOX_APP_IPHONE = !1),
      (window.NINOX_APP_IPAD = !1),
      (window.NINOX_PRODUCT = "web"),
      (window.NINOX_APP_ANDROID = !1),
      (window.NINOX_APP_TAB = !1),
      (window.NINOX_IOS = !1),
      (window.NINOX_ENV = "prod"),
      (window.xlsx = a),
      (window.locale = {}),
      (window.NinoxPrint = n),
      (window.localFileSystem = c),
      (window.NinoxDocumentInteraction = s),
      (window.NinoxCalendar = r),
      (window.NinoxViewController = l),
      (function (e, t, i, o, a, n, s) {
        (e.UserlaneCommandObject = a),
          (e[a] =
            e[a] ||
            function () {
              (e[a].q = e[a].q || []).push(arguments);
            }),
          (n = t.createElement(i)),
          (s = t.getElementsByTagName(i)[0]),
          (n.async = 1),
          (n.src = o),
          s.parentNode.insertBefore(n, s);
      })(
        window,
        document,
        "script",
        "https://cdn.userlane.com/userlane.js",
        "Userlane"
      ),
      (window.ga = function () {});
    const h = {
      userEnvName: "web",
      alert: (e, t) => $.alert(e, t),
      loading: (e) => $.loading(e),
      dialog: (e, t, i, o) => {
        $.dialog({ caption: e, message: t, buttons: i, zIndex: void 0 });
      },
      openRecord: (e, t) => ui.openRecord(e, t),
      popupRecord: (e, t) => ui.popupRecord(e, t),
      openTable: (e, t, i, o) => ui.openTable(e, t, i, o),
      closeRecord: () => ui.closeRecord(),
      closeAllRecords: () => ui.closeAllRecords(),
      openFullScreen: (e, t, i) => ui.openFullscreen(e, t, i),
      closeFullScreen: () => ui.closeFullscreen(),
      openDesigner: (e) => {
        "undefined" != typeof reports && reports.openDesigner(e);
      },
      printTable: (e) => Object(u.a)(e),
      sendEmail: (e, t) => {
        database.sendEmail
          ? database.sendEmail(e, (e) => {
              e && $.alert(e), t(e ? String(e) : void 0);
            })
          : t("Not supported on client side");
      },
      previewDocument: s.previewDocument.bind(s),
      barcodeScan: s.barcodeScan
        ? s.barcodeScan.bind(s)
        : (e) => ("function" == typeof e ? e(null, "") : void 0),
      addCalendarEvent: r.addEvent2.bind(r),
      addCalendarReminder: r.addReminder2.bind(r),
      httpProvider: (e, t) => {
        $.ajax({
          type: e.method,
          url: e.url,
          processData: !1,
          data: JSON.stringify(e.body),
          headers: e.headers,
          xhrFields: {
            withCredentials: !(!e.headers || !e.headers.Authorization),
          },
          success: function (e, i, o) {
            t(void 0, i, e);
          },
          error: function (e, i, o) {
            t("Request failed: " + i + " - " + o, i, void 0);
          },
        });
      },
      ninoxDocumentInteraction: s,
      vault: { get: () => {} },
      parseXML: (e) => {
        try {
          return new window.DOMParser().parseFromString(e, "text/xml");
        } catch (e) {
          return console.warn(e), "";
        }
      },
      getAppURL: () => window.location.protocol + "//" + window.location.host,
      sendCommand: (e, t, i) => {
        database.sendCommand
          ? database.sendCommand({ connectionName: e, command: t }, (e, t) => {
              e && $.alert(e), i(e ? String(e) : void 0, t);
            })
          : i("Not supported on client side");
      },
    };
    (async () => {
      s.initWithNative && (await s.initWithNative()),
        void 0 !== c && c.initWithNative && (await c.initWithNative()),
        "undefined" != typeof cloudFileSystem &&
          cloudFileSystem.initWithNative &&
          (await cloudFileSystem.initWithNative());
      let e = "";
      const t = new Promise((e, t) => setTimeout(t, 5e3));
      let a;
      a = Object(p.g)() ? "/locale" : "https://dbde0001.ninox.com/locale";
      const n = fetch(a);
      e = await Promise.race([n, t])
        .then((e) => e.text())
        .catch(() => {});
      const r = Object(o.c)(e);
      (h.locale = r),
        (window.locale = Object(o.a)()),
        (window.LOCALE = Object(o.b)()),
        d.coreInit(h),
        (window.ninoxCore = d),
        i("./src/init.js");
    })();
  },
  "./src/init_styles.js": function (e, t, i) {
    "use strict";
    i.r(t);
    i("./node_modules/codemirror/lib/codemirror.css"),
      i("./src/css/base.css"),
      i("./src/css/icons.css"),
      i("./src/css/iconset.css"),
      i("./src/css/database-icons.css"),
      i("./src/css/ui.css"),
      i("./src/css/navigation.css"),
      i("./src/css/widgets.css"),
      i("./src/css/calendar.css"),
      i("./src/css/charts.css"),
      i("./src/css/tables.css"),
      i("./src/css/admin.css"),
      i("./src/css/home.css"),
      i("./src/css/root_2.css"),
      i("./src/css/reports.css"),
      i("./node_modules/@zhyabs1314/react-image-lightbox/style.css"),
      i("./src/lib/jqueryui/ui-lightness/jquery-ui-1.10.4.custom.min.css"),
      i("./src/css/web.css"),
      i("./src/css/browser-not-supported-view.scss"),
      i("./src/assets/allIcons/icons-facelift.css"),
      i("./src/lib/nxwidgets/nxwidgets.css");
  },
  "./src/init_touch.js": function (e, t, i) {
    (window.EVENT_touchstart = "touchstart"),
      (window.EVENT_touchmove = "touchmove"),
      (window.EVENT_touchend = "touchend"),
      (window.EVENT_target = function (e) {
        return e.target;
      }),
      "undefined" != typeof TouchEvent &&
        (Object.defineProperty(TouchEvent.prototype, "clientX", {
          get: function () {
            return this.touches.length
              ? this.touches[0].clientX
              : this.changedTouches.length
              ? this.changedTouches[0].clientX
              : 0;
          },
        }),
        Object.defineProperty(TouchEvent.prototype, "clientY", {
          get: function () {
            return this.touches.length
              ? this.touches[0].clientY
              : this.changedTouches.length
              ? this.changedTouches[0].clientY
              : 0;
          },
        }),
        Object.defineProperty(TouchEvent.prototype, "pageX", {
          get: function () {
            return this.touches.length
              ? this.touches[0].pageX
              : this.changedTouches.length
              ? this.changedTouches[0].pageX
              : 0;
          },
        }),
        Object.defineProperty(TouchEvent.prototype, "pageY", {
          get: function () {
            return this.touches.length
              ? this.touches[0].pageY
              : this.changedTouches.length
              ? this.changedTouches[0].pageY
              : 0;
          },
        }));
  },
  "./src/js/admin/AdminField.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return k;
    });
    var o = i("./node_modules/react/index.js"),
      a = i("./node_modules/react-dom/index.js"),
      n = i("./node_modules/@babel/runtime/helpers/defineProperty.js"),
      s = i.n(n),
      r = i("./node_modules/@ninox/ninox-core/dist/ninox-core.es5.js"),
      l = i("./node_modules/react-sortable-hoc/dist/react-sortable-hoc.umd.js"),
      c = i("./node_modules/seamless-scroll-polyfill/dist/es5/seamless.js"),
      d = i("./src/js/localesEngine/localesManager.ts"),
      u =
        (i("./src/react/ChoiceEditorList.css"),
        i("./src/react/util/commons.ts")),
      p = i("./src/react/util/FastClickContainer.tsx"),
      h = i("./src/react/util/PositionedBackplane.tsx");
    const m = Object(l.SortableHandle)(() =>
        o.createElement(
          "div",
          { style: { position: "relative" } },
          o.createElement("div", {
            className: "i-32-24 i-lighter-grey i-drag-handle",
          })
        )
      ),
      f = Object(l.SortableElement)(({ id: e, children: t }) =>
        o.createElement("div", { id: e }, t)
      ),
      g = Object(l.SortableContainer)(
        ({ className: e, innerRef: t, children: i }) =>
          o.createElement("div", { ref: t, className: e }, i)
      );
    class v extends o.Component {
      constructor(e) {
        super(e),
          s()(this, "container", void 0),
          s()(this, "handleReorder", (e) => {
            e.newIndex !== e.oldIndex &&
              this.props.onReorder(e.oldIndex, e.newIndex);
          }),
          s()(this, "handleRowChange", () => {
            "NEW_INDEX" !== this.state.selectedIndex &&
              null !== this.state.selectedIndex &&
              this.props.onRowChange(
                this.state.currentText,
                this.state.selectedIndex
              );
          }),
          s()(this, "handleCreateValue", () => {
            this.props.onCreateValue(this.state.currentText);
          }),
          s()(this, "keydown", (e, t) => {
            if (null !== this.state.selectedIndex)
              switch (e.key) {
                case "Tab":
                  "NEW_INDEX" !== this.state.selectedIndex &&
                    (e.preventDefault(),
                    t(),
                    this.moveToNextElement(this.state.selectedIndex));
                  break;
                case "Enter":
                  e.preventDefault(),
                    this.setState({ selectedIndex: null }),
                    t();
                  break;
                case "Escape":
                  e.preventDefault(), this.setState({ selectedIndex: null });
                  break;
                case "ArrowUp":
                  "NEW_INDEX" !== this.state.selectedIndex &&
                    (e.preventDefault(),
                    t(),
                    this.moveToPreviousElement(this.state.selectedIndex));
                  break;
                case "ArrowDown":
                  "NEW_INDEX" !== this.state.selectedIndex &&
                    (e.preventDefault(),
                    this.moveToNextElement(this.state.selectedIndex),
                    t());
              }
          }),
          s()(this, "handleDeleteClick", () => {
            "NEW_INDEX" !== this.state.selectedIndex &&
              null !== this.state.selectedIndex &&
              this.props.onDeleteValueClick(
                this.props.rows[this.state.selectedIndex].id
              ),
              this.setState({ selectedIndex: null });
          }),
          s()(this, "handleAddItem", (e) => {
            this.setState({
              selectedIndex: "NEW_INDEX",
              currentText: "",
              selectedElement: p.b.getTarget(e),
            });
          }),
          (this.state = {
            selectedIndex: null,
            currentText: "",
            selectedElement: null,
          }),
          (this.container = o.createRef());
      }
      componentDidUpdate(e) {
        this.props.rows.length > e.rows.length &&
          c.elementScrollBy(this.container.current, {
            top: this.container.current.scrollHeight,
            behavior: "smooth",
          });
      }
      render() {
        return o.createElement(
          o.Fragment,
          null,
          o.createElement(
            "div",
            { className: "ChoiceEditorList_root" },
            o.createElement(
              g,
              {
                innerRef: this.container,
                useDragHandle: !0,
                axis: "y",
                lockAxis: "y",
                lockToContainerEdges: !0,
                onSortEnd: this.handleReorder,
                helperClass: "ChoiceEditorList_helperClass",
                className: "ChoiceEditorList_listContainer",
              },
              r.util.localeSortBy(this.props.rows, "order").map((e, t) =>
                o.createElement(
                  f,
                  { key: e.id, index: t, id: v.TARGET_ID + t },
                  o.createElement(
                    p.a,
                    {
                      onFastClick: (i) => {
                        const o = p.b.getTarget(i);
                        this.setState({
                          selectedIndex: t,
                          currentText: e.caption,
                          selectedElement: o.closest("#" + v.TARGET_ID + t),
                        });
                      },
                      className: "choiceeditor-item",
                    },
                    o.createElement(p.a, {
                      onFastClick: (t) => {
                        this.props.onColorClick(t, e);
                      },
                      className: "choiceeditor-item-color ",
                      style: {
                        background: e.color ? e.color : void 0,
                        color: e.textColor ? e.textColor : void 0,
                      },
                    }),
                    o.createElement(p.a, {
                      onFastClick: (t) => this.props.onIconClick(t, e),
                      className:
                        "choiceeditor-item-icon " +
                        (e.icon ? "ic ic-" + e.icon : ""),
                    }),
                    o.createElement(
                      "div",
                      { className: "choiceeditor-item-label" },
                      e.caption || ""
                    ),
                    o.createElement(
                      "div",
                      { className: "choiceeditor-item-id" },
                      e.id
                    ),
                    o.createElement(m, null)
                  )
                )
              )
            ),
            this.newValBackplane(),
            o.createElement(
              "div",
              {
                className: "ChoiceEditorList_buttonContainer",
                style: { padding: 4 },
              },
              o.createElement(
                p.a,
                {
                  className:
                    "ChoiceEditorList_addButton button text blue float-left",
                  onFastClick: this.handleAddItem,
                  style: {
                    margin: 0,
                    width: this.props.rows.length > 1 ? "" : "100%",
                    textAlign: "center",
                  },
                },
                o.createElement("div", {
                  className: "icon-big-white icon-big-add",
                }),
                o.createElement("span", null, Object(d.a)().choiceAddValue)
              )
            )
          ),
          this.props.rows.length > 1
            ? o.createElement(
                "div",
                { className: "ChoiceEditorList_sortButtonContainer" },
                o.createElement(
                  p.a,
                  {
                    className: "button",
                    onFastClick: this.props.onSortAscClick,
                  },
                  o.createElement("div", {
                    className: "icon-big-black icon-big-sort-asc",
                  })
                ),
                o.createElement(
                  p.a,
                  {
                    className: "button",
                    onFastClick: this.props.onSortDescClick,
                  },
                  o.createElement("div", {
                    className: "icon-big-black icon-big-sort-desc",
                  })
                )
              )
            : null
        );
      }
      resetState() {
        this.setState({ selectedIndex: null, currentText: "" });
      }
      newValBackplane() {
        return o.createElement(
          h.a,
          {
            show: null !== this.state.selectedIndex,
            clickTarget: this.state.selectedElement,
            settings:
              "NEW_INDEX" === this.state.selectedIndex
                ? { style: "tooltip", arrowColor: "white" }
                : { style: "overlay" },
            className: "ChoiceEditorList_editContainer",
            onClick: () => {
              "NEW_INDEX" === this.state.selectedIndex
                ? "" !== this.state.currentText &&
                  this.props.onCreateValue(this.state.currentText)
                : this.handleRowChange(),
                this.resetState();
            },
          },
          "NEW_INDEX" !== this.state.selectedIndex
            ? this.editRow(this.handleRowChange)
            : this.editRow(this.handleCreateValue)
        );
      }
      moveToNextElement(e) {
        const t = e + 1;
        t < this.props.rows.length &&
          this.setState((e) => {
            const i =
              null === e.selectedElement
                ? null
                : Object(u.c)(e.selectedElement, v.TARGET_ID + t);
            return (
              this.scrollToSibling(i),
              {
                selectedIndex: t,
                currentText: this.props.rows[t].caption,
                selectedElement: i,
              }
            );
          });
      }
      moveToPreviousElement(e) {
        const t = e - 1;
        t >= 0 &&
          this.setState((e) => {
            const i =
              null === e.selectedElement
                ? null
                : Object(u.d)(e.selectedElement, v.TARGET_ID + t);
            return (
              this.scrollToSibling(i),
              {
                selectedIndex: t,
                currentText: this.props.rows[t].caption,
                selectedElement: i,
              }
            );
          });
      }
      scrollToSibling(e) {
        null !== e &&
          c.elementScrollIntoView(e, { block: "nearest", behavior: "auto" });
      }
      editRow(e) {
        return o.createElement(
          "div",
          {
            className:
              "ChoiceEditorList_inputContainer " +
              ("NEW_INDEX" === this.state.selectedIndex
                ? "ChoiceEditorList_inputContainerNewRow"
                : ""),
          },
          o.createElement("input", {
            className: "ChoiceEditorList_input",
            tabIndex: 0,
            onKeyDown: (t) => this.keydown(t, e),
            type: "text",
            value: this.state.currentText,
            autoFocus: !0,
            onChange: (e) => {
              this.setState({ currentText: e.target.value });
            },
          }),
          o.createElement(p.a, {
            className:
              "ChoiceEditorList_trashIcon i-32-24 i-grey i-setting-trash",
            onFastClick: this.handleDeleteClick,
          })
        );
      }
    }
    s()(v, "TARGET_ID", "ChoiceEditorList_backplaneTarget");
    i("./node_modules/underscore/underscore.js");
    var b = i("./src/js/widgets/editors/ColorSelector.js"),
      y = i("./src/js/widgets/editors/IconSelector.js");
    function w(e, t, i) {
      (this.field = t),
        $('<label class="choiceeditor-values-label">')
          .text(locale.choiceValues)
          .appendTo(i),
        (this.$values = $('<div class="choiceeditor-values">').appendTo(i)),
        this.updateUI();
    }
    (w.prototype.resizeHeight = function (e) {
      this.$values.css("height", e - 72);
    }),
      (w.prototype.destroy = function () {}),
      (w.prototype.updateUI = function () {
        const e = util.sortBy(this.field.getValues(), "order");
        a.render(
          o.createElement(v, {
            rows: e,
            onCreateValue: (e) => {
              (this.field.createValue().caption = e), this.changed();
            },
            onDeleteValueClick: (e) => this.confirmRemove(e),
            onRowChange: (t, i) => {
              const o = e[i];
              t !== o.caption && ((o.caption = t), this.changed());
            },
            onIconClick: (e, t) => this.pickIcon(e, t),
            onColorClick: (e, t) => this.pickColor(e, t),
            onReorder: (e, t) => this.sorted(e, t),
            onSortAscClick: () => this.sortAsc(),
            onSortDescClick: () => this.sortDesc(),
          }),
          this.$values[0]
        );
      }),
      (w.prototype.confirmRemove = function (e) {
        $.dialog({
          closable: !0,
          caption: locale.remove,
          message: locale.confirmRemoveChoiceValue,
          buttons: [
            {
              color: "red",
              caption: locale.remove,
              callback: () => this.remove(e),
            },
          ],
        });
      }),
      (w.prototype.remove = function (e) {
        delete this.field.values[e],
          this.field.trigger("change"),
          this.field.schema.trigger("change"),
          this.updateUI();
      }),
      (w.prototype.pickColor = function (e, t) {
        new b.a({
          $el: $(p.b.getTarget(e)),
          value: t.color,
          update: (e) => {
            (t.color = e), this.changed();
          },
        });
      }),
      (w.prototype.pickIcon = function (e, t) {
        new y.a({
          $el: $(p.b.getTarget(e)),
          value: t.icon,
          update: (e) => {
            (t.icon = e), this.changed();
          },
        });
      }),
      (w.prototype.changed = function () {
        this.field.trigger("change"),
          this.field.schema.trigger("change"),
          this.updateUI();
      }),
      (w.prototype.sorted = function (e, t) {
        const i = util.sortBy(this.field.getValues(), "order"),
          o = i[t].order;
        if (t > e) for (let o = t - 1; o >= e; o--) i[o + 1].order = i[o].order;
        else if (e > t)
          for (let o = t + 1; o <= e; o++) i[o - 1].order = i[o].order;
        (i[e].order = o),
          this.field.trigger("change"),
          this.field.schema.trigger("change"),
          this.updateUI();
      }),
      (w.prototype.sortAsc = function () {
        for (
          var e = util.localeSortBy(this.field.values, "caption"), t = 0;
          t < e.length;
          t++
        )
          e[t].order = t;
        this.field.trigger("change"),
          this.field.schema.trigger("change"),
          this.updateUI();
      }),
      (w.prototype.sortDesc = function () {
        for (
          var e = util.localeSortBy(this.field.values, "caption"), t = 0;
          t < e.length;
          t++
        )
          e[t].order = e.length - 1 - t;
        this.field.trigger("change"),
          this.field.schema.trigger("change"),
          this.updateUI();
      });
    var x = i("./src/js/admin/ViewEditor.js"),
      T = i("./src/js/widgets/Field.js");
    let C = !1;
    class k {
      constructor(e, t, i) {
        var o = this;
        (this.field = t),
          (this.components = []),
          (this.$backplane = $.backplane({
            close: $.proxy(this.destroy, this),
            scrollable: !0,
          }));
        var a,
          n,
          s = "choice" === t.base || "multi" === t.base,
          r = $(
            '<div class="fieldeditor fieldeditor-' +
              (s ? "choice" : t.base) +
              '">'
          )
            .appendTo(this.$backplane)
            .draggable({ handle: ".head" }),
          l = $('<div class="head">')
            .mousedown(() =>
              l.css("background-color", "rgba(199, 199, 199, 0.6)")
            )
            .mouseup(() => l.css("background-color", "transparent"))
            .appendTo(r);
        if (s) {
          o.$paneContainer = $('<div class="Field_paneContainer">').appendTo(r);
          const e = window.getHeight() - 200;
          (a = $(
            '<div class="pane" style="overflow:auto;max-height: ' +
              (e - 16) +
              'px">'
          ).appendTo(o.$paneContainer)),
            (n = $(
              '<div class="pane2 component editor choiceeditor" style="padding-bottom: 32px; display: flex;display: -webkit-flex; flex-direction: column; -webkit-flex-direction: column; height:' +
                e +
                'px">'
            ).appendTo(o.$paneContainer));
        } else a = $('<div class="pane">').appendTo(r);
        var c,
          d = $('<div class="buttons">').appendTo(r);
        let u, p, h, m;
        $('<div class="nx-button-text red">')
          .text(locale.removeField)
          .appendTo(d)
          .touch(function () {
            t.isUI
              ? (t.type.schema.removeUI(t),
                o.$backplane.close(function () {
                  o.destroy();
                }))
              : $.dialog({
                  closable: !0,
                  caption: locale.removeField,
                  message: locale.removeFieldConfirm,
                  buttons: [
                    {
                      color: "red",
                      caption: locale.remove,
                      callback: function () {
                        t.type.schema.removeField(t),
                          o.$backplane.close(function () {
                            o.destroy();
                          });
                      },
                    },
                  ],
                });
          }),
          (t.isReverse || t.isReference) &&
            ($('<div class="nx-hspace-small">').appendTo(d),
            $('<div class="nx-button-text grey">')
              .text(locale.editColumns)
              .appendTo(d)
              .touch(function () {
                new x.a({
                  config: {
                    type: t.refType.id,
                    cols: t.viewConfig.cols || [],
                    sort: t.viewConfig.sort,
                    descending: t.viewConfig.descending,
                    group: t.viewConfig.group,
                  },
                  save: function (e) {
                    var i = e.config;
                    (t.viewConfig.cols = i.cols),
                      (t.viewConfig.sort = i.sort),
                      (t.viewConfig.descending = i.descending),
                      (t.viewConfig.group = i.group),
                      t.cachedViewConfig && (t.cachedViewConfig = void 0),
                      t.type.schema.trigger("change");
                  },
                });
              })),
          ("view" !== t.base && "chart" !== t.base) ||
            ($('<div class="nx-hspace-small">').appendTo(d),
            $('<div class="nx-button-text grey">')
              .text(locale.editColumns)
              .appendTo(d)
              .touch(function () {
                var e = t.exp && t.exp.returnType;
                return e
                  ? (("nid" !== e.base && "rid" !== e.base) || (e = e.type),
                    e.isNodeType
                      ? t.exp.isMultiple()
                        ? void new x.a({
                            config: {
                              type: e,
                              cols: t.viewConfig.cols || [],
                              sort: t.viewConfig.sort,
                              descending: t.viewConfig.descending,
                              group: t.viewConfig.group,
                            },
                            save: function (e) {
                              var i = e.config;
                              (t.viewConfig.cols = i.cols),
                                (t.viewConfig.sort = i.sort),
                                (t.viewConfig.descending = i.descending),
                                (t.viewConfig.group = i.group),
                                t.type.schema.trigger("change");
                            },
                          })
                        : $.alert(
                            "Expression does not return multiple records."
                          )
                      : $.alert("Expression does not return records."))
                  : $.alert("Please define a valid function.");
              })),
          $('<div class="nx-hspace-flex">').appendTo(d),
          $('<div class="nx-button-text blue">')
            .text(locale.okay)
            .appendTo(d)
            .touch($.proxy(this.close, this)),
          (c =
            "ref" === t.base
              ? locale.referenceLabelFrom +
                " " +
                t.type.caption +
                " " +
                locale.referenceLabelTo +
                " " +
                t.refType.caption +
                " " +
                locale.referenceLabelN1
              : "rev" === t.base
              ? locale.referenceLabelFrom +
                " " +
                t.type.caption +
                " " +
                locale.referenceLabelTo +
                " " +
                t.refType.caption +
                " " +
                locale.referenceLabel1N
              : locale.types[t.base]),
          l
            .append(
              $(
                '<div class="type-symbol-grey i-32-24 i-light-grey i-field-' +
                  t.base +
                  '">'
              )
            )
            .append($("<span>").text(c)),
          l.append(
            $(
              '<div class="i-32-24 i-lighter-grey i-drag-handle" style="cursor: move;position: absolute;top:21px;left:22px;">'
            )
          ),
          t.getCaptionModel &&
            (this.caption = this.createField(t.getCaptionModel(), a)),
          t.getLabelPositionModel &&
            this.createField(t.getLabelPositionModel(), a),
          t.getFunctionModel && this.createField(t.getFunctionModel(), a),
          t.getStyleModel && this.createField(t.getStyleModel(), a),
          t.getBGColorModel && this.createField(t.getBGColorModel(), a),
          t.getButtonColorModel && this.createField(t.getButtonColorModel(), a),
          ((t.isField && "fn" !== t.base) || t.isReference) &&
            this.createField(t.getRequiredModel(), a),
          t.getStringDefaultModel &&
            this.createField(t.getStringDefaultModel(), a),
          t.getStringMinLengthModel &&
            this.createField(t.getStringMinLengthModel(), a),
          t.getStringMaxLengthModel &&
            this.createField(t.getStringMaxLengthModel(), a),
          t.getNumberDefaultModel &&
            this.createField(t.getNumberDefaultModel(), a),
          t.getNumberMinModel && this.createField(t.getNumberMinModel(), a),
          t.getNumberMaxModel && this.createField(t.getNumberMaxModel(), a),
          t.getNumberFormatModel &&
            this.createField(t.getNumberFormatModel(), a),
          t.getTimeFormatModel && this.createField(t.getTimeFormatModel(), a),
          t.getDateDefaultModel && this.createField(t.getDateDefaultModel(), a),
          t.getDateCalendarModel &&
            ($("<div>").appendTo(a),
            this.createField(t.getDateCalendarModel(), a)),
          t.getDateCalendarColorModel &&
            this.createField(t.getDateCalendarColorModel(), a),
          t.getDateCalendarFormatModel &&
            this.createField(t.getDateCalendarFormatModel(), a),
          t.getDateYearlyModel && this.createField(t.getDateYearlyModel(), a),
          t.getTimestampDefaultModel &&
            this.createField(t.getTimestampDefaultModel(), a),
          t.getTimeDefaultModel && this.createField(t.getTimeDefaultModel(), a),
          t.getTimeintervalDefaultModel &&
            this.createField(t.getTimeintervalDefaultModel(), a),
          t.getTimeintervalFormatModel &&
            this.createField(t.getTimeintervalFormatModel(), a),
          t.getBooleanDefaultModel &&
            this.createField(t.getBooleanDefaultModel(), a),
          t.getBooleanRendererModel &&
            this.createField(t.getBooleanRendererModel(), a),
          t.getChoiceDefaultModel &&
            this.createField(t.getChoiceDefaultModel(), a),
          t.getChoiceRendererModel &&
            this.createField(t.getChoiceRendererModel(), a),
          t.getMultiDefaultModel &&
            this.createField(t.getMultiDefaultModel(), a),
          t.getMultiRendererModel &&
            this.createField(t.getMultiRendererModel(), a),
          s && this.components.push(new w(this, t, n)),
          "email" === t.base &&
            (this.createField(t.getEmailDefaultModel(), a),
            this.createField(t.getEmailSubjectModel(), a),
            this.createField(t.getEmailBodyModel(), a)),
          t.getHtmlDefaultModel && this.createField(t.getHtmlDefaultModel(), a),
          t.getFileHandlingModel &&
            this.createField(t.getFileHandlingModel(), a),
          t.getBGSizeModel && this.createField(t.getBGSizeModel(), a),
          t.isReference && this.createField(t.getCascadeModel(), a),
          t.getReferenceRendererModel &&
            this.createField(t.getReferenceRendererModel(), a),
          t.getReverseRendererModel &&
            this.createField(t.getReverseRendererModel(), a),
          "chart" === t.base &&
            (this.createField(t.getChartTypeModel(), a),
            this.createField(t.getChartDatasetsModel(), a),
            this.createField(t.getChartStackedModel(), a),
            this.createField(t.getChartLineTensionModel(), a),
            this.createField(t.getChartLegendModel(), a)),
          t.getDChoiceValuesModel &&
            ((u = this.createField(t.getDChoiceValuesModel(), a)),
            u.model.on("update", () => {})),
          t.getDChoiceCaptionModel &&
            (p = this.createField(t.getDChoiceCaptionModel(), a)),
          t.getDChoiceColorModel &&
            (h = this.createField(t.getDChoiceColorModel(), a)),
          t.getDChoiceIconModel &&
            (m = this.createField(t.getDChoiceIconModel(), a));
        var f = $('<div class="button block" style="margin:8px">').appendTo(a),
          g = $("<div>").hide().appendTo(a),
          v = $('<div class="i-32-24 i-light-grey i-line-right">').appendTo(f);
        $("<span>").text(locale.showExtendedOptions).appendTo(f),
          f.touch(() => {
            (C = !C), v.toggleClass("i-line-right i-line-down"), g.toggle();
          }),
          C && (v.toggleClass("i-line-right i-line-down"), g.show()),
          t.getTooltipModel && this.createField(t.getTooltipModel(), g),
          t.getOnClickModel && this.createField(t.getOnClickModel(), g),
          t.getReferenceFormatModel &&
            this.createField(t.getReferenceFormatModel(), g),
          t.getVisibilityModel && this.createField(t.getVisibilityModel(), g),
          (t.isReference || t.isField) &&
            ("fn" !== t.base && this.createField(t.getAfterUpdateModel(), g),
            t.isReference && this.createField(t.getConstraintModel(), g),
            database.supports.authentication &&
              ((this.readRoles = new T.a(this, t.getReadRolesModel(), g)),
              "fn" !== t.base && this.createField(t.getWriteRolesModel(), g)),
            t.getCanWriteModel &&
              "fn" !== t.base &&
              this.createField(t.getCanWriteModel(), g)),
          database.supports.authentication &&
            t.isReverse &&
            (this.createField(t.reference.getReadRolesModel(), g),
            this.createField(t.reference.getWriteRolesModel(), g)),
          t.isReverse &&
            t.reference.getCanWriteModel &&
            this.createField(t.reference.getCanWriteModel(), g),
          t.getGlobalSearchModel &&
            this.createField(t.getGlobalSearchModel(), g),
          database.supports.indexes &&
            t.getHasIndexModel &&
            this.createField(t.getHasIndexModel(), g),
          t.getBindingModel && this.createField(t.getBindingModel(), g),
          t.getBeforeShowModel && this.createField(t.getBeforeShowModel(), g),
          t.getAfterHideModel && this.createField(t.getAfterHideModel(), g),
          i &&
            this.caption &&
            setTimeout(function () {
              o.caption.focus();
            }, 400);
      }
      createField(e, t) {
        const i = new T.a(this, e, t);
        return this.components.push(i), i;
      }
      destroy() {
        for (const e of this.components) e.destroy();
      }
      close() {
        var e = this;
        e.$backplane.close(function () {
          e.destroy();
        });
      }
    }
  },
  "./src/js/admin/FunctionEditor.js": function (e, t, i) {
    "use strict";
    i.d(t, "b", function () {
      return s;
    }),
      i.d(t, "a", function () {
        return r;
      });
    i("./node_modules/core-js/modules/es.string.replace.js");
    var o = i("./node_modules/underscore/underscore.js"),
      a = i("./src/react/util/Track.ts");
    const n = !TOUCH;
    function s() {
      n &&
        CodeMirror.defineSimpleMode("nx", {
          start: [
            { regex: /"(?:[^"]|"")*?"/, token: "string" },
            {
              regex: /(function)(\s+)([a-z$][\w$]*)/,
              token: ["keyword", null, "variable-2"],
            },
            {
              regex:
                /(?:true|false|null|void|and|or|not|like|select|create|delete|from|where|order|group|by|in|as|of|for|while|if|then|else|end|switch|case|default|do|each|let|this|record)\b/,
              token: "keyword",
            },
            { regex: /true|false|null/, token: "atom" },
            {
              regex: /0x[a-f\d]+|[-+]?(?:\.\d+|\d+\.?\d*)(?:e[-+]?\d+)?/i,
              token: "number",
            },
            { regex: /\/\/.*/, token: "comment" },
            { regex: /\/(?:[^\\]|\\.)*?\//, token: "variable-3" },
            { regex: /\/\*/, token: "comment", next: "comment" },
            { regex: /[-+\/*=<>!]+/, token: "operator" },
            { regex: /[\{\[\(]/, indent: !0 },
            { regex: /[\}\]\)]/, dedent: !0 },
            { regex: /[a-z$][\w$]*/, token: "variable" },
            { regex: /<</, token: "meta", mode: { spec: "xml", end: />>/ } },
          ],
          comment: [
            { regex: /.*?\*\//, token: "comment", next: "start" },
            { regex: /.*/, token: "comment" },
          ],
          meta: { dontIndentStates: ["comment"], lineComment: "//" },
        });
    }
    function r(e) {
      (this.value = e.value || ""),
        (this.isHuman = !!e.isHuman),
        (this.schema = e.schema),
        (this.type = e.type),
        (this.variables = e.variables || {}),
        (this.supportsCommands = e.supportsCommands || !1),
        (this.ownerField = e.ownerField),
        (this.okay = e.okay),
        (this.cancel = e.cancel),
        (this.$backplane = $.backplane({ closable: !1, cls: "opaq" })),
        "text" ===
        NinoxDocumentInteraction.getUserDefault("ui.functionEditorMode")
          ? this.openTextEditor()
          : this.openVisualEditor();
    }
    (r.prototype.openVisualEditor = function () {
      NinoxDocumentInteraction.setUserDefault(
        "ui.functionEditorMode",
        "visual"
      );
      var e = this,
        t = this.schema,
        i = this.type,
        n = this.variables,
        s = this.supportsCommands,
        r = this.ownerField,
        l = {
          block: ";",
          add: "+",
          sub: "&minus;",
          mul: "&ast;",
          div: "/",
          mod: "%",
          and: locale.op_and,
          or: locale.op_or,
          not: locale.op_not,
          true: locale.op_true,
          false: locale.op_false,
          if: locale.op_if,
          eq: "=    ",
          ne: "&ne;",
          gt: "&gt;",
          lt: "&lt;",
          ge: "&ge;",
          le: "&le;",
          like: locale.op_like,
          round: locale.op_round,
          ceil: locale.op_ceil,
          floor: locale.op_floor,
          sqrt: "&radic;",
          sqr: "&sup2;",
          sign: locale.op_sign,
          abs: locale.op_abs,
          sin: "sin",
          cos: "cos",
          tan: "tan",
          asin: "asin",
          acos: "acos",
          atan: "atan",
          atan2: "atan&sup2;",
          pow: " ^ ",
          exp: "e ^ ",
          log: "log<sub>10<sub>",
          ln: "ln",
          year: locale.op_year,
          day: locale.op_day,
          month: locale.op_month,
          weekday: locale.op_weekday,
          age: locale.op_age,
          format: locale.op_format,
          today: locale.op_today,
          now: locale.op_now,
          yearmonth: locale.op_yearmonth,
          yearquater: locale.op_yearquater,
          yearquarter: locale.op_yearquater,
          start: locale.op_start,
          endof: locale.op_end,
          duration: locale.op_duration,
          text: locale.op_text,
          trim: locale.op_trim,
          lower: locale.op_lower,
          upper: locale.op_upper,
          lpad: locale.op_lpad,
          rpad: locale.op_rpad,
          substr: locale.op_substr,
          contains: locale.op_contains,
          index: locale.op_index,
          date: locale.op_date,
          number: locale.op_number,
          yearweek: locale.op_yearweek,
          week: locale.op_week,
          days: locale.op_days,
          workdays: locale.op_workdays,
        },
        c = {
          helper: "clone",
          opacity: 0.7,
          scroll: !1,
          appendTo: $(document.body),
          zIndex: 1e3,
        },
        d = {
          helper: "clone",
          opacity: 0.7,
          appendTo: $(document.body),
          zIndex: 1e3,
        },
        u = {
          accept: ".fn-op, .fn-exp",
          hoverClass: "drop-hover",
          greedy: !0,
          tolerance: "pointer",
          drop: P,
        },
        p = { accept: ".fn-exp", tolerance: "pointer", drop: G },
        h = this.$backplane,
        m = $('<div class="tab-selected-indicator">'),
        f = $('<div class="fn-function">').appendTo(h),
        g = $('<div class="fn-tabs">').appendTo(h),
        v = $('<div class="fn-operators">').appendTo(h),
        b = $("<div>").appendTo(v),
        y = $('<div class="fn-controls">').appendTo(h),
        w = $('<div class="fn-error-container">').hide().appendTo(h);
      $('<div class="i-32-12 i-red i-warning">').appendTo(w);
      var x = $("<div>").appendTo(w);
      $('<div class="nx-button-text grey">')
        .text(locale.cancel)
        .appendTo(y)
        .touch(ee),
        $('<div class="nx-hspace-flex">').appendTo(y);
      var T,
        C,
        k = $('<div class="fn-mode">').appendTo(y);
      $('<div class="button option first selected">')
        .text(locale.modeVisual)
        .appendTo(k),
        $('<div class="button option last">')
          .text(locale.modeText)
          .appendTo(k)
          .click(Q);
      $('<div class="nx-hspace-flex">').appendTo(y),
        $('<div class="nx-button-text blue">')
          .text(locale.okay)
          .appendTo(y)
          .touch(te),
        h.droppable(p),
        f.droppable(u),
        s &&
          ((T = $('<div class="fn-operators-pane">').hide().appendTo(b)),
          (C = $('<div class="tab">')
            .text(locale.commands)
            .appendTo(g)
            .data("pane", T)
            .click(A)),
          i &&
            o.each(i.sorted, function (e) {
              e.isField &&
                "fn" !== e.base &&
                $('<div class="fn-op fn-op-assign">')
                  .text(e.caption + " :=")
                  .data("op", "assign")
                  .data("field", e)
                  .draggable(c)
                  .appendTo(T);
            }),
          $("<br>").appendTo(T),
          $('<div class="fn-op fn-op-block">')
            .html(l.block)
            .data("op", "block")
            .draggable(c)
            .appendTo(T));
      var S = $('<div class="fn-operators-pane">').hide().appendTo(b),
        _ = $('<div class="tab">')
          .text(locale.fields)
          .appendTo(g)
          .data("pane", S)
          .click(A),
        E = $('<div class="fn-nav">').appendTo(S),
        D = $('<div class="fn-fields">').appendTo(S),
        N = [{ type: i, variables: n }],
        M = $('<div class="fn-operators-pane">').hide().appendTo(b);
      $('<div class="fn-op fn-op-bin fn-op-bin-add">')
        .html(l.add)
        .data("op", "add")
        .draggable(c)
        .appendTo(M),
        $('<div class="fn-op fn-op-bin fn-op-bin-sub">')
          .html(l.sub)
          .data("op", "sub")
          .draggable(c)
          .appendTo(M),
        $('<div class="fn-op fn-op-bin fn-op-bin-mul">')
          .html(l.mul)
          .data("op", "mul")
          .draggable(c)
          .appendTo(M),
        $('<div class="fn-op fn-op-bin fn-op-bin-div">')
          .html(l.div)
          .data("op", "div")
          .draggable(c)
          .appendTo(M),
        $('<div class="fn-op fn-op-bin fn-op-bin-mod">')
          .html(l.mod)
          .data("op", "mod")
          .draggable(c)
          .appendTo(M),
        $('<div class="fn-op fn-op-const fn-op-const-number">')
          .html("1234")
          .data("op", "number")
          .draggable(c)
          .appendTo(M),
        $("<br>").appendTo(M),
        o.each(
          [
            { fn: "number", params: 1 },
            { fn: "sqrt", params: 1 },
            { fn: "sqr", params: 1 },
            { fn: "pow", params: 2 },
            { fn: "exp", params: 1 },
            { fn: "log", params: 1 },
            { fn: "ln", params: 1 },
            { fn: "sin", params: 1 },
            { fn: "cos", params: 1 },
            { fn: "tan", params: 1 },
            { fn: "asin", params: 1 },
            { fn: "acos", params: 1 },
            { fn: "atan", params: 1 },
            { fn: "atan2", params: 1 },
            { fn: "round", params: 1 },
            { fn: "ceil", params: 1 },
            { fn: "floor", params: 1 },
            { fn: "sign", params: 1 },
            { fn: "abs", params: 1 },
          ],
          function (e) {
            $('<div class="fn-op fn-op-fn">')
              .html(l[e.fn])
              .data("op", "fn")
              .data("fn", e)
              .draggable(c)
              .appendTo(M);
          }
        );
      $('<div class="tab">')
        .text(locale.calculate)
        .appendTo(g)
        .data("pane", M)
        .click(A);
      var I = $('<div class="fn-operators-pane">').hide().appendTo(b);
      $('<div class="fn-op fn-op-if">')
        .html(l.if)
        .data("op", "if")
        .draggable(c)
        .appendTo(I),
        $('<div class="fn-op fn-op-bin fn-op-bin-and">')
          .html(l.and)
          .data("op", "and")
          .draggable(c)
          .appendTo(I),
        $('<div class="fn-op fn-op-bin fn-op-bin-or">')
          .html(l.or)
          .data("op", "or")
          .draggable(c)
          .appendTo(I),
        $('<div class="fn-op fn-op-un fn-op-un-not">')
          .html(l.not)
          .data("op", "not")
          .draggable(c)
          .appendTo(I),
        $('<div class="fn-op fn-op-const fn-op-const-true">')
          .html(l.true)
          .data("op", "true")
          .draggable(c)
          .appendTo(I),
        $('<div class="fn-op fn-op-const fn-op-const-false">')
          .html(l.false)
          .data("op", "false")
          .draggable(c)
          .appendTo(I),
        $("<br>").appendTo(I),
        o.each(["eq", "ne", "lt", "le", "ge", "gt", "like"], function (e) {
          $('<div class="fn-op fn-op-cmp fn-op-cmp-' + e + '">')
            .html(l[e])
            .data("op", e)
            .draggable(c)
            .appendTo(I);
        });
      $('<div class="tab">')
        .text(locale.logic)
        .appendTo(g)
        .data("pane", I)
        .click(A);
      var R = $('<div class="fn-operators-pane">').hide().appendTo(b);
      $('<div class="fn-op fn-op-const fn-op-const-string">')
        .html(locale.op_string)
        .data("op", "string")
        .draggable(c)
        .appendTo(R),
        o.each(
          [
            { fn: "text", params: 1 },
            { fn: "trim", params: 1 },
            { fn: "lower", params: 1 },
            { fn: "upper", params: 1 },
            { fn: "lpad", params: 3 },
            { fn: "rpad", params: 3 },
            { fn: "substr", params: 3 },
            { fn: "contains", params: 2 },
            { fn: "index", params: 2 },
          ],
          function (e) {
            $('<div class="fn-op fn-op-fn">')
              .html(l[e.fn])
              .data("op", "fn")
              .data("fn", e)
              .draggable(c)
              .appendTo(R);
          }
        ),
        $("<br>").appendTo(R),
        o.each(
          [
            { fn: "year", params: 1 },
            { fn: "day", params: 1 },
            { fn: "month", params: 1 },
            { fn: "weekday", params: 1 },
            { fn: "week", params: 1 },
            { fn: "yearmonth", params: 1 },
            { fn: "yearquarter", params: 1 },
            { fn: "yearweek", params: 1 },
            { fn: "start", params: 1 },
            { fn: "endof", params: 1 },
            { fn: "duration", params: 1 },
            { fn: "days", params: 2 },
            { fn: "workdays", params: 2 },
            { fn: "age", params: 1 },
            { fn: "today", params: 0 },
            { fn: "now", params: 0 },
            { fn: "date", params: 3 },
            { fn: "format", params: 2 },
          ],
          function (e) {
            $('<div class="fn-op fn-op-fn">')
              .html(l[e.fn])
              .data("op", "fn")
              .data("fn", e)
              .draggable(c)
              .appendTo(R);
          }
        );
      var F;
      $('<div class="tab">')
        .text(locale.textAndDate)
        .appendTo(g)
        .data("pane", R)
        .click(A);
      function A(e) {
        F && (F.data("pane").hide(), F.removeClass("selected"), m.detach()),
          (F = $(this)).data("pane").show(),
          F.addClass("selected"),
          m.appendTo(F);
      }
      A.call(C || _), L();
      try {
        if (this.value) {
          var O = this.isHuman
            ? queries.parseHuman(t, i, this.value, n)
            : queries.parseSystem(t, i, this.value, n);
          f.append(W(O));
        }
        X();
      } catch (e) {
        K(e);
      }
      function z(e) {
        if (e.length) {
          for (
            var t = e[0],
              i = t.isVariable
                ? new queries.Parameter(t.id, t.returnType, !0 === t.isMultiple)
                : "fn" === t.base
                ? new queries.Eval(t.type, t)
                : new queries.Get(t.type, t),
              o = 1;
            o < e.length;
            o++
          ) {
            var a = e[o],
              n = a.isVariable
                ? new queries.Parameter(a.id, t.returnType, !0 === a.isMultiple)
                : "fn" === a.base
                ? new queries.Eval(a.type, a)
                : new queries.Get(a.type, a);
            i = new queries.Follow(i, n);
          }
          return i;
        }
      }
      function L() {
        D.empty(), E.empty();
        var e = !1,
          t = [];
        o.each(N, function (i, o) {
          i.field
            ? (i.field.isReverse && (e = !0), t.push(i.field))
            : i.variable && t.push(i.variable),
            i.type
              ? $('<div class="fn-nav-item">')
                  .append(
                    $(
                      `<div class="type-symbol i-32-24 ${
                        o === N.length - 1 ? "i-light-grey" : "i-blue"
                      } i-field-${i.field ? i.field.base : "list"}">`
                    )
                  )
                  .append(
                    $('<div class="type-label">').text(
                      i.field ? i.field.caption : i.type.caption
                    )
                  )
                  .appendTo(E)
                  .touch(function () {
                    (N = N.slice(0, o + 1)), L();
                  })
              : $('<div class="fn-nav-item">')
                  .append(
                    $('<div class="i-32-24 i-light-grey i-arrow-solid-right">')
                  )
                  .appendTo(E)
                  .touch(function () {
                    (N = N.slice(0, o + 1)), L();
                  });
        });
        var i = N[N.length - 1],
          a = i.field,
          n = i.type,
          s = i.variables;
        s &&
          o.each(s, function (e) {
            $('<div class="fn-op fn-op-exp fn-op-more">')
              .append($('<div class="type-symbol type-symbol-list">'))
              .append($('<div class="type-label">').text(e.caption))
              .data("variable", e)
              .touch(j)
              .appendTo(D);
          }),
          n
            ? o.each([n.field_id].concat(n.sorted), function (i) {
                try {
                  if (i !== r)
                    if (i.isField)
                      if (e)
                        $('<div class="fn-op fn-op-exp fn-op-more">')
                          .append(
                            $(
                              '<div class="type-symbol i-32-24 i-blue i-field-' +
                                i.base +
                                '">'
                            )
                          )
                          .append($('<div class="type-label">').text(i.caption))
                          .data("field", i)
                          .touch(j)
                          .appendTo(D);
                      else {
                        var o = z(t.concat([i]));
                        $('<div class="fn-op fn-op-exp">')
                          .append(
                            $(
                              '<div class="type-symbol i-32-24 i-light-grey i-field-' +
                                o.returnType.base +
                                '">'
                            )
                          )
                          .append($('<div class="type-label">').text(i.caption))
                          .data("op", "exp")
                          .data("exp", o)
                          .draggable(c)
                          .appendTo(D);
                      }
                    else
                      i.isReference
                        ? $('<div class="fn-op fn-op-exp fn-op-more">')
                            .append(
                              $(
                                '<div class="type-symbol i-32-24 i-blue i-field-ref">'
                              )
                            )
                            .append(
                              $('<div class="type-label">').text(i.caption)
                            )
                            .data("field", i)
                            .touch(j)
                            .appendTo(D)
                        : i.isReverse &&
                          $('<div class="fn-op fn-op-exp fn-op-more">')
                            .append(
                              $(
                                '<div class="type-symbol i-32-24 i-blue i-field-rev">'
                              )
                            )
                            .append(
                              $('<div class="type-label">').text(i.caption)
                            )
                            .data("field", i)
                            .touch(j)
                            .appendTo(D);
                } catch (e) {
                  console.log(e);
                }
              })
            : a &&
              e &&
              o.each(a.aggregations, function (e) {
                var i = z(t);
                i &&
                  ((i = new queries.Agg(queries.AGGS[e], [i])),
                  $('<div class="fn-op fn-op-exp">')
                    .append($('<div class="symbol symbol-' + e + '">'))
                    .append($('<div class="type-label">').text(a.caption))
                    .data("op", "exp")
                    .data("exp", i)
                    .draggable(c)
                    .appendTo(D));
              });
      }
      function j(e) {
        var t = $(this),
          i = t.data("field"),
          o = t.data("variable");
        if (i) {
          if (i.isField) N.push({ field: i });
          else if (i.isReference || i.isReverse) {
            var a = i.refType;
            if (!a) return;
            N.push({ type: a, field: i });
          }
        } else o && N.push({ type: o.returnType, variable: o });
        L();
      }
      function P(e, t) {
        var i = $(e.target),
          o = t.draggable;
        o.is(".fn-op") ? H(i, o) : o.is(".fn-exp") && U(i, o), X();
      }
      function H(e, t) {
        var i = e.children();
        if (!(i.length > 1)) {
          0 === i.length && (i = void 0);
          var o = B(t, i);
          o && o.appendTo(e), X();
        }
      }
      function U(e, t) {
        0 === e.children().length && t.appendTo(e), X();
      }
      function V() {}
      function W(e) {
        if (e) {
          var t,
            i,
            o,
            a,
            n,
            s,
            r,
            c = $('<div class="fn-exp">').draggable(d);
          switch (e.base) {
            case "assign":
              (i = "assign"),
                c.data("field", e.field),
                (o = W(e.exp) || V()),
                $('<div class="fn-exp-label">')
                  .text(e.field.caption + " :=")
                  .appendTo(c),
                $('<div class="fn-exp-param fn-exp-param0">')
                  .droppable(u)
                  .appendTo(c)
                  .append(o);
              break;
            case "block":
              for (i = "block", t = 0; t < e.exps.length; t++)
                (o = W(e.exps[t]) || V()),
                  $('<div class="fn-exp-param fn-exp-param0">')
                    .droppable(u)
                    .appendTo(c)
                    .append(o),
                  $('<div class="fn-exp-label">').html(";<br>").appendTo(c);
              break;
            case "bin":
              if (
                !(i = {
                  "+": "add",
                  "-": "sub",
                  "*": "mul",
                  "/": "div",
                  "%": "mod",
                }[e.binop.op])
              )
                throw new Error("Unknown operator " + e.op);
              (o = W(e.exprA) || V()),
                (a = W(e.exprB) || V()),
                $('<div class="fn-exp-param fn-exp-param0">')
                  .droppable(u)
                  .appendTo(c)
                  .append(o),
                $('<div class="fn-exp-label">')
                  .html(l[i] || i)
                  .appendTo(c),
                $('<div class="fn-exp-param fn-exp-param1">')
                  .droppable(u)
                  .appendTo(c)
                  .append(a);
              break;
            case "comp":
              if (
                !(i = {
                  "=": "eq",
                  "!=": "ne",
                  "<": "lt",
                  ">": "gt",
                  "<=": "le",
                  ">=": "ge",
                  like: "like",
                }[e.cmp])
              )
                throw new Error("Unknown comparator " + e.cmp);
              (o = W(e.exprA) || V()),
                (a = W(e.exprB) || V()),
                $('<div class="fn-exp-param fn-exp-param0">')
                  .droppable(u)
                  .appendTo(c)
                  .append(o),
                $('<div class="fn-exp-label">')
                  .html(l[i] || i)
                  .appendTo(c),
                $('<div class="fn-exp-param fn-exp-param1">')
                  .droppable(u)
                  .appendTo(c)
                  .append(a);
              break;
            case "and":
              (i = "and"),
                (o = W(e.exprA) || V()),
                (a = W(e.exprB) || V()),
                $('<div class="fn-exp-param fn-exp-param0">')
                  .droppable(u)
                  .appendTo(c)
                  .append(o),
                $('<div class="fn-exp-label">')
                  .html(l[i] || i)
                  .appendTo(c),
                $('<div class="fn-exp-param fn-exp-param1">')
                  .droppable(u)
                  .appendTo(c)
                  .append(a);
              break;
            case "or":
              (i = "or"),
                (o = W(e.exprA) || V()),
                (a = W(e.exprB) || V()),
                $('<div class="fn-exp-param fn-exp-param0">')
                  .droppable(u)
                  .appendTo(c)
                  .append(o),
                $('<div class="fn-exp-label">')
                  .html(l[i] || i)
                  .appendTo(c),
                $('<div class="fn-exp-param fn-exp-param1">')
                  .droppable(u)
                  .appendTo(c)
                  .append(a);
              break;
            case "not":
              (i = "not"),
                (o = W(e.expr) || V()),
                $('<div class="fn-exp-label">')
                  .html(l[i] || i)
                  .appendTo(c),
                $('<div class="fn-exp-param fn-exp-param0">')
                  .droppable(u)
                  .appendTo(c)
                  .append(o);
              break;
            case "const":
              !0 === (s = e.value)
                ? ((i = "true"),
                  $('<div class="fn-exp-label">')
                    .html(l[i] || i)
                    .appendTo(c))
                : !1 === s
                ? ((i = "false"),
                  $('<div class="fn-exp-label">')
                    .html(l[i] || i)
                    .appendTo(c))
                : "string" == typeof s
                ? ((i = "string"),
                  $('<div class="fn-exp-value">').text(s).appendTo(c).click(Y))
                : "number" == typeof s
                ? ((i = "number"),
                  $('<div class="fn-exp-value">').text(s).appendTo(c).click(q))
                : ((i = "exp"),
                  c.data("exp", e),
                  $('<div class="fn-exp-label">').text(e.caption).appendTo(c));
              break;
            case "apply":
              for (
                i = "fn",
                  r = e.functor.id,
                  c.data("fn", { fn: r, params: e.functor.argTypes.length }),
                  $('<div class="fn-exp-label">')
                    .html(l[r] || r)
                    .appendTo(c),
                  t = 0;
                t < e.exprs.length;
                t++
              )
                (o = W(e.exprs[t]) || V()),
                  $('<div class="fn-exp-param fn-exp-param0">')
                    .droppable(u)
                    .appendTo(c)
                    .append(o);
              break;
            case "if":
              (i = "if"),
                (o = W(e.exprIf) || V()),
                (a = W(e.exprThen) || V()),
                (n = W(e.exprElse) || V()),
                $('<div class="fn-exp-label">')
                  .text(locale.op_if_if)
                  .appendTo(c),
                $('<div class="fn-exp-param fn-exp-param0">')
                  .droppable(u)
                  .appendTo(c)
                  .append(o),
                $('<div class="fn-exp-label">')
                  .text(locale.op_if_then)
                  .appendTo(c),
                $('<div class="fn-exp-param fn-exp-param1">')
                  .droppable(u)
                  .appendTo(c)
                  .append(a),
                $('<div class="fn-exp-label">')
                  .text(locale.op_if_else)
                  .appendTo(c),
                $('<div class="fn-exp-param fn-exp-param2">')
                  .droppable(u)
                  .appendTo(c)
                  .append(n);
              break;
            default:
              (i = "exp"),
                c.data("exp", e),
                $('<div class="fn-exp-label">')
                  .text(e.toHumanString().replace(/\s+/g, " "))
                  .appendTo(c);
          }
          return c.addClass("fn-exp-op-" + i), c.data("op", i), c;
        }
      }
      function B(e, t) {
        var i = e.data("op"),
          o = $('<div class="fn-exp fn-exp-op-' + i + '">')
            .data("op", i)
            .draggable(d);
        switch (i) {
          case "assign":
            var a = e.data("field");
            return (
              o.data("field", a),
              $('<div class="fn-exp-label">')
                .text(a.caption + " :=")
                .appendTo(o),
              $('<div class="fn-exp-param fn-exp-param0">')
                .droppable(u)
                .appendTo(o)
                .append(t || V()),
              o
            );
          case "if":
            return (
              $('<div class="fn-exp-label">').text(locale.op_if_if).appendTo(o),
              $('<div class="fn-exp-param fn-exp-param0">')
                .droppable(u)
                .appendTo(o)
                .append(t || V()),
              $('<div class="fn-exp-label">')
                .text(locale.op_if_then)
                .appendTo(o),
              $('<div class="fn-exp-param fn-exp-param1">')
                .droppable(u)
                .appendTo(o)
                .append(V()),
              $('<div class="fn-exp-label">')
                .text(locale.op_if_else)
                .appendTo(o),
              $('<div class="fn-exp-param fn-exp-param2">')
                .droppable(u)
                .appendTo(o)
                .append(V()),
              o
            );
          case "block":
            return (
              $('<div class="fn-exp-param fn-exp-param0">')
                .droppable(u)
                .appendTo(o)
                .append(t || V()),
              $('<div class="fn-exp-label">').html(";<br>").appendTo(o),
              $('<div class="fn-exp-param fn-exp-param0">')
                .droppable(u)
                .appendTo(o)
                .append(V()),
              o
            );
          case "add":
          case "sub":
          case "mul":
          case "div":
          case "mod":
          case "and":
          case "or":
          case "eq":
          case "ne":
          case "lt":
          case "le":
          case "gt":
          case "ge":
          case "like":
            return (
              $('<div class="fn-exp-param fn-exp-param0">')
                .droppable(u)
                .appendTo(o)
                .append(t || V()),
              $('<div class="fn-exp-label">')
                .html(l[i] || i)
                .appendTo(o),
              $('<div class="fn-exp-param fn-exp-param1">')
                .droppable(u)
                .appendTo(o)
                .append(V()),
              o
            );
          case "not":
            return (
              $('<div class="fn-exp-label">')
                .html(l[i] || i)
                .appendTo(o),
              $('<div class="fn-exp-param fn-exp-param0">')
                .droppable(u)
                .appendTo(o)
                .append(t || V()),
              o
            );
          case "true":
          case "false":
            if (t) return;
            return (
              $('<div class="fn-exp-label">')
                .html(l[i] || i)
                .appendTo(o),
              o
            );
          case "fn":
            var n = e.data("fn");
            switch ((o.data("fn", n), n.fn)) {
              case "sqr":
                $('<div class="fn-exp-param fn-exp-param0">')
                  .droppable(u)
                  .appendTo(o)
                  .append(t || V()),
                  $('<div class="fn-exp-label">').html(l.sqr).appendTo(o);
                break;
              default:
                $('<div class="fn-exp-label">')
                  .html(l[n.fn] || n.fn)
                  .appendTo(o),
                  n.params > 0 &&
                    $('<div class="fn-exp-param fn-exp-param0">')
                      .droppable(u)
                      .appendTo(o)
                      .append(t || V());
                for (var s = 1; s < n.params; s++)
                  $('<div class="fn-exp-param fn-exp-param' + s + '">')
                    .droppable(u)
                    .appendTo(o)
                    .append(V());
            }
            return o;
          case "number":
            if (t) return;
            return (
              $('<div class="fn-exp-value">').text("1234").appendTo(o).click(q),
              o
            );
          case "string":
            if (t) return;
            return (
              $('<div class="fn-exp-value">')
                .text(locale.op_string)
                .appendTo(o)
                .click(Y),
              o
            );
          case "exp":
            if (t) return;
            var r = e.data("exp");
            return (
              o
                .data("exp", r)
                .append(
                  $('<div class="fn-exp-label">').text(r.toHumanString(0))
                ),
              o
            );
        }
      }
      function q() {
        var e = $(this),
          t = e.text();
        e.empty();
        var i = $(
          '<input type="number" class="fn-exp-input fn-exp-input-number">'
        )
          .val(t)
          .css("width", Math.max(10 * t.length, 50))
          .appendTo(e)
          .focus()
          .blur(function () {
            (t = i.val()), i.remove(), e.text(t), X();
          });
      }
      function Y() {
        var e = $(this),
          t = e.text();
        e.empty();
        var i = $(
          '<input type="text" class="fn-exp-input fn-exp-input-string">'
        )
          .val(t)
          .css("width", Math.max(10 * t.length, 50))
          .appendTo(e)
          .focus()
          .blur(function () {
            (t = i.val()), i.remove(), e.text(t), X();
          });
      }
      function G(e, t) {
        t.draggable.remove(), setTimeout(X, 0);
      }
      function X() {
        f.find(".error").removeClass("error");
        try {
          var e = Z(),
            o = e ? e.toString() : "",
            a = o ? queries.parseSystem(t, i, o, n) : void 0;
          return K(void 0), a;
        } catch (e) {
          return K(e), !1;
        }
      }
      function K(e) {
        if (e) {
          e.$exp && e.$exp.addClass("error");
          var t = (e.message ? e.message : String(e)) || locale.fnUnknowError;
          w.show(), x.text(t);
        } else w.hide(), x.empty();
      }
      function J(e, t, i) {
        var o = e.children(".fn-exp-param")[t];
        if (!o) throw new Error("Parameter dom node not found " + t);
        var a = o.childNodes;
        if (0 === a.length) {
          if (i) return;
          throw { message: locale.fnMissingParameter, $exp: e };
        }
        if (a.length > 1) throw { message: locale.fnInvalidParameter, $exp: e };
        if ($(a[0]).is(".exp-param-placeholder")) {
          if (i) return;
          throw { message: locale.fnMissingParameter, $exp: e };
        }
        return Z($(a[0]));
      }
      function Z(e) {
        if (!e) {
          if (0 === (e = f.children()).length) return;
          if (e.length > 1) throw { message: locale.fnInvalidExpression };
        }
        var t,
          i,
          o,
          a,
          n,
          s,
          r,
          l,
          c,
          d,
          u,
          p,
          h,
          m,
          g = e.data("op");
        switch (g) {
          case "assign":
            (i = e.data("field")), (o = J(e, 0));
            try {
              return new queries.Assign(i, o);
            } catch (t) {
              throw { message: String(t), $exp: e };
            }
            break;
          case "block":
            for (
              r = e.children(".fn-exp-param"), s = [], t = 0;
              t < r.length;
              t++
            )
              (o = J(e, t)), s.push(o);
            try {
              return new queries.Block(s);
            } catch (t) {
              throw { message: String(t), $exp: e };
            }
            break;
          case "exp":
            return e.data("exp");
          case "add":
          case "sub":
          case "mul":
          case "div":
          case "mod":
            if (!(l = { add: "+", sub: "-", mul: "*", div: "/", mod: "%" }[g]))
              throw {
                message: locale.fnInvalidOperator + ' "' + g + '"',
                $exp: e,
              };
            if (
              ((o = J(e, 0)), (a = J(e, 1)), !(c = queries.getBinOp(o, l, a)))
            )
              throw {
                message: locale.fnInvalidOperator + ' "' + g + '"',
                $exp: e,
              };
            try {
              return new queries.Bin(o, c, a);
            } catch (t) {
              throw { message: String(t), $exp: e };
            }
            break;
          case "and":
            (o = J(e, 0)), (a = J(e, 1));
            try {
              return new queries.And(o, a);
            } catch (t) {
              throw { message: String(t), $exp: e };
            }
            break;
          case "or":
            (o = J(e, 0)), (a = J(e, 1));
            try {
              return new queries.Or(o, a);
            } catch (t) {
              throw { message: String(t), $exp: e };
            }
            break;
          case "not":
            o = J(e, 0);
            try {
              return new queries.Not(o);
            } catch (t) {
              throw { message: String(t), $exp: e };
            }
            break;
          case "eq":
          case "ne":
          case "lt":
          case "le":
          case "gt":
          case "ge":
          case "like":
            if (
              !(d = {
                eq: "=",
                ne: "!=",
                lt: "<",
                le: "<=",
                gt: ">",
                ge: ">=",
                like: "like",
              }[g])
            )
              throw {
                message: locale.fnInvalidComparator + ' "' + g + '"',
                $exp: e,
              };
            (o = J(e, 0)), (a = J(e, 1));
            try {
              return new queries.Comp(o, d, a);
            } catch (t) {
              throw { message: String(t), $exp: e };
            }
            break;
          case "fn":
            for (u = e.data("fn"), s = [], t = 0; t < u.params; t++)
              s.push(J(e, t));
            if (!(p = queries.getFunctor(u.fn, s)))
              throw { message: locale.fnUndefinedFunction, $exp: e };
            try {
              return new queries.ApplyFunction(p, s);
            } catch (t) {
              throw { message: String(t), $exp: e };
            }
            break;
          case "if":
            (o = J(e, 0)), (a = J(e, 1)), (n = J(e, 2, !0));
            try {
              return new queries.If(o, a, n);
            } catch (t) {
              throw { message: String(t), $exp: e };
            }
            break;
          case "true":
            try {
              return new queries.Const(!0);
            } catch (t) {
              throw { message: String(t), $exp: e };
            }
            break;
          case "false":
            try {
              return new queries.Const(!1);
            } catch (t) {
              throw { message: String(t), $exp: e };
            }
            break;
          case "string":
            h = e.find(".fn-exp-value").first().text() || "";
            try {
              return new queries.Const(h);
            } catch (t) {
              throw { message: String(t), $exp: e };
            }
            break;
          case "number":
            if (
              ((h = e.find(".fn-exp-value").first().text()),
              (m = Number(h)),
              isNaN(m))
            )
              throw {
                message: locale.fnInvalidNumber + ' "' + h + '"',
                $exp: e,
              };
            try {
              return new queries.Const(m);
            } catch (t) {
              throw { message: String(t), $exp: e };
            }
        }
      }
      function Q() {
        Object(a.f)("Formula", "Text");
        var t = X();
        !1 !== t &&
          ((e.value = t ? t.toString() : ""),
          h.droppable("destroy"),
          h.empty(),
          e.openTextEditor());
      }
      function ee() {
        Object(a.f)("Formula", "Cancel"), ie(), e.cancel && e.cancel();
      }
      function te() {
        Object(a.f)("Formula", "Confirm");
        var t = X();
        if (!1 !== t) {
          if (t && t.isUpdating() && !s)
            return $.alert(locale.updateExpressionNotAllowed);
          var i = t ? t.toString() : "";
          (e.value = i), ie(), e.okay && e.okay(i, t);
        }
      }
      function ie() {
        h.close();
      }
    }),
      (r.prototype.openTextEditor = function () {
        NinoxDocumentInteraction.setUserDefault(
          "ui.functionEditorMode",
          "text"
        );
        var e = this,
          t = this.type,
          i = this.schema,
          s = this.variables,
          r = this.supportsCommands,
          l = {},
          c = this.$backplane,
          d = $('<div class="fn-controls">').appendTo(c),
          u = $('<div class="fn-error-container">').hide().appendTo(c);
        $('<div class="i-32-12 i-red i-warning">').appendTo(u);
        var p = $("<div>").appendTo(u),
          h = $('<div class="fn-suggestions">').appendTo(c),
          m = $('<div class="fn-tools">').appendTo(c).touch(S);
        TOUCH ||
          m.on("mousedown", function (e) {
            e.preventDefault();
          }),
          $('<div class="nx-button-text grey">')
            .text(locale.cancel)
            .appendTo(d)
            .touch(D),
          $('<div class="nx-hspace-flex">').appendTo(d);
        var f = $('<div class="fn-mode">').appendTo(d);
        $('<div class="button option first">')
          .text(locale.modeVisual)
          .appendTo(f)
          .click(_),
          $('<div class="button option last selected">')
            .text(locale.modeText)
            .appendTo(f);
        $('<div class="nx-hspace-flex">').appendTo(d),
          $('<div class="nx-button-text blue">')
            .text(locale.okay)
            .appendTo(d)
            .touch(E);
        var g = $('<div class="fn-textpane">').appendTo(c),
          v = $(
            '<textarea class="fn-textarea no-barcode" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false">'
          ).appendTo(g),
          b = $(
            '<div style="position:absolute;right:0;bottom:0;z-index:1;height:20px;line-height:20px;width:60px;padding:0 4px 0 0;font-size:12px;text-align:right;cursor:default;background-color:rgba(255,255,255,.5);color:#555">'
          ).appendTo(g),
          y = null;
        if (
          (n
            ? ((y = CodeMirror.fromTextArea(v[0], {
                lineNumbers: !0,
                mode: "nx",
                indentUnit: 4,
                tabSize: 4,
                smartIndent: !0,
                indentWithTabs: !0,
                electricChars: !0,
                lineWrapping: !0,
              })).on("changes", x),
              y.on("cursorActivity", T))
            : v.on("keyup change", x),
          this.value)
        )
          try {
            var w = this.isHuman
              ? queries.parseHuman(i, t, this.value, s)
              : queries.parseSystem(i, t, this.value, s);
            w &&
              (n ? y.setValue(w.toHumanString()) : v.val(w.toHumanString()),
              w.errors &&
                w.errors.length &&
                (u.show(), p.text(w.errors[0].message)));
          } catch (e) {
            u.show(), p.text(e);
          }
        function x() {
          C();
        }
        function T() {
          var e = y.getCursor();
          b.text(e.line + 1 + " / " + e.ch);
        }
        function C() {
          h.empty();
          var e = "";
          if (((e = n ? y.getValue() : v.val()), !/^\s*$/.test(e)))
            try {
              var a = queries.parseHuman(i, t, e, s);
              return a && a.errors && a.errors.length
                ? (u.show(), p.text(a.errors[0].message), r(a.errors[0]), !1)
                : (u.hide(), p.text(""), a);
            } catch (e) {
              return u.show(), p.text(e), r(e), !1;
            }
          function r(t) {
            t.suggestions &&
              o.each(t.suggestions, function (i) {
                function o() {
                  var o = e.substr(0, t.index),
                    a = e.substr(t.index + t.length);
                  if (((e = o + i + a), n)) {
                    var s = y.getCursor();
                    y.setValue(e),
                      s && y.setCursor({ line: s.line, ch: s.ch + i.length });
                  } else v.val(e);
                  return setTimeout(x, 0), !1;
                }
                $('<div class="fn-suggestion">')
                  .text(i)
                  .appendTo(h)
                  .on(TOUCH ? EVENT_touchstart : "mousedown", o);
              });
          }
        }
        function k() {
          var e = "";
          function i(t, a) {
            o.each(t.sorted, function (t) {
              var o = a.concat(util.escapeId(t.caption)),
                n = o.join(".");
              if (t.isField || t.isReference || t.isReverse) {
                var s = t.isReference || t.isReverse,
                  r = s && l[n];
                (e +=
                  '<div class="fn-tools-field" data-id="' +
                  n +
                  '"><div class="fn-tools-field-icon i-32-24 i-light-grey i-field-' +
                  t.base +
                  '"></div><div class="fn-tools-field-label">' +
                  htmlEscape(t.caption) +
                  "</div>" +
                  (s
                    ? '<div class="fn-tools-field-expand i-32-16 i-grey i-line-up ' +
                      (r ? "expanded" : "collapsed") +
                      '"></div>'
                    : "") +
                  "</div>"),
                  r &&
                    ((e += '<div class="fn-tools-list">'),
                    i(t.refType, o),
                    (e += "</div>"));
              }
            });
          }
          s &&
            s &&
            o.each(s, function (t) {
              var o = t.id,
                a = [o],
                n = !0,
                s = l[o];
              (e +=
                '<div class="fn-tools-field" data-id="' +
                o +
                '"><div class="fn-tools-field-label">' +
                htmlEscape(o + " (" + t.caption + ")") +
                "</div>" +
                (n
                  ? '<div class="fn-tools-field-expand i-32-16 i-grey i-line-down ' +
                    (s ? "expanded" : "collapsed") +
                    '"></div>'
                  : "") +
                "</div>"),
                s &&
                  ((e += '<div class="fn-tools-list">'),
                  i(t.returnType, a),
                  (e += "</div>"));
            }),
            t && i(t, []),
            m.html(e);
        }
        function S(e) {
          var t = $(e.target),
            i = t.closest(".fn-tools-field").attr("data-id");
          i &&
            (t.is(".fn-tools-field-expand")
              ? ((l[i] = !l[i]), k())
              : n
              ? (y.replaceSelection(i), x())
              : (v.replaceSelectedText(i), x()),
            TOUCH && !n && v.focus());
        }
        function _() {
          Object(a.f)("Formula", "Visual");
          var t = C();
          !1 !== t &&
            ((e.value = t ? t.toString() : ""),
            c.empty(),
            e.openVisualEditor());
        }
        function E(t) {
          Object(a.f)("Formula", "Confirm");
          var i = C();
          if (!1 !== i) {
            if (
              (t.shiftKey && console.log(i.getSyncJS()),
              i && i.isUpdating() && !r)
            )
              return $.alert(locale.updateExpressionNotAllowed);
            var o = i ? i.toString() : "";
            N(), e.okay && e.okay(o, i);
          }
        }
        function D() {
          Object(a.f)("Formula", "Cancel"), N(), e.cancel && e.cancel();
        }
        function N() {
          c.close();
        }
        C(), k();
      });
  },
  "./src/js/admin/ViewEditor.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return n;
    });
    var o = i("./src/js/widgets/Field.js"),
      a = i("./node_modules/underscore/underscore.js");
    function n(e) {
      var t = e.config,
        i = t.cols,
        n = t.type;
      if (("string" == typeof n && (n = database.schema.types[n]), n)) {
        var s = n.schema,
          r = {},
          l = void 0 !== t.sort ? i[t.sort] : void 0,
          c = void 0 !== t.sort ? i[t.group] : void 0,
          d = t.descending,
          u = !1,
          p = $.backplane({
            enter: function (e) {
              e.preventDefault(), O();
            },
          }),
          h = $('<div class="popupeditor nx-menu-popup vieweditor">').appendTo(
            p
          ),
          m = e.hasTop,
          f = database.supports.authentication;
        if (m) {
          var g = $('<div class="vieweditor-top">').appendTo(h),
            v = new util.SimpleModel(
              new schemas.TString(void 0, void 0, {
                caption: locale.enterViewName,
                width: f ? 3 : 4,
              })
            );
          v.value = e.caption;
          var b = new o.a(void 0, v, g);
          if (f) {
            var y = new util.SimpleModel(
              new schemas.TRoles(void 0, void 0, {
                caption: locale.readRoles,
                width: 1,
              })
            );
            y.value = e.readRoles;
            var w = new o.a(void 0, y, g);
            w.el.addClass("view-editor-roles-responsive"),
              b.el.addClass("view-editor-caption-responsive");
          }
        }
        var x = $(
            '<div class="vieweditor-left ' +
              (m ? "vieweditor-hastop " : "") +
              'accordion">'
          ).appendTo(h),
          T = $(
            '<div class="vieweditor-right ' +
              (m ? "vieweditor-hastop " : "") +
              'accordion">'
          ).appendTo(h);
        z(),
          $(window).on("resize", z),
          $('<div class="accordion-head">')
            .text(locale.visibleColumns)
            .appendTo(x),
          $('<div class="accordion-head">')
            .text(locale.availableColumns)
            .appendTo(T);
        var C = $('<div class="vieweditor-bottom">').appendTo(h);
        $('<div class="nx-button-bar">')
          .appendTo(C)
          .append(
            $('<div class="nx-button-text grey">').text(locale.cancel).touch(L)
          )
          .append($('<div class="nx-hspace-flex">'))
          .append(
            $('<div class="nx-button-text blue">').text(locale.okay).touch(O)
          );
        var k = $('<div class="accordion-pane vieweditor-columns">')
            .appendTo(x)
            .mouseup(F),
          S = $('<div class="accordion-pane vieweditor-columns">').appendTo(T);
        k.sortable({
          start: function () {
            u = !0;
          },
          stop: function (e) {
            u = !1;
          },
          beforeStop: function () {},
          receive: N,
          remove: M,
          sort: D,
          update: E,
          axis: "y",
          handle: TOUCH
            ? ".t-columneditor-icon, .t-columneditor-label"
            : void 0,
        }),
          I();
        var _ = -1;
      }
      function E() {
        (i = []),
          a.each(k.children(), function (e) {
            var t = $(e).data("col");
            t ? i.push(t) : alert("col no data");
          });
      }
      function D(e, t) {
        _ = t.placeholder.index();
      }
      function N(e, t) {
        var o = t.item;
        if (o) {
          var a = _,
            n = o.data("col");
          if (n) {
            var s = Object.assign({}, n);
            i.splice(a, 0, s),
              console.log("A"),
              t.item.draggable("cancel"),
              console.log("B"),
              k.sortable("cancel"),
              console.log("C"),
              I();
          }
        }
      }
      function M(e, t) {}
      function I() {
        R(), A();
      }
      function R() {
        k.empty();
        var e = 0;
        r = {};
        for (var t = 0; t < i.length; t++) {
          var o = i[t],
            a = o.expression,
            u = null;
          if (a) {
            try {
              u = queries.parseSystem(s, n, a, {});
            } catch (e) {
              console.warn(e, e.stack);
              continue;
            }
            r[a] = o;
          }
          var p = $('<div class="t-columneditor-column">')
            .data("col", o)
            .appendTo(k);
          $('<div class="t-columneditor-icon i-32-24 i-light-grey">')
            .addClass("i-field-" + (u ? u.returnType.base : "fn"))
            .appendTo(p),
            $('<div class="t-columneditor-label">')
              .text(o.caption || (u ? u.caption : locale.unnamed))
              .appendTo(p),
            l === o &&
              (d
                ? $(
                    '<div class="t-columneditor-icon i-24-12 i-light-grey i-line-down-thick">'
                  ).appendTo(p)
                : $(
                    '<div class="t-columneditor-icon i-24-12 i-light-grey i-line-up-thick">'
                  ).appendTo(p)),
            c === o &&
              $(
                '<div class="t-columneditor-icon i-24-16 i-light-grey i-table-group">'
              ).appendTo(p),
            o.filter &&
              $(
                '<div class="t-columneditor-icon i-24-16 i-light-grey i-setting-filter">'
              ).appendTo(p),
            o.agg &&
              $(
                '<div class="t-columneditor-icon symbol symbol-' + o.agg + '">'
              ).appendTo(p),
            e++;
        }
        0 === e && k.text(locale.dragColumnsHereToDefineView);
      }
      function F(e) {
        if (!u) {
          var t = $(e.target).closest(".t-columneditor-column"),
            a = t.data("col");
          if (a) {
            var r = $.backplane({ close: m }),
              p = $(
                '<div class="popupeditor nx-menu-popup grey width-4col" style="border-radius:4px">'
              ).appendTo(r);
            h(), p.center();
          }
        }
        function h() {
          p.empty();
          var e = new schemas.ExpressionModel(
            a,
            "expression",
            void 0,
            n,
            locale.function
          );
          e.on("change", function () {
            setTimeout(h, 0);
          });
          var u = void 0;
          if (a.expression)
            try {
              u = queries.parseSystem(s, n, a.expression, {});
            } catch (e) {
              console.warn(e, e.stack);
            }
          t.addClass("selected");
          var m = $(
            '<div class="component editor editor-string editor-4col">'
          ).appendTo(p);
          $("<label>").text(locale.caption).appendTo(m);
          var f = $('<input type="text">')
            .appendTo($('<div class="stringeditor">').appendTo(m))
            .attr("placeholder", u ? u.caption : "")
            .val(a.caption)
            .change(function () {
              (a.caption = f.val() || void 0), R();
            });
          if ((new o.a(void 0, e, p), u)) {
            var g = $('<div class="component editor editor-4col">').appendTo(p);
            $("<label>").text(locale.filter).appendTo(g);
            var v = tables.createFilterEditor(
              {
                updateFilter: function () {
                  (a.filter = v.getFilter()), R();
                },
              },
              g,
              u.returnType,
              a.filter
            );
            v || g.hide();
          }
          var b = $('<div class="component editor editor-4col">').appendTo(p);
          $("<label>").text(locale.sort).appendTo(b);
          var y = $('<div class="choiceswitch">').appendTo(b);
          const w = $(
              '<span class="i-32-16 i-light-grey i-line-up-thick"></span>'
            ),
            x = $('<div class="choiceswitch-item"></div>')
              .appendTo(y)
              .touch(function () {
                (l = l !== a || d ? a : void 0), (d = !1), F(), R();
              });
          x.append(w), x.append("<span>" + locale.sortAscending + "</span>");
          const T = $(
              '<span class="i-32-16 i-light-grey i-line-down-thick"></span>'
            ),
            C = $('<div class="choiceswitch-item">')
              .appendTo(y)
              .touch(function () {
                l === a && d ? ((l = void 0), (d = !1)) : ((l = a), (d = !0)),
                  F(),
                  R();
              });
          C.append(T),
            C.append("<span>" + locale.sortDescending + "</span></div>");
          const k = $('<div class="component editor editor-4col">').appendTo(p);
          $("<label>").text(locale.grouping).appendTo(k);
          const S = $("<div>").appendTo(k),
            _ = $('<div class="booleancheck-box"></div>'),
            E = $('<div class="booleancheck"></div>')
              .appendTo(S)
              .touch(function () {
                (c = c === a ? void 0 : a), F(), R();
              });
          E.append(_),
            E.append(
              '<div class="booleancheck-text">' + locale.grouped + "</div>"
            );
          var D = $('<div class="component editor editor-4col">').appendTo(p);
          $("<label>").text(locale.aggregation).appendTo(D);
          var N = $("<div>").appendTo(D);
          function M() {
            r.close(), i.splice(i.indexOf(a), 1), R(), A();
          }
          function I() {
            N.empty();
            let e = N;
            if (u) {
              const t = u.returnType.aggregations.length,
                i = t > 4 ? Math.ceil(t / 2) : 4;
              for (let o = 0; o < t; o++) {
                o % i == 0 &&
                  ((e = $('<div class="choiceswitch">')), N.append(e));
                const t = u.returnType.aggregations[o],
                  n = $(
                    '<span style="margin-right: 4px;">' +
                      ({
                        sum: "Σ",
                        first: "⤒",
                        last: "⤓",
                        avg: "Ø",
                        cnt: "#",
                        min: "⬇",
                        max: "⬆",
                        concat: "&middot;&middot;&middot;",
                      }[t] || "") +
                      "</span>"
                  ),
                  s = $('<div class="choiceswitch-item">')
                    .appendTo(e)
                    .append(n)
                    .append($("<span>").text(locale.agg[t]))
                    .touch(function () {
                      a.agg === t ? (a.agg = void 0) : (a.agg = t), R(), I();
                    });
                t === a.agg
                  ? (s.addClass("selected"), n.addClass("white"))
                  : n.removeClass("white");
              }
              t > 4 &&
                (N.children().first().addClass("first"),
                N.children().last().addClass("last"));
            }
          }
          function F() {
            x.removeClass("selected"),
              w.removeClass("i-white"),
              w.addClass("i-light-grey"),
              C.removeClass("selected"),
              T.removeClass("i-white"),
              T.addClass("i-light-grey"),
              _.attr("class", "booleancheck-box"),
              l === a &&
                (d
                  ? (T.removeClass("i-light-grey"),
                    T.addClass("i-white"),
                    C.addClass("selected"))
                  : (w.removeClass("i-light-grey"),
                    w.addClass("i-white"),
                    x.addClass("selected"))),
              c === a &&
                _.attr(
                  "class",
                  "booleancheck-box selected i-16-12 i-white i-check"
                );
          }
          I(),
            $('<div class="nx-button-bar">')
              .appendTo(p)
              .append(
                $('<div class="nx-button-text grey">')
                  .text(locale.hideColumn)
                  .touch(M)
              )
              .append($('<div class="nx-hspace-flex">'))
              .append(
                $('<div class="nx-button-text blue">')
                  .text(locale.okay)
                  .touch(function () {
                    r.close();
                  })
              ),
            F();
        }
        function m() {
          t.removeClass("selected"), I();
        }
      }
      function A() {
        var e = {
          connectToSortable: k,
          helper: "clone",
          handle: TOUCH
            ? ".t-columneditor-icon, .t-columneditor-label"
            : void 0,
          appendTo: $(document.body),
          zIndex: 11,
        };
        S.empty(),
          $('<div class="t-columneditor-column">')
            .data("col", { expression: "", caption: locale.function })
            .appendTo(S)
            .draggable(e)
            .append(
              $(
                '<div class="t-columneditor-label i-32-24 i-light-grey">'
              ).addClass("i-field-fn")
            )
            .append(
              $('<div class="t-columneditor-label">').text(locale.function)
            ),
          r._id ||
            $('<div class="t-columneditor-column">')
              .data("col", { expression: "_id" })
              .appendTo(S)
              .draggable(e)
              .append(
                $(
                  '<div class="t-columneditor-label i-32-24 i-light-grey">'
                ).addClass("i-field-string")
              )
              .append($('<div class="t-columneditor-label">').text(locale.id));
        n.sorted;
        a.each(n.sorted, function (t) {
          if (t.isField) {
            var i = t.id;
            if (!r[i]) {
              var o = { expression: i };
              $('<div class="t-columneditor-column">')
                .data("col", o)
                .appendTo(S)
                .draggable(e)
                .append(
                  $(
                    '<div class="t-columneditor-label i-32-24 i-light-grey ">'
                  ).addClass("i-field-" + t.base)
                )
                .append(
                  $('<div class="t-columneditor-label">').text(t.caption)
                );
            }
          }
          if (t.isReference) {
            var n = $(
                '<div class="t-columneditor-icon i-32-24 i-light-grey i-line-right">'
              ),
              s = $('<div class="t-columneditor-head">')
                .append(n)
                .append(
                  $('<div class="t-columneditor-label">').text(
                    t.caption + " (" + t.refType.caption + ")"
                  )
                )
                .appendTo(S)
                .click(),
              l = $('<div class="t-columneditor-group">').appendTo(S).hide(),
              c = t.refType;
            !(function () {
              var i = c.field_id,
                o = t.id + "." + i.id;
              if (!r[o]) {
                var a = { expression: o },
                  n = $('<div class="t-columneditor-column">')
                    .data("col", a)
                    .appendTo(l)
                    .draggable(e);
                $('<div class="t-columneditor-label i-32-24 i-light-grey ">')
                  .addClass("i-field-" + i.base)
                  .appendTo(n),
                  $('<div class="t-columneditor-label">')
                    .text(i.caption)
                    .appendTo(n);
              }
            })(),
              a.each(c.sorted, function (i) {
                if (i.isField) {
                  var o = t.id + "." + i.id;
                  if (!r[o]) {
                    var a = { expression: o },
                      n = $('<div class="t-columneditor-column">')
                        .data("col", a)
                        .appendTo(l)
                        .draggable(e);
                    $(
                      '<div class="t-columneditor-label  i-32-24 i-light-grey">'
                    )
                      .addClass("i-field-" + i.base)
                      .appendTo(n),
                      $('<div class="t-columneditor-label">')
                        .text(i.caption)
                        .appendTo(n);
                  }
                }
              }),
              s.touch(function () {
                l.toggle(),
                  s.toggleClass("expanded"),
                  n.toggleClass("i-line-right i-line-down");
              });
          } else if (t.isReverse) {
            (n = $(
              '<div class="t-columneditor-icon i-32-24 i-light-grey i-line-right">'
            )),
              (s = $('<div class="t-columneditor-head">')
                .append(n)
                .append(
                  $('<div class="t-columneditor-label">').text(
                    t.caption + " (" + t.refType.caption + ")"
                  )
                )
                .appendTo(S)),
              (l = $('<div class="t-columneditor-group">').appendTo(S).hide()),
              (c = t.refType);
            a.each(c.sorted, function (i) {
              if (i.isField) {
                var o = $(
                    '<div class="t-columneditor-icon i-32-24 i-light-grey i-line-right">'
                  ),
                  n = $('<div class="t-columneditor-head">')
                    .append(o)
                    .append(
                      $('<div class="t-columneditor-label">').text(i.caption)
                    )
                    .appendTo(l),
                  s = $('<div class="t-columneditor-group">')
                    .appendTo(l)
                    .hide();
                a.each(i.aggregations, function (o) {
                  var a = o + "(" + t.id + "." + i.id + ")";
                  if (!r[a]) {
                    var n = { expression: a },
                      l = $('<div class="t-columneditor-column">')
                        .data("col", n)
                        .appendTo(s)
                        .draggable(e),
                      c = aggregations.aggType(o, i);
                    $('<div class="t-columneditor-icon i-32-24 i-light-grey">')
                      .addClass("i-field-" + c.base)
                      .appendTo(l),
                      $('<div class="t-columneditor-label">')
                        .text(locale.agg[o])
                        .appendTo(l);
                  }
                }),
                  n.touch(function () {
                    s.toggle(),
                      n.toggleClass("expanded"),
                      o.toggleClass("i-line-right i-line-down");
                  });
              }
            }),
              s.touch(function () {
                l.toggle(),
                  s.toggleClass("expanded"),
                  n.toggleClass("i-line-right i-line-down");
              });
          }
        }),
          database.supports.history &&
            (r._md ||
              $('<div class="t-columneditor-column">')
                .data("col", { expression: "_md" })
                .appendTo(S)
                .draggable(e)
                .append(
                  $(
                    '<div class="t-columneditor-label i-32-24 i-light-grey">'
                  ).addClass("i-field-timestamp")
                )
                .append(
                  $('<div class="t-columneditor-label">').text(
                    locale.modifiedDate
                  )
                )),
          database.supports.authentication &&
            (r._mu ||
              $('<div class="t-columneditor-column">')
                .data("col", { expression: "_mu" })
                .appendTo(S)
                .draggable(e)
                .append(
                  $(
                    '<div class="t-columneditor-label i-32-24 i-light-grey">'
                  ).addClass("i-field-user")
                )
                .append(
                  $('<div class="t-columneditor-label">').text(
                    locale.modifiedUser
                  )
                ),
            r._cu ||
              $('<div class="t-columneditor-column">')
                .data("col", { expression: "_cu" })
                .appendTo(S)
                .draggable(e)
                .append(
                  $(
                    '<div class="t-columneditor-label i-32-24 i-light-grey">'
                  ).addClass("i-field-user")
                )
                .append(
                  $('<div class="t-columneditor-label">').text(
                    locale.createdUser
                  )
                ));
      }
      function O() {
        L();
        var i = [],
          o = 0,
          n = 0,
          s = void 0;
        a.each(k.children(), function (e) {
          var t = $(e).data("col");
          t && (t === l && (n = o), t === c && (s = o), i.push(t), o++);
        }),
          (t.cols = i),
          (t.sort = n),
          (t.descending = d),
          (t.group = s),
          e.save({
            config: t,
            caption: m ? v.value : void 0,
            readRoles: m && f ? y.value : void 0,
          });
      }
      function z() {
        window.getWidth() < 640
          ? (h.css({ left: 0, marginLeft: 0 }),
            x.css({ left: "3%", width: "45%" }),
            T.css({ left: "52%", width: "45%" }))
          : (h.css({ left: "50%", marginLeft: -312 }),
            x.css({ left: 16, width: 292 }),
            T.css({ left: 316, width: 292 }));
      }
      function L() {
        b && b.destroy(),
          w && w.destroy(),
          $(window).off("resize", z),
          p.close();
      }
    }
  },
  "./src/js/client/RemoteDB.js": function (e, t, i) {
    "use strict";
    (function (e) {
      i.d(t, "a", function () {
        return s;
      });
      i("./node_modules/core-js/modules/es.typed-array.uint8-array.js"),
        i("./node_modules/core-js/modules/web.immediate.js"),
        i("./node_modules/core-js/modules/web.url.to-json.js");
      var o = i("./node_modules/underscore/underscore.js");
      const a = schemas.RE_NID,
        n = schemas.RE_FILE_REF;
      function s(e, t, i) {
        (this.dbinfo = e),
          (this.name = e.name),
          (this.id = e.id),
          (this.account = t),
          (this.server = i),
          (this.adminEnabled = !0),
          (this.adminMode = !1),
          (this.schema = void 0),
          (this.views = {}),
          (this.originalViews = {}),
          (this.user = void 0),
          (this.authorizationOpen = !1),
          (this.authorizationPrint = !1),
          (this.authorizationExport = !1),
          (this.authorizationImport = !1),
          (this.authorizationMassDataUpdate = !1),
          (this._selectCache = {}),
          (this.queryQueue = {}),
          (this._evalCache = {}),
          (this.memory = {}),
          (this._cachedValues = {}),
          (this.selectIsRunning = !1),
          (this.nodes = {}),
          (this.seq = 0),
          (this.listeners = {}),
          (this.loadQueue = {}),
          (this.loadDeps = {}),
          (this.loadCallbacks = []),
          (this._schedule = []),
          (this._loadNodes = o.debounce($.proxy(this._loadNodes, this))),
          (this.listenForChanges = $.proxy(this.listenForChanges, this)),
          (this.runSelect = $.proxy(this.runSelect, this));
      }
      Object.assign(s.prototype, schemas.AbstractDatabase.prototype),
        (s.prototype.isSync = !1),
        (s.prototype.supports = {
          authentication: !0,
          files: !0,
          comments: !0,
          history: !0,
          chat: !1,
          sync: !0,
          reindex: !0,
          rebuildThumbs: !0,
          reIndexFiles: !0,
          backup: !0,
          backgroundImage: !0,
          root: !0,
          sharing: !0,
          indexes: !0,
        }),
        (s.prototype.getUniqueID = function () {
          return "remote." + this.account.id + "." + this.id;
        }),
        (s.prototype.typeOf = function (e) {
          return this.schema.typeOf(e);
        }),
        (s.prototype.ridOf = schemas.ridOf),
        (s.prototype.ridOfNode = schemas.ridOfNode),
        (s.prototype.descriptor = function () {
          return {
            id: this.id,
            name: this.name,
            location: "remote",
            account: this.account.id,
            settings: this.settings,
          };
        }),
        (s.prototype.closeDatabase = function (e) {
          e();
        }),
        (s.prototype.openDatabase = function (e, t) {
          var i = this;
          i.server.loadBootstrap(function (e, a) {
            if (e) return t(e);
            (i.seq = a.seq), (i.name = a.dbname), (i.settings = a.settings);
            var n = dbms
                .getRemoteConnection()
                .getSessionInfo()
                .getCurrentAccountUser(i.account.id),
              s = {};
            o.each(
              dbms
                .getRemoteConnection()
                .getSessionInfo()
                .listAccountUsers(i.account.id),
              function (e) {
                s[e.id] = util.enrichUser(e);
              }
            );
            var r = 1;
            o.each(util.localeSortBy(s, "caption"), function (e) {
              e.order = r++;
            }),
              (i.user = n),
              (i.users = s),
              (i.roles = Object.assign(
                {},
                dbms
                  .getRemoteConnection()
                  .getSessionInfo()
                  .getRoles(i.account.id)
              )),
              i.setSchema(a.schema),
              i.updateAuthorization(),
              i.server.loadViews(function (e, o) {
                if (e) return t(e);
                if (o) {
                  (i.originalViews = {}), (i.views = {});
                  for (var a = 0; a < o.length; a++) {
                    var n = o[a];
                    (i.originalViews[n.id] = n),
                      (i.views[n.id] = util.getPersistentView(n));
                  }
                }
                setTimeout(i.listenForChanges, 0), t();
              });
          });
        }),
        (s.prototype.setAdminMode = function (e) {
          (this.adminMode = !!e),
            this._trigger("*:admin", ["admin", this.adminMode]);
        }),
        (s.prototype.setSchema = function (e) {
          this.schema && this.schema.off("change", this.schemaChanged, this),
            (this.originalSchema = e),
            (this.schema = new schemas.Schema(this, e)),
            this.schema.on("change", this.schemaChanged, this);
        }),
        (s.prototype.saveSchema = function (e) {
          this.updateSchema(this.schema, function (t) {
            t && $.alert(t), e && e();
          });
        }),
        (s.prototype.resetSchema = function (e) {
          this.setSchema(this.originalSchema),
            this._trigger("*:schema", ["schema", !1, !0]),
            e && e();
        }),
        (s.prototype.schemaChanged = function () {
          this._trigger("*:schema", ["schema", !0, !1]);
        }),
        (s.prototype.updateSchema_OLD = function (e, t) {
          e.protectUpdated();
          var i = e.validate();
          if (i) return t(i);
          var o = e.toJSON();
          (o.password = this.schemaPassword),
            this.setDirty(),
            this.server.sendUpdateSchema(o, t);
        }),
        (s.prototype.updateSchema = function (e, t) {
          e.protectUpdated();
          var i = e.validate();
          if (i) return t(i);
          var o = e.toJSON();
          o.password = this.schemaPassword;
          var a = util.diff(this.originalSchema, o);
          if ((console.log("SCHEMAPATCH", a), !a)) return t();
          this.setDirty(), this.server.sendPatchSchema(a, t);
        }),
        (s.prototype.loadCalendar = function (e, t, i) {
          this.server.loadCalendar(e, t, i);
        }),
        (s.prototype.loadHistory = function (e) {
          this.server.loadHistory(e);
        }),
        (s.prototype.loadNodeHistory = function (e, t) {
          this.server.loadNodeHistory(e, t);
        }),
        (s.prototype.loadViews = function (e) {
          this.server.loadViews(e);
        }),
        (s.prototype.removeView = function (e, t) {
          delete this.views[e], this.server.removeView(e, t);
        }),
        (s.prototype.loadComments = function (e, t) {
          this.server.loadComments(e, t);
        }),
        (s.prototype.postComment = function (e, t, i, o) {
          this.server.postComment(e, t, i, o);
        }),
        (s.prototype.removeComment = function (e, t, i) {
          this.server.removeComment(e, t, i);
        }),
        (s.prototype.loadFiles = function (e, t) {
          this.server.loadFiles(e, t);
        }),
        (s.prototype.loadFileMetadata = function (e, t, i) {
          this.server.loadFile(e, t, i);
        }),
        (s.prototype.removeFile = function (e, t, i) {
          this.server.removeFile(e, t, i);
        }),
        (s.prototype.reindex = function (e) {
          this.server.reindex(e);
        }),
        (s.prototype.reIndexFiles = function (e) {
          this.server.reIndexFiles(e);
        }),
        (s.prototype.rebuildThumbs = function (e) {
          this.server.rebuildThumbs(e);
        }),
        (s.prototype.clearHistory = function (e) {
          this.server.clearHistory(e);
        }),
        (s.prototype.thumbURL1 = function (e) {
          return this.server.thumbURL1(e);
        }),
        (s.prototype.thumbURL2 = function (e, t) {
          return this.server.thumbURL2(e, t);
        }),
        (s.prototype.thumb2URL1 = function (e) {
          return this.server.thumb2URL1(e);
        }),
        (s.prototype.thumb2URL2 = function (e, t) {
          return this.server.thumb2URL2(e, t);
        }),
        (s.prototype.fileURL1 = function (e) {
          return this.server.fileURL1(e);
        }),
        (s.prototype.serverFileURL1 = s.prototype.fileURL1),
        (s.prototype.fileURL2 = function (e, t) {
          return this.server.fileURL2(e, t);
        }),
        (s.prototype.previewURL1 = function (e) {
          if (e) {
            var t = n.exec(e);
            if (t) {
              var i = t[1] + t[2],
                o = t[3];
              return this.server.previewURL(i, o);
            }
          }
        }),
        (s.prototype.previewURL = function (e, t) {
          return this.server.previewURL(e, t);
        }),
        (s.prototype.downloadURL1 = function (e) {
          if (e) {
            var t = n.exec(e);
            if (t) {
              var i = t[1] + t[2],
                o = t[3];
              return this.server.downloadURL(i, o);
            }
          }
        }),
        (s.prototype.downloadURL = function (e, t) {
          return this.server.downloadURL(e, t);
        }),
        (s.prototype.uploadURL = function (e) {
          return this.server.uploadURL(e);
        }),
        (s.prototype.setBackgroundFile = function (e, t) {
          var i = this;
          this.server.uploadBackground({ file: e }, function (e, o) {
            if (e) return t(e);
            (i.settings = o),
              i.updateAuthorization(),
              ui.updateBackground(!0),
              t();
          });
        }),
        (s.prototype.userName = function (e) {
          if (void 0 === e) return "";
          var t = this.users[e];
          return t ? t.caption : locale.unknown;
        }),
        (s.prototype.create = function (e, t, i) {
          var o,
            a = this;
          if ("string" == typeof e) {
            if (((o = e), !(e = a.schema.types[o])))
              return i("Type not found: " + o);
          } else o = e.id;
          var n = e.fields,
            s = {};
          for (var r in n)
            if (n.hasOwnProperty(r)) {
              var l = n[r];
              if (
                (l.isField || l.isReference || l.isReverse) &&
                "fn" !== l.base
              ) {
                var c = t ? t[r] : void 0;
                s[r] = void 0 !== c ? l.convert(c) : l.create();
              }
            }
          a.setDirty(),
            a.server.sendCreate(o, s, function (t, n) {
              if (t) return i(t);
              if (!a.nodes[n._id]) {
                a.nodes[n._id] = n;
                var s = ["create", e.id, n._id];
                a.schedule("*:create", s),
                  a.schedule(o + ":create", s),
                  a._simulateUpdates(n),
                  a.triggerEvents();
              }
              i(void 0, n);
            });
        }),
        (s.prototype._simulateUpdates = function (e) {
          var t = e._id,
            i = a.exec(t);
          if (i) {
            var n = i[1],
              s = parseInt(i[2]),
              r = this.schema.types[n];
            if (r) {
              var l = r.fields;
              for (var c in e)
                if (e.hasOwnProperty(c)) {
                  var d = e[c],
                    u = l[c];
                  if (u && u.isReference && d) {
                    var p = u.refTypeId + d,
                      h = this.nodes[p];
                    if (h) {
                      var m = !1,
                        f = h[u.refFieldId];
                      if (f) {
                        var g = o.sortedIndex(f, s);
                        f[g] !== s && (f.splice(g, 0, s), (m = !0));
                      } else (h[u.refFieldId] = [s]), (m = !0);
                      m && this.schedule("*:change", ["change", p]);
                    }
                  }
                }
            }
          }
        }),
        (s.prototype.remove = function (e, t) {
          this.setDirty(),
            this.server.sendRemove(e, function (e) {
              t(e);
            });
        }),
        (s.prototype.removeAll = function (e, t) {
          e && e.length
            ? (this.setDirty(),
              this.server.sendRemoveAll(e, function (e) {
                t && t();
              }))
            : t && t();
        }),
        (s.prototype.updateSync = function (e, t, i) {
          throw new Error("Not supported");
        }),
        (s.prototype.update = function (e, t, i, o) {
          var a = this,
            n = a.nodes[e],
            s = a.schema.typeOf(e);
          if (!s) return o();
          var r = s.fields[t];
          if (!r) return o();
          if (
            ((i = null == i ? null : r.convert(i)),
            "memory-global" === r.binding)
          ) {
            const n = r.type.id + "." + r.id,
              s = a.memory[n];
            if (s !== i || (null == s) != (null == i)) {
              (a.memory[n] = null == i ? void 0 : i), a.setDirty();
              const s = ["update", e, t, i];
              a.schedule("*:update", s),
                a.schedule(e + ":*", s),
                a.schedule(e + ":update", s),
                a.schedule(e + ":update:" + t, s),
                a.schedule(e + ":change", ["change", e]),
                a.schedule("*:change", ["change", e]),
                a.executeMemoryTrigger(r.afterUpdateExp, e, () => {
                  a.suppressMemoryTriggers || a.triggerEvents(), o && o();
                });
            } else o && o();
          } else if ("memory-record" === r.binding) {
            const n = e + "." + r.id,
              s = a.memory[n];
            if (s !== i || (null == s) != (null == i)) {
              (a.memory[n] = null == i ? void 0 : i), a.setDirty();
              const s = ["update", e, t, i];
              a.schedule("*:update", s),
                a.schedule(e + ":*", s),
                a.schedule("*:change", ["change", e]),
                a.executeMemoryTrigger(r.afterUpdateExp, e, () => {
                  a.suppressMemoryTriggers || a.triggerEvents(), o && o();
                });
            } else o && o();
          } else if (n && (n[t] === i || (null == n[t] && null == i))) o && o();
          else {
            (n[t] = null == i ? void 0 : i), a.setDirty();
            var l = ["update", e, t, i];
            a.schedule("*:update", l),
              a.schedule(e + ":*", l),
              a.schedule(e + ":update", l),
              a.schedule(e + ":update:" + t, l),
              a.schedule(e + ":change", ["change", e]),
              a.schedule("*:change", ["change", e]),
              a.triggerEvents(),
              a.server.sendUpdate(e, t, i, function (e) {
                e ? ($.alert(e), o && o(e)) : o && o();
              });
          }
        }),
        (s.prototype.executeMemoryTrigger = function (e, t, i) {
          e
            ? this.suppressMemoryTriggers
              ? i()
              : ((this.suppressMemoryTriggers = !0),
                this.loadNode(t, (t, o) => {
                  t && console.warn(t),
                    e.evaluate(this, o, (e) => {
                      (this.suppressMemoryTriggers = !1),
                        e && console.warn(e),
                        i();
                    });
                }))
            : i();
        }),
        (s.prototype.updateNodes = function (e, t) {
          this.setDirty(), this.server.sendUpdateNodes(e, t);
        }),
        (s.prototype.loadNode = function (e, t) {
          var i = this.nodes,
            o = i[e];
          return null === o
            ? t(locale.nodeNotFound + " (" + e + ")")
            : void 0 !== o
            ? t(void 0, o)
            : void this.loadNodes([e], function (o) {
                if (o) return t(o);
                var a = i[e];
                return a
                  ? a._error
                    ? t(a._error)
                    : void t(void 0, a)
                  : t(locale.nodeNotFound + " (" + e + ")");
              });
        }),
        (s.prototype.loadNode2 = function (e, t, i) {
          return this.loadNode(e + t, i);
        }),
        (s.prototype.loadNodeSync = function (e) {
          return this.nodes[e];
        }),
        (s.prototype.loadNodeSync2 = function (e, t) {
          return this.nodes[e + t];
        }),
        (s.prototype.loadNodes = function (e, t) {
          if (!e || 0 === e.length) return t();
          if (0 === (e = this.filterUncached(e, {})).length) return t();
          for (var i = 0; i < e.length; i++) this.loadQueue[e[i]] = !0;
          this.loadCallbacks.push(t), this._loadNodes();
        }),
        (s.prototype.loadNodes3 = function (e, t, i) {
          if (!t || 0 === t.length) return i();
          for (
            var o = this.loadQueue, a = this.nodes, n = 0, s = 0;
            s < t.length;
            s++
          ) {
            var r = e + t[s];
            a[r] || ((o[r] = !0), n++);
          }
          if (0 === n) return i();
          this.loadCallbacks.push(i), this._loadNodes();
        }),
        (s.prototype.loadNodes2 = function (e, t, i) {
          if (!e || 0 === e.length) return i();
          if (0 === (e = this.filterUncached(e, t)).length) return i();
          for (var o = this.loadQueue, a = 0; a < e.length; a++) o[e[a]] = !0;
          (this.loadDeps = queries.extendDependencies(this.loadDeps, t)),
            this.loadCallbacks.push(i),
            this._loadNodes();
        }),
        (s.prototype.filterUncached = function (e, t) {
          e = e.slice(0);
          this.schema.types;
          for (var i = this.nodes, a = {}, n = {}, s = 0; s < e.length; s++) {
            var r = e[s];
            if (!a[r]) {
              a[r] = !0;
              var l = i[r];
              if (l) {
                var c = this.typeOf(r);
                if (c) {
                  var d = t[c.id];
                  if (d)
                    for (var u = 0; u < d.length; u++) {
                      var p = d[u],
                        h = c.fields[p];
                      if (h)
                        if (h.isReference) {
                          if ((v = l[p]))
                            a[(g = h.refType.id + v)] || e.push(g);
                        } else if (h.isReverse) {
                          var m = l[p];
                          if (m)
                            for (var f = 0; f < m.length; f++) {
                              var g,
                                v = m[f];
                              a[(g = h.refType.id + v)] || e.push(g);
                            }
                        }
                    }
                }
              } else n[r] = !0;
            }
          }
          return o.keys(n).sort();
        }),
        (s.prototype._loadNodes = function () {
          var e = this.nodes;
          if (o.isEmpty(this.loadQueue)) {
            var t = this.loadCallbacks;
            this.loadCallbacks = [];
            for (var i = 0; i < t.length; i++) t[i]();
          } else {
            var a = Object.keys(this.loadQueue);
            this.loadQueue = {};
            var n = this.loadDeps;
            this.loadDeps = {};
            t = this.loadCallbacks;
            (this.loadCallbacks = []),
              this.server.loadNodes(a, n, function (i, o) {
                if (!i)
                  for (var a = 0; a < o.length; a++) {
                    var n = o[a];
                    n._error
                      ? (log("Failed to load node", n._id, n._error),
                        (e[n._id] = null))
                      : n._na
                      ? (e[n._id] = null)
                      : (e[n._id] = n);
                  }
                for (a = 0; a < t.length; a++) t[a]();
              });
          }
        }),
        (s.prototype.find = function (e, t, i) {
          this.server.sendFind(e, t, i);
        }),
        (s.prototype.fastSearch = function (e, t, i) {
          var o = this;
          o.server.sendFind(void 0, t, function (e, t) {
            if (e) return i(e);
            o.loadNodes(t, function () {
              for (var e = {}, o = 0; o < t.length; o++) {
                var n = t[o],
                  s = a.exec(n);
                if (s) {
                  var r = s[1],
                    l = parseInt(s[2]),
                    c = e[r];
                  c || (c = e[r] = []), c.push(l);
                }
              }
              i(void 0, e);
            });
          });
        }),
        (s.prototype.select = s.prototype.select_optimized =
          function (e, t) {
            var i = this,
              o = i._selectCache[e];
            if (o) t(void 0, o);
            else {
              var a = i.queryQueue[e];
              a ? a.push(t) : (a = i.queryQueue[e] = [t]), i.runSelect();
            }
          }),
        (s.prototype.runSelect = function () {
          var t = this;
          if (!t.selectIsRunning) {
            var i = t.queryQueue,
              o = t._selectCache,
              a = [];
            for (var n in i)
              if (i.hasOwnProperty(n)) {
                var s = i[n];
                s && s.length && a.push(n);
              }
            a.length &&
              ((t.selectIsRunning = !0),
              t.server.sendSelects(a, function (n, s) {
                if (s)
                  for (var r = 0; r < a.length; r++) {
                    var l = a[r];
                    (c = s[r]) &&
                      c.length &&
                      t.loadNodes2(c, {}, function () {}),
                      (o[l] = c);
                  }
                for (r = 0; r < a.length; r++) {
                  l = a[r];
                  var c = o[l] || [],
                    d = i[l];
                  if ((delete i[l], d && d.length))
                    for (var u = 0; u < d.length; u++) d[u](void 0, c);
                }
                var p = !1;
                for (var l in i) {
                  if (i.hasOwnProperty(l))
                    if ((d = i[l]) && d.length) {
                      p = !0;
                      break;
                    }
                }
                p && e(t.runSelect, 0), (t.selectIsRunning = !1);
              }));
          }
        }),
        (s.prototype.selectFind = function (e, t, i) {
          this.select(e, i);
        }),
        (s.prototype.selectFromTypeWhere = function (e, t, i) {
          var o = t ? "select " + e + " where " + t.toString() : "select " + e;
          this.select(o, i);
        }),
        (s.prototype.selectSyncJS = function () {
          return [];
        }),
        (s.prototype.on = function (e, t, i, o) {
          var a = (t || "*") + ":" + (e || "*"),
            n = this.listeners[a];
          this.listeners[a] = n
            ? this.listeners[a].concat([{ f: i, c: o }])
            : [{ f: i, c: o }];
        }),
        (s.prototype.onCreate = function (e, t, i) {
          this.on("create", e, t, i);
        }),
        (s.prototype.onRemove = function (e, t, i) {
          this.on("remove", e, t, i);
        }),
        (s.prototype.onUpdate = function (e, t, i, o) {
          this.on(t ? "update:" + t : "update", e, i, o);
        }),
        (s.prototype.onChange = function (e, t, i) {
          this.on("change", e, t, i);
        }),
        (s.prototype.onComment = function (e, t, i) {
          this.on("comment", e, t, i);
        }),
        (s.prototype.onFile = function (e, t, i) {
          this.on("file", e, t, i);
        }),
        (s.prototype.onView = function (e, t) {
          this.on("view", void 0, e, t);
        }),
        (s.prototype.off = function (e, t, i, o) {
          var a = (t || "*") + ":" + (e || "*"),
            n = this.listeners[a];
          if (n) {
            for (var s = [], r = 0; r < n.length; r++) {
              var l = n[r];
              ((i && l.f !== i) || (o && l.c !== o)) && s.push(l);
            }
            this.listeners[a] = s;
          } else log("Inconsistent RemoteDB.off");
        }),
        (s.prototype.offCreate = function (e, t, i) {
          this.off("create", e, t, i);
        }),
        (s.prototype.offChange = function (e, t, i) {
          this.off("change", e, t, i);
        }),
        (s.prototype.offRemove = function (e, t, i) {
          this.off("remove", e, t, i);
        }),
        (s.prototype.offUpdate = function (e, t, i, o) {
          this.off(t ? "update:" + t : "update", e, i, o);
        }),
        (s.prototype.offComment = function (e, t, i) {
          this.off("comment", e, t, i);
        }),
        (s.prototype.offFile = function (e, t, i) {
          this.off("file", e, t, i);
        }),
        (s.prototype.offView = function (e, t) {
          this.off("view", void 0, e, t);
        }),
        (s.prototype._trigger = function (e, t) {
          var i = this.listeners[e];
          if (i) for (var o = 0; o < i.length; o++) i[o].f.apply(i[o].c, t);
        }),
        (s.prototype.schedule = function (e, t) {
          this._schedule.push([e, t]);
        }),
        (s.prototype.triggerEvents = function () {
          var e = this._schedule;
          if (((this._schedule = []), e && e.length)) {
            this._trigger("*:*", []);
            for (var t = 0; t < e.length; t++) this._trigger(e[t][0], e[t][1]);
          }
        }),
        (s.prototype.listenForChanges = function () {
          var e = this;
          e.server.loadChanges(e.seq, function (t, i) {
            t
              ? setTimeout(e.listenForChanges, 5e3)
              : e.applyChanges(i, function (t) {
                  t && log(t), setTimeout(e.listenForChanges, 0);
                });
          });
        }),
        (s.prototype.applyChanges = function (e, t) {
          var i = e.results;
          if (i)
            for (var o = 0; o < i.length; o++) {
              var a = i[o];
              this.change(a);
            }
          else this.resync();
          this.seq !== e.last_seq &&
            ((this.seq = e.last_seq), this.schedule("*:history")),
            this.triggerEvents(),
            t();
        }),
        (s.prototype.resync = function () {
          (this.nodes = {}),
            (this._selectCache = {}),
            (this._evalCache = {}),
            this._trigger("resync", []),
            this._trigger("*:schema", ["schema", null, null]);
        });
      var r = {
        "schema-patch": function (e, t, i, o, a) {
          this.setDirty(),
            this.setSchema(util.applyChange(this.schema.toJSON(), a));
          var n = ["schema", !1, !0];
          this.schedule("*:schema", n);
        },
        schema: function (e, t, i, o, a) {
          this.setDirty(), this.setSchema(a);
          var n = ["schema", !1, !0];
          this.schedule("*:schema", n);
        },
        create: function (e, t, i, o, a, n) {
          var s = this.typeOf(a);
          if (s) {
            var r = s.id,
              l = !this.nodes[a];
            if (((this.nodes[a] = n), this.setDirty(), l)) {
              var c = ["create", r, a];
              this.schedule("*:create", c), this.schedule(r + ":create", c);
            }
          }
        },
        remove: function (e, t, i, o, a) {
          this.setDirty();
          var n = ["remove", a];
          this.schedule("*:remove", n),
            this.schedule(a + ":*", n),
            this.schedule(a + ":remove", n),
            delete this.nodes[a];
        },
        update: function (e, t, i, a, n, s) {
          this.setDirty();
          var r = this.nodes[n],
            l = this.typeOf(n);
          if (l) {
            for (var c in s)
              if (s.hasOwnProperty(c)) {
                var d = l.fields[c];
                if (d)
                  if (d.isField) {
                    var u = !0;
                    if (r) {
                      var p = r[c],
                        h = s[c];
                      (r[c] = null == h ? void 0 : h),
                        (p === h || (null == p && null == h)) && (u = !1);
                    }
                    if (u) {
                      var m = ["update", n, c, s[c]];
                      this.schedule("*:update", m),
                        this.schedule(n + ":*", m),
                        this.schedule(n + ":update", m),
                        this.schedule(n + ":update:" + c, m);
                    }
                  } else if (d.isReference) {
                    r && (r[c] = null == s[c] ? void 0 : s[c]);
                    m = ["update", n, c, s[c]];
                    this.schedule("*:update", m),
                      this.schedule(n + ":*", m),
                      this.schedule(n + ":update", m),
                      this.schedule(n + ":update:" + c, m);
                  } else if (d.isReverse && r) {
                    var f = r[c];
                    f || (f = r[c] = []);
                    var g = s[c];
                    for (var v in g) {
                      if (g.hasOwnProperty(v))
                        if (!0 === g[(v = parseInt(v))])
                          f[(b = o.sortedIndex(f, v))] !== v &&
                            f.splice(b, 0, v);
                        else if (!1 === g[v]) {
                          var b;
                          f[(b = o.sortedIndex(f, v))] === v && f.splice(b, 1);
                        }
                    }
                  }
              }
            r && ((r._mu = t), (r._md = i));
          }
          this.schedule(n + ":change", ["change", n]),
            this.schedule("*:change", ["change", n]);
        },
        view: function (e, t, i, o, a) {
          var n = this;
          a._deleted
            ? (delete n.originalViews[a.id],
              delete n.views[a.id],
              n.schedule("*:view", ["view", a.id, null]))
            : ((n.originalViews[a.id] = a),
              (n.views[a.id] = util.getPersistentView(a)),
              n.schedule("*:view", ["view", a.id, a]));
        },
        comment: function (e, t, i, o, a) {
          this.schedule(a + ":comment", ["comment"]);
        },
        file: function (e, t, i, o, a) {
          this.schedule(a + ":file", ["file"]);
        },
      };
      function l(e, t) {
        if (!t || 0 === t.length) return !0;
        if (e.roles.admin) return !0;
        for (var i = 0; i < t.length; i++) if (e.roles[t[i]]) return !0;
        return !1;
      }
      (s.prototype.change = function (e) {
        var t = r[e[3]];
        t && t.apply(this, e);
      }),
        (s.prototype.setBackground = function (e, t) {
          var i = this;
          i.server.setBackground(e, function (e, o) {
            if (e) return t(e);
            (i.settings = o),
              i.updateAuthorization(),
              ui.updateBackground(),
              t();
          });
        }),
        (s.prototype.updateSettings = function (e, t) {
          var i = this;
          i.server.updateSettings(e, function (e, o) {
            e
              ? t && t(e)
              : ((i.settings = o),
                i.updateAuthorization(),
                ui.updateBackground(),
                t && t(void 0, o));
          });
        }),
        (s.prototype.backgroundURL = function (e) {
          return this.server.backgroundURL(e);
        }),
        (s.prototype.updateAuthorization = function () {
          (this.authorizationOpen = l(this.user, this.settings.rolesOpen)),
            (this.authorizationHistory = l(
              this.user,
              this.settings.rolesHistory
            )),
            (this.authorizationPrint = l(this.user, this.settings.rolesPrint)),
            (this.authorizationExport = l(
              this.user,
              this.settings.rolesExport
            )),
            (this.authorizationImport = l(
              this.user,
              this.settings.rolesImport
            )),
            (this.authorizationMassDataUpdate = l(
              this.user,
              this.settings.rolesMassDataUpdate
            ));
        }),
        (s.prototype.listReports = function (e) {
          this.server.listReports(e);
        }),
        (s.prototype.updateReport = function (e, t) {
          this.server.updateReport(e, t);
        }),
        (s.prototype.removeReport = function (e, t) {
          this.server.removeReport(e, t);
        }),
        (s.prototype.saveReportFile = function (e, t, i, o) {
          o("saveReportFile not implemented.");
        }),
        (s.prototype.removeReportFile = function (e, t, i) {
          this.server.removeReportFile(e, t, i);
        }),
        (s.prototype.cleanReportFiles = function (e, t, i) {
          this.server.cleanReportFiles(e, t, i);
        }),
        (s.prototype.copyReportFiles = function (e, t, i) {
          this.server.copyReportFiles(e, t, i);
        }),
        (s.prototype.reportFileURL = function (e, t) {
          return this.server.reportFileURL(e, t);
        }),
        (s.prototype.reportFileServerURL = s.prototype.reportFileURL),
        (s.prototype.reportFileURLProxy = function (e, t) {
          return this.reportFileURL(e, t);
        }),
        (s.prototype.importReportFile = function (e, t, i) {
          this.server.importReportFile(e, t, i);
        }),
        (s.prototype.loadCalendarFromTo = function (e, t, i) {
          var o = e.getFullYear(),
            a = t.getFullYear(),
            n = e.getMonth() + 1,
            s = t.getMonth() + 1,
            r = e.getDate(),
            l = t.getDate(),
            c =
              o + "-" + (n < 10 ? "0" : "") + n + "-" + (r < 10 ? "0" : "") + r,
            d =
              a + "-" + (s < 10 ? "0" : "") + s + "-" + (l < 10 ? "0" : "") + l;
          this.loadCalendar(c, d, i);
        }),
        (s.prototype.saveView = function (e, t) {
          if (((this.views[e.id] = e), !this.user.roles.admin)) return t();
          var i = this.originalViews[e.id],
            o = util.getPersistentView(e);
          if (util.viewEquals(o, i)) return t();
          (this.originalViews[e.id] = o),
            this.server.saveView(o, function (e) {
              t(e);
            });
        }),
        (s.prototype.duplicate = function (e, t) {
          var i = this;
          i.setDirty(),
            i.server.sendDuplicate(e, function (e, o) {
              if (e) return t(e);
              if (!i.nodes[o._id]) {
                i.nodes[o._id] = o;
                var a = schemas.tidOf(o._id),
                  n = ["create", a, o._id];
                i.schedule("*:create", n),
                  i.schedule(a + ":create", n),
                  i._simulateUpdates(o),
                  i.triggerEvents();
              }
              t(void 0, o._id);
            });
        }),
        (s.prototype.setDirty = function () {
          (this._selectCache = {}), (this._evalCache = {});
        }),
        (s.prototype.previewFile = function (e, t) {
          var i = this.downloadURL(e, t);
          NinoxDocumentInteraction.previewDocument(i, function () {});
        }),
        (s.prototype.importFile = function (e, t, i) {
          this.server.importFile(e, t, i);
        }),
        (s.prototype.importFileFromURL = function (e, t, i, o) {
          this.server.importFileFromURL(e, t, i, o);
        }),
        (s.prototype.renameFile = function (e, t, i, o) {
          this.server.renameFile(e, t, i, o);
        }),
        (s.prototype.saveFileURL = function (e, t, i) {
          return this.server.saveFileURL(e, t, i);
        }),
        (s.prototype.saveFileBase64 = function (e, t, i, o) {
          o("Not implemented.");
        }),
        (s.prototype.saveFileDataURL = function (e, t, i, o) {
          var a = t.split(",");
          if (2 !== a.length) return o("Invalid data URL");
          var n = /:(.*?);/.exec(a[0]);
          if (!n) return o("Invalid data URL");
          var s = n[1];
          if (!s) return o("Invalid data URL");
          for (
            var r = a[1],
              l = atob(r),
              c = new ArrayBuffer(l.length),
              d = new Uint8Array(c),
              u = 0;
            u < l.length;
            u++
          )
            d[u] = l.charCodeAt(u);
          var p = new Blob([c], { type: s });
          this.server.importFile(e, p, i, o);
        }),
        (s.prototype.loadFileURL = function (e, t, i, o) {
          return this.server.loadFileURL(e, t, i, o);
        }),
        (s.prototype.printSimple = function (e, t) {
          this.server.printSimple(e, t);
        }),
        (s.prototype.printRich = function (e, t) {
          this.server.printRich(e, t);
        }),
        (s.prototype.evaluateOnServer = function (e, t, i) {
          t.isUpdating() && this.setDirty(),
            this.server.evaluateOnServer(e, t, function (e, t) {
              e ? ($.alert(e), i()) : i(t);
            });
        }),
        (s.prototype.sendEmail = function (e, t) {
          this.server.sendEmail(e, t);
        }),
        (s.prototype.shareFile = function (e, t, i) {
          this.server.shareFile(e, t, i);
        }),
        (s.prototype.unshareFile = function (e, t, i) {
          this.server.unshareFile(e, t, i);
        }),
        (s.prototype.loadSharedFile = function (e, t, i) {
          this.server.loadSharedFile(e, t, i);
        }),
        (s.prototype.shareView = function (e, t, i) {
          this.server.shareView(e, t, i);
        }),
        (s.prototype.unshareView = function (e, t) {
          this.server.unshareView(e, t);
        }),
        (s.prototype.loadSharedView = function (e, t) {
          this.server.loadSharedView(e, t);
        }),
        (s.prototype.importSchema = function (e, t) {
          this.server.importSchema(e, t);
        });
    }.call(
      this,
      i(
        "./node_modules/node-libs-browser/node_modules/timers-browserify/main.js"
      ).setImmediate
    ));
  },
  "./src/js/localesEngine/localesManager.ts": function (e, t, i) {
    "use strict";
    i.d(t, "b", function () {
      return c;
    }),
      i.d(t, "a", function () {
        return d;
      }),
      i.d(t, "d", function () {
        return u;
      }),
      i.d(t, "c", function () {
        return p;
      });
    i("./node_modules/core-js/modules/es.string.replace.js");
    var o = i("./node_modules/@babel/runtime/helpers/defineProperty.js"),
      a = i.n(o);
    class n {
      constructor(e, t) {
        (this.translations = e),
          (this.locale = t),
          a()(this, "selectedLocales", void 0),
          a()(this, "overrides", {}),
          (this.locale = t),
          (this.selectedLocales = this.constructLocale());
      }
      setLocale(e) {
        (this.locale = e), (this.selectedLocales = this.constructLocale());
      }
      setLang(e) {
        const [t, i] = this.locale.split("-");
        (this.locale = [e, i].join("-")),
          (this.selectedLocales = this.constructLocale());
      }
      getLocaleString() {
        return this.locale;
      }
      getLocaleObject() {
        return this.selectedLocales;
      }
      overrideLocales(e) {
        return (
          (this.overrides = e),
          (this.selectedLocales = this.constructLocale()),
          this.selectedLocales
        );
      }
      constructLocale(
        e = this.translations,
        t = this.locale,
        i = this.overrides
      ) {
        const [o, a] = t.split("-"),
          n = Object.assign({}, e.en, e[o], i[o]);
        (n.LOCALE = `${o}-${a}`),
          (n.LC = o),
          (n.CC = null != a ? a : o),
          (n.groupingSeparator = ","),
          (n.decimalSeparator = "."),
          (n.weekStartMonday = !1),
          (n.firstDayOfWeek = 0),
          (n.dateFormat = "L"),
          (n.timeFormat = "LT"),
          (n.dateTimeFormat = "L LT");
        const s = [
            "ae",
            "au",
            "ca",
            "cn",
            "eg",
            "gb",
            "hk",
            "il",
            "in",
            "jp",
            "sk",
            "th",
            "tw",
            "us",
          ],
          r = [
            "at",
            "br",
            "de",
            "dk",
            "es",
            "gr",
            "it",
            "nl",
            "pt",
            "tr",
            "ru",
            "vn",
          ],
          l = ["bg", "cz", "fi", "fr", "no", "pl", "se"],
          c = ["ch"];
        return (
          "de" === o && "ch" === a
            ? ((n.decimalSeparator = "."), (n.groupingSeparator = "'"))
            : "fr" === o && "ch" === a
            ? ((n.decimalSeparator = ","), (n.groupingSeparator = " "))
            : "it" === o && "ch" === a
            ? ((n.decimalSeparator = "."), (n.groupingSeparator = "'"))
            : s.includes(a) ||
              (r.includes(a)
                ? ((n.decimalSeparator = ","), (n.groupingSeparator = "."))
                : l.includes(a)
                ? ((n.decimalSeparator = ","), (n.groupingSeparator = " "))
                : c.includes(a) &&
                  ((n.decimalSeparator = "."), (n.groupingSeparator = "'"))),
          n
        );
      }
    }
    const s = {
        key: {
          accountInactive: "accountInactive",
          accountLocked: "accountLocked",
          actionRequiresPremium: "actionRequiresPremium",
          actions: "actions",
          activateSharing: "activateSharing",
          add: "add",
          addFile: "addFile",
          addRole: "addRole",
          addRowCreate: "addRowCreate",
          addRowFind: "addRowFind",
          addRowFindCreate: "addRowFindCreate",
          addRule: "addRule",
          addTable: "addTable",
          admin: "admin",
          advancedOptions: "advancedOptions",
          afterHide: "afterHide",
          agg_avg: "agg_avg",
          agg_cnt: "agg_cnt",
          agg_concat: "agg_concat",
          agg_first: "agg_first",
          agg_last: "agg_last",
          agg_max: "agg_max",
          agg_median: "agg_median",
          agg_min: "agg_min",
          agg_sort: "agg_sort",
          agg_sum: "agg_sum",
          agg_unique: "agg_unique",
          aggregation: "aggregation",
          agreeTerms: "agreeTerms",
          all: "all",
          allChangesSaved: "allChangesSaved",
          alreadyTrialPlan: "alreadyTrialPlan",
          annual: "annual",
          anyFile: "anyFile",
          appointmentBegin: "appointmentBegin",
          appointmentEnd: "appointmentEnd",
          apps: "apps",
          askLater: "askLater",
          atColumn: "atColumn",
          atLine: "atLine",
          auto: "auto",
          autoHeight: "autoHeight",
          autoLayout: "autoLayout",
          automatedBackups: "automatedBackups",
          automatic: "automatic",
          availableColumns: "availableColumns",
          back: "back",
          background: "background",
          backgroundColor: "backgroundColor",
          backgroundFileMustBeJPEG: "backgroundFileMustBeJPEG",
          backgrounds: "backgrounds",
          backToTeam: "backToTeam",
          beforeShow: "beforeShow",
          billedAnnually: "billedAnnually",
          binding: "binding",
          blue: "blue",
          bold: "bold",
          border: "border",
          borderColor: "borderColor",
          borderRadius: "borderRadius",
          borderSides: "borderSides",
          borderStyle: "borderStyle",
          borderWidth: "borderWidth",
          bottom: "bottom",
          br: "br",
          browserUnsupported: "browserUnsupported",
          business: "business",
          buyNow: "buyNow",
          calculate: "calculate",
          calculatedValue: "calculatedValue",
          calendar: "calendar",
          calendarCreateAppointmentField: "calendarCreateAppointmentField",
          calendarOptions: "calendarOptions",
          calendarSyncAhead: "calendarSyncAhead",
          calendarSyncBeyond: "calendarSyncBeyond",
          calendarSyncEnabled: "calendarSyncEnabled",
          calendarSyncLocation: "calendarSyncLocation",
          calendarWeek: "calendarWeek",
          calendarWorkEnd: "calendarWorkEnd",
          calendarWorkStart: "calendarWorkStart",
          cancel: "cancel",
          cancelInvitation: "cancelInvitation",
          cancelInvitationConfirm: "cancelInvitationConfirm",
          cancelUpload: "cancelUpload",
          canFindIt: "canFindIt",
          cannotChangeRole: "cannotChangeRole",
          cannotChangeUser: "cannotChangeUser",
          cannotConnectAppStore: "cannotConnectAppStore",
          cannotRemoveTeam: "cannotRemoveTeam",
          caption: "caption",
          cards: "cards",
          cascade: "cascade",
          caseStudies: "caseStudies",
          center: "center",
          changeEmail: "changeEmail",
          changePassword: "changePassword",
          chartBar: "chartBar",
          chartBubble: "chartBubble",
          chartBubbleRequiresColumns: "chartBubbleRequiresColumns",
          chartDatasets: "chartDatasets",
          chartDatasetsCols: "chartDatasetsCols",
          chartDatasetsRows: "chartDatasetsRows",
          chartDoughnut: "chartDoughnut",
          chartLegend: "chartLegend",
          chartLine: "chartLine",
          chartLineTension: "chartLineTension",
          chartNoData: "chartNoData",
          chartPie: "chartPie",
          chartPolarArea: "chartPolarArea",
          chartRadar: "chartRadar",
          chartStacked: "chartStacked",
          chartType: "chartType",
          chartView: "chartView",
          chatPost: "chatPost",
          choiceAddValue: "choiceAddValue",
          choiceDynamic: "choiceDynamic",
          choiceValues: "choiceValues",
          chooseFile: "chooseFile",
          choosen: "choosen",
          choosePhoto: "choosePhoto",
          chooseTeamName: "chooseTeamName",
          chooseTemplate: "chooseTemplate",
          chooseTypeToExport: "chooseTypeToExport",
          clear: "clear",
          clearBackground: "clearBackground",
          clearChatHistory: "clearChatHistory",
          clearHistory: "clearHistory",
          clearSelection: "clearSelection",
          close: "close",
          collapseAll: "collapseAll",
          color: "color",
          colorScheme: "colorScheme",
          column: "column",
          commands: "commands",
          commented: "commented",
          comments: "comments",
          company: "company",
          companySize: "companySize",
          conditionalStyling: "conditionalStyling",
          confirmClearHistory: "confirmClearHistory",
          confirmDropDatabase: "confirmDropDatabase",
          confirmEmail: "confirmEmail",
          confirmImportNinox: "confirmImportNinox",
          confirmInstallTemplate: "confirmInstallTemplate",
          confirmReindex: "confirmReindex",
          confirmRemove: "confirmRemove",
          confirmRemoveAllChoosen: "confirmRemoveAllChoosen",
          confirmRemoveChoiceValue: "confirmRemoveChoiceValue",
          confirmRemoveFile: "confirmRemoveFile",
          confirmRemoveReference: "confirmRemoveReference",
          confirmRemoveTable: "confirmRemoveTable",
          confirmRemoveView: "confirmRemoveView",
          confirmReorganizeDatabase: "confirmReorganizeDatabase",
          confirmSaveReport: "confirmSaveReport",
          constantValue: "constantValue",
          constraint: "constraint",
          contactOwner: "contactOwner",
          contacts: "contacts",
          contactSupport: "contactSupport",
          contain: "contain",
          containsMixedCase: "containsMixedCase",
          containsNumber: "containsNumber",
          containsSpecialCharacters: "containsSpecialCharacters",
          continueCloud: "continueCloud",
          copy: "copy",
          copyToCalendar: "copyToCalendar",
          couldntRenameFile: "couldntRenameFile",
          country: "country",
          cover: "cover",
          create: "create",
          createApp: "createApp",
          createBackup: "createBackup",
          createCalendarEntry: "createCalendarEntry",
          createChoiceField: "createChoiceField",
          created: "created",
          createDatabase: "createDatabase",
          createDatabaseFromTemplate: "createDatabaseFromTemplate",
          createDatabaseLocation: "createDatabaseLocation",
          createDatabaseName: "createDatabaseName",
          createDatabaseOkay: "createDatabaseOkay",
          createdDate: "createdDate",
          createdUser: "createdUser",
          createField: "createField",
          createNewTeam: "createNewTeam",
          createRecord: "createRecord",
          createRecordRequiresPremium: "createRecordRequiresPremium",
          createReference: "createReference",
          createReport: "createReport",
          createRoles: "createRoles",
          createTableFromTemplate: "createTableFromTemplate",
          createTeam: "createTeam",
          createUI: "createUI",
          csvDateFormat: "csvDateFormat",
          csvDateFormatLocal: "csvDateFormatLocal",
          csvEncoding: "csvEncoding",
          csvExportOpen: "csvExportOpen",
          csvExportSaveAs: "csvExportSaveAs",
          csvFooter: "csvFooter",
          csvHeader: "csvHeader",
          csvLinefeed: "csvLinefeed",
          csvNumberFormat: "csvNumberFormat",
          csvNumberFormatComma: "csvNumberFormatComma",
          csvNumberFormatField: "csvNumberFormatField",
          csvNumberFormatPoint: "csvNumberFormatPoint",
          csvQuote: "csvQuote",
          csvSeparator: "csvSeparator",
          csvSeparatorTab: "csvSeparatorTab",
          csvSepHeader: "csvSepHeader",
          currentPlan: "currentPlan",
          custom: "custom",
          cut: "cut",
          dashed: "dashed",
          database: "database",
          databaseLocationCloud: "databaseLocationCloud",
          databaseLocationLocal: "databaseLocationLocal",
          databaseName: "databaseName",
          dataChange: "dataChange",
          dataField: "dataField",
          dataModel: "dataModel",
          date: "date",
          dateCalendar: "dateCalendar",
          dateCalendarColor: "dateCalendarColor",
          dateCalendarFormat: "dateCalendarFormat",
          dateDefaultToday: "dateDefaultToday",
          dateYearly: "dateYearly",
          day: "day",
          day_fr: "day_fr",
          day_mo: "day_mo",
          day_sa: "day_sa",
          day_short_fr: "day_short_fr",
          day_short_mo: "day_short_mo",
          day_short_sa: "day_short_sa",
          day_short_su: "day_short_su",
          day_short_th: "day_short_th",
          day_short_tu: "day_short_tu",
          day_short_we: "day_short_we",
          day_su: "day_su",
          day_th: "day_th",
          day_tu: "day_tu",
          day_we: "day_we",
          days: "days",
          daysLeft: "daysLeft",
          decimalSeparatorLabel: "decimalSeparatorLabel",
          defaultAppName: "defaultAppName",
          defaultDateFormat: "defaultDateFormat",
          defaultValue: "defaultValue",
          defineWorkHours: "defineWorkHours",
          deleteReport: "deleteReport",
          deleteRoles: "deleteRoles",
          description: "description",
          dontExecuteTriggers: "dontExecuteTriggers",
          dontHaveAccount: "dontHaveAccount",
          dontHaveAnAccount: "dontHaveAnAccount",
          dontImport: "dontImport",
          dontRepeat: "dontRepeat",
          dotted: "dotted",
          double: "double",
          download: "download",
          dragColumnsHereToDefineView: "dragColumnsHereToDefineView",
          dragFieldsHere: "dragFieldsHere",
          drawing: "drawing",
          dropbox: "dropbox",
          dropDatabase: "dropDatabase",
          dumpDatabase: "dumpDatabase",
          duplicate: "duplicate",
          duplicateDatabase: "duplicateDatabase",
          duplicateDatabaseName: "duplicateDatabaseName",
          duplicateDatabaseOkay: "duplicateDatabaseOkay",
          duplicateDatabaseToName: "duplicateDatabaseToName",
          duplicateRecord: "duplicateRecord",
          duplicateTable: "duplicateTable",
          duplicateTableName: "duplicateTableName",
          duplicateUserName: "duplicateUserName",
          dynamicValues: "dynamicValues",
          editColumns: "editColumns",
          editField: "editField",
          editFields: "editFields",
          editTable: "editTable",
          email: "email",
          emailAddress: "emailAddress",
          emailAlreadyRegistered: "emailAlreadyRegistered",
          emailBody: "emailBody",
          emailMissing: "emailMissing",
          emailNotRegistered: "emailNotRegistered",
          emailOrUserName: "emailOrUserName",
          emailSubject: "emailSubject",
          embedded: "embedded",
          empty: "empty",
          emptyLayout: "emptyLayout",
          emptyValue: "emptyValue",
          enableComments: "enableComments",
          enableFiles: "enableFiles",
          enableHistory: "enableHistory",
          endColor: "endColor",
          endsWith: "endsWith",
          enterQuery: "enterQuery",
          enterTableName: "enterTableName",
          enterViewName: "enterViewName",
          errorAmbiguousFieldName: "errorAmbiguousFieldName",
          errorAmbiguousTypeName: "errorAmbiguousTypeName",
          errorCannotPostToYourself: "errorCannotPostToYourself",
          errorCannotUpdateReverse: "errorCannotUpdateReverse",
          errorConcurrentSchemaModification:
            "errorConcurrentSchemaModification",
          errorEndOfStringExpected: "errorEndOfStringExpected",
          errorExpressionExpected: "errorExpressionExpected",
          errorFailedToDeleteFile: "errorFailedToDeleteFile",
          errorFieldIsNoDataField: "errorFieldIsNoDataField",
          errorFieldIsNoLinkField: "errorFieldIsNoLinkField",
          errorFieldNotFound: "errorFieldNotFound",
          errorFieldTypeMismatch: "errorFieldTypeMismatch",
          errorFileNotFound: "errorFileNotFound",
          errorGET: "errorGET",
          errorHTTPMethodUnsupported: "errorHTTPMethodUnsupported",
          errorIdExpected: "errorIdExpected",
          errorImageConversionFailed: "errorImageConversionFailed",
          errorInvalidFieldName: "errorInvalidFieldName",
          errorInvalidParameter: "errorInvalidParameter",
          errorInvalidRequestBody: "errorInvalidRequestBody",
          errorInvalidTypeName: "errorInvalidTypeName",
          errorInvalidViewCaption: "errorInvalidViewCaption",
          errorLicenseMaxRecordsExceeded: "errorLicenseMaxRecordsExceeded",
          errorMissingFieldName: "errorMissingFieldName",
          errorMissingRequestBody: "errorMissingRequestBody",
          errorMissingRequestParameter: "errorMissingRequestParameter",
          errorMissingTypeName: "errorMissingTypeName",
          errorNodeNotFound: "errorNodeNotFound",
          errorNotAuthorized: "errorNotAuthorized",
          errorServerNotResponding: "errorServerNotResponding",
          errorSymbolExpected: "errorSymbolExpected",
          errorTemplateTypeUnsupported: "errorTemplateTypeUnsupported",
          errorTypeNotFound: "errorTypeNotFound",
          errorUnexpectedSymbol: "errorUnexpectedSymbol",
          errorValidationFailed: "errorValidationFailed",
          errorValueExpected: "errorValueExpected",
          evening: "evening",
          everybody: "everybody",
          evictDatabase: "evictDatabase",
          executeQuery: "executeQuery",
          executeTriggers: "executeTriggers",
          executeUpdate: "executeUpdate",
          exitDatabase: "exitDatabase",
          expandAll: "expandAll",
          expired: "expired",
          exportCSV: "exportCSV",
          exportData: "exportData",
          exportXLS: "exportXLS",
          false: "false",
          field: "field",
          fieldCaption: "fieldCaption",
          fields: "fields",
          fieldType: "fieldType",
          fieldWidth: "fieldWidth",
          fieldWidth1Col: "fieldWidth1Col",
          fieldWidth2Col: "fieldWidth2Col",
          fieldWidth3Col: "fieldWidth3Col",
          fieldWidth4Col: "fieldWidth4Col",
          fileHandling: "fileHandling",
          files: "files",
          fileSync: "fileSync",
          filter: "filter",
          FindIn$: "FindIn$",
          findPartner: "findPartner",
          fiveDays: "fiveDays",
          fixedHeight: "fixedHeight",
          fnInvalidComparator: "fnInvalidComparator",
          fnInvalidExpression: "fnInvalidExpression",
          fnInvalidNumber: "fnInvalidNumber",
          fnInvalidOperator: "fnInvalidOperator",
          fnInvalidParameter: "fnInvalidParameter",
          fnInvalidReturnType: "fnInvalidReturnType",
          fnMissingParameter: "fnMissingParameter",
          fnNotABoolean: "fnNotABoolean",
          fnReturnsMultipleValues: "fnReturnsMultipleValues",
          fnReturnsSingleValue: "fnReturnsSingleValue",
          fnReturnTypeMismatch: "fnReturnTypeMismatch",
          fnUndefinedAggregation: "fnUndefinedAggregation",
          fnUndefinedFunction: "fnUndefinedFunction",
          fnUnknowError: "fnUnknowError",
          fnUnsupportedAggregation: "fnUnsupportedAggregation",
          font: "font",
          fontLarge: "fontLarge",
          fontNormal: "fontNormal",
          fontSmall: "fontSmall",
          fontStyle: "fontStyle",
          fontVeryLarge: "fontVeryLarge",
          footer: "footer",
          forgotPassword: "forgotPassword",
          forgotPasswordSuccess: "forgotPasswordSuccess",
          form: "form",
          format: "format",
          formView: "formView",
          forum: "forum",
          freetext: "freetext",
          fromDate: "fromDate",
          fromDropbox: "fromDropbox",
          fromICloudDrive: "fromICloudDrive",
          fromLocal: "fromLocal",
          fullName: "fullName",
          function: "function",
          gantt: "gantt",
          generate: "generate",
          getHelp: "getHelp",
          globalCode: "globalCode",
          globalSearch: "globalSearch",
          globalVariableInMemory: "globalVariableInMemory",
          gotoFirst: "gotoFirst",
          gotoLast: "gotoLast",
          gotoNext: "gotoNext",
          gotoPrev: "gotoPrev",
          gotoToday: "gotoToday",
          gradient: "gradient",
          grey: "grey",
          grouped: "grouped",
          grouping: "grouping",
          groupingSeparatorLabel: "groupingSeparatorLabel",
          hasIndex: "hasIndex",
          haveAnAccount: "haveAnAccount",
          header: "header",
          headFoot: "headFoot",
          headline: "headline",
          heartNinox: "heartNinox",
          height: "height",
          hello: "hello",
          helloGood$: "helloGood$",
          help: "help",
          hidden: "hidden",
          hideColumn: "hideColumn",
          hintAddFields: "hintAddFields",
          hintCreateDatabase: "hintCreateDatabase",
          hintCreateTable: "hintCreateTable",
          hintEnterTableName: "hintEnterTableName",
          history: "history",
          home: "home",
          horizontalPosition: "horizontalPosition",
          hours: "hours",
          icloudDrive: "icloudDrive",
          icon: "icon",
          iconWithout: "iconWithout",
          id: "id",
          image: "image",
          imageSize: "imageSize",
          imageSizeLarge: "imageSizeLarge",
          imageSizeMedium: "imageSizeMedium",
          imageSizeOriginal: "imageSizeOriginal",
          imageSizeSmall: "imageSizeSmall",
          import: "import",
          importAmbiguous: "importAmbiguous",
          importAmbiguousSkip: "importAmbiguousSkip",
          importAmbiguousUpdateAll: "importAmbiguousUpdateAll",
          importArchive: "importArchive",
          importAvailableFields: "importAvailableFields",
          importChooseCSVFile: "importChooseCSVFile",
          importChooseDatabase: "importChooseDatabase",
          importChooseFile: "importChooseFile",
          importChooseURL: "importChooseURL",
          importContacts: "importContacts",
          importCreateTable: "importCreateTable",
          importData: "importData",
          importDatabase: "importDatabase",
          importDatabaseName: "importDatabaseName",
          importDescription: "importDescription",
          importEnterURL: "importEnterURL",
          importExecute: "importExecute",
          importFailed: "importFailed",
          importFieldMode: "importFieldMode",
          importFieldModeKeyExact: "importFieldModeKeyExact",
          importFieldModeUpdateAlways: "importFieldModeUpdateAlways",
          importFieldModeUpdateEmpty: "importFieldModeUpdateEmpty",
          importFields: "importFields",
          importFromAnotherDatabase: "importFromAnotherDatabase",
          importHeader: "importHeader",
          importIntoField: "importIntoField",
          importMode: "importMode",
          importModeAll: "importModeAll",
          importModeInvalid: "importModeInvalid",
          importModeNew: "importModeNew",
          importModeNotSpecified: "importModeNotSpecified",
          importModeUpdate: "importModeUpdate",
          importNoDatabasesDefined: "importNoDatabasesDefined",
          importNoDataFound: "importNoDataFound",
          importPreview: "importPreview",
          importSelectFile: "importSelectFile",
          importSourceSettings: "importSourceSettings",
          importSuccessful: "importSuccessful",
          importTable: "importTable",
          importTargetSettings: "importTargetSettings",
          importTooManyFilesSelected: "importTooManyFilesSelected",
          include: "include",
          includeData: "includeData",
          includeDataShort: "includeDataShort",
          includeFiles: "includeFiles",
          includeFilesShort: "includeFilesShort",
          installTemplate: "installTemplate",
          installTemplateOkay: "installTemplateOkay",
          invalidBoolean: "invalidBoolean",
          invalidChoice: "invalidChoice",
          invalidCredentials: "invalidCredentials",
          invalidDatabaseName: "invalidDatabaseName",
          invalidEncoding: "invalidEncoding",
          invalidFileName: "invalidFileName",
          invalidFunction: "invalidFunction",
          invalidNumber: "invalidNumber",
          invalidNumberMax: "invalidNumberMax",
          invalidNumberMin: "invalidNumberMin",
          invalidPassword: "invalidPassword",
          invalidRequired: "invalidRequired",
          invalidRoleCaption: "invalidRoleCaption",
          invalidRoleRoles: "invalidRoleRoles",
          invalidString: "invalidString",
          invalidStringMaxLength: "invalidStringMaxLength",
          invalidStringMinLength: "invalidStringMinLength",
          invalidStringREMatch: "invalidStringREMatch",
          invalidTeamName: "invalidTeamName",
          invalidUserEMail: "invalidUserEMail",
          invalidUserFirstName: "invalidUserFirstName",
          invalidUserId: "invalidUserId",
          invalidUserLastName: "invalidUserLastName",
          invalidUserName: "invalidUserName",
          invalidUserRoles: "invalidUserRoles",
          invitation: "invitation",
          invitationLanguage: "invitationLanguage",
          invitations: "invitations",
          invite: "invite",
          inviteCode: "inviteCode",
          invitedAt: "invitedAt",
          invitedFrom: "invitedFrom",
          inviteHead: "inviteHead",
          italic: "italic",
          joinCommunity: "joinCommunity",
          justify: "justify",
          kanban: "kanban",
          kanbanRecommend: "kanbanRecommend",
          labelPosition: "labelPosition",
          language: "language",
          later: "later",
          latestChanges: "latestChanges",
          latitude: "latitude",
          layoutElement: "layoutElement",
          learningResources: "learningResources",
          learningTheBasics: "learningTheBasics",
          leaveTeam: "leaveTeam",
          leaveTeamConfirm: "leaveTeamConfirm",
          leaveThisTeam: "leaveThisTeam",
          left: "left",
          licensed: "licensed",
          licensedTo: "licensedTo",
          licenseExpires: "licenseExpires",
          licenseInvalid: "licenseInvalid",
          lineHeight: "lineHeight",
          linkConfig: "linkConfig",
          linked: "linked",
          linkFrom: "linkFrom",
          linkPreview: "linkPreview",
          linkTo: "linkTo",
          list: "list",
          localization: "localization",
          LocalizationAddLocaleColumnHeader:
            "LocalizationAddLocaleColumnHeader",
          LocalizationDefaultColumnHeader: "LocalizationDefaultColumnHeader",
          LocalizationModuleColumnHeader: "LocalizationModuleColumnHeader",
          logic: "logic",
          login: "login",
          login2: "login2",
          loginAttempts: "loginAttempts",
          loginWithGoogle: "loginWithGoogle",
          logout: "logout",
          longitude: "longitude",
          manageBackups: "manageBackups",
          manualBackups: "manualBackups",
          margins: "margins",
          matchPasswords: "matchPasswords",
          maxUsers: "maxUsers",
          medium: "medium",
          meetNinox: "meetNinox",
          messages: "messages",
          minLength: "minLength",
          missingUserName: "missingUserName",
          modeText: "modeText",
          modeVisual: "modeVisual",
          modified: "modified",
          modifiedAt: "modifiedAt",
          modifiedDate: "modifiedDate",
          modifiedUser: "modifiedUser",
          month: "month",
          month_apr: "month_apr",
          month_aug: "month_aug",
          month_dec: "month_dec",
          month_feb: "month_feb",
          month_jan: "month_jan",
          month_jul: "month_jul",
          month_jun: "month_jun",
          month_mar: "month_mar",
          month_may: "month_may",
          month_nov: "month_nov",
          month_oct: "month_oct",
          month_sep: "month_sep",
          monthly: "monthly",
          months: "months",
          morning: "morning",
          moveToBack: "moveToBack",
          moveToFront: "moveToFront",
          multipleChoiceDynamic: "multipleChoiceDynamic",
          mustAgreeTerms: "mustAgreeTerms",
          myDatabases: "myDatabases",
          name: "name",
          new: "new",
          newField: "newField",
          newOldPassword: "newOldPassword",
          newPassword: "newPassword",
          newReport: "newReport",
          newTeam: "newTeam",
          newView: "newView",
          next: "next",
          nextWebinar: "nextWebinar",
          night: "night",
          ninoxCloudSync: "ninoxCloudSync",
          ninoxForTeams: "ninoxForTeams",
          no: "no",
          noCalendarAccess: "noCalendarAccess",
          noCalendarEntries: "noCalendarEntries",
          noColor: "noColor",
          nodeNotFound: "nodeNotFound",
          noGrouping: "noGrouping",
          none: "none",
          noNeedToResetPassword: "noNeedToResetPassword",
          noProblems: "noProblems",
          notAuthorized: "notAuthorized",
          notConnected: "notConnected",
          noTeamName: "noTeamName",
          noTemplate: "noTemplate",
          notEmpty: "notEmpty",
          notLoggedIn: "notLoggedIn",
          numberFormat: "numberFormat",
          numberFormatDigits: "numberFormatDigits",
          numberFormatGroup: "numberFormatGroup",
          numberFormatPrefix: "numberFormatPrefix",
          numberFormatUnit: "numberFormatUnit",
          numberMax: "numberMax",
          numberMin: "numberMin",
          numberOfEmployees: "numberOfEmployees",
          numberValue: "numberValue",
          of: "of",
          okay: "okay",
          oldPassword: "oldPassword",
          onClick: "onClick",
          oneAdminRequired: "oneAdminRequired",
          oneDay: "oneDay",
          onlineHelp: "onlineHelp",
          op_abs: "op_abs",
          op_acos: "op_acos",
          op_age: "op_age",
          op_and: "op_and",
          op_asin: "op_asin",
          op_atan: "op_atan",
          op_atan2: "op_atan2",
          op_ceil: "op_ceil",
          op_contains: "op_contains",
          op_cos: "op_cos",
          op_date: "op_date",
          op_day: "op_day",
          op_days: "op_days",
          op_duration: "op_duration",
          op_end: "op_end",
          op_exp: "op_exp",
          op_false: "op_false",
          op_floor: "op_floor",
          op_format: "op_format",
          op_if: "op_if",
          op_if_else: "op_if_else",
          op_if_if: "op_if_if",
          op_if_then: "op_if_then",
          op_index: "op_index",
          op_like: "op_like",
          op_ln: "op_ln",
          op_log: "op_log",
          op_lower: "op_lower",
          op_lpad: "op_lpad",
          op_month: "op_month",
          op_not: "op_not",
          op_now: "op_now",
          op_number: "op_number",
          op_or: "op_or",
          op_pow: "op_pow",
          op_round: "op_round",
          op_rpad: "op_rpad",
          op_sign: "op_sign",
          op_sin: "op_sin",
          op_sqr: "op_sqr",
          op_sqrt: "op_sqrt",
          op_start: "op_start",
          op_string: "op_string",
          op_substr: "op_substr",
          op_tan: "op_tan",
          op_text: "op_text",
          op_today: "op_today",
          op_trim: "op_trim",
          op_true: "op_true",
          op_upper: "op_upper",
          op_week: "op_week",
          op_weekday: "op_weekday",
          op_workdays: "op_workdays",
          op_year: "op_year",
          op_yearmonth: "op_yearmonth",
          op_yearquater: "op_yearquater",
          op_yearweek: "op_yearweek",
          openIn: "openIn",
          operationInProgress: "operationInProgress",
          operator: "operator",
          options: "options",
          or: "or",
          original: "original",
          otherOptions: "otherOptions",
          padding: "padding",
          page: "page",
          pageBody: "pageBody",
          pageFoot: "pageFoot",
          pageHead: "pageHead",
          pages: "pages",
          palette: "palette",
          paperFormat: "paperFormat",
          passHint: "passHint",
          passHintCase: "passHintCase",
          passHintChar: "passHintChar",
          passHintLen: "passHintLen",
          passHintNum: "passHintNum",
          password: "password",
          passwordContainNumber: "passwordContainNumber",
          passwordExpired: "passwordExpired",
          passwordMismatch: "passwordMismatch",
          passwordRestrict: "passwordRestrict",
          passwordSpecificLength: "passwordSpecificLength",
          paste: "paste",
          perMonth: "perMonth",
          perRecordInMemory: "perRecordInMemory",
          perRecordInServer: "perRecordInServer",
          perYear: "perYear",
          photo: "photo",
          photoLibrary: "photoLibrary",
          pickGroupColumn: "pickGroupColumn",
          placeholder: "placeholder",
          planCurrent: "planCurrent",
          planCurrentCovers: "planCurrentCovers",
          planExpired: "planExpired",
          planExpiredMember: "planExpiredMember",
          planGetNow: "planGetNow",
          planGetNowCTA: "planGetNowCTA",
          planNone: "planNone",
          planOverused: "planOverused",
          planOverusedMember: "planOverusedMember",
          planPurchaseOther: "planPurchaseOther",
          planRenewsAt: "planRenewsAt",
          planSave: "planSave",
          planTerms: "planTerms",
          planTrial: "planTrial",
          planTrialExpiresAt: "planTrialExpiresAt",
          planUnknown: "planUnknown",
          planUsage: "planUsage",
          planUsageCovered: "planUsageCovered",
          planUsageInfo: "planUsageInfo",
          planUsageRequired: "planUsageRequired",
          planWrongUser: "planWrongUser",
          pleaseConfirmYourEmail: "pleaseConfirmYourEmail",
          position: "position",
          postCommentButton: "postCommentButton",
          postCommentLabel: "postCommentLabel",
          presets: "presets",
          preview: "preview",
          print: "print",
          printAll: "printAll",
          printAttachments: "printAttachments",
          printFontSize: "printFontSize",
          printImages: "printImages",
          printNodeSettings: "printNodeSettings",
          printNow: "printNow",
          printOne: "printOne",
          printPDF: "printPDF",
          printRendering: "printRendering",
          printTableSettings: "printTableSettings",
          printView: "printView",
          private: "private",
          problemsLoggingIn: "problemsLoggingIn",
          processBackground: "processBackground",
          processDatabase: "processDatabase",
          processHeadline: "processHeadline",
          processLogs: "processLogs",
          processName: "processName",
          processRefresh: "processRefresh",
          processStatus: "processStatus",
          processSubline: "processSubline",
          processTimeStarted: "processTimeStarted",
          processTimeStopped: "processTimeStopped",
          processUser: "processUser",
          productPurchased: "productPurchased",
          profileImage: "profileImage",
          protectDatabase: "protectDatabase",
          purchaseNow: "purchaseNow",
          query: "query",
          queryExecuting: "queryExecuting",
          radius: "radius",
          readableIf: "readableIf",
          readRoles: "readRoles",
          rebuildThumbnails: "rebuildThumbnails",
          rebuildThumbnailsConfirm: "rebuildThumbnailsConfirm",
          red: "red",
          referenceLabel1N: "referenceLabel1N",
          referenceLabelFrom: "referenceLabelFrom",
          referenceLabelN1: "referenceLabelN1",
          referenceLabelTo: "referenceLabelTo",
          refFinderSearch: "refFinderSearch",
          refFinderSearchCaption: "refFinderSearchCaption",
          register: "register",
          registerNewsletter: "registerNewsletter",
          reindex: "reindex",
          reIndexFiles: "reIndexFiles",
          reIndexFilesConfirm: "reIndexFilesConfirm",
          reloginHeader: "reloginHeader",
          reloginMessage: "reloginMessage",
          remove: "remove",
          removeAllChoosen: "removeAllChoosen",
          removed: "removed",
          removeField: "removeField",
          removeFieldConfirm: "removeFieldConfirm",
          removeFile: "removeFile",
          removeFromTeam: "removeFromTeam",
          removeFromTeamConfirm: "removeFromTeamConfirm",
          removeFromTeamHead: "removeFromTeamHead",
          removeFromTeamOkay: "removeFromTeamOkay",
          removeNRecords: "removeNRecords",
          removeRecord: "removeRecord",
          removeReference: "removeReference",
          removeTab: "removeTab",
          removeTable: "removeTable",
          removeTeam: "removeTeam",
          removeTeamConfirm: "removeTeamConfirm",
          removeView: "removeView",
          rename: "rename",
          renameDatabase: "renameDatabase",
          renameDatabaseOkay: "renameDatabaseOkay",
          renameDatabaseToName: "renameDatabaseToName",
          renameView: "renameView",
          reorganizeDatabase: "reorganizeDatabase",
          repeat: "repeat",
          repeatPassword: "repeatPassword",
          required: "required",
          resend: "resend",
          resendInvitation: "resendInvitation",
          resendVerificationMail: "resendVerificationMail",
          reset: "reset",
          resetPassword: "resetPassword",
          resetSchema: "resetSchema",
          resetSync: "resetSync",
          restoreAppStoreTransactions: "restoreAppStoreTransactions",
          restoreBackup: "restoreBackup",
          result: "result",
          resyncCloudDatabases: "resyncCloudDatabases",
          right: "right",
          role_editor: "role_editor",
          roleCaption: "roleCaption",
          roleNotFound: "roleNotFound",
          roles: "roles",
          rolesExport: "rolesExport",
          rolesImport: "rolesImport",
          rolesMassDataUpdate: "rolesMassDataUpdate",
          rolesOpen: "rolesOpen",
          rolesPrint: "rolesPrint",
          runConsole: "runConsole",
          save: "save",
          saveArchiveAs: "saveArchiveAs",
          saveAs: "saveAs",
          saveDataModelChanges: "saveDataModelChanges",
          saveImage: "saveImage",
          saveProfile: "saveProfile",
          saveReport: "saveReport",
          saveSchema: "saveSchema",
          saveViewAs: "saveViewAs",
          schemaDirty: "schemaDirty",
          schemaSaveRequired: "schemaSaveRequired",
          search: "search",
          searchIn$: "searchIn$",
          security: "security",
          select: "select",
          selectAll: "selectAll",
          sendInvitation: "sendInvitation",
          sendMail: "sendMail",
          sent: "sent",
          sevenDays: "sevenDays",
          share: "share",
          shareFile: "shareFile",
          shareURL: "shareURL",
          shareView: "shareView",
          sharing: "sharing",
          showAll: "showAll",
          showAs: "showAs",
          showColumn: "showColumn",
          showExtendedOptions: "showExtendedOptions",
          showHideColumns: "showHideColumns",
          showLess: "showLess",
          showMore: "showMore",
          showOnlyChoosen: "showOnlyChoosen",
          showOnlyWorkHours: "showOnlyWorkHours",
          signature: "signature",
          signIn: "signIn",
          signinHead: "signinHead",
          signup: "signup",
          signUpBusinessMessage: "signUpBusinessMessage",
          signupCreateTeam: "signupCreateTeam",
          signupFree: "signupFree",
          signupHead: "signupHead",
          signUpHeader1_1: "signUpHeader1_1",
          signUpHeader1_2: "signUpHeader1_2",
          signUpHeader2: "signUpHeader2",
          signUpHeader3: "signUpHeader3",
          signUpNewsletter: "signUpNewsletter",
          signupNewUser: "signupNewUser",
          signUpPrivacyPolicy: "signUpPrivacyPolicy",
          signupWithGoogle: "signupWithGoogle",
          size: "size",
          solid: "solid",
          sort: "sort",
          sortAscending: "sortAscending",
          sortDescending: "sortDescending",
          sorting: "sorting",
          space: "space",
          ssoErrorCta: "ssoErrorCta",
          ssoErrorHeader: "ssoErrorHeader",
          ssoErrorMessage: "ssoErrorMessage",
          ssoErrorSupport: "ssoErrorSupport",
          ssoErrorSupportCta: "ssoErrorSupportCta",
          ssoLogin: "ssoLogin",
          ssoLogoutHeader: "ssoLogoutHeader",
          ssoLogoutMessage: "ssoLogoutMessage",
          startColor: "startColor",
          startsWith: "startsWith",
          startTrial: "startTrial",
          staticImage: "staticImage",
          staticImagePhoto: "staticImagePhoto",
          stayWithPlan: "stayWithPlan",
          storageLocation: "storageLocation",
          storeOnICloudDrive: "storeOnICloudDrive",
          stretch: "stretch",
          stringLPad: "stringLPad",
          stringMaxLength: "stringMaxLength",
          stringMinLength: "stringMinLength",
          stringMultiline: "stringMultiline",
          stringRPad: "stringRPad",
          style: "style",
          subTable: "subTable",
          supportedBrowsers: "supportedBrowsers",
          supportTicket: "supportTicket",
          switchAccount: "switchAccount",
          switchLayout: "switchLayout",
          switchTeam: "switchTeam",
          switchToPlan: "switchToPlan",
          switchToPrintView: "switchToPrintView",
          syncFilesFailed: "syncFilesFailed",
          syncFilesToDownload: "syncFilesToDownload",
          syncFilesToUpload: "syncFilesToUpload",
          syncNow: "syncNow",
          syncProblemCheck: "syncProblemCheck",
          syncProblems: "syncProblems",
          syncSeq: "syncSeq",
          syncState: "syncState",
          tab: "tab",
          table: "table",
          tableCaption: "tableCaption",
          tableReference: "tableReference",
          tables: "tables",
          tableView: "tableView",
          takePhoto: "takePhoto",
          targetTable: "targetTable",
          teamMember: "teamMember",
          teamMembers: "teamMembers",
          teamName: "teamName",
          teamSettings: "teamSettings",
          templateRequired: "templateRequired",
          templateRequiredContacts: "templateRequiredContacts",
          templateRequiredOkay: "templateRequiredOkay",
          templates: "templates",
          termsDisclamer: "termsDisclamer",
          termsOfService: "termsOfService",
          text: "text",
          textAlign: "textAlign",
          textAndDate: "textAndDate",
          textColor: "textColor",
          thanksCloud: "thanksCloud",
          thick: "thick",
          thin: "thin",
          thisFieldsAreRequired: "thisFieldsAreRequired",
          time: "time",
          timeFmt: "timeFmt",
          timestampDefaultNow: "timestampDefaultNow",
          to: "to",
          toDate: "toDate",
          today: "today",
          toggleSelection: "toggleSelection",
          tooltip: "tooltip",
          top: "top",
          transparent: "transparent",
          triggerAfterCreate: "triggerAfterCreate",
          triggerAfterCreateShort: "triggerAfterCreateShort",
          triggerAfterOpen: "triggerAfterOpen",
          triggerAfterUpdate: "triggerAfterUpdate",
          triggerAfterUpdateShort: "triggerAfterUpdateShort",
          trim: "trim",
          true: "true",
          tutorialVideos: "tutorialVideos",
          type_appointment: "type_appointment",
          type_boolean: "type_boolean",
          type_br: "type_br",
          type_button: "type_button",
          type_chart: "type_chart",
          type_choice: "type_choice",
          type_color: "type_color",
          type_custom: "type_custom",
          type_date: "type_date",
          type_datx: "type_datx",
          type_email: "type_email",
          type_file: "type_file",
          type_fn: "type_fn",
          type_head: "type_head",
          type_html: "type_html",
          type_icon: "type_icon",
          type_link: "type_link",
          type_list: "type_list",
          type_location: "type_location",
          type_multi: "type_multi",
          type_number: "type_number",
          type_object: "type_object",
          type_phone: "type_phone",
          type_ref: "type_ref",
          type_rev: "type_rev",
          type_signature: "type_signature",
          type_space: "type_space",
          type_string: "type_string",
          type_string_multiline: "type_string_multiline",
          type_tab: "type_tab",
          type_text: "type_text",
          type_time: "type_time",
          type_timeinterval: "type_timeinterval",
          type_timestamp: "type_timestamp",
          type_user: "type_user",
          type_view: "type_view",
          typeExportTemplates: "typeExportTemplates",
          typeMissmatchHtml: "typeMissmatchHtml",
          typeMissmatchImage: "typeMissmatchImage",
          unknowError: "unknowError",
          unknown: "unknown",
          unknownError: "unknownError",
          unlink: "unlink",
          unlinked: "unlinked",
          unlockDatabase: "unlockDatabase",
          unnamed: "unnamed",
          unprotectDatabase: "unprotectDatabase",
          unsavedChanges: "unsavedChanges",
          updateAllRecords: "updateAllRecords",
          updateAssistant: "updateAssistant",
          updateAssistantExecute: "updateAssistantExecute",
          updateAssistantFormula: "updateAssistantFormula",
          updateAssistantResults: "updateAssistantResults",
          updated: "updated",
          updateExpressionNotAllowed: "updateExpressionNotAllowed",
          updateModeAssignFunction: "updateModeAssignFunction",
          updateModeAssignNull: "updateModeAssignNull",
          updateModeAssignValue: "updateModeAssignValue",
          updateModeDontChange: "updateModeDontChange",
          updateSelectedRecords: "updateSelectedRecords",
          updateVisibleRecords: "updateVisibleRecords",
          upgradePlan: "upgradePlan",
          upgradeToPremium: "upgradeToPremium",
          upgradeYourSubscription: "upgradeYourSubscription",
          uploadBackgroundFile: "uploadBackgroundFile",
          uploadFailed: "uploadFailed",
          uploading: "uploading",
          usedPassword: "usedPassword",
          user: "user",
          userName: "userName",
          userNotFound: "userNotFound",
          users: "users",
          useThisEmail: "useThisEmail",
          uuid: "uuid",
          validUntil: "validUntil",
          value: "value",
          valueColor: "valueColor",
          valueIcon: "valueIcon",
          valueName: "valueName",
          verificationLinkSent: "verificationLinkSent",
          verificationPending: "verificationPending",
          verifyEmail$: "verifyEmail$",
          verticalPosition: "verticalPosition",
          view: "view",
          viewAs: "viewAs",
          visibilityRule: "visibilityRule",
          visibilityRuleShort: "visibilityRuleShort",
          visibleColumns: "visibleColumns",
          visibleRows: "visibleRows",
          webinars: "webinars",
          week: "week",
          weeks: "weeks",
          whatIsTheNewEmail: "whatIsTheNewEmail",
          whatsnew: "whatsnew",
          whatsnew1: "whatsnew1",
          whatsnew1Body: "whatsnew1Body",
          whatsnew1Title: "whatsnew1Title",
          whatsnew2: "whatsnew2",
          whatsnew2Body: "whatsnew2Body",
          whatsnew2Title: "whatsnew2Title",
          whatsnew3: "whatsnew3",
          whatsnew3Body: "whatsnew3Body",
          whatsnew3Title: "whatsnew3Title",
          whatsnew4: "whatsnew4",
          whatsnew5: "whatsnew5",
          whatsnewa1: "whatsnewa1",
          whatsnewa2: "whatsnewa2",
          whatsnewa3: "whatsnewa3",
          whatsnewa4: "whatsnewa4",
          whatsnewa5: "whatsnewa5",
          whatsnewDontShow: "whatsnewDontShow",
          whatsnewFeatures: "whatsnewFeatures",
          whatsnewHelp: "whatsnewHelp",
          whatsnewNext: "whatsnewNext",
          whatsnewSkip: "whatsnewSkip",
          whatsnewStart: "whatsnewStart",
          whatsnewSubscribe: "whatsnewSubscribe",
          whatsnewTitle: "whatsnewTitle",
          whatsnewVersion: "whatsnewVersion",
          width: "width",
          workPhone: "workPhone",
          writableIf: "writableIf",
          writeRoles: "writeRoles",
          wrongPassword: "wrongPassword",
          wrongUserPassword: "wrongUserPassword",
          xlsExportOpen: "xlsExportOpen",
          xlsExportSaveAs: "xlsExportSaveAs",
          years: "years",
          yes: "yes",
          yesterday: "yesterday",
          yourAccount: "yourAccount",
          zapierIntegration: "zapierIntegration",
          zoom: "zoom",
          dayNames: [
            "day_su",
            "day_mo",
            "day_tu",
            "day_we",
            "day_th",
            "day_fr",
            "day_sa",
          ],
          dayNamesShort: [
            "day_short_su",
            "day_short_mo",
            "day_short_tu",
            "day_short_we",
            "day_short_th",
            "day_short_fr",
            "day_short_sa",
          ],
          monthNames: [
            "month_jan",
            "month_feb",
            "month_mar",
            "month_apr",
            "month_may",
            "month_jun",
            "month_jul",
            "month_aug",
            "month_sep",
            "month_oct",
            "month_nov",
            "month_dec",
          ],
          agg: {
            cnt: "agg_cnt",
            count: "agg_cnt",
            sum: "agg_sum",
            avg: "agg_avg",
            min: "agg_min",
            max: "agg_max",
            first: "agg_first",
            last: "agg_last",
            concat: "agg_concat",
            median: "agg_median",
            sort: "agg_sort",
            unique: "agg_unique",
          },
          types: {
            number: "type_number",
            string: "type_string",
            string_multiline: "type_string_multiline",
            date: "type_date",
            datx: "type_datx",
            time: "type_time",
            timeinterval: "type_timeinterval",
            timestamp: "type_timestamp",
            boolean: "type_boolean",
            choice: "type_choice",
            multi: "type_multi",
            list: "type_list",
            ref: "type_ref",
            rev: "type_rev",
            object: "type_object",
            html: "type_html",
            fn: "type_fn",
            tab: "type_tab",
            head: "type_head",
            text: "type_text",
            br: "type_br",
            space: "type_space",
            file: "type_file",
            link: "type_link",
            email: "type_email",
            phone: "type_phone",
            appointment: "type_appointment",
            user: "type_user",
            location: "type_location",
            icon: "type_icon",
            color: "type_color",
            custom: "type_custom",
            button: "type_button",
            signature: "type_signature",
            view: "type_view",
            chart: "type_chart",
          },
        },
        en: {
          accountInactive:
            "Account has been inactive for more than the specified amount of days. Please contact your system administrator.",
          accountLocked:
            "Account is locked. Please contact your system administrator.",
          actionRequiresPremium:
            "Please upgrade to premium to activate this feature.",
          actions: "Actions",
          activateSharing: "Activate sharing",
          add: "Add",
          addFile: "Add file",
          addRole: "Create new role",
          addRowCreate: "Create record",
          addRowFind: "Add existing record",
          addRowFindCreate: "Search or create record",
          addRule: "Add rule",
          addTable: "New table",
          admin: "Administration",
          advancedOptions: "Advanced options",
          afterHide: "After hide",
          agg_avg: "Average",
          agg_cnt: "Count",
          agg_concat: "Concatenate",
          agg_first: "First",
          agg_last: "Last",
          agg_max: "Max",
          agg_median: "Median",
          agg_min: "Min",
          agg_sort: "Sort",
          agg_sum: "Sum",
          agg_unique: "Unique",
          aggregation: "Footer",
          agreeTerms: "I've read and agree to the $1terms and conditions$2.",
          all: "(all)",
          allChangesSaved: "All changes are saved.",
          alreadyTrialPlan:
            "You're already on a trial plan for Ninox Cloud. Please upgrade your plan first, to create another team.",
          annual: "Annual",
          anyFile: "Any file",
          appointmentBegin: "Start",
          appointmentEnd: "End",
          apps: "Apps",
          askLater: "Ask me later",
          atColumn: "column",
          atLine: "at line",
          auto: "(auto)",
          autoHeight: "Auto height",
          autoLayout: "Create layout automatically",
          automatedBackups: "Automated backups",
          automatic: "Auto",
          availableColumns: "Available columns",
          back: "Go back",
          background: "Background",
          backgroundColor: "Background color",
          backgroundFileMustBeJPEG: "Background image must be a JPEG file.",
          backgrounds: "Background image",
          backToTeam: "Back to team",
          beforeShow: "Before show",
          billedAnnually: "billed annually",
          binding: "Binding",
          blue: "Blue",
          bold: "Bold",
          border: "Border",
          borderColor: "Border color",
          borderRadius: "Border radius",
          borderSides: "Border sides",
          borderStyle: "Border style",
          borderWidth: "Border width",
          bottom: "Bottom",
          br: "Line break",
          browserUnsupported: "Ninox cloud can not run on this browser",
          business: "Business",
          buyNow: "Buy now",
          calculate: "Calculate",
          calculatedValue: "Calculation",
          calendar: "Calendar",
          calendarCreateAppointmentField:
            "Create an appointment field to create calendar entries.",
          calendarOptions: "Calendar options",
          calendarSyncAhead: "Months to sync ahead",
          calendarSyncBeyond: "Months to sync beyond",
          calendarSyncEnabled: "Enable calendar sync",
          calendarSyncLocation: "Storage location",
          calendarWeek: "CW",
          calendarWorkEnd: "Work day ends",
          calendarWorkStart: "Work day begins",
          cancel: "Cancel",
          cancelInvitation: "Cancel invitation",
          cancelInvitationConfirm:
            "Do you really want to cancel this invitation?",
          cancelUpload: "Cancel",
          canFindIt: "No email? Please check your spam folder.",
          cannotChangeRole: "Could not save role settings",
          cannotChangeUser: "Could not save user settings.",
          cannotConnectAppStore:
            "Cannot connect to App Store. Please try again later.",
          cannotRemoveTeam:
            "This team cannot be deleted. Please contact support.",
          caption: "Name",
          cards: "Cards",
          cascade: "Composition",
          caseStudies: "Case studies",
          center: "Center",
          changeEmail: "Change email",
          changePassword: "Change password",
          chartBar: "Bar chart",
          chartBubble: "Bubble chart",
          chartBubbleRequiresColumns:
            "Bubble chart requires three numeric columns for X, Y and radius.",
          chartDatasets: "Data series",
          chartDatasetsCols: "Columns",
          chartDatasetsRows: "Rows",
          chartDoughnut: "Doughnut chart",
          chartLegend: "Legend",
          chartLine: "Line chart",
          chartLineTension: "Smoothed lines",
          chartNoData:
            "Chart has no data. Please configure at least one number column in your view.",
          chartPie: "Pie chart",
          chartPolarArea: "Polar area chart",
          chartRadar: "Radar chart",
          chartStacked: "Stacked",
          chartType: "Chart type",
          chartView: "Chart",
          chatPost: "Message",
          choiceAddValue: "Add value",
          choiceDynamic: "Choice (dynamic)",
          choiceValues: "Choice values",
          chooseFile: "Add file",
          choosen: "Selection",
          choosePhoto: "Add photo",
          chooseTeamName: "Choose a team name",
          chooseTemplate: "Choose a template to start with",
          chooseTypeToExport: "Please select a table to export.",
          clear: "Clear",
          clearBackground: "Clear background",
          clearChatHistory: "Clear history",
          clearHistory: "Clear history",
          clearSelection: "Clear selection",
          close: "Close",
          collapseAll: "Collapse all",
          color: "Color",
          colorScheme: "Color scheme",
          column: "Column",
          commands: "Commands",
          commented: "commented",
          comments: "Comments",
          company: "Company",
          companySize: "Number of employees",
          conditionalStyling: "Conditional styling",
          confirmClearHistory:
            "Please confirm to clear history of all records. This action cannot be undone.",
          confirmDropDatabase:
            "Please confirm to delete this database. This action cannot be undone.",
          confirmEmail:
            "Please confirm your email address to use this feature.",
          confirmImportNinox:
            "This operation may have heavy impact on your database and cannot be undone. Please make sure that you have a backup. To create a backup, duplicate the database or save it as an archive file.",
          confirmInstallTemplate: "Do you want to install this template",
          confirmReindex:
            "This action may take some time. During index rebuild, other users cannot make any modifications.",
          confirmRemove: "Are you sure you want to delete this record?",
          confirmRemoveAllChoosen:
            "Are you sure you want to delete all selected records?",
          confirmRemoveChoiceValue:
            "Please confirm to delete this choice value.",
          confirmRemoveFile: "Please confirm to delete this file.",
          confirmRemoveReference:
            "Are you sure you want to delete this reference? This action cannot be undone.",
          confirmRemoveTable:
            "Are you sure you want to delete this table? All contained records, comments and files will be lost. This action cannot be undone.",
          confirmRemoveView: "Do you want to delete this table view?",
          confirmReorganizeDatabase:
            "Reorganize this database and set the current device as database owner. Unsynchronized changes made on other devices will be lost.",
          confirmSaveReport: "Do you want to save changes to the layout?",
          constantValue: "Constant value",
          constraint: "Constraints",
          contactOwner: "Contact team’s owner",
          contacts: "Contacts",
          contactSupport: "Contact support",
          contain: "Contain",
          containsMixedCase:
            "at least one uppercase and at least one lower case character",
          containsNumber: "a number",
          containsSpecialCharacters: "a special character",
          continueCloud: "Would you like to continue using Ninox Cloud?",
          copy: "Copy",
          copyToCalendar: "Copy to my calendar",
          couldntRenameFile: "Couldn't rename file",
          country: "Country",
          cover: "Cover",
          create: "Create",
          createApp: "Create new app",
          createBackup: "Create backup",
          createCalendarEntry: "New entry",
          createChoiceField: "Create new choice field",
          created: "created",
          createDatabase: "New database",
          createDatabaseFromTemplate: "From template",
          createDatabaseLocation: "Where do you want to store the database?",
          createDatabaseName: "Enter database name",
          createDatabaseOkay: "Create database",
          createdDate: "Created on",
          createdUser: "Created by",
          createField: "Create field",
          createNewTeam: "Create a new team",
          createRecord: "Create record",
          createRecordRequiresPremium:
            "You've created $ records. Please upgrade to Premium.",
          createReference: "Create table reference",
          createReport: "Create new layout",
          createRoles: "Create new records",
          createTableFromTemplate: "From template",
          createTeam: "Create team",
          createUI: "Add layout element",
          csvDateFormat: "Date format",
          csvDateFormatLocal: "Locale",
          csvEncoding: "Character set",
          csvExportOpen: "Download",
          csvExportSaveAs: "Save as...",
          csvFooter: "Include footer",
          csvHeader: "Include header",
          csvLinefeed: "Line break",
          csvNumberFormat: "Number format",
          csvNumberFormatComma: "1.023,42",
          csvNumberFormatField: "Use field settings",
          csvNumberFormatPoint: "1023.42",
          csvQuote: "Text quotation",
          csvSeparator: "Separator",
          csvSeparatorTab: "Tabulator",
          csvSepHeader: "Include separator definition",
          currentPlan: "Current plan",
          custom: "Custom",
          cut: "Cut",
          dashed: "Dashed",
          database: "Database",
          databaseLocationCloud: "iCloud",
          databaseLocationLocal: "Local",
          databaseName: "Database name",
          dataChange: "Data change",
          dataField: "Data field",
          dataModel: "Data model",
          date: "Date",
          dateCalendar: "Show in calendar",
          dateCalendarColor: "With color",
          dateCalendarFormat: "Show as",
          dateDefaultToday: "Today",
          dateYearly: "Anniversary",
          day: "day",
          day_fr: "Friday",
          day_mo: "Monday",
          day_sa: "Saturday",
          day_short_fr: "Fr",
          day_short_mo: "Mo",
          day_short_sa: "Sa",
          day_short_su: "Su",
          day_short_th: "Th",
          day_short_tu: "Tu",
          day_short_we: "We",
          day_su: "Sunday",
          day_th: "Thursday",
          day_tu: "Tuesday",
          day_we: "Wednesday",
          days: "Days",
          daysLeft: "Days left",
          decimalSeparatorLabel: "Decimal separator",
          defaultAppName: "My app",
          defaultDateFormat: "dd.mm.yyyy",
          defaultValue: "Default value",
          defineWorkHours: "Working hours",
          deleteReport: "Delete this layout",
          deleteRoles: "Delete records",
          description: "Description",
          dontExecuteTriggers: "Don't execute triggers",
          dontHaveAccount: "Don't have an account?",
          dontHaveAnAccount: "Don't have an account?",
          dontImport: "(don't import)",
          dontRepeat: "Don’t repeat",
          dotted: "Dotted",
          double: "Double",
          download: "Download",
          dragColumnsHereToDefineView:
            "Drag fields here, to define visible columns. As long as there are no columns defined, the view will be configured automatically.",
          dragFieldsHere: "Drag fields here...",
          drawing: "Drawing",
          dropbox: "Dropbox",
          dropDatabase: "Delete database",
          dumpDatabase: "Download backup",
          duplicate: "Duplicate",
          duplicateDatabase: "Duplicate database",
          duplicateDatabaseName:
            "Duplicate database name, please try another one.",
          duplicateDatabaseOkay: "Duplicate",
          duplicateDatabaseToName: "Please enter a new database name",
          duplicateRecord: "Duplicate record",
          duplicateTable: "Duplicate table",
          duplicateTableName:
            "There's already a table with this name. Please choose a different one.",
          duplicateUserName: "This user name is already registered",
          dynamicValues: "Dynamic value",
          editColumns: "Edit columns...",
          editField: "Edit field",
          editFields: "Edit fields",
          editTable: "Edit table",
          email: "Email",
          emailAddress: "Email Address",
          emailAlreadyRegistered: "This email address is already registered.",
          emailBody: "Body",
          emailMissing: "Please provide a valid email address.",
          emailNotRegistered: "Sorry, this email address is not registered.",
          emailOrUserName: "Email or user name",
          emailSubject: "Subject",
          embedded: "Embedded",
          empty: "(empty)",
          emptyLayout: "Empty",
          emptyValue: "Empty",
          enableComments: "Comment section",
          enableFiles: "File attachments",
          enableHistory: "Change history",
          endColor: "End color",
          endsWith: "Ends with",
          enterQuery: "Enter query",
          enterTableName: "Please enter table name",
          enterViewName: "View name",
          errorAmbiguousFieldName: "Ambiguous field names",
          errorAmbiguousTypeName: "Ambiguous table names",
          errorCannotPostToYourself: "Less self-talk, please.",
          errorCannotUpdateReverse: "Field is not writable",
          errorConcurrentSchemaModification:
            "Concurrent schema modification. Your changes have been reverted.",
          errorEndOfStringExpected: "End expected",
          errorExpressionExpected: "Expression expected",
          errorFailedToDeleteFile: "File could not be deleted",
          errorFieldIsNoDataField: "Field is no data field",
          errorFieldIsNoLinkField: "Field is not a reference field",
          errorFieldNotFound: "Field not found",
          errorFieldTypeMismatch: "Incompatible data types",
          errorFileNotFound: "File not found",
          errorGET:
            "Server not responding, please check your network connection.",
          errorHTTPMethodUnsupported: "HTTP method not supported",
          errorIdExpected: "Identifier expected",
          errorImageConversionFailed: "Image could not be converted",
          errorInvalidFieldName: "Invalid field name",
          errorInvalidParameter: "Invalid parameter",
          errorInvalidRequestBody: "Invalid request body",
          errorInvalidTypeName: "Invalid table name",
          errorInvalidViewCaption: "Invalid view name",
          errorLicenseMaxRecordsExceeded:
            "You've exceeded the maximum number of records of your license",
          errorMissingFieldName: "Unnamed field",
          errorMissingRequestBody: "Missing request body",
          errorMissingRequestParameter: "Missing parameter",
          errorMissingTypeName: "Unnamed table",
          errorNodeNotFound: "Record not found",
          errorNotAuthorized: "Not authorized",
          errorServerNotResponding:
            "Server not responding. Please check your connection.",
          errorSymbolExpected: "Symbol expected",
          errorTemplateTypeUnsupported:
            "File type not suitable as an export template.",
          errorTypeNotFound: "Table not found",
          errorUnexpectedSymbol: "Unexpected symbol",
          errorValidationFailed: "Invalid value",
          errorValueExpected: "Value expected",
          evening: "evening",
          everybody: "everyone",
          evictDatabase: "Clear chached files",
          executeQuery: "Execute query",
          executeTriggers: "Execute triggers",
          executeUpdate: "Execute update",
          exitDatabase: "Exit database",
          expandAll: "Expand all",
          expired: "Expired",
          exportCSV: "CSV export",
          exportData: "Export data",
          exportXLS: "Excel export",
          false: "false",
          field: "Field",
          fieldCaption: "Field name",
          fields: "Fields",
          fieldType: "Data type",
          fieldWidth: "Width",
          fieldWidth1Col: "1 column",
          fieldWidth2Col: "2 columns",
          fieldWidth3Col: "3 columns",
          fieldWidth4Col: "4 columns",
          fileHandling: "Handle file as",
          files: "Attachments",
          fileSync: "File sync",
          filter: "Filter",
          FindIn$: "Search in $",
          findPartner: "Find a Ninox Partner",
          fiveDays: "5 days",
          fixedHeight: "Fixed height",
          fnInvalidComparator: "Invalid comparator",
          fnInvalidExpression: "Invalid expression",
          fnInvalidNumber: "Invalid number",
          fnInvalidOperator: "Invalid operator",
          fnInvalidParameter: "Invalid parameter",
          fnInvalidReturnType: "Invalid return type",
          fnMissingParameter: "Missing parameter",
          fnNotABoolean: "Not a boolean value",
          fnReturnsMultipleValues: "Expression returns multiple values",
          fnReturnsSingleValue: "Expression returns only one value",
          fnReturnTypeMismatch:
            "Return type mismatch for then and else expressions.",
          fnUndefinedAggregation: "Aggregation not defined",
          fnUndefinedFunction: "Function is not defined",
          fnUnknowError: "Unknown error",
          fnUnsupportedAggregation:
            "Aggregation not defined for this data type",
          font: "Font",
          fontLarge: "Large",
          fontNormal: "Normal",
          fontSmall: "Small",
          fontStyle: "Font style",
          fontVeryLarge: "Very large",
          footer: "Footer",
          forgotPassword: "Forgot your password?",
          forgotPasswordSuccess:
            "To reset your password, please have a look at your mailbox",
          form: "Form",
          format: "Format",
          formView: "Table with form",
          forum: "Forum",
          freetext: "Description",
          fromDate: "From",
          fromDropbox: "From Dropbox",
          fromICloudDrive: "From iCloud Drive",
          fromLocal: "From Device",
          fullName: "Full Name",
          function: "Formula",
          gantt: "GANTT",
          generate: "Generate",
          getHelp: "Get help",
          globalCode: "Global script definitions",
          globalSearch: "Global search",
          globalVariableInMemory: "Global variable in memory (Browser)",
          gotoFirst: "Go to first",
          gotoLast: "Go to last",
          gotoNext: "Go to next",
          gotoPrev: "Go to previous",
          gotoToday: "Today",
          gradient: "Gradient",
          grey: "Grey",
          grouped: "Grouped",
          grouping: "Group",
          groupingSeparatorLabel: "Group separator",
          hasIndex: "Index",
          haveAnAccount: "Already have an account?",
          header: "Header",
          headFoot: "Head / foot",
          headline: "Head",
          heartNinox: "Rate Ninox",
          height: "Height",
          hello: "hello",
          helloGood$: "Hello, good $!",
          help: "Help",
          hidden: "Hidden",
          hideColumn: "Hide column",
          hintAddFields: "Add some fields",
          hintCreateDatabase: "Create a new database",
          hintCreateTable: "Create a new table",
          hintEnterTableName: "Enter table name",
          history: "History",
          home: "Home",
          horizontalPosition: "Horizontal position",
          hours: "Hours",
          icloudDrive: "iCloud Drive",
          icon: "Icon",
          iconWithout: "(w/o)",
          id: "Id",
          image: "Image",
          imageSize: "Size",
          imageSizeLarge: "Large",
          imageSizeMedium: "Medium",
          imageSizeOriginal: "Original size",
          imageSizeSmall: "Small",
          import: "Import",
          importAmbiguous: "Ambiguous records",
          importAmbiguousSkip: "Skip",
          importAmbiguousUpdateAll: "Update all",
          importArchive: "Import archive",
          importAvailableFields: "Available fields",
          importChooseCSVFile: "Import CSV file...",
          importChooseDatabase: "Please choose a database to import data into.",
          importChooseFile: "Import file...",
          importChooseURL: "Import from URL",
          importContacts: "Import my contacts",
          importCreateTable: "Create new table from import",
          importData: "Import data",
          importDatabase: "Import database",
          importDatabaseName: "Please enter a new database name",
          importDescription:
            "Please open a text or CSV file from another app (e. g. Mail) with Ninox to import data.",
          importEnterURL: "Please enter the URL of the data you want to import",
          importExecute: "Import now",
          importFailed: "Import failed",
          importFieldMode: "Mode",
          importFieldModeKeyExact: "Key",
          importFieldModeUpdateAlways: "Update all fields",
          importFieldModeUpdateEmpty: "Update empty fields",
          importFields: "Fields to import",
          importFromAnotherDatabase: "Import from another database",
          importHeader: "First line is header",
          importIntoField: "Import into field",
          importMode: "Import mode",
          importModeAll: "New and updated records",
          importModeInvalid: "Import mode is invalid",
          importModeNew: "Only new records",
          importModeNotSpecified: "Import mode is not specified",
          importModeUpdate: "Only updated records",
          importNoDatabasesDefined:
            "Data cannot be imported as long as there are no databases defined.",
          importNoDataFound: "The file contains no data.",
          importPreview: "Preview changes",
          importSelectFile: "Choose CSV file",
          importSourceSettings: "Data source settings",
          importSuccessful: "Import successful",
          importTable: "Choose table to import data into",
          importTargetSettings: "Import settings",
          importTooManyFilesSelected: "Please choose only one file.",
          include: "Include",
          includeData: "Copy records",
          includeDataShort: "Data",
          includeFiles: "Copy files",
          includeFilesShort: "Files",
          installTemplate: "Install template",
          installTemplateOkay: "Install",
          invalidBoolean: "Invalid value",
          invalidChoice: "Invalid choice",
          invalidCredentials: "Email or password - something is not right.",
          invalidDatabaseName:
            "Database name is invalid. It must not contain special characters or spaces.",
          invalidEncoding:
            "Could not read file. Please choose another encoding.",
          invalidFileName: "Invalid file name",
          invalidFunction: "Invalid formula",
          invalidNumber: "Invalid number",
          invalidNumberMax: "Value too great",
          invalidNumberMin: "Value too small",
          invalidPassword:
            "Invalid password, it must consist at least of 6 digits.",
          invalidRequired: "Please enter a value",
          invalidRoleCaption: "Invalid role name",
          invalidRoleRoles: "Invalid roles.",
          invalidString: "Not a string",
          invalidStringMaxLength: "Value too long. Maximum length: ",
          invalidStringMinLength: "Value too short. Minimum length: ",
          invalidStringREMatch:
            "The value does not match the regular expression.",
          invalidTeamName: "Invalid team name, please choose a different one.",
          invalidUserEMail: "Invalid email.",
          invalidUserFirstName: "Invalid first name.",
          invalidUserId: "Invalid user id.",
          invalidUserLastName: "Invalid last name.",
          invalidUserName: "Invalid user name.",
          invalidUserRoles: "Invalid roles.",
          invitation: "Invitation",
          invitationLanguage: "Email invitation language",
          invitations: "Invitations",
          invite: "Invite",
          inviteCode: "Invitation code",
          invitedAt: "Invited at",
          invitedFrom: "Invited from",
          inviteHead: "Invite a team member",
          italic: "Italic",
          joinCommunity: "Join the community",
          justify: "Justify",
          kanban: "Kanban",
          kanbanRecommend:
            "Kanban works best with choice fields. Recommended fields:",
          labelPosition: "Label position",
          language: "Language",
          later: "Later",
          latestChanges: "Latest changes",
          latitude: "Latitude",
          layoutElement: "Layout element",
          learningResources: "Learning resources",
          learningTheBasics: "Learning the basics",
          leaveTeam: "Leave team",
          leaveTeamConfirm:
            "Do you really want to leave this team? You'd need to ask the team's owner for an invitation to join again.",
          leaveThisTeam: "Leave this team",
          left: "Left",
          licensed: "licensed",
          licensedTo: "to",
          licenseExpires: "expires",
          licenseInvalid:
            "Your license has expired. Please renew the license file.",
          lineHeight: "Line height",
          linkConfig: "Reference",
          linked: "linked with",
          linkFrom: "Link from",
          linkPreview: "Show preview",
          linkTo: "Link to",
          list: "List",
          localization: "Localization",
          LocalizationAddLocaleColumnHeader: "+ Add locale",
          LocalizationDefaultColumnHeader: "Default",
          LocalizationModuleColumnHeader: "Module",
          logic: "Logic",
          login: " Log in",
          login2: "Log in",
          loginAttempts:
            "Too many unsuccessful login attempts. We have locked your account for 24 h. Please contact your administrator to unblock it earlier.",
          loginWithGoogle: "Continue with Google",
          logout: "Log out",
          longitude: "Longitude",
          manageBackups: "Manage backups",
          manualBackups: "Manual backups",
          margins: "Page margins",
          matchPasswords: "Passwords don't match",
          maxUsers: "Up to $1 team members.",
          medium: "Medium",
          meetNinox: "Ninox events",
          messages: "Messages",
          minLength: "a minimum length of 8 characters",
          missingUserName: "User name is required.",
          modeText: "Text",
          modeVisual: "Visual",
          modified: "modified",
          modifiedAt: "on",
          modifiedDate: "Modified on",
          modifiedUser: "Modified by",
          month: "Month",
          month_apr: "April",
          month_aug: "August",
          month_dec: "December",
          month_feb: "February",
          month_jan: "January",
          month_jul: "July",
          month_jun: "June",
          month_mar: "March",
          month_may: "May",
          month_nov: "November",
          month_oct: "October",
          month_sep: "September",
          monthly: "Monthly",
          months: "Months",
          morning: "morning",
          moveToBack: "Move to back",
          moveToFront: "Move to front",
          multipleChoiceDynamic: "Multiple choice (dynamic)",
          mustAgreeTerms:
            "You must accept our terms and conditions to get access to Ninox Cloud.",
          myDatabases: "My databases",
          name: "Name",
          new: "New",
          newField: "New field",
          newOldPassword: "You can not use an old password",
          newPassword: "New password",
          newReport: "New layout",
          newTeam: "Create a new team",
          newView: "New view",
          next: "Next",
          nextWebinar: "Next webinar",
          night: "night",
          ninoxCloudSync: "Ninox Cloud Sync",
          ninoxForTeams: "Visit our website",
          no: "No",
          noCalendarAccess:
            "Please grant Ninox access to your calendar in the system settings.",
          noCalendarEntries: "No entries",
          noColor: "No color",
          nodeNotFound:
            "A record could not be found, it may have been deleted.",
          noGrouping: "Ungroup",
          none: "(none)",
          noNeedToResetPassword: "No need to reset your password?",
          noProblems: "No problems found.",
          notAuthorized: "You're not authorized for this action",
          notConnected: "You’re currently not connected to the internet.",
          noTeamName: "Please choose a team name.",
          noTemplate: "Start with a new and empty database.",
          notEmpty: "(not empty)",
          notLoggedIn: "Not logged in",
          numberFormat: "Number format",
          numberFormatDigits: "Digits",
          numberFormatGroup: "Thousands separator",
          numberFormatPrefix: "Prefix",
          numberFormatUnit: "Unit",
          numberMax: "Max",
          numberMin: "Min",
          numberOfEmployees: "Number of employees",
          numberValue: "Number value",
          of: "of",
          okay: "OK",
          oldPassword: "Current password",
          onClick: "On click",
          oneAdminRequired:
            "Cannot remove this user from team. There must be at least one other admin user in this team.",
          oneDay: "1 day",
          onlineHelp: "User manual",
          op_abs: "absolute",
          op_acos: "acos(x)",
          op_age: "Age",
          op_and: "and",
          op_asin: "asin(x)",
          op_atan: "atan(x)",
          op_atan2: "atan²(x)",
          op_ceil: "⎡x⎤",
          op_contains: "contains",
          op_cos: "cos(x)",
          op_date: "date",
          op_day: "day",
          op_days: "Days",
          op_duration: "duration",
          op_end: "end",
          op_exp: "10^x",
          op_false: "No",
          op_floor: "⎣x⎦",
          op_format: "format",
          op_if: "if / then / else",
          op_if_else: "else",
          op_if_if: "if",
          op_if_then: "then",
          op_index: "index",
          op_like: "like",
          op_ln: "ln(x)",
          op_log: "log(x)",
          op_lower: "lower case",
          op_lpad: "left pad",
          op_month: "month",
          op_not: "not",
          op_now: "Now",
          op_number: "as number",
          op_or: "or",
          op_pow: "a^b",
          op_round: "round",
          op_rpad: "right pad",
          op_sign: "sign",
          op_sin: "sin(x)",
          op_sqr: "x²",
          op_sqrt: "√x",
          op_start: "start",
          op_string: "Text",
          op_substr: "sub string",
          op_tan: "tan(x)",
          op_text: "as text",
          op_today: "Today",
          op_trim: "trim",
          op_true: "Yes",
          op_upper: "upper case",
          op_week: "Week",
          op_weekday: "Day of week",
          op_workdays: "Working days",
          op_year: "year",
          op_yearmonth: "year/month",
          op_yearquater: "Quarter",
          op_yearweek: "Year/Week",
          openIn: "Open in",
          operationInProgress: "Requested operation is already in progress",
          operator: "Operator",
          options: "Options",
          or: "or",
          original: "Original",
          otherOptions: "Other options",
          padding: "Padding",
          page: "Page",
          pageBody: "Page body",
          pageFoot: "Page foot",
          pageHead: "Page head",
          pages: "Pages",
          palette: "Palette",
          paperFormat: "Paper format",
          passHint: "Must have",
          passHintCase: "✓ Upper case and lower case letters",
          passHintChar: "✓ 1 special character",
          passHintLen: "✓ 8 or more characters",
          passHintNum: "✓ 1 number",
          password: "Password",
          passwordContainNumber: "a number, ",
          passwordExpired: "Your password is expired. Please reset it.",
          passwordMismatch: "Password mismatch - please try again.",
          passwordRestrict: "Password needs to have",
          passwordSpecificLength: "at least 8 characters",
          paste: "Paste",
          perMonth: "per month",
          perRecordInMemory: "Per record in memory (Browser)",
          perRecordInServer: "Per record in server (default)",
          perYear: "per year",
          photo: "Photo",
          photoLibrary: "Photo library",
          pickGroupColumn: "Please pick a grouping column.",
          placeholder: "Placeholder",
          planCurrent: "Current plan",
          planCurrentCovers: "Your current plan covers $1 users.",
          planExpired: "We noticed, that your plan has expired.",
          planExpiredMember:
            "The plan for this team has expired. Please contact the team’s owner ($1) and ask him to upgrade his plan.",
          planGetNow: "Get now Ninox Cloud for $1 users.",
          planGetNowCTA: "Get a subscription",
          planNone: "The plan has expired.",
          planOverused:
            "We noticed, that your current plan does not cover all your team members.",
          planOverusedMember:
            "The plan for this team does not cover all registered team members. Please contact the team’s owner: $1.",
          planPurchaseOther: "This plan has been purchased with $1.",
          planRenewsAt: "This subscription will be renewed at: $1.",
          planSave: "Save",
          planTerms:
            'This subscription provides access to Ninox Cloud for your and your team members from all devices with the Ninox App and also with the web browser. Payment will be charged to iTunes Account at confirmation of purchase. This subscription automatically renews unless auto-renew is turned off at least 24-hours before the end of the current period. Your account will be charged for renewal within 24-hours prior to the end of the current period, and identify the cost of the renewal. Subscriptions may be managed by the user and auto-renewal may be turned off by going to the user\'s Account Settings after purchase. Any unused portion of a free trial period, if offered, will be forfeited when the user purchases a subscription to that publication, where applicable. With your purchase you agree to the <a href="https://ninoxdb.de/ninox/en/privacy.html">Privacy Policy</a> and the <a href="https://ninox.com/ninox/en/terms.html">Terms & Conditions</a>.',
          planTrial: "You're on a free trial plan.",
          planTrialExpiresAt: "The trial will expire at",
          planUnknown:
            "Sorry, we cannot determine your current plan. Please contact support@ninox.com.",
          planUsage: "Current usage",
          planUsageCovered: "$1 users are covered by other plans.",
          planUsageInfo: "You have $1 members in $2 teams. ",
          planUsageRequired: "$1 users need to be covered by your plan.",
          planWrongUser:
            "You already have a plan with a different ID. Please log in with the following email: $1",
          pleaseConfirmYourEmail: "Please confirm your email",
          position: "Position",
          postCommentButton: "Post",
          postCommentLabel: "Comment",
          presets: "Presets",
          preview: "Preview",
          print: "Print",
          printAll: "All",
          printAttachments: "Print attached images",
          printFontSize: "Font size",
          printImages: "Print images",
          printNodeSettings: "Printing Records",
          printNow: "Print now",
          printOne: "This record",
          printPDF: "Print PDF",
          printRendering: "Preview as",
          printTableSettings: "Printing tables",
          printView: "Print preview",
          private: "Private",
          problemsLoggingIn: "You can't log in?",
          processBackground: "Background process:",
          processDatabase: "Database",
          processHeadline: "Running processes",
          processLogs: "Logs",
          processName: "Process",
          processRefresh: "Refresh",
          processStatus: "Status",
          processSubline:
            'Here you can see all running processes (if any) in your account. Via "Refresh" you get an update on the process\'s status',
          processTimeStarted: "Start",
          processTimeStopped: "End",
          processUser: "User",
          productPurchased: "Installed",
          profileImage: "Profile image",
          protectDatabase: "Protect this database",
          purchaseNow: "Purchase now",
          query: "Query",
          queryExecuting: "Query is executing...",
          radius: "Radius",
          readableIf: "Readable if",
          readRoles: "Allowed to read",
          rebuildThumbnails: "Rebuild thumbnails",
          rebuildThumbnailsConfirm:
            "Do you really want to rebuild all thumbnails? This process may take some time.",
          red: "Red",
          referenceLabel1N: "(1 : N)",
          referenceLabelFrom: "Reference from",
          referenceLabelN1: "(N : 1)",
          referenceLabelTo: "to",
          refFinderSearch: "Enter search text:",
          refFinderSearchCaption: "Search in",
          register: "Create account",
          registerNewsletter: "Keep me informed about product updates.",
          reindex: "Rebuild index",
          reIndexFiles: "Reindex files",
          reIndexFilesConfirm:
            "Do you really want to reindex files? This process may take some time.",
          reloginHeader: "Your session was ended",
          reloginMessage: "Please log in again to continue.",
          remove: "Delete",
          removeAllChoosen: "Delete selected rows",
          removed: "deleted",
          removeField: "Delete field",
          removeFieldConfirm:
            "Are you sure you want to delete this field? This action cannot be undone.",
          removeFile: "Delete file",
          removeFromTeam: "Remove from team",
          removeFromTeamConfirm:
            "Do you really want to remove this member from your team?",
          removeFromTeamHead: "Remove Member from Team",
          removeFromTeamOkay: "Remove",
          removeNRecords: "Delete $ records",
          removeRecord: "Delete record",
          removeReference: "Delete reference",
          removeTab: "Delete tab",
          removeTable: "Delete table",
          removeTeam: "Delete this team",
          removeTeamConfirm:
            "Do you really want to delete this team parmanently? This operation cannot be undone. All data will be lost.",
          removeView: "Remove view",
          rename: "Rename",
          renameDatabase: "Rename database...",
          renameDatabaseOkay: "Rename",
          renameDatabaseToName: "Please enter a new database name",
          renameView: "Rename view",
          reorganizeDatabase: "Reorganize",
          repeat: "Repeat",
          repeatPassword: "Confirm new password",
          required: "Required",
          resend: "Resend",
          resendInvitation: "Resend invitation",
          resendVerificationMail: "Resend verification mail",
          reset: "Reset",
          resetPassword: "Reset your password!",
          resetSchema: "Revert changes",
          resetSync: "Reset synchronization",
          restoreAppStoreTransactions: "Restore purchased products",
          restoreBackup: "Restore",
          result: "Result",
          resyncCloudDatabases: "iCloud Sync",
          right: "Right",
          role_editor: "Editor",
          roleCaption: "Role name",
          roleNotFound: "Role not found.",
          roles: "Access rights",
          rolesExport: "Export data",
          rolesImport: "Import data",
          rolesMassDataUpdate: "Execute update queries",
          rolesOpen: "Open database",
          rolesPrint: "Print data",
          runConsole: "Run",
          save: "Save",
          saveArchiveAs: "Save archive as...",
          saveAs: "Save as",
          saveDataModelChanges: "Save changes",
          saveImage: "Save image",
          saveProfile: "Save Profile",
          saveReport: "Save layout",
          saveSchema: "Save changes",
          saveViewAs: "Save view as...",
          schemaDirty: "You have modified the application.",
          schemaSaveRequired: "Please save changes to the application.",
          search: "Search",
          searchIn$: "Search in $",
          security: "Security",
          select: "Select",
          selectAll: "Select all",
          sendInvitation: "Send invitation",
          sendMail: "Send mail",
          sent: "Sent",
          sevenDays: "7 days",
          share: "Share",
          shareFile: "Share this file",
          shareURL: "Public URL",
          shareView: "Share this view",
          sharing: "Sharing",
          showAll: "Show everything",
          showAs: "Show as",
          showColumn: "Show column",
          showExtendedOptions: "More options",
          showHideColumns: "Edit columns...",
          showLess: "Show less",
          showMore: "Show more",
          showOnlyChoosen: "Show selection",
          showOnlyWorkHours: "Show only working hours",
          signature: "Signature",
          signIn: "Log in",
          signinHead: "Log in to Ninox",
          signup: "Sign up",
          signUpBusinessMessage:
            "Business customers receive personal support from our Customer Success Team.",
          signupCreateTeam: "Log in and create a team",
          signupFree: "Sign up for free",
          signupHead: "Sign up for Ninox Cloud",
          signUpHeader1_1: "How do you plan",
          signUpHeader1_2: "to use Ninox",
          signUpHeader2:
            "On which account do you want to receive the free trial?",
          signUpHeader3: "Complete your profile please",
          signUpNewsletter: "Yes, please add me to the Ninox newsletter.",
          signupNewUser: "Sign up as new user",
          signUpPrivacyPolicy: "Privacy Policy",
          signupWithGoogle: "Continue with Google",
          size: "Size",
          solid: "Solid",
          sort: "Sort",
          sortAscending: "Ascending",
          sortDescending: "Descending",
          sorting: "Sorting",
          space: "Space",
          ssoErrorCta: "Try again",
          ssoErrorHeader: "Something went wrong",
          ssoErrorMessage:
            "Something is not working. We can't log you in at the moment.",
          ssoErrorSupport: "Still can't login?",
          ssoErrorSupportCta: "Still can't log in? Please contact our support.",
          ssoLogin: "SSO Login",
          ssoLogoutHeader: "You have successfully logged out.",
          ssoLogoutMessage: "Please log in again to continue.",
          startColor: "Start color",
          startsWith: "Starts With",
          startTrial: "Start trial",
          staticImage: "Static image",
          staticImagePhoto: "Static image (photo)",
          stayWithPlan: "Stay with this plan",
          storageLocation: "Storage location",
          storeOnICloudDrive: "Store on iCloud Drive",
          stretch: "Stretch",
          stringLPad: "Left padding",
          stringMaxLength: "Max length",
          stringMinLength: "Min length",
          stringMultiline: "Multiline",
          stringRPad: "Right padding",
          style: "Style",
          subTable: "Sub-table",
          supportedBrowsers: "Supported Browsers",
          supportTicket: "Get support",
          switchAccount: "Switch account",
          switchLayout: "Switch layout",
          switchTeam: "Switch team",
          switchToPlan: "Switch to this plan",
          switchToPrintView: "Switch to view",
          syncFilesFailed: "failed",
          syncFilesToDownload: "Files to download",
          syncFilesToUpload: "Files to upload",
          syncNow: "Sync now",
          syncProblemCheck: "Check for sync problems",
          syncProblems: "Synchronization problem report",
          syncSeq: "Synchronization sequence no.",
          syncState: "Synchronization status",
          tab: "Tab",
          table: "Table",
          tableCaption: "Table name",
          tableReference: "Table reference",
          tables: "Tables",
          tableView: "Table",
          takePhoto: "Take photo",
          targetTable: "Target",
          teamMember: "Team Member",
          teamMembers: "Team members",
          teamName: "Team name",
          teamSettings: "Team settings",
          templateRequired: "Template required",
          templateRequiredContacts:
            'To import contacts, please install a table template: "Contact management"',
          templateRequiredOkay: "Install table template...",
          templates: "Templates",
          termsDisclamer:
            "By creating an account, you agree to the $Terms of Service$.",
          termsOfService: "Terms of Service",
          text: "Text",
          textAlign: "Text align",
          textAndDate: "Text / Date",
          textColor: "Text color",
          thanksCloud: "Thanks for using Ninox Cloud!",
          thick: "Thick",
          thin: "Thin",
          thisFieldsAreRequired: "Please fill in this field",
          time: "Time",
          timeFmt: "Time format",
          timestampDefaultNow: "Now",
          to: "to",
          toDate: "To",
          today: "today",
          toggleSelection: "Toggle selection",
          tooltip: "Tooltip",
          top: "Top",
          transparent: "Transparent",
          triggerAfterCreate: "Trigger on create",
          triggerAfterCreateShort: "On create",
          triggerAfterOpen: "Trigger after open",
          triggerAfterUpdate: "Trigger after update",
          triggerAfterUpdateShort: "On update",
          trim: "Trim spaces",
          true: "true",
          tutorialVideos: "Tutorial videos",
          type_appointment: "Appointment",
          type_boolean: "Yes / No",
          type_br: "Line break",
          type_button: "Button",
          type_chart: "Chart",
          type_choice: "Choice",
          type_color: "Color",
          type_custom: "Custom HTML control",
          type_date: "Date",
          type_datx: "Date (new)",
          type_email: "Email",
          type_file: "Image",
          type_fn: "Formula",
          type_head: "Head",
          type_html: "Rich text",
          type_icon: "Icon",
          type_link: "URL",
          type_list: "Child table",
          type_location: "Location",
          type_multi: "Multiple choice",
          type_number: "Number",
          type_object: "Object",
          type_phone: "Phone",
          type_ref: "Reference",
          type_rev: "Reference",
          type_signature: "Signature",
          type_space: "Space",
          type_string: "Text",
          type_string_multiline: "Text (multiline)",
          type_tab: "Tab",
          type_text: "Free text",
          type_time: "Time",
          type_timeinterval: "Time interval",
          type_timestamp: "Date / Time",
          type_user: "User",
          type_view: "View",
          typeExportTemplates: "Export temlates",
          typeMissmatchHtml: "Type mismatch, this field must return an html",
          typeMissmatchImage: "Type mismatch, this field must return an image",
          unknowError: "An unexpected error has occurred",
          unknown: "Unknown",
          unknownError: "Unknown error",
          unlink: "Unlink",
          unlinked: "unlinked with",
          unlockDatabase: "Unlock this database",
          unnamed: "(unnamed)",
          unprotectDatabase: "Remove the protection of this database",
          unsavedChanges: "Some changes could not be saved",
          updateAllRecords: "Update all records",
          updateAssistant: "Update multiple records",
          updateAssistantExecute: "Execute",
          updateAssistantFormula: "Execute query:",
          updateAssistantResults: "Query results / updates",
          updated: "changed to",
          updateExpressionNotAllowed: "This formula may not modify data.",
          updateModeAssignFunction: "Assign calculated value",
          updateModeAssignNull: "Empty field",
          updateModeAssignValue: "Assign constant value",
          updateModeDontChange: "Don't change",
          updateSelectedRecords: "Update selected records",
          updateVisibleRecords: "Update visible records",
          upgradePlan: "Upgrade plan",
          upgradeToPremium: "Upgrade",
          upgradeYourSubscription: "Your plan has expired",
          uploadBackgroundFile: "Upload background image",
          uploadFailed: "File could not be uploaded.",
          uploading: "Uploading...",
          usedPassword:
            "You cannot use this password since it has been previously used.",
          user: "user",
          userName: "User name",
          userNotFound: "User not found.",
          users: "users",
          useThisEmail: "Use this email",
          uuid: "Global unique identifier",
          validUntil: "Valid until",
          value: "Value",
          valueColor: "Dynamic value color",
          valueIcon: "Dynamic value icon",
          valueName: "Dynamic value name",
          verificationLinkSent: "Verification link sent to",
          verificationPending: "Email verification pending",
          verifyEmail$:
            "Please confirm your email address $ to continue using Ninox. No email? Please check your spam folder.",
          verticalPosition: "Vertical position",
          view: "View",
          viewAs: "Display as",
          visibilityRule: "Display field only, if:",
          visibilityRuleShort: "Show if",
          visibleColumns: "Visible columns",
          visibleRows: "Visible rows",
          webinars: "Webinars",
          week: "Week",
          weeks: "Weeks",
          whatIsTheNewEmail: "What is the new email?",
          whatsnew: "What's New?",
          whatsnew1: "Kanban charts",
          whatsnew1Body:
            "Change colors, icons and order of the Kanban lanes with just a single click.",
          whatsnew1Title: "Improved Kanban views",
          whatsnew2: "GANTT charts",
          whatsnew2Body:
            "Rearrange items in the navigation pane by drag and drop",
          whatsnew2Title: "Improved navigation",
          whatsnew3: "Cards / gallery view",
          whatsnew3Body: "Use pivot tables to you analyze your data.",
          whatsnew3Title: "New Pivot table view",
          whatsnew4: "Form view",
          whatsnew5: "Styling of headlines and free text elements",
          whatsnewa1: "Create databases from anywhere.",
          whatsnewa2: "Synchronize from all your devices.",
          whatsnewa3: "Collaborate with your team.",
          whatsnewa4: "Design print layouts.",
          whatsnewa5: "Build forms to easily collect data.",
          whatsnewDontShow: "Don’t show again",
          whatsnewFeatures: "Features",
          whatsnewHelp: "Help center",
          whatsnewNext: "Next",
          whatsnewSkip: "Skip",
          whatsnewStart: "Ready to go!",
          whatsnewSubscribe: "Join our Webinar",
          whatsnewTitle: "Ninox for Android",
          whatsnewVersion: "Version",
          width: "Width",
          workPhone: "Work Phone",
          writableIf: "Writable if",
          writeRoles: "Allowed to write",
          wrongPassword: "Incorrect password.",
          wrongUserPassword: "Incorrect password or unknown user name.",
          xlsExportOpen: "Download",
          xlsExportSaveAs: "Save as...",
          years: "Years",
          yes: "Yes",
          yesterday: "yesterday",
          yourAccount: "Your account",
          zapierIntegration: "Zapier integration",
          zoom: "Zoom",
          dayNames: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          dayNamesShort: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
          monthNames: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
          agg: {
            cnt: "Count",
            count: "Count",
            sum: "Sum",
            avg: "Average",
            min: "Min",
            max: "Max",
            first: "First",
            last: "Last",
            concat: "Concatenate",
            median: "Median",
            sort: "Sort",
            unique: "Unique",
          },
          types: {
            number: "Number",
            string: "Text",
            string_multiline: "Text (multiline)",
            date: "Date",
            datx: "Date (new)",
            time: "Time",
            timeinterval: "Time interval",
            timestamp: "Date / Time",
            boolean: "Yes / No",
            choice: "Choice",
            multi: "Multiple choice",
            list: "Child table",
            ref: "Reference",
            rev: "Reference",
            object: "Object",
            html: "Rich text",
            fn: "Formula",
            tab: "Tab",
            head: "Head",
            text: "Free text",
            br: "Line break",
            space: "Space",
            file: "Image",
            link: "URL",
            email: "Email",
            phone: "Phone",
            appointment: "Appointment",
            user: "User",
            location: "Location",
            icon: "Icon",
            color: "Color",
            custom: "Custom HTML control",
            button: "Button",
            signature: "Signature",
            view: "View",
            chart: "Chart",
          },
        },
        de: {
          accountInactive:
            "Das Konto ist seit mehr als der angegebenen Anzahl von Tagen inaktiv. Bitte wenden Sie sich an Ihren Systemadministrator.",
          accountLocked:
            "Das Konto ist gesperrt. Bitte wenden Sie sich an Ihren Systemadministrator.",
          actionRequiresPremium:
            "Bitte upgraden Sie auf Premium, um diese Funktion freizuschalten.",
          actions: "Aktionen",
          activateSharing: "Freigabe aktivieren",
          add: "Hinzufügen",
          addFile: "Datei hinzufügen",
          addRole: "Neue Rolle hinzufügen",
          addRowCreate: "Neuer Datensatz",
          addRowFind: "Vorhandenen Datensatz hinzufügen",
          addRowFindCreate: "Datensatz suchen oder erstellen",
          addRule: "Neue Regel",
          addTable: "Neue Tabelle",
          admin: "Administration",
          advancedOptions: "Erweiterte Optionen",
          afterHide: "Nach dem Ausblenden",
          agg_avg: "Durchschnitt",
          agg_cnt: "Anzahl",
          agg_concat: "Auflisten",
          agg_first: "Erster",
          agg_last: "Letzter",
          agg_max: "Maximum",
          agg_median: "Median",
          agg_min: "Minimum",
          agg_sort: "Sortieren",
          agg_sum: "Summe",
          agg_unique: "Eindeutige",
          aggregation: "Fußzeile / Spaltensumme",
          agreeTerms:
            "Ich habe die $1Allgemeinen Geschäftsbedingungen (AGB)$2 gelesen und stimme zu.",
          all: "(alle)",
          allChangesSaved: "Alle Daten sind gesichert.",
          alreadyTrialPlan:
            "Sie nutzen bereits einen Testzugang zu Ninox Cloud. Bitte erwerben Sie zunächst einen Plan, um ein weiteres Team anzulegen.",
          annual: "Jährlich",
          anyFile: "Beliebige Datei",
          appointmentBegin: "Von",
          appointmentEnd: "Bis",
          apps: "Apps",
          askLater: "Später nachfragen",
          atColumn: "Spalte",
          atLine: "in Zeile",
          auto: "(auto)",
          autoHeight: "Automatische Höhe",
          autoLayout: "Layout automatisch erzeugen",
          automatedBackups: "Automatische Backups",
          automatic: "Automatisch",
          availableColumns: "Verfügbare Daten",
          back: "Zurück",
          background: "Hintergrund",
          backgroundColor: "Hintergrundfarbe",
          backgroundFileMustBeJPEG:
            "Bitte verwenden Sie eine JPEG-Datei als Hintergrundbild.",
          backgrounds: "Hintergrundbilder",
          beforeShow: "Vor dem Anzeigen",
          billedAnnually: "jährliche Rechnung",
          binding: "Zuweisung",
          blue: "Blau",
          bold: "Fett",
          border: "Rahmen",
          borderColor: "Rahmenfarbe",
          borderRadius: "Radius",
          borderSides: "Rahmenseiten",
          borderStyle: "Tabellenrahmen",
          borderWidth: "Rahmenbreite",
          bottom: "Unten",
          br: "Zeilenumbruch",
          browserUnsupported:
            "Leider funktioniert Ninox Cloud nicht über diesen Browser",
          business: "Geschäftlich",
          buyNow: "Jetzt kaufen",
          calculate: "Rechnen",
          calculatedValue: "Berechnung",
          calendar: "Kalender",
          calendarCreateAppointmentField:
            "Legen Sie ein Terminfeld an, um Einträge im Kalendar zu erstellen.",
          calendarOptions: "Kalender-Einstellungen",
          calendarSyncAhead: "Zunkünftige Monate synchronisieren",
          calendarSyncBeyond: "Vergangene Monate synchronisieren",
          calendarSyncEnabled: "Kalender synchronisieren",
          calendarSyncLocation: "Speicherort",
          calendarWeek: "KW",
          calendarWorkEnd: "Arbeitstag Ende",
          calendarWorkStart: "Arbeitstag Anfang",
          cancel: "Abbrechen",
          cancelInvitation: "Einladung zurücknehmen",
          cancelInvitationConfirm:
            "Wollen Sie die Einladung wirklich zurücknehmen?",
          cancelUpload: "Abbrechen",
          canFindIt: "Keine E-Mail erhalten? Überprüfen Sie Ihren Spam Ordner.",
          cannotChangeRole: "Diese Rolle kann nicht verändert werden",
          cannotChangeUser: "Dieses Benutzerkonto kann nicht geändert werden.",
          cannotConnectAppStore:
            "Verbindung zum App Store nicht möglich. Bitte versuchen Sie es später.",
          cannotRemoveTeam:
            "Dieses Team kann nicht gelöscht werden. Bitte wenden Sie sich an den Support.",
          caption: "Name",
          cards: "Karten",
          cascade: "Komposition",
          caseStudies: "Case-Studies",
          center: "Zentriert",
          changeEmail: "E-Mail Addresse ändern",
          changePassword: "Passwort ändern",
          chartBar: "Säulendiagramm",
          chartBubble: "Blasendiagramm",
          chartBubbleRequiresColumns:
            "Blasendiagramme benötigen drei numerische Spalten für X, Y und Radius.",
          chartDatasets: "Datenreihen",
          chartDatasetsCols: "Spalten",
          chartDatasetsRows: "Zeilen",
          chartDoughnut: "Ringdiagramm",
          chartLegend: "Legende",
          chartLine: "Liniendiagramm",
          chartLineTension: "Geglättete Linien",
          chartNoData:
            "Keine Daten zum Anzeigen. Bitte definieren Sie mindestens eine numerische Spalte.",
          chartPie: "Kreisdiagramm",
          chartPolarArea: "Polardiagramm",
          chartRadar: "Radardiagramm",
          chartStacked: "Gestapelt",
          chartType: "Diagrammart",
          chartView: "Diagramm",
          chatPost: "Nachricht",
          choiceAddValue: "Wert hinzufügen",
          choiceDynamic: "Auswahl (dynamisch)",
          choiceValues: "Liste der möglichen Werte",
          chooseFile: "Datei hinzufügen",
          choosen: "Auswahl",
          choosePhoto: "Foto hinzufügen",
          chooseTeamName: "Team-Name",
          chooseTemplate: "Wählen Sie eine Vorlage aus",
          chooseTypeToExport: "Welche Tabelle soll exportiert werden?",
          clear: "Löschen",
          clearBackground: "Hintergrund entfernen",
          clearChatHistory: "Verlauf löschen",
          clearHistory: "Historie löschen",
          clearSelection: "Auswahl aufheben",
          close: "Schließen",
          collapseAll: "Alle zuklappen",
          color: "Farbe",
          colorScheme: "Farbschema",
          column: "Spalte",
          commands: "Befehle",
          commented: "kommentiert",
          comments: "Kommentare",
          company: "Unternehmen",
          companySize: "Mitarbeiterzahl",
          conditionalStyling: "Bedingte Formatierung",
          confirmClearHistory:
            "Wollen Sie die Historie aller Datensätze unwiderruflich löschen? Diese Aktion kann nicht rückgängig gemacht werden.",
          confirmDropDatabase:
            "Wollen Sie diese Datenbank wirklich löschen? Diese Aktion kann nicht wieder rückgängig gemacht werden.",
          confirmEmail:
            "Bitte bestätigen Sie Ihre E-Mail-Adresse, um diese Funktion zu nutzen.",
          confirmImportNinox:
            "Der Import hat unter Umständen große Auswirkungen und kann nicht rückgängig gemacht werden. Bitte stellen Sie sicher, dass Sie ein Backup der Datenbank haben. Nutzen Sie die Funktionen „Archiv sichern“ oder „Duplizieren“, um ein Backup zu erzeugen.",
          confirmInstallTemplate: "Wollen Sie diese Vorlage jetzt installieren",
          confirmReindex:
            "Diese Aktion kann einige Zeit in Anspruch nehmen, während der andere Benutzer keine Schreibzugriffe durchführen können.",
          confirmRemove: "Wollen Sie diesen Datensatz wirklich löschen?",
          confirmRemoveAllChoosen:
            "Wollen Sie wirklich alle ausgewählten Datensätze löschen?",
          confirmRemoveChoiceValue: "Wollen Sie diesen Wert wirklich löschen?",
          confirmRemoveFile: "Wollen Sie die Datei wirklich löschen?",
          confirmRemoveReference:
            "Wollen Sie diese Verknüpfung wirklich löschen? Diese Aktion kann nicht wieder rückgängig gemacht werden.",
          confirmRemoveTable:
            "Wollen Sie diese Tabelle wirklich löschen? Alle darin enthaltenen Datensätze samt Dateianhängen und Kommentaren gehen verloren. Diese Aktion kann nicht rückgängig gemacht werden.",
          confirmRemoveView: "Wollen Sie diese Ansicht wirklich löschen?",
          confirmReorganizeDatabase:
            "Die Datenbank wird reorganisiert und dieses Gerät als Eigentümer der Datenbank festgelegt. Änderungen von anderen Geräten, die noch nicht synchronisiert sind, gehen verloren.",
          confirmSaveReport: "Wollen Sie die Änderungen am Layout sichern?",
          constantValue: "Fester Wert",
          constraint: "Einschränkungen",
          contactOwner: "Team-Eigentümer kontaktieren",
          contacts: "Kontakte",
          contactSupport: "Support kontaktieren",
          contain: "Beinhalten",
          containsMixedCase:
            "einen Großbuchstaben und mindestens einen Kleinbuchstaben enthalten",
          containsNumber: "eine Zahl",
          containsSpecialCharacters: "ein Sonderzeichen",
          continueCloud: "Wollen Sie Ninox Cloud weiter nutzen?",
          copy: "Kopieren",
          copyToCalendar: "In meinen Kalender kopieren",
          couldntRenameFile: "Die Datei konnte nicht umbenannt werden",
          country: "Land",
          cover: "Abdecken",
          create: "Erstellen",
          createApp: "Neue App erstellen",
          createBackup: "Backup erstellen",
          createCalendarEntry: "Neuer Eintrag",
          createChoiceField: "Neues Auswahlfeld erstellen",
          created: "erstellt",
          createDatabase: "Neue Datenbank",
          createDatabaseFromTemplate: "Neu aus Vorlage",
          createDatabaseLocation: "Wo soll die Datenbank gespeichert werden?",
          createDatabaseName:
            "Bitte geben Sie einen Namen für die Datenbank ein",
          createDatabaseOkay: "Datenbank anlegen",
          createdDate: "Erstellt am",
          createdUser: "Erstellt von",
          createField: "Neues Datenfeld erstellen",
          createNewTeam: "Neues Team erstellen",
          createRecord: "Neuer Datensatz",
          createRecordRequiresPremium:
            "Sie haben $ Datensätze in dieser Datenbank angelegt. Bitte upgraden Sie auf Premium.",
          createReference: "Mit einer Tabelle verknüpfen",
          createReport: "Neues Layout erstellen",
          createRoles: "Datensätze erstellen",
          createTableFromTemplate: "Neu aus Vorlage",
          createTeam: "Team erstellen",
          createUI: "Gestaltungselement hinzufügen",
          csvDateFormat: "Datumsformat",
          csvDateFormatLocal: "Landestypisch",
          csvEncoding: "Zeichensatz",
          csvExportOpen: "Herunterladen",
          csvExportSaveAs: "Sichern unter...",
          csvFooter: "Fußzeile",
          csvHeader: "Einschließlich Kopfzeile",
          csvLinefeed: "Zeilenumbruch",
          csvNumberFormat: "Zahlenformat",
          csvNumberFormatComma: "1.023,42",
          csvNumberFormatField: "Gemäß Feldeinstellungen",
          csvNumberFormatPoint: "1023.42",
          csvQuote: "Texterkennungszeichen",
          csvSeparator: "Trennzeichen",
          csvSeparatorTab: "Tabulator",
          csvSepHeader: "Einschließlich Trennzeichen-Definition",
          currentPlan: "Ihr Abo",
          custom: "Eigenes",
          cut: "Ausschneiden",
          dashed: "Gestrichelt",
          database: "Datenbank",
          databaseLocationCloud: "iCloud",
          databaseLocationLocal: "Lokal",
          databaseName: "Datenbankname",
          dataChange: "Datenänderung",
          dataField: "Datenfeld",
          dataModel: "Datenmodell",
          date: "Datum",
          dateCalendar: "Im Kalender anzeigen",
          dateCalendarColor: "Mit der Farbe",
          dateCalendarFormat: "Anzeigen als",
          dateDefaultToday: "Heute",
          dateYearly: "Jahrestag",
          day: "Tag",
          day_fr: "Freitag",
          day_mo: "Montag",
          day_sa: "Samstag",
          day_short_fr: "Fr",
          day_short_mo: "Mo",
          day_short_sa: "Sa",
          day_short_su: "So",
          day_short_th: "Do",
          day_short_tu: "Di",
          day_short_we: "Mi",
          day_su: "Sonntag",
          day_th: "Donnerstag",
          day_tu: "Dienstag",
          day_we: "Mittwoch",
          days: "Tage",
          daysLeft: "Tage verbleibend",
          decimalSeparatorLabel: "Dezimaltrennzeichen",
          defaultAppName: "Meine App",
          defaultDateFormat: "dd.mm.yyyy",
          defaultValue: "Standardwert",
          defineWorkHours: "Arbeitszeiten",
          deleteReport: "Dieses Layout löschen",
          deleteRoles: "Datensätze löschen",
          description: "Beschreibung",
          dontExecuteTriggers: "Trigger nicht auslösen",
          dontHaveAccount: "Sie haben noch keinen Account?",
          dontHaveAnAccount: "Sie haben noch keinen Account?",
          dontImport: "(nicht importieren)",
          dontRepeat: "Nicht wiederholen",
          dotted: "Gepunktet",
          double: "Doppelt",
          download: "Herunterladen",
          dragColumnsHereToDefineView:
            "Ziehen Sie Datenfelder hierein, um die anzuzeigenden Spalten festzulegen. Solange Sie keine Spalten definieren, wird die Ansicht automatisch konfiguriert.",
          dragFieldsHere: "Ziehen Sie neue Felder hier her...",
          drawing: "Zeichnung",
          dropbox: "Dropbox",
          dropDatabase: "Datenbank löschen",
          dumpDatabase: "Backup herunterladen",
          duplicate: "Duplizieren",
          duplicateDatabase: "Datenbank duplizieren",
          duplicateDatabaseName:
            "Dieser Datenbankname ist bereits vergeben, bitte geben Sie einen anderen ein.",
          duplicateDatabaseOkay: "Duplizieren",
          duplicateDatabaseToName:
            "Geben Sie einen Namen für die Datenbank ein",
          duplicateRecord: "Datensatz duplizieren",
          duplicateTable: "Tabelle duplizieren",
          duplicateTableName:
            "Dieser Name ist bereits vergeben, bitte wählen Sie einen anderen.",
          duplicateUserName: "Dieser Benutzername ist bereits vergeben",
          dynamicValues: "Dynamischer Wert",
          editColumns: "Anzuzeigende Spalten festlegen...",
          editField: "Feld bearbeiten",
          editFields: "Felder bearbeiten",
          editTable: "Tabelle bearbeiten",
          email: "E-Mail",
          emailAddress: "E-Mail-Adresse",
          emailAlreadyRegistered:
            "Diese E-Mail-Adresse ist bereits registriert.",
          emailBody: "Inhalt",
          emailMissing: "Bitte geben Sie eine gültige E-Mail-Adresse an.",
          emailNotRegistered:
            "Diese E-Mail-Adresse ist leider nicht registriert.",
          emailOrUserName: "E-Mail oder Benutzername",
          emailSubject: "Betreff",
          embedded: "Eingebettet",
          empty: "(leer)",
          emptyLayout: "Leer",
          emptyValue: "Leer",
          enableComments: "Kommentarbereich",
          enableFiles: "Dateianhänge",
          enableHistory: "Änderungshistorie",
          endColor: "Endfarbe",
          endsWith: "Ended mit",
          enterQuery: "Geben Sie eine Abfrage ein",
          enterTableName: "Bitte geben Sie einen Namen für die Tabelle ein",
          enterViewName: "Name der Ansicht",
          errorAmbiguousFieldName: "Die Feldnamen sind nicht eindeutig",
          errorAmbiguousTypeName: "Die Tabellennamen sind nicht eindeutig",
          errorCannotPostToYourself:
            "Sie sollten weniger Selbstgespräche führen.",
          errorCannotUpdateReverse: "Dieses Feld ist nicht beschreibbar",
          errorConcurrentSchemaModification:
            "Die Applikation wurde bereits von einem anderen Benutzer verändert. Ihre Einstellungen wurden nicht übernommen.",
          errorEndOfStringExpected: "Ende erwartet",
          errorExpressionExpected: "Ausdruck erwartet",
          errorFailedToDeleteFile: "Eine Datei konnte nicht gelöscht werden",
          errorFieldIsNoDataField:
            "Die Tabellenspalte ist kein einfaches Datenfeld",
          errorFieldIsNoLinkField:
            "Bei der Tabellenspalte handelt es sich nicht um eine Tabellenverknüpfung",
          errorFieldNotFound: "Eine Tabellenspalte wurde nicht gefunden",
          errorFieldTypeMismatch: "Die Datentypen sind nicht kompatibel",
          errorFileNotFound: "Eine Datei wurde nicht gefunden",
          errorGET:
            "Der Server antwortet nicht, bitte überprüfen Sie Ihre Internetverbindung.",
          errorHTTPMethodUnsupported: "Die HTTP-Methode wird nicht unterstützt",
          errorIdExpected: "ID erwartet",
          errorImageConversionFailed:
            "Eine Bilddatei konnte nicht konvertiert werden",
          errorInvalidFieldName: "Der Feldname ist ungültig",
          errorInvalidParameter: "Ein Parameter ist ungültig",
          errorInvalidRequestBody: "Der Inhalt der Serveranfrage ist ungültig",
          errorInvalidTypeName: "Der Tabellenname ist ungültig",
          errorInvalidViewCaption: "Der Name der Ansicht ist ungültig",
          errorLicenseMaxRecordsExceeded:
            "Sie haben die maximale Anzahl an Datensätzen erreicht, die Ihre Lizenz erlaubt",
          errorMissingFieldName: "Das Feld hat keinen Namen",
          errorMissingRequestBody: "Die Serveranfrage hat keinen Inhalt",
          errorMissingRequestParameter:
            "In der Serveranfrage fehlt ein Parameter",
          errorMissingTypeName: "Die Tabelle hat keinen Namen",
          errorNodeNotFound: "Eine Datensatz wurde nicht gefunden",
          errorNotAuthorized:
            "Für diese Aktion haben Sie nicht die nötige Berechtigung",
          errorServerNotResponding:
            "Der Server antwortet nicht. Bitte prüfen Sie ihre Netzanbindung.",
          errorSymbolExpected: "Symbol erwartet",
          errorTemplateTypeUnsupported:
            "Dieser Dateityp wird nicht als Exportvorlage unterstützt. Bitte verwenden Sie Microsoft Excel-Dateien.",
          errorTypeNotFound: "Eine Tabelle wurde nicht gefunden",
          errorUnexpectedSymbol: "Unerwartetes Symbol",
          errorValidationFailed: "Der Wert ist ungültig",
          errorValueExpected: "Wert erwartet",
          evening: "Abend",
          everybody: "jeder",
          evictDatabase: "Cache leeren",
          executeQuery: "Abfrage ausführen",
          executeTriggers: "Trigger auslösen",
          executeUpdate: "Änderungen durchführen",
          exitDatabase: "Datenbank verlassen",
          expandAll: "Alle aufklappen",
          expired: "Abgelaufen",
          exportCSV: "CSV Export",
          exportData: "Daten exportieren",
          exportXLS: "Excel Export",
          false: "FALSCH",
          field: "Feld",
          fieldCaption: "Feldname",
          fields: "Felder",
          fieldType: "Datentyp",
          fieldWidth: "Breite",
          fieldWidth1Col: "1 Spalte",
          fieldWidth2Col: "2 Spalten",
          fieldWidth3Col: "3 Spalten",
          fieldWidth4Col: "4 Spalten",
          fileHandling: "Dateihandhabung",
          files: "Dateianhänge",
          fileSync: "Dateisynchronisation",
          filter: "Filter",
          FindIn$: "Suchen in $",
          findPartner: "Einen Ninox-Partner suchen",
          fiveDays: "5 Tage",
          fixedHeight: "Feste Höhe",
          fnInvalidComparator: "Ungültiger Komparator",
          fnInvalidExpression: "Der Ausdruck ist ungültig",
          fnInvalidNumber: "Ungültiger Zahlenwert",
          fnInvalidOperator: "Ungültiger Operator",
          fnInvalidParameter: "Ein Parameter ist ungültig",
          fnInvalidReturnType:
            "Der Ausdruck liefert einen unpassenden Rückgabewert",
          fnMissingParameter: "Ein Parameter fehlt",
          fnNotABoolean: "Kein Ja/Nein-Wert",
          fnReturnsMultipleValues:
            "Der Ausdruck liefert mehrfache Ergebnisse zurück",
          fnReturnsSingleValue:
            "Der Ausdruck liefert nur ein einzelnes Ergebnis zurück",
          fnReturnTypeMismatch:
            'Die Ausdrücke für "dann" und "sonst" liefern unterschiedliche Datentypen zurück',
          fnUndefinedAggregation: "Die Aggregation ist nicht definiert",
          fnUndefinedFunction: "Die Funktion ist nicht definiert",
          fnUnknowError: "Es ist ein unerwarteter Fehler aufgetreten",
          fnUnsupportedAggregation:
            "Diese Aggregation ist für diesen Datentypen nicht möglich",
          font: "Schriftart",
          fontLarge: "Groß",
          fontNormal: "Normal",
          fontSmall: "Klein",
          fontStyle: "Schriftstil",
          fontVeryLarge: "Sehr groß",
          footer: "Fußzeile",
          forgotPassword: "Passwort vergessen?",
          forgotPasswordSuccess:
            "Um Ihr Passwort zurückzusetzen, schauen Sie bitte in Ihr E-Mail-Postfach",
          form: "Formular",
          format: "Format",
          formView: "Tabelle und Formular",
          forum: "Forum",
          freetext: "Beschreibung",
          fromDate: "Von",
          fromDropbox: "Von Dropbox",
          fromICloudDrive: "Von iCloud Drive",
          fromLocal: "Vom Gerät",
          fullName: "Vollständiger Name",
          function: "Funktion",
          gantt: "GANTT",
          generate: "Generieren",
          getHelp: "Hilfe",
          globalCode: "Globale Funktionsdefinitionen",
          globalSearch: "Globale Suche",
          globalVariableInMemory: "Globale Variable im Speicher (Browser)",
          gotoFirst: "Gehe zu Erstem",
          gotoLast: "Gehe zum Letzten",
          gotoNext: "Gehe zum Nächsten",
          gotoPrev: "Gehe zum Vorherigen",
          gotoToday: "Heute",
          gradient: "Verlauf",
          grey: "Grau",
          grouped: "Gruppiert",
          grouping: "Gruppierung",
          groupingSeparatorLabel: "Gruppentrennzeichen",
          hasIndex: "Indexiert",
          haveAnAccount: "Sie haben bereits einen Account?",
          header: "Kopfzeile",
          headFoot: "Kopfzeile / Fußzeile",
          headline: "Überschrift",
          heartNinox: "Ninox bewerten",
          height: "Höhe",
          helloGood$: "Hallo, guten $!",
          help: "Hilfe",
          hidden: "Versteckt",
          hideColumn: "Spalte ausblenden",
          hintAddFields: "Erstellen Sie einige Felder",
          hintCreateDatabase: "Erstellen Sie eine neue Datenbank",
          hintCreateTable: "Erstellen Sie eine neue Tabelle",
          hintEnterTableName: "Geben Sie einen Namen ein",
          history: "Änderungshistorie",
          home: "Startseite",
          horizontalPosition: "Horizontale Position",
          hours: "Stunden",
          icloudDrive: "iCloud Drive",
          icon: "Symbol",
          iconWithout: "(ohne)",
          id: "Nr",
          image: "Bild",
          imageSize: "Größe",
          imageSizeLarge: "Groß",
          imageSizeMedium: "Mittel",
          imageSizeOriginal: "Originalgröße",
          imageSizeSmall: "Klein",
          import: "Importieren",
          importAmbiguous: "Mehrdeutige Zeilen",
          importAmbiguousSkip: "Überspringen",
          importAmbiguousUpdateAll: "Alle aktualisieren",
          importArchive: "Archiv importieren",
          importAvailableFields: "Verfügbare Felder",
          importChooseCSVFile: "CSV-Datei importieren...",
          importChooseDatabase:
            "Bitte wählen Sie eine Datenbank aus, in die die Daten importiert werden sollen.",
          importChooseFile: "Datei importieren...",
          importChooseURL: "Von einer URL importieren",
          importContacts: "Meine Kontakte importieren",
          importCreateTable: "In eine neue Tabelle importieren",
          importData: "Daten importieren",
          importDatabase: "Datenbank importieren",
          importDatabaseName: "Geben Sie einen Namen für die Datenbank ein",
          importDescription:
            "Sie können Text- und CSV-Dateien importieren, indem Sie diese aus einer anderen App (z. B. Mail) öffnen mit Ninox.",
          importEnterURL:
            "Bitte geben Sie die URL ein, von der die Daten importiert werden sollen",
          importExecute: "Daten jetzt importieren",
          importFailed: "Der Import ist fehlgeschlagen",
          importFieldMode: "Modus",
          importFieldModeKeyExact: "Schlüssel",
          importFieldModeUpdateAlways: "Alle aktualisieren",
          importFieldModeUpdateEmpty: "Nur leere aktualisieren",
          importFields: "Zu importierende Felder",
          importFromAnotherDatabase: "Aus einer anderen Datenbank importieren",
          importHeader: "Erste Zeile ist Kopfzeile",
          importIntoField: "In dieses Feld importieren",
          importMode: "Welche Daten?",
          importModeAll: "Alle",
          importModeInvalid:
            "Für eine Spalte wurde ein ungültiger Import-Modus ausgewählt",
          importModeNew: "Nur neue Zeilen hinzufügen",
          importModeNotSpecified:
            "Für eine Spalte wurde kein Import-Modus ausgewählt",
          importModeUpdate: "Nur vorhandene Zeilen erneuern",
          importNoDatabasesDefined:
            "Sie haben bisher keine Datenbank angelegt, daher können die Daten nicht importiert werden.",
          importNoDataFound: "Die Datei enthält keine Daten.",
          importPreview: "Vorschau der durchzuführenden Änderungen",
          importSelectFile: "Wählen Sie eine CSV-Datei aus",
          importSourceSettings: "Datenquelle",
          importSuccessful: "Der Import war erfolgreich",
          importTable: "In welche Tabelle soll importiert werden?",
          importTargetSettings: "Importeinstellungen",
          importTooManyFilesSelected:
            "Sie können nur eine einzelne Datei importieren.",
          include: "Einschließlich",
          includeData: "Datensätze kopieren",
          includeDataShort: "Daten",
          includeFiles: "Dateien kopieren",
          includeFilesShort: "Dateien",
          installTemplate: "Vorlage installieren",
          installTemplateOkay: "Jetzt installieren",
          invalidBoolean: "Ungültiger Ja / Nein-Wert",
          invalidChoice: "Ungültige Auswahl",
          invalidCredentials: "E-Mail oder Passwort - da stimmt was nicht.",
          invalidDatabaseName:
            "Der Datenbankname ist ungültig. Er darf keine Sonderzeichen enthalten.",
          invalidEncoding:
            "Die Datei konnte nicht gelesen werden. Bitte wählen Sie einen anderen Zeichensatz.",
          invalidFileName: "Ungültiger Dateiname",
          invalidFunction: "Die Formel ist ungültig",
          invalidNumber: "Ungültige Zahl",
          invalidNumberMax: "Der Wert ist zu groß",
          invalidNumberMin: "Der Wert ist zu klein",
          invalidPassword:
            "Das Passwort ist ungültig. Es muss aus wenigstens 6 Zeichen bestehen.",
          invalidRequired: "Bitte geben Sie einen Wert ein",
          invalidRoleCaption: "Der Name der Rolle ist ungültig",
          invalidRoleRoles: "Die angegebenen Rollen sind ungültig.",
          invalidString: "Kein String",
          invalidStringMaxLength:
            "Der Text ist zu lang. Maximale Anzahl an Zeichen: ",
          invalidStringMinLength:
            "Der Text ist zu kurz. Minimale Anzahl an Zeichen: ",
          invalidStringREMatch:
            "Der Wert entspricht nicht dem regulären Ausdruck.",
          invalidTeamName: "Bitte geben Sie einen gültigen Team-Namen an.",
          invalidUserEMail: "Die E-Mail-Adresse des Benutzers ist ungültig.",
          invalidUserFirstName: "Der Vorname des Benutzers ist ungültig.",
          invalidUserId: "Die Benutzer-ID ist ungültig.",
          invalidUserLastName: "Der Nachname des Benutzers ist ungültig.",
          invalidUserName: "Der Benutzername ist ungültig.",
          invalidUserRoles: "Die Benutzer-Rollen sind ungültig.",
          invitation: "Einladung",
          invitationLanguage: "Sprache der E-Mail-Einladung",
          invitations: "Einladungen",
          invite: "Einladen",
          inviteCode: "Einladungscode",
          invitedAt: "Eingeladen am",
          invitedFrom: "Eingeladen von",
          inviteHead: "Team-Mitglied einladen",
          italic: "Kursiv",
          joinCommunity: "Die Ninox Community",
          justify: "Blocksatz",
          kanban: "Kanban",
          kanbanRecommend:
            "Kanban-Dagramme funktionieren am Besten mit Auswahlfeldern:",
          labelPosition: "Beschriftungsposition",
          language: "Sprache",
          later: "Später",
          latestChanges: "Letzte Änderungen",
          latitude: "Breitengrad",
          layoutElement: "Gestaltungselement",
          learningResources: "Lernmaterialien",
          leaveTeam: "Team verlassen",
          leaveTeamConfirm:
            "Wollen Sie wirklich aus diesem Team austreten? Sie müssen danach einen Team-Administrator kontaktieren, um dem Team wieder beitreten zu können.",
          leaveThisTeam: "Dieses Team verlassen",
          left: "Links",
          licensed: "lizensiert",
          licensedTo: "für",
          licenseExpires: "bis zum",
          licenseInvalid:
            "Die Lizenz zur Nutzung von Ninox ist abgelaufen. Bitte erneuern Sie die Lizenz.",
          lineHeight: "Zeilenabstand",
          linkConfig: "Tabellenverknüpfung",
          linked: "verknüpft mit",
          linkFrom: "Rückverknüpfung",
          linkPreview: "Vorschau anzeigen",
          linkTo: "Verknüpfung",
          list: "Liste",
          localization: "Lokalisierung",
          LocalizationAddLocaleColumnHeader: "+ Locale hinzufügen",
          LocalizationDefaultColumnHeader: "Standard",
          LocalizationModuleColumnHeader: "Modul",
          logic: "Logik",
          login: "Einloggen",
          login2: "Einloggen",
          loginAttempts:
            "Zuviele erfolglose Login-Versuche. Wir haben Ihr Konto für 24 h gesperrt. Bitte kontaktieren Sie Ihren Administrator, um die Sperre früher aufzuheben.",
          loginWithGoogle: "Weiter mit Google",
          logout: "Ausloggen",
          longitude: "Längengrad",
          manageBackups: "Backups verwalten",
          manualBackups: "Manuelle Backups",
          margins: "Seitenränder",
          matchPasswords: "Passwörter stimmen nicht überein",
          maxUsers: "Bis zu $1 Team-Mitglieder.",
          medium: "Mittel",
          meetNinox: "Veranstaltungen in Ihrer Nähe",
          messages: "Nachrichten",
          minLength: "eine Mindestlänge von 8 Zeichen",
          missingUserName: "Die Angabe des Benutzernamens ist erforderlich.",
          modeText: "Text",
          modeVisual: "Visuell",
          modified: "bearbeitet",
          modifiedAt: "am",
          modifiedDate: "Zuletzt geändert am",
          modifiedUser: "Zuletzt geändert von",
          month: "Monat",
          month_apr: "April",
          month_aug: "August",
          month_dec: "Dezember",
          month_feb: "Februar",
          month_jan: "Januar",
          month_jul: "Juli",
          month_jun: "Juni",
          month_mar: "März",
          month_may: "Mai",
          month_nov: "November",
          month_oct: "Oktober",
          month_sep: "September",
          monthly: "Monatlich",
          months: "Monate",
          morning: "Morgen",
          moveToBack: "Nach hinten",
          moveToFront: "Nach vorne",
          multipleChoiceDynamic: "Mehrfachauswahl (dynamisch)",
          mustAgreeTerms:
            "Sie müssen die AGB akzeptieren, um Ninox Cloud nutzen zu können.",
          myDatabases: "Meine Datenbanken",
          name: "Name",
          new: "Neu",
          newField: "Neues Feld",
          newOldPassword: "Sie können kein altes Passwort verwenden.",
          newPassword: "Geben Sie das neue Passwort ein",
          newReport: "Neues Layout",
          newTeam: "Neues Team erstellen",
          newView: "Neue Ansicht",
          next: "Weiter",
          nextWebinar: "Nächstes Webinar",
          night: "Abend",
          ninoxCloudSync: "Ninox Cloud Synchronisation",
          ninoxForTeams: "Ninox im Internet",
          no: "Nein",
          noCalendarAccess:
            "Bitte geben Sie Ninox in den Systemeinstellungen Zugriff auf den Kalender.",
          noCalendarEntries: "Keine Einträge",
          noColor: "Ohne Farbe",
          nodeNotFound:
            "Der Datensatz wurde nicht gefunden (ggf. wurde er gelöscht).",
          noGrouping: "Gruppierung aufheben",
          none: "(keine)",
          noNeedToResetPassword: "Passwort doch nicht zurücksetzen?",
          noProblems: "Keine Probleme gefunden.",
          notAuthorized:
            "Sie haben nicht die erforderlichen Rechte, um diese Aktion durchzuführen",
          notConnected: "Es besteht keine Verbindung zum Internet.",
          noTeamName: "Bitte wählen Sie einen gültigen Team-Namen.",
          noTemplate: "Eine leere Datenbank erstellen.",
          notEmpty: "(nicht leer)",
          notLoggedIn: "Nicht eingeloggt",
          numberFormat: "Zahlenformat",
          numberFormatDigits: "Dezimalstellen",
          numberFormatGroup: "Tausendertrennzeichen",
          numberFormatPrefix: "Präfix",
          numberFormatUnit: "Einheit",
          numberMax: "Maximum",
          numberMin: "Minimum",
          numberOfEmployees: "Mitarbeiterzahl",
          numberValue: "Numerischer Wert",
          of: "von",
          okay: "OK",
          oldPassword: "Bitte geben Sie ihr aktuelles Passwort ein",
          onClick: "Beim Anklicken",
          oneAdminRequired:
            "Dieser Benutzer kann das Team nicht verlassen. Es muss mindestens einen weiteren Administrator im Team geben.",
          oneDay: "1 Tag",
          onlineHelp: "Handbuch",
          op_abs: "Betrag",
          op_age: "Alter",
          op_and: "und",
          op_contains: "enthält",
          op_date: "Datum",
          op_day: "Tag",
          op_days: "Tage",
          op_duration: "Dauer",
          op_end: "Ende",
          op_false: "Nein",
          op_format: "formatieren",
          op_if: "wenn / dann / sonst",
          op_if_else: "sonst",
          op_if_if: "wenn",
          op_if_then: "dann",
          op_index: "index",
          op_like: "ungefähr wie",
          op_lower: "klein",
          op_lpad: "links auffüllen",
          op_month: "Monat",
          op_not: "nicht",
          op_now: "Jetzt",
          op_number: "als Zahl",
          op_or: "oder",
          op_round: "runden",
          op_rpad: "rechts auffülen",
          op_sign: "Vorzeichen",
          op_start: "Start",
          op_string: "Text",
          op_substr: "Teilzeichenkette",
          op_text: "als Text",
          op_today: "Heute",
          op_trim: "ohne Leerzeichen",
          op_true: "Ja",
          op_upper: "groß",
          op_week: "Woche",
          op_weekday: "Wochentag",
          op_workdays: "Arbeitstage",
          op_year: "Jahr",
          op_yearmonth: "Jahr/Monat",
          op_yearquater: "Quartal",
          op_yearweek: "Jahr/Woche",
          openIn: "Öffnen in",
          operationInProgress: "Der angeforderte Vorgang ist bereits im Gange.",
          operator: "Operator",
          options: "Optionen",
          or: "oder",
          original: "Original",
          otherOptions: "Andere Optionen",
          padding: "Innenabstand",
          page: "Seite",
          pageBody: "Fließtext",
          pageFoot: "Fußzeile",
          pageHead: "Kopfzeile",
          pages: "Seiten",
          palette: "Palette",
          paperFormat: "Papierformat",
          passHint: "Muss bestehen aus",
          passHintCase: "✓ Groß- und Kleinbuchstaben",
          passHintChar: "✓ 1 Sonderzeichen",
          passHintLen: "✓ 8 oder mehr Zeichen",
          passHintNum: "✓ 1 Ziffer",
          password: "Passwort",
          passwordContainNumber: "eine Zahl, ",
          passwordExpired:
            "Ihr Passwort ist abgelaufen. Bitte setzen Sie es zurück.",
          passwordMismatch:
            "Anscheinend haben Sie sich bei einem der Passwörter vertippt.",
          passwordRestrict:
            "Das Passwort muss folgende Voraussetzungen erfüllen",
          passwordSpecificLength: "mindestens 8 Zeichen",
          paste: "Einsetzen",
          perMonth: "pro Monat",
          perRecordInMemory: "Pro Datensatz im Speicher (Browser)",
          perRecordInServer: "Pro Datensatz im Server (Standard)",
          perYear: "pro Jahr",
          photo: "Foto",
          photoLibrary: "Fotoarchiv",
          pickGroupColumn: "Bitte wählen Sie eine Spalte für die Gruppierung.",
          placeholder: "Platzhalter",
          planCurrent: "Aktuelles Abo",
          planCurrentCovers: "Sie haben ein Abo für $1 Benutzer.",
          planExpired: "Ihr Abonnement ist abgelaufen.",
          planExpiredMember:
            "Das Abonnement für dieses Team ist abgelaufen. Bitte kontaktieren Sie den Eigentümer des Teams ($1), damit er ein Abonnement erwirbt.",
          planGetNow: "Erwerben Sie jetzt Ninox Cloud für $1 Benutzer.",
          planGetNowCTA: "Abo verlängern",
          planNone: "Das Abo ist abgelaufen.",
          planOverused:
            "Ihr Abonnement deckt nicht alle Ihre Team-Mitglieder ab.",
          planOverusedMember:
            "Das Abonnement für dieses Team deckt nicht alle Team-Mitglieder ab. Bitte kontaktieren Sie den Eigentümer: $1.",
          planPurchaseOther: "Dieses Abo wurde mit $1 gekauft.",
          planRenewsAt: "Das Abo wird verlängert am: $1.",
          planSave: "Spare",
          planTerms:
            'Dieses Abo bietet Ihnen und Ihren Team-Mitgliedern Zugang zu Ninox Cloud von allen Geräten mit der Ninox App und mit dem Web-Browser. Das Abo wird automatisch verlängert, wenn die automatische Verlängerung nicht spätestens 24  Stunden vor Ablauf der laufenden Periode abgeschaltet wird. Ihr Konto wird innerhalb von 24 Stunden vor der Verlängerung belastet. Abos können vom Benutzer in den Konteinstellungen verwaltet und Verlängerungen abgeschaltet werden. Jeglicher ungenutzter kostenfreier Testzeitraum, sofern angeboten, verfällt mit dem Kauf des Abos. Mit dem Kauf erklären Sie sich mit der <a href="https://ninoxdb.de/ninox/en/privacy.html">Datenschutzrichtline</a> und den <a href="https://ninox.com/ninox/de/terms.html">Nutzungsbedingungen</a> einverstanden.',
          planTrial: "Sie haben ein gratis Test-Abo.",
          planTrialExpiresAt: "Der Test-Abo läuft ab am",
          planUnknown:
            "Leider konnten wir Ihr aktuelles Abo nicht prüfen. Bitte kontaktieren Sie support@ninox.com.",
          planUsage: "Aktuelle Nutzung",
          planUsageCovered: "$1 Benutzer sind durch andere Abos abgedeckt.",
          planUsageInfo: "Sie haben $1 Mitglieder in $2 Teams.",
          planUsageRequired: "$1 Benutzer müssen durch Ihr Abo abgedeckt sein.",
          planWrongUser:
            "Sie haben bereits ein Abo mit einer anderen Kennung abgeschlossen. Bitte loggen Sie sich mit folgender E-Mail an: $1",
          pleaseConfirmYourEmail: "Bitte bestätigen Sie Ihre E-Mail-Adresse",
          position: "Position",
          postCommentButton: "Absenden",
          postCommentLabel: "Kommentieren",
          presets: "Voreinstellungen",
          preview: "Vorschau",
          print: "Drucken",
          printAll: "Alle",
          printAttachments: "Bildanhänge mitdrucken",
          printFontSize: "Schriftgröße",
          printImages: "Bilder drucken",
          printNodeSettings: "Druck einzelner Datenstätze",
          printNow: "Jetzt drucken",
          printOne: "Nur dieser",
          printPDF: "PDF drucken",
          printRendering: "Druckvorschau",
          printTableSettings: "Tabellendruck",
          printView: "Druckvorschau",
          private: "Privat",
          problemsLoggingIn: "Sie können sich nicht einloggen?",
          processBackground: "Prozesse im Hintergrund:",
          processDatabase: "Datenbank",
          processHeadline: "Laufende Prozesse",
          processLogs: "Protokolle",
          processName: "Prozess",
          processRefresh: "Aktualisieren",
          processStatus: "Status",
          processSubline:
            "Hier sehen Sie alle laufenden Prozesse (falls vorhanden). Über „Aktualisieren“ erhalten Sie ein Update des Status.",
          processTimeStarted: "Beginn",
          processTimeStopped: "Ende",
          processUser: "Anwender",
          productPurchased: "Installiert",
          profileImage: "Profilbild",
          protectDatabase: "Diese Datenbank schützen",
          purchaseNow: "Jetzt kaufen",
          query: "Abfragen",
          queryExecuting: "Die Abfrage wird ausgeführt...",
          radius: "Radius",
          readableIf: "Lesbar wenn",
          readRoles: "Lesen darf",
          rebuildThumbnails: "Vorschaubilder neu generieren",
          rebuildThumbnailsConfirm:
            "Wollen Sie alle Vorschaubilder neu generieren? Diese Aktion wird einige Zeit benötigen.",
          red: "Rot",
          referenceLabel1N: "(1 : N)",
          referenceLabelFrom: "Verknüpfung von",
          referenceLabelN1: "(N : 1)",
          referenceLabelTo: "mit",
          refFinderSearch: "Bitte geben Sie einen Suchbegriff ein:",
          refFinderSearchCaption: "Suche in",
          register: "Benutzerkonto anlegen",
          registerNewsletter: "Ich möchte über Neuigkeiten informiert werden.",
          reindex: "Index neu aufbauen",
          reIndexFiles: "Dateien reindizieren",
          reIndexFilesConfirm:
            "Wollen Sie wirklich Dateien neu indizieren? Dieser Vorgang kann einige Zeit in Anspruch nehmen.",
          reloginHeader: "Ihre Sitzung wurde beendet",
          reloginMessage: "Bitte loggen Sie sich erneut ein, um fortzufahren.",
          remove: "Löschen",
          removeAllChoosen: "Ausgewählte Zeilen löschen",
          removed: "gelöscht",
          removeField: "Feld löschen",
          removeFieldConfirm:
            "Wollen Sie dieses Datenfeld endgültig löschen? Wenn sie es löschen, gehen damit verbundene Daten verloren.",
          removeFile: "Datei löschen",
          removeFromTeam: "Aus dem Team entfernen",
          removeFromTeamConfirm:
            "Wollen Sie dieses Mitglied wirklich aus dem Team entfernen?",
          removeFromTeamHead: "Mitglied aus dem Team entfernen",
          removeFromTeamOkay: "Entfernen",
          removeNRecords: "$ Datensätze löschen",
          removeRecord: "Datensatz löschen",
          removeReference: "Verknüpfung löschen",
          removeTab: "Karteireiter auflösen",
          removeTable: "Tabelle löschen",
          removeTeam: "Dieses Team löschen",
          removeTeamConfirm:
            "Wollen Sie dieses Team endgültig löschen? Diese Operation kann nicht wieder rückgängig gemacht werden. Alle Daten gehen verloren.",
          removeView: "Ansicht löschen",
          rename: "Umbenennen",
          renameDatabase: "Datenbank umbenennen...",
          renameDatabaseOkay: "Umbenennen",
          renameDatabaseToName: "Geben Sie einen Namen für die Datenbank ein",
          renameView: "Ansicht umbenennen",
          reorganizeDatabase: "Reorganisieren",
          repeat: "Wiederholen",
          repeatPassword: "Wiederholen Sie das Passwort",
          required: "Eingabe erforderlich",
          resend: "Erneut senden",
          resendInvitation: "Einladung erneut senden",
          resendVerificationMail: "Bestätigungsmail erneut senden",
          resetPassword: "Passwort zurücksetzen",
          resetSchema: "Änderungen verwerfen",
          resetSync: "Synchronisation zurücksetzen",
          restoreAppStoreTransactions: "Meine Einkäufe wiederherstellen",
          restoreBackup: "Wiederherstellen",
          result: "Ergebnis",
          resyncCloudDatabases: "iCloud Synchronisation",
          right: "Rechts",
          role_editor: "Schreibzugriff",
          roleCaption: "Rollenname",
          roleNotFound: "Die Rolle wurde nicht gefunden.",
          roles: "Berechtigungen",
          rolesExport: "Daten exportieren",
          rolesImport: "Daten importieren",
          rolesMassDataUpdate: "Massendatenänderungen",
          rolesOpen: "Datenbank öffnen",
          rolesPrint: "Daten ausdrucken",
          runConsole: "Ausführen",
          save: "Sichern",
          saveArchiveAs: "Archiv sichern unter...",
          saveAs: "Sichern als",
          saveDataModelChanges: "Änderungen am Datenmodell sichern",
          saveImage: "Grafik speichern",
          saveProfile: "Profil speichern",
          saveReport: "Layout sichern",
          saveSchema: "Änderungen sichern",
          saveViewAs: "Ansicht sichern als...",
          schemaDirty: "Sie haben Änderungen an der Applikation vorgenommen.",
          schemaSaveRequired:
            "Sie müssen die Änderungen an der Applikation sichern, bevor Sie einen Datensatz erstellen können.",
          search: "Suche",
          searchIn$: "Suchen in $",
          security: "Sicherheit",
          select: "Auswählen",
          selectAll: "Alles auswählen",
          sendInvitation: "Einladung senden",
          sendMail: "Email senden",
          sent: "Gesendet ",
          sevenDays: "7 Tage",
          share: "Freigeben",
          shareFile: "Diese Datei freigeben",
          shareURL: "Öffentliche URL",
          shareView: "Diese Ansicht freigeben",
          sharing: "Freigaben",
          showAll: "Alle Zeilen anzeigen",
          showAs: "Anzeigen als",
          showColumn: "Spalte einblenden",
          showExtendedOptions: "Weitere Optionen",
          showHideColumns: "Spalten einblenden...",
          showLess: "Weniger",
          showMore: "Mehr anzeigen",
          showOnlyChoosen: "Nur ausgewählte anzeigen",
          showOnlyWorkHours: "Nur Arbeitszeiten",
          signature: "Unterschrift",
          signIn: "Einloggen",
          signinHead: "Bei Ninox einloggen",
          signup: "Registrieren",
          signUpBusinessMessage:
            "Als Geschäftskunde werden Sie von unserem Customer Success-Team persönlich betreut.",
          signupCreateTeam: "Einloggen und ein Team erstellen",
          signupFree: "Kostenlos anmelden",
          signupHead: "Ninox Anmeldung",
          signUpHeader1_1: "Wie möchten Sie",
          signUpHeader1_2: "Ninox verwenden?",
          signUpHeader2: "Welches Benutzerkonto wollen Sie benutzen?",
          signUpHeader3: "Bitte vervollständigen Sie folgende Informationen",
          signUpNewsletter:
            "Halten Sie mich auf dem Laufenden mit den neuesten Ninox-Nachrichten.",
          signupNewUser: "Als neuer Benutzer registrieren",
          signUpPrivacyPolicy: "Datenschutz",
          signupWithGoogle: "Weiter mit Google",
          size: "Größe",
          solid: "Einfach",
          sort: "Sortieren",
          sortAscending: "Aufsteigend",
          sortDescending: "Absteigend",
          sorting: "Sortierung",
          space: "Platzhalter",
          ssoErrorCta: "Erneut versuchen",
          ssoErrorHeader: "Da hat etwas nicht geklappt",
          ssoErrorMessage:
            "Da klappt etwas nicht. Wir können Sie im Moment nicht einloggen.",
          ssoErrorSupport: "Können Sie sich immer noch nicht anmelden?",
          ssoErrorSupportCta:
            "Sie können sich immer noch nicht einloggen? Bitte kontaktieren Sie unseren Support.",
          ssoLogin: "SSO Login",
          ssoLogoutHeader: "Sie haben sich erfolgreich ausgeloggt.",
          ssoLogoutMessage:
            "Bitte loggen Sie sich erneut ein, um fortzufahren.",
          startColor: "Anfangsfarbe",
          startsWith: "Beginnt mit",
          startTrial: "Ninox starten",
          staticImage: "Statisches Bild",
          staticImagePhoto: "Statisches Bild (Foto)",
          stayWithPlan: "Bei diesem Abo bleiben",
          storageLocation: "Speicherort",
          storeOnICloudDrive: "In iCloud Drive sichern",
          stretch: "Strecken",
          stringLPad: "Von links auffüllen mit",
          stringMaxLength: "Maximale Länge",
          stringMinLength: "Minimale Länge",
          stringMultiline: "Mehrzeilig",
          stringRPad: "Von rechts auffüllen mit",
          style: "Stil",
          subTable: "Untertabelle",
          supportedBrowsers: "Unterstützte Browser",
          supportTicket: "Support-Anfrage",
          switchAccount: "Benutzer wechseln",
          switchLayout: "Layout wechseln",
          switchTeam: "Team wählen",
          switchToPlan: "Zu diesem Abo wechseln",
          switchToPrintView: "Ansicht wechseln",
          syncFilesFailed: "fehlgeschlagen",
          syncFilesToDownload: "Herunterzuladende Dateien",
          syncFilesToUpload: "Hochzuladende Dateien",
          syncNow: "Jetzt synchronisieren",
          syncProblemCheck: "Synchronisationsprobleme prüfen",
          syncProblems: "Synchronisations-Probleme",
          syncSeq: "Synchronisationssequenznummer",
          syncState: "Synchronisationsstatus",
          tab: "Karteireiter",
          table: "Tabelle",
          tableCaption: "Tabellenname",
          tableReference: "Tabellenverknüpfung",
          tables: "Tabellen",
          tableView: "Tabelle",
          takePhoto: "Foto aufnehmen",
          targetTable: "Ziel",
          teamMember: "Team-Mitglied",
          teamMembers: "Team-Mitglieder",
          teamName: "Team-Name",
          teamSettings: "Team-Einstellungen",
          templateRequired: "Vorlage erforderlich",
          templateRequiredContacts:
            'Um Kontakte zu importieren, benötigen Sie die Tabellen-Vorlage "Kontaktverwaltung"',
          templateRequiredOkay: "Vorlage installieren...",
          templates: "Vorlagen",
          termsDisclamer:
            "Mit der Erstellung des Kontos stimmen Sie den $Allgemeinen Geschäftsbedingungen$ zu.",
          termsOfService: "Allgemeine Geschäftsbedingungen",
          text: "Textbox",
          textAlign: "Textausrichtung",
          textAndDate: "Text / Datum",
          textColor: "Textfarbe",
          thanksCloud: "Danke, dass Sie Ninox Cloud nutzen!",
          thick: "Dick",
          thin: "Dünn",
          thisFieldsAreRequired: "Bitte füllen Sie das Feld aus",
          time: "Uhrzeit",
          timeFmt: "Uhrzeitformat",
          timestampDefaultNow: "Jetzt",
          to: "an",
          toDate: "Bis",
          today: "heute",
          toggleSelection: "Auswahl umkehren",
          tooltip: "Hinweis",
          top: "Oben",
          transparent: "Transparent",
          triggerAfterCreate: "Bei neuem Datensatz folgendes Skript ausführen",
          triggerAfterCreateShort: "Beim Erstellen",
          triggerAfterOpen:
            "Nach dem Öffnen der Datenbank folgendes Skript ausführen",
          triggerAfterUpdate: "Nach Änderungen folgendes Skript ausführen",
          triggerAfterUpdateShort: "Bei Änderung",
          trim: "Leerzeichen entfernen",
          true: "WAHR",
          tutorialVideos: "Tutorial-Videos",
          type_appointment: "Termin",
          type_boolean: "Ja / Nein",
          type_br: "Zeilenumbruch",
          type_button: "Button",
          type_chart: "Diagramm",
          type_choice: "Auswahl",
          type_color: "Farbe",
          type_custom: "HTML-Steuerelement",
          type_date: "Datum",
          type_datx: "Datum (new)",
          type_email: "E-Mail",
          type_file: "Bild",
          type_fn: "Berechnung",
          type_head: "Überschrift",
          type_html: "Text (formatiert)",
          type_icon: "Symbol",
          type_link: "Internet-Adresse",
          type_list: "Untertabelle",
          type_location: "Standort",
          type_multi: "Mehrfachauswahl",
          type_number: "Zahl",
          type_object: "Objekt",
          type_phone: "Telefon",
          type_ref: "Tabellenverknüpfung",
          type_rev: "Tabellenverknüpfung",
          type_signature: "Unterschrift",
          type_space: "Platzhalter",
          type_string: "Text",
          type_string_multiline: "Text (mehrzeilig)",
          type_tab: "Karteireiter",
          type_text: "Freitext",
          type_time: "Uhrzeit",
          type_timeinterval: "Zeitdauer",
          type_timestamp: "Datum + Uhrzeit",
          type_user: "Benutzer",
          type_view: "Ansicht",
          typeExportTemplates: "Exportvorlagen",
          typeMissmatchHtml: "Typenkonflikt, muss dieses Feld gibt eine html",
          typeMissmatchImage:
            "Typenkonflikt, muss dieses Feld ein Bild zurückgeben",
          unknowError: "Es ist ein unerwarteter Fehler aufgetreten.",
          unknown: "Unbekannt",
          unknownError: "Unbekannter Fehler",
          unlink: "Verknüpfung aufheben",
          unlinked: "Verknüpfung aufgehoben",
          unlockDatabase: "Diese Datenbank entsperren",
          unnamed: "(unbenannt)",
          unprotectDatabase: "Den Schutz dieser Datenbank aufheben",
          unsavedChanges:
            "Folgende Änderungen konnten nicht gespeichert werden.",
          updateAllRecords: "Alle Datensätze aktualisieren",
          updateAssistant: "Massendatenänderung",
          updateAssistantExecute: "Ausführen",
          updateAssistantFormula: "Folgende Abfrage ausführen:",
          updateAssistantResults: "Abfrageergebnis / durchgeführte Änderungen",
          updated: "geändert auf",
          updateExpressionNotAllowed:
            "Diese Funktion darf keine Datenänderungen vornehmen.",
          updateModeAssignFunction: "Berechneten Wert zuweisen",
          updateModeAssignNull: "Auf leer setzen",
          updateModeAssignValue: "Festen Wert zuweisen",
          updateModeDontChange: "Nicht ändern",
          updateSelectedRecords: "Nur ausgewählte Datensätze aktualisieren",
          updateVisibleRecords: "Alle sichtbaren Datensätze aktualisieren",
          upgradePlan: "Abo verwalten",
          upgradeToPremium: "Upgrade",
          upgradeYourSubscription: "Ihr Abo ist abgelaufen",
          uploadBackgroundFile: "Hintergrundbild hochladen",
          uploadFailed: "Die Datei konnte nicht hochgeladen werden.",
          uploading: "Datei wird hochgeladen...",
          usedPassword:
            "Sie können dieses Passwort nicht verwenden, da es zuvor verwendet wurde.",
          user: "Benutzer",
          userName: "Benutzername",
          userNotFound: "Der Benutzer wurde nicht gefunden.",
          users: "Benutzer",
          useThisEmail: "Diese E-Mail Verwenden",
          uuid: "Global eindeutige ID",
          validUntil: "Gültig bis",
          value: "Wert",
          valueColor: "Farbe des dynamischen Werts ",
          valueIcon: "Symbol des dynamischen Werts",
          valueName: "Name des dynamischen Werts",
          verificationLinkSent: "Bestätigungslink geschickt an",
          verificationPending: "E-Mail-Bestätigung offen",
          verifyEmail$:
            "Bitte bestätigen Sie Ihre E-Mail-Adresse $, um weiterhin Ninox nutzen zu können. Keine E-Mail erhalten? Bitte prüfen Sie Ihren Spam-Ordner.",
          verticalPosition: "Vertikale Position",
          view: "Ansicht",
          viewAs: "Darstellen als",
          visibilityRule: "Feld nur anzeigen, wenn:",
          visibilityRuleShort: "Anzeigen wenn",
          visibleColumns: "Sichtbare Spalten",
          visibleRows: "Sichtbare Zeilen",
          webinars: "Webinare",
          week: "Woche",
          weeks: "Wochen",
          whatIsTheNewEmail: "Neue E-Mail Addresse",
          whatsnew: "Neu in dieser Version",
          whatsnew1: "Kanban-Diagramme",
          whatsnew1Body:
            "Ändern Sie Farben, Symbole und die Reihenfolge der Kanban-Bahnen mit nur einem Klick.",
          whatsnew1Title: "Verbesserte Kanban-Ansichten",
          whatsnew2: "GANTT-Diagramme",
          whatsnew2Body:
            "Ordnen Sie Elemente im Navigationsbereich per Drag & Drop neu an",
          whatsnew2Title: "Verbesserte Navigation",
          whatsnew3: "Karten / Galerieansicht",
          whatsnew3Body:
            "Verwenden Sie Pivot-Tabellen, um Ihre Daten zu analysieren.",
          whatsnew3Title: "Neue Pivot-Tabellenansicht",
          whatsnew4: "Formularansicht",
          whatsnew5: "Gestaltung von Überschriften und Freitextelementen",
          whatsnewa1: "Erstellen Sie Datenbanken von überall aus.",
          whatsnewa2: "Synchronisieren Sie Ihre Daten auf allen Geräten.",
          whatsnewa3: "Arbeiten Sie mit Ihrem Team zusammen.",
          whatsnewa4: "Gestalten Sie Drucklayouts.",
          whatsnewa5: "Erstellen Sie Formulare, um Daten einfach zu erfassen.",
          whatsnewDontShow: "Nicht mehr anzeigen",
          whatsnewFeatures: "Features",
          whatsnewHelp: "Hilfe-Center",
          whatsnewNext: "Weiter",
          whatsnewSkip: "Überspringen",
          whatsnewStart: "Los gehts!",
          whatsnewSubscribe: "Nehmen Sie an unserem Webinar teil",
          whatsnewTitle: "Ninox für Android",
          whatsnewVersion: "Version",
          width: "Breite",
          workPhone: "Telefon beruflich",
          writableIf: "Schreibbar wenn",
          writeRoles: "Schreiben darf",
          wrongPassword: "Das Passwort ist falsch.",
          wrongUserPassword: "Das Passwort oder der Benutzername ist falsch.",
          xlsExportOpen: "Herunterladen",
          xlsExportSaveAs: "Sichern unter...",
          years: "Jahre",
          yes: "Ja",
          yesterday: "gestern",
          yourAccount: "Ihr Konto",
          zapierIntegration: "Zapier-Integration",
          zoom: "Skalierung",
          dayNames: [
            "Sonntag",
            "Montag",
            "Dienstag",
            "Mittwoch",
            "Donnerstag",
            "Freitag",
            "Samstag",
          ],
          dayNamesShort: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
          monthNames: [
            "Januar",
            "Februar",
            "März",
            "April",
            "Mai",
            "Juni",
            "Juli",
            "August",
            "September",
            "Oktober",
            "November",
            "Dezember",
          ],
          agg: {
            cnt: "Anzahl",
            count: "Anzahl",
            sum: "Summe",
            avg: "Durchschnitt",
            min: "Minimum",
            max: "Maximum",
            first: "Erster",
            last: "Letzter",
            concat: "Auflisten",
            median: "Median",
            sort: "Sortieren",
            unique: "Eindeutige",
          },
          types: {
            number: "Zahl",
            string: "Text",
            string_multiline: "Text (mehrzeilig)",
            date: "Datum",
            datx: "Datum (new)",
            time: "Uhrzeit",
            timeinterval: "Zeitdauer",
            timestamp: "Datum + Uhrzeit",
            boolean: "Ja / Nein",
            choice: "Auswahl",
            multi: "Mehrfachauswahl",
            list: "Untertabelle",
            ref: "Tabellenverknüpfung",
            rev: "Tabellenverknüpfung",
            object: "Objekt",
            html: "Text (formatiert)",
            fn: "Berechnung",
            tab: "Karteireiter",
            head: "Überschrift",
            text: "Freitext",
            br: "Zeilenumbruch",
            space: "Platzhalter",
            file: "Bild",
            link: "Internet-Adresse",
            email: "E-Mail",
            phone: "Telefon",
            appointment: "Termin",
            user: "Benutzer",
            location: "Standort",
            icon: "Symbol",
            color: "Farbe",
            custom: "HTML-Steuerelement",
            button: "Button",
            signature: "Unterschrift",
            view: "Ansicht",
            chart: "Diagramm",
          },
        },
        es: {
          accountInactive:
            "La cuenta ha estado inactiva durante más de la cantidad especificada de días. Póngase en contacto con el responsable del sistema.",
          accountLocked:
            "La cuenta está bloqueada. Póngase en contacto con el responsable del sistema.",
          actionRequiresPremium:
            "Por favor, actualice a Premium para liberar esta función.",
          actions: "Acciones",
          activateSharing: "Activar compartir",
          add: "Añadir",
          addFile: "Añadir archivo",
          addRole: "Crear un nuevo rol",
          addRowCreate: "Crear registro",
          addRowFind: "Agregar registro existente",
          addRowFindCreate: " Buscar o crear registro",
          addRule: "Agregar regla",
          addTable: "Nueva tabla",
          admin: "Administración",
          advancedOptions: "Opciones avanzadas",
          agg_avg: "Media",
          agg_cnt: "Número",
          agg_concat: "Concatenar",
          agg_first: "Primer",
          agg_last: "Último",
          agg_max: "Máximo",
          agg_median: "Mediana",
          agg_min: "Mínimo",
          agg_sort: "Ordenar",
          agg_sum: "Suma",
          agg_unique: "Únicos",
          aggregation: "Agregación / Suma de columna",
          agreeTerms: "He leído y acepto los $1términos y condiciones$2.",
          all: "(todo)",
          allChangesSaved: "Todos los datos han sido guardados.",
          alreadyTrialPlan:
            "Ya estás en un plan de prueba para Ninox Cloud. Por favor, actualice su plan primero, para crear otro equipo.",
          annual: "Anual",
          anyFile: "Cualquier archivo",
          appointmentBegin: "Desde",
          appointmentEnd: "Hasta",
          apps: "Apps",
          askLater: "Pregúntame Luego",
          atColumn: "Columna",
          atLine: "Línea",
          auto: "(auto)",
          autoHeight: "Altura auto",
          autoLayout: "Crear el diseño automática",
          automatic: "Auto",
          availableColumns: "Datos disponibles",
          back: "Atrás",
          background: "Fondo",
          backgroundColor: "Color de fondo",
          backgroundFileMustBeJPEG:
            "Por favor, utilice un archivo JPEG como imagen de fondo.",
          backgrounds: "Imagen de fondo",
          billedAnnually: "facturado anualmente",
          blue: "Azul",
          border: "Borde",
          borderStyle: "Estilo del borde",
          bottom: "Fondo",
          br: "Salto de línea",
          business: "Attività commerciale",
          buyNow: "Comprar ahora",
          calculate: "Calcular",
          calculatedValue: "Cálculo",
          calendar: "Calendario",
          calendarCreateAppointmentField:
            "Create an appointment field to create calendar entries.",
          calendarOptions: "Opciones de calendario",
          calendarSyncAhead: "Meses para sincronizar",
          calendarSyncBeyond: "Meses para sincronizar más allá",
          calendarSyncEnabled: "Habilitar la sincronización del calendario",
          calendarSyncLocation: "Ubicación de almacenamiento",
          calendarWeek: "Sem.",
          calendarWorkEnd: "Termina el día de trabajo",
          calendarWorkStart: "Empieza el día de trabajo",
          cancel: "Cancelar",
          cancelInvitation: "Cancelar invitación",
          cancelInvitationConfirm: "¿Desea cancelar esta invitación?",
          cancelUpload: "Cancelar",
          canFindIt:
            " ¿Sin correo electrónico? Compruebe su carpeta de correo no deseado.",
          cannotChangeRole: "Este rol no se puede cambiar",
          cannotChangeUser: "Esta cuenta de usuario no se puede cambiar.",
          cannotConnectAppStore:
            "No se puede conectar a la tienda de aplicaciones. Por favor, inténtelo de nuevo más tarde.",
          cannotRemoveTeam: "Este equipo no puede ser eliminado",
          caption: "Nombre",
          cards: "Tarjetas",
          cascade: "Composición",
          center: "Centrar",
          changePassword: "Cambiar contraseña",
          chartBar: "Gráfico de barras",
          chartBubble: "Gráfico de burbujas",
          chartBubbleRequiresColumns:
            "Gráfico de burbujas requiere tres columnas numéricas para X, Y, radio.",
          chartDatasets: "Series de datos",
          chartDatasetsCols: "Columnas",
          chartDatasetsRows: "Filas",
          chartDoughnut: "Gráfico de anillos",
          chartLegend: "Leyenda",
          chartLine: "Gráfico de líneas",
          chartLineTension: "Suavizadas líneas",
          chartNoData:
            "Gráfico no tiene datos. Por favor, configure al menos una columna de números en la vista.",
          chartPie: "Gráfico de sectores",
          chartPolarArea: "Gráfico de área polar",
          chartRadar: "Gráfico de radar",
          chartStacked: "Gráfico apilado",
          chartType: "Tipo de gráfico",
          chartView: "Diagrama",
          chatPost: "Mensaje",
          choiceAddValue: "Añadir nuevo valor",
          choiceValues: "Lista de valores posibles",
          chooseFile: "Añadir archivo",
          choosen: "Selección",
          choosePhoto: "Añadir foto",
          chooseTeamName: "Nombre del equipo",
          chooseTemplate: "Elija una plantilla",
          chooseTypeToExport: "Seleccionar la tabla para exportar",
          clear: "Claro",
          clearBackground: "Fondo claro",
          clearChatHistory: "Borrar historial",
          clearHistory: "Borrar historial",
          clearSelection: "Anular selección",
          close: "Cerrar",
          collapseAll: "Desplegar todo",
          color: "Color",
          colorScheme: "Estilo del color",
          column: "Columna",
          commands: "Instrucciones",
          commented: "Comentado",
          comments: "Comentarios",
          company: "Azienda",
          conditionalStyling: "Estilo condicional",
          confirmClearHistory:
            "¿Quiere usted borrar el historial de todos los registros? Esta acción no se podrá deshacer.",
          confirmDropDatabase:
            "¿Está usted seguro de que quiere borrar esta base de datos? Esta acción no se podrá deshacer.",
          confirmEmail: "Por favor confirme su dirección de correo electrónico",
          confirmImportNinox:
            "Esta operación puede tener un impacto fuerte en su base de datos y no se puede deshacer. Por favor asegúrese de que tiene una copia de seguridad. Para crear una copia de seguridad, duplicar la base de datos o guardarlo como un archivo.",
          confirmInstallTemplate: "¿Quiere instalar este patrón ahora?",
          confirmReindex:
            "Esta acción puede tardar cierto tiempo, mientras tanto, otros usuarios no pueden acceder a los datos.",
          confirmRemove:
            "¿Está usted seguro de que quiere borrar este registro?",
          confirmRemoveAllChoosen:
            "¿Está usted seguro de que quiere eliminar todos los registros?",
          confirmRemoveChoiceValue:
            "Está usted seguro de que quiere borrar este valor?",
          confirmRemoveFile:
            "¿Está usted seguro de que quiere borrar este archivo?",
          confirmRemoveReference:
            "¿Está usted seguro de que quiere borrar este enlace? Esta acción no se podrá deshacer.",
          confirmRemoveTable:
            "¿Está usted seguro de que quiere borrar esta tabla? Todos los registros, archivos adjuntos y comentarios se perderán. Esta acción no se podrá deshacer.",
          confirmRemoveView: "¿Quieres eliminar este vista de tabla?",
          confirmReorganizeDatabase:
            "Reorganizar esta base de datos y configurar el dispositivo actual como propietario de la base. Cambios no sincronizadas realizadas en otros dispositivos se perderán.",
          confirmSaveReport: "¿Quieres guardar los cambios en el diseño?",
          constantValue: "Valor constante",
          constraint: "Limitaciones",
          contactOwner: "Contacto del propietario del equipo",
          contacts: "Contactos",
          contain: "Contiene",
          containsMixedCase: "un carácter en mayúscula y otro en minúscula",
          containsNumber: "un número",
          containsSpecialCharacters: "un personaje especial",
          continueCloud: "¿Te gustaría continuar usando Ninox Cloud?",
          copy: "Copiar",
          copyToCalendar: "Copiar a mi calendario",
          couldntRenameFile: "No se puede cambiar el nombre de archivo",
          country: "Nazione",
          cover: "Cubrir",
          create: "Crear",
          createApp: "Crear nueva App",
          createBackup: "Crear copia de seguridad",
          createCalendarEntry: "Crear entrada",
          createChoiceField: "Crear nuevo campo de elección",
          created: "Creado",
          createDatabase: "Nueva base de datos",
          createDatabaseFromTemplate: "Base de datos a partir de patrón",
          createDatabaseLocation: "¿Dónde quiere guardar la base de datos?",
          createDatabaseName:
            "Por favor, introduzca un nombre para la base de datos",
          createDatabaseOkay: "Crear base de datos",
          createdDate: "Creado en",
          createdUser: "Creado por",
          createField: "Crear nuevo campo de datos",
          createNewTeam: "Crear un nuevo equipo",
          createRecord: "Crear registro",
          createRecordRequiresPremium:
            "Ha creado $ registros. Por favor, actualice a Premium.",
          createReference: "Enlazar con una tabla",
          createRoles: "Create new Records",
          createTableFromTemplate: "Tabla a partir de patrón",
          createTeam: "Crear un nuevo equipo",
          createUI: "Añadir elemento de diseño",
          csvDateFormat: "Formato fecha",
          csvDateFormatLocal: "Formato local",
          csvEncoding: "Codificación",
          csvExportOpen: "Descargar",
          csvExportSaveAs: "Guardar como...",
          csvFooter: "Pie de página",
          csvHeader: "Incluir cabecera",
          csvLinefeed: "Salto de línea",
          csvNumberFormat: "Formato números",
          csvNumberFormatComma: "1.023,42",
          csvNumberFormatField: "Según configuración de campo",
          csvNumberFormatPoint: "1023.42",
          csvQuote: "Indicador de texto",
          csvSeparator: "Separador",
          csvSeparatorTab: "Tabulador",
          csvSepHeader: "Incluir definición de separadores",
          currentPlan: "Plan actual",
          custom: "Personalizado",
          cut: "Cortar",
          database: "Base de datos",
          databaseLocationCloud: "iCloud",
          databaseLocationLocal: "Local",
          databaseName: "Nombre de la base de datos",
          dataChange: "Cambio de datos",
          dataField: "Campo de datos",
          dataModel: "Modelo de datos",
          date: "fecha",
          dateCalendar: "Mostrar en el calendario",
          dateCalendarColor: "Con el color",
          dateCalendarFormat: "Mostrar como",
          dateDefaultToday: "Hoy",
          dateYearly: "Anual",
          day_fr: "Viernes",
          day_mo: "Lunes",
          day_sa: "Sábado",
          day_short_fr: "Vi",
          day_short_mo: "Lu",
          day_short_sa: "Sá",
          day_short_su: "Do",
          day_short_th: "Ju",
          day_short_tu: "Ma",
          day_short_we: "Mi",
          day_su: "Domingo",
          day_th: "Jueves",
          day_tu: "Martes",
          day_we: "Miércoles",
          days: "Días",
          daysLeft: "Días restantes",
          decimalSeparatorLabel: "Separador decimal",
          defaultAppName: "Mi App",
          defaultDateFormat: "dd/mm/yyyy",
          defaultValue: "Valor estándar",
          defineWorkHours: "Horas laborables",
          deleteRoles: "Delete Records",
          description: "Descripción",
          dontExecuteTriggers: "No ejecutar scripts",
          dontHaveAccount: "¿No tienes una cuenta?",
          dontHaveAnAccount: "¿No tienes una cuenta?",
          dontImport: "(no importar)",
          dontRepeat: "No repetir",
          download: "Descargar",
          dragColumnsHereToDefineView:
            "Arrastre los campos de datos hacia aquí para determinar qué columnas se muestran. Hasta que no defina las columnas, la vista se configura automáticamente.",
          dragFieldsHere: "Arrastre un nuevo campo hasta aquí...",
          drawing: "Dibujo",
          dropbox: "Dropbox",
          dropDatabase: "Borrar base de datos",
          dumpDatabase: "Descargar backup",
          duplicate: "Duplicar",
          duplicateDatabase: "Duplicar base de datos",
          duplicateDatabaseName:
            "Este nombre de base de datos ya existe, por favor, introduzca otro.",
          duplicateDatabaseOkay: "Duplicar",
          duplicateDatabaseToName: "Introduzca un nombre para la base de datos",
          duplicateRecord: "Duplicar el registro",
          duplicateTable: "Duplicar la tabla",
          duplicateTableName: "Nombre de tabla duplicado. Utilice otro nombre.",
          duplicateUserName: "Este nombre de usuario ya existe",
          editColumns: "Definir columnas mostradas...",
          editField: "Editar campo",
          editFields: "Editar campos",
          editTable: "Editar tabla",
          email: "Email",
          emailAddress: "Dirección de correo electrónico",
          emailAlreadyRegistered:
            "Esta dirección de correo electrónico ya está registrada.",
          emailBody: "Contenido",
          emailMissing:
            "Por favor ingrese su dirección de correo electrónico válida.",
          emailNotRegistered:
            "Lo sentimos, esta dirección de correo electrónico no está registrada.",
          emailOrUserName: "Email",
          emailSubject: "Sujeto",
          empty: "(vacío)",
          emptyLayout: "Vacío",
          emptyValue: "Vacío",
          endColor: "Color final",
          endsWith: "Termina con",
          enterQuery: "Introduzca una consulta",
          enterTableName: "Por favor, introduzca el nombre de la tabla",
          enterViewName: "Nombre de la vista",
          errorAmbiguousFieldName: "Los nombres de campo no son unívocos",
          errorAmbiguousTypeName: "Los nombres de tabla no son unívocos",
          errorCannotPostToYourself:
            "Usted no debería llevar conversación consigo mismo.",
          errorCannotUpdateReverse: "Este campo no es descriptible",
          errorConcurrentSchemaModification:
            "La aplicación ya ha sido modificada por otro usuario. Su configuración no se ha mantenido.",
          errorEndOfStringExpected: "Final esperado",
          errorExpressionExpected: "Término esperado",
          errorFailedToDeleteFile: "Un archivo no se ha podido borrar",
          errorFieldIsNoDataField:
            "La columna de la tabla no es un simple campo de datos",
          errorFieldIsNoLinkField:
            "La columna de la tabla no es un enlace de tabla",
          errorFieldNotFound: "Una columna de tabla no se ha encontrado",
          errorFieldTypeMismatch: "Los tipos de datos no son compatibles",
          errorFileNotFound: "Un archivo no se ha encontrado",
          errorGET:
            "El servidor no responde. Por favor, compruebe su conexión de Internet.",
          errorHTTPMethodUnsupported: "El método HTTP no está disponible",
          errorIdExpected: "Identificador esperado",
          errorImageConversionFailed:
            "Un archivo de imagen no se ha podido convertir",
          errorInvalidFieldName: "El nombre de campo no es válido",
          errorInvalidParameter: "Un parámetro no es válido",
          errorInvalidRequestBody:
            "El contenido de la solicitud al servidor no es válido",
          errorInvalidTypeName: "El nombre de tabla no es válido",
          errorInvalidViewCaption: "El nombre de la vista no es válida",
          errorLicenseMaxRecordsExceeded:
            "usted ha llegado al máximo de los registros permitidos con la licencia actual",
          errorMissingFieldName: "El campo no tiene nombre",
          errorMissingRequestBody:
            "La solicitud al servidor no tiene contenido",
          errorMissingRequestParameter:
            "En la solicitud al servidor falta un parámetro",
          errorMissingTypeName: "La tabla no tiene nombre",
          errorNodeNotFound: "Un registro de datos no se ha encontrado",
          errorNotAuthorized:
            "No tiene la autorización necesaria para esta acción",
          errorServerNotResponding:
            "El servidor no responde. Por favor, compruebe su conexión de red.",
          errorSymbolExpected: "Símbolo esperado",
          errorTemplateTypeUnsupported:
            "Este tipo de archivo no está disponible como patrón de exportación. Por favor, utilice archivos de Microsoft Excel.",
          errorTypeNotFound: "Una tabla no se ha encontrado",
          errorUnexpectedSymbol: "Símbolo no esperado",
          errorValidationFailed: "El valor no es válido",
          errorValueExpected: "Valor esperado",
          everybody: "todos",
          evictDatabase: "Vaciar cache",
          executeQuery: "Ejecutar consulta",
          executeTriggers: "Ejecutar scripts",
          executeUpdate: "Actualizar ahora",
          expandAll: "Expandir todo",
          expired: "Muerto",
          exportCSV: "Exportar a CSV",
          exportData: "Exportar datos",
          exportXLS: "Exportar a Excel",
          false: "falso",
          field: "Campo",
          fieldCaption: "Nombre de campo",
          fields: "Campos",
          fieldType: "Tipo de datos",
          fieldWidth: "Anchura",
          fieldWidth1Col: "1 columna",
          fieldWidth2Col: "2 columnas",
          fieldWidth3Col: "3 columnas",
          fieldWidth4Col: "4 columnas",
          fileHandling: "Manejar archivo como",
          files: "Archivos adjuntos",
          filter: "Filtro",
          FindIn$: " Buscar en $",
          fiveDays: "5 días",
          fixedHeight: "Altura fija",
          fnInvalidComparator: "Comparador no válido",
          fnInvalidExpression: "El término no es válido",
          fnInvalidNumber: "Número no válido",
          fnInvalidOperator: "Operador no válido",
          fnInvalidParameter: "Hay un paramétro no válido",
          fnInvalidReturnType: "El término devuelve un valor inadecuado",
          fnMissingParameter: "Falta un parámetro",
          fnNotABoolean: "No es un valor Sí/No",
          fnReturnsMultipleValues: "El término devuelve múltiples resultados",
          fnReturnsSingleValue: "El término sólo devuelve un único resultado",
          fnReturnTypeMismatch:
            'Los términos para "entonces" y "si no" no devuelven el mismo tipo de datos',
          fnUndefinedAggregation: "Esta agregación no está definida",
          fnUndefinedFunction: "La función no se ha definido",
          fnUnknowError: "Se ha producido un error inesperado",
          fnUnsupportedAggregation:
            "Esta agregación no es posible para este tipo de datos",
          footer: "Fila pie",
          forgotPassword: "¿Olvidaste tu contraseña?",
          forgotPasswordSuccess:
            "Para restablecer su contraseña, eche un vistazo a su buzón de correo",
          form: "Forma",
          format: "Formato",
          formView: "Tabla y forma",
          freetext: "Descripción",
          fromDate: "De",
          fromDropbox: "Dropbox",
          fromICloudDrive: "iCloud Drive",
          fromLocal: "Desde el dispositivo",
          fullName: "Nome e cognome",
          function: "Cálculo / Función",
          gantt: "GANTT",
          generate: "Generar",
          globalCode: "Definiciones globales de script",
          globalSearch: "Busqueda global",
          gotoFirst: "Ir al primer registro",
          gotoLast: "Ir al último registro",
          gotoNext: "Ir al siguiente registro",
          gotoPrev: "Ir al registro anterior",
          gotoToday: "Hoy",
          gradient: "Degradado",
          grey: "Gris",
          grouped: "Agrupado",
          grouping: "Agrupar",
          groupingSeparatorLabel: "separador de grupo",
          hasIndex: "Índice",
          haveAnAccount: "Hai già un account?",
          header: "Fila cabeza",
          headFoot: "Cabeza / Pie de página",
          headline: "Título",
          heartNinox: "¿Le gusta Ninox?",
          height: "Altura",
          help: "Ayuda",
          hidden: "Oculto",
          hideColumn: "Ocultar columna",
          hintAddFields: "Crear un par de campos de datos",
          hintCreateDatabase: "Crear una nueva base de datos",
          hintCreateTable: "Crear una nueva tabla",
          hintEnterTableName: "Enter table name",
          history: "Historial de cambios",
          home: "Página principal",
          horizontalPosition: "Posicion horizontal",
          hours: "Horas",
          icloudDrive: "iCloud Drive",
          icon: "Símbolo",
          iconWithout: "(sin)",
          id: "Nr.",
          image: "Imagen",
          imageSize: "Tamaño",
          imageSizeLarge: "Grande",
          imageSizeMedium: "Medio",
          imageSizeOriginal: "Tamaño original",
          imageSizeSmall: "Pequeño",
          import: "Importar",
          importAmbiguous: "Líneas no unívocas",
          importAmbiguousSkip: "Saltar",
          importAmbiguousUpdateAll: "Actualizar todos",
          importArchive: "Importar un archivo",
          importAvailableFields: "Campos disponibles",
          importChooseCSVFile: "Importar archivo CSV...",
          importChooseDatabase:
            "Por favor, seleccione una base de datos hacia la cual quiera importar los datos.",
          importChooseFile: "Importar archivo...",
          importChooseURL: "Importar de URL",
          importContacts: "Importar mis contactos",
          importCreateTable: "Importar hacia nueva tabla",
          importData: "Importar datos",
          importDatabase: "Importar base de datos",
          importDatabaseName: "Introduzca un nombre para la base de datos",
          importDescription:
            "Puede importar archivos de texto y CSV abriéndolos desde otra App (por ejemplo, Correo).",
          importEnterURL:
            "Por favor, introduzca la URL de la cual se importarán los datos",
          importExecute: "Importar datos ahora",
          importFailed: "La importación ha fallado",
          importFieldMode: "Modo",
          importFieldModeKeyExact: "Clave",
          importFieldModeUpdateAlways: "Actualizar todos",
          importFieldModeUpdateEmpty: "Sólo actualizar campos vacíos",
          importFields: "Campos a importar",
          importFromAnotherDatabase: "Importar desde otra base de datos",
          importHeader: "La primera línea es la cabecera",
          importIntoField: "Campo de destino",
          importMode: "¿Qué datos?",
          importModeAll: "Todos",
          importModeInvalid:
            "Para una línea se ha seleccionado un modo de importación no válido",
          importModeNew: "Sólo añadir nuevas líneas",
          importModeNotSpecified:
            "Para una línea no se ha seleccionado el modo de importación",
          importModeUpdate: "Sólo actualizar líneas existentes",
          importNoDatabasesDefined:
            "Hasta el momento no se ha creado ninguna base de datos, por lo tanto los datos no se podrán importar.",
          importNoDataFound: "El archivo no contiene datos.",
          importPreview: "Previsión de los cambios a realizar",
          importSelectFile: "Seleccione un archivo CSV",
          importSourceSettings: "Fuente de datos",
          importSuccessful: "La importación ha tenido éxito",
          importTable: "¿Hacia qué tabla quiere importar?",
          importTargetSettings: "Configuración de importaciones",
          importTooManyFilesSelected: "Sólo puede importar un único archivo.",
          include: "Incluir",
          includeData: "Incluir registros",
          includeDataShort: "Datos",
          includeFiles: "Incluir archivos",
          includeFilesShort: "Archivos",
          installTemplate: "Instalar patrón",
          installTemplateOkay: "Instalar ahora",
          invalidBoolean: "Valor Sí / No no válido",
          invalidChoice: "Selección no válida",
          invalidCredentials:
            "Correo electrónico o contraseña - algo no está bien.",
          invalidDatabaseName:
            "El nombre de la base de datos no es válido. No debe contener caracteres especiales.",
          invalidEncoding:
            "No se pudo leer el archivo. Por favor elige otra codificación.",
          invalidFileName: "Nombre de archivo inválido",
          invalidFunction: "La fórmula no es válida",
          invalidNumber: "Número no válido",
          invalidNumberMax: "El valor es demasiado alto",
          invalidNumberMin: "El valor es demasiado bajo",
          invalidPassword:
            "La contraseña no es válida. Tiene que tener al menos 6 caracteres.",
          invalidRequired: "Por favor, introduzca un valor",
          invalidRoleCaption: "El nombre del rol no es válido",
          invalidRoleRoles: "Los roles seleccionados no son válidos.",
          invalidString: "No es una cadena de caracteres",
          invalidStringMaxLength:
            "El texto es demasiado largo. Número máximo de caracteres: ",
          invalidStringMinLength:
            "El texto es demasiado corto. Número mínimo de caracteres: ",
          invalidStringREMatch:
            "El valor no se corresponde con el término regular.",
          invalidTeamName:
            "El nombre del equipo no es válido, elija uno diferente.",
          invalidUserEMail:
            "La dirección de correo electrónico del usuario no es válida.",
          invalidUserFirstName: "El nombre del usuario no es válido.",
          invalidUserId: "El identificador de usuario no es válido.",
          invalidUserLastName: "El apellido del usuario no es válido.",
          invalidUserName: "El usuario no es válido.",
          invalidUserRoles: "Los roles del usuario no son válidos.",
          invitation: "Invitación",
          invitations: "Invitaciones",
          invite: "Invitar",
          inviteCode: "Código de invitación",
          invitedAt: "Invitado a",
          invitedFrom: "Invitado de",
          inviteHead: "Invitar a un compañero de equipo",
          kanban: "Kanban",
          kanbanRecommend:
            "Kanban funciona mejor con campos de elección. Campos recomendados:",
          language: "Idioma",
          later: "Más tarde",
          latestChanges: "Últimos cambios",
          latitude: "Latitud",
          layoutElement: "Elemento de diseño",
          leaveTeam: "Salir de este equipo",
          leaveTeamConfirm: "¿De verdad quieres dejar este equipo?",
          leaveThisTeam: "Salir de este equipo",
          left: "Izquierda",
          licensed: "licenciado",
          licensedTo: "por",
          licenseExpires: "hasta",
          licenseInvalid:
            "La licencia para el uso de Ninox ha caducado. Por favor, renueve la licencia.",
          lineHeight: "Altura de la línea",
          linkConfig: "Enlace de tabla",
          linked: "Enlazado con",
          linkFrom: "Enlace desde",
          linkPreview: "Mostrar previsión",
          linkTo: "Enlace a",
          list: "Lista",
          localization: "Localización",
          LocalizationAddLocaleColumnHeader: "+ Agregar Locale",
          LocalizationDefaultColumnHeader: "Predeterminado",
          LocalizationModuleColumnHeader: "Módulo",
          logic: "Lógica",
          login: "Iniciar",
          login2: "Iniciar",
          loginAttempts:
            "Demasiados intentos de inicio de sesión fallidos. Hemos bloqueado su cuenta durante 24 h. Comuníquese con su administrador para desbloquearlo antes.",
          logout: "Cerrar sesión",
          longitude: "Longitud",
          manageBackups: "Administrar copias de seguridad",
          margins: "Márgenes de la página",
          matchPasswords: "Las contraseñas no coinciden",
          maxUsers: "Hasta $1 miembros del equipo.",
          messages: "Mensajes",
          minLength: "una longitud mínima de 8 caracteres",
          missingUserName: "Es obligatorio introducir el nombre de usuario.",
          modeText: "Texto",
          modeVisual: "Visual",
          modified: "Modificado",
          modifiedAt: "el día",
          modifiedDate: "Última modificación el día",
          modifiedUser: "Última modificación por",
          month: "Mes",
          month_apr: "Abril",
          month_aug: "Agosto",
          month_dec: "Diciembre",
          month_feb: "Febrero",
          month_jan: "Enero",
          month_jul: "Julio",
          month_jun: "Junio",
          month_mar: "Marzo",
          month_may: "Mayo",
          month_nov: "Noviembre",
          month_oct: "Octubre",
          month_sep: "Septiembre",
          monthly: "Mensual",
          months: "Meses",
          moveToBack: "Fondo",
          moveToFront: "Primer plano",
          mustAgreeTerms:
            "Debe aceptar nuestros términos y condiciones para tener acceso a Ninox Cloud.",
          myDatabases: "Mis bases de datos",
          name: "Nombre",
          new: "Nuevo",
          newField: "Crear campo",
          newOldPassword: "No puedes usar una contraseña antigua",
          newPassword: "Introduzca la nueva contraseña",
          newReport: "Crear diseño",
          newTeam: "Crear un nuevo equipo",
          newView: "Nueva vista",
          next: "siguiente",
          ninoxCloudSync: "Sincronización Ninox Cloud",
          ninoxForTeams: "Ninox Internet",
          no: "No",
          noCalendarAccess:
            "Conceda a Ninox acceso a su calendario en la configuración del sistema.",
          noCalendarEntries: "No hay entradas",
          noColor: "No hay color",
          nodeNotFound:
            "El registro no se ha encontrado (posiblemente haya sido borrado).",
          noGrouping: "Anular Grupo",
          none: "(ninguno)",
          noNeedToResetPassword: "¿No necesitas restablecer tu contraseña?",
          notAuthorized:
            "No tiene la autorización necesaria para realizar esta acción",
          notConnected: "Actualmente no estás conectado a Internet.",
          noTeamName: "Por favor, elija un nombre de equipo.",
          noTemplate: "Comience con una base de datos nueva y vacía.",
          notEmpty: "(no vacío)",
          notLoggedIn: "Sin iniciar sesión",
          numberFormat: "Formato de números",
          numberFormatDigits: "Digits",
          numberFormatGroup: "Separador de miles",
          numberFormatPrefix: "Prefijo",
          numberFormatUnit: "Unit",
          numberMax: "Máximo",
          numberMin: "Mínimo",
          numberValue: "Valor numérico",
          of: "de",
          okay: "OK",
          oldPassword: "Por favor, introduzca su contraseña actual",
          oneAdminRequired:
            "Debe haber al menos otro usuario administrador en este equipo.",
          oneDay: "1 día",
          onlineHelp: "Manual del usuario",
          op_abs: "absoluto",
          op_age: "Edad",
          op_and: "y",
          op_contains: "Contiene",
          op_date: "Fecha",
          op_day: "Día",
          op_days: "Días",
          op_duration: "Duración",
          op_end: "Final",
          op_false: "no",
          op_format: "formatear",
          op_if: "si / entonces / si no",
          op_if_else: "si no",
          op_if_if: "si",
          op_if_then: "entonces",
          op_index: "Índice",
          op_like: "aproximadamente como",
          op_lower: "Minúscula",
          op_lpad: "Rellenar por la izquierda",
          op_month: "Mes",
          op_not: "no",
          op_now: "Ahora",
          op_number: "Como número",
          op_or: "o",
          op_round: "redondear",
          op_rpad: "Rellenar por la derecha",
          op_sign: "Signo",
          op_start: "Inicio",
          op_string: "Texto",
          op_substr: "Cadena de caracteres parcial",
          op_text: "Como texto",
          op_today: "Hoy",
          op_trim: "Sin espacios",
          op_true: "Sí",
          op_upper: "Mayúscula",
          op_week: "Semana",
          op_weekday: "Día de la semana",
          op_workdays: "Días hábiles",
          op_year: "Año",
          op_yearmonth: "Año/Mes",
          op_yearquater: "Quartal",
          op_yearweek: "Año/Semana",
          openIn: "Open in",
          operationInProgress: "La operación solicitada ya está en progreso",
          operator: "Operador",
          options: "Opciones",
          original: "Original",
          otherOptions: "Otras opciones",
          padding: "Acolchado",
          page: "página",
          pageBody: "Página",
          pageFoot: "Pie de página",
          pageHead: "Cabeza de página",
          pages: "Páginas",
          palette: "Paleta",
          paperFormat: "Formato de papel",
          password: "Contraseña",
          passwordContainNumber: "un número, ",
          passwordExpired: "Su contraseña ha caducado. Por favor, restáurela.",
          passwordMismatch: "Las contraseñas no coinciden.",
          passwordRestrict: "La contraseña debe tener ",
          passwordSpecificLength: "por lo menos 8 caracteres",
          paste: "Pegar",
          perMonth: "por mes",
          perYear: "por año",
          photo: "Foto",
          photoLibrary: "Biblioteca de fotos",
          pickGroupColumn: "Por favor, elija una columna de agrupación.",
          planCurrent: "Plan actual",
          planCurrentCovers: "Su plan actual cubre $1 usuarios.",
          planExpired: "Notamos que su plan ha expirado.",
          planExpiredMember:
            "El plan para este equipo ha expirado. Por favor, póngase en contacto con el propietario del equipo ($1) y pídale que actualice su plan.",
          planGetNow: "Obtenga ahora Ninox Cloud para $1 usuarios.",
          planGetNowCTA: "Obtener una suscripción",
          planNone: "El plan ha expirado",
          planPurchaseOther: "Este plan ha sido comprado con $1.",
          planRenewsAt: "Esta suscripción se renovará en: $1.",
          planSave: "Salvar",
          planTerms:
            'Esta suscripción proporciona acceso a Ninox Cloud para sus miembros y los de su equipo desde todos los dispositivos con la aplicación Ninox y también con el navegador web. El pago se cargará a la cuenta de iTunes en la confirmación de la compra. Esta suscripción se renueva automáticamente a menos que la renovación automática esté desactivada al menos 24 horas antes del final del período actual. Se le cobrará a su cuenta la renovación dentro de las 24 horas previas al final del período actual, e identificará el costo de la renovación. Las suscripciones pueden ser administradas por el usuario y la renovación automática se puede desactivar yendo a la Configuración de la cuenta del usuario después de la compra. Cualquier parte no utilizada de un período de prueba gratuito, si se ofrece, se perderá cuando el usuario compre una suscripción a esa publicación, cuando corresponda. Con su compra, acepta la <a href="https://ninoxdb.de/ninox/en/privacy.html">Política de privacidad</a> y la <a href="https://ninox.com/ninox/en/terms.html">Términos y condiciones</a>.',
          planTrial: "Estás en un plan de prueba gratis.",
          planTrialExpiresAt: "La suscripción de prueba vence el",
          planUnknown:
            "Lo sentimos, no podemos determinar su plan actual. Por favor, póngase en contacto con support@ninox.com.",
          planUsage: "Uso actual",
          planUsageCovered: "$1 usuarios están cubiertos por otros planes.",
          planUsageInfo: "Tienes $1 miembros en $2 equipos.",
          planUsageRequired: "$1 usuarios deben estar cubiertos por su plan.",
          planWrongUser:
            "Ya tienes un plan con una ID diferente. Inicie sesión con el siguiente correo electrónico: $ 1",
          pleaseConfirmYourEmail: "Por favor, confirma tu email",
          position: "Posición",
          postCommentButton: "Enviar",
          postCommentLabel: "Comentar",
          presets: "Preset",
          preview: "Preestreno",
          print: "Imprimir",
          printAll: "Todas",
          printAttachments: "Imprimir imágenes adjunta",
          printFontSize: "Tamaño de letra",
          printImages: "Imprimir imágenes",
          printNodeSettings: "Imprimir registro",
          printNow: "Imprimir ahora",
          printOne: "Este",
          printPDF: "Imprimir PDF",
          printRendering: "Vista previa",
          printTableSettings: "Imprimir tabla",
          printView: "Vista previa de impresión",
          private: "Privato",
          problemsLoggingIn: "¿No puedes iniciar sesión?",
          processBackground: "Procesos en segundo plano:",
          processDatabase: "Base de datos",
          processHeadline: "Procesos",
          processLogs: "Registros",
          processName: "Proceso",
          processRefresh: "Actualizar",
          processStatus: "Estado",
          processSubline:
            'Aquí puede ver todos los procesos en ejecución (si los hay) en su cuenta. A través de "Actualizar", recibe una actualización sobre el estado del proceso.',
          processTimeStarted: "Inicio",
          processTimeStopped: "Término",
          processUser: "Usuario",
          productPurchased: "Instalado",
          profileImage: "Imagen de perfil",
          protectDatabase: "Proteger esta base de datos",
          purchaseNow: "Comprar ahora",
          query: "Consulta",
          queryExecuting: "La consulta se está ejecutando...",
          radius: "Radio",
          readableIf: "Legible si",
          readRoles: "Permiso para leer",
          rebuildThumbnails: "Reconstruir miniaturas",
          rebuildThumbnailsConfirm:
            "¿Realmente quieres reconstruir todas las miniaturas? Este proceso puede tomar algún tiempo.",
          red: "rojo",
          referenceLabel1N: "(1 : N)",
          referenceLabelFrom: "Enlazar",
          referenceLabelN1: "(N : 1)",
          referenceLabelTo: "con",
          refFinderSearch: "Por favor, introduzca un concepto de búsqueda:",
          refFinderSearchCaption: " Busca en",
          register: "Crear una cuenta",
          registerNewsletter:
            "Mantenerme informado sobre las actualizaciones de productos.",
          reindex: "Crear índice de nuevo",
          reIndexFiles: "Archivos de reindexación",
          reIndexFilesConfirm:
            "¿Realmente quieres reindexar archivos? Este proceso puede tomar algún tiempo.",
          reloginMessage: "Vuelve a iniciar sesión para continuar.",
          remove: "Borrar",
          removeAllChoosen: "Eliminar líneas seleccionadas",
          removed: "Borrado",
          removeField: "Borrar campo",
          removeFieldConfirm:
            "¿Está usted seguro de que quiere borrar el campo definitivamente? Si lo borra, los datos relacionados con él se perderán.",
          removeFile: "Borrar archivo",
          removeFromTeam: "Eliminar del equipo",
          removeFromTeamConfirm:
            "¿Realmente quieres eliminar a este miembro de tu equipo?",
          removeFromTeamHead: "Eliminar miembro del equipo",
          removeFromTeamOkay: "retirar",
          removeNRecords: "Eliminar $ registros",
          removeRecord: "Eliminar registro",
          removeReference: "Borrar enlace",
          removeTab: "Eliminar pestaña",
          removeTable: "Borrar tabla",
          removeTeam: "Eliminar este equipo",
          removeTeamConfirm:
            "¿Desea eliminar este equipo de forma permanente? Esta operación no se puede deshacer. Todos los datos se perderán.",
          removeView: "Borrar vista",
          rename: "Rebautizar",
          renameDatabase: "Renombrar base de datos...",
          renameDatabaseOkay: "Renombrar",
          renameDatabaseToName: "Introduzca un nombre para la base de datos",
          renameView: "Cambiar el nombre de la vista",
          reorganizeDatabase: "Reorganizar",
          repeat: "Repetir",
          repeatPassword: "Repita la contraseña",
          required: "Necesario introducir valor",
          resendInvitation: "Reenviar invitacíon",
          resendVerificationMail: "Reenviar correo de verificación",
          resetPassword: "¡Restablecer su contraseña!",
          resetSchema: "Reiniciar",
          resetSync: "Restablecer la sincronización",
          restoreAppStoreTransactions: "Restablecer mis compras",
          restoreBackup: "Restaurar",
          result: "Resultado",
          resyncCloudDatabases: "Sincronización iCloud",
          right: "Derecha",
          role_editor: "Editor",
          roleCaption: "Nombre de rol",
          roleNotFound: "El rol no se ha encontrado.",
          roles: "Derechos de acceso",
          rolesExport: "Export Data",
          rolesImport: "Import Data",
          rolesMassDataUpdate: "Execute update queries",
          rolesOpen: "Open Database",
          rolesPrint: "Print Data",
          runConsole: "Ejecutar",
          save: "Guardar",
          saveArchiveAs: "Archivar como...",
          saveAs: "Guardar como",
          saveDataModelChanges: "Guardar cambios en el modelo de datos",
          saveImage: "Guardar la imagen",
          saveProfile: "Salva il profilo",
          saveReport: "Guardar diseño",
          saveSchema: "Guardar cambios",
          saveViewAs: "Guardar vista como...",
          schemaDirty: "Ha realizado usted cambios en la aplicación.",
          schemaSaveRequired:
            "Debe guardar los cambios en la aplicación antes de crear un registro de datos.",
          search: " Buscar",
          searchIn$: "Buscar en $",
          security: "Security",
          select: "Seleccionar",
          selectAll: "Seleccionar todo",
          sendInvitation: "Enviar invitacion",
          sendMail: "Enviar correo",
          sevenDays: "7 días",
          share: "Compartir",
          shareFile: "Comparte este archivo",
          shareURL: "URL pública",
          shareView: "Comparte esta vista",
          sharing: "Compartir",
          showAll: "Mostrar todo",
          showAs: "Mostrar como",
          showColumn: "Mostrar columna",
          showExtendedOptions: "Mas opciones",
          showHideColumns: "Mostrar columnas...",
          showLess: "Muestra menos",
          showMore: "Mostrar más",
          showOnlyChoosen: "Mostrar sólo seleccionados",
          showOnlyWorkHours: "Mostrar horas laborables",
          signature: "Signatura",
          signIn: "Iniciar",
          signinHead: "Iniciar sesión en Ninox",
          signup: "Regístrese",
          signUpBusinessMessage:
            "Los clientes comerciales reciben apoyo personal de nuestro Customer Success-Team.",
          signupCreateTeam: "Inicie sesión y cree un equipo",
          signupFree: "Registrate gratis",
          signupHead: "Regístrese para Ninox Cloud",
          signUpHeader1_1: "Come pianifichi",
          signUpHeader1_2: "utilizzare Ninox",
          signUpHeader2: "Su quale account vuoi ricevere la prova gratuita?",
          signUpHeader3: "Completa il tuo profilo per favore",
          signUpNewsletter: "Sì, aggiungimi alla newsletter di Ninox.",
          signupNewUser: "Registrarse como usuario nuevo",
          signUpPrivacyPolicy: "politica sulla riservatezza",
          size: "tamaño",
          solid: "Sólido",
          sort: "Ordenar",
          sortAscending: "Ascendiente",
          sortDescending: "Descendiente",
          sorting: "Orden",
          space: "Espaciador",
          ssoErrorMessage:
            "Algo no funciona. No podemos iniciar sesión en este momento.",
          ssoErrorSupportCta:
            "¿Aún no puedes iniciar sesión? Póngase en contacto con nuestro soporte.",
          ssoLogin: "SSO Login",
          ssoLogoutHeader: "Has terminado tu sesion satisfactoriamente.",
          ssoLogoutMessage: "Vuelve a iniciar sesión para continuar.",
          startColor: "Comience el color",
          startsWith: "Comienza con",
          startTrial: "Inizia la prova",
          staticImage: "Imagen estática",
          staticImagePhoto: "Imagen estática (foto)",
          stayWithPlan: "Quédate con este plan",
          storageLocation: "Ubicación del archivo",
          storeOnICloudDrive: "Tienda en iCloud Drive",
          stretch: "Tramo",
          stringLPad: "Rellenar desde la izquierda con",
          stringMaxLength: "Longitud máxima",
          stringMinLength: "Longitud mínima",
          stringMultiline: "Multilineal",
          stringRPad: "Rellenar desde la derecha con",
          style: "Estilo",
          subTable: "Subtabla",
          supportTicket: "Obtenga soporte",
          switchTeam: "Cambiar equipo",
          switchToPlan: "Cambiar a este plan",
          switchToPrintView: "Cambie a la vista",
          syncFilesFailed: "ha fallado",
          syncFilesToDownload: "Archivos para descargar",
          syncFilesToUpload: "Archivos para cargar",
          syncNow: "Sincronizar ahora",
          syncProblemCheck: "Verificar problemas de sincronización",
          syncSeq: "Sincronización secuencia no.",
          syncState: "Estado de sincronización",
          tab: "Pestaña",
          table: "Tabla",
          tableCaption: "Nombre de tabla",
          tableReference: "Enlazar con una tabla",
          tables: "Tablas",
          tableView: "Tabla",
          takePhoto: "Tomar foto",
          targetTable: "Destino",
          teamMember: "Miembro del equipo",
          teamMembers: "Miembros del equipo",
          teamName: "Nombre del equipo",
          teamSettings: "Configuración del equipo",
          templateRequired: "Patrón necesario",
          templateRequiredContacts:
            'Con el fin de importar contactos, necesitará el patrón de tabla "administración de contactos"',
          templateRequiredOkay: "Instalar patrón...",
          templates: "Plantillas",
          termsDisclamer:
            "Creando un account, accetti il $Termini di servizio$.",
          termsOfService: "Termini di servizio",
          text: "Texto",
          textAndDate: "Texto / Fecha",
          thanksCloud: "¡Gracias por usar Ninox Cloud!",
          thisFieldsAreRequired: "Por favor complete el campo",
          time: "hora",
          timeFmt: "Formato de tiempo",
          timestampDefaultNow: "Ahora",
          toDate: "A",
          today: "Hoy",
          toggleSelection: "Invertir selección",
          tooltip: "Información sobre herramientas",
          top: "Parte superior",
          transparent: "Transparente",
          triggerAfterCreate: "En crear, ejecutar el script ",
          triggerAfterCreateShort: "En crear",
          triggerAfterOpen: "Gatillo después de abierto",
          triggerAfterUpdate: "Al modificar, ejecutar el siguiente script ",
          triggerAfterUpdateShort: "En la actualización",
          trim: "Eliminar espacios",
          true: "verdad",
          type_appointment: "Cita",
          type_boolean: "Sí / No",
          type_br: "Salto de línea",
          type_button: "Botón",
          type_chart: "Gráfico",
          type_choice: "Selección",
          type_color: "Color",
          type_custom: "Control de HTML personalizado",
          type_date: "Fecha",
          type_datx: "Fecha (new)",
          type_email: "Email",
          type_file: "Imagen",
          type_fn: "Cálculo",
          type_head: "Título",
          type_html: "Texto enriquecido",
          type_icon: "Icono",
          type_link: "Dirección de Internet",
          type_list: "Subtabla",
          type_location: "Ubicación",
          type_multi: "Selección multiple",
          type_number: "Número",
          type_object: "Objeto",
          type_phone: "Teléfono",
          type_ref: "Enlace de tabla",
          type_rev: "Enlace de tabla",
          type_signature: "Signatura",
          type_space: "Espacio",
          type_string: "Texto",
          type_string_multiline: "Texto (varias líneas)",
          type_tab: "Pestaña",
          type_text: "Texto libre",
          type_time: "Hora",
          type_timeinterval: "Duración",
          type_timestamp: "Fecha y hora",
          type_user: "Usuario",
          type_view: "Ver",
          typeExportTemplates: "Patrón de exportación",
          typeMissmatchHtml:
            "No coinciden los tipos, este campo debe devolver un html",
          typeMissmatchImage:
            "El tipo no coincide, este campo debe devolver una imagen",
          unknowError: "Ha ocurrido un error inesperado.",
          unknown: "Desconocido",
          unknownError: "Error desconocido",
          unlink: "Anular enlace",
          unlinked: "Enlace anulado",
          unlockDatabase: "Desbloquear esta base de datos",
          unnamed: "(sin nombre)",
          unprotectDatabase: "Eliminar la protección de esta base de datos.",
          unsavedChanges: "Los siguientes cambios no se han guardado.",
          updateAllRecords: "Actualizar todos los registros",
          updateAssistant: "Actualización de datos masiva",
          updateAssistantExecute: "Ejecutar",
          updateAssistantFormula: "Ejecutar la siguiente consulta:",
          updateAssistantResults: "Resultados de consulta / Cambios realizados",
          updated: "Actualizado a",
          updateExpressionNotAllowed:
            "Esta fórmula no puede modificar los datos.",
          updateModeAssignFunction: "Asignar valor calculado",
          updateModeAssignNull: "Campo libre",
          updateModeAssignValue: "Asignar valor constante",
          updateModeDontChange: "No cambie",
          updateSelectedRecords: "Actualizar registros seleccionados",
          updateVisibleRecords: "Actualizar los registros visibles",
          upgradePlan: "Plan de actualización",
          upgradeToPremium: "Actualizar",
          uploadBackgroundFile: "Subir imagen de fondo",
          uploadFailed: "El archivo no se ha podido cargar.",
          uploading: "El archivo se está cargando...",
          usedPassword:
            "No puede utilizar esta contraseña ya que se ha utilizado anteriormente.",
          user: "usuario",
          userName: "Nombre de usuario",
          userNotFound: "El usuario no se ha encontrado.",
          users: "usuarios",
          uuid: "Identificador unívoco global",
          validUntil: "Válido hasta",
          value: "Valor",
          verifyEmail$:
            " Confirme su dirección de correo electrónico $ para continuar usando Ninox. ¿Sin correo electrónico? Compruebe su carpeta de correo no deseado.",
          verticalPosition: "Posición vertical",
          view: "Vista",
          viewAs: "Mostrar como",
          visibilityRule: "Mostrar campo sólo, si",
          visibilityRuleShort: "Mostrar si",
          visibleColumns: "Columnas visibles",
          visibleRows: "Filas visibles",
          week: "Semana",
          weeks: "Semanas",
          whatsnew: "Nuevas funciones",
          whatsnew1: "Tablas kanban",
          whatsnew1Body: "Paneles Kanban reordenables y personalizables ",
          whatsnew1Title: "Vistas mejoradas de Kanban",
          whatsnew2: "Diagramas de Gantt",
          whatsnew2Body:
            "Ordene sus mesas en el menú de mesas, de la forma que desee",
          whatsnew2Title: "Mesas ordenables",
          whatsnew3: "Tarjetas / vista de galería",
          whatsnew3Body:
            "Chicos de estadísticas, los tenemos cubiertos con nuestras vistas de la tabla Pivot.",
          whatsnew3Title: "Nueva vista de tabla Pivot",
          whatsnew4: "Vista de formulario",
          whatsnew5: "Estilo de titulares y elementos de texto libre.",
          whatsnewa1: "Cree bases de datos desde cualquier lugar.",
          whatsnewa2: "Sincroniza desde todos tus dispositivos.",
          whatsnewa3: "Colabora con tu equipo.",
          whatsnewa4: "Creé diseños de impresión.",
          whatsnewa5: "Cree formularios para recopilar datos fácilmente.",
          whatsnewDontShow: "No mostrar de nuevo",
          whatsnewFeatures: "Caracteristicas",
          whatsnewHelp: "Centro de ayuda",
          whatsnewNext: "Próximo",
          whatsnewSkip: "Saltar",
          whatsnewStart: "Listo!",
          whatsnewSubscribe: "Únase a nuestro seminario web",
          whatsnewTitle: "Ninox para Android",
          whatsnewVersion: "Versión",
          width: "Ancho",
          workPhone: "Telefono del lavoro",
          writableIf: "Se puede escribir si",
          writeRoles: "Permiso para escribir",
          wrongPassword: "Contraseña incorrecta.",
          wrongUserPassword:
            "La contraseña o el nombre de usuario no es correcto.",
          xlsExportOpen: "Descargar",
          xlsExportSaveAs: "Guardar como...",
          years: "Años",
          yes: "Sí",
          yesterday: "Ayer",
          yourAccount: "Su cuenta",
          zapierIntegration: "Integración con Zapier",
          zoom: "Enfocar",
          dayNames: [
            "Domingo",
            "Lunes",
            "Martes",
            "Miércoles",
            "Jueves",
            "Viernes",
            "Sábado",
          ],
          dayNamesShort: ["Do", "Lu", "Ma", "Mi", "Ju", "Vi", "Sá"],
          monthNames: [
            "Enero",
            "Febrero",
            "Marzo",
            "Abril",
            "Mayo",
            "Junio",
            "Julio",
            "Agosto",
            "Septiembre",
            "Octubre",
            "Noviembre",
            "Diciembre",
          ],
          agg: {
            cnt: "Número",
            count: "Número",
            sum: "Suma",
            avg: "Media",
            min: "Mínimo",
            max: "Máximo",
            first: "Primer",
            last: "Último",
            concat: "Concatenar",
            median: "Mediana",
            sort: "Ordenar",
            unique: "Únicos",
          },
          types: {
            number: "Número",
            string: "Texto",
            string_multiline: "Texto (varias líneas)",
            date: "Fecha",
            datx: "Fecha (new)",
            time: "Hora",
            timeinterval: "Duración",
            timestamp: "Fecha y hora",
            boolean: "Sí / No",
            choice: "Selección",
            multi: "Selección multiple",
            list: "Subtabla",
            ref: "Enlace de tabla",
            rev: "Enlace de tabla",
            object: "Objeto",
            html: "Texto enriquecido",
            fn: "Cálculo",
            tab: "Pestaña",
            head: "Título",
            text: "Texto libre",
            br: "Salto de línea",
            space: "Espacio",
            file: "Imagen",
            link: "Dirección de Internet",
            email: "Email",
            phone: "Teléfono",
            appointment: "Cita",
            user: "Usuario",
            location: "Ubicación",
            icon: "Icono",
            color: "Color",
            custom: "Control de HTML personalizado",
            button: "Botón",
            signature: "Signatura",
            view: "Ver",
            chart: "Gráfico",
          },
        },
        it: {
          accountInactive:
            "L'account è inattivo da più di un certo numero di giorni. Contattare l'amministratore di sistema.",
          accountLocked:
            "L'account è bloccato. Contattare l'amministratore di sistema.",
          actionRequiresPremium:
            "Si prega di eseguire l’upgrade alla versione Premium per attivare questa funzione.",
          actions: "Azioni",
          activateSharing: "Attiva la condivisione",
          add: "Aggiungi",
          addFile: "Aggiungi file",
          addRole: "Crea nuovo ruolo",
          addRowCreate: "Crea record",
          addRowFind: "Aggiungi record esistente",
          addRowFindCreate: " Cerca o crea record",
          addRule: "Aggiungi regola",
          addTable: "Nuova tabella",
          admin: "Amministrazione",
          advancedOptions: "Opzioni avanzate",
          agg_avg: "Media",
          agg_cnt: "Totale",
          agg_concat: "Unisci",
          agg_first: "Primo",
          agg_last: "Ultimo",
          agg_max: "Massimo",
          agg_median: "Mediana",
          agg_min: "Minimo",
          agg_sort: "Ordina",
          agg_sum: "Somma",
          agg_unique: "Unico",
          aggregation: "Piè di pagina",
          agreeTerms: "Ho letto e accetto i $1termini e condizioni$2.",
          all: "(tutto)",
          allChangesSaved: "Tutte le modifiche sono state salvate.",
          alreadyTrialPlan:
            "Sei già su un piano di prova per Ninox Cloud. Per prima cosa, aggiorna il tuo piano, per creare un'altra squadra.",
          annual: "Annuale",
          anyFile: "Qualsiasi file",
          appointmentBegin: "Inizio",
          appointmentEnd: "Fine",
          apps: "Apps",
          askLater: "Chiedimelo più tardi",
          atColumn: "colonna",
          atLine: "in linea",
          auto: "(auto)",
          autoHeight: "Altezza automatica",
          autoLayout: "Crea layout automaticamente",
          automatic: "Auto",
          availableColumns: "Colonne disponibili",
          back: "Indietro",
          background: "sfondo",
          backgroundColor: "Colore di sfondo",
          backgroundFileMustBeJPEG:
            "L’immagine di sfondo deve essere in formato JPEG.",
          backgrounds: "Immagine di sfondo",
          billedAnnually: "fatturati ogni anno",
          blue: "Blu",
          border: "Bordo",
          borderStyle: "Stile del bordo",
          bottom: "Parte inferiore",
          br: "Interruzione di linea",
          business: "Affaires",
          buyNow: "Acquista ora",
          calculate: "Calcola",
          calculatedValue: "Calcolo",
          calendar: "Calendario",
          calendarCreateAppointmentField:
            "Crea un campo appuntamento per creare un accesso al calendario.",
          calendarOptions: "Opzioni del calendario",
          calendarSyncAhead: "Mesi da sincronizzare in avanti",
          calendarSyncBeyond: "Mesi da sincronizzare oltre",
          calendarSyncEnabled: "Attiva la sincronizzazione del calendario",
          calendarSyncLocation: "Posizione di stoccaggio",
          calendarWeek: "Sett.",
          calendarWorkEnd: "Fine del giorno lavorativo",
          calendarWorkStart: "Il giorno lavorativo inizia",
          cancel: "Annulla",
          cancelInvitation: "Annulla invito",
          cancelInvitationConfirm: "Vuoi annullare questo invito?",
          cancelUpload: "Annulla",
          canFindIt:
            " Nessuna email? Per favore controlla la tua cartella spam.",
          cannotChangeRole: "Questa parte non può essere modificata.",
          cannotChangeUser: "Impossibile salvare le impostazioni utente.",
          cannotConnectAppStore:
            "Impossibile connettersi ad App Store. Per favore riprova più tardi.",
          cannotRemoveTeam: "Questo team non può essere cancellato",
          caption: "Nome",
          cards: "Carte",
          cascade: "Composizione",
          center: "Centro",
          changePassword: "Cambia password",
          chartBar: "Grafico a barre",
          chartBubble: "Grafico a bolle",
          chartBubbleRequiresColumns:
            "Grafico a bolle richiede tre colonne numeriche per X, Y, raggio.",
          chartDatasets: "Serie di dati",
          chartDatasetsCols: "Colonne",
          chartDatasetsRows: "Righe",
          chartDoughnut: "Grafico ad anello",
          chartLegend: "Leggenda",
          chartLine: "Grafico a linee",
          chartLineTension: "Linee smussate",
          chartNoData:
            "Il grafico non contiene dati. Si prega di definire almeno una colonna numerica nella vista selezionata.",
          chartPie: "Grafico a torta",
          chartPolarArea: "Grafico ad area polare",
          chartRadar: "Grafico radar",
          chartStacked: "Grafico in pila",
          chartType: "Tipo di grafico",
          chartView: "Grafico",
          chatPost: "Messaggio",
          choiceAddValue: "Aggiungi valore",
          choiceValues: "Lista di valori disponibili",
          chooseFile: "Aggiungi file",
          choosen: "Selezione",
          choosePhoto: "Aggiungi foto",
          chooseTeamName: "Nome della squadra",
          chooseTemplate: "Scegliere un modello",
          chooseTypeToExport: "Selezionare una tabella da esportare.",
          clear: "Chiaro",
          clearBackground: "Sfondo chiaro",
          clearChatHistory: "Elimina cronologia",
          clearHistory: "Elimina cronologia",
          clearSelection: "Elimina selezione",
          close: "Chiudi",
          collapseAll: "Chiudi tutto",
          color: "Colore",
          colorScheme: "Stile colore",
          column: "Colonna",
          commands: "Comandi",
          commented: "commentato",
          comments: "Commenti",
          company: "Entreprise",
          conditionalStyling: "Stile condizionale",
          confirmClearHistory:
            "Confermare l’eliminazione della cronologia di tutti i record. Questa azione non può essere annullata.",
          confirmDropDatabase:
            "Confermare l’eliminazione di questo database. Questa azione non può essere annullata.",
          confirmEmail: "Si prega di confermare il tuo indirizzo e-mail",
          confirmImportNinox:
            "Questa operazione può avere un impatto pesante sul database e non può essere annullata. Si prega di assicurarsi di avere una copia di backup. Per creare una copia di backup, duplicare il database o salvarlo come un file di archivio.",
          confirmInstallTemplate: "Installare questo modello?",
          confirmReindex:
            "Questa azione potrebbe richiedere diverso tempo. Durante la ricostruzione dell’indice, gli altri utenti non possono apportare modifiche.",
          confirmRemove: "Confermare l’eliminazione di questo record.",
          confirmRemoveAllChoosen:
            "Confermare l’eliminazione delle righe selezionate.",
          confirmRemoveChoiceValue:
            "Confermare l’eliminazione di questo valore?",
          confirmRemoveFile: "Confermare l’eliminazione del file?",
          confirmRemoveReference:
            "Confermare l’eliminazione di questo riferimento. Questa azione non può essere annullata.",
          confirmRemoveTable:
            "Confermare l’eliminazione di questa tabella. Tutti i record, commenti e file in essa contenuti saranno persi. Questa azione non può essere annullata.",
          confirmRemoveView: "Vuoi eliminare questa vista?",
          confirmReorganizeDatabase:
            "Riorganizza questo database e imposta il dispositivo in uso come proprietario del database. Tutte le modifiche apportate da altri dispositivi non ancora sincronizzate saranno perse.",
          confirmSaveReport: "Vuoi salvare le modifiche al layout?",
          constantValue: "Valore costante",
          constraint: "Vincolo",
          contactOwner: "Contatta il proprietario del team",
          contacts: "Contatti",
          contain: "Contenere",
          containsMixedCase:
            "un carattere maiuscolo e almeno un carattere minuscolo",
          containsNumber: "un numero",
          containsSpecialCharacters: "un carattere speciale",
          continueCloud: "Vorresti continuare a utilizzare Ninox Cloud?",
          copy: "Copia",
          copyToCalendar: "Copia nel mio calendario",
          couldntRenameFile: "Impossibile rinominare il file",
          country: "Pays",
          cover: "Copertina",
          create: "Crea",
          createApp: "Crea nuova app",
          createBackup: "Scarica backup",
          createCalendarEntry: "Nuovo accesso",
          createChoiceField: "Crea un nuovo campo di scelta",
          created: "creato",
          createDatabase: "Nuovo Database",
          createDatabaseFromTemplate: "Da modelli",
          createDatabaseLocation: "Dove vuoi salvare il database?",
          createDatabaseName: "Inserire un nome per il database",
          createDatabaseOkay: "Crea database",
          createdDate: "Creato il",
          createdUser: "Creato da",
          createField: "Crea campo",
          createNewTeam: "Creare un nuovo team",
          createRecord: "Crea record",
          createRecordRequiresPremium:
            "Hai creato $ record. Si prega di eseguire l’upgrade alla versione Premium.",
          createReference: "Crea riferimento tabella",
          createRoles: "Crea nuovi record",
          createTableFromTemplate: "Da modelli",
          createTeam: "Creare un nuovo team",
          createUI: "Aggiungi elemento di layout",
          csvDateFormat: "Formato data",
          csvDateFormatLocal: "Formato locale",
          csvEncoding: "Impostazioni di carattere",
          csvExportOpen: "Caricare",
          csvExportSaveAs: "Salva con nome...",
          csvFooter: "Includi piè di pagina",
          csvHeader: "Includi intestazione",
          csvLinefeed: "Interruzione di linea",
          csvNumberFormat: "Formato numeri",
          csvNumberFormatComma: "1.023,42",
          csvNumberFormatField: "Usa impostazioni del campo",
          csvNumberFormatPoint: "1023.42",
          csvQuote: "Testo citato",
          csvSeparator: "Separatore",
          csvSeparatorTab: "Tabulatore",
          csvSepHeader: "Includi definizione di separatore",
          currentPlan: "Piano attuale",
          custom: "Personalizzato",
          cut: "Taglia",
          database: "Database",
          databaseLocationCloud: "iCloud",
          databaseLocationLocal: "Locale",
          databaseName: "Nome Database",
          dataChange: "Modifica dei dati",
          dataField: "Campo di dati",
          dataModel: "Modello di dati",
          date: "Data",
          dateCalendar: "Mostra in calendario",
          dateCalendarColor: "Con colori",
          dateCalendarFormat: "Mostra come",
          dateDefaultToday: "Oggi",
          dateYearly: "Anniversario",
          day_fr: "Venerdì",
          day_mo: "Lunedì",
          day_sa: "Sabato",
          day_short_fr: "Ve",
          day_short_mo: "Lu",
          day_short_sa: "Sa",
          day_short_su: "Do",
          day_short_th: "Gi",
          day_short_tu: "Ma",
          day_short_we: "Me",
          day_su: "Domenica",
          day_th: "Giovedì",
          day_tu: "Martedì",
          day_we: "Mercoledì",
          days: "Giorni",
          daysLeft: "Giorni rimasti",
          decimalSeparatorLabel: "Separatore decimale",
          defaultAppName: "La mia app",
          defaultDateFormat: "dd/mm/yyy",
          defaultValue: "Valore standard",
          defineWorkHours: "Ore lavorative",
          deleteRoles: "Elimina record",
          description: "Descrizione",
          dontExecuteTriggers: "Non eseguire i trigger",
          dontHaveAccount: "Non hai un account?",
          dontHaveAnAccount: "Non hai un account?",
          dontImport: "(non importare)",
          dontRepeat: "Non ripetere",
          download: "Scarica",
          dragColumnsHereToDefineView:
            "Trascinare i campi qui per impostare le colonne visibili. Se nessuna colonna viene definita, la vista sarà configurata automaticamente.",
          dragFieldsHere: "Trascinare i campi qui...",
          drawing: "Disegno",
          dropbox: "Dropbox",
          dropDatabase: "Elimina database",
          dumpDatabase: "Scarica backup",
          duplicate: "Duplica",
          duplicateDatabase: "Duplica database",
          duplicateDatabaseName:
            "Nome database già in uso, impostare un nome diverso.",
          duplicateDatabaseOkay: "Duplica",
          duplicateDatabaseToName: "Inserire un nuovo nome per il database",
          duplicateRecord: "Duplica record",
          duplicateTable: "Duplicare la tabella",
          duplicateTableName:
            "Nome tabella già in uso. Scegliere un nome diverso.",
          duplicateUserName: "Duplica nome utente.",
          editColumns: "Modifica colonne...",
          editField: "Modifica campo",
          editFields: "Modifica campi",
          editTable: "Modifica tabella",
          email: "Email",
          emailAddress: "Indirizzo email",
          emailAlreadyRegistered:
            "Questo indirizzo email è già stato registrato.",
          emailBody: "Contenuto",
          emailMissing: "Per favore fornisci un indirizzo email valido.",
          emailNotRegistered:
            "Siamo spiacenti, questo indirizzo email non è registrato.",
          emailOrUserName: "Email",
          emailSubject: "Oggetto",
          empty: "(vuoto)",
          emptyLayout: "Vuoto",
          emptyValue: "Vuoto",
          endColor: "Colore finale",
          endsWith: "Finisce con",
          enterQuery: "Inserire richiesta",
          enterTableName: "Inserire un nome per la tabella",
          enterViewName: "Nome vista",
          errorAmbiguousFieldName: "Nomi campo ambigui",
          errorAmbiguousTypeName: "Nomi tabella ambigui",
          errorCannotPostToYourself: "Meno monologhi, grazie.",
          errorCannotUpdateReverse: "Impossibile scrivere in questo campo",
          errorConcurrentSchemaModification:
            "Sono state apportate diverse modifiche allo schema nello stesso momento. Le modifiche sono state ripristinate. ",
          errorEndOfStringExpected: "Fine prevista",
          errorExpressionExpected: "Espressione prevista",
          errorFailedToDeleteFile: "Il fine non può essere eliminato",
          errorFieldIsNoDataField: "Questo campo non può contenere dati",
          errorFieldIsNoLinkField:
            "Questo campo non può contenere un riferimento",
          errorFieldNotFound: "Campo non trovato",
          errorFieldTypeMismatch: "Il tipo di dati non è compatibile",
          errorFileNotFound: "File non trovato",
          errorGET:
            "Il server non risponde, si prega di verificare la connessione network.",
          errorHTTPMethodUnsupported: "Il metodo HTTP non è supportato",
          errorIdExpected: "Identificatore previsto",
          errorImageConversionFailed: "Impossibile convertire l'immagine",
          errorInvalidFieldName: "Nome campo non valido",
          errorInvalidParameter: "Parametro non valido",
          errorInvalidRequestBody: "Il contenuto della richiesta non è valido",
          errorInvalidTypeName: "Nome tabella non valido",
          errorInvalidViewCaption: "Nome vista non valido",
          errorLicenseMaxRecordsExceeded:
            "Hai superato il numero massimo di record previsti dalla tua licenza",
          errorMissingFieldName: "Campo senza nome",
          errorMissingRequestBody: "Contenuto richiesta mancante",
          errorMissingRequestParameter: "Parametro mancante",
          errorMissingTypeName: "Tabella senza nome",
          errorNodeNotFound: "Record non trovato",
          errorNotAuthorized: "Non autorizzato",
          errorServerNotResponding:
            "Il server non risponde. Si prega di controllare la connessione.",
          errorSymbolExpected: "Simbolo previsto",
          errorTemplateTypeUnsupported:
            "Tipo di file non adatto a essere esportato come modello. Usare Microsoft Excel.",
          errorTypeNotFound: "Tabella non trovata",
          errorUnexpectedSymbol: "Simbolo inatteso",
          errorValidationFailed: "Valore non valido",
          errorValueExpected: "Valore previsto",
          everybody: "tutti",
          evictDatabase: "Svuota cache",
          executeQuery: "Esegui richiesta",
          executeTriggers: "Esegui trigger",
          executeUpdate: "Esegui aggiornamento",
          expandAll: "Espandi tutto",
          expired: "Scaduto",
          exportCSV: "Esporta CSV",
          exportData: "Esporta dati",
          exportXLS: "Esporta Excel",
          false: "falso",
          field: "Campo",
          fieldCaption: "Nome campo",
          fields: "Campi",
          fieldType: "Tipo di dati",
          fieldWidth: "Larghezza",
          fieldWidth1Col: "1 colonna",
          fieldWidth2Col: "2 colonne",
          fieldWidth3Col: "3 colonne",
          fieldWidth4Col: "4 colonne",
          fileHandling: "Maneggiare il file come",
          files: "Allegati",
          filter: "Filtri",
          FindIn$: " Cerca in $",
          fiveDays: "5 giorni",
          fixedHeight: "Altezza fissa",
          fnInvalidComparator: "Comparatore non valido",
          fnInvalidExpression: "Espressione non valida",
          fnInvalidNumber: "Numero non valido",
          fnInvalidOperator: "Operatore non valido",
          fnInvalidParameter: "Parametro non valido",
          fnInvalidReturnType:
            "L’espressione fornisce un valore di rientro non valido",
          fnMissingParameter: "Parametro mancante",
          fnNotABoolean: "Non è un valore del tipo Sì/No",
          fnReturnsMultipleValues: "L’espressione fornisce valori multipli",
          fnReturnsSingleValue: "L’espressione fornisce solo un valore",
          fnReturnTypeMismatch:
            "Le espressioni “poi” e “oppure” forniscono diversi tipi di valori",
          fnUndefinedAggregation: "Aggregazione non definita",
          fnUndefinedFunction: "La funzione non è definita",
          fnUnknowError: "Errore sconosciuto",
          fnUnsupportedAggregation:
            "L’aggregazione non è definita per questo tipo di dati",
          footer: "Piè di pagina",
          forgotPassword: "Hai dimenticato la password?",
          forgotPasswordSuccess:
            "Guarda le tue email per reimpostare la password. ",
          form: "Formulario",
          format: "Formato",
          formView: "Tabella con formulario",
          freetext: "Descrizione",
          fromDate: "Dal",
          fromDropbox: "Da Dropbox",
          fromICloudDrive: "Da iCloud Drive",
          fromLocal: "Dal dispositivo",
          fullName: "Nom complet",
          function: "Formula",
          gantt: "GANTT",
          generate: "Creare",
          globalCode: "Definizioni di script globali",
          globalSearch: "Ricerca globale",
          gotoFirst: "Vai al primo",
          gotoLast: "Vai all'ultimo",
          gotoNext: "Vai alla prossima",
          gotoPrev: "Vai alla precedente",
          gotoToday: "Oggi",
          gradient: "Sfumato",
          grey: "Grigio",
          grouped: "Raggruppati",
          grouping: "Raggruppa",
          groupingSeparatorLabel: "Separatore di gruppo",
          hasIndex: "Indice",
          haveAnAccount: "Vous avez déjà un compte?",
          header: "Intestazione",
          headFoot: "Intestazione / Piè di pagina",
          headline: "Titolo",
          heartNinox: "Valuta Ninox",
          height: "Altezza",
          help: "Aiuto",
          hidden: "Nascosto",
          hideColumn: "Nascondi colonna",
          hintAddFields: "Aggiungi campi",
          hintCreateDatabase: "Crea un nuovo database",
          hintCreateTable: "Crea una nuova tabella",
          hintEnterTableName: "Inserire nome tabella",
          history: "Cronologia",
          home: "Pagina principale",
          horizontalPosition: "Posizione orizzontale",
          hours: "Ore",
          icloudDrive: "iCloud Drive",
          icon: "Icona",
          iconWithout: "(senza)",
          id: "ID",
          image: "Immagine",
          imageSize: "Dimensione",
          imageSizeLarge: "Grande",
          imageSizeMedium: "Medio",
          imageSizeOriginal: "Dimensione originale",
          imageSizeSmall: "Piccolo",
          import: "Importa",
          importAmbiguous: "Record ambigui",
          importAmbiguousSkip: "Salta",
          importAmbiguousUpdateAll: "Aggiorna tutti",
          importArchive: "Importare un archivio",
          importAvailableFields: "Campi disponibili",
          importChooseCSVFile: "Importa file CSV...",
          importChooseDatabase:
            "Selezionare un database in cui importare i dati.",
          importChooseFile: "Importa file...",
          importChooseURL: "Importa da URL",
          importContacts: "Importa i miei contatti",
          importCreateTable: "Importa in una nuova tabella",
          importData: "Importa dati",
          importDatabase: "Importa database",
          importDatabaseName: "Inserire un nuovo nome per il database",
          importDescription:
            "Aprire un file di testo o CSV di un’altra app (es. Mail) con Ninox per importare i dati.",
          importEnterURL: "Inserire l’URL dei dati che si desidera importare",
          importExecute: "Importa ora",
          importFailed: "Importazione fallita",
          importFieldMode: "Modo",
          importFieldModeKeyExact: "Chiave",
          importFieldModeUpdateAlways: "Aggiorna tutti i campi",
          importFieldModeUpdateEmpty: "Aggiorna campi vuoti",
          importFields: "Campi da importare",
          importFromAnotherDatabase: "Importa da un altro database",
          importHeader: "La prima linea è l'intestazione",
          importIntoField: "Importa nel campo",
          importMode: "Modalità di importazione",
          importModeAll: "Record nuovi e aggiornati",
          importModeInvalid: "La modalità di importazione non è valida",
          importModeNew: "Includere solo nuovi record",
          importModeNotSpecified:
            "La modalità di importazione non è specificata",
          importModeUpdate: "Solo record aggiornati",
          importNoDatabasesDefined:
            "I dati non possono essere importati dal momento che nessun database è stato definito.",
          importNoDataFound: " Il file non contiene dati.",
          importPreview: "Anteprima modifiche",
          importSelectFile: "Scegli file CSV",
          importSourceSettings: "Fonte dei dati",
          importSuccessful: "Importazione riuscita",
          importTable: "Scegliere la tabella in cui importare i dati",
          importTargetSettings: "Importa impostazioni",
          importTooManyFilesSelected: "Selezionare un solo file.",
          include: "Includi",
          includeData: "Copia record",
          includeDataShort: "Dati",
          includeFiles: "Copia file",
          includeFilesShort: "File",
          installTemplate: "Installa modello",
          installTemplateOkay: "Installa",
          invalidBoolean: "Valore non valido",
          invalidChoice: "Scelta non valida",
          invalidCredentials: "Email o password - qualcosa non va.",
          invalidDatabaseName:
            "Il nome del database non è valido. Il nome database non può contenere caratteri speciali o spazi.",
          invalidEncoding:
            "Impossibile leggere il file. Selezionare una codifica diversa.",
          invalidFileName: "Nome file non valido",
          invalidFunction: "Formula non valida",
          invalidNumber: "Numero non valido",
          invalidNumberMax: "Valore troppo grande",
          invalidNumberMin: "Valore troppo piccolo",
          invalidPassword:
            "Password non valida. Deve contenere almeno 6 caratteri.",
          invalidRequired: "Inserire un valore",
          invalidRoleCaption: "Nome parte non valida",
          invalidRoleRoles: "Parte non valida.",
          invalidString: "Nessuna sequenza",
          invalidStringMaxLength: "Valore troppo lungo. Lunghezza massima:",
          invalidStringMinLength: "Valore troppo corto: Lunghezza minima:",
          invalidStringREMatch:
            "Il valore non corrisponde all’espressione regolare.",
          invalidTeamName:
            "Nome della squadra non valido, per favore sceglierne uno diverso.",
          invalidUserEMail: "Indirizzo email non valido.",
          invalidUserFirstName: "Nome non valido.",
          invalidUserId: "ID non valido.",
          invalidUserLastName: "Cognome non valido.",
          invalidUserName: "Username non valido.",
          invalidUserRoles: "Ruolo non valido.",
          invitation: "Invito",
          invitations: "Inviti",
          invite: "Invita",
          inviteCode: "Codice di invito",
          invitedAt: "Invitato a",
          invitedFrom: "Invitato da",
          inviteHead: "Invita un compagno di squadra",
          kanban: "Kanban",
          kanbanRecommend:
            "Kanban funziona meglio con i campi di scelta. Campi consigliati:",
          language: "linguaggio",
          later: "Più tardi",
          latestChanges: "Ultime modifiche",
          latitude: "Latitudine",
          layoutElement: "Elementi di layout",
          leaveTeam: "Lasciare questa team",
          leaveTeamConfirm: "Vuoi davvero lasciare questa team?",
          leaveThisTeam: "Lasciare questa team",
          left: "Sinistra",
          licensed: "su licenza",
          licensedTo: "a",
          licenseExpires: "fino a",
          licenseInvalid:
            "La licenza d’uso di Ninox è scaduta, si prega di rinnovarla.",
          lineHeight: "Altezza linea",
          linkConfig: "Riferimento",
          linked: "associato a",
          linkFrom: "Collegamento da",
          linkPreview: "Mostra anteprima",
          linkTo: "Collegamento a",
          list: "Elenco",
          localization: "Localizzazione",
          LocalizationAddLocaleColumnHeader: "+ Aggiungi Locale",
          LocalizationDefaultColumnHeader: "Predefinito",
          LocalizationModuleColumnHeader: "Modulo",
          logic: "Logica",
          login: "Accedi",
          login2: "Accedi",
          loginAttempts:
            "Troppi tentativi di accesso non riusciti. Abbiamo bloccato il tuo account per 24 ore. Contatta il tuo amministratore per sbloccarlo prima.",
          logout: "Esci",
          longitude: "Longitudine",
          manageBackups: "Gestire i backup",
          margins: "Margini",
          matchPasswords: "Le password non corrispondono",
          maxUsers: "Fino a $1 membri del team.",
          messages: "Messaggi",
          minLength: "una lunghezza minima di 8 caratteri",
          missingUserName: "L’username è obbligatorio.",
          modeText: "Testo",
          modeVisual: "Visuale",
          modified: "modificato",
          modifiedAt: "il giorno",
          modifiedDate: "Modificato il",
          modifiedUser: "Modificato da",
          month: "Mese",
          month_apr: "Aprile",
          month_aug: "Agosto",
          month_dec: "Dicembre",
          month_feb: "Febbraio",
          month_jan: "Gennaio",
          month_jul: "Luglio",
          month_jun: "Giugno",
          month_mar: "Marzo",
          month_may: "Maggio",
          month_nov: "Novembre",
          month_oct: "Ottobre",
          month_sep: "Settembre",
          monthly: "Mensile",
          months: "Mesi",
          moveToBack: "Sfondo",
          moveToFront: "Primo piano",
          mustAgreeTerms:
            "Devi accettare i nostri termini e condizioni per ottenere l'accesso a Ninox Cloud.",
          myDatabases: "Le mie basi di dati",
          name: "Nome",
          new: "Nuovo",
          newField: "Nuovo campo",
          newOldPassword: "Non è possibile utilizzare una vecchia password",
          newPassword: "Nuova password",
          newReport: "Nuovo layout",
          newTeam: "Creare un nuovo team",
          newView: "Nuova vista",
          next: "Prossimo",
          ninoxCloudSync: "Sincronizzazione Ninox Cloud",
          ninoxForTeams: "Visita il nostro sito web",
          no: "No",
          noCalendarAccess:
            "Per favore concedi a Ninox l'accesso al tuo calendario nelle impostazioni di sistema.",
          noCalendarEntries: "Nessun accesso",
          noColor: "Nessun colore",
          nodeNotFound:
            "Il record non è stato trovato. Potrebbe essere stato eliminato.",
          noGrouping: "Separa",
          none: "(nessuno)",
          noNeedToResetPassword: "Non è necessario reimpostare la password?",
          notAuthorized: "Non sei autorizzato a eseguire questa azione",
          notConnected: "Sei attualmente non connesso a internet. ",
          noTeamName: "Si prega di scegliere un nome di squadra.",
          noTemplate: "Inizia con un database nuovo e vuoto.",
          notEmpty: "(non vuoto)",
          notLoggedIn: "Accesso non effettuato",
          numberFormat: "Formato del numero",
          numberFormatDigits: "Cifre",
          numberFormatGroup: "Separatore d. migliaia",
          numberFormatPrefix: "Prefisso",
          numberFormatUnit: "Unità",
          numberMax: "Massimo",
          numberMin: "Minimo",
          numberValue: "Valore numerico",
          of: "di",
          okay: "OK",
          oldPassword: "Password attuale",
          oneAdminRequired:
            "Ci deve essere almeno un altro utente amministratore in questa squadra.",
          oneDay: "1 giorno",
          onlineHelp: "Manuale utente",
          op_abs: "assoluto",
          op_age: "Età",
          op_and: "e",
          op_contains: "contiene",
          op_date: "data",
          op_day: "giorno",
          op_days: "Giorni",
          op_duration: "durata",
          op_end: "fine",
          op_false: "No",
          op_format: "formato",
          op_if: "se / poi / oppure",
          op_if_else: "oppure",
          op_if_if: "se",
          op_if_then: "poi",
          op_index: "indice",
          op_like: "come",
          op_lower: "minuscolo",
          op_lpad: "riempi a sinistra",
          op_month: "mese",
          op_not: "non",
          op_now: "Ora",
          op_number: "come numero",
          op_or: "o",
          op_round: "arrotonda",
          op_rpad: "riempi a destra",
          op_sign: "firma",
          op_start: "Inizio",
          op_string: "Testo",
          op_substr: "sottosequenza",
          op_text: "come testo",
          op_today: "Oggi",
          op_trim: "Senza spazi",
          op_true: "Sì",
          op_upper: "Maiuscola",
          op_week: "Settimana",
          op_weekday: "giorno della settimana",
          op_workdays: "Giorni lavorativi",
          op_year: "anno",
          op_yearmonth: "anno/mese",
          op_yearquater: "trimestre",
          op_yearweek: "Anno/Settimana",
          openIn: "Apri in",
          operationInProgress: "Operazione richiesta è già in corso",
          operator: "Operatore",
          options: "Opzioni",
          original: "Originale",
          otherOptions: "Altre opzioni",
          padding: "Margini interni",
          page: "Pagina",
          pageBody: "Corpo di pagina",
          pageFoot: "Piè di pagina",
          pageHead: "Intestazione",
          pages: "Pagine",
          palette: "Tavolozza",
          paperFormat: "Formato carta",
          password: "Password",
          passwordContainNumber: "un numero, ",
          passwordExpired:
            "La tua password è scaduta. Si prega di reimpostarla.",
          passwordMismatch: "Password non corretta. Prova di nuovo.",
          passwordRestrict: "La password deve avere ",
          passwordSpecificLength: "almeno 8 caratteri",
          paste: "Incolla",
          perMonth: "al mese",
          perYear: "all'anno",
          photo: "Foto",
          photoLibrary: "Libreria foto",
          pickGroupColumn:
            "Si prega di scegliere una colonna di raggruppamento.",
          planCurrent: "Piano attuale",
          planCurrentCovers: "Il tuo piano attuale copre $1 utenti.",
          planExpired: "Abbiamo notato che il tuo piano è scaduto.",
          planExpiredMember:
            "Il piano per questa squadra è scaduto. Si prega di contattare il proprietario del team ($1) e chiedergli di aggiornare il suo piano.",
          planGetNow: "Ottieni ora Ninox Cloud per $1 utenti.",
          planGetNowCTA: "Ottieni un abbonamento",
          planNone: "Il piano è scaduto.",
          planPurchaseOther: "Questo piano è stato acquistato con $1.",
          planRenewsAt: "Questo abbonamento sarà rinnovato a: $1.",
          planSave: "Salvare",
          planTerms:
            "Questa sottoscrizione fornisce l'accesso a Ninox Cloud per i membri del tuo team e di tutti i tuoi dispositivi da tutti i dispositivi con l'app Ninox e anche con il browser web. Il pagamento verrà addebitato sull'account iTunes alla conferma dell'acquisto. Questo abbonamento si rinnova automaticamente a meno che il rinnovo automatico non venga disattivato almeno 24 ore prima della fine del periodo corrente. Il tuo account verrà addebitato per il rinnovo entro 24 ore prima della fine del periodo corrente e identificato il costo del rinnovo. Le sottoscrizioni possono essere gestite dall'utente e il rinnovo automatico può essere disattivato andando alle Impostazioni account dell'utente dopo l'acquisto. Qualsiasi porzione inutilizzata di un periodo di prova gratuito, se offerto, verrà incamerata quando l'utente acquista un abbonamento a tale pubblicazione, ove applicabile. Con il tuo acquisto accetti le <a href=\"https://ninoxdb.de/ninox/en/privacy.html\"> Norme sulla privacy </a> e <a href=\"https://ninox.com/ninox/en/terms.html\"> Termini e condizioni </a>.",
          planTrial: "Sei su un piano di prova gratuito.",
          planTrialExpiresAt: "L'abbonamento di prova scade il",
          planUnknown:
            "Spiacenti, non possiamo determinare il tuo piano attuale. Si prega di contattare support@ninox.com.",
          planUsage: "Utilizzo attuale",
          planUsageCovered: "$1 utenti sono coperti da altri piani.",
          planUsageInfo: "Hai $1 membri in $2 squadre.",
          planUsageRequired: "$1 utenti devono essere coperti dal piano.",
          planWrongUser:
            "Hai già un piano con un ID diverso. Accedi con la seguente email: $ 1",
          position: "Posizione",
          postCommentButton: "Invia",
          postCommentLabel: "Commenta",
          presets: "Preset",
          preview: "Anteprima",
          print: "Stampa",
          printAll: "Tutti",
          printAttachments: "Stampa immagini allegate",
          printFontSize: "Dimensione carattere",
          printImages: "Stampa immagine",
          printNodeSettings: "Stampa record",
          printNow: "Stampa adesso",
          printOne: "Solo questo",
          printPDF: "Stampa PDF",
          printRendering: "Anteprima come",
          printTableSettings: "Stampa tabelle",
          printView: "Anteprima di stampa",
          private: "Privé",
          problemsLoggingIn: "Non riesci ad accedere?",
          processBackground: "Processi in background:",
          processDatabase: "Database",
          processHeadline: "Processi",
          processLogs: "Registri",
          processName: "Processi",
          processRefresh: "Ricaricare",
          processStatus: "Stato",
          processSubline:
            'Qui puoi vedere tutti i processi in esecuzione (se presenti) nel tuo account. Tramite "Aggiorna" ottieni un aggiornamento sullo stato del processo',
          processTimeStarted: "Inizio",
          processTimeStopped: "Fine",
          processUser: "Utente",
          productPurchased: "Installato",
          profileImage: "Immagine del profilo",
          protectDatabase: "Proteggi questo database",
          purchaseNow: "Acquista adesso",
          query: "Richiesta",
          queryExecuting: "La richiesta è in elaborazione...",
          radius: "Raggio",
          readableIf: "Leggibile se",
          readRoles: "Lettura autorizzata",
          rebuildThumbnails: "Ricostruisci le miniature",
          rebuildThumbnailsConfirm:
            "Vuoi veramente ricostruire tutte le miniature? Questo processo potrebbe richiedere del tempo.",
          red: "Rosso",
          referenceLabel1N: "(1 : N)",
          referenceLabelFrom: "Riferimento da",
          referenceLabelN1: "(N : 1)",
          referenceLabelTo: "a",
          refFinderSearch: "Inserire il testo da cercare:",
          refFinderSearchCaption: "Cerca nel",
          register: "Creare un profilo",
          registerNewsletter:
            "Tienimi informato sugli aggiornamenti del prodotto.",
          reindex: "Ricostruisci indice",
          reIndexFiles: "Reindexare i file",
          reIndexFilesConfirm:
            "Vuoi davvero reindexare i file? Questo processo potrebbe richiedere un po' di tempo.",
          reloginMessage: "Accedi di nuovo per continuare.",
          remove: "Elimina",
          removeAllChoosen: "Elimina righe selezionate",
          removed: "eliminato",
          removeField: "Elimina campo",
          removeFieldConfirm:
            "Confermare l’eliminazione del campo. Questa azione non può essere annullata.",
          removeFile: "Elimina file",
          removeFromTeam: "Cancella dal team",
          removeFromTeamConfirm:
            "Vuoi davvero rimuovere questo membro dal tuo team?",
          removeFromTeamHead: "Rimuovi membro dal team",
          removeFromTeamOkay: "Rimuovere",
          removeNRecords: "Elimina $ record",
          removeRecord: "Elimina record",
          removeReference: "Elimina riferimento",
          removeTab: "Elimina tab",
          removeTable: "Elimina tabella",
          removeTeam: "Elimina questa squadra",
          removeTeamConfirm:
            "Vuoi davvero eliminare questa squadra in modo permanente? Questa operazione non può essere annullata. Tutti i dati saranno persi.",
          removeView: "Elimina vista",
          rename: "Rinomina",
          renameDatabase: "Rinomina database...",
          renameDatabaseOkay: "Rinomina",
          renameDatabaseToName: "Inserire un nuovo nome per il database",
          renameView: "Rinomina vista",
          reorganizeDatabase: "Riorganizza",
          repeat: "Ripetere",
          repeatPassword: "Ripetere la nuova password",
          required: "Richiesto",
          resendInvitation: "Invia di nuovo l'invito",
          resendVerificationMail: "Rinviare l’email di conferma",
          resetPassword: "Reimposta la tua password!",
          resetSchema: "Annulla modifiche",
          resetSync: "Risettare la sincronizzazione",
          restoreAppStoreTransactions: "Ripristina prodotti acquistati",
          restoreBackup: "Ristabilire",
          result: "Risultati",
          resyncCloudDatabases: "Sincronizzazione iCloud",
          right: "Destra",
          role_editor: "editore",
          roleCaption: "Nome del ruolo",
          roleNotFound: "Parte non trovata.",
          roles: "Diritti di accesso",
          rolesExport: "Esporta dati",
          rolesImport: "Importa dati",
          rolesMassDataUpdate: "Esegui richiesta di aggiornamento",
          rolesOpen: "Apri database",
          rolesPrint: "Stampa dati",
          runConsole: "Eseguire",
          save: "Salva",
          saveArchiveAs: "Salva archivio con nome...",
          saveAs: "Salva con nome",
          saveDataModelChanges: "Salva modifiche",
          saveImage: "Salva immagine",
          saveProfile: "Enregistrer le profil",
          saveReport: "Salva layout",
          saveSchema: "Salva modifiche",
          saveViewAs: "Salva vista con nome...",
          schemaDirty: "L’applicazione è stata modificata.",
          schemaSaveRequired:
            "È necessario salvare le modifiche apportate all’applicazione.",
          search: "Cercare",
          searchIn$: "Cerca in $",
          security: "Sicurezza",
          select: "Selezionare",
          selectAll: "Seleziona tutto",
          sendInvitation: "Spedire un invito",
          sendMail: "Inviare una mail",
          sevenDays: "7 giorni",
          share: "Condividere",
          shareFile: "Condividi questo file",
          shareURL: "URL pubblico",
          shareView: "Condividi questa vista",
          sharing: "compartecipazione",
          showAll: "Mostra tutto",
          showAs: "Mostra come",
          showColumn: "Mostra colonna",
          showExtendedOptions: "Più opzioni",
          showHideColumns: "Modifica colonne...",
          showLess: "Mostra meno",
          showMore: "Mostra di più",
          showOnlyChoosen: "Mostra selezione",
          showOnlyWorkHours: "Mostra solo ore lavorative",
          signature: "Signature",
          signIn: " Accedi",
          signinHead: "Accedi a Ninox",
          signup: "Iscriviti",
          signUpBusinessMessage:
            "I clienti aziendali ricevono supporto personale dal nostro Customer Success-Team.",
          signupCreateTeam: "Accedi e crea una squadra",
          signupFree: "Iscriviti gratis",
          signupHead: "Iscriviti Ninox Cloud",
          signUpHeader1_1: "Comment planifiez-vous",
          signUpHeader1_2: "utiliser Ninox",
          signUpHeader2:
            "Sur quel compte souhaitez-vous bénéficier de l'essai gratuit?",
          signUpHeader3: "Complétez votre profil s'il vous plaît",
          signUpNewsletter: "Oui, ajoutez-moi à la newsletter Ninox.",
          signupNewUser: "Iscriviti come nuovo utente",
          signUpPrivacyPolicy: "Politique de confidentialité",
          size: "Dimensione",
          solid: "Unita",
          sort: "Ordina",
          sortAscending: "Ascendente",
          sortDescending: "Discendente",
          sorting: "Ordine",
          space: "Spazio",
          ssoErrorMessage:
            "Qualcosa non funziona. Al momento non possiamo farti accedere.",
          ssoErrorSupportCta:
            "Non riesci ancora ad accedere? Si prega di contattare il nostro supporto.",
          ssoLogin: "SSO Login",
          ssoLogoutHeader: "Ti sei disconnesso con successo.",
          ssoLogoutMessage: "Accedi di nuovo per continuare.",
          startColor: "Inizia il colore",
          startsWith: "Inizia con",
          startTrial: "Commencer procès",
          staticImage: "Immagine statica",
          staticImagePhoto: "Immagine statica (foto)",
          stayWithPlan: "Resta con questo piano",
          storageLocation: "Posizione di archiviazione",
          storeOnICloudDrive: "Archivia su iCloud Drive",
          stretch: "Allungare",
          stringLPad: "Riempimento a sinistra",
          stringMaxLength: "Lunghezza massima",
          stringMinLength: "Lunghezza minima",
          stringMultiline: "Multilinea",
          stringRPad: "Riempimento a destra",
          style: "Stile",
          subTable: "Sottotabella",
          supportTicket: "Ricevi supporto",
          switchTeam: "Cambiare team",
          switchToPlan: "Passa a questo piano",
          switchToPrintView: "Passa a vista",
          syncFilesFailed: "mancato",
          syncFilesToDownload: "File da scaricare",
          syncFilesToUpload: "File da caricare",
          syncNow: "Sincronizza ora",
          syncProblemCheck: "Verifica i problemi di sincronizzazione",
          syncSeq: "Sequenza di sincronizzazione n.",
          syncState: "Stato di sincronizzazione",
          tab: "Tab",
          table: "Tabella",
          tableCaption: "Nome tabella",
          tableReference: "Riferimento tabella",
          tables: "Tabelle",
          tableView: "Tabella",
          takePhoto: "Scatta foto",
          targetTable: "Destinazione",
          teamMember: "Membro del team",
          teamMembers: "I membri del team",
          teamName: "Nome del team",
          teamSettings: "Impostazioni del team",
          templateRequired: "Modello richiesto",
          templateRequiredContacts:
            'Per importare i contatti, installare la tabella templato: “Gestione contatti"',
          templateRequiredOkay: "Installa modello...",
          templates: "Modelli",
          termsDisclamer:
            "En créant un compte, vous acceptez le $Conditions d’utilisation$.",
          termsOfService: "Conditions d'utilisation",
          text: "Testo",
          textAndDate: "Testo / Data",
          thanksCloud: "Grazie per aver utilizzato Ninox Cloud!",
          thisFieldsAreRequired: "Si prega di compilare il campo",
          time: "Ora",
          timeFmt: "Formato orario",
          timestampDefaultNow: "Adesso",
          toDate: "Al",
          today: "oggi",
          toggleSelection: "Invertire selezione",
          tooltip: "tooltip",
          top: "Superiore",
          transparent: "Trasparente",
          triggerAfterCreate: "In crea, eseguire il trigger",
          triggerAfterCreateShort: "In crea",
          triggerAfterOpen: "Attivazione dopo l'apertura",
          triggerAfterUpdate: "Dopo l’aggiornamento, eseguire il trigger",
          triggerAfterUpdateShort: "Sull'aggiornamento",
          trim: "Elimina gli spazi",
          true: "vero",
          type_appointment: "Appuntamento",
          type_boolean: "Sì / No",
          type_br: "Interruzione di linea",
          type_button: "Pulsante",
          type_chart: "Grafico",
          type_choice: "Scelta",
          type_color: "Colore",
          type_custom: "Controllo HTML personalizzato",
          type_date: "Data",
          type_datx: "Data (new)",
          type_email: "Email",
          type_file: "Immagine",
          type_fn: "Formula",
          type_head: "Titolo",
          type_html: "Testo lungo",
          type_icon: "Icona",
          type_link: "URL",
          type_list: "Sottotabella",
          type_location: "Ubicazione",
          type_multi: "Scelta multipla",
          type_number: "Numero",
          type_object: "Oggetto",
          type_phone: "Telefono",
          type_ref: "Riferimento",
          type_rev: "Riferimento",
          type_signature: "Signature",
          type_space: "Spazio",
          type_string: "Testo",
          type_string_multiline: "Testo (multilinea)",
          type_tab: "Tab",
          type_text: "Testo libero",
          type_time: "Ora",
          type_timeinterval: "Durata",
          type_timestamp: "Data / Ora",
          type_user: "Utente",
          type_view: "vista",
          typeExportTemplates: "Modelli di esportazione",
          typeMissmatchHtml:
            "Tipo non corrispondente, questo campo deve restituire un html",
          typeMissmatchImage:
            "Tipo non corrispondente, questo campo deve restituire un'immagine",
          unknowError: "Si è verificato un errore imprevisto.",
          unknown: "Sconosciuto",
          unknownError: "Errore sconosciuto",
          unlink: "Scollega",
          unlinked: "scollegato con",
          unlockDatabase: "Sblocca questo database",
          unnamed: "(senza nome)",
          unprotectDatabase: "Rimuovi la protezione di questo database",
          unsavedChanges: "Impossibile salvare alcune modifiche",
          updateAllRecords: "Aggiorna tutti i record",
          updateAssistant: "Aggiornamento massivo dei dati",
          updateAssistantExecute: "Esegui",
          updateAssistantFormula: "Esegui richiesta:",
          updateAssistantResults: "Risultati della richiesta / aggiornamenti ",
          updated: "modificato in",
          updateExpressionNotAllowed:
            "Questa formula potrebbe non modificare i dati.",
          updateModeAssignFunction: "Assegna un valore calcolato",
          updateModeAssignNull: "Campo vuoto",
          updateModeAssignValue: "Assegna valore costante",
          updateModeDontChange: "Non cambiare",
          updateSelectedRecords: "Aggiorna righe selezionate",
          updateVisibleRecords: "Aggiorna record visibili",
          upgradePlan: "Aggiorna piano",
          upgradeToPremium: "Aggiorna",
          uploadBackgroundFile: "Carica immagine di sfondo",
          uploadFailed: "Il file non può essere caricato.",
          uploading: "Carico...",
          usedPassword:
            "Non è possibile utilizzare questa password poiché è stata utilizzata in precedenza.",
          user: "utente",
          userName: "Nome utente",
          userNotFound: "Utente non trovato.",
          users: "utenti",
          uuid: "Identificatore globale unico",
          validUntil: "Valido fino a",
          value: "Valore",
          verifyEmail$:
            " Conferma il tuo indirizzo email $ per continuare a utilizzare Ninox. Nessuna email? Per favore controlla la tua cartella spam.",
          verticalPosition: "Posizione verticale",
          view: "Vista",
          viewAs: "Mostra come",
          visibilityRule: "Mostra solo i campi se:",
          visibilityRuleShort: "Mostra se",
          visibleColumns: "Colonne visibili",
          visibleRows: "Righe visibili",
          week: "Settimana",
          weeks: "settimane",
          whatsnew: "Nuove funzioni",
          whatsnew1: "Grafici Kanban",
          whatsnew1Body:
            "Cambia colori, icone e ordine delle corsie Kanban con un solo clic.",
          whatsnew1Title: "Viste Kanban migliorate",
          whatsnew2: "Grafici GANTT",
          whatsnew2Body:
            "Riorganizza gli elementi nel riquadro di navigazione trascinandoli",
          whatsnew2Title: "Navigazione migliorata",
          whatsnew3: "Vista carte / galleria",
          whatsnew3Body:
            "Utilizza le tabelle pivot per analizzare i tuoi dati.",
          whatsnew3Title: "Nuova vista tabella pivot",
          whatsnew4: "Vista modulo",
          whatsnew5: "Styling di titoli e elementi di testo liberi",
          whatsnewa1: "Creare database da qualsiasi luogo.",
          whatsnewa2: "Sincronizzare da tutti i dispositivi.",
          whatsnewa3: "Collabora con il tuo team.",
          whatsnewa4: "Progettazione di layout di stampa.",
          whatsnewa5: "Costruire moduli per raccogliere facilmente i dati.",
          whatsnewDontShow: "Non mostrare più",
          whatsnewFeatures: "Caratteristiche",
          whatsnewHelp: "Centro assistenza",
          whatsnewNext: "Il prossimo",
          whatsnewSkip: "Salta",
          whatsnewStart: "Pronto ad andare!",
          whatsnewSubscribe: "Unisciti al nostro webinar",
          whatsnewTitle: "Ninox per Android",
          whatsnewVersion: "Versione",
          width: "Larghezza",
          workPhone: "Téléphone de travail",
          writableIf: "Scrivibile se",
          writeRoles: "Scrittura autorizzata",
          wrongPassword: "Password errata.",
          wrongUserPassword: "Password incorretta o username sconosciuto.",
          xlsExportOpen: "Caricare",
          xlsExportSaveAs: "Salva con nome...",
          years: "Anni",
          yes: "Sì",
          yesterday: "ieri",
          yourAccount: "Il tuo account",
          zapierIntegration: "Integrazione con Zapier",
          zoom: "Zoom",
          dayNames: [
            "Domenica",
            "Lunedì",
            "Martedì",
            "Mercoledì",
            "Giovedì",
            "Venerdì",
            "Sabato",
          ],
          dayNamesShort: ["Do", "Lu", "Ma", "Me", "Gi", "Ve", "Sa"],
          monthNames: [
            "Gennaio",
            "Febbraio",
            "Marzo",
            "Aprile",
            "Maggio",
            "Giugno",
            "Luglio",
            "Agosto",
            "Settembre",
            "Ottobre",
            "Novembre",
            "Dicembre",
          ],
          agg: {
            cnt: "Totale",
            count: "Totale",
            sum: "Somma",
            avg: "Media",
            min: "Minimo",
            max: "Massimo",
            first: "Primo",
            last: "Ultimo",
            concat: "Unisci",
            median: "Mediana",
            sort: "Ordina",
            unique: "Unico",
          },
          types: {
            number: "Numero",
            string: "Testo",
            string_multiline: "Testo (multilinea)",
            date: "Data",
            datx: "Data (new)",
            time: "Ora",
            timeinterval: "Durata",
            timestamp: "Data / Ora",
            boolean: "Sì / No",
            choice: "Scelta",
            multi: "Scelta multipla",
            list: "Sottotabella",
            ref: "Riferimento",
            rev: "Riferimento",
            object: "Oggetto",
            html: "Testo lungo",
            fn: "Formula",
            tab: "Tab",
            head: "Titolo",
            text: "Testo libero",
            br: "Interruzione di linea",
            space: "Spazio",
            file: "Immagine",
            link: "URL",
            email: "Email",
            phone: "Telefono",
            appointment: "Appuntamento",
            user: "Utente",
            location: "Ubicazione",
            icon: "Icona",
            color: "Colore",
            custom: "Controllo HTML personalizzato",
            button: "Pulsante",
            signature: "Signature",
            view: "vista",
            chart: "Grafico",
          },
        },
        ca: {
          actionRequiresPremium:
            "Actualitza't a Premium per a activar aquesta funció.",
          actions: "Accions",
          activateSharing: "Activa l'ús compartit",
          add: "Afegir",
          addFile: "Afegir arxiu",
          addRole: "Crear nou rol",
          addRowCreate: "Crear registre",
          addRowFind: " Afegeix un registre existent",
          addRowFindCreate: " Cerqueu o creeu un registre",
          addRule: "Afegiu una regla",
          addTable: "Nova taula",
          admin: "Administració",
          advancedOptions: "Opcions avançades",
          agg_avg: "Mitja",
          agg_cnt: "Comptar",
          agg_concat: "Concatenar",
          agg_first: "Primer",
          agg_last: "Últim",
          agg_max: "Màxim",
          agg_median: "Mitja",
          agg_min: "Mínim",
          agg_sort: "Ordenar",
          agg_sum: "Suma",
          agg_unique: "Únics",
          aggregation: "Peu de pàgina / Total columna",
          agreeTerms: "He llegit i accepto els $1termes i condicions$2.",
          all: "(Tots)",
          allChangesSaved: "Guardats tots els canvis",
          alreadyTrialPlan:
            "Ja teniu un pla de prova per a Ninox Cloud. Actualitzeu el pla primer per crear un altre equip.",
          annual: "Anual",
          anyFile: "Qualsevol fitxer",
          appointmentBegin: "Des de",
          appointmentEnd: "Fins a",
          apps: "Apps",
          askLater: "Pregunta'm després",
          atColumn: "Columna",
          atLine: "a la línia",
          auto: "(auto)",
          autoHeight: "Alçada auto",
          autoLayout: "Crear el disseny automàtica",
          automatic: "Auto",
          availableColumns: "Columnes disponibles",
          back: "Enrera",
          background: "Antecedents",
          backgroundColor: "Color de fons",
          backgroundFileMustBeJPEG:
            "Utilitza un arxiu JPEG com a imatge de fons.",
          backgrounds: "Imatge de fons",
          billedAnnually: "facturat anualment",
          blue: "Blau",
          border: "Voltants",
          borderStyle: "Estil dels voltants",
          bottom: "Inferior",
          br: "Salt de línia",
          business: "Negocio",
          buyNow: "Comprar ara",
          calculate: "Calcular",
          calculatedValue: "Càlcul",
          calendar: "Calendari",
          calendarCreateAppointmentField:
            "Crear camp d'esdeveniment per crear entrades al calendari.",
          calendarOptions: "Opcions del calendari",
          calendarSyncAhead: "Mesos per sincronitzar per davant",
          calendarSyncBeyond: "Mesos per sincronitzar més enllà",
          calendarSyncEnabled: "Habilita la sincronització del calendari",
          calendarSyncLocation: "Ubicació d'emmagatzematge",
          calendarWeek: "Setm.",
          calendarWorkEnd: "El dia laboral acaba",
          calendarWorkStart: "Comença el dia laborable",
          cancel: "Cancel·lar",
          cancelInvitation: "Cancel·lar la invitació",
          cancelInvitationConfirm: "Vols cancel·lar aquesta invitació?",
          cancelUpload: "Cancel·lar",
          canFindIt:
            " Sense correu electrònic? Comproveu la vostra carpeta de correu brossa.",
          cannotChangeRole: "No es pot guardar aquest rol",
          cannotChangeUser: "No es pot guardar aquest usuari",
          cannotConnectAppStore:
            "No es pot connectar a l'App Store. Siusplau, intenta-ho més tard.",
          cannotRemoveTeam: "Aquest equip no es pot eliminar",
          caption: "Nom",
          cards: "Targetes",
          cascade: "Composició",
          center: "Centre",
          changePassword: "Canviar Contrasenya",
          chartBar: "Gràfic de barres",
          chartBubble: "Gràfic de bombolles",
          chartBubbleRequiresColumns:
            "Gràfic de bombolles requereix tres columnes numèriques per a X, Y, ràdio.",
          chartDatasets: "Sèries de dades",
          chartDatasetsCols: "Columnes",
          chartDatasetsRows: "Files",
          chartDoughnut: "Gràfic del bunyol",
          chartLegend: "Llegenda",
          chartLine: "Gràfic de línies",
          chartLineTension: "Suavitzades línies",
          chartNoData:
            "El gràfic no conté dades. Si us plau, configura com a mínim una columna amb dades a la vista.",
          chartPie: "Gràfic de sectors",
          chartPolarArea: "Gráfico d'àrea polar",
          chartRadar: "Gràfic radial",
          chartStacked: "Gràfic apilat",
          chartType: "Tipus de gràfic",
          chartView: "Diagrama",
          chatPost: "Missatge",
          choiceAddValue: "Afegir un valor",
          choiceValues: "Llista de valors possibles",
          chooseFile: "Afegir arxiu",
          choosen: "Selecció",
          choosePhoto: "Afegir foto",
          chooseTeamName: "Nom de l'equip",
          chooseTemplate: "Trieu una plantilla",
          chooseTypeToExport: "Si us plau, selecciona la taula per a exportar",
          clear: "Clar",
          clearBackground: "Fons clar",
          clearChatHistory: "Esborrar historial",
          clearHistory: "Esborrar historial",
          clearSelection: "Anular la selecció",
          close: "Tancar",
          collapseAll: "Tancar-ho tot",
          color: "Color",
          colorScheme: "Estil de color",
          column: "Columna",
          commands: "Ordres",
          commented: "comentat",
          comments: "Comentaris",
          company: "Empresa",
          conditionalStyling: "Estil condicional",
          confirmClearHistory:
            "Confirmes que vols esborrar l'historial de tots els registres? Aquesta acció és irreversible.",
          confirmDropDatabase:
            "Confirmes que vols eliminar aquesta base de dades? Aquesta acció és irreversible.",
          confirmEmail:
            "Si us plau, confirma la teva adreça de correu electrònic",
          confirmImportNinox:
            "Aquesta operació pot tenir un impacte fort en la seva base de dades i no es pot desfer. Si us plau assegureu-vos que té una còpia de seguretat. Per crear una còpia de seguretat, duplicar la base de dades o guardar-lo com un arxiu.",
          confirmInstallTemplate: "Vols instal·lar aquesta plantilla?",
          confirmReindex:
            "Aquesta acció pot tardar. Durant la reconstrucció de l'indexat, altres usuaris no podran fer modificacions.",
          confirmRemove: "Confirmes que vols eliminar aquest registre?",
          confirmRemoveAllChoosen:
            "Confirmes que vols eliminar tots els registres seleccionats?",
          confirmRemoveChoiceValue: "Confirmes que vols eliminar aquest valor?",
          confirmRemoveFile: "Confirmes que vols eliminar aquest arxiu?",
          confirmRemoveReference:
            "Confirmes que vols eliminar aquest enllaç? Aquesta acció és irreversible.",
          confirmRemoveTable:
            "Confirmes que vols eliminar aquesta taula? Es perdrán tots els registres, arxius i comentaris continguts.  Aquesta acció és irreversible.",
          confirmRemoveView: "Vols eliminar la vista de la taula?",
          confirmReorganizeDatabase:
            "Reorganitzar la base de dades i definir el dispositiu actual com a propietari de la base de dades. Els canvis no sincronitzats en altres dispositius es perdrán.",
          confirmSaveReport: "Vols desar els canvis en el disseny?",
          constantValue: "Valor constant",
          constraint: "Limitacions",
          contactOwner: "Contacte al propietari de l'equip",
          contacts: "Contactes",
          contain: "Conté",
          continueCloud: "Voleu continuar utilitzant Ninox Cloud?",
          copy: "Copiar",
          copyToCalendar: "Copiar en el meu calendari",
          couldntRenameFile: "No es pot renombrar l'arxiu",
          country: "País",
          cover: "Coberta",
          create: "Crear",
          createApp: "Crear nova App",
          createBackup: "Crear còpia de seguretat",
          createCalendarEntry: "Nova entrada",
          createChoiceField: "Creeu un camp d’elecció nou",
          created: "Creat",
          createDatabase: "Nova Base de dades",
          createDatabaseFromTemplate: "Des d'una plantilla",
          createDatabaseLocation: "On vols guardar la Base de dades?",
          createDatabaseName: "Introdueix el nom de la Base de dades",
          createDatabaseOkay: "Crear la Base de dades",
          createdDate: "Creat el dia",
          createdUser: "Creat per",
          createField: "Crear nou camp de dades",
          createNewTeam: "Crear un nou equip",
          createRecord: "Crear Registre",
          createRecordRequiresPremium:
            "Has creat $ registres. Actualitza't a Premium.",
          createReference: "Enllaçar una taula",
          createRoles: "Crear registres nous",
          createTableFromTemplate: "Des d'una plantilla",
          createTeam: "Crear un nou equip",
          createUI: "Afegir element de disseny",
          csvDateFormat: "Format de data",
          csvDateFormatLocal: "Format Local",
          csvEncoding: "Codificació",
          csvExportOpen: "Descarregar",
          csvExportSaveAs: "Guardar com...",
          csvFooter: "Inclou peu de pàgina",
          csvHeader: "Incloure Capçalera",
          csvLinefeed: "Salt de línia",
          csvNumberFormat: "Format números",
          csvNumberFormatComma: "1.023,42",
          csvNumberFormatField: "Utilitza format del camp",
          csvNumberFormatPoint: "1023.42",
          csvQuote: "Texte Citat",
          csvSeparator: "Separador",
          csvSeparatorTab: "Tabulador",
          csvSepHeader: "Incloure definició dels separadors",
          currentPlan: "Pla actual",
          custom: "Personalitzat",
          cut: "Tallar",
          database: "Base de dades",
          databaseLocationCloud: "iCloud",
          databaseLocationLocal: "Local",
          databaseName: "Nom de la base de dades",
          dataChange: "Canvi de dades",
          dataField: "Camp de dades",
          dataModel: "Model de dades",
          date: "Data",
          dateCalendar: "Mostrar al calendari",
          dateCalendarColor: "Amb color",
          dateCalendarFormat: "Mostrar com",
          dateDefaultToday: "Avui",
          dateYearly: "Aniversari",
          day_fr: "Divendres",
          day_mo: "Dilluns",
          day_sa: "Dissabte",
          day_short_fr: "dv",
          day_short_mo: "dl",
          day_short_sa: "ds",
          day_short_su: "dg",
          day_short_th: "dj",
          day_short_tu: "dt",
          day_short_we: "dc",
          day_su: "Diumenge",
          day_th: "Dijous",
          day_tu: "Dimarts",
          day_we: "Dimecres",
          days: "Dies",
          daysLeft: "Dies que falten",
          decimalSeparatorLabel: "Separador decimal",
          defaultAppName: "La meva App",
          defaultDateFormat: "dd/mm/yyyy",
          defaultValue: "Valor per defecte",
          defineWorkHours: "Hores laborables",
          deleteRoles: "Eliminar registres",
          description: "Descripció",
          dontExecuteTriggers: "No executar scripts",
          dontHaveAccount: "No teniu cap compte?",
          dontHaveAnAccount: "No teniu cap compte?",
          dontImport: "(no importar)",
          dontRepeat: "No tornis a repetir",
          download: "Descarrega",
          dragColumnsHereToDefineView:
            "Arrossega els camps aquí per definir les columnes visibles. Fins que no els indiqueu la vista es configurarà automàticament.",
          dragFieldsHere: "Arrossega nous camps aquí...",
          drawing: "Dibuix",
          dropbox: "Dropbox",
          dropDatabase: "Eliminar base de dades",
          dumpDatabase: "Descarregar backup",
          duplicate: "Duplicar",
          duplicateDatabase: "Duplicar base de dades",
          duplicateDatabaseName:
            "Nom de la base de dades duplicat, si et plau tria un altre.",
          duplicateDatabaseOkay: "Duplicar",
          duplicateDatabaseToName: "Introdueix un nom per a la base de dades",
          duplicateRecord: "Duplicar registre",
          duplicateTable: "Duplicar la taula",
          duplicateTableName:
            "Ja existeix el nom de taula. Utilitza un altre nom.",
          duplicateUserName: "Nom d'usuari duplicat",
          editColumns: "Editar les columnes...",
          editField: "Editar camp",
          editFields: "Editar camps",
          editTable: "Editar taula",
          email: "E-mail",
          emailAddress: "Correu electrònic",
          emailAlreadyRegistered:
            "Aquesta adreça electrònica ja està registrada.",
          emailBody: "Contingut",
          emailMissing: "Proporcioneu una adreça de correu electrònic vàlida.",
          emailNotRegistered:
            "Aquesta adreça de correu electrònic no està registrada.",
          emailOrUserName: "E-mail",
          emailSubject: "Títol",
          empty: "(Buït)",
          emptyLayout: "Buït",
          emptyValue: "Buït",
          endColor: "Color final",
          endsWith: "Acaba amb",
          enterQuery: "Introdueix consulta",
          enterTableName: "Si us plau, introdueix el nom de la taula",
          enterViewName: "Nom de la vista",
          errorAmbiguousFieldName: "Noms de camps ambigus",
          errorAmbiguousTypeName: "Noms de taules ambigües",
          errorCannotPostToYourself: "Menys monòleg, si et plau.",
          errorCannotUpdateReverse: "En aquest camp no es pot escriure",
          errorConcurrentSchemaModification:
            "Aplicació modificada per un altre usuari. La teva configuració no s'ha guardat.",
          errorEndOfStringExpected: "Final esperat",
          errorExpressionExpected: "Expressió esperat",
          errorFailedToDeleteFile: "L'arxiu no es pot eliminar",
          errorFieldIsNoDataField: "El camp no és un camp de dades",
          errorFieldIsNoLinkField: "El camp no és un camp d'enllaç",
          errorFieldNotFound: "Camp no trobat",
          errorFieldTypeMismatch: "Tipus de dades incompatibles",
          errorFileNotFound: "Arxiu no trobat",
          errorGET:
            "El Servidor no respon. Si us plau comprova la teva connexió a Internet.",
          errorHTTPMethodUnsupported: "El mètode HTTP no està suportat",
          errorIdExpected: "Identificador esperat",
          errorImageConversionFailed: "La imatge no s'ha pogut convertir",
          errorInvalidFieldName: "Nom de camp invàlid",
          errorInvalidParameter: "Paràmetre invàlid",
          errorInvalidRequestBody: "Contingut sol·licitat invàlid",
          errorInvalidTypeName: "Nom de taula invàlid",
          errorInvalidViewCaption: "Nom de vista invàlid",
          errorLicenseMaxRecordsExceeded:
            "Has excedit el nombre màxim de registres de la teva llicència",
          errorMissingFieldName: "Camp sense nom",
          errorMissingRequestBody: "Sol·licitut sense contingut",
          errorMissingRequestParameter: "Falta un paràmetre",
          errorMissingTypeName: "Taula sense nom",
          errorNodeNotFound: "Registre no trobat",
          errorNotAuthorized: "No autoritzat",
          errorServerNotResponding:
            "El Servidor no respon. Si us plau comprova la teva connexió de xarxa.",
          errorSymbolExpected: "Símbol esperat",
          errorTemplateTypeUnsupported:
            "Tipus d'arxiu no disponible com a plantilla d'exportació. Utilitza Excels.",
          errorTypeNotFound: "Taula no trobada",
          errorUnexpectedSymbol: "Símbol no esperat",
          errorValidationFailed: "Valor invàlid",
          errorValueExpected: "Valor esperat",
          everybody: "tots",
          evictDatabase: "Buïdar caché",
          executeQuery: "Executar consulta",
          executeTriggers: "Executar scripts",
          executeUpdate: "Actualitzar ara",
          expandAll: "Expandir tot",
          expired: "Vençut",
          exportCSV: "Exportar a CSV",
          exportData: "Exportar dades",
          exportXLS: "Exportar a Excel",
          false: "fals",
          field: "Camp",
          fieldCaption: "Nom de camp",
          fields: "Camps",
          fieldType: "Tipus de dades",
          fieldWidth: "Ample",
          fieldWidth1Col: "1 columna",
          fieldWidth2Col: "2 columnes",
          fieldWidth3Col: "3 columnes",
          fieldWidth4Col: "4 columnes",
          fileHandling: "Controla el fitxer com",
          files: "Arxius Adjunts",
          filter: "Filtre",
          FindIn$: "Cerqueu en $",
          fiveDays: "5 dies",
          fixedHeight: "Alçada fixe",
          fnInvalidComparator: "Comparador invàlid",
          fnInvalidExpression: "Expressió invàlida",
          fnInvalidNumber: "Número invàlid",
          fnInvalidOperator: "Operador invàlid",
          fnInvalidParameter: "Paràmetre invàlid",
          fnInvalidReturnType: "L'expressió retorna un valir invàlid",
          fnMissingParameter: "Manca un paràmetre",
          fnNotABoolean: "No és un valor Si/No",
          fnReturnsMultipleValues: "L'expressió retorna múltiples valors",
          fnReturnsSingleValue: "L'expressió retorna un sol valor",
          fnReturnTypeMismatch:
            'Les expressions "aleshores" i "sinó" retornen tipus de dades diferents',
          fnUndefinedAggregation: "Agregació no definida",
          fnUndefinedFunction: "Funció no definida",
          fnUnknowError: "Error desconegut",
          fnUnsupportedAggregation:
            "Agregació impossible per a aquest tipus de dades",
          footer: "Peu de pàgina",
          forgotPassword: "Has oblidat la teva contrasenya?",
          forgotPasswordSuccess:
            "Per restablir la contrasenya, feu un cop d'ull a la vostra bústia",
          form: "Forma",
          format: "Format",
          formView: "Taula i la forma",
          freetext: "Descripció",
          fromDate: "De",
          fromDropbox: "Des de Dropbox",
          fromICloudDrive: "Des d'iCloud Drive",
          fromLocal: "Des del dispositiu",
          fullName: "Nombre completo",
          function: "Fòrmula",
          gantt: "GANTT",
          generate: "Genera",
          globalCode: "Definicions de guions globals",
          globalSearch: "Cerca global",
          gotoFirst: "Anar al primer registre",
          gotoLast: "Anar a l'últim registre",
          gotoNext: "Anar al següent registre",
          gotoPrev: "Anar al registre anterior",
          gotoToday: "Avui",
          gradient: "Gradient",
          grey: "Gris",
          grouped: "Agrupat",
          grouping: "Agrupar",
          groupingSeparatorLabel: "Grup separador",
          hasIndex: "Índex",
          haveAnAccount: "¿Ya tienes una cuenta?",
          header: "Capçalera",
          headFoot: "Capçalera / Peu de pàgina",
          headline: "Títol",
          heartNinox: "Puntuar Ninox",
          height: "Alçada",
          help: "Ajuda",
          hidden: "Ocult",
          hideColumn: "Ocultar Columna",
          hintAddFields: "Afegir alguns camps",
          hintCreateDatabase: "Crear nova base de dades",
          hintCreateTable: "Crear nova taula",
          hintEnterTableName: "Entra nom de taula",
          history: "Historial",
          home: "Inici",
          horizontalPosition: "Posició horitzontal",
          hours: "Hores",
          icloudDrive: "iCloud Drive",
          icon: "Icona",
          iconWithout: "(sense)",
          id: "id",
          image: "Imatge",
          imageSize: "Tamany",
          imageSizeLarge: "Gran",
          imageSizeMedium: "Mig",
          imageSizeOriginal: "Tamany original",
          imageSizeSmall: "Petit",
          import: "Importar",
          importAmbiguous: "Registres Ambigus",
          importAmbiguousSkip: "Saltar",
          importAmbiguousUpdateAll: "Actualitzar tots",
          importArchive: "Importa un arxiu",
          importAvailableFields: "Camps disponibles",
          importChooseCSVFile: "Importar arxiu CSV...",
          importChooseDatabase:
            "Escull una Base de dades a la qual importar les dades.",
          importChooseFile: "Importar arxiu...",
          importChooseURL: "Importa d'URL",
          importContacts: "Importar els meus contactes",
          importCreateTable: "Importar dins d'una nova taula",
          importData: "Importar dades",
          importDatabase: "Importar base de dades",
          importDatabaseName: "Introdueix un nou nom per a la base dades",
          importDescription:
            "Obre un arxiu de Text o CSV des d'un alte App (per ex. Mail) amb Ninox per a importar dades.",
          importEnterURL:
            "Introdueix l'URL des de la qual vols importar les dades",
          importExecute: "Importar ara",
          importFailed: "La Importació ha fallat",
          importFieldMode: "Mode",
          importFieldModeKeyExact: "Clau",
          importFieldModeUpdateAlways: "Actualitzar tots els camps",
          importFieldModeUpdateEmpty: "Actualitzar camps buïts",
          importFields: "Camps a importar",
          importFromAnotherDatabase: "Importa des d'una altra base de dades",
          importHeader: "La primera línia és capçalera",
          importIntoField: "Importar dins del camp",
          importMode: "Mode d'importació",
          importModeAll: "Registres nous i actualitzats",
          importModeInvalid: "Mode d'importació invàlid",
          importModeNew: "Només registres nous",
          importModeNotSpecified: "Mode d'importació no especificat",
          importModeUpdate: "Només registres actualitzats",
          importNoDatabasesDefined:
            "No es poden importar dades, no hi ha cap base de dades definida",
          importNoDataFound: " El fitxer no conté dades.",
          importPreview: "Vista prèvia de la importació",
          importSelectFile: "Selecciona un arxiu CSV",
          importSourceSettings: "Configuració origen de les dades",
          importSuccessful: "Importació amb èxit",
          importTable: "Escull la taula a la qual importar",
          importTargetSettings: "Configuració d'importacions",
          importTooManyFilesSelected: "Escull un sol arxiu",
          include: "Incloure",
          includeData: "Copiar registres",
          includeDataShort: "Dades",
          includeFiles: "Copiar arxius",
          includeFilesShort: "Arxius",
          installTemplate: "Instal·lar plantilla",
          installTemplateOkay: "Instal·lar ara",
          invalidBoolean: "Valor invàlid",
          invalidChoice: "Selecció invàlida",
          invalidCredentials:
            "Correu electrònic o contrasenya: alguna cosa no està bé.",
          invalidDatabaseName:
            "Nom de la base de dades invàlid. No pot contenir caràcters especials ni espais.",
          invalidEncoding:
            "No es pot llegir l'arxiu. Escull una altra codificació.",
          invalidFileName: "Nom d'arxiu invàlid",
          invalidFunction: "Fòrmula invàlida",
          invalidNumber: "Número invàlid",
          invalidNumberMax: "Valor massa gran",
          invalidNumberMin: "Valor massa petit",
          invalidPassword:
            "Contrasenya invàlida. Han de ser 6 caràcters pel cap baix.",
          invalidRequired: "Introdueix un valor",
          invalidRoleCaption: "Nom de rol invàlid",
          invalidRoleRoles: "Rols invàlids.",
          invalidString: "No és una cadena de caràcters",
          invalidStringMaxLength: "Valor massa llarg. Llargada màxima:",
          invalidStringMinLength: "Valor massa curt. Llargada mínima:",
          invalidStringREMatch:
            "El valor no correspon amb l'expressió regular.",
          invalidTeamName: "El nom de l'equip no és vàlid; trieu un altre.",
          invalidUserEMail: "E-mail invàlid",
          invalidUserFirstName: "El nom de l'usuari és invàlid.",
          invalidUserId: "ID d'usuari invàlid",
          invalidUserLastName: "El cognom de l'usuari és invàlid.",
          invalidUserName: "Nom d'usuari invàlid.",
          invalidUserRoles: "Rols invàlids.",
          invitation: "Invitació",
          invitations: "Invitacions",
          invite: "Convidar",
          inviteCode: "Codi d'invitació",
          invitedAt: "Invitat a",
          invitedFrom: "Convidat des de",
          inviteHead: "Convidar un company d'equip",
          kanban: "Kanban",
          kanbanRecommend:
            "Kanban funciona millor amb els camps d’elecció. Camps recomanats:",
          language: "Llenguatge",
          later: "Més tard",
          latestChanges: "Darrers canvis",
          latitude: "Latitud",
          layoutElement: "Element de disseny",
          leaveTeam: "Deixa aquest equip",
          leaveTeamConfirm: "De debò vols sortir d'aquest equip?",
          leaveThisTeam: "Deixa aquest equip",
          left: "Esquerra",
          licensed: "llicenciat",
          licensedTo: "per a",
          licenseExpires: "fins al",
          licenseInvalid: "La llicència ha expirat. Si et plau renóvala.",
          lineHeight: "Alçada de línia",
          linkConfig: "Enllaç de taula",
          linked: "Enllaçat amb",
          linkFrom: "Enllaç des de",
          linkPreview: "Mostrar vista prèvia",
          linkTo: "Enllaç a",
          list: "Llista",
          localization: "Localització",
          LocalizationAddLocaleColumnHeader: "+  Afegeix Locale",
          LocalizationDefaultColumnHeader: "Per defecte",
          LocalizationModuleColumnHeader: " Mòdul",
          logic: "Lògica",
          login: "Iniciar sessió",
          login2: "Iniciar sessió",
          loginAttempts:
            "Hi ha massa intents d'inici de sessió fallits. Hem bloquejat el vostre compte durant 24 hores. Poseu-vos en contacte amb el vostre administrador per desbloquejar-lo abans.",
          logout: "Tancar sessió",
          longitude: "Longitud",
          manageBackups: "Administrar còpies de seguretat",
          margins: "Marges de la pàgina",
          maxUsers: "Fins a $1 membres de l'equip.",
          messages: "Missatges",
          missingUserName: "Nom d'usuari obligatori.",
          modeText: "Text",
          modeVisual: "Visual",
          modified: "Modificat",
          modifiedAt: "el",
          modifiedDate: "Modificat el",
          modifiedUser: "Modificat per",
          month: "Mes",
          month_apr: "Abril",
          month_aug: "Agost",
          month_dec: "Desembre",
          month_feb: "Febrer",
          month_jan: "Gener",
          month_jul: "Juliol",
          month_jun: "Juny",
          month_mar: "Març",
          month_may: "Maig",
          month_nov: "Novembre",
          month_oct: "Octubre",
          month_sep: "Setembre",
          monthly: "Mensual",
          months: "Mesos",
          moveToBack: "Fons",
          moveToFront: "Primer pla",
          mustAgreeTerms:
            "Heu d'acceptar els nostres termes i condicions per accedir a Ninox Cloud.",
          myDatabases: "Les meves bases de dades",
          name: "Nom",
          new: "Nou",
          newField: "Nou camp",
          newPassword: "Nova contrasenya",
          newReport: "Nou disseny",
          newTeam: "Crear un nou equip",
          newView: "Nova vista",
          next: "Següent",
          ninoxCloudSync: "Sincronització d'Ninox Cloud",
          ninoxForTeams: "Visita el nostre web",
          no: "No",
          noCalendarAccess:
            "Concediu accés a Ninox al vostre calendari a la configuració del sistema.",
          noCalendarEntries: "No hi ha entrades",
          noColor: "Sense color",
          nodeNotFound: "El registre no existeix, potser s'ha suprimit",
          noGrouping: "Desagrupar",
          none: "(cap)",
          noNeedToResetPassword: "No cal restablir la contrasenya?",
          notAuthorized: "No tens autorització per a aquesta acció.",
          notConnected: "Actualment no esteu connectat a Internet.",
          noTeamName: "Trieu un nom d'equip.",
          noTemplate: "Comenceu amb una base de dades nova i buida.",
          notEmpty: "(no està buït)",
          notLoggedIn: "No estàs autenticat",
          numberFormat: "Format de números",
          numberFormatDigits: "Dígits",
          numberFormatGroup: "Separador de milers",
          numberFormatPrefix: "Prefix",
          numberFormatUnit: "Unitat",
          numberMax: "Màxim",
          numberMin: "Mínim",
          numberValue: "Valor numèric",
          of: "de",
          okay: "OK",
          oldPassword: "Introdueix contrasenya actual",
          oneAdminRequired:
            "Debe haber al menos otro usuario administrador en este equipo.",
          oneDay: "1 dia",
          onlineHelp: "Manual d'usuari",
          op_abs: "absolut",
          op_age: "Edat",
          op_and: "i",
          op_contains: "conté",
          op_date: "data",
          op_day: "día",
          op_days: "Dies",
          op_duration: "durada",
          op_end: "Acaba",
          op_false: "No",
          op_format: "formateja",
          op_if: "si / llavors / sinó",
          op_if_else: "sinó",
          op_if_if: "si",
          op_if_then: "llavors",
          op_index: "índex",
          op_like: "és com",
          op_lower: "minúscula",
          op_lpad: "ajustar a l'esquerra",
          op_month: "mes",
          op_not: "no",
          op_now: "Ara",
          op_number: "Com a número",
          op_or: "o",
          op_round: "ronda",
          op_rpad: "Ajustar a la dreta",
          op_sign: "signe",
          op_start: "comença",
          op_string: "Text",
          op_substr: "sub-cadena de caràcters",
          op_text: "Com a text",
          op_today: "Avui",
          op_trim: "sense espais",
          op_true: "Si",
          op_upper: "Majúscula",
          op_week: "Setmana",
          op_weekday: "dia de la setmana",
          op_workdays: "Dies Laborables",
          op_year: "any",
          op_yearmonth: "any/mes",
          op_yearquater: "Trimestre",
          op_yearweek: "Any/Setmana",
          openIn: "Obrir a",
          operationInProgress: "L’operació sol·licitada ja està en curs",
          operator: "Operador",
          options: "Opcions",
          original: "Original",
          otherOptions: "Altres opcions",
          padding: "Marges del voltant",
          page: "Pàgina",
          pageBody: "Cos de pàgina",
          pageFoot: "Peu de pàgina",
          pageHead: "Capçalera",
          pages: "Pàgines",
          palette: "Paleta",
          paperFormat: "Format del paper",
          password: "Contrasenya",
          passwordMismatch: "La contrasenya no coincideix, torna a provar-ho",
          paste: "Enganxar",
          perMonth: "per mes",
          perYear: "per any",
          photo: "Foto",
          photoLibrary: "Biblioteca de fotos",
          pickGroupColumn: "Seleccioneu una columna d'agrupament.",
          planCurrent: "Pla actual",
          planCurrentCovers: "El vostre pla actual cobreix $1 usuaris.",
          planExpired: "Hem observat que el vostre pla ha caducat.",
          planExpiredMember:
            "El pla d'aquest equip ha caducat. Poseu-vos en contacte amb el propietari de l'equip ($1) i demaneu-li que actualitzeu el pla.",
          planGetNow: "Aconsegueix ara Ninox Cloud per a $1 usuaris.",
          planGetNowCTA: "Obteniu una subscripció",
          planNone: "El pla ha caducat.",
          planPurchaseOther: "Aquest pla s'ha comprat amb $1.",
          planRenewsAt: "Aquesta subscripció es renovarà a: $1.",
          planSave: "Desa",
          planTerms:
            "Aquesta subscripció proporciona accés a Ninox Cloud per als membres del vostre equip i els seus membres de tots els dispositius amb l'aplicació Ninox i també amb el navegador web. El pagament es cobrarà al compte d'iTunes a la confirmació de la compra. Aquesta subscripció es renova automàticament a menys que la renovació automàtica estigui desactivada almenys 24 hores abans del final del període actual. Se us cobrarà el vostre compte per la seva renovació dins de les 24 hores anteriors al final del període actual i identificarà el cost de la renovació. Les subscripcions poden ser gestionades per l'usuari i la renovació automàtica es pot desactivar en anar a la configuració del compte de l'usuari després de la compra. Qualsevol part sense utilitzar un període de prova gratuït, si s'ofereix, es perdrà quan l'usuari adquireixi una subscripció a aquesta publicació, si escau. Amb la vostra compra, accepteu la <a href=\"https://ninoxdb.de/ninox/es/privacy.html\"> Política de privadesa </a> i la <a href=\"https://ninox.com/ninox/en/terms.html\"> Termes i condicions </a>.",
          planTrial: "Esteu en un pla de prova gratuïta.",
          planTrialExpiresAt: "La subscripció de prova caduca el dia",
          planUnknown:
            "Ho sentim, no podem determinar el vostre pla actual. Poseu-vos en contacte amb support@ninox.com.",
          planUsage: "Ús actual",
          planUsageCovered: "$1 usuaris estan coberts per altres plans.",
          planUsageInfo: "Teniu $1 membres en $2 equips.",
          planUsageRequired:
            "Els $1 usuaris necessiten ser cobertes pel vostre pla.",
          planWrongUser:
            "Ja teniu un pla amb un identificador diferent. Inicieu la sessió amb el correu electrònic següent: $ 1",
          position: "Posició",
          postCommentButton: "Enviar",
          postCommentLabel: "Comentar",
          presets: "Presets",
          preview: "Vista previa",
          print: "Imprimir",
          printAll: "Tots",
          printAttachments: "Imprimir imatges adjuntes",
          printFontSize: "Tamany de lletra",
          printImages: "Imprimir imatges",
          printNodeSettings: "Imprimint registres",
          printNow: "Imprimir ara",
          printOne: "Aquest",
          printPDF: "Imprimir PDF",
          printRendering: "Vista prèvia com",
          printTableSettings: "Imprimint taules",
          printView: "Vista per a impressió",
          private: "Privado",
          problemsLoggingIn: "No podeu iniciar la sessió?",
          processBackground: "Processos en segon pla:",
          processDatabase: "Base de dades",
          processHeadline: "Processos",
          processLogs: "Registres",
          processName: "Procés",
          processRefresh: "Actualització",
          processStatus: "Estat",
          processSubline:
            "Aquí podeu veure tots els processos en execució (si n’hi ha) al vostre compte. Mitjançant \"Actualitzar\" s'obté una actualització de l'estat del procés",
          processTimeStarted: "Inici",
          processTimeStopped: "Final",
          processUser: "Usuari",
          productPurchased: "Instal·lat",
          profileImage: "Imatge del perfil",
          protectDatabase: "Protegeix aquesta base de dades",
          purchaseNow: "Comprar ara",
          query: "Consulta",
          queryExecuting: "Consulta executant-se...",
          radius: "Radi",
          readableIf: "Es pot llegir si",
          readRoles: "Lectura autoritzada",
          rebuildThumbnails: "Reconstrueix les miniatures",
          rebuildThumbnailsConfirm:
            "Segur que voleu reconstruir totes les miniatures? Aquest procés pot trigar un temps.",
          red: "Vermell",
          referenceLabel1N: "(1 : N)",
          referenceLabelFrom: "Enllaçar des de",
          referenceLabelN1: "(N : 1)",
          referenceLabelTo: "amb",
          refFinderSearch: "Introdueix paraula clau de cerca:",
          refFinderSearchCaption: " Cerqueu a",
          register: "Crear compte",
          registerNewsletter:
            "Mantén-me informat sobre les actualitzacions del producte.",
          reindex: "Re-indexar",
          reIndexFiles: "Arxius de Reindex",
          reIndexFilesConfirm:
            "Realment voleu reindexar fitxers? Aquest procés pot trigar un temps.",
          reloginMessage: "Inicieu la sessió de nou per continuar.",
          remove: "Eliminar",
          removeAllChoosen: "Eliminar línies seleccionades",
          removed: "eliminat",
          removeField: "Eliminar camp",
          removeFieldConfirm:
            "Confirma que vols eliminar el camp. Aquesta acció no es pot desfer.",
          removeFile: "Eliminar arxiu",
          removeFromTeam: "Retirar de l'equip",
          removeFromTeamConfirm:
            "Segur que voleu eliminar aquest membre del vostre equip?",
          removeFromTeamHead: "Elimina membre de l'equip",
          removeFromTeamOkay: "Elimina",
          removeNRecords: "Elimina $ registres",
          removeRecord: "Eliminar registre",
          removeReference: "Eliminar enllaç",
          removeTab: "Eliminar pestanya",
          removeTable: "Eliminar taula",
          removeTeam: "Suprimeix aquest equip",
          removeTeamConfirm:
            "De veritat vol eliminar aquest equip de forma permanent? Aquesta operació no es pot desfer. Es perdran totes les dades.",
          removeView: "Eliminar vista",
          rename: "Renombrar",
          renameDatabase: "Renombra base de dades...",
          renameDatabaseOkay: "Renombrar",
          renameDatabaseToName: "Introdueix un nou nom per a la base de dades",
          renameView: "Renombrar vista",
          reorganizeDatabase: "Reorganitzar",
          repeat: "Repetiu",
          repeatPassword: "Repeteix la nova contrasenya",
          required: "Obligatori",
          resendInvitation: "Torneu a enviar la invitació",
          resendVerificationMail: "Reenvia el correu de verificació",
          resetPassword: "Restablir la contrasenya!",
          resetSchema: "Revertir canvis",
          resetSync: "Restablir la sincronització",
          restoreAppStoreTransactions: "Restaurar productes prèviament",
          restoreBackup: "Restaurar",
          result: "Resultat",
          resyncCloudDatabases: "Sincronització d'iCloud",
          right: "Dret",
          role_editor: "Editor",
          roleCaption: "Nom del rol",
          roleNotFound: "Rol no trobat.",
          roles: "Els drets d'accés",
          rolesExport: "Exportar dades",
          rolesImport: "Importar dades",
          rolesMassDataUpdate: "Executar consulta de dades",
          rolesOpen: "Obrir Base de dades",
          rolesPrint: "Imprimir dades",
          runConsole: "Executeu",
          save: "Guardar",
          saveArchiveAs: "Arxivar com...",
          saveAs: "Guardar com",
          saveDataModelChanges: "Guardar canvis",
          saveImage: "Guardar la imatge",
          saveProfile: "Guardar perfil",
          saveReport: "Desar disseny",
          saveSchema: "Guardar canvis",
          saveViewAs: "Guarda la vista com...",
          schemaDirty: "Has modificat l'aplicació.",
          schemaSaveRequired:
            "Guarda els canvis a l'aplicació abans de crear un registre.",
          search: "Buscar",
          searchIn$: " Cerqueu a",
          security: "Seguretat",
          select: "Seleccionar",
          selectAll: "Selecciona tot",
          sendInvitation: "Enviar invitació",
          sendMail: "Envia un correu",
          sevenDays: "7 dies",
          share: "Compartir",
          shareFile: "Comparteix aquest fitxer",
          shareURL: "URL públic",
          shareView: "Comparteix aquesta vista",
          sharing: "Compartir",
          showAll: "Mostra-ho tot",
          showAs: "Mostrar com",
          showColumn: "Mostrar columna",
          showExtendedOptions: "Més opcions",
          showHideColumns: "Editar columnes...",
          showLess: "Mostra menys",
          showMore: "Mostra més",
          showOnlyChoosen: "Mostra la selecció",
          showOnlyWorkHours: "Mostra només les hores laborables",
          signature: "Signatura",
          signIn: "Iniciar sessió",
          signinHead: "Inicieu la sessió a Ninox",
          signup: "Inscriu-te",
          signUpBusinessMessage:
            "Els clients empresarials reben assistència personal del nostre Customer Success-Team.",
          signupCreateTeam: "Inicieu la sessió i creeu un equip",
          signupFree: "Registra't gratuitament",
          signupHead: "Inscriu-te Ninox Núvol",
          signUpHeader1_1: "Como planeas",
          signUpHeader1_2: "usar Ninox",
          signUpHeader2: "¿En qué cuenta desea recibir la prueba gratuita?",
          signUpHeader3: "Complete su perfil por favor",
          signUpNewsletter: "Sí, agrégame al boletín de Ninox.",
          signupNewUser: "Registrar com a nou usuari",
          signUpPrivacyPolicy: "Política de privacidad",
          size: "Mida",
          solid: "Sòlid",
          sort: "Ordenar",
          sortAscending: "Ascendent",
          sortDescending: "Descendent",
          sorting: "Ordenant",
          space: "Espai",
          ssoErrorMessage:
            "Alguna cosa no funciona. De moment no podem iniciar la sessió.",
          ssoErrorSupportCta:
            "Encara no podeu iniciar la sessió? Poseu-vos en contacte amb el servei d'assistència.",
          ssoLogin: "SSO Login",
          ssoLogoutHeader: "Heu tancat la sessió amb èxit.",
          ssoLogoutMessage: "Inicieu la sessió de nou per continuar.",
          startColor: "Comença el color",
          startsWith: "Comença amb",
          startTrial: "Iniciar prueba",
          staticImage: "Imatge estàtica",
          staticImagePhoto: "Imatge estàtica (foto)",
          stayWithPlan: "Manteniu-vos amb aquest pla",
          storageLocation: "Ubicació del fitxer",
          storeOnICloudDrive: "Enmagatzamar a l'iCloud Drive",
          stretch: "Estirar",
          stringLPad: "Ajustar a l'esquerra",
          stringMaxLength: "Longitud màxima",
          stringMinLength: "Longitud mínima",
          stringMultiline: "Multilínia",
          stringRPad: "Ajustar a la dreta",
          style: "Estil",
          subTable: "Sub-taula",
          supportTicket: "Obtenir suport",
          switchTeam: "Canvi d'equip",
          switchToPlan: "Canvieu a aquest pla",
          switchToPrintView: "Canviar de vista",
          syncFilesFailed: "fracassat",
          syncFilesToDownload: "Fitxers a descarregar",
          syncFilesToUpload: "Fitxers per pujar",
          syncNow: "Sincronitza ara",
          syncProblemCheck: "Comproveu si hi ha problemes de sincronització",
          syncSeq: "Seqüència de sincronització no.",
          syncState: "Estat de sincronització",
          tab: "Pestanya",
          table: "Taula",
          tableCaption: "Nom de taula",
          tableReference: "Enllaçar a una taula",
          tables: "Taules",
          tableView: "Taula",
          takePhoto: "Fer foto",
          targetTable: "Destinació",
          teamMember: "Membre de l'equip",
          teamMembers: "Membres de l'equip",
          teamName: "Nom de l'equip",
          teamSettings: "Configuració de l'equip",
          templateRequired: "Plantilla necessària",
          templateRequiredContacts:
            'Per a importar contacte, instal.la la plantilla "administrador de contactes"',
          templateRequiredOkay: "Instal.lar plantilla...",
          templates: "Plantilles",
          termsDisclamer:
            "Al crear una cuenta, acepta las $Términos de servicio$.",
          termsOfService: "Términos de servicio",
          text: "Text",
          textAndDate: "Text / Data",
          thanksCloud: "Gràcies per utilitzar Ninox Cloud!",
          thisFieldsAreRequired: "Empleneu el camp",
          time: "Hora",
          timeFmt: "Format del temps",
          timestampDefaultNow: "Ara",
          toDate: "A",
          today: "avui",
          toggleSelection: "Invertir selecció",
          tooltip: "Informació d'eines",
          top: "Superior",
          transparent: "Transparent",
          triggerAfterCreate: "En crear, executar l'script",
          triggerAfterCreateShort: "En crear",
          triggerAfterOpen: "Desencadena després d'obrir",
          triggerAfterUpdate: "A l'actualitzar, executar el següent script",
          triggerAfterUpdateShort: "A l'actualitzar",
          trim: "Eliminar espais",
          true: "cert",
          type_appointment: "Cita",
          type_boolean: "Sí / No",
          type_br: "Salt de línia",
          type_button: "Botó",
          type_chart: "Gràfic",
          type_choice: "Selecció",
          type_color: "Color",
          type_custom: "Control d'HTML personalitzat",
          type_date: "Data",
          type_datx: "Data (new)",
          type_email: "E-mail",
          type_file: "Imatge",
          type_fn: "Fòrmula",
          type_head: "Títol",
          type_html: "Text enriquit",
          type_icon: "Icona",
          type_link: "URL",
          type_list: "Sub-taula",
          type_location: "Ubicació",
          type_multi: "Selecció multiple",
          type_number: "Número",
          type_object: "Objecte",
          type_phone: "Telèfon",
          type_ref: "Enllaç de taula",
          type_rev: "Enllaç de taula",
          type_signature: "Signatura",
          type_space: "Espai",
          type_string: "Text",
          type_string_multiline: "Text (multilínia)",
          type_tab: "Pestanya",
          type_text: "Text gratuït",
          type_time: "Hora",
          type_timeinterval: "Durada",
          type_timestamp: "Data / Hora",
          type_user: "Usuari",
          type_view: "Veure",
          typeExportTemplates: "Exportar plantilles",
          typeMissmatchHtml:
            "Escriviu un desajustament, aquest camp ha de retornar un html",
          typeMissmatchImage:
            "Escriviu un desajustament, aquest camp ha de retornar una imatge",
          unknowError: "Ha sorgit un error inesperat",
          unknown: "Desconegut",
          unknownError: "Error desconegut",
          unlink: "Anular enllaç",
          unlinked: "Enllaç anulat amb",
          unlockDatabase: "Desbloqueja aquesta base de dades",
          unnamed: "(sense nom)",
          unprotectDatabase: "Traieu la protecció d'aquesta base de dades",
          unsavedChanges: "Alguns canvis no s'han guardat.",
          updateAllRecords: "Actualitzar tots els registres",
          updateAssistant: "Actualització massiva de dades",
          updateAssistantExecute: "Executar",
          updateAssistantFormula: "Executar consulta:",
          updateAssistantResults:
            "Resultats de la consulta / Canvis realitzats",
          updated: "Modificat a",
          updateExpressionNotAllowed:
            "Aquesta fórmula pot no modificar les dades.",
          updateModeAssignFunction: "Assignar valor calculat",
          updateModeAssignNull: "Camp buït",
          updateModeAssignValue: "Assignar valor constant",
          updateModeDontChange: "No canviar",
          updateSelectedRecords: "Actualitzar registres seleccionats",
          updateVisibleRecords: "Actualitzar els registres visibles",
          upgradePlan: "Pla d'actualització",
          upgradeToPremium: "Actualitzar",
          uploadBackgroundFile: "Pujar imatge de fons",
          uploadFailed: "L'arxiu no s'ha pogut pujar.",
          uploading: "Pujant arxiu...",
          user: "usuari",
          userName: "Nom d'usuari",
          userNotFound: "Usuari no trobat.",
          users: "usuaris",
          uuid: "Identificador Global únic ID",
          validUntil: "Vàlid fins",
          value: "Valor",
          verifyEmail$:
            " Confirmeu la vostra adreça de correu electrònic $ per continuar utilitzant Ninox. Sense correu electrònic? Comproveu la vostra carpeta de correu brossa.",
          verticalPosition: "Posició vertical",
          view: "Vista",
          viewAs: "Mostrar com",
          visibilityRule: "Mostra el camp només si:",
          visibilityRuleShort: "Mostra si",
          visibleColumns: "Columnes visibles",
          visibleRows: "Files visibles",
          week: "Setmana",
          weeks: "Setmanes",
          whatsnew: "Noves funcions",
          whatsnew1: "Cartells de Kanban",
          whatsnew1Body:
            "Canvieu els colors, les icones i l’ordre de les vies de Kanban amb un sol clic.",
          whatsnew1Title: "Les vistes a Kanban millorades",
          whatsnew2: "Gràfics de GANTT",
          whatsnew2Body:
            "Reordeneu els elements del plafó de navegació arrossegant i deixant anar",
          whatsnew2Title: "Millora de la navegació",
          whatsnew3: "Targetes / vista de galeria",
          whatsnew3Body:
            "Utilitzeu taules bàsiques per analitzar les vostres dades.",
          whatsnew3Title: "Vista de taula nova de pivot",
          whatsnew4: "Vista de formularis",
          whatsnew5: "Estil de titulars i elements de text lliures",
          whatsnewa1: "Crea bases de dades des de qualsevol lloc.",
          whatsnewa2: "Sincronitza des de tots els teus dispositius.",
          whatsnewa3: "Col·labora amb el vostre equip.",
          whatsnewa4: "Dissenya dissenys impresos.",
          whatsnewa5: "Construeix formularis per recollir dades fàcilment.",
          whatsnewDontShow: "No tornis a mostrar",
          whatsnewFeatures: "Característiques",
          whatsnewHelp: "Centre d'ajuda",
          whatsnewNext: "Pròxim",
          whatsnewSkip: "Ometre",
          whatsnewStart: "Llest per anar!",
          whatsnewSubscribe: "Uneix-te al nostre webinar",
          whatsnewTitle: "Ninox per a Android",
          whatsnewVersion: "Versió",
          width: "Ample",
          workPhone: "Teléfono del trabajo",
          writableIf: "Escriptura si",
          writeRoles: "Escriptura autoritzada",
          wrongPassword: "Contrasenya incorrecta.",
          wrongUserPassword: "Contrasenya incorrecta o nom d'usuari desconegut",
          xlsExportOpen: "Descarregar",
          xlsExportSaveAs: "Guardar com...",
          years: "Anys",
          yes: "Sí",
          yesterday: "ahir",
          yourAccount: "El teu compte",
          zapierIntegration: "Integració zapier",
          zoom: "Zoom",
          dayNames: [
            "Diumenge",
            "Dilluns",
            "Dimarts",
            "Dimecres",
            "Dijous",
            "Divendres",
            "Dissabte",
          ],
          dayNamesShort: ["dg", "dl", "dt", "dc", "dj", "dv", "ds"],
          monthNames: [
            "Gener",
            "Febrer",
            "Març",
            "Abril",
            "Maig",
            "Juny",
            "Juliol",
            "Agost",
            "Setembre",
            "Octubre",
            "Novembre",
            "Desembre",
          ],
          agg: {
            cnt: "Comptar",
            count: "Comptar",
            sum: "Suma",
            avg: "Mitja",
            min: "Mínim",
            max: "Màxim",
            first: "Primer",
            last: "Últim",
            concat: "Concatenar",
            median: "Mitja",
            sort: "Ordenar",
            unique: "Únics",
          },
          types: {
            number: "Número",
            string: "Text",
            string_multiline: "Text (multilínia)",
            date: "Data",
            datx: "Data (new)",
            time: "Hora",
            timeinterval: "Durada",
            timestamp: "Data / Hora",
            boolean: "Sí / No",
            choice: "Selecció",
            multi: "Selecció multiple",
            list: "Sub-taula",
            ref: "Enllaç de taula",
            rev: "Enllaç de taula",
            object: "Objecte",
            html: "Text enriquit",
            fn: "Fòrmula",
            tab: "Pestanya",
            head: "Títol",
            text: "Text gratuït",
            br: "Salt de línia",
            space: "Espai",
            file: "Imatge",
            link: "URL",
            email: "E-mail",
            phone: "Telèfon",
            appointment: "Cita",
            user: "Usuari",
            location: "Ubicació",
            icon: "Icona",
            color: "Color",
            custom: "Control d'HTML personalitzat",
            button: "Botó",
            signature: "Signatura",
            view: "Veure",
            chart: "Gràfic",
          },
        },
        fr: {
          accountInactive:
            "Le compte a été inactif pendant plus que le nombre de jours spécifié. Veuillez contacter votre administrateur système.",
          accountLocked:
            "Le compte est bloqué. Veuillez contacter votre administrateur système.",
          actionRequiresPremium:
            "Veuillez passer à la version Premium pour activer cette fonction.",
          actions: "Opérations",
          activateSharing: "Activer le partage",
          add: "Ajouter",
          addFile: "Ajouter un fichier",
          addRole: "Créer un nouveau rôle",
          addRowCreate: "Nouvel enregistrement",
          addRowFind: " Ajouter un enregistrement existant",
          addRowFindCreate: " Rechercher ou créer un enregistrement",
          addRule: "Ajouter une règle",
          addTable: "Nouvelle table",
          admin: "Administration",
          advancedOptions: "Options avancées",
          agg_avg: "Moyenne",
          agg_cnt: "Total",
          agg_concat: "Concaténer",
          agg_first: "Premier",
          agg_last: "Dernier",
          agg_max: "Max",
          agg_median: "Médiane",
          agg_min: "Min",
          agg_sort: "Trier",
          agg_sum: "Somme",
          agg_unique: "Unique",
          aggregation: "Pied de page / Total de colonne",
          agreeTerms: "J'ai lu et j'accepte les $1termes et conditions$2.",
          all: "(tous)",
          allChangesSaved: "Toutes les modifications ont été enregistrées.",
          alreadyTrialPlan:
            "Vous êtes déjà sur un plan d'essai pour Ninox Cloud. Veuillez d'abord mettre à jour votre plan pour créer une autre équipe.",
          annual: "Annuel",
          anyFile: "Tout fichier",
          appointmentBegin: "Début",
          appointmentEnd: "Fin",
          apps: "Apps",
          askLater: "Demandez-moi plus tard",
          atColumn: "colonne",
          atLine: "à la ligne",
          auto: "(auto)",
          autoHeight: "Hauteur automatique",
          autoLayout: "Créer une mise en page automatiquement",
          automatic: "Auto",
          availableColumns: "Colonnes disponibles",
          back: "Retour",
          background: "Contexte",
          backgroundColor: "Couleur de fond",
          backgroundFileMustBeJPEG:
            "Veuillez utiliser un fichier JPEG comme image d'arrière-plan.",
          backgrounds: "Image d'arrière-plan",
          billedAnnually: "facturé annuellement",
          blue: "Bleu",
          border: "Bordure",
          borderStyle: "Style de bordure",
          bottom: "Bas",
          br: "Renvoi à la ligne",
          business: "Negocis",
          buyNow: "Acheter maintenant",
          calculate: "Calcul",
          calculatedValue: "Calcul",
          calendar: "Calendrier",
          calendarCreateAppointmentField:
            "Veuillez créer un champ rendez-vous pour saisir des entrées dans le calendrier. ",
          calendarOptions: "Options du calendrier",
          calendarSyncAhead: "Mois à synchroniser à l'avance",
          calendarSyncBeyond: "Mois à synchroniser au-delà",
          calendarSyncEnabled: "Activer la synchronisation du calendrier",
          calendarSyncLocation: "Emplacement de stockage",
          calendarWeek: "Sem.",
          calendarWorkEnd: "La journée de travail se termine",
          calendarWorkStart: "La journée de travail commence",
          cancel: "Annuler",
          cancelInvitation: "Annuler l'invitation",
          cancelInvitationConfirm: "Voulez-vous annuler cette invitation?",
          cancelUpload: "Annuler",
          canFindIt: " Pas d'email? Veuillez vérifier votre dossier spam.",
          cannotChangeRole: "Cette fonction ne peut pas être modifiée.",
          cannotChangeUser: "Ce compte utilisateur ne peut pas être modifié.",
          cannotConnectAppStore:
            "Ne peut pas se connecter à l'App Store. Veuillez réessayer plus tard.",
          cannotRemoveTeam: "Cette équipe ne peut pas être supprimée",
          caption: "Nom",
          cards: "Cartes",
          cascade: "Composition",
          center: "Centre",
          changePassword: "Modifier le mot de passe",
          chartBar: "Diagramme à bandes ",
          chartBubble: "Diagramme à bulles",
          chartBubbleRequiresColumns:
            "Le graphique à bulles nécessite trois colonnes numériques pour X, Y et le rayon.",
          chartDatasets: "Séries de données",
          chartDatasetsCols: "Colonnes",
          chartDatasetsRows: "Lignes",
          chartDoughnut: "Graphique en anneau",
          chartLegend: "Légende",
          chartLine: "Diagramme linéaire",
          chartLineTension: "Lignes lissées",
          chartNoData:
            "Il n'y a pas de données à afficher. Veuillez définir au moins une colonne numérique.",
          chartPie: "Camembert",
          chartPolarArea: "Diagramme polaire",
          chartRadar: "Diagramme en radar",
          chartStacked: "Barres empilées",
          chartType: "Type de graphique",
          chartView: "Diagramme",
          chatPost: "Message",
          choiceAddValue: "Ajouter une valeur",
          choiceValues: "Liste des valeurs possibles",
          chooseFile: "Ajouter un fichier",
          choosen: "Sélection",
          choosePhoto: "Ajouter une photo",
          chooseTeamName: "Nom de l'équipe",
          chooseTemplate: "Choisir un modèle",
          chooseTypeToExport: "Veuillez sélectionner une table à exporter.",
          clear: "Effacer",
          clearBackground: "Fond effacer",
          clearChatHistory: "Effacer l'historique",
          clearHistory: "Effacer l'historique",
          clearSelection: "Annuler la sélection",
          close: "Fermer",
          collapseAll: "Masquer tous",
          color: "Couleur",
          colorScheme: "Palette de couleur",
          column: "Colonne",
          commands: "Commandes",
          commented: "commenté",
          comments: "Commentaires",
          company: "Empresa",
          conditionalStyling: "Style conditionnel",
          confirmClearHistory:
            "Voulez-vous effacer définitivement l'historique de tous les enregistrements? Cette action est irréversible.",
          confirmDropDatabase:
            "Êtes-vous sûr de vouloir supprimer cette base de données? Cette action est irréversible.",
          confirmEmail: "Veuillez confirmer votre adresse email",
          confirmImportNinox:
            "Cette opération peut avoir un impact lourd sur votre base de données et ne peut pas être annulée. Veuillez vous assurer que vous disposez d'une sauvegarde. Pour créer une sauvegarde, dupliquer la base de données ou l'enregistrer en tant que fichier d'archive.",
          confirmInstallTemplate: "Voulez-vous installer ce modèle maintenant?",
          confirmReindex:
            "Cette action peut prendre un certain temps. Les autres utilisateurs ne pourront pas effectuer de modifications.",
          confirmRemove:
            "Êtes-vous sûr de vouloir supprimer cet enregistrement?",
          confirmRemoveAllChoosen:
            "Êtes-vous sûr de vouloir supprimer tous les enregistrements sélectionnés?",
          confirmRemoveChoiceValue:
            "Êtes-vous sûr de vouloir supprimer cette valeur?",
          confirmRemoveFile: "Êtes-vous sûr de vouloir supprimer ce fichier?",
          confirmRemoveReference:
            "Êtes-vous sûr de vouloir supprimer cette relation? Cette action est irréversible.",
          confirmRemoveTable:
            "Êtes-vous sûr de vouloir supprimer cette table? Tous les enregistrements, fichiers joints et commentaires de celle-ci seront perdus. Cette action est irréversible.",
          confirmRemoveView: "Voulez-vous supprimer cette vue de la table?",
          confirmReorganizeDatabase:
            "Réorganiser la base de données et définir l'appareil actuel comme propriétaire de la base de données. Les modifications non synchronisées effectuées sur d'autres appareils seront perdues.",
          confirmSaveReport:
            "Voulez-vous enregistrer les modifications à la mise en page?",
          constantValue: "Valeur fixe",
          constraint: "Contraintes",
          contactOwner: "Contacter le propriétaire de l'équipe",
          contacts: "Contacts",
          contain: "Contenir",
          containsMixedCase: "une majuscule et au moins une minuscule",
          containsNumber: "un seul numéro",
          containsSpecialCharacters: "un caractère spécial",
          continueCloud: "Voulez-vous continuer à utiliser Ninox Cloud?",
          copy: "Copier",
          copyToCalendar: "Copier dans mon calendrier",
          couldntRenameFile: "Vous ne pouvez pas renommer le fichier",
          country: "País",
          cover: "Couverture",
          create: "Créer",
          createApp: "Créer une nouvelle app",
          createBackup: "Créer une sauvegarde",
          createCalendarEntry: "Créer une entrée",
          createChoiceField: "Créer un nouveau champ de choix",
          created: "créé",
          createDatabase: "Nouvelle base de données",
          createDatabaseFromTemplate: "À partir d'un modèle",
          createDatabaseLocation:
            "Où voulez-vous enregistrer cette base de données?",
          createDatabaseName:
            "Veuillez introduire un nom pour la base de données",
          createDatabaseOkay: "Créer la base de données",
          createdDate: "Créé le",
          createdUser: "Créé par",
          createField: "Créer un nouveau champ de données",
          createNewTeam: "Créer une nouvelle équipe",
          createRecord: "Enregistrement",
          createRecordRequiresPremium:
            "Vous avez créé $ enregistrements dans cette base de données. Veuillez passer à la version Premium.",
          createReference: "Lier à une table",
          createRoles: "Créer de nouveaux enregistrements",
          createTableFromTemplate: "À partir d'un modèle",
          createTeam: "Créer une nouvelle équipe",
          createUI: "Ajouter un élément de mise en page",
          csvDateFormat: "Format de date",
          csvDateFormatLocal: "Format local",
          csvEncoding: "Jeu de caractères",
          csvExportOpen: "Télécharger",
          csvExportSaveAs: "Enregistrer sous...",
          csvFooter: "Pied de page",
          csvHeader: "En-têtes compris",
          csvLinefeed: "Renvoi à la ligne",
          csvNumberFormat: "Format des nombres",
          csvNumberFormatComma: "1.023,42",
          csvNumberFormatField: "Utiliser les réglages du champ",
          csvNumberFormatPoint: "1023.42",
          csvQuote: "Citation de texte",
          csvSeparator: "Séparateur ",
          csvSeparatorTab: "Tabulation",
          csvSepHeader: "Inclure la définition de séparateurs",
          currentPlan: "Plan actuel",
          custom: "Personnalisé",
          cut: "Couper",
          database: "Base de données",
          databaseLocationCloud: "iCloud",
          databaseLocationLocal: "Local",
          databaseName: "Nom de la base de données",
          dataChange: "Changement de données",
          dataField: "Champ de données",
          dataModel: "Modèle de données",
          date: "Date",
          dateCalendar: "Afficher dans le calendrier",
          dateCalendarColor: "Couleur",
          dateCalendarFormat: "Affichage",
          dateDefaultToday: "Aujourd'hui",
          dateYearly: "Anniversaire",
          day_fr: "Vendredi",
          day_mo: "Lundi",
          day_sa: "Samedi",
          day_short_fr: "Ve",
          day_short_mo: "Lu",
          day_short_sa: "Sa",
          day_short_su: "Di",
          day_short_th: "Je",
          day_short_tu: "Ma",
          day_short_we: "Me",
          day_su: "Dimanche",
          day_th: "Jeudi",
          day_tu: "Mardi",
          day_we: "Mercredi",
          days: "Jours",
          daysLeft: "Jours restants",
          decimalSeparatorLabel: "Séparateur décimal",
          defaultAppName: "Mon app",
          defaultDateFormat: "dd/mm/yyyy",
          defaultValue: "Valeur par défaut",
          defineWorkHours: "Heures de travail",
          deleteRoles: "Supprimer des enregistrements",
          description: "Description",
          dontExecuteTriggers: "Ne pas exécuter les déclencheurs",
          dontHaveAccount: "Vous n'avez pas de compte?",
          dontHaveAnAccount: "Vous n'avez pas de compte?",
          dontImport: "(ne pas importer)",
          dontRepeat: "Ne pas répéter",
          download: "Télécharger",
          dragColumnsHereToDefineView:
            "Faites glisser les champs ici pour sélectionner les colonnes à afficher. Tant que vous n'aurez pas défini de colonnes, la vue sera configurée automatiquement.",
          dragFieldsHere: "Faites glisser de nouveaux champs ici...",
          drawing: "Dessin",
          dropbox: "Dropbox",
          dropDatabase: "Supprimer la base de données",
          dumpDatabase: "Télécharger la sauvegarde",
          duplicate: "Dupliquer",
          duplicateDatabase: "Copier la base de données",
          duplicateDatabaseName:
            "Ce nom de base de données est déjà pris, veuillez en introduire un autre.",
          duplicateDatabaseOkay: "Copier",
          duplicateDatabaseToName:
            "Veuillez introduire un nom pour la base de données",
          duplicateRecord: "Dupliquer l'enregistrement",
          duplicateTable: "Dupliquer ce tableau",
          duplicateTableName:
            "Nom de la table déjà pris. Veuillez utiliser un autre nom.",
          duplicateUserName: "Ce nom d'utilisateur est déjà pris.",
          editColumns: "Définir les colonnes à afficher...",
          editField: "Modifier le champ",
          editFields: "Modifier les champs",
          editTable: "Éditer table",
          email: "E-mail",
          emailAddress: "Adresse e-mail",
          emailAlreadyRegistered: "Cette adresse email est déjà enregistrée.",
          emailBody: "Contenu",
          emailMissing: "Veuillez fournir une adresse email valide.",
          emailNotRegistered:
            "Désolé, cette adresse email n'est pas enregistrée.",
          emailOrUserName: "E-mail",
          emailSubject: "Objet",
          empty: "(vide)",
          emptyLayout: "Vide",
          emptyValue: "Vide",
          endColor: "Couleur finale",
          endsWith: "Se termine par",
          enterQuery: "Saisissez une requête",
          enterTableName: "Veuillez introduire un nom pour la table",
          enterViewName: "Nom de la vue",
          errorAmbiguousFieldName: "Les noms des champs ne sont pas clairs",
          errorAmbiguousTypeName: "Les noms des tables ne sont pas clairs",
          errorCannotPostToYourself: "Moins de monologues, merci.",
          errorCannotUpdateReverse: "Il est impossible d'écrire dans ce champ",
          errorConcurrentSchemaModification:
            "L'application a déjà été modifiée par un autre utilisateur. Vos paramètres n'ont pas été enregistrés.",
          errorEndOfStringExpected: "Fin attendue",
          errorExpressionExpected: "Expression attendue",
          errorFailedToDeleteFile: "Un fichier n'a pas pu être supprimé",
          errorFieldIsNoDataField:
            "Cette colonne n'est pas un simple champ de données",
          errorFieldIsNoLinkField: "Cette colonne n'est pas liée à une table",
          errorFieldNotFound: "Une colonne n'a pas été trouvée",
          errorFieldTypeMismatch:
            "Les types de données ne sont pas compatibles",
          errorFileNotFound: "Un fichier n'a pas été trouvé",
          errorGET:
            "Le serveur ne répond pas. Veuillez vérifier l'état de votre connexion Internet.",
          errorHTTPMethodUnsupported:
            "La méthode HTTP n'est pas prise en charge",
          errorIdExpected: "Identificateur attendu",
          errorImageConversionFailed:
            "Un fichier image n'a pas pu être converti",
          errorInvalidFieldName: "Le nom de champ n'est pas valide",
          errorInvalidParameter: "Un paramètre n'est pas valide",
          errorInvalidRequestBody: "Le contenu de la requête n'est pas valide",
          errorInvalidTypeName: "Le nom de table n'est pas valide",
          errorInvalidViewCaption: "Le nom de la vue n'est pas valide",
          errorLicenseMaxRecordsExceeded:
            "Vous avez atteint le nombre maximum d'enregistrements autorisés par votre licence",
          errorMissingFieldName: "Le champ n'a pas de nom",
          errorMissingRequestBody: "La requête au serveur n'a pas de contenu",
          errorMissingRequestParameter:
            "Il manque un paramètre dans la requête au serveur",
          errorMissingTypeName: "La table n'a pas de nom",
          errorNodeNotFound: "Un enregistrement n'a pas pu être trouvé",
          errorNotAuthorized:
            "Vous n'êtes pas autorisé à effectuer cette action",
          errorServerNotResponding:
            "Le serveur ne répond pas. Veuillez vérifier l'état de votre connexion au réseau.",
          errorSymbolExpected: "Symbole attendu",
          errorTemplateTypeUnsupported:
            "Ce type de fichier n'est pas pris en charge comme modèle d'exportation. Veuillez utiliser des fichiers Microsoft Excel.",
          errorTypeNotFound: "Une table n'a pas été trouvée",
          errorUnexpectedSymbol: "Symbole inattendu",
          errorValidationFailed: "La valeur n'est pas valide",
          errorValueExpected: "Valeur attendue",
          everybody: "tous",
          evictDatabase: "Vider les caches",
          executeQuery: "Exécuter la requête",
          executeTriggers: "Exécuter les déclencheurs",
          executeUpdate: "Effectuer les modifications",
          expandAll: "Afficher tous",
          expired: "Expiré",
          exportCSV: "Exportation CSV",
          exportData: "Exporter des données",
          exportXLS: "Exportation Excel",
          false: "Faux",
          field: "Champ",
          fieldCaption: "Nom du champ",
          fields: "Champs",
          fieldType: "Type de données",
          fieldWidth: "Largeur",
          fieldWidth1Col: "1 colonne",
          fieldWidth2Col: "2 colonnes",
          fieldWidth3Col: "3 colonnes",
          fieldWidth4Col: "4 colonnes",
          fileHandling: "Manipuler le fichier comme",
          files: "Fichiers joints",
          filter: "Filtre",
          FindIn$: " Rechercher en $",
          fiveDays: "5 jours",
          fixedHeight: "Hauteur fixe",
          fnInvalidComparator: "Comparateur non valide",
          fnInvalidExpression: "Expression non valide",
          fnInvalidNumber: "Valeur numérique non valide",
          fnInvalidOperator: "Opérateur non valide",
          fnInvalidParameter: "Un des paramètres n'est pas valide",
          fnInvalidReturnType:
            "L'expression donne une valeur de retour non valide",
          fnMissingParameter: "Il manque un paramètre",
          fnNotABoolean: "Ce n'est pas une valeur de type Oui/Non",
          fnReturnsMultipleValues: "L'expression donne des résultats multiples",
          fnReturnsSingleValue: "L'expression ne donne qu'un seul résultat",
          fnReturnTypeMismatch:
            'Les expressions "alors" et "sinon" donnent différents types de données',
          fnUndefinedAggregation: "L'agrégation n'est pas définie",
          fnUndefinedFunction: "La fonction n'est pas définie",
          fnUnknowError: "Une erreur imprévue s'est produite",
          fnUnsupportedAggregation:
            "Cette agrégation n'est pas définie pour ce type de données",
          footer: "Pied de page",
          forgotPassword: "Mot de passe oublié?",
          forgotPasswordSuccess:
            "Veuillez consulter votre boîte Email, afin de réinitialiser votre mot de passe",
          form: "Formulaire",
          format: "Format",
          formView: "Table avec formulaire",
          freetext: "Description",
          fromDate: "Du",
          fromDropbox: "Depuis la Dropbox",
          fromICloudDrive: "iCloud Drive",
          fromLocal: "De l'appareil",
          fullName: "Nom complet",
          function: "Formule",
          gantt: "GANTT",
          generate: "Produire",
          globalCode: "Définitions de script globales",
          globalSearch: "Recherche globale",
          gotoFirst: "Aller au premier",
          gotoLast: "Aller au dernier",
          gotoNext: "Aller à la prochaine",
          gotoPrev: "Aller à la précédente",
          gotoToday: "Aujourd'hui",
          gradient: "Dégradé",
          grey: "Gris",
          grouped: "Regroupé",
          grouping: "Regroupement",
          groupingSeparatorLabel: "Séparateur de groupe",
          hasIndex: "Indice",
          haveAnAccount: "Ja tens un compte?",
          header: "En-tête",
          headFoot: "En-tête / Pied de page",
          headline: "Titre",
          heartNinox: "Noter Ninox",
          height: "Hauteur",
          help: "Aide",
          hidden: "Invisible",
          hideColumn: "Masquer la colonne",
          hintAddFields: "Créer des champs de données",
          hintCreateDatabase: "Créer une nouvelle base de données",
          hintCreateTable: "Créer une nouvelle table",
          hintEnterTableName: "Entrer le nom de la table",
          history: "Historique des modifications",
          home: "Page d'accueil",
          horizontalPosition: "Position horizontale",
          hours: "Heures",
          icloudDrive: "iCloud Drive",
          icon: "Symbole",
          iconWithout: "(sans)",
          id: "ID",
          image: "Image",
          imageSize: "Taille",
          imageSizeLarge: "Grand",
          imageSizeMedium: "Moyen",
          imageSizeOriginal: "Format original",
          imageSizeSmall: "Petit",
          import: "Importer",
          importAmbiguous: "Lignes ambiguës",
          importAmbiguousSkip: "Sauter",
          importAmbiguousUpdateAll: "Tout mettre à jour",
          importArchive: "Importer une archive",
          importAvailableFields: "Champs disponibles",
          importChooseCSVFile: "Importer un fichier CSV...",
          importChooseDatabase:
            "Veuillez sélectionner la base de données dans laquelle vous souhaitez importer les données.",
          importChooseFile: "Importer un fichier...",
          importChooseURL: "Importer depuis une URL",
          importContacts: "Importer mes contacts",
          importCreateTable: "Importer dans une nouvelle table",
          importData: "Importer des données",
          importDatabase: "Importer la base de données",
          importDatabaseName: "Entrer un nom pour la base de données",
          importDescription:
            "Vous pouvez importer des fichiers texte et CSV en les ouvrant avec Ninox à partir d'une autre application (mail, par exemple).",
          importEnterURL:
            "Veuillez saisir l'URL à partir de laquelle les données doivent être importées",
          importExecute: "Importer les données maintenant",
          importFailed: "L'importation a échoué",
          importFieldMode: "Mode",
          importFieldModeKeyExact: "Clé",
          importFieldModeUpdateAlways: "Tout mettre à jour",
          importFieldModeUpdateEmpty:
            "Mettre à jour uniquement les champs vides",
          importFields: "Champs à importer",
          importFromAnotherDatabase:
            "Importer à partir d'une autre base de données",
          importHeader: "La première ligne est l'en-tête",
          importIntoField: "Importer dans ce champ",
          importMode: "Quelles données?",
          importModeAll: "Tous",
          importModeInvalid:
            "Un mode d'importation incorrect a été sélectionné pour une colonne",
          importModeNew: "Ajouter uniquement les nouvelles lignes",
          importModeNotSpecified:
            "Aucun mode d'importation n'a été sélectionné pour une colonne",
          importModeUpdate: "Mettre à jour uniquement les lignes existantes",
          importNoDatabasesDefined:
            "Vous n'avez pas encore créé de base de données. Les données ne peuvent donc pas être importées.",
          importNoDataFound: "Le fichier ne contient pas de données.",
          importPreview: "Aperçu des modifications à effectuer",
          importSelectFile: "Sélectionnez un fichier CSV",
          importSourceSettings: "Source de données",
          importSuccessful: "Importation réussie",
          importTable: "Dans quelle table voulez-vous importer les données?",
          importTargetSettings: "Paramètres d'importation",
          importTooManyFilesSelected:
            "Vous ne pouvez importer qu'un seul fichier.",
          include: "Inclure",
          includeData: "Copier les enregistrements",
          includeDataShort: "Données",
          includeFiles: "Copier les fichiers",
          includeFilesShort: "Fichiers",
          installTemplate: "Installer un modèle",
          installTemplateOkay: "Installer maintenant",
          invalidBoolean: "Valeur Oui/Non incorrecte",
          invalidChoice: "Choix non valide",
          invalidCredentials:
            "Courriel ou mot de passe - quelque chose ne va pas.",
          invalidDatabaseName:
            "Le nom de la base de données n'est pas valide. Il ne peut contenir aucun caractère spécial.",
          invalidEncoding:
            "Impossible de lire le fichier. Veuillez sélectionner un autre jeu de caractères.",
          invalidFileName: "Nom de fichier invalide",
          invalidFunction: "La formule n'est pas valide",
          invalidNumber: "Nombre non valide",
          invalidNumberMax: "La valeur est trop grande",
          invalidNumberMin: "La valeur est trop petite",
          invalidPassword:
            "Le mot de passe n'est pas valide. Il doit contenir au moins 6 caractères.",
          invalidRequired: "Veuillez introduire une valeur",
          invalidRoleCaption: "Le nom du rôle n'est pas valide",
          invalidRoleRoles: "Rôles non valides.",
          invalidString: "Ce n'est pas une chaîne de caractères",
          invalidStringMaxLength:
            "Le texte est trop long. Nombre maximum de caractères:",
          invalidStringMinLength:
            "Le texte est trop court. Nombre minimum de caractères:",
          invalidStringREMatch:
            "La valeur ne correspond pas à l'expression régulière.",
          invalidTeamName:
            "Nom d'équipe incorrect, veuillez en choisir un autre.",
          invalidUserEMail:
            "L'adresse e-mail de l'utilisateur n'est pas valide.",
          invalidUserFirstName: "Le prénom de l'utilisateur n'est pas valide.",
          invalidUserId: "L'identifiant utilisateur n'est pas valide.",
          invalidUserLastName:
            "Le nom de famille de l'utilisateur n'est pas valide.",
          invalidUserName: "Le nom d'utilisateur n'est pas valide.",
          invalidUserRoles: "Les rôles utilisateur ne sont pas valides.",
          invitation: "Invitation",
          invitations: "Invitations",
          invite: "Inviter",
          inviteCode: "Code d'invitation",
          invitedAt: "Invité à",
          invitedFrom: "Invité de",
          inviteHead: "Inviter un coéquipier",
          kanban: "Kanban",
          kanbanRecommend:
            "Kanban fonctionne mieux avec les champs de choix. Champs recommandés:",
          language: "La langue",
          later: "Plus tard",
          latestChanges: "Dernières modifications",
          latitude: "Latitude",
          layoutElement: "Élément de mise en page",
          leaveTeam: "Quitter cette équipe",
          leaveTeamConfirm: "Voulez-vous vraiment quitter cette équipe?",
          leaveThisTeam: "Quitter cette équipe",
          left: "À gauche",
          licensed: "sous licence",
          licensedTo: "pour",
          licenseExpires: "jusqu'au",
          licenseInvalid:
            "La licence d'utilisation de Ninox a expiré. Veuillez la renouveler.",
          lineHeight: "Espacement entre les lignes",
          linkConfig: "Relation",
          linked: "lié à",
          linkFrom: "Lien de",
          linkPreview: "Afficher l'aperçu",
          linkTo: "Lié à",
          list: "Liste",
          localization: "Localisation",
          LocalizationAddLocaleColumnHeader: "+ Ajouter un local",
          LocalizationDefaultColumnHeader: "Par défaut",
          LocalizationModuleColumnHeader: "Module",
          logic: "Logique",
          login: "Connexion",
          login2: "Connexion",
          loginAttempts:
            "Trop de tentatives de connexion infructueuses. Nous avons verrouillé votre compte pendant 24 h. Veuillez contacter votre administrateur pour le débloquer plus tôt.",
          logout: "Déconnexion",
          longitude: "Longitude",
          manageBackups: "Gérer les sauvegardes",
          margins: "Marges",
          matchPasswords: "Les mots de passe ne correspondent pas",
          maxUsers: "Jusqu'à $1 membres de l'équipe.",
          messages: "Messages",
          missingUserName: "Nom d'utilisateur requis.",
          modeText: "Texte",
          modeVisual: "Visuel",
          modified: "Modifié",
          modifiedAt: "le",
          modifiedDate: "Modifié le",
          modifiedUser: "Modifié par",
          month: "Mois",
          month_apr: "Avril",
          month_aug: "Août",
          month_dec: "Décembre",
          month_feb: "Février",
          month_jan: "Janvier",
          month_jul: "Juillet",
          month_jun: "Juin",
          month_mar: "Mars",
          month_may: "Mai",
          month_nov: "Novembre",
          month_oct: "Octobre",
          month_sep: "Septembre",
          monthly: "Mensuel",
          months: "Mois",
          moveToBack: "Arrière-plan",
          moveToFront: "Premier plan",
          mustAgreeTerms:
            "Vous devez accepter nos termes et conditions pour accéder à Ninox Cloud.",
          myDatabases: "Mes bases de données",
          name: "Nom",
          new: "Nouveau",
          newField: "Créer champ",
          newOldPassword: "Vous ne pouvez pas utiliser un ancien mot de passe",
          newPassword: "Entrer le nouveau mot de passe",
          newReport: "Nouvelle mise en page",
          newTeam: "Créer une nouvelle équipe",
          newView: "Nouvelle vue",
          next: "Suivant",
          ninoxCloudSync: "Synchronisation Ninox Cloud",
          ninoxForTeams: "Visitez notre site Internet",
          no: "Non",
          noCalendarAccess:
            "Veuillez autoriser Ninox à accéder à votre calendrier dans les paramètres système.",
          noCalendarEntries: "Pas d'entrées",
          noColor: "Aucune couleur",
          nodeNotFound:
            "L'enregistrement n'a pas été trouvé. Il a peut-être été supprimé.",
          noGrouping: "Annuler le regroupement",
          none: "(vide)",
          noNeedToResetPassword:
            "Pas besoin de réinitialiser votre mot de passe?",
          notAuthorized:
            "Vous n'avez pas les droits nécessaires pour effectuer cette action.",
          notConnected: "Vous êtes actuellement hors connexion. ",
          noTeamName: "S'il vous plaît choisir un nom d'équipe.",
          noTemplate: "Commencez par une base de données nouvelle et vide.",
          notEmpty: "(non vide)",
          notLoggedIn: "Pas connecté",
          numberFormat: "Format des nombres",
          numberFormatDigits: "Chiffres",
          numberFormatGroup: "Séparateur de milliers",
          numberFormatPrefix: "Préfixe",
          numberFormatUnit: "Unité",
          numberMax: "Maximum",
          numberMin: "Minimum",
          numberValue: "Valeur numérique",
          of: "de",
          okay: "OK",
          oldPassword: "Veuillez saisir votre mot de passe actuel",
          oneAdminRequired:
            "Il doit y avoir au moins un autre administrateur dans cette équipe.",
          oneDay: "1 jour",
          onlineHelp: "Manuel",
          op_abs: "valeur absolue",
          op_age: "âge",
          op_and: "et",
          op_contains: "contient",
          op_date: "date",
          op_day: "jour",
          op_days: "Jours",
          op_duration: "durée",
          op_end: "fin",
          op_false: "Non",
          op_format: "formater",
          op_if: "si / alors / sinon",
          op_if_else: "sinon",
          op_if_if: "si",
          op_if_then: "alors",
          op_index: "indice",
          op_like: "comme",
          op_lower: "minuscule",
          op_lpad: "remplir à gauche",
          op_month: "mois",
          op_not: "non",
          op_now: "Maintenant",
          op_number: "en nombre",
          op_or: "ou",
          op_round: "arrondir",
          op_rpad: "remplir à droite",
          op_sign: "signe",
          op_start: "début",
          op_string: "Texte",
          op_substr: "sous-chaîne de caractères",
          op_text: "en texte",
          op_today: "aujourd'hui",
          op_trim: "sans espace",
          op_true: "Oui",
          op_upper: "majuscule",
          op_week: "semaine",
          op_weekday: "jour de la semaine",
          op_workdays: "Jours ouvrables",
          op_year: "année",
          op_yearmonth: "année/mois",
          op_yearquater: "trimestre",
          op_yearweek: "année/semaine",
          openIn: "Ouvrir dans",
          operationInProgress: "L'opération demandée est déjà en cours",
          operator: "Opérateur",
          options: "Options",
          original: "Original",
          otherOptions: "Autres options",
          padding: "Marge intérieure",
          page: "Page",
          pageBody: "Corps de page",
          pageFoot: "Pied de page",
          pageHead: "En-tête",
          pages: "Pages",
          palette: "Palette",
          paperFormat: "Format de papier",
          password: "Mot de passe",
          passwordContainNumber: "un numéro, ",
          passwordMismatch: "Mot de passe erroné, veuillez réessayer.",
          passwordRestrict: "Le mot de passe doit avoir",
          passwordSpecificLength: "au moins 8 caractères",
          paste: "Coller",
          perMonth: "par mois",
          perYear: "par an",
          photo: "Photo",
          photoLibrary: "Photothèque",
          pickGroupColumn: "Veuillez choisir une colonne de regroupement.",
          planCurrent: "Plan actuel",
          planCurrentCovers: "Votre plan actuel couvre $1 utilisateurs.",
          planExpired: "Nous avons remarqué que votre plan a expiré.",
          planExpiredMember:
            "Le plan pour cette équipe a expiré. Veuillez contacter le propriétaire de l'équipe ($1) et lui demander de mettre à jour son plan.",
          planGetNow: "Obtenez maintenant Ninox Cloud pour $1 utilisateurs.",
          planGetNowCTA: "Obtenez un abonnement",
          planNone: "Le plan a expiré.",
          planOverused:
            "Votre plan actuel ne couvre pas tous les membres de votre équipe.",
          planPurchaseOther: "Ce plan a été acheté avec $1.",
          planRenewsAt: "Cet abonnement sera renouvelé à: $1.",
          planSave: "sauvegarder",
          planTerms:
            "Cet abonnement donne accès à Ninox Cloud pour vos membres et votre équipe à partir de tous les appareils avec l'application Ninox et également avec le navigateur Web. Le paiement sera débité du compte iTunes à la confirmation de l'achat. Cet abonnement est automatiquement renouvelé, sauf si le renouvellement automatique est désactivé au moins 24 heures avant la fin de la période en cours. Votre compte sera facturé pour le renouvellement dans les 24 heures avant la fin de la période en cours, et identifier le coût du renouvellement. Les abonnements peuvent être gérés par l'utilisateur et le renouvellement automatique peut être désactivé en accédant aux paramètres du compte de l'utilisateur après l'achat. Toute partie inutilisée d'une période d'essai gratuite, si elle est offerte, sera perdue lorsque l'utilisateur achète un abonnement à cette publication, le cas échéant. Avec votre achat, vous acceptez les <a href=\"https://ninoxdb.de/ninox/en/privacy.html\"> Règles de confidentialité </a> et le <a href=\"https://ninox.com/ninox/en/terms.html\">Termes et conditions</a>.",
          planTrial: "Vous êtes sur un plan d'essai gratuit.",
          planTrialExpiresAt: "L'abonnement d'essai expire le",
          planUnknown:
            "Désolé, nous ne pouvons pas déterminer votre plan actuel. Veuillez contacter support@ninox.com.",
          planUsage: "Utilisation actuelle",
          planUsageCovered:
            "$1 utilisateurs sont couverts par d'autres régimes.",
          planUsageInfo: "Vous avez $1 membres dans $2 équipes.",
          planUsageRequired:
            "$1 utilisateurs doivent être couverts par votre plan.",
          planWrongUser:
            "Vous avez déjà un forfait avec un identifiant différent. Veuillez vous connecter avec l'e-mail suivant: 1 $",
          position: "Position",
          postCommentButton: "Envoyer",
          postCommentLabel: "Commenter",
          presets: "Prédéfinir",
          preview: "Aperçu",
          print: "Imprimer",
          printAll: "Tout",
          printAttachments: "Imprimer les images jointes",
          printFontSize: "Taille de police",
          printImages: "Imprimer les images",
          printNodeSettings: "Impression des enregistrements",
          printNow: "Imprimer maintenant",
          printOne: "Cette fiche",
          printPDF: "Imprimer PDF",
          printRendering: "Aperçu avant impression",
          printTableSettings: "Impression des tables",
          printView: "Aperçu avant impression",
          private: "Privat",
          problemsLoggingIn: "Vous ne pouvez pas vous connecter?",
          processBackground: "Processus en arrière-plan :",
          processDatabase: "Base de données",
          processHeadline: "Processus",
          processLogs: "Journaux",
          processName: "Processus",
          processRefresh: "Rafraîchir",
          processStatus: "Statut",
          processSubline:
            'Ici, vous pouvez voir tous les processus en cours (le cas échéant) dans votre compte. Via "Refresh", vous obtenez une mise à jour sur l\'état du processus',
          processTimeStarted: "Début",
          processTimeStopped: "Finir",
          processUser: "User",
          productPurchased: "Installé",
          profileImage: "Photo de profil",
          protectDatabase: "Protégez cette base de données",
          purchaseNow: "Achetez maintenant",
          query: "Exécuter la requête",
          queryExecuting: "La requête est exécutée...",
          radius: "Courbe",
          readableIf: "Lisible si",
          readRoles: "Lecture autorisée",
          rebuildThumbnails: "Reconstruire les vignettes",
          rebuildThumbnailsConfirm:
            "Voulez-vous vraiment reconstruire toutes les vignettes? Ce processus peut prendre un certain temps.",
          red: "Rouge",
          referenceLabel1N: "(1 : N)",
          referenceLabelFrom: "Relation entre",
          referenceLabelN1: "(N : 1)",
          referenceLabelTo: "et",
          refFinderSearch: "Veuillez entrer un mot-clé:",
          refFinderSearchCaption: "Chercher dans",
          register: "Créer un compte",
          registerNewsletter:
            "Tenez-moi au courant des mises à jour du produit.",
          reindex: "Reconstruire l'index",
          reIndexFiles: "Fichiers Reindex",
          reIndexFilesConfirm:
            "Voulez-vous vraiment réindexer les fichiers ? Ce processus peut prendre un certain temps.",
          reloginMessage: "Veuillez vous reconnecter pour continuer.",
          remove: "Supprimer",
          removeAllChoosen: "Supprimer les lignes sélectionnées",
          removed: "supprimé",
          removeField: "Supprimer le champ",
          removeFieldConfirm:
            "Voulez-vous supprimer ce champ de manière définitive? Les données associées seront perdues.",
          removeFile: "Supprimer le fichier",
          removeFromTeam: "Retirer de l'équipe",
          removeFromTeamConfirm:
            "Voulez-vous vraiment supprimer ce membre de votre équipe?",
          removeFromTeamHead: "Supprimer un membre de l'équipe",
          removeFromTeamOkay: "Retirer",
          removeNRecords: "Supprimer $ enregistrements",
          removeRecord: "Supprimer l'enregistrement",
          removeReference: "Supprimer la relation",
          removeTab: "Supprimer l'onglet",
          removeTable: "Supprimer la table",
          removeTeam: "Supprimer cette équipe",
          removeTeamConfirm:
            "Voulez-vous vraiment supprimer définitivement cette équipe? Cette opération ne peut pas être annulée. Toutes les données seront perdues.",
          removeView: "Supprimer la vue",
          rename: "Renommer",
          renameDatabase: "Renommer la base de données...",
          renameDatabaseOkay: "Renommer",
          renameDatabaseToName: "Entrer un nom pour la base de données",
          renameView: "Renommer la vue",
          reorganizeDatabase: "Réorganiser",
          repeat: "Répéter",
          repeatPassword: "Entrer une nouvelle fois le mot de passe",
          required: "Obligatoire",
          resendInvitation: "Renvoyer l'invitation",
          resendVerificationMail: "Renvoyer le mail de confirmation",
          resetPassword: "Réinitialisez votre mot de passe!",
          resetSchema: "Annuler les modifications",
          resetSync: "Réinitialiser la synchronisation",
          restoreAppStoreTransactions: "Restaurer mes achats précédents",
          restoreBackup: "Restaurer",
          result: "Résultat",
          resyncCloudDatabases: "Synchronisation iCloud",
          right: "Droite",
          role_editor: "Éditeur",
          roleCaption: "Nom du rôle",
          roleNotFound: "Le rôle n'a pas été trouvé.",
          roles: "Les droits d'accès",
          rolesExport: "Exporter des données",
          rolesImport: "Importer des données",
          rolesMassDataUpdate: "Modifications massives de données",
          rolesOpen: "Ouvrir la base de données",
          rolesPrint: "Imprimer des données",
          runConsole: "Exécuter",
          save: "Enregistrer",
          saveArchiveAs: "Enregistrer l'archive sous...",
          saveAs: "Enregistrer sous…",
          saveDataModelChanges:
            "Enregistrer les modifications apportées au modèle de données",
          saveImage: "Enregistrer l'image",
          saveProfile: "Desa el perfil",
          saveReport: "Enregistrer la mise en page",
          saveSchema: "Enregistrer les modifications",
          saveViewAs: "Enregistrer la vue sous...",
          schemaDirty: "Vous avez modifié l'application.",
          schemaSaveRequired:
            "Veuillez enregistrer les modifications apportées à l'application.",
          search: " Chercher",
          searchIn$: "Rechercher dans $",
          security: "Sécurité",
          select: "Sélectionner",
          selectAll: "Tout sélectionner",
          sendInvitation: "Envoyer une invitation",
          sendMail: "Envoyer un mail",
          sevenDays: "7 jours",
          share: "Partager",
          shareFile: "Partagez ce fichier",
          shareURL: "URL publique",
          shareView: "Partagez cette vue",
          sharing: "Partage",
          showAll: "Afficher toutes les lignes",
          showAs: "Affichage",
          showColumn: "Afficher colonne",
          showExtendedOptions: "Plus d'options",
          showHideColumns: "Modifier les colonnes...",
          showLess: "Montre moins",
          showMore: "Montre plus",
          showOnlyChoosen: "Afficher uniquement la sélection",
          showOnlyWorkHours: "Afficher uniquement les heures de travail",
          signature: "Signature",
          signIn: "Connexion",
          signinHead: "Connectez-vous à Ninox",
          signup: "Inscrivez-vous",
          signUpBusinessMessage:
            "Les clients professionnels bénéficient d'une assistance personnelle de notre Customer Success-Team.",
          signupCreateTeam: "Connectez-vous et créez une équipe",
          signupFree: "Inscription gratuite",
          signupHead: "Inscrivez-vous à Ninox Cloud",
          signUpHeader1_1: "Com planeja",
          signUpHeader1_2: "per utilitzar Ninox",
          signUpHeader2: "En quin compte voleu rebre la prova gratuïta?",
          signUpHeader3: "Completeu el vostre perfil si us plau",
          signUpNewsletter:
            "Sí, si us plau, afegiu-me al butlletí informatiu Ninox.",
          signupNewUser: "Inscrivez-vous comme nouvel utilisateur",
          signUpPrivacyPolicy: "Política de privacitat",
          size: "Taille",
          solid: "Unie",
          sort: "Trier",
          sortAscending: "Croissant",
          sortDescending: "Décroissant",
          sorting: "Tri",
          space: "Espace réservé",
          ssoErrorMessage:
            "Quelque chose ne fonctionne pas. Nous ne pouvons pas vous connecter pour le moment.",
          ssoErrorSupportCta:
            "Vous n'arrivez toujours pas à vous connecter? Veuillez contacter notre support.",
          ssoLogin: "SSO Login",
          ssoLogoutHeader: "Vous vous êtes déconnecté avec succès.",
          ssoLogoutMessage: "Veuillez vous reconnecter pour continuer.",
          startColor: "Démarrer la couleur",
          startsWith: "Commence avec",
          startTrial: "Comenceu la prova",
          staticImage: "Image statique",
          staticImagePhoto: "Image statique (photo)",
          stayWithPlan: "Reste avec ce plan",
          storageLocation: "Emplacement du fichier",
          storeOnICloudDrive: "Store sur iCloud Drive",
          stretch: "Étendue",
          stringLPad: "Padding à gauche",
          stringMaxLength: "Longueur maximale",
          stringMinLength: "Longueur minimale",
          stringMultiline: "Multiligne",
          stringRPad: "Padding à droite",
          style: "Style",
          subTable: "Sous-table",
          supportTicket: "Obtenir de l'aide",
          switchTeam: "Changer d’équipe ",
          switchToPlan: "Passer à ce plan",
          switchToPrintView: "Changer la vue",
          syncFilesFailed: "échoué",
          syncFilesToDownload: "Fichiers à télécharger",
          syncFilesToUpload: "Fichiers à télécharger",
          syncNow: "Synchroniser maintenant",
          syncProblemCheck: "Vérifiez les problèmes de synchronisation",
          syncSeq: "Séquence de synchronisation no.",
          syncState: "Statut de synchronisation",
          tab: "Onglet",
          table: "Table",
          tableCaption: "Nom de table",
          tableReference: "Lier à une table",
          tables: "Tables",
          tableView: "Table",
          takePhoto: "Prendre une photo",
          targetTable: "Destination",
          teamMember: "Membre de l'équipe",
          teamMembers: "Membres de l'équipe",
          teamName: "Nom de l'équipe",
          teamSettings: "Paramètres de l'équipe",
          templateRequired: "Modèle requis",
          templateRequiredContacts:
            'Pour pouvoir importer des contacts, vous devez installer le modèle de table "Gestion des contacts"',
          templateRequiredOkay: "Installer le modèle...",
          templates: "Modèles",
          termsDisclamer:
            "En crear un compte, accepteu el $Termes del servei$.",
          termsOfService: "Termes del servei",
          text: "Texte",
          textAndDate: "Texte / Date",
          thanksCloud: "Merci d'utiliser Ninox Cloud!",
          thisFieldsAreRequired: "Tots els camps són obligatoris.",
          time: "Heure",
          timeFmt: "Format de l'heure",
          timestampDefaultNow: "Maintenant",
          toDate: "Au",
          today: "Aujourd'hui",
          toggleSelection: "Inverser la sélection",
          tooltip: "Info-bulle",
          top: "Au dessus",
          transparent: "Transparente",
          triggerAfterCreate:
            "Lors d’un nouvel enregistrement, déclencher le script ",
          triggerAfterCreateShort: "Lors de la création ",
          triggerAfterOpen: "Déclencheur après ouverture",
          triggerAfterUpdate: "Déclencher après la mise à jour",
          triggerAfterUpdateShort: "Sur la mise à jour",
          trim: "Supprimer les espaces",
          true: "vrai",
          type_appointment: "Rendez-vous",
          type_boolean: "Oui / Non",
          type_br: "Renvoi à la ligne",
          type_button: "Bouton",
          type_chart: "Graphique",
          type_choice: "Sélection",
          type_color: "Couleur",
          type_custom: "Contrôle HTML personnalisé",
          type_date: "Date",
          type_datx: "Date (new)",
          type_email: "E-mail",
          type_file: "Image",
          type_fn: "Formule",
          type_head: "Titre",
          type_html: "Texte enrichi",
          type_icon: "Icône",
          type_link: "URL",
          type_list: "Sous-table",
          type_location: "Emplacement",
          type_multi: "Sélection multiple",
          type_number: "Nombre",
          type_object: "Objet",
          type_phone: "Téléphone",
          type_ref: "Relation",
          type_rev: "Relation",
          type_signature: "Signature",
          type_space: "Espace réservé",
          type_string: "Texte",
          type_string_multiline: "Texte (multiligne)",
          type_tab: "Onglet",
          type_text: "Texte libre",
          type_time: "Heure",
          type_timeinterval: "Durée",
          type_timestamp: "Date et heure",
          type_user: "Utilisateur",
          type_view: "Vue",
          typeExportTemplates: "Modèles d'exportation",
          typeMissmatchHtml:
            "Incompatibilité de type, ce champ doit renvoyer un html",
          typeMissmatchImage:
            "incompatibilité de type, ce champ doit retourner une image",
          unknowError: "Une erreur imprévue s'est produite.",
          unknown: "Inconnu",
          unknownError: "Erreur inconnue",
          unlink: "Supprimer la relation",
          unlinked: "Relation supprimée",
          unlockDatabase: "Déverrouiller cette base de données",
          unnamed: "(sans nom)",
          unprotectDatabase: "Supprimer la protection de cette base de données",
          unsavedChanges:
            "Les modifications suivantes n'ont pas pu être sauvegardées.",
          updateAllRecords: "Mettre à jour tous les enregistrements",
          updateAssistant: "Modification massive de données",
          updateAssistantExecute: "Exécuter",
          updateAssistantFormula: "Exécuter la requête suivante:",
          updateAssistantResults:
            "Résultats de la requête / modifications effectuées",
          updated: "modifié le",
          updateExpressionNotAllowed:
            "Cette formule peut ne pas modifier les données.",
          updateModeAssignFunction: "Assigner une valeur calculée",
          updateModeAssignNull: "Champ vide",
          updateModeAssignValue: "Assigner une valeur fixe",
          updateModeDontChange: "Ne pas modifier",
          updateSelectedRecords:
            "Mettre à jour uniquement les enregistrements sélectionnés",
          updateVisibleRecords:
            "Mettre à jour tous les enregistrements visibles",
          upgradePlan: "Mise à niveau plan",
          upgradeToPremium: "Mise à niveau",
          uploadBackgroundFile: "Télécharger une image d'arrière-plan",
          uploadFailed: "Le fichier n'a pas pu être téléchargé.",
          uploading: "Téléchargement du fichier...",
          usedPassword:
            "Vous ne pouvez pas utiliser ce mot de passe puisqu'il a déjà été utilisé.",
          user: "utilisateur",
          userName: "Nom d'utilisateur",
          userNotFound: "L'utilisateur n'a pas été trouvé.",
          users: "utilisateurs",
          uuid: "Identificateur global unique",
          validUntil: "Valable jusque",
          value: "Valeur",
          verifyEmail$:
            " Veuillez confirmer votre adresse e-mail $ pour continuer à utiliser Ninox. Pas d'email? Veuillez vérifier votre dossier spam.",
          verticalPosition: "Position verticale",
          view: "Vue",
          viewAs: "Affichage",
          visibilityRule: "Afficher ce champ seulement si:",
          visibilityRuleShort: "Afficher si",
          visibleColumns: "Colonnes visibles",
          visibleRows: "Lignes visibles",
          week: "Semaine",
          weeks: "Semaines",
          whatsnew: "Nouveautés",
          whatsnew1: "Graphes Kanban",
          whatsnew1Body:
            "Modifiez les couleurs, les icônes et l'ordre des voies Kanban en un seul clic.",
          whatsnew1Title: "Vues Kanban améliorées",
          whatsnew2: "Les diagrammes de Gantt",
          whatsnew2Body:
            "Réorganiser les éléments dans le volet de navigation par glisser-déposer",
          whatsnew2Title: "Navigation améliorée",
          whatsnew3: "Vue cartes / galerie",
          whatsnew3Body:
            "Utilisez des tableaux croisés dynamiques pour analyser vos données.",
          whatsnew3Title: "Nouvelle vue de tableau croisé dynamique",
          whatsnew4: "Vue formulaire",
          whatsnew5: "Style des titres et des éléments de texte libre",
          whatsnewa1: "Créez des bases de données de n'importe où.",
          whatsnewa2: "Synchronisez à partir de tous vos appareils.",
          whatsnewa3: "Collaborez avec votre équipe.",
          whatsnewa4: "Concevoir des maquettes d'impression.",
          whatsnewa5:
            "Créez des formulaires pour collecter facilement des données.",
          whatsnewDontShow: "Ne plus afficher",
          whatsnewFeatures: "Caractéristiques",
          whatsnewHelp: "Centre d'aide",
          whatsnewNext: "Prochain",
          whatsnewSkip: "Sauter",
          whatsnewStart: "Prêt à partir!",
          whatsnewSubscribe: "Rejoignez notre webinaire",
          whatsnewTitle: "Ninox pour Android",
          whatsnewVersion: "Version",
          width: "Largeur",
          workPhone: "Telèfon de la feina",
          writableIf: "Possibilité d’écrire si",
          writeRoles: "Écriture autorisée",
          wrongPassword: "Mot de passe incorrect.",
          wrongUserPassword: "Mot de passe ou nom d'utilisateur erroné.",
          xlsExportOpen: "Télécharger",
          xlsExportSaveAs: "Enregistrer sous...",
          years: "Années",
          yes: "Oui",
          yesterday: "hier",
          yourAccount: "Ton compte",
          zapierIntegration: "Intégration Zapier",
          zoom: "Zoom",
          dayNames: [
            "Dimanche",
            "Lundi",
            "Mardi",
            "Mercredi",
            "Jeudi",
            "Vendredi",
            "Samedi",
          ],
          dayNamesShort: ["Di", "Lu", "Ma", "Me", "Je", "Ve", "Sa"],
          monthNames: [
            "Janvier",
            "Février",
            "Mars",
            "Avril",
            "Mai",
            "Juin",
            "Juillet",
            "Août",
            "Septembre",
            "Octobre",
            "Novembre",
            "Décembre",
          ],
          agg: {
            cnt: "Total",
            count: "Total",
            sum: "Somme",
            avg: "Moyenne",
            min: "Min",
            max: "Max",
            first: "Premier",
            last: "Dernier",
            concat: "Concaténer",
            median: "Médiane",
            sort: "Trier",
            unique: "Unique",
          },
          types: {
            number: "Nombre",
            string: "Texte",
            string_multiline: "Texte (multiligne)",
            date: "Date",
            datx: "Date (new)",
            time: "Heure",
            timeinterval: "Durée",
            timestamp: "Date et heure",
            boolean: "Oui / Non",
            choice: "Sélection",
            multi: "Sélection multiple",
            list: "Sous-table",
            ref: "Relation",
            rev: "Relation",
            object: "Objet",
            html: "Texte enrichi",
            fn: "Formule",
            tab: "Onglet",
            head: "Titre",
            text: "Texte libre",
            br: "Renvoi à la ligne",
            space: "Espace réservé",
            file: "Image",
            link: "URL",
            email: "E-mail",
            phone: "Téléphone",
            appointment: "Rendez-vous",
            user: "Utilisateur",
            location: "Emplacement",
            icon: "Icône",
            color: "Couleur",
            custom: "Contrôle HTML personnalisé",
            button: "Bouton",
            signature: "Signature",
            view: "Vue",
            chart: "Graphique",
          },
        },
        pl: {
          accountInactive:
            "Konto jest nieaktywne przez więcej niż określoną ilość dni. Prosimy o kontakt z administratorem systemu.",
          accountLocked:
            "Konto jest zamknięte. Prosimy o kontakt z administratorem systemu.",
          actionRequiresPremium:
            "Prosimy o aktualizację na wersję Premium, aby odblokować tę funkcję.",
          actions: "Operacje",
          activateSharing: "Aktywuj udostępnianie",
          add: "Dodaj",
          addFile: "Dodaj plik",
          addRole: "Tworzenie nowej roli",
          addRowCreate: "Utwórz rekord",
          addRowFind: "Dodaj istniejący rekord",
          addRowFindCreate: " Wyszukaj lub utwórz rekord",
          addRule: "Dodaj regułę",
          addTable: "Nowa tabela",
          admin: "Administracja",
          advancedOptions: "Opcje zaawansowane",
          agg_avg: "Średnia",
          agg_cnt: "Ilość",
          agg_concat: "Pokaż listę",
          agg_first: "Pierwszy",
          agg_last: "Ostatni",
          agg_max: "Maksimum",
          agg_median: "Mediana",
          agg_min: "Minimum",
          agg_sort: "Sortuj",
          agg_sum: "Suma",
          agg_unique: "Jednoznaczne",
          aggregation: "Stopka / Suma kolumny",
          agreeTerms: "Znam i akceptuję $1zasady i warunki$2.",
          all: "(wszystkie)",
          allChangesSaved: "Wszystkie dane są zabezpieczone",
          alreadyTrialPlan:
            "Jesteś już na planie próbnym dla chmury Ninox. Najpierw zaktualizuj swój plan, aby utworzyć kolejny zespół.",
          annual: "Roczny",
          anyFile: "Dowolny plik",
          appointmentBegin: "Od",
          appointmentEnd: "Do",
          apps: "Apps",
          askLater: "Zapytaj mnie później",
          atColumn: "Kolumna",
          atLine: "W wierszu",
          auto: "(auto)",
          autoHeight: "Automatyczna wysokość",
          autoLayout: "Utwórz automatycznie szablon",
          automatic: "Auto",
          availableColumns: "Dostępne dane",
          back: "Wstecz",
          background: "tło",
          backgroundColor: "Kolor tła",
          backgroundFileMustBeJPEG: "Użyj pliku JPEG jako tła",
          backgrounds: "Zdjęcie w tle",
          billedAnnually: "rozliczane corocznie",
          blue: "Niebieski",
          border: "Rama",
          borderStyle: "Rama tabeli",
          bottom: "Dolny",
          br: "Zawijanie wiersza",
          business: "Biznes",
          buyNow: "Kup teraz",
          calculate: "Kalkulacja",
          calculatedValue: "Kalkulacja",
          calendar: "Kalendarz",
          calendarCreateAppointmentField:
            "Utwórz pole terminu, w celu utworzenia wpisu w kalendarzu",
          calendarOptions: "Opcje kalendarza",
          calendarSyncAhead: "Miesiące na synchronizację z wyprzedzeniem",
          calendarSyncBeyond: "Miesiące się zsynchronizować",
          calendarSyncEnabled: "Włącz synchronizację kalendarza",
          calendarSyncLocation: "Miejsce przechowywania",
          calendarWeek: "TK",
          calendarWorkEnd: "Dzień pracy kończy się",
          calendarWorkStart: "Rozpoczyna się dzień roboczy",
          cancel: "Przerwij",
          cancelInvitation: "Anuluj zaproszenie",
          cancelInvitationConfirm: "Czy chcesz anulować to zaproszenie?",
          cancelUpload: "Przerwij",
          canFindIt: " Nie masz e-maila? Sprawdź folder ze spamem.",
          cannotChangeRole: "Roli nie można zmienić",
          cannotChangeUser: "Konta użytkownika nie wolno zmienić",
          cannotConnectAppStore:
            "Nie można połączyć ze sklepem. Spróbuj ponownie później.",
          cannotRemoveTeam: "Ten zespół nie może zostać usunięty",
          caption: "Nazwa",
          cards: "Karty",
          cascade: "Kompozycja",
          center: "Centrum",
          changePassword: "Zmiana hasła",
          chartBar: "Wykres słupkowy",
          chartBubble: "Wykres bąbelkowy",
          chartBubbleRequiresColumns:
            "Wykres bąbelkowy wymaga trzech kolumn numerycznych dla X, Y i promienia.",
          chartDatasets: "Seria danych",
          chartDatasetsCols: "Kolumny",
          chartDatasetsRows: "Wiersze",
          chartDoughnut: "Wykres pierścieniowy",
          chartLegend: "Legenda",
          chartLine: "Wykres liniowy",
          chartLineTension: "Wygładzone linie",
          chartNoData:
            "Brak plików do pokazania. Proszę zdefiniować minimum jedną numeryczną kolumnę",
          chartPie: "Wykres kołowy",
          chartPolarArea: "Wykres polar",
          chartRadar: "Wykres radarowy",
          chartStacked: "Wykres skumulowany",
          chartType: "Typ wykresu",
          chartView: "Wykres",
          chatPost: "Wiadomość",
          choiceAddValue: "Dodaj wartość",
          choiceValues: "Lista możliwych wartości",
          chooseFile: "Dodaj plik",
          choosen: "Wybór",
          choosePhoto: "Dodaj zdjęcie",
          chooseTeamName: "Nazwa drużyny",
          chooseTemplate: "Wybierz szablon",
          chooseTypeToExport: "Wybierz tabelę do eksportu",
          clear: "Jasny",
          clearBackground: "Wyczyść tło",
          clearChatHistory: "Wyczyść historię",
          clearHistory: "Wyczyść historię",
          clearSelection: "Anuluj wybór",
          close: "Zamknij",
          collapseAll: "Zamknij wszystkie",
          color: "Kolor",
          colorScheme: "Schemat kolorów",
          column: "Kolumna",
          commands: "Polecenia",
          commented: "skomentowane",
          comments: "Komentarze",
          company: "Firma",
          conditionalStyling: "Styl warunkowy",
          confirmClearHistory:
            "Czy na pewno historia wszystkich rekordów ma zostać usunięta? Tej akcji nie można cofnąć",
          confirmDropDatabase:
            "Czy na pewno ta baza danych ma zostać usunięta? Tej akcji nie można cofnąć",
          confirmEmail: "Proszę potwierdź swój adres E-mail",
          confirmInstallTemplate: "Czy szablon ma zostać zainstalowany",
          confirmReindex:
            "Ta akcja może dłużej potrwać i w tym czasie inny użytkownik nie może zapisywać zmian",
          confirmRemove: "Czy na pewno ten rekord ma zostać usunięty?",
          confirmRemoveAllChoosen:
            "Czy na pewno wszystkie wybrane rekordy mają zostać usunięte?",
          confirmRemoveChoiceValue:
            "Czy na pewno ta wartość ma zostać usunięta?",
          confirmRemoveFile: "Czy na pewno ten plik ma zostać usunięty?",
          confirmRemoveReference:
            "Czy na pewno to powiązanie ma zostać usunięte? Tej akcji nie można cofnąć",
          confirmRemoveTable:
            "Czy na pewno ta tabela ma zostać usunięta? Wszystkie zawarte w niej rekordy oraz pliki przepadają. Tej akcji nie można cofnąć",
          confirmRemoveView: "Czy na pewno ten podgląd ma zostać usunięty?",
          confirmReorganizeDatabase:
            "Baza danych zostanie reorganizowana i to urządzenie określone właścicielem bazy danych. Zmiany na innych urządzeniach które nie były synchronizowane przepadają",
          confirmSaveReport: "Czy zmiany tła mają zostać zapisane?",
          constantValue: "Stała wartość",
          constraint: "Ograniczenia",
          contactOwner: "Skontaktuj się z właścicielem zespołu",
          contacts: "Kontakty",
          contain: "Zawierać",
          containsSpecialCharacters: "wyjątkowy charakter",
          continueCloud: "Czy chcesz nadal korzystać z Ninox Cloud?",
          copy: "Kopiuj",
          copyToCalendar: "Skopiuj do mojego kalendarza",
          couldntRenameFile: "Plik nie może zmienić oznaczenia",
          country: "Kraj",
          cover: "Pokrywa",
          create: "Utwórz",
          createApp: "Utwórz nową App",
          createBackup: "Stworzyć kopię zapasową",
          createCalendarEntry: "Nowy wpis",
          createChoiceField: "Utwórz nowe pole wyboru",
          created: "utworzono",
          createDatabase: "Nowa baza danych",
          createDatabaseFromTemplate: "Nowa z szablonu",
          createDatabaseLocation: "Gdzie zapisać bazę danych?",
          createDatabaseName: "Wybierz nazwę bazy danych",
          createDatabaseOkay: "Utwórz bazę danych",
          createdDate: "Utworzone w",
          createdUser: "Utworzona przez",
          createField: "Utwórz nowe pole danych",
          createNewTeam: "Utwórz nowy zespół",
          createRecord: "Nowy rekord",
          createRecordRequiresPremium:
            "W tej bazie danych zostało utworzonych $ rekordów. Proszę aktualizować na wersję Premium",
          createReference: "Utwórz powiązanie z tabelą",
          createRoles: "Utwórz nowy rekordy",
          createTableFromTemplate: "Nowa z szablonu",
          createTeam: "Utwórz nowy zespół",
          createUI: "Dodaj elementy szablonu",
          csvDateFormat: "Format daty",
          csvDateFormatLocal: "Format lokalny",
          csvEncoding: "Kodowanie znaków",
          csvExportOpen: "Ściągać",
          csvExportSaveAs: "Zapisz jako...",
          csvFooter: "Stopka",
          csvHeader: "Nagłówek",
          csvLinefeed: "Zawijanie wiersza",
          csvNumberFormat: "Format liczb",
          csvNumberFormatComma: "1.023,42",
          csvNumberFormatField: "Według ustawień pola",
          csvNumberFormatPoint: "1023.42",
          csvQuote: "Oznaczenie tekstu",
          csvSeparator: "Separator",
          csvSeparatorTab: "Tabulacja",
          csvSepHeader: "Obejmują definicję separatora",
          currentPlan: "Obecny plan",
          custom: "Własny",
          cut: "Wytnij",
          database: "Baza danych",
          databaseLocationCloud: "iCloud",
          databaseLocationLocal: "Lokalnie",
          databaseName: "Nazwa bazy danych",
          dataChange: "Zmiana danych",
          dataField: "Pole danych",
          dataModel: "Model danych",
          date: "Data",
          dateCalendar: "Pokaż w kalendarzu",
          dateCalendarColor: "Z tą farbą",
          dateCalendarFormat: "Pokaż jako",
          dateDefaultToday: "Dziś",
          dateYearly: "Rocznica",
          day_fr: "Piątek",
          day_mo: "Poniedziałek",
          day_sa: "Sobota",
          day_short_fr: "Pi",
          day_short_mo: "Po",
          day_short_sa: "So",
          day_short_su: "Ni",
          day_short_th: "Cz",
          day_short_tu: "Wt",
          day_short_we: "Śr",
          day_su: "Niedziela",
          day_th: "Czwartek",
          day_tu: "Wtorek",
          day_we: "Środa",
          days: "Dni",
          daysLeft: "Pozostałe dni",
          decimalSeparatorLabel: "Separator dziesiętny",
          defaultAppName: "Moja App",
          defaultDateFormat: "dd.mm.yyyy",
          defaultValue: "Wartość standardowa",
          defineWorkHours: "Godziny pracy",
          deleteRoles: "Usuń rekordy",
          description: "Opis",
          dontExecuteTriggers: "Nie uruchamiaj wyzwalcza (Trigger)",
          dontHaveAccount: "Nie masz konta?",
          dontHaveAnAccount: "Nie masz konta?",
          dontImport: "(nie importuj)",
          dontRepeat: "Nie powtarzaj",
          download: "Pobieranie",
          dragColumnsHereToDefineView:
            "Przesuń pola danych tutaj w celu określenia widoku kolumn. Jeżeli tego nie uczynisz, będzie to zrobione automatycznie",
          dragFieldsHere: "Przeciągnij nowe pola do tego miejsca...",
          drawing: "Rysunek",
          dropbox: "Dropbox",
          dropDatabase: "Usuń bazę danych",
          dumpDatabase: "Pobierz kopię zapasową",
          duplicate: "Duplikuj",
          duplicateDatabase: "Duplikuj baze danych",
          duplicateDatabaseName:
            "Nazwa bazy danych jest już zajęta, wybierz inną nazwę",
          duplicateDatabaseOkay: "Duplikuj",
          duplicateDatabaseToName: "Nadaj nazwę bazie danych",
          duplicateRecord: "Duplikuj rekord",
          duplicateTable: "Duplikuj tabelę",
          duplicateTableName: "Nazwa jest już zajęta, proszę wybrać inną.",
          duplicateUserName: "Nazwa użytkownika jest już zajęta",
          editColumns: "Definiuj widoczne kolumny...",
          editField: "Edytuj pole danych",
          editFields: "Edytuj pole danych",
          editTable: "Edytuj tabelę",
          email: "Email",
          emailAddress: "Adres e-mail",
          emailAlreadyRegistered: "Ten adres email jest już zarejestrowany.",
          emailBody: "Zawartość",
          emailMissing: "Prosimy o wprowadzenie poprawnego adresu e-mail.",
          emailNotRegistered:
            "Przepraszamy, ten adres e-mail nie jest zarejestrowany.",
          emailOrUserName: "Email",
          emailSubject: "Dotyczy",
          empty: "(puste)",
          emptyLayout: "Puste",
          emptyValue: "Puste",
          endColor: "Zakończ kolor",
          endsWith: "Kończy się na",
          enterQuery: "Wpisz zapytanie",
          enterTableName: "Wpisz nazwę tabeli",
          enterViewName: "Nazwa podglądu",
          errorAmbiguousFieldName: "Nazwy pól nie są jednoznaczne",
          errorAmbiguousTypeName: "Nazwy tabeli nie są jednoznaczne",
          errorCannotPostToYourself: "Proszę mniej monologów.",
          errorCannotUpdateReverse: "Pole nie jest zapisywalne",
          errorConcurrentSchemaModification:
            "Aplikacja została już zmieniona przez innego użytkownika. Twoje ustawienia nie zostały przyjęte",
          errorEndOfStringExpected: "Oczekiwany koniec",
          errorExpressionExpected: "Oczekiwane wyrażenie",
          errorFailedToDeleteFile: "Pliku nie można usunąć",
          errorFieldIsNoDataField: "Kolumna tabeli nie jest polem danych",
          errorFieldIsNoLinkField:
            "Kolumna tabeli nie jest powiązaniem z tabelą",
          errorFieldNotFound: "Kolumnę tabeli nie znaleziono",
          errorFieldTypeMismatch: "Typy danych nie są kompatibilne",
          errorFileNotFound: "Pliku nie znaleziono",
          errorGET: "Serwer nie odpowiada. Sprawdź łącze internetowe",
          errorHTTPMethodUnsupported: "Metoda HTTP nie jest obsługiwana",
          errorIdExpected: "Oczekiwany identyfikator",
          errorImageConversionFailed: "Konwertowanie zdjęcia nie jest możliwe",
          errorInvalidFieldName: "Nazwa pola nieprawidłowa",
          errorInvalidParameter: "Nieprawidłowy parametr",
          errorInvalidRequestBody:
            "Nieprawidłowa zawartość zapytania do serwera",
          errorInvalidTypeName: "Nazwa tabeli nieprawidłowa",
          errorInvalidViewCaption: "Nieprawidłowa nazwa podglądu",
          errorLicenseMaxRecordsExceeded:
            "Maksymalna ilość rekordów została osiągnięta",
          errorMissingFieldName: "Pole nie ma nazwy",
          errorMissingRequestBody: "Brak zawartości w zapytaniu do serwera",
          errorMissingRequestParameter:
            "W zapytaniu do serwera brakuje parametru",
          errorMissingTypeName: "Tabela nie ma nazwy",
          errorNodeNotFound: "Nie znaleziono rekordu",
          errorNotAuthorized: "Dla tej akcji nie masz odpowiednich uprawnień",
          errorServerNotResponding:
            "Serwer nie odpowiada. Sprawdź łącze sieciowe",
          errorSymbolExpected: "Oczekiwany symbol",
          errorTemplateTypeUnsupported:
            "Ten typ pliku nie jest obsługiwany jako szablon do eksportu. Proszę używać plików programu Microsoft Excel.",
          errorTypeNotFound: "Tabeli nie znaleziono",
          errorUnexpectedSymbol: "Nieoczekiwany symbol",
          errorValidationFailed: "Nieprawidłowa wartość",
          errorValueExpected: "Oczekiwana wartość",
          everybody: "każdy",
          evictDatabase: "Wyczyść pamięć podręczną",
          executeQuery: "Wykonaj zapytanie",
          executeTriggers: "Uruchom wyzwalacz (Trigger)",
          executeUpdate: "Zapisz zmiany",
          expandAll: "Rozwiń wszystkie",
          expired: "Przedawniony",
          exportCSV: "Eksportuj do CSV",
          exportData: "Eksportuj dane",
          exportXLS: "Eksportuj do Excela",
          false: "FAŁSZYWY",
          field: "Pole",
          fieldCaption: "Nazwa pola",
          fields: "Pola",
          fieldType: "Typ danych",
          fieldWidth: "Szerokość",
          fieldWidth1Col: "1 Kolumna",
          fieldWidth2Col: "2 Kolumny",
          fieldWidth3Col: "3 Kolumny",
          fieldWidth4Col: "4 Kolumny",
          fileHandling: "Uchwyt jako plik",
          files: "Załączniki",
          filter: "Filter",
          FindIn$: " Szukaj w $",
          fiveDays: "5 dni",
          fixedHeight: "Stała wysokość",
          fnInvalidComparator: "Nieprawidłowy komparator",
          fnInvalidExpression: "Wyrażenie jest nieprawidłowe",
          fnInvalidNumber: "Nieprawidłowa wartość",
          fnInvalidOperator: "Nieprawidłowy operator",
          fnInvalidParameter: "Jeden parametr jest nieprawidłowy",
          fnInvalidReturnType:
            "Wyrażenie oddaje niewłaściwe wartości zwracanej",
          fnMissingParameter: "Brakuje jednego parametru",
          fnNotABoolean: "To nie jest wartość Tak/Nie",
          fnReturnsMultipleValues:
            "Wyrażenie oddaje wielokrotne wartości zwracanej",
          fnReturnsSingleValue:
            "Wyrażenie oddaje tylko jeden wynik wartości zwracanej",
          fnReturnTypeMismatch:
            "Wyrażenia dla „wtedy“ i „lub“ oddaje niewłaściwe wartości zwracanej",
          fnUndefinedAggregation: "Agregacja nie jest zdefiniowana",
          fnUndefinedFunction: "Funkcja nie jest zdefiniowana",
          fnUnknowError: "Wystąpił nie oczekiwany błąd",
          fnUnsupportedAggregation:
            "Agregacja dla tego typu danych nie jest możliwa",
          footer: "Stopka",
          forgotPassword: "Zapomniałeś hasła?",
          forgotPasswordSuccess:
            "Aby zresetować hasło, zapoznaj się ze swoją skrzynką pocztową",
          form: "Formularza",
          format: "Format",
          formView: "Tabela z formularza",
          freetext: "Opis",
          fromDate: "Od",
          fromDropbox: "Z Dropbox",
          fromICloudDrive: "Z dysku ICloud",
          fromLocal: "Z urządzenia",
          fullName: "Pełne imię i nazwisko",
          function: "Funkcja",
          gantt: "GANTT",
          generate: "Generować",
          globalCode: "Globalne definicje skryptów",
          globalSearch: "Wyszukiwanie globalne",
          gotoFirst: "Przejdź do pierwszego",
          gotoLast: "Przejdź do ostatniego",
          gotoNext: "Przejdź do następnej",
          gotoPrev: "Przejdź do poprzedniej",
          gotoToday: "Dziś",
          gradient: "Gradientu",
          grey: "Szary",
          grouped: "Zgrupowane",
          grouping: "Grupowanie",
          groupingSeparatorLabel: "separator grup",
          hasIndex: "Indeks",
          haveAnAccount: "Posiadasz już konto?",
          header: "Nagłówek",
          headFoot: "Nagłówek / Stopka",
          headline: "Nagłówek",
          heartNinox: "Oceń Ninox",
          height: "Wysokość",
          help: "Pomoc",
          hidden: "Ukryty",
          hideColumn: "Ukryj kolumnę",
          hintAddFields: "Utwórz kilka pól",
          hintCreateDatabase: "Utwórz nową bazę danych",
          hintCreateTable: "Utwórz nową tabelę",
          hintEnterTableName: "Wprowadź nazwę",
          history: "Historia zmian",
          home: "Strona startowa",
          horizontalPosition: "Pozycja pozioma",
          hours: "godziny",
          icloudDrive: "Dysk ICloud",
          icon: "Symbol",
          iconWithout: "(bez)",
          id: "Nr",
          image: "Obraz",
          imageSize: "Wielkość",
          imageSizeLarge: "Wielki",
          imageSizeMedium: "Średni",
          imageSizeOriginal: "Oryginalna wielkość",
          imageSizeSmall: "Mały",
          import: "Importuj",
          importAmbiguous: "Dwuznaczne wiersze",
          importAmbiguousSkip: "Przeskocz",
          importAmbiguousUpdateAll: "Aktualizuj wszystkie",
          importArchive: "Importowanie Archiwum",
          importAvailableFields: "Pola do dyspozycji",
          importChooseCSVFile: "Zaimportuj plik CSV...",
          importChooseDatabase:
            "Wybierz bazę danych do której mają być importowane dane",
          importChooseFile: "Importuj dane...",
          importChooseURL: "Import z URL",
          importContacts: "Importuj moje kontakty",
          importCreateTable: "Importuj do nowej tabeli",
          importData: "Importuj dane",
          importDatabase: "Importuj bazę danych",
          importDatabaseName: "Określ nazwę bazy danych",
          importDescription:
            "Możliwy import tekstu lub CSV z innej App (np. Mail), poprzez wybranie opcji otwórz w Ninox",
          importEnterURL: "Podaj adres URL z którego ma nastąpić import danych",
          importExecute: "Importuj dane teraz",
          importFailed: "Import się nie powiódł",
          importFieldMode: "Tryb",
          importFieldModeKeyExact: "Klucz",
          importFieldModeUpdateAlways: "Aktualizuj wszystkie",
          importFieldModeUpdateEmpty: "Aktualizuj tylko puste",
          importFields: "Pola do importu",
          importFromAnotherDatabase: "Import z innej bazy danych",
          importHeader: "Pierwszy wiersz jest tytułowy",
          importIntoField: "Importuj w to pole",
          importMode: "Jakie dane?",
          importModeAll: "Wszystkie",
          importModeInvalid:
            "Dla jednej kolumny został wybrany nieprawidłowy tryb importu",
          importModeNew: "Dodaj tylko nowe rekordy",
          importModeNotSpecified:
            "Dla jednej kolumny nie został wybrany tryb importu",
          importModeUpdate: "Aktualizuj tylko istniejące rekordy",
          importNoDatabasesDefined:
            "Dotychczas nie została utworzona baza danych, dlatego import danych nie jest możliwy",
          importNoDataFound: " Plik nie zawiera żadnych danych.",
          importPreview: "Podgląd realizowanych zmian",
          importSelectFile: "Wybierz plik CSV",
          importSourceSettings: "Źródło danych",
          importSuccessful: "Import zakończył się pomyślnie",
          importTable: "Do której tabeli ma nastąpić import?",
          importTargetSettings: "Ustawienia importu",
          importTooManyFilesSelected: "Można importować tylko jeden plik",
          include: "Łącznie",
          includeData: "Kopiuj rekordy",
          includeDataShort: "Dane",
          includeFiles: "Kopiuj pliki",
          includeFilesShort: "Plik",
          installTemplate: "Instaluj szablon",
          installTemplateOkay: "Instaluj teraz",
          invalidBoolean: "Nieprawidłowa wartość Tak/Nie",
          invalidChoice: "Nieprawidłowy wybór",
          invalidCredentials: "Email lub hasło - coś jest nie tak.",
          invalidDatabaseName:
            "Nazwa bazy danych nieprawidłowa. Nie może zawierać znaków specjalnych.",
          invalidEncoding:
            "Odczyt pliku nie jest możliwy. Wybierz inny kod znaków",
          invalidFileName: "Nieprawidłowa nazwa pliku",
          invalidFunction: "Wzór jest nieprawidłowy",
          invalidNumber: "Nieprawidłowy numer",
          invalidNumberMax: "Wartość jest zbyt wysoka",
          invalidNumberMin: "Wartość jest zbyt niska",
          invalidPassword:
            "Hasło jest nieprawidłowe. Musi składać się z minimum 6 znaków.",
          invalidRequired: "Wprowadź wartość",
          invalidRoleCaption: "Nazwa roli jest nieprawidłowa",
          invalidRoleRoles: "Podane role są nieprawidłowe",
          invalidString: "To nie jest String",
          invalidStringMaxLength:
            "Tekst jest zbyt długi. Maksymalna ilość znaków:",
          invalidStringMinLength:
            "Tekst jest zbyt krótki. Minimalna ilość znaków:",
          invalidStringREMatch: "Wartość nie pasuje do regularnego wyrażenia.",
          invalidTeamName: "Nieprawidłowa nazwa zespołu, wybierz inną.",
          invalidUserEMail: "Adres E-Mail użytkownika jest nieprawidłowy",
          invalidUserFirstName: "Imię użytkownika jest nieprawidłowe",
          invalidUserId: "Identyfikator użytkownika jest nieprawidłowy",
          invalidUserLastName: "Nazwisko użytkownika jest nieprawidłowe",
          invalidUserName: "Nazwa użytkownika jest nieprawidłowa",
          invalidUserRoles: "Role użytkownika są nieprawidłowe",
          invitation: "Zaproszenie",
          invitations: "Zaproszenia",
          invite: "Zaproś",
          inviteCode: "Kod zaproszenia",
          invitedAt: "Zaproszony na",
          invitedFrom: "Zaproszono od",
          inviteHead: "Zaproś kolegę",
          kanban: "Kanban",
          kanbanRecommend:
            "Kanban działa najlepiej z polami wyboru. Zalecane pola:",
          language: "Język",
          later: "Później",
          latestChanges: "Ostatnie zmiany",
          latitude: "Szerokość geograficzna",
          layoutElement: "Elementy szablonu",
          leaveTeam: "Zostaw ten zespół",
          leaveTeamConfirm: "Czy naprawdę chcesz opuścić ten zespół?",
          leaveThisTeam: "Zostaw ten zespół",
          left: "Lewo",
          licensed: "licencjowane",
          licensedTo: "dla",
          licenseExpires: "do",
          licenseInvalid:
            "Licencja na korzystanie z Ninox wygasła. Proszę odnowić licencję.",
          lineHeight: "Odstęp między wierszami",
          linkConfig: "Powiązanie z tabelą",
          linked: "powiązane z",
          linkFrom: "Link z",
          linkPreview: "Pokaż podgląd",
          linkTo: "Łączyć z",
          list: "Lista",
          localization: "Lokalizacja",
          LocalizationAddLocaleColumnHeader: "+ Dodaj Locale",
          LocalizationDefaultColumnHeader: "Domyślnie",
          LocalizationModuleColumnHeader: "Moduł",
          logic: "Logika",
          login: "Zaloguj się",
          login2: "Zaloguj się",
          loginAttempts:
            "Zbyt wiele nieudanych prób logowania. Zablokowaliśmy Twoje konto na 24 godziny. Skontaktuj się z administratorem, aby odblokować go wcześniej.",
          logout: "Wyloguj",
          longitude: "Długość geograficzna",
          manageBackups: "Zarządzanie kopiami zapasowymi",
          margins: "Krawędzie strony",
          matchPasswords: "Hasła nie pasują do siebie.",
          maxUsers: "Do $1 członków zespołu.",
          messages: "Wiadomości",
          missingUserName: "Podanie nazwy użytkownika jest wymagane.",
          modeText: "Tekst",
          modeVisual: "Wizualnie",
          modified: "opracowane",
          modifiedAt: "w",
          modifiedDate: "Ostanie zmiany w",
          modifiedUser: "Ostanie zmiany dokonał",
          month: "Miesiąc",
          month_apr: "Kwiecień",
          month_aug: "Sierpień",
          month_dec: "Grudzień",
          month_feb: "Luty",
          month_jan: "Styczeń",
          month_jul: "Lipiec",
          month_jun: "Czerwiec",
          month_mar: "Marzec",
          month_may: "Maj",
          month_nov: "Listopad",
          month_oct: "Październik",
          month_sep: "Wrzesień",
          monthly: "Miesięczny",
          months: "Miesięcy",
          moveToBack: "Tło",
          moveToFront: "Pierwszoplanowy",
          mustAgreeTerms:
            "Aby uzyskać dostęp do chmury Ninox, musisz zaakceptować nasze warunki.",
          myDatabases: "Moje bazy danych",
          name: "Nazwa",
          new: "Nowe",
          newField: "Nowe pole",
          newPassword: "Wpisz nowe hasło",
          newReport: "Nowy szablon",
          newTeam: "Utwórz nowy zespół",
          newView: "Nowy podgląd",
          next: "Dalej",
          ninoxCloudSync: "Synchronizuj z Ninox Cloud",
          ninoxForTeams: "Ninox w internecie",
          no: "Nie",
          noCalendarAccess:
            "Przyznaj Ninoxowi dostęp do kalendarza w ustawieniach systemu.",
          noCalendarEntries: "Brak wpisów",
          noColor: "Bez koloru",
          nodeNotFound: "Rekordu nie znaleziono (ewentualnie został usunięty).",
          noGrouping: "Rozgrupuj",
          none: "(brak)",
          noNeedToResetPassword: "Nie ma potrzeby resetowania hasła?",
          notAuthorized: "Brak niezbędnych uprawnień, aby wykonać tę akcję",
          notConnected: "Obecnie nie masz połączenia z Internetem.",
          noTeamName: "Wybierz nazwę zespołu.",
          noTemplate: "Zacznij od nowej i pustej bazy danych.",
          notEmpty: "(nie puste)",
          notLoggedIn: "Nie zalogowany",
          numberFormat: "Format liczb",
          numberFormatDigits: "Miejsc po przecinku",
          numberFormatGroup: "Separator tysięcy",
          numberFormatPrefix: "Prefiks",
          numberFormatUnit: "Jednostka",
          numberMax: "Maksimum",
          numberMin: "Minimum",
          numberValue: "Wartość numeryczna",
          of: "od",
          okay: "OK",
          oldPassword: "Podaj aktualne hasło",
          oneAdminRequired:
            "W tym zespole musi być co najmniej jeden inny użytkownik administracyjny.",
          oneDay: "1 dzień",
          onlineHelp: "Instrukcja",
          op_abs: "bezwzględna",
          op_age: "Wiek",
          op_and: "i",
          op_contains: "zawiera",
          op_date: "Data",
          op_day: "Dzień",
          op_days: "Dni",
          op_duration: "Okres czasu",
          op_end: "Koniec",
          op_false: "Nie",
          op_format: "format",
          op_if: "jeżeli / wtedy / lub",
          op_if_else: "lub",
          op_if_if: "jeżeli",
          op_if_then: "wtedy",
          op_index: "indeks",
          op_like: "w przybliżeniu jak",
          op_lower: "mały",
          op_lpad: "Od lewej do wypełnienia",
          op_month: "Miesiąc",
          op_not: "nie",
          op_now: "Teraz",
          op_number: "jako numer",
          op_or: "lub",
          op_rpad: "Od prawej do wypełnienia",
          op_sign: "Znak",
          op_start: "Start",
          op_string: "Tekst",
          op_substr: "Część stringu",
          op_text: "jako tekst",
          op_today: "Dziś",
          op_trim: "bez spacji",
          op_true: "Tak",
          op_upper: "duży",
          op_week: "Tydzień",
          op_weekday: "Dzień tygodnia",
          op_workdays: "Dni robocze",
          op_year: "Rok",
          op_yearmonth: "Rok/Miesiąc",
          op_yearquater: "Kwartał",
          op_yearweek: "Rok/Tydzień",
          openIn: "Otwórz w",
          operationInProgress: "Żądana operacja jest już w toku",
          operator: "Operator",
          options: "Opcje",
          original: "Oryginalny",
          otherOptions: "Inne opcje",
          padding: "Odstęp wewnętrzny",
          page: "Strona",
          pageBody: "Tekst ciągły",
          pageFoot: "Stopka",
          pageHead: "Nagłówek",
          pages: "Strony",
          palette: "Paleta",
          paperFormat: "Format papieru",
          password: "Hasło",
          passwordContainNumber: "numer, ",
          passwordMismatch: "Widocznie zrobiłeś literówkę w jednym z haseł",
          passwordRestrict: "Hasło musi mieć ",
          passwordSpecificLength: "co najmniej 8 znaków",
          paste: "Wklej",
          perMonth: "na miesiąc",
          perYear: "na rok",
          photo: "Zdjęcie",
          photoLibrary: "Archiwum zdjęć",
          pickGroupColumn: "Wybierz kolumnę grupowania.",
          planCurrent: "Obecny plan",
          planCurrentCovers: "Twój obecny plan obejmuje $1 użytkowników.",
          planExpired: "Zauważyliśmy, że Twój plan wygasł.",
          planExpiredMember:
            "Plan tego zespołu wygasł. Skontaktuj się z właścicielem zespołu ($1) i poproś go o uaktualnienie swojego planu.",
          planGetNow: "Pobierz teraz Ninox Cloud dla $1 użytkowników.",
          planGetNowCTA: "Uzyskaj subskrypcję",
          planNone: "Plan wygasł.",
          planPurchaseOther: "Ten plan został zakupiony w systemie $1.",
          planRenewsAt: "Subskrypcja zostanie odnowiona na: $1.",
          planSave: "Zapisać",
          planTerms:
            'Ta subskrypcja zapewnia dostęp do chmury Ninox dla członków Twojego i Twojego zespołu ze wszystkich urządzeń z aplikacją Ninox, a także z przeglądarką internetową. Płatność zostanie pobrana z konta iTunes po potwierdzeniu zakupu. Subskrypcja jest odnawiana automatycznie, chyba że automatyczne odnowienie zostanie wyłączone co najmniej 24 godziny przed końcem bieżącego okresu. Twoje konto zostanie obciążone opłatą za przedłużenie w ciągu 24 godzin przed końcem bieżącego okresu i określi koszt odnowienia. Subskrypcje mogą być zarządzane przez użytkownika, a automatyczne odnawianie może zostać wyłączone poprzez przejście do ustawień konta użytkownika po zakupie. Niewykorzystana część bezpłatnego okresu próbnego, jeśli zostanie zaoferowana, zostanie utracona, gdy użytkownik wykupi subskrypcję tej publikacji, w stosownych przypadkach. Przy zakupie wyrażasz zgodę na <a href="https://ninoxdb.de/ninox/en/privacy.html"> Politykę prywatności </a> i <a href="https://ninox.com/ninox/en/terms.html"> Warunki umowy </a>.',
          planTrial: "Masz bezpłatną subskrypcję próbną.",
          planTrialExpiresAt: "Subskrypcja próbna wygasa w dniu",
          planUnknown:
            "Niestety, nie możemy ustalić Twojego obecnego planu. Skontaktuj się z support@ninox.com.",
          planUsage: "Bieżące użycie",
          planUsageCovered: "$1 użytkowników objętych jest innymi planami.",
          planUsageInfo: "Masz $1 członków w $2 drużynach.",
          planUsageRequired: "$1 użytkowników musi być objętych Twoim planem.",
          planWrongUser:
            "Masz już plan z innym identyfikatorem. Zaloguj się za pomocą następującego adresu e-mail: $ 1",
          position: "Pozycja",
          postCommentButton: "Wyślij",
          postCommentLabel: "Komentarz",
          presets: "Ustawienia",
          preview: "Podgląd",
          print: "Drukuj",
          printAll: "Wszystko",
          printAttachments: "Drukuj załączone zdjęcia",
          printFontSize: "Wielkość czcionki",
          printImages: "Drukuj zdjęcia",
          printNodeSettings: "Drukuj pojedyńcze rekordy",
          printNow: "Drukuj teraz",
          printOne: "Tylko ten",
          printPDF: "Drukuj PDF",
          printRendering: "Podgląd druku",
          printTableSettings: "Druk tabeli",
          printView: "Podgląd wydruku",
          private: "Prywatny",
          problemsLoggingIn: "Nie możesz się zalogować?",
          processBackground: "Procesy tła:",
          processDatabase: "Baza danych",
          processHeadline: "Procesy",
          processLogs: "Dzienniki",
          processName: "Proces",
          processRefresh: "Odświeżać",
          processStatus: "Status",
          processSubline:
            "Tutaj możesz zobaczyć wszystkie uruchomione procesy (jeśli istnieją) na swoim koncie. Poprzez „Odśwież” otrzymasz aktualizację statusu procesu",
          processTimeStarted: "Początek",
          processTimeStopped: "Koniec",
          processUser: "Użytkownik",
          productPurchased: "Zainstalowane",
          profileImage: "Zdjęcie profilowe",
          protectDatabase: "Chroń tę bazę danych",
          purchaseNow: "Kup Teraz",
          query: "Wykonaj zapytanie",
          queryExecuting: "Zapytanie zostanie wykonane...",
          radius: "Promień",
          readableIf: "Czytelny, jeśli",
          readRoles: "Wolno czytać",
          rebuildThumbnails: "Odbuduj miniatury",
          rebuildThumbnailsConfirm:
            "Czy na pewno chcesz odbudować wszystkie miniatury? Ten proces może zająć trochę czasu.",
          red: "Czerwony",
          referenceLabel1N: "(1 : N)",
          referenceLabelFrom: "Powiązanie z",
          referenceLabelN1: "(N : 1)",
          referenceLabelTo: "z",
          refFinderSearch: "Wpisz szukaną frazę:",
          refFinderSearchCaption: " Szukać w",
          register: "Utwórz konto",
          registerNewsletter:
            "Chcę otrzymywać informacje o aktualizacjach produktów.",
          reindex: "Zbuduj nowy indeks",
          reIndexFiles: "Ponowne indeksowanie plików",
          reIndexFilesConfirm:
            "Naprawdę chcesz przeindeksować pliki? Ten proces może zająć trochę czasu.",
          reloginMessage: "Zaloguj się ponownie, aby kontynuować.",
          remove: "Usuń",
          removeAllChoosen: "Usuń wybrane wiersze",
          removed: "usunięte",
          removeField: "Usuń pole",
          removeFieldConfirm:
            "Czy chcesz usunąć pole danych? Jeżeli go usuniesz to powiązane dane zostaną utracone",
          removeFile: "Usuń plik",
          removeFromTeam: "Usuń z zespołu",
          removeFromTeamConfirm:
            "Czy na pewno chcesz usunąć tego członka ze swojego zespołu?",
          removeFromTeamHead: "Usuń członka z zespołu",
          removeFromTeamOkay: "Usunąć",
          removeNRecords: "Usuń $ rekordów",
          removeRecord: "Usuń rekord",
          removeReference: "Usuń powiązanie",
          removeTab: "Usuń zakładkę",
          removeTable: "Usuń tabelę",
          removeTeam: "Usuń tę drużynę",
          removeTeamConfirm:
            "Czy na pewno chcesz usunąć ten zespół na stałe? Nie można cofnąć tej operacji. Wszystkie dane zostaną utracone.",
          removeView: "Usuń podgląd",
          rename: "Zmień nazwę",
          renameDatabase: "Zmień nazwę bazy danych...",
          renameDatabaseOkay: "Zmień nazwę",
          renameDatabaseToName: "Podaj nową nazwę bazy danych",
          renameView: "Zmień nazwę podglądu",
          reorganizeDatabase: "Reorganizuj",
          repeat: "Powtarzać",
          repeatPassword: "Powtórz nowe hasło",
          required: "Wymagany wpis",
          resendInvitation: "Ponownie wyślij zaproszenie",
          resendVerificationMail: "Wyślij ponownie wiadomość weryfikacyjną",
          resetPassword: "Zresetuj swoje hasło!",
          resetSchema: "Odrzuć zmiany",
          resetSync: "Zerowanie synchronizacji",
          restoreAppStoreTransactions: "Przywróć moje ostatnie zakupy",
          restoreBackup: "Przywracać",
          result: "Wynik",
          resyncCloudDatabases: "Synchronizuj z ICloud",
          right: "Dobrze",
          role_editor: "Redaktor",
          roleCaption: "Nazwa roli",
          roleNotFound: "Roli nie znaleziono",
          roles: "Prawa dostępu",
          rolesExport: "Eksportuj dane",
          rolesImport: "Importuj dane",
          rolesMassDataUpdate: "Masowa zmiana danych",
          rolesOpen: "Otwórz bazę danych",
          rolesPrint: "Wydruk danych",
          runConsole: "Wykonać",
          save: "Zapisz",
          saveArchiveAs: "Zapisz Archiwum jako...",
          saveAs: "Zapisz jako",
          saveDataModelChanges: "Zapisz zmiany w modelu danych",
          saveImage: "Zapisać obraz",
          saveProfile: "Zapisz profil",
          saveReport: "Zapisz szablon",
          saveSchema: "Zapisz zmiany",
          saveViewAs: "Zapisz podgląd jako...",
          schemaDirty: "Dokonano zmian w aplikacji.",
          schemaSaveRequired:
            "Zapisz zmiany, zanim będzie można utworzyć rekord.",
          search: "Poszukiwać",
          searchIn$: "Szukaj w $",
          security: "Bezpieczeństwo",
          select: "Wybierz",
          selectAll: "Wybierz wszystko",
          sendInvitation: "Wyślij zaproszenie",
          sendMail: "Wyślij maila",
          sevenDays: "7 dni",
          share: "Dzielić",
          shareFile: "Udostępnij ten plik",
          shareURL: "Publiczny URL",
          shareView: "Udostępnij ten widok",
          sharing: "Dzielenie się",
          showAll: "Pokaż wszystko",
          showAs: "Pokaż jako",
          showColumn: "Pokaż kolumnę",
          showExtendedOptions: "Więcej opcji",
          showHideColumns: "Pokaż kolumny...",
          showLess: "Pokaż mniej",
          showMore: "Pokaż więcej",
          showOnlyChoosen: "Pokaż tylko wybrane",
          showOnlyWorkHours: "Tylko czas pracy",
          signature: "Podpis",
          signIn: "Zaloguj się",
          signinHead: "Zaloguj się do Ninox",
          signup: "Zarejestruj",
          signUpBusinessMessage:
            "Klienci biznesowi otrzymują osobiste wsparcie od naszego Customer Success-Team.",
          signupCreateTeam: "Zaloguj się i stwórz zespół",
          signupFree: "Zarejestruj się za darmo",
          signupHead: "Zarejestruj się w Ninox Cloud",
          signUpHeader1_1: "Jak planujesz",
          signUpHeader1_2: "używać Ninox",
          signUpHeader2:
            "Na jakim koncie chcesz otrzymać bezpłatną wersję próbną?",
          signUpHeader3: "Uzupełnij swój profil",
          signUpNewsletter: "Tak, dodaj mnie do biuletynu Ninox.",
          signupNewUser: "Zarejestruj się jako nowy użytkownik",
          signUpPrivacyPolicy: "Polityka prywatności",
          size: "Rozmiar",
          solid: "Jednolity",
          sort: "Sortuj",
          sortAscending: "Rosnąco",
          sortDescending: "Malejąco",
          sorting: "Sortuj",
          space: "Rezerwacja miejsca",
          ssoErrorMessage:
            "Coś nie działa. W tej chwili nie możemy Cię zalogować.",
          ssoErrorSupportCta:
            "Nadal nie możesz się zalogować? Prosimy o kontakt z naszym wsparciem.",
          ssoLogin: "SSO Login",
          ssoLogoutHeader: "Wylogowałeś się pomyślnie.",
          ssoLogoutMessage: "Zaloguj się ponownie, aby kontynuować.",
          startColor: "Rozpocznij kolor",
          startsWith: "Zaczynać z",
          startTrial: "Rozpocząć proces",
          staticImage: "Statyczny obraz",
          staticImagePhoto: "Statyczny obraz (zdjęcie)",
          stayWithPlan: "Pozostań przy tym planie",
          storageLocation: "Miejsce zapisu",
          storeOnICloudDrive: "Zapisz na dysk ICloud",
          stretch: "Rozciągać",
          stringLPad: "Od lewej do wypełnienia",
          stringMaxLength: "Maksymalna długość",
          stringMinLength: "Minimalna długość",
          stringMultiline: "Wieloliniowy",
          stringRPad: "Od prawej do wypełnienia",
          style: "Styl",
          subTable: "Tabela podrzędna",
          supportTicket: "Wsparcie techniczne",
          switchTeam: "Zespół przełączników",
          switchToPlan: "Przejdź do tego planu",
          switchToPrintView: "Zmiana podglądu",
          syncFilesFailed: "nie udało się",
          syncFilesToDownload: "Pliki do pobrania",
          syncFilesToUpload: "Pliki do przesłania",
          syncNow: "Synchronizuj teraz",
          syncProblemCheck: "Sprawdź problemy z synchronizacją",
          syncSeq: "Nr sekwencji synchronizacji",
          syncState: "Status synchronizacji",
          tab: "Zakładka",
          table: "Tabela",
          tableCaption: "Nazwa tabeli",
          tableReference: "Powiązanie z tabelą",
          tables: "Tabela",
          tableView: "Tabela",
          takePhoto: "Zrób zdjęcie",
          targetTable: "Cel",
          teamMember: "Członek zespołu",
          teamMembers: "Członkowie drużyny",
          teamName: "Nazwa drużyny",
          teamSettings: "Ustawienia zespołu",
          templateRequired: "Konieczny szablon",
          templateRequiredContacts:
            'Aby zaimportować kontakty, wymagany jest szablon "zarządzanie kontaktami"',
          templateRequiredOkay: "Instaluj szablon...",
          templates: "Szablony",
          termsDisclamer: "Tworząc konto, zgadzasz się na $Warunki usługi$.",
          termsOfService: "Warunki usługi",
          text: "Pole tekstowe",
          textAndDate: "Tekst / Data",
          thanksCloud: "Dziękujemy za korzystanie z Cloud Ninox!",
          thisFieldsAreRequired: "Proszę wypełnić pole",
          time: "Godzina",
          timeFmt: "Format czasu",
          timestampDefaultNow: "Teraz",
          toDate: "Do",
          today: "dziś",
          toggleSelection: "Odwróć wybór",
          tooltip: "Etykietka",
          top: "Top",
          transparent: "Przezroczysty",
          triggerAfterCreate: "Przy nowym rekordzie wykonaj następujący skrypt",
          triggerAfterCreateShort: "Przy utworzeniu",
          triggerAfterOpen: "Spust po otwarciu",
          triggerAfterUpdate: "Wykonaj po zmianach następujący skrypt",
          triggerAfterUpdateShort: "W przypadku zmiany",
          trim: "Usuń spacje",
          true: "PRAWDA",
          type_appointment: "Termin",
          type_boolean: "Tak / Nie",
          type_br: "Zawijanie wiersza",
          type_button: "Przycisk",
          type_chart: "Wykres",
          type_choice: "Wybór",
          type_color: "Kolor",
          type_custom: "Niestandardowe sterowania HTML",
          type_date: "Data",
          type_datx: "Data (new)",
          type_email: "Email",
          type_file: "Zdjęcie",
          type_fn: "Kalkulacja",
          type_head: "Nagłówek",
          type_html: "Tekst (formatowany)",
          type_icon: "Symbol",
          type_link: "URL",
          type_list: "Tabela podrzędna",
          type_location: "Lokalizacja",
          type_multi: "Wielokrotny wybór",
          type_number: "Numer",
          type_object: "Obiekt",
          type_phone: "Telefon",
          type_ref: "Powiązanie z tabelą",
          type_rev: "Powiązanie z tabelą",
          type_signature: "Podpis",
          type_space: "Rezerwacja miejsca",
          type_string: "Tekst",
          type_string_multiline: "Tekst (wieloliniowy)",
          type_tab: "Zakładka",
          type_text: "Dowolny tekst",
          type_time: "Godzina",
          type_timeinterval: "Okres czasu",
          type_timestamp: "Data + Godzina",
          type_user: "Użytkownik",
          type_view: "Widok",
          typeExportTemplates: "Szablon eksportu",
          typeMissmatchHtml: "Niezgodność typów, w tym polu musi zwracać html",
          typeMissmatchImage: "Niezgodność typu, to pole musi zwracać obraz",
          unknowError: "Wystąpił nieoczekiwany błąd.",
          unknown: "Nieznany",
          unknownError: "Nieznany błąd",
          unlink: "Usuń powiązanie",
          unlinked: "Powiązanie usunięte",
          unlockDatabase: "Odblokuj tę bazę danych",
          unnamed: "(bez nazwy)",
          unprotectDatabase: "Usuń ochronę tej bazy danych",
          unsavedChanges: "Następujące zmiany nie mogą zostać zapisane",
          updateAllRecords: "Aktualizuj wszystkie rekordy",
          updateAssistant: "Masowa zmiana danych",
          updateAssistantExecute: "Wykonaj",
          updateAssistantFormula: "Wykonaj następujące zapytanie:",
          updateAssistantResults: "Wynik zapytania / wykonane zmiany",
          updated: "zmienione na",
          updateExpressionNotAllowed:
            "Ta funkcja nie może wykonywać zmiany danych.",
          updateModeAssignFunction: "Przypisz wartość kalkulcji",
          updateModeAssignNull: "Puste pole",
          updateModeAssignValue: "Przypisz stałą wartość",
          updateModeDontChange: "Nie zmieniaj",
          updateSelectedRecords: "Aktualizuj tylko wybrane rekordy",
          updateVisibleRecords: "Aktualizuj wszystkie widoczne rekordy",
          upgradePlan: "Plan ulepszeń",
          upgradeToPremium: "Aktualizacja",
          uploadBackgroundFile: "Dodaj własne tło",
          uploadFailed: "Nie można dodać pliku.",
          uploading: "Wgrywanie pliku...",
          usedPassword:
            "Nie można używać tego hasła, ponieważ było ono wcześniej używane.",
          user: "użytkownik",
          userName: "Nazwa użytkownika",
          userNotFound: "Użytkownika nie znaleziono",
          users: "użytkowników",
          uuid: "Globalnie unikatowy identyfikator",
          validUntil: "Ważne do",
          value: "Wartość",
          verifyEmail$:
            " Potwierdź swój adres e-mail $, aby kontynuować korzystanie z Ninox. Nie masz e-maila? Sprawdź folder ze spamem.",
          verticalPosition: "Pozycja pionowa",
          view: "Podgląd",
          viewAs: "Wyświetl jako",
          visibilityRule: "Pokaż pole tylko wtedy, jeżeli...",
          visibilityRuleShort: "Pokaż jeżeli",
          visibleColumns: "Widoczne kolumny",
          visibleRows: "Widoczne wiersze",
          week: "Tydzień",
          weeks: "Tygodnie",
          whatsnew: "Whats' New?",
          whatsnew1: "Wykresy Kanban",
          whatsnew1Body:
            "Zmień kolory, ikony i kolejność pasów Kanban za pomocą jednego kliknięcia.",
          whatsnew1Title: "Poprawione widoki Kanban",
          whatsnew2: "Wykresy gantta",
          whatsnew2Body:
            "Zmień kolejność elementów w okienku nawigacji, przeciągając i upuszczając",
          whatsnew2Title: "Ulepszona nawigacja",
          whatsnew3: "Widok kart / galerii",
          whatsnew3Body: "Użyj tabel przestawnych do analizy danych.",
          whatsnew3Title: "Nowy widok tabeli przestawnej",
          whatsnew4: "Widok formularza",
          whatsnew5: "Stylizacja nagłówków i elementów tekstowych",
          whatsnewa1: "Tworzenie baz danych z dowolnego miejsca.",
          whatsnewa2: "Synchronizacja ze wszystkimi urządzeniami.",
          whatsnewa3: "Współpracuj ze swoim zespołem.",
          whatsnewa4: "Projektuj wzory wydruków.",
          whatsnewa5: "Zbudować formularze do łatwego zbierania danych.",
          whatsnewDontShow: "Nie pokazuj więcej",
          whatsnewFeatures: "funkcje",
          whatsnewHelp: "Centrum pomocy",
          whatsnewNext: "Kolejny",
          whatsnewSkip: "Pominąć",
          whatsnewStart: "Gotowy do wyjścia!",
          whatsnewSubscribe: "Dołącz do naszego seminarium internetowego",
          whatsnewTitle: "Ninox dla Androida",
          whatsnewVersion: "Wersja",
          width: "Szerokość",
          workPhone: "Telefon służbowy",
          writableIf: "Czy to możliwe, jeśli",
          writeRoles: "Zezwolenie na zapis",
          wrongPassword: "Niepoprawne hasło.",
          wrongUserPassword: "Hasło lub nazwa użytkownika jest niepoprawna.",
          xlsExportOpen: "Ściągać",
          xlsExportSaveAs: "Zapisz jako...",
          years: "Lata",
          yes: "Tak",
          yesterday: "wczoraj",
          yourAccount: "Twoje konto",
          zapierIntegration: "Integracja Zapiera",
          zoom: "Powiększenie",
          dayNames: [
            "Niedziela",
            "Poniedziałek",
            "Wtorek",
            "Środa",
            "Czwartek",
            "Piątek",
            "Sobota",
          ],
          dayNamesShort: ["Ni", "Po", "Wt", "Śr", "Cz", "Pi", "So"],
          monthNames: [
            "Styczeń",
            "Luty",
            "Marzec",
            "Kwiecień",
            "Maj",
            "Czerwiec",
            "Lipiec",
            "Sierpień",
            "Wrzesień",
            "Październik",
            "Listopad",
            "Grudzień",
          ],
          agg: {
            cnt: "Ilość",
            count: "Ilość",
            sum: "Suma",
            avg: "Średnia",
            min: "Minimum",
            max: "Maksimum",
            first: "Pierwszy",
            last: "Ostatni",
            concat: "Pokaż listę",
            median: "Mediana",
            sort: "Sortuj",
            unique: "Jednoznaczne",
          },
          types: {
            number: "Numer",
            string: "Tekst",
            string_multiline: "Tekst (wieloliniowy)",
            date: "Data",
            datx: "Data (new)",
            time: "Godzina",
            timeinterval: "Okres czasu",
            timestamp: "Data + Godzina",
            boolean: "Tak / Nie",
            choice: "Wybór",
            multi: "Wielokrotny wybór",
            list: "Tabela podrzędna",
            ref: "Powiązanie z tabelą",
            rev: "Powiązanie z tabelą",
            object: "Obiekt",
            html: "Tekst (formatowany)",
            fn: "Kalkulacja",
            tab: "Zakładka",
            head: "Nagłówek",
            text: "Dowolny tekst",
            br: "Zawijanie wiersza",
            space: "Rezerwacja miejsca",
            file: "Zdjęcie",
            link: "URL",
            email: "Email",
            phone: "Telefon",
            appointment: "Termin",
            user: "Użytkownik",
            location: "Lokalizacja",
            icon: "Symbol",
            color: "Kolor",
            custom: "Niestandardowe sterowania HTML",
            button: "Przycisk",
            signature: "Podpis",
            view: "Widok",
            chart: "Wykres",
          },
        },
        ru: {
          accountInactive:
            "Аккаунт был неактивен более указанного количества дней. Пожалуйста, свяжитесь с системным администратором.",
          accountLocked:
            "Учетная запись заблокирована. Пожалуйста, свяжитесь с системным администратором.",
          actionRequiresPremium:
            'Пожалуйста обновите программу до уровня "Премиум" для активирования данной функии.',
          actions: "Операции",
          activateSharing: "Активировать совместное использование",
          add: "Добавить",
          addFile: "Добавить файл",
          addRole: "Создать новую роль",
          addRowCreate: "Создать запись",
          addRowFind: " Добавить существующую запись",
          addRowFindCreate: " Найдите или создайте запись",
          addRule: "Добавить правило",
          addTable: "Новая таблица",
          admin: "Администрирование",
          advancedOptions: "Расширенные опции",
          agg_avg: "Среднее число",
          agg_cnt: "Количество",
          agg_concat: "объединить в список",
          agg_first: "Первый",
          agg_last: "Последний",
          agg_max: "Максимум",
          agg_median: "Медиана",
          agg_min: "Минимум",
          agg_sort: "Сортировать",
          agg_sum: "Сумма",
          agg_unique: "Уникальные",
          aggregation: "нижний колонтитул/Сумма столбца",
          agreeTerms: "Я прочитал и согласен с $1условиями$2.",
          all: "(все)",
          allChangesSaved: "Все изменения сохранены",
          alreadyTrialPlan:
            "Вы уже находитесь в пробном плане для Ninox Cloud. Сначала обновите свой план, чтобы создать другую команду.",
          annual: "годовой",
          anyFile: "Любой файл",
          appointmentBegin: "От",
          appointmentEnd: "До",
          apps: "Аппликации",
          askLater: "Спроси меня позже",
          atColumn: "Столбец",
          atLine: "в строке",
          auto: "(авто)",
          autoHeight: "Автоматическая высота",
          autoLayout: "Создать макет автоматически",
          automatedBackups: "Автоматическое резервное копирование",
          automatic: "Авто",
          availableColumns: "Доступные столбцы",
          back: "Назад",
          background: "Задний план",
          backgroundColor: "Фоновый цвет",
          backgroundFileMustBeJPEG:
            "Фоновое изображение должно быть файл JPEG.",
          backgrounds: "Фоновые изображения",
          billedAnnually: "счет ежегодно",
          blue: "Синий",
          bold: "Жирный",
          border: "Рамка",
          borderColor: "Цвет контура",
          borderRadius: "Скругление контура",
          borderSides: "Стороны контура",
          borderStyle: "Стиль рамки",
          borderWidth: "Толщина контура",
          bottom: "Дно",
          br: "Абзац",
          business: "Бизнес",
          buyNow: "Купить",
          calculate: "Подсчитать",
          calculatedValue: "Подсчет",
          calendar: "Календарь",
          calendarCreateAppointmentField:
            "Создайте поле для встреч чтобы иметь возможность  для создания записей календаря.",
          calendarOptions: "Настройки календаря",
          calendarSyncAhead: "Месяцы для синхронизации вперед",
          calendarSyncBeyond: "Месяцы для синхронизации за пределами",
          calendarSyncEnabled: "Включить синхронизацию календаря",
          calendarSyncLocation: "Место хранения",
          calendarWeek: "Календарная неделя",
          calendarWorkEnd: "Рабочий день заканчивается",
          calendarWorkStart: "Начинается рабочий день",
          cancel: "Отменить",
          cancelInvitation: "Отменить приглашение",
          cancelInvitationConfirm: "Вы хотите отменить это приглашение?",
          cancelUpload: "Отменить",
          canFindIt:
            "Нет электронной почты? Пожалуйста, проверьте папку со спамом.",
          cannotChangeRole: "Данную роль нельзя изменять",
          cannotChangeUser: "Данная учетная запись не может быть отменена",
          cannotConnectAppStore:
            "Не удается подключиться к App Store. Пожалуйста, повторите попытку позже.",
          cannotRemoveTeam: "Эта команда не может быть удалена",
          caption: "Имя",
          cards: "Карты",
          cascade: "Композиция",
          center: "Центр",
          changePassword: "Изменить пароль",
          chartBar: "Столбчатая диаграмма",
          chartBubble: "Пузырьковая диаграмма",
          chartBubbleRequiresColumns:
            "Пузырьковая диаграмма требует три числовых столбца для X, Y и радиуса",
          chartDatasets: "Ряды данных",
          chartDatasetsCols: "Столбцы",
          chartDatasetsRows: "Ряды",
          chartDoughnut: "Кольцевая диаграмма",
          chartLegend: "легенда",
          chartLine: "Линейная диаграмма",
          chartLineTension: "Сглаженные линии",
          chartNoData:
            "Диаграмма не содержит данных. Пожалуйста выберите минимум один числовой столбец.",
          chartPie: "Круговая диаграмма",
          chartPolarArea: "Полярная диаграмма",
          chartRadar: "Радарная диаграмма",
          chartStacked: "Кумулированный",
          chartType: "Тип диаграммы",
          chartView: "Диаграмма",
          chatPost: "Сообщение",
          choiceAddValue: "Добавить значение",
          choiceValues: "Выбор возможных значений",
          chooseFile: "Добавить файл",
          choosen: "Выбор",
          choosePhoto: "Добавить фотографию",
          chooseTeamName: "Название команды",
          chooseTemplate: "Выберите шаблон",
          chooseTypeToExport: "Пожалуйста, выберите таблицу для экспорта",
          clear: "Очистить",
          clearBackground: "Очистить фон",
          clearChatHistory: "очистить историю",
          clearHistory: "Очистить историю",
          clearSelection: "Отменить выбор",
          close: "Закрыть",
          collapseAll: "Закрыть все",
          color: "Цвет",
          colorScheme: "Цветовая схема",
          column: "Столбец",
          commands: "Команды",
          commented: "прокоментированно",
          comments: "Коментарии",
          company: "Компания",
          conditionalStyling: "Условное моделирование",
          confirmClearHistory:
            "Подтвердите, чтобы очистить историю всех записей. Это действие не может быть отменено.",
          confirmDropDatabase:
            "Подтвердите, чтобы удалить эту базу данных. Это действие не может быть отменено.",
          confirmEmail: "Подтвердите ваш имейл, пожалуйста",
          confirmImportNinox:
            "Эта операция может серьёзно отразиться на ващей базе данных и не может быть отменяна. Пожалуйста удостовертьесь в том что у вас есть резервная копия, дублируйте базу данных или сохраните её как файл.",
          confirmInstallTemplate:
            "Вы действительно хотите установить этот шаблон",
          confirmReindex:
            "Это действие может занять время. Во время реорганизации индекса другие пользователи не могут сделать модификации.",
          confirmRemove: "Подтвердите, чтобы удалить эту запись.",
          confirmRemoveAllChoosen:
            "Подтвердите, чтобы удалить все выбранные строки.",
          confirmRemoveChoiceValue:
            "Подтвердите, чтобы удалить выбранное значение.",
          confirmRemoveFile: "Подтвердите, чтобы удалить этот файл.",
          confirmRemoveReference:
            "Подтвердите, чтобы удалить эту ссылку. Это действие не может быть отменено.",
          confirmRemoveTable:
            "Подтвердите, чтобы удалить эту таблицу. Будут потеряны все содержавшие записи, комментарии и файлы. Это действие не может быть отменено.",
          confirmRemoveView: "Вы хотите удалить это табличное представление?",
          confirmReorganizeDatabase:
            "Реорганизировать эту базу данных и установить текущее устройство как владельца базы данных. Будут потеряны несинхронизированные изменения, внесенные на других устройствах.",
          confirmSaveReport: "Вы хотите сохранить изменения в макете?",
          constantValue: "постоянная величина",
          constraint: "ограничения",
          contactOwner: "Владелец контактной команды",
          contacts: "Контакты",
          contactSupport: "Связаться с поддержкой",
          contain: "содержать",
          containsMixedCase: "один заглавный и как минимум один нижний регистр",
          containsNumber: "один номер",
          containsSpecialCharacters: "особый символ",
          continueCloud: "Вы хотите продолжить использование Ninox Cloud?",
          copy: "Копировать",
          copyToCalendar: "Скопировать в мой календарь",
          couldntRenameFile: "Невозможно переименовать файл",
          country: "Страна",
          cover: "Обложка",
          create: "Создать",
          createApp: "Создать новое приложение",
          createBackup: "Создать резервную копию",
          createCalendarEntry: "Новая запись",
          createChoiceField: "Создать новое поле выбора",
          created: "создан",
          createDatabase: "Новая база данных",
          createDatabaseFromTemplate: "Из шаблона",
          createDatabaseLocation: "Где Вы хотите сохранить базу данных?",
          createDatabaseName: "Введите имя базы данных",
          createDatabaseOkay: "Создать базу данных",
          createdDate: "Создано на",
          createdUser: "создано (имя)",
          createField: "Создать поле",
          createNewTeam: "Создать новую команду",
          createRecord: "Создать запись",
          createRecordRequiresPremium:
            "Вы создали $ записей. Обновите до Premium.",
          createReference: "Создать ссылку на таблицу",
          createReport: "Создать новый макет",
          createRoles: "Создать новые записи",
          createTableFromTemplate: "Из шаблона",
          createTeam: "Создать новую команду",
          createUI: "Добавьте элемент макета",
          csvDateFormat: "Формат даты",
          csvDateFormatLocal: "Типичный для страны",
          csvEncoding: "кодировка",
          csvExportOpen: "Скачать",
          csvExportSaveAs: "Сохранить как...",
          csvFooter: "Включая нижний колонтитул",
          csvHeader: "Включая верхний колонтитул",
          csvLinefeed: "Абзац",
          csvNumberFormat: "числовой формат",
          csvNumberFormatComma: "1.023,42",
          csvNumberFormatField: "в соответствии с настройками поля",
          csvNumberFormatPoint: "1023.42",
          csvQuote: "Индикатор текста",
          csvSeparator: "Разделитель",
          csvSeparatorTab: "Табулятор",
          csvSepHeader: "Включяя определение разделителя",
          currentPlan: "Текущий план",
          custom: "Пользовательский",
          cut: "Вырезать",
          dashed: "Пунктир",
          database: "База данных",
          databaseLocationCloud: "iCloud",
          databaseLocationLocal: "Локально",
          databaseName: "имя базы данных",
          dataChange: "Изменение данных",
          dataField: "поле данных",
          dataModel: "модель данных",
          date: "Дата",
          dateCalendar: "Показывать в календаре",
          dateCalendarColor: "с цветом",
          dateCalendarFormat: "показать как",
          dateDefaultToday: "сегодня",
          dateYearly: "Годовщина",
          day_fr: "Пятница",
          day_mo: "Понедельник",
          day_sa: "Суббота",
          day_short_fr: "Пт",
          day_short_mo: "Пн",
          day_short_sa: "Сб",
          day_short_su: "Вс",
          day_short_th: "Чт",
          day_short_tu: "Вт",
          day_short_we: "Ср",
          day_su: "Воскресенье",
          day_th: "Четверг",
          day_tu: "Вторник",
          day_we: "Среда",
          days: "Дни",
          daysLeft: "Осталось дней",
          decimalSeparatorLabel: "Десятичный разделитель",
          defaultAppName: "Мое приложение",
          defaultDateFormat: "дд.мм.гггг",
          defaultValue: " значение по умолчанию",
          defineWorkHours: "Рабочее время",
          deleteReport: "Удалить текущий макет",
          deleteRoles: "Удалить записи",
          description: "Описание",
          dontExecuteTriggers: "Не выполнять триггер",
          dontHaveAccount: "Нет учетной записи?",
          dontHaveAnAccount: "Нет учетной записи?",
          dontImport: "(не импортировать)",
          dontRepeat: "Не повторяйте",
          dotted: "Точечный",
          double: "Двойной",
          download: "Скачать",
          dragColumnsHereToDefineView:
            "Перетащите поля сюда, чтобы определить видимые столбцы. Пока нет никаких определенных столбцов, представление будет сконфигурировано автоматически.",
          dragFieldsHere: "Перетащите поля сюда...",
          drawing: "Рисунок",
          dropbox: "Dropbox",
          dropDatabase: "Удалить базу данных",
          dumpDatabase: "Загрузить резервную копию",
          duplicate: "Дублировать",
          duplicateDatabase: "Дублировать базу данных",
          duplicateDatabaseName: "Двойное имя базы данных, попробуйте другое.",
          duplicateDatabaseOkay: "Дублировать",
          duplicateDatabaseToName: "Введите новое имя базы данных",
          duplicateRecord: "Дублировать запись",
          duplicateTable: "Дублировать таблицу",
          duplicateTableName:
            "Уже есть таблица с этим именем. Выберите друое имя.",
          duplicateUserName: "Данное имя пользователя уже существует.",
          editColumns: "Редактировать столбцы...",
          editField: "Редактировать поле",
          editFields: "Редактировать поля",
          editTable: "Редактировать таблицу",
          email: "Электронная почта",
          emailAddress: "Адрес электронной почты",
          emailAlreadyRegistered:
            "Этот адрес электронной почты уже зарегистрирован.",
          emailBody: "Содержание",
          emailMissing:
            "Пожалуйста, представьте действующий адрес электронной почты.",
          emailNotRegistered:
            "Извините, этот адрес электронной почты не зарегистрирован.",
          emailOrUserName: "Электронная почта",
          emailSubject: "Тема",
          empty: "(пустой)",
          emptyLayout: "Пустой",
          emptyValue: "Пустой",
          enableComments: "Закомментировать секцию",
          enableFiles: "Прикреплённые файлы",
          enableHistory: "Изменить историю",
          endColor: "Конец цвета",
          endsWith: "Заканчивается на",
          enterQuery: "Введите запрос",
          enterTableName: "Введите имя таблицы",
          enterViewName: "Имя представления",
          errorAmbiguousFieldName: "Неоднозначные имена полей",
          errorAmbiguousTypeName: "Неоднозначные имена таблиц",
          errorCannotPostToYourself: "Меньше разговоров с самим собой.",
          errorCannotUpdateReverse: "Поле не перезаписываемо",
          errorConcurrentSchemaModification:
            "Параллельная модификация схемы. Ваши изменения вернулись.",
          errorEndOfStringExpected: "Ожидается окончание",
          errorExpressionExpected: "Ожидается выражение",
          errorFailedToDeleteFile: "Файл не может быть удален",
          errorFieldIsNoDataField: "Поле не является полем данных",
          errorFieldIsNoLinkField: "Поле не является ссылочным полем",
          errorFieldNotFound: "Столбец не найден",
          errorFieldTypeMismatch: "Несовместимые типы данных",
          errorFileNotFound: "Файл не найден",
          errorGET: "Сервер, не отвечает, проверьте свое сетевое соединение.",
          errorHTTPMethodUnsupported: "Метод HTTP не поддерживается",
          errorIdExpected: "Идентификатор ожидается",
          errorImageConversionFailed: "Изображение не может быть преобразовано",
          errorInvalidFieldName: "Недопустимое имя поля",
          errorInvalidParameter: " недопустимый параметр",
          errorInvalidRequestBody: "Недопустимый запрос сервера",
          errorInvalidTypeName: "Недопустимое имя таблицы",
          errorInvalidViewCaption: "Недопустимое имя представления",
          errorLicenseMaxRecordsExceeded:
            "Вы превысили максимальное количество записей Вашей лицензии",
          errorMissingFieldName: "Неназванное поле",
          errorMissingRequestBody: "Запрос не имеет содержания",
          errorMissingRequestParameter: "Не хватает параметра в запросе",
          errorMissingTypeName: "Неназванная таблица",
          errorNodeNotFound: "Запись не найдена",
          errorNotAuthorized:
            "Вы не авторизованы для проведения данной операции",
          errorServerNotResponding:
            "Сервер не отвечает. Проверьте свое соединение.",
          errorSymbolExpected: "Ожидается символ",
          errorTemplateTypeUnsupported:
            "Этот тип файла не поддерживается как экспортный шаблон. Пожалуйста, используйте файлы Microsoft Excel.",
          errorTypeNotFound: "Таблица не была найдена",
          errorUnexpectedSymbol: "Непредвиденный символ",
          errorValidationFailed: "Недопустимое значение",
          errorValueExpected: "Ожидается значение",
          everybody: "каждый",
          evictDatabase: "очистить кэш",
          executeQuery: "Выполнить запрос",
          executeTriggers: "Выполнить триггер",
          executeUpdate: "Выполнить обновление",
          exitDatabase: "Выйти из базы",
          expandAll: "Развернуть все",
          expired: "Истекший",
          exportCSV: "CSV экспорт",
          exportData: "экспортировать данные",
          exportXLS: "Экспорт Excel",
          false: "ложный",
          field: "Поле",
          fieldCaption: "Имя поля",
          fields: "Поля",
          fieldType: "Тип данных",
          fieldWidth: "Ширина",
          fieldWidth1Col: "1 столбец",
          fieldWidth2Col: "2 столбца",
          fieldWidth3Col: "3 столбца",
          fieldWidth4Col: "4 столбца",
          fileHandling: "Обрабатывать файл как",
          files: "Вложенные файлы",
          filter: "Фильтр",
          FindIn$: " Искать в $",
          findPartner: "Найти партнёра нинокс",
          fiveDays: "5 дней",
          fixedHeight: "Фиксированная высота",
          fnInvalidComparator: "Недопустимый компаратор",
          fnInvalidExpression: " недопустимое выражение",
          fnInvalidNumber: "Недопустимое число",
          fnInvalidOperator: "Недопустимый оператор",
          fnInvalidParameter: "Недопустимый параметр",
          fnInvalidReturnType: "Недопустимый тип возврата",
          fnMissingParameter: "Отсутствует один параметр",
          fnNotABoolean: "не соответствует значению Да/Нет",
          fnReturnsMultipleValues: "Выражение возвращает многократные значения",
          fnReturnsSingleValue: "Выражение возвращает только одно значение",
          fnReturnTypeMismatch:
            'Выражения для "тогда" и "иначе" поставляют различные типы данных',
          fnUndefinedAggregation: "Агрегация не определена",
          fnUndefinedFunction: "Функция не определена",
          fnUnknowError: "Произошла неожиданная ошибка",
          fnUnsupportedAggregation:
            "Агрегация, не определенная для этого типа данных",
          font: "Шрифт",
          fontLarge: "Большой",
          fontNormal: "Нормальный",
          fontSmall: "Мальенький",
          fontStyle: "Стиль шрифта",
          fontVeryLarge: "Очень большой",
          footer: "нижний колонтитул",
          forgotPassword: "Забыли пароль?",
          forgotPasswordSuccess:
            "Чтобы сбросить пароль, просмотрите свой почтовый ящик",
          form: "Форма",
          format: "Формат",
          formView: "Таблиц и форма",
          forum: "Форум",
          freetext: "Описание",
          fromDate: "С",
          fromDropbox: "Из Dropbox",
          fromICloudDrive: "из iCloud Drive",
          fromLocal: "С устройства",
          fullName: "ФИО",
          function: "Функция",
          gantt: "GANTT",
          generate: "генерировать",
          getHelp: "Получить помощь",
          globalCode: "Глобальные определения сценариев",
          globalSearch: "Глобальный поиск",
          gotoFirst: "Перейти к первому",
          gotoLast: "Перейти в конец",
          gotoNext: "Переход к следующему",
          gotoPrev: "Переход к предыдущему",
          gotoToday: "Сегодня",
          gradient: "Градиента",
          grey: "Серый",
          grouped: "группированный",
          grouping: "Группирование",
          groupingSeparatorLabel: "Разделитель групп",
          hasIndex: "Индекс",
          haveAnAccount: "Уже есть аккаунт?",
          header: "Верхний колонтитул",
          headFoot: "Верхний / нижний колонтитул",
          headline: "Титул",
          heartNinox: "Оценить Ninox",
          height: "Высота",
          help: "Помощь",
          hidden: "Скрытый",
          hideColumn: "Скрыть столбец",
          hintAddFields: "Добавьте некоторые поля",
          hintCreateDatabase: "Создайте новую базу данных",
          hintCreateTable: "Создайте новую таблицу",
          hintEnterTableName: "Введите имя таблицы",
          history: "История изменений",
          home: "На главную",
          horizontalPosition: "Горизонтальное положение",
          hours: "Часов",
          icloudDrive: "iCloud Drive",
          icon: "Иконка",
          iconWithout: "(без)",
          id: "Номер",
          image: "Картинка",
          imageSize: "Размер",
          imageSizeLarge: "Большой",
          imageSizeMedium: "Средний",
          imageSizeOriginal: "Первоначальный размер",
          imageSizeSmall: "Маленький",
          import: "Импортировать",
          importAmbiguous: "Неоднозначные записи",
          importAmbiguousSkip: "Пропустить",
          importAmbiguousUpdateAll: "Актуализировать все",
          importArchive: "Импортировать архив",
          importAvailableFields: "Доступные поля",
          importChooseCSVFile: "Импорт CSV-файла...",
          importChooseDatabase:
            "Выберите базу данных, чтобы импортировать в нее данные.",
          importChooseFile: "Импортировать файл...",
          importChooseURL: "импортировать из адреса",
          importContacts: "Импортировать мои контакты",
          importCreateTable: "импортировать в новую таблицу",
          importData: "импортировать данные",
          importDatabase: "Импортировать базу данных",
          importDatabaseName: "Введите новое имя базы данных",
          importDescription:
            "Откройте текст или файл CSV из другого приложения (напр. Почта) с Ninox, чтобы импортировать данные.",
          importEnterURL: "Введите URL данных, которые Вы хотите импортировать",
          importExecute: "Импортировать данные теперь",
          importFailed: "Импорт не удался",
          importFieldMode: "метод",
          importFieldModeKeyExact: "Ключ",
          importFieldModeUpdateAlways: "Актуализировать все",
          importFieldModeUpdateEmpty: "Актуализировать только пустые",
          importFields: "Поля для импорта",
          importFromAnotherDatabase: "импортировать из другой базы данных",
          importHeader: "Первая строка - заголовок",
          importIntoField: "Импортировать в данное поле",
          importMode: "Какие данные?",
          importModeAll: "Все",
          importModeInvalid: "Для столбца выбран недопустимый импортный режим",
          importModeNew: "Добавлять только новые строки",
          importModeNotSpecified:
            "Для столбца не был выбран никакой импортный режим",
          importModeUpdate: "Обновлять только имеющиеся строки",
          importNoDatabasesDefined:
            "Данные не могут быть импортированы, пока нет никаких определенных баз данных.",
          importNoDataFound: " Файл не содержит данных.",
          importPreview: "Предварительный просмотр изменений",
          importSelectFile: "Выберите файл CSV",
          importSourceSettings: "Настройки источника данных",
          importSuccessful: "Успешный импорт",
          importTable: "Выберите таблицу, чтобы импортировать данные",
          importTargetSettings: "Настройки импорта",
          importTooManyFilesSelected: "Выберите только один файл.",
          include: "Включительно",
          includeData: "копировать записи",
          includeDataShort: "Данные",
          includeFiles: "копировать файлы",
          includeFilesShort: "Файлы",
          installTemplate: "Установить шаблон",
          installTemplateOkay: "Инсталлировать теперь",
          invalidBoolean: "Недопустимое значение Да / Нет",
          invalidChoice: "Недопустимый выбор",
          invalidCredentials: "Электронная почта или пароль - что-то не так.",
          invalidDatabaseName:
            "Имя базы данных недопустимо. Оно не может содержать специальные символы.",
          invalidEncoding:
            "Не удалось считать файл. Выберите другое кодирование.",
          invalidFileName: "Недопустимое имя файла",
          invalidFunction: "Недопустимая формула",
          invalidNumber: "Недопустимое число",
          invalidNumberMax: "Слишком большое значение",
          invalidNumberMin: "Слишком маленькое значение",
          invalidPassword:
            "Недопустимый пароль, сон должно состоять, по крайней мере, из 6 цифр.",
          invalidRequired: "Введите значение",
          invalidRoleCaption: "Недопустимое ролевое имя",
          invalidRoleRoles: "Указанные роли недопустимы.",
          invalidString: "Не строка",
          invalidStringMaxLength:
            "Текст слишком длинен. Максимальное количество символов:",
          invalidStringMinLength:
            "Текст слишком короток. Минимальное количество символов:",
          invalidStringREMatch:
            "Значение не соответствует регулярному выражению.",
          invalidTeamName:
            "Недопустимое имя команды, пожалуйста, выберите другой.",
          invalidUserEMail: "Адрес электронной почты пользователя недопустим.",
          invalidUserFirstName: "Имя пользователя недопустимо.",
          invalidUserId: "Идентификатор пользователя недопустимо.",
          invalidUserLastName: "Фамилия пользователя недопустима.",
          invalidUserName: "Имя пользователя недопустимо.",
          invalidUserRoles: "Роли пользователя недопустимы.",
          invitation: "Приглашение",
          invitations: "Приглашения",
          invite: "Пригласить",
          inviteCode: "Код приглашения",
          invitedAt: "Приглашение отправлено",
          invitedFrom: "Приглашенный из",
          inviteHead: "Пригласите товарища по команде",
          italic: "Курсив",
          joinCommunity: "Присоединиться к сообществу",
          kanban: "Kanban",
          kanbanRecommend:
            "Канбан лучше всего работает с полями выбора. Рекомендуемые поля:",
          labelPosition: "Позиция надписи",
          language: "язык",
          later: "Позже",
          latestChanges: "Последние изменения",
          latitude: "Широта",
          layoutElement: "Деталь оформления",
          learningResources: "Обучающие ресурсы",
          leaveTeam: "Оставить эту команду",
          leaveTeamConfirm: "Вы действительно хотите покинуть эту команду?",
          leaveThisTeam: "Оставить эту команду",
          left: "Оставил",
          licensed: "лицензировано",
          licensedTo: "для",
          licenseExpires: "до",
          licenseInvalid: "Ваша лицензия истекла. Возобновите файл лицензии.",
          lineHeight: "высота линии",
          linkConfig: "Ссылка на таблицу",
          linked: "связан с",
          linkFrom: "Ссылка из",
          linkPreview: "Предварительный просмотр",
          linkTo: "Ссылка к",
          list: "Список",
          localization: "Локализация",
          LocalizationAddLocaleColumnHeader: "+ Добавить локаль",
          LocalizationDefaultColumnHeader: "По умолчанию",
          LocalizationModuleColumnHeader: "Модуль",
          logic: "Логика",
          login: "Войти",
          login2: "Войти",
          loginAttempts:
            "Слишком много неудачных попыток входа в систему. Мы заблокировали вашу учетную запись на 24 часа. Обратитесь к администратору, чтобы разблокировать его раньше.",
          logout: "Выйти",
          longitude: "Долгота",
          manageBackups: "Управление резервными копиями",
          manualBackups: "Ручное резервное копирование",
          margins: "Поля страницы\n",
          matchPasswords: "Пароли не совпадают.",
          maxUsers: "До $1 членов команды.",
          medium: "Средний",
          meetNinox: "Эвенты Ninox",
          messages: "Сообщения",
          minLength: "минимальная длина 8 символов",
          missingUserName: "Имя пользователя обязательно.",
          modeText: "Текст",
          modeVisual: "Визуальный",
          modified: "модифицирован",
          modifiedAt: "в",
          modifiedDate: "последнее изменение (дата)",
          modifiedUser: "последнее изменение от (Имя)",
          month: "Месяц",
          month_apr: "Апрель",
          month_aug: "Август",
          month_dec: "Декабрь",
          month_feb: "Февраль",
          month_jan: "Январь",
          month_jul: "Июль",
          month_jun: "Июнь",
          month_mar: "Март",
          month_may: "Май",
          month_nov: "Ноябрь",
          month_oct: "Октябрь",
          month_sep: "Сентябрь",
          monthly: "ежемесячно",
          months: "Месяцы",
          moveToBack: "Задний план",
          moveToFront: "Передний План",
          mustAgreeTerms:
            "Вы должны принять наши условия и положения, чтобы получить доступ к Ninox Cloud.",
          myDatabases: "Мои базы данных",
          name: "Имя",
          new: "Новый",
          newField: "Новое Поле",
          newPassword: "введите новый пароль",
          newReport: "Новый макет",
          newTeam: "Создать новую команду",
          newView: "Новый вид",
          next: "дальше",
          nextWebinar: "Следующий вебинар",
          ninoxCloudSync: "Синхронизация Ninox Cloud",
          ninoxForTeams: "Ninox в интернете",
          no: "нет",
          noCalendarAccess:
            "Пожалуйста, предоставьте Ninox доступ к вашему календарю в настройках системы.",
          noCalendarEntries: "нет записей",
          noColor: "без цвета",
          nodeNotFound: "Запись не  найдена,  возможно, она была удалена.",
          noGrouping: "Убрать группирование",
          none: "(ничего)",
          noNeedToResetPassword: "Не нужно сбрасывать пароль?",
          noProblems: "Проблем не найдено",
          notAuthorized: "Вы не авторизованы для этого действия",
          notConnected: "В настоящее время вы не подключены к Интернету.",
          noTeamName: "Выберите название команды.",
          noTemplate: "Начните с новой и пустой базы данных.",
          notEmpty: "(не пустой)",
          notLoggedIn: "Не вошел",
          numberFormat: "Формат числа",
          numberFormatDigits: "знаков после запятой",
          numberFormatGroup: "зделение",
          numberFormatPrefix: "Префикс",
          numberFormatUnit: "Единица",
          numberMax: "Максимум",
          numberMin: "Минимум",
          numberValue: "числовое значение",
          of: "от",
          okay: "ОК",
          oldPassword: "текущий пароль",
          onClick: "По щелчку",
          oneAdminRequired:
            "В этой команде должен быть хотя бы один другой пользователь admin.",
          oneDay: "1 день",
          onlineHelp: "Инструкция",
          op_age: "Возраст",
          op_and: "и",
          op_contains: "содержит",
          op_date: "дата",
          op_day: "день",
          op_days: "Дни",
          op_duration: "продолжительность",
          op_end: "Конец",
          op_false: "нет",
          op_format: "форматировать",
          op_if: "если / тогда / иначе",
          op_if_else: "иначе",
          op_if_if: "Если",
          op_if_then: "тогда",
          op_index: "Индекс",
          op_like: "подобный",
          op_lower: "строчная буква",
          op_lpad: "дополнить слева",
          op_month: "месяц",
          op_not: "не",
          op_now: "Сейчас",
          op_number: "как число",
          op_or: "или",
          op_rpad: "дополнить справа",
          op_sign: "Знак",
          op_start: "Старт",
          op_string: "Текст",
          op_substr: "Частичная строка символов",
          op_text: "как текст",
          op_today: "Сегодня",
          op_trim: "без пробелов",
          op_true: "Да",
          op_upper: "Заглавные буквы",
          op_week: "Неделя",
          op_weekday: "день недели",
          op_workdays: "Рабочие дни",
          op_year: "Год",
          op_yearmonth: "Год/Месяц",
          op_yearquater: "Квартал",
          op_yearweek: "Год/неделя",
          openIn: "открыть в",
          operationInProgress: "Запрошенная операция уже выполняется",
          operator: "Оператор",
          options: "Опции",
          original: "оригинал",
          otherOptions: "Другие опции",
          padding: "Внутреннее расстояние",
          page: "Страница",
          pageBody: "Основной текст",
          pageFoot: "Нижний колонтитул",
          pageHead: "Верхний колонтитул",
          pages: "Страницы",
          palette: "Палитра",
          paperFormat: "Формат",
          password: "Пароль",
          passwordContainNumber: "цифра, ",
          passwordMismatch: "Несоответствие пароля - попробуйте еще раз.",
          passwordRestrict: "Пароль должен иметь ",
          passwordSpecificLength: "не менее 8 символов",
          paste: "Вставить",
          perMonth: "в месяц",
          perYear: "в год",
          photo: "Фотография",
          photoLibrary: "Фото архив",
          pickGroupColumn: "Пожалуйста, выберите столбец группировки.",
          planCurrent: "Текущий план",
          planCurrentCovers: "Ваш текущий план охватывает $1 пользователей.",
          planExpired: "Мы заметили, что ваш план истек.",
          planExpiredMember:
            "План для этой команды истек. Пожалуйста, свяжитесь с владельцем команды ($1) и попросите его обновить его план.",
          planGetNow: "Получите сейчас Ninox Cloud для $1 пользователей.",
          planGetNowCTA: "Получить подписку",
          planNone: "Срок действия плана истек.",
          planOverused:
            "Мы заметили что ваш текущий тариф не покрывает всех участников вашей команды.",
          planOverusedMember:
            "Тариф для этой команды не покрывает всех зарегистрированных пользователей. Пожалуйста обратитьесь к владельцу команды: $1",
          planPurchaseOther: "Этот план был приобретен с помощью $1.",
          planRenewsAt: "Эта подписка будет обновлена ​​по адресу: $1.",
          planSave: "Сохранить",
          planTerms:
            'Эта подписка предоставляет доступ к Ninox Cloud для ваших и ваших членов команды со всех устройств с помощью приложения Ninox, а также с веб-браузером. Оплата будет засчитана на счет iTunes при подтверждении покупки. Эта подписка автоматически возобновляется, если автоматическое обновление не отключается по крайней мере за 24 часа до окончания текущего периода. С вашего счета будет взиматься плата за продление в течение 24 часов до конца текущего периода и определить стоимость продления. Подписки могут управляться пользователем, и автоматическое обновление может быть отключено путем перехода к настройкам учетной записи пользователя после покупки. Любая неиспользованная часть бесплатного ознакомительного периода, если предлагается, будет конфискована, когда пользователь покупает подписку на эту публикацию, где это применимо. При покупке вы соглашаетесь с <a href="https://ninoxdb.de/ninox/en/privacy.html"> Политикой конфиденциальности </a> и <a href="https://ninox.com/ninox/en/terms.html"> Условия использования </a>.',
          planTrial: "Вы находитесь в бесплатном пробном плане.",
          planTrialExpiresAt: "Тестовый период истекает",
          planUnknown:
            "Извините, мы не можем определить ваш текущий план. Пожалуйста, свяжитесь с support@ninox.com.",
          planUsage: "Текущее использование",
          planUsageCovered: "$1 пользователей охвачены другими планами.",
          planUsageInfo: "У вас $1 членов в $2 командах.",
          planUsageRequired: "Ваш план должен охватывать $1 пользователей.",
          planWrongUser:
            "У вас уже есть тарифный план с другим идентификатором. Пожалуйста, войдите в систему, используя следующий адрес электронной почты: $ 1",
          position: "Позиция",
          postCommentButton: "Отправить",
          postCommentLabel: "Комментировать",
          presets: "Пресеты",
          preview: "Предварительный просмотр",
          print: "Печать",
          printAll: "Все",
          printAttachments: "Печать присоединенных изображений",
          printFontSize: "размер шрифта",
          printImages: "Распечатать изображения",
          printNodeSettings: "Печать отдельных записей данных",
          printNow: "Распечатать сейчас",
          printOne: "Только это",
          printPDF: "Распечатать PDF",
          printRendering: "Предварительный просмотр для печати",
          printTableSettings: "Печать таблицы",
          printView: "Предварительный просмотр",
          private: "Частный",
          problemsLoggingIn: "Вы не можете авторизоваться?",
          processBackground: "Фоновые процессы:",
          processDatabase: "база данных",
          processHeadline: "Процессы",
          processLogs: "Журналы",
          processName: "Процесс",
          processRefresh: "освежить",
          processStatus: "Статус",
          processSubline:
            "Здесь вы можете увидеть все запущенные процессы (если есть) в вашем аккаунте. Через «Обновить» вы получаете обновленную информацию о статусе процесса.",
          processTimeStarted: "Начинать",
          processTimeStopped: "конец",
          processUser: "Пользователь",
          productPurchased: "Установлено",
          profileImage: "Изображение профиля",
          protectDatabase: "Защитите эту базу данных",
          purchaseNow: "Купить сейчас",
          query: "Запросы",
          queryExecuting: "Запрос выполняется...",
          radius: "Радиус",
          readableIf: "Читаем, если",
          readRoles: "допуск к чтению",
          rebuildThumbnails: "Восстановить миниатюры",
          rebuildThumbnailsConfirm:
            "Вы действительно хотите восстановить все эскизы? Этот процесс может занять некоторое время.",
          red: "Красный",
          referenceLabel1N: "(1 : N)",
          referenceLabelFrom: "Ссылка на",
          referenceLabelN1: "(N : 1)",
          referenceLabelTo: "с",
          refFinderSearch: "Введите поисковый текст:",
          refFinderSearchCaption: "Искать в",
          register: "Завести аккаунт",
          registerNewsletter: "Держите меня в курсе обновлений продуктов.",
          reindex: "перестроить индекс",
          reIndexFiles: "Файлы переиндексируются",
          reIndexFilesConfirm:
            "Вы уверенны что хотите переиндексировать файлы? Этот процесс может занять некоторое время.",
          reloginMessage: "Пожалуйста, войдите снова, чтобы продолжить.",
          remove: "Удалить",
          removeAllChoosen: "Удалить выбранные строки",
          removed: "удалено",
          removeField: "Удалить поле",
          removeFieldConfirm:
            "Подтвердите, чтобы удалить это поле. Это действие не может быть отменено.",
          removeFile: "удалить файл",
          removeFromTeam: "Удалить из команды",
          removeFromTeamConfirm:
            "Вы действительно хотите удалить этого участника из своей команды?",
          removeFromTeamHead: "Удалить участника из команды",
          removeFromTeamOkay: "Удалить",
          removeNRecords: "Удалить $ записей",
          removeRecord: "Удалить запись",
          removeReference: "Удалить ссылку",
          removeTab: "Удалить табулятор",
          removeTable: "Удалить таблицу",
          removeTeam: "Удалить эту команду",
          removeTeamConfirm:
            "Вы действительно хотите удалить эту команду навсегда? Эту операцию нельзя отменить. Все данные будут утеряны.",
          removeView: "Удалить вид",
          rename: "Переименовать",
          renameDatabase: "Переименовать базу данных...",
          renameDatabaseOkay: "Переименовать",
          renameDatabaseToName: "Введите новое имя базы данных",
          renameView: "Переименовать вид",
          reorganizeDatabase: "Реорганизировать",
          repeat: "Повторение",
          repeatPassword: "Повторите пароль",
          required: "Ввод данных обязателен",
          resendInvitation: "Повторное приглашение",
          resendVerificationMail: "Повторно отправить письмо с подтверждением",
          resetPassword: "Сбросьте пароль!",
          resetSchema: "Вернуть изменения",
          resetSync: "Сбросить синхронизацию",
          restoreAppStoreTransactions: "Восстановить мои прежние покупки",
          restoreBackup: "Восстановить",
          result: "Результат",
          resyncCloudDatabases: "Синхронизация iCloud",
          right: "Правильно",
          role_editor: "редактор",
          roleCaption: "Название роли",
          roleNotFound: "Роль не найдена",
          roles: "Права доступа",
          rolesExport: "Экспортировать данные",
          rolesImport: "импортировать данные",
          rolesMassDataUpdate: "Массовое изменение данных",
          rolesOpen: "Открыть базу данных",
          rolesPrint: "Распечатать данные",
          runConsole: "Казнить",
          save: "Сохранить",
          saveArchiveAs: "Сохранить архив как...",
          saveAs: "Сохранить как",
          saveDataModelChanges: "Сохранить изменения в модели данных",
          saveImage: "сохранить образ",
          saveProfile: "Сохранить профиль",
          saveReport: "Сохранить макет",
          saveSchema: "Сохранить изменения",
          saveViewAs: "Сохранить представление как ...",
          schemaDirty: "Вы внесли изменения в приложение.",
          schemaSaveRequired: "Сохраните изменения в приложении.",
          search: "поискать",
          searchIn$: "Искать в $",
          security: "Безопасность",
          select: "Выбрать",
          selectAll: "Выбрать все",
          sendInvitation: "Отправить приглашение",
          sendMail: "Отправить почту",
          sevenDays: "7 дней",
          share: "Поделиться",
          shareFile: "Поделиться этим файлом",
          shareURL: "Общий URL",
          shareView: "Поделиться этим представлением",
          sharing: "разделение",
          showAll: "Показать все строки",
          showAs: "Показать как",
          showColumn: "Показать столбцы",
          showExtendedOptions: "Больше опций",
          showHideColumns: "Показать столбцы...",
          showLess: "Показывай меньше",
          showMore: "Показать больше",
          showOnlyChoosen: "Показать выбранные",
          showOnlyWorkHours: "Только рабочее время",
          signature: "Подпись",
          signIn: "Войти",
          signinHead: "Войти в Ninox",
          signup: "Подпишитесь",
          signUpBusinessMessage:
            "Бизнес-клиенты получают личную поддержку от нашей команды по работе с клиентами.",
          signupCreateTeam: "Авторизуйтесь и создайте команду",
          signupFree: "Подпишитесь бесплатно",
          signupHead: "Подпишитесь на Ninox Cloud",
          signUpHeader1_1: "Как вы планируете",
          signUpHeader1_2: "использовать Ninox",
          signUpHeader2:
            "Для какой учетной записи вы хотите получить бесплатную пробную версию?",
          signUpHeader3: "Пожалуйста, заполните свой профиль",
          signUpNewsletter:
            "Да, добавьте меня в информационный бюллетень Ninox.",
          signupNewUser: "Зарегистрироваться как новый пользователь",
          signUpPrivacyPolicy: "политика конфиденциальности",
          size: "Размер",
          solid: "Сплошной",
          sort: "Сортировать",
          sortAscending: "По возрастанию",
          sortDescending: "По убывающей",
          sorting: "Сортирование",
          space: "Пробел",
          ssoErrorMessage:
            "Что-то не работает. Мы не можем авторизоваться в данный момент.",
          ssoErrorSupportCta:
            "Все еще не можете войти в систему? Обратитесь в нашу службу поддержки.",
          ssoLogin: "SSO Login",
          ssoLogoutHeader: "Вы успешно вышли из системы.",
          ssoLogoutMessage: "Пожалуйста, войдите снова, чтобы продолжить.",
          startColor: "Начало цвета",
          startsWith: "Начинается с",
          startTrial: "Начать пробный период",
          staticImage: "Статическое изображение",
          staticImagePhoto: "Статическое изображение(Фото)",
          stayWithPlan: "Оставайтесь с этим планом",
          storageLocation: "Место хранения",
          storeOnICloudDrive: "Сохранить на iCloud Drive",
          stretch: "Протяжение",
          stringLPad: "дополнить слева с",
          stringMaxLength: "Максимальная длина",
          stringMinLength: "Минимальная длина",
          stringMultiline: "многострочный",
          stringRPad: "дополнить справа с",
          style: "Стиль",
          subTable: "Дочерняя таблица",
          supportTicket: "Обратиться в службу поддержки",
          switchTeam: "Переключатель команды",
          switchToPlan: "Переключиться на этот план",
          switchToPrintView: "Сменить вид",
          syncFilesFailed: "не смогли",
          syncFilesToDownload: "Файлы для скачивания",
          syncFilesToUpload: "Файлы для загрузки",
          syncNow: "Синхронизация сейчас",
          syncProblemCheck: "Проверка проблем синхронизации",
          syncSeq: "Номер последовательности синхронизации.",
          syncState: "Статус синхронизации",
          tab: "Вкладка",
          table: "Таблица",
          tableCaption: "Имя таблицы",
          tableReference: "ссылка на таблицу",
          tables: "Таблицы",
          tableView: "Таблица",
          takePhoto: "Сделать фотографию",
          targetTable: "Цель",
          teamMember: "Участник команды",
          teamMembers: "Члены команды",
          teamName: "Название команды",
          teamSettings: "Настройки команды",
          templateRequired: "Требуется шаблон",
          templateRequiredContacts:
            'Чтобы импортировать контакты, установите табличный шаблон: "Управление контактами"',
          templateRequiredOkay: "Установить шаблон...",
          templates: "Шаблоны",
          termsDisclamer:
            "Создавая учетную запись, вы соглашаетесь с $Условия использования$.",
          termsOfService: "Условия использования",
          text: "Текст",
          textAndDate: "Текст / Дата",
          textColor: "Цвет текста",
          thanksCloud: "Спасибо за использование Ninox Cloud!",
          thick: "Толстый",
          thin: "Тонкий",
          thisFieldsAreRequired: "Пожалуйста, заполните это поле",
          time: "Время",
          timeFmt: "Формат времени",
          timestampDefaultNow: "Сейчас",
          toDate: "До",
          today: "сегодня",
          toggleSelection: "вернуть выбор",
          tooltip: "Подсказка",
          top: "верхний",
          transparent: "Прозрачный",
          triggerAfterCreate: "При новой записи запускать следующий скрипт",
          triggerAfterCreateShort: "При создании",
          triggerAfterOpen: "Триггер после открытия",
          triggerAfterUpdate: "После изменений запускать следующий скрипт",
          triggerAfterUpdateShort: "При изменении",
          trim: "Удалить пробелы",
          true: "ПРАВДА",
          tutorialVideos: "Обучающие видео",
          type_appointment: "встреча",
          type_boolean: "Да / Нет",
          type_br: "Абзац",
          type_button: "Кнопка",
          type_chart: "Диаграмма",
          type_choice: "Выбор",
          type_color: "Цвет",
          type_custom: "Пользовательский HTML элемент управления ",
          type_date: "Дата",
          type_datx: "Дата (new)",
          type_email: "Электронная почта",
          type_file: "Изображение",
          type_fn: "Вычисление",
          type_head: "Титул",
          type_html: "Текст (форматируемый)",
          type_icon: "Иконка",
          type_link: "Адрес интернета",
          type_list: "Дочерняя таблица",
          type_location: "местоположение",
          type_multi: "Множественный выбор",
          type_number: "Число",
          type_object: "Объект",
          type_phone: "Телефон",
          type_ref: "Ссылка на таблицу",
          type_rev: "Ссылка на таблицу",
          type_signature: "Подпись",
          type_space: "Пробел",
          type_string: "Текст",
          type_string_multiline: "Текст (многострочный)",
          type_tab: "Вкладка",
          type_text: "Свободный техт",
          type_time: "Время",
          type_timeinterval: "Интервал времени",
          type_timestamp: "дата + время",
          type_user: "Пользователь",
          type_view: "Представление",
          typeExportTemplates: "Экспортировать шаблоны",
          typeMissmatchHtml:
            "Несоответствие типа, это поле должно возвращать html",
          typeMissmatchImage:
            "Несоответствие типа, это поле должно возвращать изображение",
          unknowError: "Произошла неожиданная ошибка",
          unknown: "Неизвестно",
          unknownError: "неожиданная ошибка",
          unlink: "Удалить ссылку",
          unlinked: "ссылка удалена",
          unlockDatabase: "Разблокировать эту базу данных",
          unnamed: "(без названия)",
          unprotectDatabase: "Удалить защиту этой базы данных",
          unsavedChanges: "Некоторые изменения не могли быть сохранены",
          updateAllRecords: "Актуализировать все записи",
          updateAssistant: "Массовое обновление данных",
          updateAssistantExecute: "Выполнить",
          updateAssistantFormula: "Выполнить запрос:",
          updateAssistantResults: "Результаты запроса / изменения",
          updated: "изменить на",
          updateExpressionNotAllowed: "Эта формула может не изменить данные.",
          updateModeAssignFunction: "Присвойте вычисленное значение",
          updateModeAssignNull: "Очистить",
          updateModeAssignValue: "Присвойте постоянное значение",
          updateModeDontChange: "Не изменять",
          updateSelectedRecords: "Актуализировать только выбранные записи",
          updateVisibleRecords: "Актуализировать все видимые записи",
          upgradePlan: "План обновления",
          upgradeToPremium: "Обновление",
          uploadBackgroundFile: "Загрузить собственное фоновое изображение",
          uploadFailed: "Файл не мог быть загружен.",
          uploading: "Загрузка...",
          usedPassword:
            "Вы не можете использовать этот пароль, так как он использовался ранее.",
          user: "пользователь",
          userName: "Имя пользователя",
          userNotFound: "Пользователь не найден",
          users: "пользователи",
          uuid: "Глобальный уникальный идентификатор",
          validUntil: "Годен до",
          value: "Значение",
          verifyEmail$:
            "Подтвердите свой адрес электронной почты $, чтобы продолжить использование Ninox. Нет электронной почты? Пожалуйста, проверьте папку со спамом.",
          verticalPosition: "Вертикальная позиция",
          view: "Представление",
          viewAs: "Показать как",
          visibilityRule: "Поле показывать только, если:",
          visibilityRuleShort: "Показать если",
          visibleColumns: "Видимые столбцы",
          visibleRows: "Видимые строки",
          webinars: "Вебинары",
          week: "Неделя",
          weeks: "Недели",
          whatsnew: "Новое в этой версии",
          whatsnew1: "Канбан чарты",
          whatsnew1Body:
            "Изменяйте цвета, значки и порядок рядов Канбан одним щелчком мыши.",
          whatsnew1Title: "Улучшенные внешний вид Канбан",
          whatsnew2: "Диаграммы Ганта",
          whatsnew2Body:
            "Переместите элементы на панели навигации перетаскиванием",
          whatsnew2Title: "Улучшена навигация",
          whatsnew3: "Карты / просмотр галереи",
          whatsnew3Body:
            "Используйте сводные таблицы для анализа ваших данных.",
          whatsnew3Title: "Новая сводная таблица",
          whatsnew4: "Форма просмотра",
          whatsnew5: "Стилизация заголовков и элементов свободного текста",
          whatsnewa1:
            "Создавать базы данных на любом устройстве, откуда угодно.",
          whatsnewa2: "Синхронизация со всех устройств.",
          whatsnewa3: "Сотрудничайте с вашей командой.",
          whatsnewa4: "Дизайн печатных макетов.",
          whatsnewa5: "Создавайте формы для простого сбора данных.",
          whatsnewDontShow: "Не показывать снова",
          whatsnewFeatures: "Особенности",
          whatsnewHelp: "Справочный центр",
          whatsnewNext: "следующий",
          whatsnewSkip: "Пропустить",
          whatsnewStart: "Готов!",
          whatsnewSubscribe: "Присоединяйтесь к нашему вебинару",
          whatsnewTitle: "Ninox для Android",
          whatsnewVersion: "Версия",
          width: "Ширина",
          workPhone: "Рабочий телефон",
          writableIf: "Записываемый if",
          writeRoles: "допуск к записи",
          wrongPassword: "Неверный пароль.",
          wrongUserPassword:
            "Неправильный пароль или неизвестное имя пользователя.",
          xlsExportOpen: "Скачать",
          xlsExportSaveAs: "Сохранить как...",
          years: "Лет",
          yes: "Да",
          yesterday: "вчера",
          yourAccount: "Ваш счет",
          zapierIntegration: "Интеграция Zapier",
          zoom: "Увеличить",
          dayNames: [
            "Воскресенье",
            "Понедельник",
            "Вторник",
            "Среда",
            "Четверг",
            "Пятница",
            "Суббота",
          ],
          dayNamesShort: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
          monthNames: [
            "Январь",
            "Февраль",
            "Март",
            "Апрель",
            "Май",
            "Июнь",
            "Июль",
            "Август",
            "Сентябрь",
            "Октябрь",
            "Ноябрь",
            "Декабрь",
          ],
          agg: {
            cnt: "Количество",
            count: "Количество",
            sum: "Сумма",
            avg: "Среднее число",
            min: "Минимум",
            max: "Максимум",
            first: "Первый",
            last: "Последний",
            concat: "объединить в список",
            median: "Медиана",
            sort: "Сортировать",
            unique: "Уникальные",
          },
          types: {
            number: "Число",
            string: "Текст",
            string_multiline: "Текст (многострочный)",
            date: "Дата",
            datx: "Дата (new)",
            time: "Время",
            timeinterval: "Интервал времени",
            timestamp: "дата + время",
            boolean: "Да / Нет",
            choice: "Выбор",
            multi: "Множественный выбор",
            list: "Дочерняя таблица",
            ref: "Ссылка на таблицу",
            rev: "Ссылка на таблицу",
            object: "Объект",
            html: "Текст (форматируемый)",
            fn: "Вычисление",
            tab: "Вкладка",
            head: "Титул",
            text: "Свободный техт",
            br: "Абзац",
            space: "Пробел",
            file: "Изображение",
            link: "Адрес интернета",
            email: "Электронная почта",
            phone: "Телефон",
            appointment: "встреча",
            user: "Пользователь",
            location: "местоположение",
            icon: "Иконка",
            color: "Цвет",
            custom: "Пользовательский HTML элемент управления ",
            button: "Кнопка",
            signature: "Подпись",
            view: "Представление",
            chart: "Диаграмма",
          },
        },
        chs: {
          actionRequiresPremium: "请升级到高级版以激活此特性.",
          actions: "行动",
          activateSharing: "激活分享",
          add: "添加",
          addFile: "添加文件",
          addRole: "创建新角色",
          addRowCreate: "创建新记录",
          addRowFind: " 添加现有记录",
          addRowFindCreate: " 搜索或创建记录",
          addRule: "添加规则",
          addTable: "新数据表",
          admin: "管理",
          advancedOptions: "高级选项",
          agg_avg: "平均值",
          agg_cnt: "计算",
          agg_concat: "联接",
          agg_first: "第一个",
          agg_last: "最后一个",
          agg_max: "最大",
          agg_median: "中等",
          agg_min: "最小",
          agg_sort: "排序值",
          agg_sum: "求和",
          agg_unique: "唯一值",
          aggregation: "页脚",
          agreeTerms: "我已阅读并同意$1条款和条件$2。",
          all: "(所有)",
          allChangesSaved: "所有更改都已保存.",
          alreadyTrialPlan:
            "您已经在Ninox Cloud的试用计划中。请先升级您的计划，以创建另一个团队。",
          annual: "全年",
          anyFile: "任何档案",
          appointmentBegin: "开始",
          appointmentEnd: "结束",
          apps: "应用",
          askLater: "等会再问我",
          atColumn: "列",
          atLine: "行",
          auto: "(自动)",
          autoHeight: "自适应高度",
          autoLayout: "自动创建布局",
          automatic: "自动",
          availableColumns: "有效列",
          back: "返回",
          background: "背景",
          backgroundColor: "背景颜色",
          backgroundFileMustBeJPEG: "背景图像必须是JPEG文件.",
          backgrounds: "背景图像",
          billedAnnually: "每年开帐单",
          blue: "蓝色",
          border: "边界",
          borderStyle: "边界样式",
          bottom: "底部",
          br: "换行符",
          business: "商业",
          buyNow: "现在购买",
          calculate: "计算",
          calculatedValue: "分配已计算值",
          calendar: "日历",
          calendarCreateAppointmentField:
            "Create an appointment field to create calendar entries.",
          calendarOptions: "日历选项",
          calendarSyncAhead: "几个月前提前同步",
          calendarSyncBeyond: "几个月可以同步超过",
          calendarSyncEnabled: "启用日历同步",
          calendarSyncLocation: "存储位置",
          calendarWeek: "日历周",
          calendarWorkEnd: "工作日结束",
          calendarWorkStart: "工作日开始",
          cancel: "取消",
          cancelInvitation: "取消邀请",
          cancelInvitationConfirm: "您要取消此邀请吗？",
          cancelUpload: "取消",
          canFindIt: "没有电子邮件？请检查您的垃圾邮件文件夹。",
          cannotChangeRole: "无法保存角色设置",
          cannotChangeUser: "无法保存用户设置",
          cannotConnectAppStore: "无法连接到App Store。请稍后再试。",
          cannotRemoveTeam: "无法删除此小组",
          caption: "名称",
          cards: "牌",
          cascade: "布置",
          center: "中央",
          changePassword: "更改密码",
          chartBar: "条形图",
          chartBubble: "泡泡表",
          chartBubbleRequiresColumns: "气泡图需要X，Y和半径三个数字列",
          chartDatasets: "数据系列",
          chartDatasetsCols: "列",
          chartDatasetsRows: "行",
          chartDoughnut: "甜甜圈图",
          chartLegend: "传说",
          chartLine: "折线图",
          chartLineTension: "平滑的线条",
          chartNoData: "图表无数据. 请在您的视图中配置至少一目数字栏.",
          chartPie: "饼形图",
          chartPolarArea: "极地图",
          chartRadar: "雷达图",
          chartStacked: "叠放",
          chartType: "图表类型",
          chartView: "图表",
          chatPost: "消息",
          choiceAddValue: "添加值",
          choiceValues: "备选值",
          chooseFile: "添加文件",
          choosen: "选项",
          choosePhoto: "添加照片",
          chooseTeamName: "队名",
          chooseTemplate: "选择模板",
          chooseTypeToExport: "请选取要输出的数据表.",
          clear: "明确",
          clearBackground: "背景清晰",
          clearChatHistory: "清除历史",
          clearHistory: "清除历史",
          clearSelection: "清除选项",
          close: "关闭",
          collapseAll: "折叠全部",
          color: "颜色",
          colorScheme: "色彩风格",
          column: "列",
          commands: "命令",
          commented: "评论",
          comments: "评论",
          company: "公司",
          conditionalStyling: "条件样式",
          confirmClearHistory: "请确保要清除所有记录的历史. 此操作不可逆.",
          confirmDropDatabase: "请确保要删除此数据库. 此操作不可逆.",
          confirmEmail: "请确认您的电子邮件地址",
          confirmImportNinox:
            "此操作可能会对您的数据库造成重大影响，无法撤消。 请确保您有备份。 要创建备份，请复制数据库或将其另存为归档文件",
          confirmInstallTemplate: "您要安装此模板吗?",
          confirmReindex:
            "此操作可能会花费一些时间. 在索引重建期间, 其他用户不能做任何修改.",
          confirmRemove: "请确保要删除此记录.",
          confirmRemoveAllChoosen: "请确保要删除所有选取列.",
          confirmRemoveChoiceValue: "请确保要删除此备选值.",
          confirmRemoveFile: "请确保要删除此文件.",
          confirmRemoveReference: "请确保要删除此引用. 此操作不可逆.",
          confirmRemoveTable:
            "请确保要删除此数据表. 其内包含的所有记录, 评论和文件都将丢失. 此操作不可逆.",
          confirmRemoveView: "你想删除此表视图?",
          confirmReorganizeDatabase:
            "重组此数据库并设置当前设备为数据库持有对象. 在其它设备上做的非同步更改将丢失.",
          confirmSaveReport: "是否要更改保存到布局?",
          constantValue: "分配常量",
          constraint: "约束",
          contactOwner: "联系团队的所有者",
          contacts: "联系人",
          contain: "包含",
          continueCloud: "您想继续使用Ninox Cloud吗？",
          copy: "复制",
          copyToCalendar: "复制到我的日历",
          couldntRenameFile: "不能重命名文件",
          country: "国家",
          cover: "盖",
          create: "创建",
          createApp: "创建新应用",
          createBackup: "创建备份",
          createCalendarEntry: "新条目",
          createChoiceField: "创建新的选择字段",
          created: "创建",
          createDatabase: "新数据库",
          createDatabaseFromTemplate: "来自模板",
          createDatabaseLocation: "您要将数据库存储在哪?",
          createDatabaseName: "输入数据库名称",
          createDatabaseOkay: "创建数据库",
          createdDate: "创建于",
          createdUser: "创建者",
          createField: "创建字段",
          createNewTeam: "创建新小组",
          createRecord: "创建新记录",
          createRecordRequiresPremium:
            "您已创建了$份记录. 请升级为高级版继续使用.",
          createReference: "创建数据表引用",
          createRoles: "创建新记录",
          createTableFromTemplate: "来自模板",
          createTeam: "创建新小组",
          createUI: "添加布局元素",
          csvDateFormat: "日期格式",
          csvDateFormatLocal: "格式指定",
          csvEncoding: "字符集",
          csvExportOpen: "下载",
          csvExportSaveAs: "另存为...",
          csvFooter: "页脚",
          csvHeader: "包含头数据",
          csvLinefeed: "换行符",
          csvNumberFormat: "数字格式",
          csvNumberFormatComma: "1.023,42",
          csvNumberFormatField: "使用字段设置",
          csvNumberFormatPoint: "1023.42",
          csvQuote: "文本引文",
          csvSeparator: "分隔符",
          csvSeparatorTab: "跳格键",
          csvSepHeader: "包括分隔符定义",
          currentPlan: "目前的计划",
          custom: "自定义",
          cut: "剪切",
          database: "数据库",
          databaseLocationCloud: "iCloud",
          databaseLocationLocal: "本地的",
          databaseName: "数据库名称",
          dataChange: "数据变化",
          dataField: "数据字段",
          dataModel: "数据模型",
          date: "日期",
          dateCalendar: "日历中显示",
          dateCalendarColor: "带有颜色",
          dateCalendarFormat: "显示为",
          dateDefaultToday: "今天",
          dateYearly: "周年",
          day_fr: "星期五",
          day_mo: "星期一",
          day_sa: "星期六",
          day_short_fr: "五",
          day_short_mo: "一",
          day_short_sa: "六",
          day_short_su: "日",
          day_short_th: "四",
          day_short_tu: "二",
          day_short_we: "三",
          day_su: "星期日",
          day_th: "星期四",
          day_tu: "星期二",
          day_we: "星期三",
          days: "天",
          daysLeft: "剩下的日子",
          decimalSeparatorLabel: "小数点分隔符",
          defaultAppName: "我的应用",
          defaultDateFormat: "dd.mm.yyyy",
          defaultValue: "默认值",
          defineWorkHours: "工作时间",
          deleteRoles: "删除记录",
          description: "描述",
          dontExecuteTriggers: " 不执行触发器",
          dontHaveAccount: "还没有帐号？",
          dontHaveAnAccount: "还没有帐号？",
          dontImport: "(不导入)",
          dontRepeat: "不要重复",
          download: "下载",
          dragColumnsHereToDefineView:
            "要定义可视列, 请拖拽字段到此. 如果没有列被定义, 视图将会被自动配置.",
          dragFieldsHere: "拖拽字段到此...",
          drawing: "画画",
          dropbox: "Dropbox",
          dropDatabase: "删除数据库",
          dumpDatabase: "下载备份",
          duplicate: "重复",
          duplicateDatabase: "复制数据库...",
          duplicateDatabaseName: "要复制数据库名称, 请尝试其它数据库.",
          duplicateDatabaseOkay: "复制",
          duplicateDatabaseToName: "请输入一个新的数据库名称",
          duplicateRecord: "重复记录",
          duplicateTable: "重复表",
          duplicateTableName:
            "There's already a table with this name. Please choose a different one.",
          duplicateUserName: "重复的用户名",
          editColumns: "编辑列...",
          editField: "编辑字段",
          editFields: "编辑字段",
          editTable: "修改据表",
          email: "电子邮件",
          emailAddress: "电子邮件地址",
          emailAlreadyRegistered: "该邮箱地址已被注册。",
          emailBody: "主体",
          emailMissing: "请提供一个有效的电子邮件地址。",
          emailNotRegistered: "抱歉，此电子邮件地址未注册。",
          emailOrUserName: "电子邮件",
          emailSubject: "对象",
          empty: "(空的)",
          emptyLayout: "空的",
          emptyValue: "空字段",
          endColor: "结束颜色",
          endsWith: "以结束",
          enterQuery: "输入查询信息",
          enterTableName: "请输入数据表名称",
          enterViewName: "视图名称",
          errorAmbiguousFieldName: "语意不明的字段名称",
          errorAmbiguousTypeName: "语意不明的数据表名称",
          errorCannotPostToYourself: "不要自言自语",
          errorCannotUpdateReverse: "字段不可写",
          errorConcurrentSchemaModification: "并行模式修改。 您的更改已恢复",
          errorEndOfStringExpected: "预期结尾",
          errorExpressionExpected: "预期表达式",
          errorFailedToDeleteFile: "文件无法删除",
          errorFieldIsNoDataField: "字段不是数据字段",
          errorFieldIsNoLinkField: "字段不是引用字段",
          errorFieldNotFound: "字段未找到",
          errorFieldTypeMismatch: "不兼容数据类型",
          errorFileNotFound: "文件未找到",
          errorGET: "服务器无响应, 请检查您的网络连接.",
          errorHTTPMethodUnsupported: "不支持HTTP方法",
          errorIdExpected: "期望标识符",
          errorImageConversionFailed: "图像无法转换",
          errorInvalidFieldName: "无效字段名称",
          errorInvalidParameter: "无效的参数",
          errorInvalidRequestBody: "请求正文无效",
          errorInvalidTypeName: "无效数据表名称",
          errorInvalidViewCaption: "视图名称无效",
          errorLicenseMaxRecordsExceeded: "您已超出许可证的最大记录数量",
          errorMissingFieldName: "未命名字段",
          errorMissingRequestBody: "缺少请求机构",
          errorMissingRequestParameter: "缺少参数",
          errorMissingTypeName: "未命名数据表",
          errorNodeNotFound: "记录未找到",
          errorNotAuthorized: "未授权的",
          errorServerNotResponding: "服务器无响应, 请检查您的网络连接.",
          errorSymbolExpected: "预期符号",
          errorTemplateTypeUnsupported: "文件类型不适合作为导出模板",
          errorTypeNotFound: "数据表未找到",
          errorUnexpectedSymbol: "非预期符号",
          errorValidationFailed: "无效值",
          errorValueExpected: "期望值",
          everybody: "每个人",
          evictDatabase: "清除缓存文件",
          executeQuery: "执行查询",
          executeTriggers: "执行触发器",
          executeUpdate: "执行更新",
          expandAll: "展开全部",
          expired: "过期",
          exportCSV: "输出CSV文件",
          exportData: "输出数据",
          exportXLS: "输出Excel文件",
          false: "假",
          field: "字段",
          fieldCaption: "字段名称",
          fields: "字段",
          fieldType: "数据类型",
          fieldWidth: "宽度",
          fieldWidth1Col: "1 列",
          fieldWidth2Col: "2 列",
          fieldWidth3Col: "3 列",
          fieldWidth4Col: "4 列",
          fileHandling: "处理文件为",
          files: "附件",
          filter: "过滤",
          FindIn$: " 搜寻$",
          fiveDays: "5 天",
          fixedHeight: "固定高度",
          fnInvalidComparator: "无效比较器",
          fnInvalidExpression: "无效表达式",
          fnInvalidNumber: "无效数字",
          fnInvalidOperator: "无效操作符",
          fnInvalidParameter: "无效参数",
          fnInvalidReturnType: "无效返回值",
          fnMissingParameter: "缺失参数",
          fnNotABoolean: "不是布尔值",
          fnReturnsMultipleValues: "表达式返回多个值",
          fnReturnsSingleValue: "表达式仅返回一个值",
          fnReturnTypeMismatch: "返回类型与then和else表达式不匹配.",
          fnUndefinedAggregation: "集合还未定义",
          fnUndefinedFunction: "功能尚未定义",
          fnUnknowError: "未知错误",
          fnUnsupportedAggregation: "用于此数据类型的集合还未定义",
          footer: "页脚",
          forgotPassword: "忘记密码了吗？",
          forgotPasswordSuccess: "要重设密码，请查看您的邮箱",
          form: "表格",
          format: "格式",
          formView: "带表单数据表",
          freetext: "描述",
          fromDate: "从",
          fromDropbox: "Dropbox",
          fromICloudDrive: "iCloud Drive",
          fromLocal: "从设备",
          fullName: "全名",
          function: "方程",
          gantt: "GANTT",
          generate: "生成",
          globalCode: "全局脚本定义",
          globalSearch: "全球搜索",
          gotoFirst: "转至开始",
          gotoLast: "转至末尾",
          gotoNext: "切换至下一个",
          gotoPrev: "切换至下一个",
          gotoToday: "今天",
          gradient: "渐变颜色",
          grey: "灰色",
          grouped: "分组的",
          grouping: "组",
          groupingSeparatorLabel: "组分隔符",
          hasIndex: "指数",
          haveAnAccount: "已经有帐号了？",
          header: "页眉",
          headFoot: "页眉 / 页脚",
          headline: "标题",
          heartNinox: "您喜欢Ninox吗?",
          height: "高度",
          help: "帮助",
          hidden: "隐",
          hideColumn: "隐藏列",
          hintAddFields: "创建几个数据字段",
          hintCreateDatabase: "创建一个新的数据库",
          hintCreateTable: "创建一个新的表",
          hintEnterTableName: "请输入表名",
          history: "历史",
          home: "主页",
          horizontalPosition: "水平位置",
          hours: "小时",
          icloudDrive: "iCloud Drive",
          icon: "图标",
          iconWithout: "(没有)",
          id: "身份标识",
          image: "图片",
          imageSize: "图像尺寸",
          imageSizeLarge: "大",
          imageSizeMedium: "中",
          imageSizeOriginal: "原始大小",
          imageSizeSmall: "小",
          import: "导入",
          importAmbiguous: "语意不明的记录",
          importAmbiguousSkip: "跳过",
          importAmbiguousUpdateAll: "更新所有",
          importArchive: "导入存档",
          importAvailableFields: "有效字段",
          importChooseCSVFile: "导入CSV文件...",
          importChooseDatabase: "请选取要导入数据的数据库.",
          importChooseFile: "导入文件...",
          importChooseURL: "进口网址",
          importContacts: "导入我的联系人",
          importCreateTable: "从入口创建新数据表",
          importData: "导入数据",
          importDatabase: "导入数据库",
          importDatabaseName: "请输入新数据库名称",
          importDescription:
            "请使用Ninox打开要导入数据的来自其它应用(例如, 邮箱应用)的文本文件或CSV文件.",
          importEnterURL: "请输入您要导入数据的URL",
          importExecute: "现在导入",
          importFailed: "导入失败",
          importFieldMode: "导入模式",
          importFieldModeKeyExact: "关键数据",
          importFieldModeUpdateAlways: "更新所有字段",
          importFieldModeUpdateEmpty: "更新空字段",
          importFields: "要导入的字段",
          importFromAnotherDatabase: "从另一个数据库导入",
          importHeader: "第一行作为表头",
          importIntoField: "目标字段",
          importMode: "导入模式",
          importModeAll: "新的和更新了的记录",
          importModeInvalid: "导入模式无效",
          importModeNew: "仅新的纪录",
          importModeNotSpecified: "导入模式未指定",
          importModeUpdate: "仅更新了的记录",
          importNoDatabasesDefined: "只要没有数据库被定义, 数据就不能被导入.",
          importNoDataFound: " 该文件不包含任何数据。",
          importPreview: "导入预览",
          importSelectFile: "选取CSV格式文件",
          importSourceSettings: "数据源设置",
          importSuccessful: "导入成功",
          importTable: "选取要导入数据的数据表",
          importTargetSettings: "导入设置",
          importTooManyFilesSelected: "请至少选取一个文件.",
          include: "包括",
          includeData: "复制记录",
          includeDataShort: "拷贝记录",
          includeFiles: "复制文件",
          includeFilesShort: "复制文件",
          installTemplate: "安装模板",
          installTemplateOkay: "安装",
          invalidBoolean: "无效值",
          invalidChoice: "无效选项",
          invalidCredentials: "电子邮件或密码--有点不对劲。",
          invalidDatabaseName: "数据库名称无效. 其必须不能包含特殊字符或空格.",
          invalidEncoding: "不能读取文件. 请选取其它编码尝试.",
          invalidFileName: "无效的文件名",
          invalidFunction: "无效程式",
          invalidNumber: "无效数字",
          invalidNumberMax: "值太大",
          invalidNumberMin: "值太小",
          invalidPassword: "密码无效, 其必须至少由6位数字组成.",
          invalidRequired: "请输入值",
          invalidRoleCaption: "角色名称无效",
          invalidRoleRoles: "角色无效",
          invalidString: "不是字符串",
          invalidStringMaxLength: "值太长. 最大长度: ",
          invalidStringMinLength: "值太短. 最小长度: ",
          invalidStringREMatch: "该值与正则表达式不匹配.",
          invalidTeamName: "无效的团队名称，请选择其他名称。",
          invalidUserEMail: "不合规电邮",
          invalidUserFirstName: "名字无效",
          invalidUserId: "用户ID无效",
          invalidUserLastName: "姓氏无效",
          invalidUserName: "无效的用户名",
          invalidUserRoles: "角色无效",
          invitation: "邀请",
          invitations: "邀请",
          invite: "邀请团队成员",
          inviteCode: "邀请代码",
          invitedAt: "邀请了",
          invitedFrom: "邀请来自",
          inviteHead: "邀請隊友",
          kanban: "看板",
          kanbanRecommend: "看板在选择字段中效果最佳。 推荐领域：",
          language: "语言",
          later: "以后",
          latestChanges: "最近的更改",
          latitude: "纬度",
          layoutElement: "添加布局元素",
          leaveTeam: "离开这个团队",
          leaveTeamConfirm: "你真的想离开这个团队吗？",
          leaveThisTeam: "离开这个团队",
          left: "剩下",
          licensed: "授权",
          licensedTo: "授权给",
          licenseExpires: "过期",
          licenseInvalid: "您的许可证已过期。 请更新许可证文件",
          lineHeight: "行高",
          linkConfig: "引用",
          linked: "链接对象",
          linkFrom: "链接来自",
          linkPreview: "显示预览",
          linkTo: "链接到",
          list: "清单",
          LocalizationAddLocaleColumnHeader: " 添加地区",
          LocalizationDefaultColumnHeader: " 默认",
          LocalizationModuleColumnHeader: "模组",
          logic: "逻辑",
          login: "登录",
          login2: "登录",
          loginAttempts:
            "太多失败的登录尝试。 我们已将您的帐户锁定了24小时。 请与您的管理员联系以解除阻止。",
          logout: "退出",
          longitude: "经度",
          manageBackups: "管理备份",
          margins: "页边距",
          maxUsers: "最多$1名团队成员。",
          messages: "消息",
          missingUserName: "用户名是必需的。",
          modeText: "源代码",
          modeVisual: "可视代码",
          modified: "修改",
          modifiedAt: "位于",
          modifiedDate: "修改位置",
          modifiedUser: "修改人",
          month: "月份",
          month_apr: "四月",
          month_aug: "八月",
          month_dec: "十二月",
          month_feb: "二月",
          month_jan: "一月",
          month_jul: "七月",
          month_jun: "六月",
          month_mar: "三月",
          month_may: "五月",
          month_nov: "十一月",
          month_oct: "十月",
          month_sep: "九月",
          monthly: "每月一次",
          months: "月",
          moveToBack: "背景",
          moveToFront: "前景",
          mustAgreeTerms: "您必须接受我们的条款和条件才能访问Ninox Cloud。",
          myDatabases: "我的数据库",
          name: "名称",
          new: "新",
          newField: "创建数据字段",
          newPassword: "新密码",
          newReport: "新布局",
          newTeam: "创建新小组",
          newView: "创建新表视图",
          next: "下一个",
          ninoxCloudSync: "Ninox Cloud同步",
          ninoxForTeams: "Ninox互联网",
          no: "否",
          noCalendarAccess: "请在系统设置中授予Ninox对日历的访问权限。",
          noCalendarEntries: "没有条目",
          noColor: "无颜色",
          nodeNotFound: "记录无从查找, 其可能已被删除.",
          noGrouping: "取消组",
          none: "(无)",
          noNeedToResetPassword: "无需重设密码？",
          notAuthorized: "您没有授权此操作",
          notConnected: "您目前没有连接到互联网。",
          noTeamName: "请选择团队名称。",
          noTemplate: "从一个新的和空的数据库开始。",
          notEmpty: "(不空)",
          notLoggedIn: "未登录",
          numberFormat: "数字格式",
          numberFormatDigits: "数字",
          numberFormatGroup: "千位分隔符",
          numberFormatPrefix: "字首",
          numberFormatUnit: "单位",
          numberMax: "最大数",
          numberMin: "最小数",
          numberValue: "数值",
          of: "关于",
          okay: "确定",
          oldPassword: "当前密码",
          oneAdminRequired: "此小组中至少必须有一个其他管理员用户。",
          oneDay: "1天",
          onlineHelp: "手册",
          op_abs: "绝对的",
          op_age: "年龄",
          op_and: "和",
          op_contains: "包含",
          op_date: "日期",
          op_day: "天",
          op_days: "天",
          op_duration: "时长",
          op_end: "结束",
          op_false: "否",
          op_format: "格式",
          op_if: "if / then / else",
          op_if_else: "else",
          op_if_if: "if",
          op_if_then: "then",
          op_index: "索引",
          op_like: "如同",
          op_lower: "小写字母",
          op_lpad: "左填充",
          op_month: "月份",
          op_not: "非",
          op_now: "新",
          op_number: "用作数字",
          op_or: "或",
          op_round: "舍入",
          op_rpad: "右填充",
          op_sign: "标志",
          op_start: "开始",
          op_string: "文本",
          op_substr: "子字符串",
          op_text: "用作文本",
          op_today: "今天",
          op_trim: "修剪",
          op_true: "是",
          op_upper: "大写字母",
          op_week: "周",
          op_weekday: "星期几",
          op_workdays: "工作日",
          op_year: "年",
          op_yearmonth: "年/月",
          op_yearquater: "一刻钟",
          op_yearweek: "年/周",
          openIn: "打开文件",
          operationInProgress: "要求的操作已经在进行中",
          operator: "操作员",
          options: "选项",
          original: "原版的",
          otherOptions: "其他选择",
          padding: "填充",
          page: "页面",
          pageBody: "页面正文",
          pageFoot: "页脚",
          pageHead: "页眉",
          pages: "页",
          palette: "调色板",
          paperFormat: "纸张格式",
          password: "密码",
          passwordMismatch: "密码不匹配 - 请重试.",
          paste: "粘贴",
          perMonth: "每月",
          perYear: "每年",
          photo: "照片",
          photoLibrary: "照片库",
          pickGroupColumn: "请选择分组列。",
          planCurrent: "目前的计划",
          planCurrentCovers: "您当前的计划涵盖$1个用户。",
          planExpired: "我们注意到，您的计划已经过期。",
          planExpiredMember:
            "该团队的计划已经过期。请联系团队所有者（$1）并要求他升级他的计划。",
          planGetNow: "立即获取$1个用户的Ninox Cloud。",
          planGetNowCTA: "订阅",
          planNone: "该计划已经过期。",
          planPurchaseOther: "此计划已与$1一起购买。",
          planRenewsAt: "此订阅将续订：$1。",
          planSave: "保存",
          planTerms:
            '此订阅通过Ninox App和Web浏览器为您和您的团队成员提供对Ninox Cloud的访问。付款将在确认购买时从iTunes帐户中扣除。除非在当前期间结束前至少24小时关闭自动续订，否则此订阅会自动续订。您的帐户将在当前期间结束前24小时内收取续订费用，并确定续订费用。订阅可以由用户管理，并且可以通过在购买后转到用户的帐户设置来关闭自动续订。免费试用期的任何未使用部分（如果提供）将在用户购买该出版物的订阅时（如果适用）被没收。购买即表示您同意<a href="https://ninoxdb.de/ninox/en/privacy.html">隐私政策</a>和<a href="https://ninox.com/ninox/en/terms.html">条款和条件</a>。',
          planTrial: "您有一个免费试用订阅。",
          planTrialExpiresAt: "试用订阅到期",
          planUnknown:
            "抱歉，我们无法确定您当前的计划。请联系support@ninox.com。",
          planUsage: "目前的用法",
          planUsageCovered: "其他计划涵盖了$1个用户。",
          planUsageInfo: "你有$2个团队的$1名成员。",
          planUsageRequired: "您的计划需要涵盖$1个用户。",
          planWrongUser:
            "您已经有一个具有不同ID的计划。 请使用以下电子邮件登录：$ 1",
          position: "位置",
          postCommentButton: "发表",
          postCommentLabel: "评论",
          presets: "预设",
          preview: "文件预览",
          print: "打印",
          printAll: "所有记录",
          printAttachments: "打印附件图片",
          printFontSize: "字体大小",
          printImages: "打印图像",
          printNodeSettings: "打印记录",
          printNow: "现在打印",
          printOne: "单个记录",
          printPDF: "打印PDF",
          printRendering: "预览",
          printTableSettings: "打印数据表",
          printView: "打印预览",
          private: "私人的",
          problemsLoggingIn: "您无法登录？",
          processBackground: "背景流程:",
          processDatabase: "数据库",
          processHeadline: "工艺流程",
          processLogs: "日志",
          processName: "过程",
          processRefresh: "刷新",
          processStatus: "地位",
          processSubline:
            "在这里您可以看到您帐户中所有正在运行的进程（如果有）。 通过“刷新”，您可以获得进程状态的更新",
          processTimeStarted: "开始",
          processTimeStopped: "结尾",
          processUser: "用户",
          productPurchased: "已安装",
          profileImage: "个人资料图片",
          protectDatabase: "保护此数据库",
          purchaseNow: "现在买",
          query: "查询",
          queryExecuting: "正在执行查询...",
          radius: "半径",
          readableIf: "可读如果",
          readRoles: "已允许读取",
          rebuildThumbnails: "重建缩略图",
          rebuildThumbnailsConfirm:
            "你真的想重建所有的缩略图吗？ 此过程可能需要一些时间。",
          red: "红",
          referenceLabel1N: "(1 : N)",
          referenceLabelFrom: "引用出自",
          referenceLabelN1: "(N : 1)",
          referenceLabelTo: "添加至",
          refFinderSearch: "输入搜索文本:",
          refFinderSearchCaption: " 搜寻",
          register: "创建一个帐户",
          registerNewsletter: "让我了解产品更新。",
          reindex: "重建索引",
          reIndexFiles: "重新索引文件",
          reIndexFilesConfirm:
            "您真的要重新索引文件吗？此过程可能需要一些时间。",
          reloginMessage: "请再次登录以继续。",
          remove: "删除",
          removeAllChoosen: "删除所选行",
          removed: "删除",
          removeField: "删除字段",
          removeFieldConfirm: "请确保要删除此字段. 此操作不可逆.",
          removeFile: "删除文件",
          removeFromTeam: "从小组中移除",
          removeFromTeamConfirm: "你真的想从你的团队中删除这个成员吗？",
          removeFromTeamHead: "从团队中删除成员",
          removeFromTeamOkay: "去掉",
          removeNRecords: "删除$条记录",
          removeRecord: "删除记录",
          removeReference: "删除引用",
          removeTab: "删除标签",
          removeTable: "删除数据表",
          removeTeam: "删除此团队",
          removeTeamConfirm:
            "您确定要永久删除此小组吗？ 此操作无法撤消。 所有数据将丢失。",
          removeView: "删除表视图",
          rename: "重命名",
          renameDatabase: "重命名数据库...",
          renameDatabaseOkay: "重命名",
          renameDatabaseToName: "请输入一个新的数据库名称",
          renameView: "重命名表视图",
          reorganizeDatabase: "重组",
          repeat: "重复",
          repeatPassword: "再次输入新密码",
          required: "必需的",
          resendInvitation: "重新发送邀请",
          resendVerificationMail: "重新发送验证邮件",
          resetPassword: "重置你的密码！",
          resetSchema: "还原更改",
          resetSync: "重置同步",
          restoreAppStoreTransactions: "恢复先前购买的产品",
          restoreBackup: "恢复备份",
          result: "结果",
          resyncCloudDatabases: "iCloud同步",
          right: "对",
          role_editor: "编辑",
          roleCaption: "角色名称",
          roleNotFound: "未找到角色",
          roles: "访问权",
          rolesExport: "导出数据",
          rolesImport: "导入数据",
          rolesMassDataUpdate: "执行更新查询",
          rolesOpen: "开放数据库",
          rolesPrint: "打印数据",
          runConsole: "执行",
          save: "保存",
          saveArchiveAs: "档案另存为...",
          saveAs: "另存为",
          saveDataModelChanges: "保存更改",
          saveImage: "保存图片",
          saveProfile: "保存个人信息",
          saveReport: "保存布局",
          saveSchema: "保存更改",
          saveViewAs: "视图另存为...",
          schemaDirty: "您已修改了应用.",
          schemaSaveRequired: "请保存对此应用的更改.",
          search: "搜寻",
          searchIn$: "搜寻$",
          security: "安全",
          select: "选择",
          selectAll: "选取所有项",
          sendInvitation: "发送邀请",
          sendMail: "发送邮件",
          sevenDays: "7 天",
          share: "分享",
          shareFile: "分享这个文件",
          shareURL: "公共URL",
          shareView: "分享这个观点",
          sharing: "分享",
          showAll: "显示所有项",
          showAs: "显示为",
          showColumn: "展会专栏",
          showExtendedOptions: "更多选择",
          showHideColumns: "编辑列...",
          showLess: "显示较少",
          showMore: "展示更多",
          showOnlyChoosen: "显示选项",
          showOnlyWorkHours: "仅显示工作时间",
          signature: "签名",
          signIn: "登录",
          signinHead: "登录到Ninox",
          signup: "注册",
          signUpBusinessMessage: "商业客户从我们的客户成功团队获得个人支持。",
          signupCreateTeam: "登录并创建团队",
          signupFree: "免费注册",
          signupHead: "注册Ninox Cloud",
          signUpHeader1_1: "你如何计划",
          signUpHeader1_2: "使用Ninox",
          signUpHeader2: "您想在哪个帐户上获得免费试用？",
          signUpHeader3: "请完成您的个人资料",
          signUpNewsletter: "是的，请将我添加到Ninox通讯中。",
          signupNewUser: "注册为新用户",
          signUpPrivacyPolicy: "隐私政策",
          size: "尺寸",
          solid: "纯色",
          sort: "排序",
          sortAscending: "升序",
          sortDescending: "降序",
          sorting: "排序",
          space: "空格",
          ssoErrorMessage: "某事不起作用。 我们目前无法登录。",
          ssoErrorSupportCta: "仍然无法登录？ 请联系支持。",
          ssoLogin: "SSO Login",
          ssoLogoutHeader: "您已成功注销。",
          ssoLogoutMessage: "请再次登录以继续。",
          startColor: "开始颜色",
          startsWith: "以开始",
          startTrial: "开始试用",
          staticImage: "静态图像",
          staticImagePhoto: "静态图像 (照片)",
          stayWithPlan: "坚持这个计划",
          storageLocation: "存储位置",
          storeOnICloudDrive: "商店在iCloud中",
          stretch: "伸展",
          stringLPad: "左填充",
          stringMaxLength: "最大长度",
          stringMinLength: "最小长度",
          stringMultiline: "多行",
          stringRPad: "右填充",
          style: "样式",
          subTable: "子表",
          supportTicket: "获得支持",
          switchTeam: "切换团队",
          switchToPlan: "切换到此计划",
          switchToPrintView: "切换至视图",
          syncFilesFailed: "失败",
          syncFilesToDownload: "要下载的文件",
          syncFilesToUpload: "要上传的文件",
          syncNow: "立即同步",
          syncProblemCheck: "检查同步问题",
          syncSeq: "同步序列号",
          syncState: "同步状态",
          tab: "标签",
          table: "数据表",
          tableCaption: "数据表名称",
          tableReference: "创建数据表引用",
          tables: "数据表",
          tableView: "数据表",
          takePhoto: "拍照",
          targetTable: "目标",
          teamMember: "队员",
          teamMembers: "团队成员",
          teamName: "队名",
          teamSettings: "团队设置",
          templateRequired: "必需模板",
          templateRequiredContacts:
            '要导入联系人, 请安装数据表模版: "联系人管理"',
          templateRequiredOkay: "安装数据表模版...",
          templates: "模板",
          termsDisclamer: "建立帐户即表示您同意$服务条款$",
          termsOfService: "服务条款",
          text: "文本",
          textAndDate: "文本 / 日期",
          thanksCloud: "感谢您使用Ninox Cloud！",
          thisFieldsAreRequired: "请填写字段",
          time: "时间",
          timeFmt: "时间格式",
          timestampDefaultNow: "现在",
          toDate: "到",
          today: "今天",
          toggleSelection: "切换选项",
          tooltip: "提示",
          top: "最佳",
          transparent: "透明",
          triggerAfterCreate: "上创建触发器",
          triggerAfterCreateShort: "上创建触发器",
          triggerAfterOpen: "打开后触发",
          triggerAfterUpdate: "更新后触发",
          triggerAfterUpdateShort: "更新后触发",
          trim: "修剪空格",
          true: "真",
          type_appointment: "预约",
          type_boolean: "是 / 否",
          type_br: "换行符",
          type_button: "按键",
          type_chart: "图表",
          type_choice: "选项",
          type_color: "颜色",
          type_custom: "自定义HTML控件",
          type_date: "日期",
          type_datx: "日期 (new)",
          type_email: "Email",
          type_file: "图像",
          type_fn: "程式",
          type_head: "头部",
          type_html: "富文本",
          type_icon: "图标",
          type_link: "URL",
          type_list: "子表",
          type_location: "地点",
          type_multi: "多项选择",
          type_number: "数字",
          type_object: "对象",
          type_phone: "电话号码",
          type_ref: "引用",
          type_rev: "引用",
          type_signature: "签名",
          type_space: "空格",
          type_string: "文本",
          type_string_multiline: "文本 (多行)",
          type_tab: "标签",
          type_text: "免费文字",
          type_time: "时间",
          type_timeinterval: "时间间隔",
          type_timestamp: "日期 / 时间",
          type_user: "用户",
          type_view: "视图",
          typeExportTemplates: "输出模板",
          typeMissmatchHtml: "类型不匹配，此字段必须返回html",
          typeMissmatchImage: "类型不匹配，此字段必须返回图像",
          unknowError: "出现未知错误",
          unknown: "未知的",
          unknownError: "未知错误",
          unlink: "解除",
          unlinked: "解除",
          unlockDatabase: "解锁此数据库",
          unnamed: "(未命名的)",
          unprotectDatabase: "删除此数据库的保护",
          unsavedChanges: "一些更改不能被保存",
          updateAllRecords: "更新所有记录",
          updateAssistant: "海量数据更新",
          updateAssistantExecute: "执行",
          updateAssistantFormula: "执行查询:",
          updateAssistantResults: "查询结果 / 更新",
          updated: "已更改为",
          updateExpressionNotAllowed: "这个公式可能不修改数据",
          updateModeAssignFunction: "分配已计算值",
          updateModeAssignNull: "空字段",
          updateModeAssignValue: "分配常量",
          updateModeDontChange: "不更改",
          updateSelectedRecords: "更新所选记录",
          updateVisibleRecords: "更新所有可见记录",
          upgradePlan: "升级计划",
          upgradeToPremium: "升级",
          uploadBackgroundFile: "上传背景图像",
          uploadFailed: "文件不能被上传.",
          uploading: "正在上传...",
          user: "用户",
          userName: "用户名",
          userNotFound: "找不到用户",
          users: "用户",
          uuid: "全局唯一标识符",
          validUntil: "有效期至",
          value: "值",
          verifyEmail$:
            " 请确认您的电子邮件地址$以继续使用Ninox。没有电子邮件？请检查您的垃圾邮件文件夹。",
          verticalPosition: "垂直位置",
          view: "视图",
          viewAs: "显示为",
          visibilityRule: "仅显示字段, 条件是:",
          visibilityRuleShort: "仅显示,条件是",
          visibleColumns: "可视列",
          visibleRows: "可见行",
          week: "星期",
          weeks: "周",
          whatsnew: "有了哪些更新",
          whatsnew1: "看板图表",
          whatsnew1Body: "只需单击一下即可更改看板通道的颜色，图标和顺序。",
          whatsnew1Title: "改进了看板视图",
          whatsnew2: "GANTT图表",
          whatsnew2Body: "通过拖放重新排列导航窗格中的项目",
          whatsnew2Title: "改进了导航",
          whatsnew3: "卡/画廊视图",
          whatsnew3Body: "使用数据透视表分析数据。",
          whatsnew3Title: "新的数据透视表视图",
          whatsnew4: "表格视图",
          whatsnew5: "标题和自由文本元素的样式",
          whatsnewa1: "从任何地方创建数据库",
          whatsnewa2: "从您的所有设备同步。",
          whatsnewa3: "与您的团队协作。",
          whatsnewa4: "设计印刷布局。",
          whatsnewa5: "構建表單以輕鬆收集數據。",
          whatsnewDontShow: "不要再显示",
          whatsnewFeatures: "特征",
          whatsnewHelp: "帮助中心",
          whatsnewNext: "下一个",
          whatsnewSkip: "跳跃",
          whatsnewStart: "准备好出发！",
          whatsnewSubscribe: "加入我们的网络研讨会",
          whatsnewTitle: "适用于Android的Ninox",
          whatsnewVersion: "版",
          width: "宽度",
          workPhone: "工作电话",
          writableIf: "可写如果",
          writeRoles: "已允许写入",
          wrongPassword: "密码错误。",
          wrongUserPassword: "密码不正确或用户名不存在.",
          xlsExportOpen: "下载",
          xlsExportSaveAs: "另存为...",
          years: "年份",
          yes: "是",
          yesterday: "昨天",
          yourAccount: "你的帐户",
          zapierIntegration: "Zapier整合",
          zoom: "放大",
          dayNames: [
            "星期日",
            "星期一",
            "星期二",
            "星期三",
            "星期四",
            "星期五",
            "星期六",
          ],
          dayNamesShort: ["日", "一", "二", "三", "四", "五", "六"],
          monthNames: [
            "一月",
            "二月",
            "三月",
            "四月",
            "五月",
            "六月",
            "七月",
            "八月",
            "九月",
            "十月",
            "十一月",
            "十二月",
          ],
          agg: {
            cnt: "计算",
            count: "计算",
            sum: "求和",
            avg: "平均值",
            min: "最小",
            max: "最大",
            first: "第一个",
            last: "最后一个",
            concat: "联接",
            median: "中等",
            sort: "排序值",
            unique: "唯一值",
          },
          types: {
            number: "数字",
            string: "文本",
            string_multiline: "文本 (多行)",
            date: "日期",
            datx: "日期 (new)",
            time: "时间",
            timeinterval: "时间间隔",
            timestamp: "日期 / 时间",
            boolean: "是 / 否",
            choice: "选项",
            multi: "多项选择",
            list: "子表",
            ref: "引用",
            rev: "引用",
            object: "对象",
            html: "富文本",
            fn: "程式",
            tab: "标签",
            head: "头部",
            text: "免费文字",
            br: "换行符",
            space: "空格",
            file: "图像",
            link: "URL",
            email: "Email",
            phone: "电话号码",
            appointment: "预约",
            user: "用户",
            location: "地点",
            icon: "图标",
            color: "颜色",
            custom: "自定义HTML控件",
            button: "按键",
            signature: "签名",
            view: "视图",
            chart: "图表",
          },
        },
        cht: {
          actionRequiresPremium: "請升級到高級版以激活此特性.",
          actions: "行動",
          activateSharing: "激活分享",
          add: "添加",
          addFile: "添加文件",
          addRole: "創建新角色",
          addRowCreate: "創建新記錄",
          addRowFind: " 添加現有記錄",
          addRowFindCreate: " 搜索或創建記錄",
          addRule: "添加規則",
          addTable: "新數據表",
          admin: "管理",
          advancedOptions: "高級選項",
          agg_avg: "平均值",
          agg_cnt: "計算",
          agg_concat: "聯接",
          agg_first: "第一個",
          agg_last: "最後一個",
          agg_max: "最大",
          agg_median: "中等",
          agg_min: "最小",
          agg_sort: "排序值",
          agg_sum: "求和",
          agg_unique: "唯一值",
          aggregation: "頁腳",
          agreeTerms: "我已閱讀並同意$1條款和條件$2。",
          all: "(所有)",
          allChangesSaved: "所有更改都已保存.",
          alreadyTrialPlan:
            "您已經在Ninox Cloud的試用計劃中。請先升級您的計劃，以創建另一個團隊。",
          annual: "全年",
          anyFile: "任何檔案",
          appointmentBegin: "開始",
          appointmentEnd: "結束",
          apps: "應用",
          askLater: "等會再問我",
          atColumn: "列",
          atLine: "行",
          auto: "(自動)",
          autoHeight: "自適應高度",
          autoLayout: "自動創建佈局",
          automatic: "自動",
          availableColumns: "有效列",
          back: "返回",
          background: "背景",
          backgroundColor: "背景顏色",
          backgroundFileMustBeJPEG: "背景圖像必須是JPEG文件.",
          backgrounds: "背景圖像",
          billedAnnually: "每年開帳單",
          blue: "藍色",
          border: "邊界",
          borderStyle: "邊界樣式",
          bottom: "底部",
          br: "換行符",
          business: "商業",
          buyNow: "現在購買",
          calculate: "計算",
          calculatedValue: "分配已計算值",
          calendar: "日曆",
          calendarCreateAppointmentField:
            "Create an appointment field to create calendar entries.",
          calendarOptions: "日曆選項",
          calendarSyncAhead: "幾個月前提前同步",
          calendarSyncBeyond: "幾個月可以同步超過",
          calendarSyncEnabled: "啟用日曆同步",
          calendarSyncLocation: "存儲位置",
          calendarWeek: "日曆周",
          calendarWorkEnd: "工作日結束",
          calendarWorkStart: "工作日開始",
          cancel: "取消",
          cancelInvitation: "取消邀請",
          cancelInvitationConfirm: "您要取消此邀請嗎？",
          cancelUpload: "取消",
          canFindIt: " 沒有電子郵件？請檢查您的垃圾郵件文件夾。",
          cannotChangeRole: "無法保存角色設置",
          cannotChangeUser: "無法保存用戶設置",
          cannotConnectAppStore: "無法連接到App Store。請稍後再試。",
          cannotRemoveTeam: "無法刪除此小組",
          caption: "名稱",
          cards: "牌",
          cascade: "布置",
          center: "中央",
          changePassword: "更改密碼",
          chartBar: "條形圖",
          chartBubble: "泡泡表",
          chartBubbleRequiresColumns: "氣泡圖需要X，Y和半徑三個數字列。",
          chartDatasets: "數據系列",
          chartDatasetsCols: "列",
          chartDatasetsRows: "行",
          chartDoughnut: "甜甜圈圖",
          chartLegend: "傳說",
          chartLine: "折線圖",
          chartLineTension: "平滑的線條",
          chartNoData: "圖表無數據. 請在您的視圖中配置至少一目數字欄.",
          chartPie: "餅形圖",
          chartPolarArea: "極地圖",
          chartRadar: "雷達圖",
          chartStacked: "疊放",
          chartType: "圖表類型",
          chartView: "圖表",
          chatPost: "消息",
          choiceAddValue: "添加值",
          choiceValues: "備選值",
          chooseFile: "添加文件",
          choosen: "選項",
          choosePhoto: "添加照片",
          chooseTeamName: "隊名",
          chooseTemplate: "選擇模板",
          chooseTypeToExport: "請選取要輸出的數據表.",
          clear: "明確",
          clearBackground: "背景清晰",
          clearChatHistory: "清除曆史",
          clearHistory: "清除曆史",
          clearSelection: "清除選項",
          close: "關閉",
          collapseAll: "折疊全部",
          color: "顏色",
          colorScheme: "色彩風格",
          column: "列",
          commands: "命令",
          commented: "評論",
          comments: "評論",
          company: "公司",
          conditionalStyling: "條件樣式",
          confirmClearHistory: "請確保要清除所有記錄的曆史. 此操作不可逆.",
          confirmDropDatabase: "請確保要刪除此數據庫. 此操作不可逆.",
          confirmEmail: "請確認您的電子郵件地址",
          confirmImportNinox:
            "此操作可能會對您的數據庫造成重大影響，無法撤消。 請確保您有備份。 要創建備份，請複制數據庫或將其另存為歸檔文件",
          confirmInstallTemplate: "您要安裝此模板嗎?",
          confirmReindex:
            "此操作可能會花費一些時間. 在索引重建期間, 其他用戶不能做任何修改.",
          confirmRemove: "請確保要刪除此記錄.",
          confirmRemoveAllChoosen: "請確保要刪除所有選取列.",
          confirmRemoveChoiceValue: "請確保要刪除此備選值.",
          confirmRemoveFile: "請確保要刪除此文件.",
          confirmRemoveReference: "請確保要刪除此引用. 此操作不可逆.",
          confirmRemoveTable:
            "請確保要刪除此數據表. 其內包含的所有記錄, 評論和文件都將丟失. 此操作不可逆.",
          confirmRemoveView: "你想刪除此表視圖?",
          confirmReorganizeDatabase:
            "重組此數據庫並設置當前設備為數據庫持有對象. 在其它設備上做的非同步更改將丟失.",
          confirmSaveReport: "是否要更改保存到佈局?",
          constantValue: "分配常量",
          constraint: "約束",
          contactOwner: "聯繫團隊的所有者",
          contacts: "聯系人",
          contain: "包含",
          continueCloud: "您想繼續使用Ninox Cloud嗎？",
          copy: "複制",
          copyToCalendar: "複製到我的日曆",
          couldntRenameFile: "不能重命名文件",
          country: "國家",
          cover: "蓋",
          create: "創建",
          createApp: "創建新應用",
          createBackup: "創建備份",
          createCalendarEntry: "新條目",
          createChoiceField: "創建新的選擇字段",
          created: "創建",
          createDatabase: "新數據庫",
          createDatabaseFromTemplate: "來自模板",
          createDatabaseLocation: "您要將數據庫存儲在哪?",
          createDatabaseName: "輸入數據庫名稱",
          createDatabaseOkay: "創建數據庫",
          createdDate: "創建於",
          createdUser: "創建者",
          createField: "創建字段",
          createNewTeam: "創建新小組",
          createRecord: "創建新記錄",
          createRecordRequiresPremium:
            "您已創建了$份記錄. 請升級為高級版繼續使用.",
          createReference: "創建數據表引用",
          createRoles: "創建新記錄",
          createTableFromTemplate: "來自模板",
          createTeam: "創建新小組",
          createUI: "添加布局元素",
          csvDateFormat: "日期格式",
          csvDateFormatLocal: "格式指定",
          csvEncoding: "字符集",
          csvExportOpen: "下載",
          csvExportSaveAs: "另存為...",
          csvFooter: "頁腳",
          csvHeader: "包含頭數據",
          csvLinefeed: "換行符",
          csvNumberFormat: "數字格式",
          csvNumberFormatComma: "1.023,42",
          csvNumberFormatField: "使用字段設置",
          csvNumberFormatPoint: "1023.42",
          csvQuote: "文本引文",
          csvSeparator: "分隔符",
          csvSeparatorTab: "跳格鍵",
          csvSepHeader: "包括分隔符定義",
          currentPlan: "目前的計劃",
          custom: "自定義",
          cut: "剪切",
          database: "數據庫",
          databaseLocationCloud: "iCloud",
          databaseLocationLocal: "本地的",
          databaseName: "資料庫名稱",
          dataChange: "數據變化",
          dataField: "數據字段",
          dataModel: "數據模型",
          date: "日期",
          dateCalendar: "日曆中顯示",
          dateCalendarColor: "帶有顏色",
          dateCalendarFormat: "顯示為",
          dateDefaultToday: "今天",
          dateYearly: "周年",
          day_fr: "星期五",
          day_mo: "星期一",
          day_sa: "星期六",
          day_short_fr: "五",
          day_short_mo: "一",
          day_short_sa: "六",
          day_short_su: "日",
          day_short_th: "四",
          day_short_tu: "二",
          day_short_we: "三",
          day_su: "星期日",
          day_th: "星期四",
          day_tu: "星期二",
          day_we: "星期三",
          days: "天",
          daysLeft: "剩下的日子",
          decimalSeparatorLabel: "小数点分隔符",
          defaultAppName: "我的應用",
          defaultDateFormat: "dd.mm.yyyy",
          defaultValue: "默認值",
          defineWorkHours: "工作時間",
          deleteRoles: "刪除記錄",
          description: "描述",
          dontExecuteTriggers: "不執行觸發器",
          dontHaveAccount: "還沒有帳號？",
          dontHaveAnAccount: "還沒有帳號？",
          dontImport: "(不導入)",
          dontRepeat: "不要重複",
          download: "下載",
          dragColumnsHereToDefineView:
            "要定義可視列, 請拖拽字段到此. 如果沒有列被定義, 視圖將會被自動配置.",
          dragFieldsHere: "拖拽字段到此...",
          drawing: "畫畫",
          dropbox: "Dropbox",
          dropDatabase: "刪除數據庫",
          dumpDatabase: "下載備份",
          duplicate: "重複",
          duplicateDatabase: "複制數據庫...",
          duplicateDatabaseName: "要複制數據庫名稱, 請嘗試其它數據庫.",
          duplicateDatabaseOkay: "複制",
          duplicateDatabaseToName: "請輸入一個新的數據庫名稱",
          duplicateRecord: "重複記錄",
          duplicateTable: "重複表",
          duplicateTableName:
            "There's already a table with this name. Please choose a different one.",
          duplicateUserName: "重複的用戶名",
          editColumns: "編輯列...",
          editField: "編輯字段",
          editFields: "編輯字段",
          editTable: "修改據表",
          email: "電子郵件",
          emailAddress: "電子郵件地址",
          emailAlreadyRegistered: "該郵箱地址已被註冊。",
          emailBody: "主體",
          emailMissing: "請提供一個有效的電子郵件地址。",
          emailNotRegistered: "抱歉，此電子郵件地址未註冊。",
          emailOrUserName: "電子郵件",
          emailSubject: "對象",
          empty: "(空的)",
          emptyLayout: "空的",
          emptyValue: "空字段",
          endColor: "結束顏色",
          endsWith: "以結束",
          enterQuery: "輸入查詢信息",
          enterTableName: "請輸入數據表名稱",
          enterViewName: "視圖名稱",
          errorAmbiguousFieldName: "語意不明的字段名稱",
          errorAmbiguousTypeName: "語意不明的數據表名稱",
          errorCannotPostToYourself: "不要自言自語",
          errorCannotUpdateReverse: "字段不可寫",
          errorConcurrentSchemaModification: "並發模式修改。 您的更改已恢復",
          errorEndOfStringExpected: "預期結尾",
          errorExpressionExpected: "預期表達式",
          errorFailedToDeleteFile: "文件無法刪除",
          errorFieldIsNoDataField: "字段不是數據字段",
          errorFieldIsNoLinkField: "字段不是引用字段",
          errorFieldNotFound: "字段未找到",
          errorFieldTypeMismatch: "不兼容數據類型",
          errorFileNotFound: "文件未找到",
          errorGET: "服務器無響應, 請檢查您的網絡連接.",
          errorHTTPMethodUnsupported: "不支持HTTP方法",
          errorIdExpected: "期望標識符",
          errorImageConversionFailed: "圖像無法轉換",
          errorInvalidFieldName: "無效字段名稱",
          errorInvalidParameter: "無效的參數",
          errorInvalidRequestBody: "請求正文無效",
          errorInvalidTypeName: "無效數據表名稱",
          errorInvalidViewCaption: "視圖名稱無效",
          errorLicenseMaxRecordsExceeded: "您已超出許可證的最大記錄數量",
          errorMissingFieldName: "未命名字段",
          errorMissingRequestBody: "缺少請求機構",
          errorMissingRequestParameter: "缺少參數",
          errorMissingTypeName: "未命名數據表",
          errorNodeNotFound: "記錄未找到",
          errorNotAuthorized: "未授權的",
          errorServerNotResponding: "服務器無響應, 請檢查您的網絡連接.",
          errorSymbolExpected: "預期符號",
          errorTemplateTypeUnsupported: "文件類型不適合作為導出模板",
          errorTypeNotFound: "數據表未找到",
          errorUnexpectedSymbol: "非預期符號",
          errorValidationFailed: "無效值",
          errorValueExpected: "期望值",
          everybody: "每個人",
          evictDatabase: "清除緩存文件",
          executeQuery: "執行查詢",
          executeTriggers: "執行觸發器",
          executeUpdate: "執行更新",
          expandAll: "展開全部",
          expired: "過期",
          exportCSV: "輸出CSV文件",
          exportData: "輸出數據",
          exportXLS: "輸出Excel文件",
          false: "假",
          field: "字段",
          fieldCaption: "字段名稱",
          fields: "字段",
          fieldType: "數據類型",
          fieldWidth: "寬度",
          fieldWidth1Col: "1 列",
          fieldWidth2Col: "2 列",
          fieldWidth3Col: "3 列",
          fieldWidth4Col: "4 列",
          fileHandling: "處理文件為",
          files: "附件",
          filter: "過濾",
          FindIn$: " 搜尋$",
          fiveDays: "5 天",
          fixedHeight: "固定高度",
          fnInvalidComparator: "無效比較器",
          fnInvalidExpression: "無效表達式",
          fnInvalidNumber: "無效數字",
          fnInvalidOperator: "無效操作符",
          fnInvalidParameter: "無效參數",
          fnInvalidReturnType: "無效返回值",
          fnMissingParameter: "缺失參數",
          fnNotABoolean: "不是布爾值",
          fnReturnsMultipleValues: "表達式返回多個值",
          fnReturnsSingleValue: "表達式僅返回一個值",
          fnReturnTypeMismatch: "返回類型與then和else表達式不匹配.",
          fnUndefinedAggregation: "集合還未定義",
          fnUndefinedFunction: "功能尚未定義",
          fnUnknowError: "未知錯誤",
          fnUnsupportedAggregation: "用於此數據類型的集合還未定義",
          footer: "頁腳",
          forgotPassword: "忘記密碼了嗎？",
          forgotPasswordSuccess: "要重設密碼，請查看您的郵箱",
          form: "表格",
          format: "格式",
          formView: "帶表單數據表",
          freetext: "描述",
          fromDate: "從",
          fromDropbox: "Dropbox",
          fromICloudDrive: "iCloud Drive",
          fromLocal: "從設備",
          fullName: "全名",
          function: "方程",
          gantt: "GANTT",
          generate: "生成",
          globalCode: "全局腳本定義",
          globalSearch: "全球搜索",
          gotoFirst: "轉至開始",
          gotoLast: "轉至末尾",
          gotoNext: "切換至下一個",
          gotoPrev: "切換至下一個",
          gotoToday: "今天",
          gradient: "漸變顏色",
          grey: "灰色",
          grouped: "分組的",
          grouping: "組",
          groupingSeparatorLabel: "组分隔符",
          hasIndex: "指數",
          haveAnAccount: "已經有帳號了？",
          header: "頁眉",
          headFoot: "頁眉 / 頁腳",
          headline: "標題",
          heartNinox: "您喜歡Ninox嗎?",
          height: "高度",
          help: "幫助",
          hidden: "隱",
          hideColumn: "隱藏列",
          hintAddFields: "創建幾個數據字段",
          hintCreateDatabase: "創建一個新的數據庫",
          hintCreateTable: "創建一個新的表",
          hintEnterTableName: "請輸入表名",
          history: "曆史",
          home: "主頁",
          horizontalPosition: "水平位置",
          hours: "小時",
          icloudDrive: "iCloud Drive",
          icon: "圖標",
          iconWithout: "(沒有)",
          id: "身份標識",
          image: "圖片",
          imageSize: "圖像尺寸",
          imageSizeLarge: "大",
          imageSizeMedium: "中",
          imageSizeOriginal: "原始大小",
          imageSizeSmall: "小",
          import: "導入",
          importAmbiguous: "語意不明的記錄",
          importAmbiguousSkip: "跳過",
          importAmbiguousUpdateAll: "更新所有",
          importArchive: "導入存檔",
          importAvailableFields: "有效字段",
          importChooseCSVFile: "導入CSV文件...",
          importChooseDatabase: "請選取要導入數據的數據庫.",
          importChooseFile: "導入文件...",
          importChooseURL: "進口網址",
          importContacts: "導入我的聯系人",
          importCreateTable: "從入口創建新數據表",
          importData: "導入數據",
          importDatabase: "導入數據庫",
          importDatabaseName: "請輸入新數據庫名稱",
          importDescription:
            "請使用Ninox打開要導入數據的來自其它應用(例如, 郵箱應用)的文本文件或CSV文件.",
          importEnterURL: "請輸入您要導入數據的URL",
          importExecute: "現在導入",
          importFailed: "導入失敗",
          importFieldMode: "導入模式",
          importFieldModeKeyExact: "關鍵數據",
          importFieldModeUpdateAlways: "更新所有字段",
          importFieldModeUpdateEmpty: "更新空字段",
          importFields: "要導入的字段",
          importFromAnotherDatabase: "從另一個數據庫導入",
          importHeader: "第一行作為表頭",
          importIntoField: "目標字段",
          importMode: "導入模式",
          importModeAll: "新的和更新了的記錄",
          importModeInvalid: "導入模式無效",
          importModeNew: "僅新的紀錄",
          importModeNotSpecified: "導入模式未指定",
          importModeUpdate: "僅更新了的記錄",
          importNoDatabasesDefined: "只要沒有數據庫被定義, 數據就不能被導入.",
          importNoDataFound: " 該文件不包含任何數據。",
          importPreview: "導入預覽",
          importSelectFile: "選取CSV格式文件",
          importSourceSettings: "數據源設置",
          importSuccessful: "導入成功",
          importTable: "選取要導入數據的數據表",
          importTargetSettings: "導入設置",
          importTooManyFilesSelected: "請至少選取一個文件.",
          include: "包括",
          includeData: "複制記錄",
          includeDataShort: "拷貝記錄",
          includeFiles: "複制文件",
          includeFilesShort: "複製文件",
          installTemplate: "安裝模板",
          installTemplateOkay: "安裝",
          invalidBoolean: "無效值",
          invalidChoice: "無效選項",
          invalidCredentials: "電子郵件或密碼-某些錯誤。",
          invalidDatabaseName: "數據庫名稱無效. 其必須不能包含特殊字符或空格.",
          invalidEncoding: "不能讀取文件. 請選取其它編碼嘗試.",
          invalidFileName: "無效的文件名",
          invalidFunction: "無效程式",
          invalidNumber: "無效數字",
          invalidNumberMax: "值太大",
          invalidNumberMin: "值太小",
          invalidPassword: "密碼無效, 其必須至少由6位數字組成.",
          invalidRequired: "請輸入值",
          invalidRoleCaption: "角色名稱無效",
          invalidRoleRoles: "角色無效",
          invalidString: "不是字符串",
          invalidStringMaxLength: "值太長. 最大長度: ",
          invalidStringMinLength: "值太短. 最小長度: ",
          invalidStringREMatch: "該值與正則表達式不匹配.",
          invalidTeamName: "無效的團隊名稱，請選擇其他名稱。",
          invalidUserEMail: "不合規電郵",
          invalidUserFirstName: "名字無效",
          invalidUserId: "用戶ID無效",
          invalidUserLastName: "姓氏無效",
          invalidUserName: "無效的用戶名",
          invalidUserRoles: "角色無效",
          invitation: "邀請",
          invitations: "邀請",
          invite: "邀請團隊成員",
          inviteCode: "邀請代碼",
          invitedAt: "邀請了",
          invitedFrom: "邀請來自",
          inviteHead: "邀请队友",
          kanban: "看板",
          kanbanRecommend: "看板在選擇字段中效果最佳。 推薦領域：",
          language: "語言",
          later: "以後",
          latestChanges: "最近的更改",
          latitude: "緯度",
          layoutElement: "添加布局元素",
          leaveTeam: "離開這個團隊",
          leaveTeamConfirm: "你真的想離開這個團隊嗎？",
          leaveThisTeam: "離開這個團隊",
          left: "剩下",
          licensed: "授權",
          licensedTo: "授權給",
          licenseExpires: "過期",
          licenseInvalid: "您的許可證已過期。 請更新許可證文件",
          lineHeight: "行高",
          linkConfig: "引用",
          linked: "鏈接對象",
          linkFrom: "鏈接來自",
          linkPreview: "顯示預覽",
          linkTo: "鏈接到",
          list: "清單",
          LocalizationAddLocaleColumnHeader: " 添加地區",
          LocalizationDefaultColumnHeader: "默認",
          LocalizationModuleColumnHeader: "模組",
          logic: "邏輯",
          login: "登錄",
          login2: "登錄",
          loginAttempts:
            "太多失敗的登錄嘗試。 我們已將您的帳戶鎖定了24小時。 請與您的管理員聯繫以解除阻止。",
          logout: "退出",
          longitude: "經度",
          manageBackups: "管理備份",
          margins: "頁邊距",
          maxUsers: "最多$1名團隊成員。",
          messages: "消息",
          missingUserName: "用戶名是必需的",
          modeText: "源代碼",
          modeVisual: "可視代碼",
          modified: "修改",
          modifiedAt: "位於",
          modifiedDate: "修改位置",
          modifiedUser: "修改人",
          month: "月份",
          month_apr: "四月",
          month_aug: "八月",
          month_dec: "十二月",
          month_feb: "二月",
          month_jan: "一月",
          month_jul: "七月",
          month_jun: "六月",
          month_mar: "三月",
          month_may: "五月",
          month_nov: "十一月",
          month_oct: "十月",
          month_sep: "九月",
          monthly: "每月一次",
          months: "月",
          moveToBack: "背景",
          moveToFront: "前景",
          mustAgreeTerms: "您必須接受我們的條款和條件才能訪問Ninox Cloud。",
          myDatabases: "我的數據庫",
          name: "名稱",
          new: "新",
          newField: "創建數據字段",
          newPassword: "新密碼",
          newReport: "新佈局",
          newTeam: "創建新小組",
          newView: "創建新表視圖",
          next: "下一個",
          ninoxCloudSync: "Ninox Cloud同步",
          ninoxForTeams: "Ninox互聯網",
          no: "否",
          noCalendarAccess: "請在系統設置中授予Ninox對日曆的訪問權限。",
          noCalendarEntries: "沒有條目",
          noColor: "無顏色",
          nodeNotFound: "記錄無從查找, 其可能已被刪除.",
          noGrouping: "取消組",
          none: "(無)",
          noNeedToResetPassword: "無需重設密碼？",
          notAuthorized: "您沒有授權此操作",
          notConnected: "您目前沒有連接到互聯網。",
          noTeamName: "請選擇團隊名稱。",
          noTemplate: "從一個新的和空的數據庫開始。",
          notEmpty: "(不空)",
          notLoggedIn: "未登錄",
          numberFormat: "數字格式",
          numberFormatDigits: "數字",
          numberFormatGroup: "千位分隔符",
          numberFormatPrefix: "字首",
          numberFormatUnit: "單位",
          numberMax: "最大數",
          numberMin: "最小數",
          numberValue: "數值",
          of: "關於",
          okay: "確定",
          oldPassword: "當前密碼",
          oneAdminRequired: "此小組中至少必須有一個其他管理員用戶。",
          oneDay: "1天",
          onlineHelp: "手冊",
          op_abs: "絕對的",
          op_age: "年齡",
          op_and: "和",
          op_contains: "包含",
          op_date: "日期",
          op_day: "天",
          op_days: "天",
          op_duration: "時長",
          op_end: "結束",
          op_false: "否",
          op_format: "格式",
          op_if: "if / then / else",
          op_if_else: "else",
          op_if_if: "if",
          op_if_then: "then",
          op_index: "索引",
          op_like: "如同",
          op_lower: "小寫字母",
          op_lpad: "左填充",
          op_month: "月份",
          op_not: "非",
          op_now: "新",
          op_number: "用作數字",
          op_or: "或",
          op_round: "舍入",
          op_rpad: "右填充",
          op_sign: "標志",
          op_start: "開始",
          op_string: "文本",
          op_substr: "子字符串",
          op_text: "用作文本",
          op_today: "今天",
          op_trim: "修剪",
          op_true: "是",
          op_upper: "大寫字母",
          op_week: "週",
          op_weekday: "星期幾",
          op_workdays: "工作日",
          op_year: "年",
          op_yearmonth: "年/月",
          op_yearquater: "一刻鐘",
          op_yearweek: "年/週",
          openIn: "打開文件",
          operationInProgress: "要求的操作已經在進行中",
          operator: "操作員",
          options: "選項",
          original: "原版的",
          otherOptions: "其他選擇",
          padding: "填充",
          page: "頁面",
          pageBody: "頁面正文",
          pageFoot: "頁腳",
          pageHead: "頁眉",
          pages: "頁",
          palette: "調色板",
          paperFormat: "紙張格式",
          password: "密碼",
          passwordMismatch: "密碼不匹配 - 請重試.",
          paste: "粘貼",
          perMonth: "每月",
          perYear: "每年",
          photo: "照片",
          photoLibrary: "照片庫",
          pickGroupColumn: "請選擇分組列。",
          planCurrent: "目前的計劃",
          planCurrentCovers: "您當前的計劃涵蓋$1個用戶。",
          planExpired: "我們注意到，您的計劃已經過期。",
          planExpiredMember:
            "該團隊的計劃已經過期。請聯繫團隊所有者（$1）並要求他升級他的計劃。",
          planGetNow: "立即獲取$1個用戶的Ninox Cloud。",
          planGetNowCTA: "訂閱",
          planNone: "該計劃已經過期。",
          planPurchaseOther: "此計劃已與$1一起購買。",
          planRenewsAt: "此訂閱將續訂：$1。",
          planSave: "保存",
          planTerms:
            '此訂閱通過Ninox App和Web瀏覽器為您和您的團隊成員提供對Ninox Cloud的訪問。付款將在確認購買時從iTunes帳戶中扣除。除非在當前期間結束前至少24小時關閉自動續訂，否則此訂閱會自動續訂。您的帳戶將在當前期間結束前24小時內收取續訂費用，並確定續訂費用。訂閱可以由用戶管理，並且可以通過在購買後轉到用戶的帳戶設置來關閉自動續訂。免費試用期的任何未使用部分（如果提供）將在用戶購買該出版物的訂閱時（如果適用）被沒收。購買即表示您同意<a href="https://ninoxdb.de/ninox/en/privacy.html">隱私政策</a>和<a href="https://ninox.com/ninox/en/terms.html">條款和條件</a>。',
          planTrial: "您有一個免費試用訂閱。",
          planTrialExpiresAt: "試用訂閱到期",
          planUnknown:
            "抱歉，我們無法確定您當前的計劃。請聯繫support@ninox.com。",
          planUsage: "目前的用法",
          planUsageCovered: "其他計劃涵蓋了$1個用戶。",
          planUsageInfo: "你有$2個團隊的$1名成員。",
          planUsageRequired: "您的計劃需要涵蓋$1個用戶。",
          planWrongUser:
            "您已經有一個具有不同ID的計劃。 請使用以下電子郵件登錄：$ 1",
          position: "位置",
          postCommentButton: "發表",
          postCommentLabel: "評論",
          presets: "预设",
          preview: "文件預覽",
          print: "打印",
          printAll: "所有記錄",
          printAttachments: "打印附件圖片",
          printFontSize: "字體大小",
          printImages: "打印圖像",
          printNodeSettings: "打印記錄",
          printNow: "現在打印",
          printOne: "單個記錄",
          printPDF: "打印PDF",
          printRendering: "預覽",
          printTableSettings: "打印數據表",
          printView: "打印預覽",
          private: "私人的",
          problemsLoggingIn: "您無法登錄?",
          processBackground: "後台進程：",
          processDatabase: "數據庫",
          processHeadline: "工藝流程",
          processLogs: "日誌",
          processName: "過程",
          processRefresh: "刷新",
          processStatus: "地位",
          processSubline:
            "在這裡您可以看到您帳戶中所有正在運行的進程（如果有）。 通過“刷新”，您可以獲得進程狀態的更新",
          processTimeStarted: "開始",
          processTimeStopped: "結尾",
          processUser: "用戶",
          productPurchased: "已安裝",
          profileImage: "個人資料圖片",
          protectDatabase: "保護此數據庫",
          purchaseNow: "現在買",
          query: "查詢",
          queryExecuting: "正在執行查詢...",
          radius: "半徑",
          readableIf: "可讀如果",
          readRoles: "已允許讀取",
          rebuildThumbnails: "重建縮略圖",
          rebuildThumbnailsConfirm:
            "你真的想重建所有的縮略圖嗎？ 此過程可能需要一些時間。",
          red: "紅",
          referenceLabel1N: "(1 : N)",
          referenceLabelFrom: "引用出自",
          referenceLabelN1: "(N : 1)",
          referenceLabelTo: "添加至",
          refFinderSearch: "輸入搜索文本:",
          refFinderSearchCaption: " 搜尋",
          register: "創建一個帳戶",
          registerNewsletter: "讓我了解產品更新。",
          reindex: "重建索引",
          reIndexFiles: "重新索引文件",
          reIndexFilesConfirm:
            "您真的要重新索引文件嗎？此過程可能需要一些時間。",
          reloginMessage: "請再次登錄以繼續。",
          remove: "刪除",
          removeAllChoosen: "刪除所選行",
          removed: "刪除",
          removeField: "刪除字段",
          removeFieldConfirm: "請確保要刪除此字段. 此操作不可逆.",
          removeFile: "刪除文件",
          removeFromTeam: "從小組中移除",
          removeFromTeamConfirm: "你真的想從你的團隊中刪除這個成員嗎？",
          removeFromTeamHead: "從團隊中刪除成員",
          removeFromTeamOkay: "去掉",
          removeNRecords: "刪除$條記錄",
          removeRecord: "刪除記錄",
          removeReference: "刪除引用",
          removeTab: "刪除標簽",
          removeTable: "刪除數據表",
          removeTeam: "刪除此團隊",
          removeTeamConfirm:
            "您確定要永久刪除此小組嗎？ 此操作無法撤消。 所有數據將丟失。",
          removeView: "刪除表視圖",
          rename: "重命名",
          renameDatabase: "重命名數據庫...",
          renameDatabaseOkay: "重命名",
          renameDatabaseToName: "請輸入一個新的數據庫名稱",
          renameView: "重命名表視圖",
          reorganizeDatabase: "重組",
          repeat: "重複",
          repeatPassword: "再次輸入新密碼",
          required: "必需的",
          resendInvitation: "重新發送邀請",
          resendVerificationMail: "重新發送驗證郵件",
          resetPassword: "重置你的密碼！",
          resetSchema: "還原更改",
          resetSync: "重置同步",
          restoreAppStoreTransactions: "恢複先前購買的產品",
          restoreBackup: "恢復備份",
          result: "結果",
          resyncCloudDatabases: "iCloud同步",
          right: "對",
          role_editor: "編輯",
          roleCaption: "角色名稱",
          roleNotFound: "未找到角色",
          roles: "訪問權",
          rolesExport: "導出數據",
          rolesImport: "導入數據",
          rolesMassDataUpdate: "執行更新查詢",
          rolesOpen: "開放數據庫",
          rolesPrint: "打印數據",
          runConsole: "執行",
          save: "保存",
          saveArchiveAs: "檔案另存為...",
          saveAs: "另存為",
          saveDataModelChanges: "保存更改",
          saveImage: "保存圖片",
          saveProfile: "保存個人信息",
          saveReport: "保存佈局",
          saveSchema: "保存更改",
          saveViewAs: "視圖另存為...",
          schemaDirty: "您已修改了應用.",
          schemaSaveRequired: "請保存對此應用的更改.",
          search: "查找",
          searchIn$: "搜尋$",
          security: "安全",
          select: "選擇",
          selectAll: "選取所有項",
          sendInvitation: "發送邀請",
          sendMail: "發送郵件",
          sevenDays: "7 天",
          share: "分享",
          shareFile: "分享這個文件",
          shareURL: "公共URL",
          shareView: "分享這個觀點",
          sharing: "分享",
          showAll: "顯示所有項",
          showAs: "顯示為",
          showColumn: "展會專欄",
          showExtendedOptions: "更多選擇",
          showHideColumns: "編輯列...",
          showLess: "顯示較少",
          showMore: "展示更多",
          showOnlyChoosen: "顯示選項",
          showOnlyWorkHours: "僅顯示工作時間",
          signature: "簽名",
          signIn: "登錄",
          signinHead: "登錄到Ninox",
          signup: "註冊",
          signUpBusinessMessage: "商業客戶從我們的客戶成功團隊獲得個人支持。",
          signupCreateTeam: "登錄並創建團隊",
          signupFree: "免費註冊",
          signupHead: "註冊Ninox Cloud",
          signUpHeader1_1: "你如何計劃",
          signUpHeader1_2: "使用Ninox",
          signUpHeader2: "您想在哪個帳戶上獲得免費試用？",
          signUpHeader3: "請完成您的個人資料",
          signUpNewsletter: "是的，請將我添加到Ninox通訊中。",
          signupNewUser: "註冊為新用戶",
          signUpPrivacyPolicy: "隱私政策",
          size: "尺寸",
          solid: "純色",
          sort: "排序",
          sortAscending: "升序",
          sortDescending: "降序",
          sorting: "排序",
          space: "空格",
          ssoErrorMessage: "某事不起作用。 我們目前無法登錄。",
          ssoErrorSupportCta: "仍然無法登錄？ 請聯繫支持。",
          ssoLogin: "SSO Login",
          ssoLogoutHeader: "您已成功註銷。",
          ssoLogoutMessage: "請再次登錄以繼續。",
          startColor: "開始顏色",
          startsWith: "以開始",
          startTrial: "開始試用",
          staticImage: "靜態圖像",
          staticImagePhoto: "靜態圖像 (照片)",
          stayWithPlan: "堅持這個計劃",
          storageLocation: "存儲位置",
          storeOnICloudDrive: "商店在iCloud中",
          stretch: "伸展",
          stringLPad: "左填充",
          stringMaxLength: "最大長度",
          stringMinLength: "最小長度",
          stringMultiline: "多行",
          stringRPad: "右填充",
          style: "樣式",
          subTable: "子表",
          supportTicket: "獲得支持",
          switchTeam: "切換團隊",
          switchToPlan: "切換到此計劃",
          switchToPrintView: "切換至視圖",
          syncFilesFailed: "失敗",
          syncFilesToDownload: "要下載的文件",
          syncFilesToUpload: "要上傳的文件",
          syncNow: "立即同步",
          syncProblemCheck: "檢查同步問題",
          syncSeq: "同步序列號",
          syncState: "同步狀態",
          tab: "標簽",
          table: "數據表",
          tableCaption: "數據表名稱",
          tableReference: "創建數據表引用",
          tables: "數據表",
          tableView: "數據表",
          takePhoto: "拍照",
          targetTable: "目標",
          teamMember: "隊員",
          teamMembers: "團隊成員",
          teamName: "隊名",
          teamSettings: "團隊設置",
          templateRequired: "必需模板",
          templateRequiredContacts:
            '要導入聯系人, 請安裝數據表模版: "聯系人管理"',
          templateRequiredOkay: "安裝數據表模版...",
          templates: "模板",
          termsDisclamer: "建立帳戶即表示您同意$服務條款$",
          termsOfService: "服務條款",
          text: "文本",
          textAndDate: "文本 / 日期",
          thanksCloud: "感謝您使用Ninox Cloud！",
          thisFieldsAreRequired: "請填寫字段",
          time: "時間",
          timeFmt: "時間格式",
          timestampDefaultNow: "現在",
          toDate: "到",
          today: "今天",
          toggleSelection: "切換選項",
          tooltip: "提示",
          top: "最佳",
          transparent: "透明",
          triggerAfterCreate: "上創建觸發器",
          triggerAfterCreateShort: "上創建觸發器",
          triggerAfterOpen: "打開後觸發",
          triggerAfterUpdate: "更新後觸發",
          triggerAfterUpdateShort: "更新後觸發",
          trim: "修剪空格",
          true: "真",
          type_appointment: "預約",
          type_boolean: "是 / 否",
          type_br: "換行符",
          type_button: "按鍵",
          type_chart: "圖表",
          type_choice: "選項",
          type_color: "膚色",
          type_custom: "自定義HTML控件",
          type_date: "日期",
          type_datx: "日期 (new)",
          type_email: "Email",
          type_file: "圖像",
          type_fn: "程式",
          type_head: "頭部",
          type_html: "富文本",
          type_icon: "圖標",
          type_link: "URL",
          type_list: "子表",
          type_location: "地點",
          type_multi: "多項選擇",
          type_number: "數字",
          type_object: "對象",
          type_phone: "電話號碼",
          type_ref: "引用",
          type_rev: "引用",
          type_signature: "簽名",
          type_space: "空格",
          type_string: "文本",
          type_string_multiline: "文本 (多行)",
          type_tab: "標簽",
          type_text: "免費文字",
          type_time: "時間",
          type_timeinterval: "時間間隔",
          type_timestamp: "日期 / 時間",
          type_user: "用戶",
          type_view: "視圖",
          typeExportTemplates: "輸出模板",
          typeMissmatchHtml: "類型不匹配，此字段必須返回html",
          typeMissmatchImage: "類型不匹配，此字段必須返回圖像",
          unknowError: "出現未知錯誤",
          unknown: "未知的",
          unknownError: "未知錯誤",
          unlink: "解除",
          unlinked: "解除",
          unlockDatabase: "解鎖此數據庫",
          unnamed: "(未命名的)",
          unprotectDatabase: "刪除此數據庫的保護",
          unsavedChanges: "一些更改不能被保存",
          updateAllRecords: "更新所有記錄",
          updateAssistant: "海量數據更新",
          updateAssistantExecute: "執行",
          updateAssistantFormula: "執行查詢:",
          updateAssistantResults: "查詢結果 / 更新",
          updated: "已更改為",
          updateExpressionNotAllowed: "這個公式可能不修改數據",
          updateModeAssignFunction: "分配已計算值",
          updateModeAssignNull: "空字段",
          updateModeAssignValue: "分配常量",
          updateModeDontChange: "不更改",
          updateSelectedRecords: "更新所選記錄",
          updateVisibleRecords: "更新所有可見記錄",
          upgradePlan: "升級計劃",
          upgradeToPremium: "升級",
          uploadBackgroundFile: "上傳背景圖像",
          uploadFailed: "文件不能被上傳.",
          uploading: "正在上傳...",
          user: "用戶",
          userName: "用戶名",
          userNotFound: "找不到用戶",
          users: "用戶",
          uuid: "全局唯一標識符",
          validUntil: "有效期至",
          value: "值",
          verifyEmail$:
            " 請確認您的電子郵件地址$以繼續使用Ninox。沒有電子郵件？請檢查您的垃圾郵件文件夾。",
          verticalPosition: "垂直位置",
          view: "視圖",
          viewAs: "顯示為",
          visibilityRule: "僅顯示字段, 條件是:",
          visibilityRuleShort: "僅顯示,條件是",
          visibleColumns: "可視列",
          visibleRows: "可見行",
          week: "星期",
          weeks: "週",
          whatsnew: "有了哪些更新",
          whatsnew1: "看板圖表",
          whatsnew1Body: "只需單擊一下即可更改看板通道的顏色，圖標和順序。",
          whatsnew1Title: "改進了看板視圖",
          whatsnew2: "GANTT圖表",
          whatsnew2Body: "通過拖放重新排列導航窗格中的項目",
          whatsnew2Title: "改進了導航",
          whatsnew3: "卡/畫廊視圖",
          whatsnew3Body: "使用數據透視表分析數據。",
          whatsnew3Title: "新的數據透視表視圖",
          whatsnew4: "表格視圖",
          whatsnew5: "標題和自由文本元素的樣式",
          whatsnewa1: "從任何地方創建數據庫",
          whatsnewa2: "從您的所有設備同步。",
          whatsnewa3: "與您的團隊協作。",
          whatsnewa4: "設計印刷佈局。",
          whatsnewa5: "构建表单以轻松收集数据。",
          whatsnewDontShow: "不要再顯示",
          whatsnewFeatures: "特徵",
          whatsnewHelp: "幫助中心",
          whatsnewNext: "下一個",
          whatsnewSkip: "跳躍",
          whatsnewStart: "準備好出發！",
          whatsnewSubscribe: "加入我們的網絡研討會",
          whatsnewTitle: "適用於Android的Ninox",
          whatsnewVersion: "版",
          width: "寬度",
          workPhone: "工作電話",
          writableIf: "可寫如果",
          writeRoles: "已允許寫入",
          wrongPassword: "密碼錯誤。",
          wrongUserPassword: "密碼不正確或用戶名不存在.",
          xlsExportOpen: "下載",
          xlsExportSaveAs: "另存為...",
          years: "年份",
          yes: "是",
          yesterday: "昨天",
          yourAccount: "你的帳戶",
          zapierIntegration: "Zapier整合",
          zoom: "放大",
          dayNames: [
            "星期日",
            "星期一",
            "星期二",
            "星期三",
            "星期四",
            "星期五",
            "星期六",
          ],
          dayNamesShort: ["日", "一", "二", "三", "四", "五", "六"],
          monthNames: [
            "一月",
            "二月",
            "三月",
            "四月",
            "五月",
            "六月",
            "七月",
            "八月",
            "九月",
            "十月",
            "十一月",
            "十二月",
          ],
          agg: {
            cnt: "計算",
            count: "計算",
            sum: "求和",
            avg: "平均值",
            min: "最小",
            max: "最大",
            first: "第一個",
            last: "最後一個",
            concat: "聯接",
            median: "中等",
            sort: "排序值",
            unique: "唯一值",
          },
          types: {
            number: "數字",
            string: "文本",
            string_multiline: "文本 (多行)",
            date: "日期",
            datx: "日期 (new)",
            time: "時間",
            timeinterval: "時間間隔",
            timestamp: "日期 / 時間",
            boolean: "是 / 否",
            choice: "選項",
            multi: "多項選擇",
            list: "子表",
            ref: "引用",
            rev: "引用",
            object: "對象",
            html: "富文本",
            fn: "程式",
            tab: "標簽",
            head: "頭部",
            text: "免費文字",
            br: "換行符",
            space: "空格",
            file: "圖像",
            link: "URL",
            email: "Email",
            phone: "電話號碼",
            appointment: "預約",
            user: "用戶",
            location: "地點",
            icon: "圖標",
            color: "膚色",
            custom: "自定義HTML控件",
            button: "按鍵",
            signature: "簽名",
            view: "視圖",
            chart: "圖表",
          },
        },
        pt: {
          accountInactive:
            "A conta está inativa há mais tempo do que o número de dias especificado. Entre em contato com o administrador do sistema.",
          accountLocked:
            "A conta está bloqueada. Entre em contato com o administrador do sistema.",
          addRowFind: "Adicionar registro existente",
          addRowFindCreate: "Pesquisar ou criar registro",
          addRule: "Adicionar regra",
          business: "O negócio",
          canFindIt: " Sem email? Por favor, verifique sua pasta de spam.",
          company: "Companhia",
          conditionalStyling: "Estilo condicional",
          containsSpecialCharacters: "um personagem especial,",
          country: "País",
          csvExportOpen: "Baixar",
          dontHaveAccount: "Não tem conta?",
          dontHaveAnAccount: "Não tem conta?",
          emailAddress: "Endereço de e-mail",
          endsWith: "Termina com",
          FindIn$: " Pesquisar em $",
          fullName: "Nome completo",
          haveAnAccount: "já tem uma conta?",
          importNoDataFound: " O arquivo não contém dados.",
          invalidCredentials: "Email ou senha - algo não está certo.",
          list: "Lista",
          localization: "Localização",
          LocalizationAddLocaleColumnHeader: "+ Adicionar Locale",
          LocalizationDefaultColumnHeader: "Padrão",
          LocalizationModuleColumnHeader: "Módulo",
          login: "Iniciar Sessão",
          login2: "Iniciar Sessão",
          loginAttempts:
            "Muitas tentativas de login sem sucesso. Bloqueamos sua conta por 24 horas. Entre em contato com seu administrador para desbloqueá-lo mais cedo.",
          logout: "Deslogar",
          matchPasswords: "As senhas não coincidem",
          noNeedToResetPassword: "Não há necessidade de redefinir sua senha?",
          notLoggedIn: "Não logado",
          operationInProgress: "A operação solicitada já está em andamento",
          operator: "Operador",
          passwordContainNumber: "um número, ",
          passwordRestrict: "A senha precisa ter ",
          passwordSpecificLength: "pelo menos 8 caracteres",
          planTrial: "Você tem uma assinatura de teste gratuita.",
          planTrialExpiresAt: "A assinatura de teste expira em",
          planWrongUser:
            "Você já tem um plano com outro ID. Faça login com o seguinte e-mail: $ 1",
          private: "Privado",
          problemsLoggingIn: "Você não consegue entrar?",
          processBackground: "Processos de fundo:",
          processDatabase: "Base de dados",
          processHeadline: "Processos",
          processLogs: "Histórico",
          processName: "Processo",
          processRefresh: "Refrescar",
          processStatus: "Status",
          processSubline:
            'Aqui você pode ver todos os processos em execução (se houver) em sua conta. Através de "Atualizar" você obtém uma atualização sobre o status do processo',
          processTimeStarted: "Início",
          processTimeStopped: "fim",
          processUser: "Usuário",
          refFinderSearchCaption: " Procure em",
          register: "Crie a sua conta aqui",
          reIndexFiles: "Reindexar arquivos",
          reIndexFilesConfirm:
            "Você realmente quer reindexar arquivos? Este processo pode levar algum tempo.",
          reloginMessage: "Faça login novamente para continuar.",
          removeNRecords: "Excluir $ registros",
          resetPassword: "Redefina sua senha!",
          runConsole: "Executar",
          saveProfile: "Salvar perfil",
          search: "Procurar",
          searchIn$: " Procure em $",
          sendMail: "Enviar correio",
          showExtendedOptions: "Mais opções",
          signIn: "Iniciar Sessão",
          signinHead: "Faça login no Ninox",
          signUpBusinessMessage:
            "Os clientes empresariais recebem suporte pessoal de nosso Customer Success-Team.",
          signupCreateTeam: "Faça login e crie uma equipe",
          signupFree: "Cadastre-se gratuitamente",
          signUpHeader1_1: "Como você planeja",
          signUpHeader1_2: "usar Ninox",
          signUpHeader2:
            "Em qual conta você deseja receber a avaliação gratuita?",
          signUpHeader3: "Complete seu perfil por favor",
          signUpNewsletter:
            "Sim, por favor, me adicione ao boletim informativo da Ninox.",
          signUpPrivacyPolicy: "Política de Privacidade",
          ssoErrorMessage:
            "Algo não está funcionando. Não podemos fazer seu login no momento.",
          ssoErrorSupportCta:
            "Ainda não consegue entrar? Entre em contato com nosso suporte.",
          ssoLogin: "SSO Login",
          ssoLogoutHeader: "Você se desconectou com sucesso.",
          ssoLogoutMessage: "Faça login novamente para continuar.",
          startsWith: "Começa com",
          startTrial: "Iniciar teste",
          termsDisclamer:
            "Ao criar uma conta, você concorda com os $Termos de serviço$",
          termsOfService: "Termos de serviço",
          thisFieldsAreRequired: "Por favor preencha o campo",
          typeMissmatchHtml:
            "Tipo incompatível, este campo deve retornar um html",
          typeMissmatchImage:
            "Tipo incompatível, este campo deve retornar uma imagem",
          usedPassword:
            "Você não pode usar essa senha, pois ela já foi usada anteriormente.",
          verifyEmail$:
            "Confirme seu endereço de e-mail $ para continuar usando o Ninox. Sem email? Por favor, verifique sua pasta de spam.",
          whatsnew1Body: "Painéis Kanban reorganizáveis e personalizáveis ",
          whatsnew1Title: "Vistas Kanban melhoradas",
          whatsnew2Body:
            "Encomende as suas tabelas no menu de tabelas, da forma que desejar",
          whatsnew2Title: "Tabelas ordenáveis",
          whatsnew3Body:
            "Os tipos das estatísticas lá fora, temos-te coberto com as nossas vistas de mesa Pivot.",
          whatsnew3Title: "Nova vista de tabela Pivot",
          whatsnewa1: "Crie bancos de dados a partir de qualquer lugar.",
          whatsnewa2: "Sincronize a partir de todos os seus dispositivos.",
          whatsnewa3: "Colabore com sua equipe.",
          whatsnewa4: "Desenhe layouts de impressão.",
          whatsnewa5: "Crie formulários para coletar dados facilmente.",
          whatsnewFeatures: "Características",
          whatsnewHelp: "Centro de ajuda",
          whatsnewNext: "próximo",
          whatsnewSkip: "Pular",
          whatsnewStart: "Pronto para ir!",
          whatsnewTitle: "Ninox para Android",
          whatsnewVersion: "Versão",
          workPhone: "Telefone de Trabalho",
          xlsExportOpen: "Baixar",
          dayNames: [null, null, null, null, null, null, null],
          dayNamesShort: [null, null, null, null, null, null, null],
          monthNames: [
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
          ],
          agg: {},
          types: {},
        },
      },
      r = "ui.language";
    let l;
    function c() {
      return l.getLocaleString().split("-")[0];
    }
    function d() {
      return l.getLocaleObject();
    }
    function u(e) {
      l.overrideLocales(e);
    }
    function p(e = "") {
      const t = [],
        i = /\w\w-(\w\w)/.exec(e),
        o = navigator && navigator.language,
        a =
          NinoxDocumentInteraction &&
          NinoxDocumentInteraction.getUserDefault(r);
      if (i) a ? (t.push(a), t.push(i[1])) : t.push(i[0]);
      else {
        a ? t.push(a) : t.push(o.substr(0, 2));
        const e = o.split("-");
        e[1] ? t.push(e[1]) : t.push(t[0]);
      }
      const c = t.join("-").toLowerCase();
      let d;
      return (l = new n(d || s, c)), c;
    }
  },
  "./src/js/printer/printNode.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return a;
    });
    var o = i("./src/js/printer/renderNodeHTML.js");
    function a(e) {
      if (!database.authorizationPrint) return $.alert(locale.notAuthorized);
      "HTML" === database.settings.printTableRendering ? n(e) : s(e);
    }
    function n(e) {
      Object(o.a)({ nid: e }, async function (t, i) {
        if (t) return $.alert(t);
        try {
          var o =
              util.escapeFileName(
                database.typeOf(e).caption + database.ridOf(e)
              ) + ".html",
            a = await localFileSystem.tempURL(o);
          await localFileSystem.writeURL(a, i, "utf8"),
            NinoxDocumentInteraction.previewDocument(a, function () {
              0;
            });
        } catch (t) {
          $.alert(t);
        }
      });
    }
    function s(e) {
      if (database.typeOf(e)) {
        database.ridOf(e);
        $.loading(!0);
        var t = {
          ready: !1,
          canceled: !1,
          nid: e,
          fontSize: database.settings.printNodeFontSize || "9",
          printNodeImages: !0,
        };
        NinoxPrint.previewPDFDocument_PREPARE &&
          NinoxPrint.previewPDFDocument_PREPARE(),
          r(t, function (e, t) {
            if (($.loading(!1), e)) return $.alert(e);
            NinoxPrint.previewPDFDocument(t);
          });
      }
    }
    function r(e, t) {
      var i = printer.MM,
        o = parseInt(e.fontSize) || 10,
        a = e.nid,
        n = database.ridOf(a),
        s = database.typeOf(a),
        r = {
          name: util.escapeFileName(s.caption + n) + ".pdf",
          orientation: "portrait",
          width: 210 * i,
          height: 297 * i,
          marginLeft: 10 * i,
          marginTop: 10 * i,
          marginRight: 10 * i,
          marginBottom: 10 * i,
          headHeight: 2 * o,
          footHeight: 2 * o,
          fontSize: o,
          headLeft: s.caption + " " + n,
          headRight: database.name,
          footLeft: util.formatLocaleDateTime(new Date()),
          footRight: "$page",
        },
        l = (r.content = []);
      function c(e) {
        database.loadNode(a, function (t, i) {
          if (t) return e(t);
          l.push({ base: "h1", caption: s.caption + " " + n });
          var o = s.sorted,
            a = 0;
          function r() {
            if (a >= o.length) return e();
            var t = o[a++];
            d(i, t, function (t) {
              if (t) return e(t);
              setTimeout(r, 0);
            });
          }
          setTimeout(r, 0);
        });
      }
      function d(e, t, i) {
        if (t.isField) {
          var o = e[t.id];
          if ("file" === t.base) i();
          else if ("fn" === t.base)
            t.exp.evaluate(database, e, function (e, o) {
              if (!e) {
                var a = t.format(o) || "";
                a && l.push({ base: "field", caption: t.caption, value: a });
              }
              i();
            });
          else if ("html" === t.base)
            o && l.push({ base: "rich", caption: t.caption, value: o }), i();
          else {
            var a = t.format(o) || "";
            a && l.push({ base: "field", caption: t.caption, value: a }), i();
          }
        } else if (t.isReference) {
          var n = e[t.id];
          if (n) {
            var s = t.refTypeId + n;
            database.loadNode(s, function (e, o) {
              if (o) {
                var a = t.refType.format(o) || "";
                l.push({ base: "field", caption: t.caption, value: a });
              }
              i();
            });
          } else i();
        } else
          t.isReverse
            ? u(e, t, i)
            : t.isUI &&
              (("tab" === t.base || "head" === t.base) &&
                l.push({ base: "h2", caption: t.caption || "" }),
              i());
      }
      function u(e, t, i) {
        var o = new queries.QueryReverse(database, t, e._id);
        o.load(function () {
          var e = o.cols,
            a = o.rows,
            n = o.foot.values,
            s = o.models,
            r = o.groups,
            c = o.cidxGroup;
          if (!e.length || !a.length) return i();
          var d = { base: "table", caption: t.caption };
          function u() {
            for (var t = (d.head = []), i = 0; i < e.length; i++) {
              var o = e[i];
              t.push({
                caption: o.caption || o.expression.caption,
                width: o.width,
                align: printer.cellTypeAlign(o.field),
              });
            }
          }
          function p() {
            for (var t = (d.rows = []), i = 0; i < a.length; i++) {
              var o = a[i],
                n = s[o] || r[o],
                l = !!r[o],
                u = [];
              t.push(u);
              for (var p = 0; p < e.length; p++) {
                var h = e[p],
                  m = n.values[p],
                  f =
                    l && p !== c
                      ? h.agg
                        ? printer.aggSymbol(h.agg) + h.aggType.format(m)
                        : ""
                      : h.field.format(m);
                u.push(f || "");
              }
            }
          }
          function h() {
            for (var t = (d.foot = []), i = 0; i < e.length; i++) {
              var o = e[i];
              if (o.agg) {
                var a = n[i],
                  s = printer.aggSymbol(o.agg) + o.aggType.format(a) || "";
                t.push(s);
              } else t.push("");
            }
          }
          l.push(d), u(), p(), h(), i();
        });
      }
      function p(e) {
        database.loadFiles(a, function (t, i) {
          if (t) return e(t);
          var o = 0;
          function a() {
            if (o >= i.length) return setTimeout(e, 0);
            h(i[o++].name, function (e) {
              setTimeout(a, 0);
            });
          }
          setTimeout(a, 0);
        });
      }
      function h(t, i) {
        if (!e.printNodeImages) return i();
        var o = database.downloadURL(a, t);
        o && l.push({ base: "img", url: o }), i();
      }
      c(function (i) {
        if (!e.canceled)
          return i
            ? t(i)
            : void p(function (i) {
                if (!e.canceled) return i ? t(i) : void t(void 0, r);
              });
      });
    }
  },
  "./src/js/printer/printTable.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return a;
    });
    var o = i("./src/js/printer/renderTableHTML.js");
    function a(e) {
      if (!database.authorizationPrint) return $.alert(locale.notAuthorized);
      "HTML" === database.settings.printTableRendering ? n(e) : s(e);
    }
    function n(e) {
      var t = Object(o.a)(e);
      NinoxDocumentInteraction.openFileWithServer(
        l(e.type),
        "text/html",
        t,
        !1,
        !1
      );
    }
    function s(e) {
      var t = c(e);
      NinoxPrint.previewPDFDocument(t);
    }
    function r(e) {
      return util.escapeFileName(e) + ".pdf";
    }
    function l(e) {
      return util.escapeFileName(e.caption) + ".html";
    }
    function c(e) {
      var t = (e.type && e.type.caption) || locale.unnamed,
        i = (e.container && e.container.getViewCaption()) || void 0;
      i == locale.all && (i = void 0);
      var o = t + (i ? " - " + i : ""),
        a = printer.MM,
        n = parseInt(database.settings.printTableFontSize) || 10,
        s = {
          name: r(o),
          orientation: "landscape",
          width: 210 * a,
          height: 297 * a,
          marginLeft: 10 * a,
          marginTop: 10 * a,
          marginRight: 10 * a,
          marginBottom: 10 * a,
          headHeight: 2 * n,
          footHeight: 2 * n,
          fontSize: n,
          headLeft: o,
          headRight: database.name,
          footLeft: util.formatLocaleDateTime(new Date()),
          footRight: "$page",
        },
        l = e.cols,
        c = e.rows,
        d = e.models,
        u = e.groups,
        p = e.foot,
        h = e.cidxGroup,
        m = (e.type, { base: "table" }),
        f = (m.head = []),
        g = (m.rows = []),
        v = (m.foot = []);
      s.content = [m];
      for (var b = 0; b < l.length; b++) {
        var y = l[b];
        f.push({
          caption: y.caption || y.expression.caption || locale.unnamed,
          width: y.width,
          align: printer.cellTypeAlign(y.field),
        });
      }
      for (b = 0; b < c.length; b++) {
        var w = c[b],
          x = u[w],
          T = [];
        if ((g.push(T), x))
          for (var C = 0; C < l.length; C++) {
            y = l[C];
            if (C === h) {
              var k = x.values[C],
                S = y.field.format(k) || "";
              T.push(S);
            } else if (y.agg) {
              (k = x.values[C]),
                (S = printer.aggSymbol(y.agg) + y.aggType.format(k) || "");
              T.push(S);
            } else T.push("");
          }
        else {
          var $ = d[w];
          for (C = 0; C < l.length; C++) {
            (y = l[C]), (k = $.values[C]), (S = y.field.format(k) || "");
            T.push(S);
          }
        }
      }
      for (C = 0; C < l.length; C++) {
        if ((y = l[C]).agg) {
          (k = p.values[C]),
            (S = printer.aggSymbol(y.agg) + y.aggType.format(k) || "");
          v.push(S);
        } else v.push("");
      }
      return s;
    }
  },
  "./src/js/printer/renderNodeHTML.js": function (e, t, i) {
    "use strict";
    function o(e, t) {
      var i = e.nid,
        o = database.ridOf(i),
        a = database.typeOf(i),
        n =
          '<!DOCTYPE HTML><html><head><meta http-equiv="content-type" content="text/html; charset=UTF-8"/><style type="text/css">body {font-family:Sans-Serif;font-size:10pt}h1 {text-align:center}h2 {font-size:1em;font-weight:bold;border-bottom:solid thin black;text-align:right}table {width:100%}ul {margin:0;list-style:decimal}li {margin:.5em}p.history {text-align:right;xborder-top:solid thin black;padding:.5em 0;font-style:italic}td {padding:.5em}td.caption {text-align:right;font-weight:bold}td.value {text-align:left}td.long-value {border-bottom:solid thin black;border-top:solid thin black}.head {position:fixed;top:0;left:0;width:100%;height:30pt;background-color:red}.foot {position:fixed;bottom:0;left:0;width:100%;height:30pt;background-color:blue}table.bordered {width:100%;empty-cells:show;border-spacing:0;border-collapse:collapse;border:solid thin black}table.bordered td, table.bordered th {padding:.5em;border:solid thin black}table.bordered tfoot tr {border-top:double}td.cell-number {text-align:right}td.cell-date {text-align:center}td.cell-boolean {text-align:center}td.cell-choice {text-align:left}td.cell-fn {text-align:right}</style></head><body>';
      function s(e) {
        database.loadNode(i, function (t, i) {
          if (t) return e(t);
          (n += "<h1>" + htmlEscape(a.caption + " " + o) + "</h1>"),
            (n +=
              '<table><colgroup><col width="30%"/><col width="70%"/></colgroup><tbody>');
          var s = a.sorted,
            l = 0;
          function c() {
            if (l >= s.length) return setTimeout(d, 0);
            var t = s[l++];
            r(i, t, function (t) {
              if (t) return e(t);
              setTimeout(c, 0);
            });
          }
          function d() {
            (n += "</tbody></table>"), e();
          }
          setTimeout(c, 0);
        });
      }
      function r(e, t, i) {
        if (t.isField) {
          var o = e[t.id];
          if ("file" === t.base) i();
          else if ("fn" === t.base)
            t.exp.evaluate(database, e, function (e, o) {
              if (!e) {
                var a = t.format(o);
                a &&
                  (n +=
                    '<tr><td class="caption">' +
                    htmlEscape(t.caption) +
                    '</td><td class="value">' +
                    htmlEscape(a) +
                    "</td></tr>");
              }
              i();
            });
          else if ("html" === t.base)
            o &&
              (n +=
                '<tr><td class="caption" colspan="2">' +
                htmlEscape(t.caption) +
                '</td></tr><tr><td class="long-value" colspan="2">' +
                o +
                "</td></tr>"),
              i();
          else {
            var a = t.format(o);
            a &&
              (n +=
                '<tr><td class="caption">' +
                htmlEscape(t.caption) +
                '</td><td class="value">' +
                htmlEscape(a) +
                "</td></tr>"),
              i();
          }
        } else if (t.isReference) {
          var s = e[t.id];
          if (s) {
            var r = t.refTypeId + s;
            database.loadNode(r, function (e, o) {
              if (o) {
                var a = t.refType.format(o);
                a &&
                  (n +=
                    '<tr><td class="caption">' +
                    htmlEscape(t.caption) +
                    '</td><td class="value">' +
                    htmlEscape(a) +
                    "</td></tr>");
              }
              i();
            });
          } else i();
        } else
          t.isReverse
            ? l(e, t, i)
            : t.isUI &&
              (("tab" !== t.base && "head" !== t.base) ||
                (n +=
                  '<tr><td colspan="2"><h2>' +
                  htmlEscape(t.caption) +
                  "</h2></td></tr>"),
              i());
      }
      function l(e, t, i) {
        var o = new queries.QueryReverse(database, t, e._id);
        o.load(function () {
          var e = o.cols,
            a = o.rows,
            s = o.foot.values,
            r = o.models,
            l = o.groups,
            c = o.cidxGroup;
          if (!e.length || !a.length) return i();
          function d() {
            (n +=
              '<tr><td class="caption" colspan="2">' +
              htmlEscape(t.caption) +
              "</td></tr>"),
              (n +=
                '<tr><td class="table-value" colspan="2"><table class="bordered">'),
              (n += "<thead><tr>");
            for (var i = 0; i < e.length; i++) {
              var o = e[i];
              n +=
                "<th>" +
                htmlEscape(o.caption || o.expression.caption) +
                "</th>";
            }
            n += "</tr></thead>";
          }
          function u() {
            n += "<tbody>";
            for (var t = 0; t < a.length; t++) {
              n += "<tr>";
              for (
                var i = a[t], o = r[i] || l[i], s = !!l[i], d = 0;
                d < e.length;
                d++
              ) {
                var u = e[d],
                  p = o.values[d],
                  h =
                    s && d !== c
                      ? u.agg
                        ? printer.aggSymbol(u.agg) + u.aggType.format(p)
                        : ""
                      : u.field.format(p);
                n += "<td>" + htmlEscape(h) + "</td>";
              }
              n += "</tr>";
            }
            n += "</tbody>";
          }
          function p() {
            n += "<tfoot><tr>";
            for (var t = 0; t < e.length; t++) {
              var i = e[t];
              if (i.agg) {
                var o = s[t],
                  a = printer.aggSymbol(i.agg) + i.aggType.format(o);
                n += "<td>" + htmlEscape(a) + "</td>";
              } else n += "<td></td>";
            }
            (n += "</tr></tfoot>"), (n += "</table></td></tr>");
          }
          d(), u(), p(), i();
        });
      }
      function c(e) {
        database.loadFiles(i, function (t, i) {
          if (t) return e(t);
          var o = 0;
          function a() {
            if (o >= i.length) return setTimeout(e, 0);
            d(i[o++].name, function (e) {
              setTimeout(a, 0);
            });
          }
          setTimeout(a, 0);
        });
      }
      function d(t, o) {
        if (!e.printNodeImages) return o();
        if (!util.RE_IMAGE_FILE_EXT.test(t)) return o();
        var a = database.downloadURL(i, t);
        a ? (n += '<img src="' + a + '">') : o();
      }
      s(function (i) {
        if (!e.canceled)
          return i
            ? t(i)
            : void c(function (i) {
                if (!e.canceled) {
                  if (i) return t(i);
                  t(void 0, (n += "</body></html>"));
                }
              });
      });
    }
    i.d(t, "a", function () {
      return o;
    });
  },
  "./src/js/printer/renderTableHTML.js": function (e, t, i) {
    "use strict";
    function o(e) {
      var t = e.cols,
        i = e.rows,
        o = e.models,
        a = e.groups,
        n = e.foot,
        s = e.cidxGroup,
        r = e.type,
        l = "";
      (l +=
        '<!DOCTYPE HTML>\r\n<html><head><meta http-equiv="content-type" content="text/html; charset=UTF-8"/><style type="text/css">body {font-family:Sans-Serif;font-size:10pt}h1 {text-align:center}table {width:100%;empty-cells:show;border-spacing:0;border-collapse:collapse;border:solid thin black}td, th {padding:.5em;border:solid thin black;height:1.5em}td.cell-number {text-align:right}td.cell-date {text-align:center}td.cell-boolean {text-align:center}td.cell-choice {text-align:left}td.cell-fn {text-align:right}tfoot tr {border-top:double}</style></head><body>'),
        (l += "<h1>" + htmlEscape(r.caption) + "</h1>"),
        (l += "<table>"),
        (l += "<thead>"),
        (l += "<tr>");
      for (var c = 0; c < t.length; c++) {
        var d = t[c];
        l += "<th>" + htmlEscape(d.caption || d.expression.caption) + "</th>";
      }
      (l += "</tr>"), (l += "</thead>"), (l += "<tbody>");
      for (c = 0; c < i.length; c++) {
        var u = i[c],
          p = a[u];
        if (p) {
          l += "<tr>";
          for (var h = 0; h < t.length; h++) {
            d = t[h];
            if (h === s) {
              var m = p.values[h],
                f = d.field.format(m);
              l +=
                '<td class="cell-' +
                d.field.base +
                '">' +
                htmlEscape(f) +
                "</td>";
            } else if (d.agg) {
              (m = p.values[h]), (f = d.aggType.format(m));
              (l += '<td class="cell-' + d.aggType.base + '">'),
                (l += "<span>" + htmlEscape(f) + "</span>"),
                (l += "</td>");
            } else l += "<td></td>";
          }
          l += "</tr>";
        } else {
          var g = o[u];
          l += "<tr>";
          for (h = 0; h < t.length; h++) {
            (d = t[h]), (m = g.values[h]), (f = d.field.format(m));
            l +=
              '<td class="cell-' +
              d.field.base +
              '">' +
              htmlEscape(f) +
              "</td>";
          }
          l += "</tr>";
        }
      }
      (l += "</tbody>"), (l += "<tfoot>"), (l += "<tr>");
      var v = 0;
      for (h = 0; h < t.length; h++) {
        if ((d = t[h]).agg) {
          (m = n.values[h]), (f = d.aggType.format(m));
          (l += '<td class="cell-' + d.aggType.base + '">'),
            (l += "<span>" + htmlEscape(f) + "</span>"),
            (l += "</td>");
        } else l += "<td></td>";
      }
      return (
        v > 0 && $trfoot.appendTo($tfoot),
        (l += "</tr>"),
        (l += "</tfoot>"),
        (l += "</table>"),
        (l += "</body></html>")
      );
    }
    i.d(t, "a", function () {
      return o;
    });
  },
  "./src/js/reports/ActionMenu.js": function (e, t, i) {
    "use strict";
    function o(e) {
      var t = this;
      (this.designer = e),
        (this.$actions = e.$titleMenuCenter),
        $(
          '<div class="button i-40-24 i-light-grey i-plus" title="' +
            htmlEscape(locale.add) +
            '">'
        )
          .appendTo(this.$actions)
          .click(function (t) {
            e.insertObject(t);
          }),
        (this.$trash = $(
          '<div class="button i-40-24 i-light-grey i-setting-trash" title="' +
            htmlEscape(locale.remove) +
            '">'
        )
          .appendTo(this.$actions)
          .click(function () {
            e.removeSelection();
          })),
        (this.$moveToFront = $(
          '<div class="button i-40-24 i-light-grey i-move-to-front" title="' +
            htmlEscape(locale.moveToFront) +
            '">'
        )
          .appendTo(this.$actions)
          .click(function () {
            e.moveToFront();
          })),
        (this.$moveToBack = $(
          '<div class="button i-40-24 i-light-grey i-move-to-back" title="' +
            htmlEscape(locale.moveToBack) +
            '">'
        )
          .appendTo(this.$actions)
          .click(function () {
            e.moveToBack();
          })),
        (this.$select = $(
          '<div class="button i-40-24 i-light-grey i-select" title="' +
            htmlEscape(locale.select) +
            '">'
        )
          .appendTo(this.$actions)
          .click(function () {
            t.$select.addClass("active"),
              e.startSelect(function () {
                t.$select.removeClass("active");
              });
          })),
        (this.$duplicate = $(
          '<div class="button i-40-24 i-light-grey i-setting-copy" title="' +
            htmlEscape(locale.duplicate) +
            '">'
        )
          .appendTo(this.$actions)
          .click(function () {
            e.duplicate();
          })),
        this.updateUI();
    }
    i.d(t, "a", function () {
      return o;
    }),
      (o.prototype.updateUI = function () {
        var e = this.designer,
          t = e.selection,
          i = e.multiSelection;
        t || i
          ? (this.$trash.css("opacity", "1"),
            this.$moveToFront.css("opacity", "1"),
            this.$moveToBack.css("opacity", "1"))
          : (this.$trash.css("opacity", "0.2"),
            this.$moveToFront.css("opacity", "0.2"),
            this.$moveToBack.css("opacity", "0.2")),
          t || (i && i.length)
            ? this.$duplicate.css("opacity", "1")
            : this.$duplicate.css("opacity", "0.2");
      });
  },
  "./src/js/reports/ColorMenu.js": function (e, t, i) {
    "use strict";
    function o(e) {
      var t = this;
      (this.designer = e),
        (this.$el = $('<div class="rd-menu-bar center">').appendTo(e.$menu)),
        (this.$bg = $('<div class="rd-menu-button rd-backgroundcolor">')
          .hide()
          .appendTo(this.$el)
          .click(function () {
            new a({
              offset: t.$bg.offset(),
              update: function (i) {
                e.selection &&
                  e.selection.setBackgroundColor &&
                  e.selection.setBackgroundColor(i),
                  t.updateUI();
              },
            });
          })),
        (this.$bgColor = $('<dic class="rd-backgroundcolor-color">').appendTo(
          this.$bg
        )),
        (this.$border = $('<div class="rd-menu-button rd-bordercolor">')
          .hide()
          .appendTo(this.$el)
          .click(function () {
            t.popupBorder();
          })),
        (this.$borderColor = $('<dic class="rd-bordercolor-color">').appendTo(
          this.$border
        )),
        (this.$text = $('<div class="rd-menu-button rd-textcolor">')
          .hide()
          .appendTo(this.$el)
          .click(function () {
            new a({
              offset: t.$text.offset(),
              update: function (i) {
                e.selection &&
                  e.selection.setTextColor &&
                  e.selection.setTextColor(i),
                  t.updateUI();
              },
            });
          })),
        (this.$textColor = $(
          '<div class="rd-textcolor-color i-32-24 i-light-grey i-field-string">'
        ).appendTo(this.$text)),
        this.updateUI();
    }
    function a(e) {
      var t = e.update,
        i = 12,
        o = 12,
        a = i * o,
        n = $.backplane({ autoClose: !0 }),
        s = $('<div class="colorselector-menu">').appendTo(n),
        r = $('<table class="colorselector-table">').appendTo(s),
        l = $("<tbody>").appendTo(r),
        c = $("<tr>").appendTo(l),
        d = $('<td colspan="' + i + '">').appendTo(c);
      $('<div class="colorselector-default">')
        .text(locale.noColor)
        .appendTo(d)
        .touch(function () {
          n.close(), t(null);
        });
      for (var u = 0; u < a; u++)
        u % i == 0 && (c = $("<tr>").appendTo(l)),
          (d = $("<td>").appendTo(c)),
          $('<div class="color-icon">')
            .css({ backgroundColor: util.indexedColorRGBA(u, i, o) })
            .data("colorIndex", u)
            .appendTo(d)
            .click(function () {
              var e = util.indexedColorRGBA($(this).data("colorIndex"), i, o);
              n.close(), t(e);
            });
      var p = s.outerWidth(),
        h = s.outerHeight(),
        m = e.offset;
      (m.top += 32),
        m.left + p > window.getWidth() && (m.left = window.getWidth() - p),
        m.top + h > window.getHeight() && (m.top = window.getHeight() - h),
        s.offset(m);
    }
    i.d(t, "a", function () {
      return o;
    }),
      (o.prototype.updateUI = function () {
        var e = this.designer.selection;
        if (e) {
          if (
            (e.setBackgroundColor
              ? ((this.$bgColor[0].style.backgroundColor =
                  e.backgroundColor || ""),
                this.$bg.show())
              : this.$bg.hide(),
            e.setBorder)
          ) {
            var t = this.$border[0],
              i = this.$borderColor[0];
            (t.style.backgroundColor = e.backgroundColor || ""),
              (i.style.borderColor = e.borderColor || ""),
              (i.style.borderWidth = e.borderWidth || ""),
              (i.style.borderStyle = e.borderStyle || ""),
              (i.style.borderRadius = e.borderRadius || ""),
              this.$border.show();
          } else this.$border.hide();
          e.setTextColor
            ? ((this.$text[0].style.backgroundColor = e.backgroundColor || ""),
              (this.$textColor[0].style.color = e.textColor || ""),
              this.$text.show())
            : this.$text.hide(),
            this.$el.show();
        } else this.$el.hide();
      }),
      (o.prototype.popupBorder = function () {
        var e = this,
          t = $.backplane({ autoClose: !0 }),
          i = $(
            '<div class="nx-menu-popup grey" style="width:200px">'
          ).appendTo(t),
          o = $("<div>").appendTo(i);
        $('<div class="rd-menu-label" style="width:100px">')
          .text(locale.border)
          .appendTo(o);
        var n = $('<div class="rd-menu-button rd-backgroundcolor">')
            .appendTo(o)
            .click(function () {
              new a({
                offset: n.offset(),
                update: function (t) {
                  e.designer.setBorder(t, void 0, void 0, void 0), h();
                },
              });
            }),
          s = $("<div>").appendTo(i);
        $('<div class="rd-menu-label" style="width:100px">')
          .text(locale.width)
          .appendTo(s);
        var r = $('<input type="number" class="rd-borderwidth">')
            .appendTo(s)
            .change(function () {
              var t = Number(r.val());
              (isNaN(t) || t <= 0) && (t = 1),
                e.designer.setBorder(void 0, void 0, t, void 0),
                h();
            }),
          l = $("<div>").appendTo(i);
        $('<div class="rd-menu-label" style="width:100px">')
          .text(locale.radius)
          .appendTo(l);
        var c = $('<input type="number" class="rd-borderradius">')
          .appendTo(l)
          .change(function () {
            var t = Number(c.val());
            (isNaN(t) || t <= 0) && (t = 0),
              e.designer.setBorder(void 0, void 0, void 0, t),
              h();
          });
        h();
        var d = i.outerWidth(),
          u = i.outerHeight(),
          p = e.$border.offset();
        function h() {
          e.updateUI();
          var t = e.designer.selection;
          (n[0].style.backgroundColor = (t && t.borderColor) || ""),
            r.val((t && t.borderWidth) || ""),
            c.val((t && t.borderRadius) || "0"),
            t && t.borderColor ? s.show() : s.hide();
        }
        (p.top += 32),
          p.left + d > window.getWidth() && (p.left = window.getWidth() - d),
          p.top + u > window.getHeight() && (p.top = window.getHeight() - u),
          i.offset(p);
      });
  },
  "./src/js/reports/Designer.jsx": function (e, t, i) {
    "use strict";
    (function (e) {
      i.d(t, "a", function () {
        return x;
      });
      i("./node_modules/core-js/modules/web.immediate.js"),
        i("./node_modules/core-js/modules/web.url.to-json.js");
      var o = i("./src/react/util/FastClickContainer.tsx"),
        a = i("./node_modules/react/index.js"),
        n = i("./node_modules/react-dom/index.js"),
        s = i("./src/react/SimpleTabSelectionRow.tsx"),
        r = i("./src/js/reports/ActionMenu.js"),
        l = i("./src/js/reports/ObjectMenu.js"),
        c = i("./src/js/reports/PaperMenu.js"),
        d = i("./src/js/reports/ColorMenu.js"),
        u = i("./src/js/reports/TextMenu.js"),
        p = i("./src/js/reports/RDHTML.js"),
        h = i("./src/js/reports/RDImage.js"),
        m = i("./src/js/reports/RDImageField.js"),
        f = i("./src/js/reports/RDReverse.js"),
        g = i("./src/js/reports/RDText.js"),
        v = i("./src/js/admin/FunctionEditor.js"),
        b = i("./src/js/widgets/Field.js"),
        y = i("./node_modules/underscore/underscore.js"),
        w = i("./src/react/util/Track.ts");
      function x(e, t) {
        reports.designer && reports.designer.destroy(),
          (this.options = t),
          (this.nid = t.nid),
          (this.nids = t.nids || []);
        var i = t.empty;
        this.invisible = !!(
          t.printOneAndClose ||
          t.printAllAndClose ||
          t.saveToFileAndClose
        );
        var o = this;
        if (
          ((this.id = e.id || util.createUUID(12)),
          (this.tid = e.tid),
          (this.type = database.schema.types[e.tid]),
          this.type)
        ) {
          (this.caption = e.caption || this.type.caption),
            (this.isEnabled = database.canSaveReport()),
            (this.isDirty = !1),
            (this.objects = []),
            (this.paperWidth = void 0 !== e.paperWidth ? e.paperWidth : 210),
            (this.paperHeight = void 0 !== e.paperHeight ? e.paperHeight : 297),
            (this.marginL = void 0 !== e.marginL ? e.marginL : 20),
            (this.marginR = void 0 !== e.marginR ? e.marginR : 20),
            (this.marginT = void 0 !== e.marginT ? e.marginT : 10),
            (this.marginB = void 0 !== e.marginB ? e.marginB : 10),
            (this.footHeight = void 0 !== e.footHeight ? e.footHeight : 10),
            (this.headHeight = void 0 !== e.headHeight ? e.headHeight : 10),
            (this.printAttachments = !0 === e.printAttachments),
            (this.footY = this.paperHeight - this.marginB - this.footHeight),
            (this.fontFamily = e.fontFamily || "Helvetica"),
            (this.fontSize = e.fontSize || 10),
            (this.reports = []),
            (this.startSelectCallback = null),
            (this.selection = null),
            (this.multiSelection = null),
            (this.multiSelectionX = null),
            (this.multiSelectionY = null),
            (this.mode = null),
            (this.mouseState = null),
            (this.mouseDirection = null),
            (this.mouseDownX = 0),
            (this.mouseDownY = 0),
            (this.mouseObject = null),
            (this.mouseObjectX = 0),
            (this.mouseObjectY = 0),
            (this.mouseObjectW = 0),
            (this.mouseObjectH = 0),
            (this.mouseObjectOldH = 0),
            (this.snapsX = []),
            (this.snapsY = []),
            this.setupControls(),
            this.setupViewport(),
            this.isEnabled &&
              ((this.actionMenu = new r.a(this)),
              (this.objectMenu = new l.a(this)),
              (this.colorMenu = new d.a(this)),
              (this.textMenu = new u.a(this)),
              (this.paperMenu = new c.a(this))),
            (this.scale = this.paperWidth / this.$paper.width()),
            (this.resize = $.proxy(this.resize, this)),
            this.resize(),
            $(window).on("resize", this.resize);
          var a = e.objects;
          if (a)
            for (var n = 0; n < a.length; n++)
              try {
                this.createObject(a[n]);
              } catch (e) {
                console.log(e);
              }
          else i || this.autoLayout();
          $.pushInputHandler(this),
            (reports.designer = this),
            $.loading(!0),
            o.load(function () {
              o.init(),
                t.printOneAndClose
                  ? o.printSingle(function () {
                      $.loading(!1),
                        o.destroy(),
                        "function" == typeof t.printOneAndClose &&
                          t.printOneAndClose();
                    })
                  : t.printAllAndClose
                  ? o.printAll(function () {
                      $.loading(!1),
                        o.destroy(),
                        "function" == typeof t.printAllAndClose &&
                          t.printAllAndClose();
                    })
                  : t.saveToFileAndClose
                  ? o.printSingleToFile(function (e, i) {
                      $.loading(!1),
                        o.destroy(),
                        "function" == typeof t.saveToFileAndClose &&
                          t.saveToFileAndClose(e, i);
                    })
                  : ($.loading(!1),
                    !e.id && database.canSaveReport()
                      ? o.saveReport(function (e) {
                          e && $.alert(e), o.loadReports();
                        })
                      : o.loadReports());
            }),
            (this.rightOpen = ui.fullWidth > 680),
            this.setRight();
        }
      }
      function T(e, t) {
        var i = void 0,
          o = !0;
        return (
          y.each(e, function (e) {
            void 0 === i ? (i = e[t]) : i !== e[t] && (o = !1);
          }),
          o ? i : void 0
        );
      }
      function C(e, t) {
        var i = !0;
        return (
          y.each(e, function (e) {
            !0, (i = i && !0);
          }),
          i
        );
      }
      (x.prototype.setupControls = function () {
        var e = this;
        this.$pane = $('<div class="rd-pane">')
          .css("visibility", this.invisible ? "hidden" : "")
          .appendTo($(document.body));
        var t = $('<div class="rd-title">').appendTo(this.$pane),
          i = $('<div class="rd-menu">').appendTo(this.$pane);
        this.$menu = i;
        var o = $('<div class="rd-title-menu-center">').appendTo(i);
        (this.$titleMenuCenter = o),
          $('<div class="i-32-24 i-white i-line-left-medium">')
            .touch(function () {
              e.destroyIfSaved(function () {});
            })
            .appendTo(
              $(
                '<div style="border-right:solid 1px #FFFFFF22;margin:8px 0 8px 0;padding:0 8px 0 4px;height:32px">'
              ).appendTo(t)
            ),
          (this.$tabs = $("<div>").appendTo(
            $('<div class="rd-tabs">').appendTo(t)
          ));
        var a = $('<div class="rd-title-buttons">').appendTo(t);
        $(
          '<div class="nx-button-text grey" style="display:flex;display:-webkit-flex"><div class="i-32-24 i-light-grey i-setting-print" style="margin:0 4px 0 -8px"/><span>' +
            locale.print +
            "</span></div>"
        )
          .appendTo(a)
          .touch((e) => this.print(e)),
          a.button2({
            icon: "i-32-24 i-white i-setting-side-menu-right",
            click: () => this.toggleRight(),
          });
      }),
        (x.prototype.toggleRight = function () {
          (this.rightOpen = !this.rightOpen), this.setRight();
        }),
        (x.prototype.setRight = function () {
          this.rightOpen
            ? (this.$menu.css("display", ""),
              this.$viewport.css("right", "256px"))
            : (this.$menu.css("display", "none"),
              this.$viewport.css("right", "0"));
        }),
        (x.prototype.setupViewport = function () {
          (this.$viewport = $('<div class="rd-viewport">').appendTo(
            this.$pane
          )),
            this.isEnabled ||
              (this.$menu.css("display", "none"),
              this.$viewport.css("right", "0")),
            (this.$paper = $('<div class="rd-paper">')
              .css({
                "font-family": this.fontFamily,
                "font-size": this.fontSize + "pt",
              })
              .appendTo(this.$viewport)
              .click($.proxy(this.paperClicked, this))),
            this.$paper
              .on("mousedown touchstart", $.proxy(this.paperMousedown, this))
              .on("mouseup touchend", $.proxy(this.paperMouseup, this))
              .on("mousemove touchmove", $.proxy(this.paperMousemove, this)),
            (this.$marginL = $('<div class="rd-paper-margin-l">').appendTo(
              this.$paper
            )),
            (this.$marginR = $('<div class="rd-paper-margin-r">').appendTo(
              this.$paper
            )),
            (this.$marginT = $('<div class="rd-paper-margin-t">').appendTo(
              this.$paper
            )),
            (this.$marginB = $('<div class="rd-paper-margin-b">').appendTo(
              this.$paper
            )),
            (this.$head = $('<div class="rd-paper-head">').appendTo(
              this.$paper
            )),
            (this.$foot = $('<div class="rd-paper-foot">').appendTo(
              this.$paper
            )),
            (this.$snapX = $('<div class="rd-paper-snap-x">')
              .hide()
              .appendTo(this.$paper)),
            (this.$snapY = $('<div class="rd-paper-snap-y">')
              .hide()
              .appendTo(this.$paper)),
            (this.$selector = $('<div class="rd-paper-selector">')
              .hide()
              .appendTo(this.$paper));
        }),
        (x.prototype.load = function (t) {
          var i = this.objects;
          if (!i.length) return e(t);
          for (var o = 0, a = 0; a < i.length; a++)
            i[a].load(function () {
              ++o === i.length && e(t);
            });
        }),
        (x.prototype.init = function () {
          for (var e = y.sortBy(this.objects, "y"), t = 0; t < e.length; t++) {
            var i = e[t];
            if ((i.init(), !i.isHead() && !i.isFoot())) {
              var o = i.y + i.h;
              o > this.footY && (this.footY = Math.ceil(o));
            }
          }
          for (let t = 0; t < e.length; t++) e[t].updateAutoHeight();
          this.updatePaper(), this.updateMenus();
        }),
        (x.prototype.destroy = function () {
          $(window).off("resize", this.resize),
            $.popInputHandler(this),
            this.$pane.remove(),
            this.$tabs && n.unmountComponentAtNode(this.$tabs[0]),
            (reports.designer = void 0);
        }),
        (x.prototype.destroyIfSaved = function (e) {
          var t = this;
          t.saveIfUnsaved(function (i) {
            i && (t.destroy(), e());
          });
        }),
        (x.prototype.saveIfUnsaved = function (e) {
          if (!database.canSaveReport()) return e(!0);
          var t = this;
          t.isDirty
            ? $.dialog({
                closable: !1,
                caption: locale.saveReport,
                message: locale.confirmSaveReport,
                buttons: [
                  {
                    color: "grey float-left",
                    caption: locale.cancel,
                    callback: function () {
                      e(!1);
                    },
                  },
                  {
                    color: "grey",
                    caption: locale.no,
                    callback: function () {
                      e(!0);
                    },
                  },
                  {
                    color: "blue",
                    caption: locale.yes,
                    callback: function () {
                      t.saveReport(function (t) {
                        t && $.alert(t), e(!0);
                      });
                    },
                  },
                ],
              })
            : e(!0);
        }),
        (x.prototype.loadReports = function () {
          var e = this;
          database.listReports(function (t, i) {
            var o = [];
            y.each(util.localeSortBy(i, "caption"), function (t) {
              t.tid === e.type.id && o.push(t);
            }),
              (e.reports = o),
              e.updateUI();
          });
        }),
        (x.prototype.updateUI = function () {
          if (!this.$tabs) return;
          const e = this.reports.map((e, t) => ({
            id: e.id,
            isSelected: e.id === this.id,
            text: e.caption,
          }));
          n.render(
            a.createElement(s.a, {
              popupItemBackground: "OFF_WHITE",
              onNewItemClick: this.isEnabled ? () => this.createReport() : null,
              items: e,
              currentItemId: this.id,
              onContextMenuClick: (e, t) => this.tabsContextMenu(t, e),
              onItemSelect: (e, t) => this.tabsClicked(t, e),
            }),
            this.$tabs[0]
          );
        }),
        (x.prototype.tabsClicked = function (e, t) {
          t === this.id
            ? this.popupReportMenu(t, e)
            : this.destroyIfSaved(() => {
                reports.openDesigner({
                  nid: this.nid,
                  reportId: t,
                  nids: this.nids,
                });
              });
        }),
        (x.prototype.tabsContextMenu = function (e, t) {
          TOUCH || (this.popupReportMenu(t, e), e.preventDefault());
        }),
        (x.prototype.popupReportMenu = function (e, t) {
          if (this.isEnabled) {
            var i = this,
              a = $.backplane({ autoClose: !0 });
            if (t) {
              var n = $(
                '<div class="nx-menu-popup" style="white-space:nowrap">'
              ).appendTo(a);
              $('<div class="nx-menu-item">')
                .text(locale.new)
                .appendTo(n)
                .click(l),
                e === i.id &&
                  ($('<div class="nx-menu-item">')
                    .text(locale.save)
                    .appendTo(n)
                    .click(d),
                  $('<div class="nx-menu-item">')
                    .text(locale.saveAs + "...")
                    .appendTo(n)
                    .click(u),
                  $('<div class="nx-menu-item">')
                    .text(locale.rename + "...")
                    .appendTo(n)
                    .click(c)),
                $('<div class="nx-menu-item">')
                  .text(locale.remove)
                  .appendTo(n)
                  .click(p);
              var s = n.outerWidth(),
                r = n.outerHeight();
              const h = o.b.getPosition(t),
                m = { left: h.x, top: h.y };
              m.left + s > window.getWidth() &&
                (m.left = window.getWidth() - s),
                m.top + r > window.getHeight() &&
                  (m.top = window.getHeight() - r),
                n.offset(m);
            }
          }
          function l() {
            a.close(), i.createReport();
          }
          function c() {
            a.close(), i.renameReport();
          }
          function d() {
            a.close(),
              i.saveReport(function (e) {
                e && $.alert(e);
              });
          }
          function u() {
            a.close(), i.saveReportAs();
          }
          function p() {
            a.close(),
              $.dialog({
                closable: !0,
                caption: locale.remove,
                message: locale.confirmRemoveFile,
                buttons: [
                  {
                    color: "red",
                    caption: locale.remove,
                    callback: function () {
                      i.removeReport(e);
                    },
                  },
                ],
              });
          }
        }),
        (x.prototype.setPaper = function (e, t, i, o, a, n, s, r) {
          if (
            e > 0 &&
            t > 0 &&
            r >= 0 &&
            s >= 0 &&
            a >= 0 &&
            n >= 0 &&
            i >= 0 &&
            o >= 0 &&
            e > i + o &&
            t > n + a
          ) {
            for (
              var l = this.objects,
                c = a - this.marginT,
                d = a + s - (this.marginT + this.headHeight),
                u = i - this.marginL,
                p = 0;
              p < l.length;
              p++
            ) {
              var h = l[p];
              h.isHead()
                ? h.setRect(h.x + u, h.y + c, void 0, void 0, !0)
                : h.isFoot() || h.setRect(h.x + u, h.y + d, void 0, void 0, !0);
            }
            (this.marginT = a),
              (this.marginB = n),
              (this.marginL = i),
              (this.marginR = o),
              (this.paperWidth = e),
              (this.paperHeight = t),
              (this.headHeight = s),
              (this.footHeight = r),
              this.updatePaper(),
              this.setDirty();
          }
        }),
        (x.prototype.autoHeightWillChange = function (e, t, i) {
          if ("resize" !== this.mouseState) {
            var o = this.marginT,
              a = this.marginB,
              n =
                (this.marginL, this.marginR, this.paperWidth, this.paperHeight),
              s = this.headHeight,
              r = this.footHeight,
              l = this.footY,
              c = n - a - r,
              d = y.sortBy(this.objects, "y"),
              u = e.y,
              p = e.y + t,
              h = (e.y, i - t);
            if (!(u < o + s || u >= l)) {
              var m = [],
                f = null,
                g = 1 / 0,
                v = Math.ceil(h);
              if (h < 0)
                for (var b = 0; b < d.length; b++) {
                  var w = d[b];
                  if (w !== e && !w.isHead() && !w.isFoot()) {
                    var x = w.y,
                      T = w.y + w.h;
                    x < p && T > p && T < g && ((f = w), (g = T));
                  }
                }
              for (let t = 0; t < d.length; t++) {
                const i = d[t],
                  o = i.y,
                  a = i.y + i.h;
                if ((o < l && a > c && (c = Math.ceil(a)), i !== e && i !== f))
                  if (i.isHead());
                  else if (i.isFoot()) m.push(i);
                  else if (o >= p && o < g) {
                    var C = o + v,
                      k = C + i.h;
                    i.setRect(void 0, C, void 0, void 0, !0),
                      k > c && (c = Math.ceil(k));
                  }
              }
              var S = c - l;
              for (let e = 0; e < m.length; e++) {
                const t = m[e];
                t.setRect(void 0, t.y + S, void 0, void 0, !0);
              }
              this.footY = c;
            }
          }
        }),
        (x.prototype.updatePaper = function () {
          for (
            var e = this.objects,
              t = this.marginT,
              i = this.marginB,
              o = this.marginL,
              a = this.marginR,
              n = this.paperWidth,
              s = this.paperHeight,
              r = this.headHeight,
              l = this.footHeight,
              c = this.footY,
              d = s - i - l,
              u = 0;
            u < e.length;
            u++
          ) {
            var p = e[u];
            if (!p.isHead() && !p.isFoot()) {
              p.y;
              var h = p.y + p.h;
              h > d && (d = Math.ceil(h));
            }
          }
          var m = d - c;
          for (let t = 0; t < e.length; t++) {
            const i = e[t];
            i.isFoot() && i.setRect(void 0, i.y + m);
          }
          (this.footY = d),
            this.$paper.css({ height: d + i + l + "mm", width: n + "mm" }),
            this.$marginL.css({
              top: t + "mm",
              bottom: i + "mm",
              left: o + "mm",
            }),
            this.$marginR.css({
              top: t + "mm",
              bottom: i + "mm",
              right: a + "mm",
            }),
            this.$marginT.css({
              left: o + "mm",
              right: a + "mm",
              top: t + "mm",
            }),
            this.$marginB.css({
              left: o + "mm",
              right: a + "mm",
              bottom: i + "mm",
            }),
            this.$head.css({
              top: t + r + "mm",
              left: o + "mm",
              right: a + "mm",
            }),
            this.$foot.css({
              bottom: i + l + "mm",
              left: o + "mm",
              right: a + "mm",
            });
        }),
        (x.prototype.autoLayout = function () {
          var e,
            t,
            i,
            o = this.type.sorted,
            a = 20,
            n = this.paperWidth - this.marginL - this.marginR,
            s = this.marginL,
            r = Math.round(n / 3) - 2,
            l = s + r + 4,
            c = this.marginL + n - l;
          console.log("auto layout");
          for (var d = 0; d < o.length; d++)
            "file" === (e = o[d]).base
              ? ((t = this.createObject({
                  base: "imagefield",
                  position: "page",
                  x: s,
                  y: a,
                  w: n,
                  h: 60,
                  fid: e.id,
                })),
                (a += Math.ceil(Math.max(0, t.h) + 2)))
              : "html" === e.base
              ? ((i = this.createObject({
                  base: "text",
                  isAutoHeight: !1,
                  position: "page",
                  x: s,
                  y: a,
                  w: r,
                  h: 6,
                  text: e.caption,
                  textAlign: "right",
                  fontWeight: "bold",
                })),
                (t = this.createObject({
                  base: "html",
                  isAutoHeight: !0,
                  position: "page",
                  x: l,
                  y: a,
                  w: c,
                  h: 6,
                  fn: e.id,
                })),
                (a += Math.ceil(Math.max(0, Math.max(t.h, i.h)) + 2)))
              : e.isField
              ? ((i = this.createObject({
                  base: "text",
                  isAutoHeight: !1,
                  position: "page",
                  x: s,
                  y: a,
                  w: r,
                  h: 6,
                  text: e.caption,
                  textAlign: "right",
                  fontWeight: "bold",
                })),
                (t = this.createObject({
                  base: "text",
                  isAutoHeight: !!e.stringMultiline,
                  position: "page",
                  x: l,
                  y: a,
                  w: c,
                  h: 6,
                  text: "{" + e.id + "}",
                })),
                (a += Math.ceil(Math.max(0, Math.max(t.h, i.h)) + 2)))
              : e.isReverse
              ? ((i = this.createObject({
                  base: "text",
                  isAutoHeight: !1,
                  position: "page",
                  x: s,
                  y: a,
                  w: n,
                  h: 6,
                  text: e.caption,
                  textAlign: "left",
                  fontWeight: "bold",
                })),
                (a += Math.ceil(Math.max(0, i.h))),
                (t = this.createObject({
                  base: "rev",
                  position: "page",
                  x: s,
                  y: a,
                  w: n,
                  h: 6,
                  expression: e.id,
                  tableBorderStyle: 5,
                })),
                (a += Math.ceil(Math.max(0, Math.max(t.h, i.h)) + 2)))
              : ("head" !== e.base && "tab" !== e.base) ||
                ((i = this.createObject({
                  base: "text",
                  isAutoHeight: !1,
                  position: "page",
                  x: s,
                  y: a,
                  w: n,
                  h: 6,
                  text: e.caption,
                  textAlign: "center",
                  fontWeight: "bold",
                })),
                (a += Math.ceil(Math.max(0, i.h) + 2)));
          a > this.footY && (this.footY = Math.ceil(a)),
            this.createObject({
              base: "text",
              isAutoHeight: !1,
              position: "head",
              x: this.marginL,
              y: this.marginT,
              w: n / 3,
              h: 6,
              text: this.type.caption + " {_id}",
              textAlign: "left",
            }),
            this.createObject({
              base: "text",
              isAutoHeight: !1,
              position: "head",
              x: this.paperWidth - this.marginR - n / 3,
              y: this.marginT,
              w: n / 3,
              h: 6,
              text: database.name,
              textAlign: "right",
            }),
            this.createObject({
              base: "text",
              isAutoHeight: !1,
              position: "foot",
              x: this.marginL,
              y: this.footY,
              w: n / 3,
              h: 6,
              text: "{now()}",
              textAlign: "left",
            }),
            this.createObject({
              base: "text",
              isAutoHeight: !1,
              position: "foot",
              x: this.paperWidth - this.marginR - n / 3,
              y: this.footY,
              w: n / 3,
              h: 6,
              text: "$page / $pages",
              textAlign: "right",
            });
        }),
        (x.prototype.createAndSelectObject = function (e) {
          var t = this,
            i = t.createObject(e);
          i &&
            ($.loading(!0),
            i.load(function () {
              i.init(),
                i.patchAutoHeight(),
                t.updatePaper(),
                t.select(i),
                t.setDirty(),
                $.loading(!1);
            }));
        }),
        (x.prototype.createObject = function (e) {
          var t = null;
          switch (e.base) {
            case "rev":
              t = new f.a(this, e);
              break;
            case "image":
              t = new h.a(this, e);
              break;
            case "imagefield":
              t = new m.a(this, e);
              break;
            case "text":
              t = new g.a(this, e);
              break;
            case "html":
              t = new p.a(this, e);
          }
          return t && this.objects.push(t), t;
        }),
        (x.prototype.resize = function () {
          var e = this.$viewport.width(),
            t = this.$paper.width(),
            i = Math.max(0, Math.round((e - t) / 2));
          isNaN(i) && (i = 0), (this.$paper[0].style.left = i + "px");
        }),
        (x.prototype.toJSON = function () {
          for (
            var e = {
                id: this.id,
                tid: this.tid,
                caption: this.caption,
                paperWidth: this.paperWidth,
                paperHeight: this.paperHeight,
                marginL: this.marginL,
                marginR: this.marginR,
                marginT: this.marginT,
                marginB: this.marginB,
                headHeight: this.headHeight,
                footHeight: this.footHeight,
                fontFamily: this.fontFamily,
                fontSize: this.fontSize,
                printAttachments: this.printAttachments,
                objects: [],
              },
              t = 0;
            t < this.objects.length;
            t++
          )
            e.objects.push(this.objects[t].toJSON());
          return e;
        }),
        (x.prototype.paperClicked = function (e) {}),
        (x.prototype.paperMousedown = function (e) {
          if (this.isEnabled) {
            if (
              ("edit" !== this.mouseState && this.$menu.find(":focus").blur(),
              e.touches)
            )
              if (this.mouseState) {
                if ("down" === this.mouseState) {
                  if (1 !== e.touches.length)
                    return (
                      (this.mouseState = null),
                      (this.mouseObject = null),
                      void (
                        this.startSelectCallback &&
                        (this.startSelectCallback(),
                        (this.startSelectCallback = null))
                      )
                    );
                } else if (1 !== e.touches.length) return;
              } else if (1 !== e.touches.length) return;
            if ("start-select" === this.mouseState) {
              (this.mouseState = "select"),
                (this.mouseDownX = e.clientX),
                (this.mouseDownY = e.clientY);
              var t = this.$selector[0],
                i = this.$paper.offset();
              (t.style.left = this.mouseDownX - i.left + "px"),
                (t.style.top = this.mouseDownY - i.top + "px"),
                (t.style.width = "0px"),
                (t.style.height = "0px"),
                (t.style.display = "block"),
                e.preventDefault();
            }
            if (!this.mouseState) {
              var o = $(e.target),
                a = o.closest(".rd-object").data("object");
              (this.mouseDownX = e.clientX),
                (this.mouseDownY = e.clientY),
                a
                  ? ((this.mouseObject = a),
                    o.is(".rd-object-resizer")
                      ? ((this.mouseState = "resize"),
                        (this.mouseObjectX = this.mouseObject.x),
                        (this.mouseObjectY = this.mouseObject.y),
                        (this.mouseObjectW = this.mouseObject.w),
                        (this.mouseObjectH = this.mouseObject.h),
                        (this.mouseObjectOldH = this.mouseObjectH),
                        (this.mouseDirection = o.data("dir")),
                        this.snapBegin())
                      : (this.mouseState = "down"),
                    e.preventDefault())
                  : TOUCH ||
                    ((this.mouseState = "down"),
                    (this.mouseObject = null),
                    e.preventDefault());
            }
          }
        }),
        (x.prototype.paperMousemove = function (e) {
          if (this.isEnabled && (!e.touches || 1 === e.touches.length)) {
            var t = e.clientX,
              i = e.clientY,
              o = t - this.mouseDownX,
              a = i - this.mouseDownY;
            if ("down" === this.mouseState) {
              if (o * o + a * a > 25)
                if (this.mouseObject)
                  if (
                    this.multiSelection &&
                    -1 !== this.multiSelection.indexOf(this.mouseObject)
                  ) {
                    this.mouseState = "multi-drag";
                    for (
                      var n = this.multiSelection,
                        s = (this.multiSelectionX = []),
                        r = (this.multiSelectionY = []),
                        l = 0;
                      l < n.length;
                      l++
                    )
                      (s[l] = n[l].x), (r[l] = n[l].y);
                  } else
                    TOUCH ||
                      this.selection === this.mouseObject ||
                      this.select(this.mouseObject),
                      this.selection === this.mouseObject &&
                        ((this.mouseState = "drag"),
                        (this.mouseObjectX = this.mouseObject.x),
                        (this.mouseObjectY = this.mouseObject.y),
                        this.snapBegin());
                else if (!TOUCH) {
                  this.mouseState = "select";
                  var c = this.$selector[0],
                    d = this.$paper.offset();
                  (c.style.left = this.mouseDownX - d.left + "px"),
                    (c.style.top = this.mouseDownY - d.top + "px"),
                    (c.style.width = "0px"),
                    (c.style.height = "0px"),
                    (c.style.display = "block");
                }
              e.preventDefault();
            } else if ("drag" === this.mouseState)
              this.mouseObject.setRect(
                this.mouseObjectX + o * this.scale,
                this.mouseObjectY + a * this.scale
              ),
                this.snap(),
                this.updateObjectMenu(),
                e.preventDefault();
            else if ("multi-drag" === this.mouseState) {
              const t = this.multiSelection,
                i = this.multiSelectionX,
                n = this.multiSelectionY;
              for (let e = 0; e < t.length; e++)
                t[e].setRect(i[e] + o * this.scale, n[e] + a * this.scale);
              this.updateObjectMenu(), e.preventDefault();
            } else if ("resize" === this.mouseState) {
              var u = this.mouseDirection,
                p = "l" === u || "tl" === u || "bl" === u,
                h = "r" === u || "tr" === u || "br" === u,
                m = "t" === u || "tl" === u || "tr" === u,
                f = "b" === u || "bl" === u || "br" === u,
                g = p ? this.mouseObjectX + o * this.scale : void 0,
                v = m ? this.mouseObjectY + a * this.scale : void 0,
                b = p
                  ? this.mouseObjectW - o * this.scale
                  : h
                  ? this.mouseObjectW + o * this.scale
                  : void 0,
                y = m
                  ? this.mouseObjectH - a * this.scale
                  : f
                  ? this.mouseObjectH + a * this.scale
                  : void 0;
              this.rescale(this.mouseObject, g, v, b, y, !0),
                this.snap(),
                this.updateObjectMenu(),
                e.preventDefault();
            } else if ("select" === this.mouseState) {
              const n = this.$selector[0],
                s = this.$paper.offset();
              var w = (o < 0 ? t : this.mouseDownX) - s.left,
                x = (a < 0 ? i : this.mouseDownY) - s.top,
                T = Math.abs(o),
                C = Math.abs(a);
              (n.style.left = w + "px"),
                (n.style.top = x + "px"),
                (n.style.width = T + "px"),
                (n.style.height = C + "px"),
                e.preventDefault();
            }
          }
        }),
        (x.prototype.paperMouseup = function (e) {
          if (
            this.isEnabled &&
            (!e.touches ||
              !(e.touches.length > 0 || 1 !== e.changedTouches.length))
          ) {
            var t = e.clientX,
              i = e.clientY,
              o = t - this.mouseDownX,
              a = i - this.mouseDownY,
              n = this.mouseState,
              s = this.mouseObject;
            if ("down" === n) {
              if (e.shiftKey) {
                var r = this.multiSelection,
                  l = this.selection;
                if (r) {
                  var c = r.indexOf(s);
                  if (-1 !== c) {
                    const e = r.slice();
                    e.splice(c, 1), this.multiSelect(e);
                  } else {
                    const e = r.slice();
                    e.push(s), this.multiSelect(e);
                  }
                } else if (l && l !== s) {
                  var d = [l, s];
                  this.multiSelect(d);
                }
                (this.mouseObject = null), (this.mouseState = null);
              } else
                s
                  ? s !== this.selection
                    ? (this.select(s),
                      (this.mouseObject = null),
                      (this.mouseState = null))
                    : s.startEdit
                    ? (s.startEdit(),
                      TOUCH
                        ? ((this.mouseObject = null), (this.mouseState = null))
                        : (this.mouseState = "edit"))
                    : ((this.mouseObject = null), (this.mouseState = null))
                  : (this.select(null),
                    (this.mouseObject = null),
                    (this.mouseState = null));
              e.preventDefault();
            } else if ("edit" === n) {
              $(e.target).closest(".rd-object").data("object") !== s &&
                this.stopEdit();
            } else if ("drag" === n)
              "page" === s.position
                ? s.y < this.marginT + this.headHeight
                  ? (s.position = "head")
                  : s.y > this.footY && (s.position = "foot")
                : "head" === s.position
                ? s.y >= this.marginT + this.headHeight && (s.position = "page")
                : "foot" === s.position &&
                  s.y < this.footY &&
                  (s.position = "page"),
                this.rescale(s, s.x, s.y, s.w, s.h, !1),
                (this.mouseObject = null),
                (this.mouseState = null),
                this.snapDone(),
                this.updatePaper(),
                this.updateObjectMenu(),
                this.setDirty(),
                e.preventDefault();
            else if ("multi-drag" === n)
              (this.mouseObject = null),
                (this.mouseState = null),
                (this.multiSelectionX = null),
                (this.multiSelectionY = null),
                this.snapDone(),
                this.updatePaper(),
                this.updateObjectMenu(),
                this.setDirty(),
                e.preventDefault();
            else if ("resize" === n)
              this.rescale(s, s.x, s.y, s.w, s.h, !1),
                (this.mouseObject = null),
                (this.mouseState = null),
                this.snapDone(),
                this.updatePaper(),
                this.updateObjectMenu(),
                this.setDirty(),
                e.preventDefault();
            else if ("select" === n) {
              (this.$selector[0].style.display = "none"),
                (this.mouseState = null);
              var u = this.$paper.offset(),
                p = (o < 0 ? t : this.mouseDownX) - u.left,
                h = (a < 0 ? i : this.mouseDownY) - u.top,
                m = Math.abs(o),
                f = Math.abs(a),
                g = p * this.scale,
                v = h * this.scale,
                b = (p + m) * this.scale,
                y = (h + f) * this.scale;
              const n = [];
              var w = this.objects;
              for (let e = 0; e < w.length; e++) {
                const t = w[e];
                var x = t.x,
                  T = t.y,
                  C = t.x + t.w,
                  k = t.y + t.h;
                x > b || C < g || T > y || k < v || n.push(t);
              }
              this.multiSelect(n, e.shiftKey),
                this.startSelectCallback &&
                  (this.startSelectCallback(),
                  (this.startSelectCallback = null)),
                e.preventDefault();
            } else this.select(null), e.preventDefault();
          }
        }),
        (x.prototype.stopEdit = function () {
          "edit" === this.mouseState &&
            (this.mouseObject.stopEdit(),
            (this.mouseObject = null),
            (this.mouseState = null),
            this.select(null));
        }),
        (x.prototype.snapBegin = function () {
          for (
            var e = this.mouseObject,
              t = this.objects,
              i = [
                0,
                this.marginL,
                this.paperWidth - this.marginR,
                this.paperWidth,
                this.marginL +
                  (this.paperWidth - this.marginR - this.marginL) / 2,
              ],
              o = [
                0,
                this.marginT,
                this.marginT + this.headHeight,
                this.footY,
                this.footY + this.footHeight,
                this.footY + this.footHeight + this.marginB,
              ],
              a = 0;
            a < t.length;
            a++
          ) {
            var n = t[a];
            e !== n &&
              (i.push(Math.floor(n.x)),
              i.push(Math.round(n.x + n.w / 2)),
              i.push(Math.ceil(n.x + n.w)),
              o.push(Math.floor(n.y)),
              o.push(Math.round(n.y + n.h / 2)),
              o.push(Math.ceil(n.y + n.h)));
          }
          i.sort(function (e, t) {
            return e - t;
          }),
            o.sort(function (e, t) {
              return e - t;
            }),
            (this.snapsX = i),
            (this.snapsY = o);
        }),
        (x.prototype.snapDone = function () {
          this.$snapX.hide(), this.$snapY.hide();
        }),
        (x.prototype.snap = function () {
          for (
            var e = 0.5,
              t = this.mouseObject,
              i = this.snapsX,
              o = t.x,
              a = t.x + t.w,
              n = t.x + t.w / 2,
              s = null,
              r = void 0,
              l = void 0,
              c = void 0,
              d = void 0,
              u = this.mouseDirection,
              p = "l" === u || "tl" === u || "bl" === u,
              h = "r" === u || "tr" === u || "br" === u,
              m = "t" === u || "tl" === u || "tr" === u,
              f = "b" === u || "bl" === u || "br" === u,
              g = 0;
            g < i.length;
            g++
          ) {
            var v = i[g];
            if (Math.abs(o - v) < e) {
              if ("drag" === this.mouseState) {
                (s = v), (r = v);
                break;
              }
              if ("resize" === this.mouseState && p) {
                (s = v), (r = v), (c = t.w + t.x - v);
                break;
              }
            }
            if (Math.abs(n - v) < e && "drag" === this.mouseState) {
              (s = v), (r = v - t.w / 2);
              break;
            }
            if (Math.abs(a - v) < e) {
              if ("drag" === this.mouseState) {
                (s = v), (r = v - t.w);
                break;
              }
              if ("resize" === this.mouseState && h) {
                (s = v), (c = v - t.x);
                break;
              }
            }
          }
          null !== s
            ? ((this.$snapX[0].style.left = s + "mm"),
              (this.$snapX[0].style.display = "block"))
            : (this.$snapX[0].style.display = "none");
          var b = this.snapsY,
            y = t.y,
            w = t.y + t.h,
            x = t.y + t.h / 2,
            T = null;
          for (let i = 0; i < b.length; i++) {
            var C = b[i];
            if (Math.abs(y - C) < e) {
              if ("drag" === this.mouseState) {
                (T = C), (l = C);
                break;
              }
              if ("resize" === this.mouseState && m) {
                (T = C), (l = C), (d = t.h + t.y - C);
                break;
              }
            }
            if (Math.abs(x - C) < e && "drag" === this.mouseState) {
              (T = C), (l = C - t.h / 2);
              break;
            }
            if (Math.abs(w - C) < e) {
              if ("drag" === this.mouseState) {
                (T = C), (l = C - t.h);
                break;
              }
              if ("resize" === this.mouseState && f) {
                (T = C), (d = C - t.y);
                break;
              }
            }
          }
          null !== T
            ? ((this.$snapY[0].style.top = T + "mm"),
              (this.$snapY[0].style.display = "block"))
            : (this.$snapY[0].style.display = "none"),
            this.rescale(t, r, l, c, d, !0);
        }),
        (x.prototype.select = function (e) {
          this.multiUnselect(),
            this.selection && this.selection.unselect(),
            (this.selection = e),
            this.selection && this.selection.select(),
            this.updateMenus();
        }),
        (x.prototype.multiSelect = function (e, t) {
          if (t) {
            var i = e,
              o = this.multiSelection;
            if (((e = []), i))
              for (let t = 0; t < i.length; t++) {
                const o = i[t];
                o && -1 === e.indexOf(o) && e.push(o);
              }
            if (o)
              for (let t = 0; t < o.length; t++) {
                const i = o[t];
                i && -1 === e.indexOf(i) && e.push(i);
              }
          }
          if ((this.multiUnselect(), e && 0 !== e.length))
            if (1 === e.length) this.select(e[0]);
            else {
              this.select(null), (this.multiSelection = e);
              for (let t = 0; t < e.length; t++) e[t].multiSelect();
            }
          else this.select(null);
          this.updateMenus();
        }),
        (x.prototype.multiUnselect = function () {
          var e = this.multiSelection;
          if (e) {
            for (var t = 0; t < e.length; t++) e[t].multiUnselect();
            this.multiSelection = null;
          }
          this.updateMenus();
        }),
        (x.prototype.updateObjectMenu = function () {
          this.objectMenu && this.objectMenu.updateUI();
        }),
        (x.prototype.updateMenus = function () {
          this.actionMenu && this.actionMenu.updateUI(),
            this.objectMenu && this.objectMenu.updateUI(),
            this.colorMenu && this.colorMenu.updateUI(),
            this.textMenu && this.textMenu.updateUI(),
            this.paperMenu && this.paperMenu.updateUI();
        }),
        (x.prototype.insertObject = function (e) {
          if (this.isEnabled) {
            var t = this,
              i = t.marginL,
              o = t.marginR,
              a = t.paperWidth,
              n = a - i - o,
              s = a / t.$paper.width(),
              r = (t.$viewport.scrollTop() + t.$viewport.height() / 2) * s,
              l = Math.round(n / 2) + i,
              c = $(e.target),
              d = $.backplane({ autoClose: !0 }),
              u = $(
                '<div class="nx-menu-popup" style="max-height:' +
                  (window.getHeight() - 64) +
                  'px;overflow-y:auto">'
              ).appendTo(d);
            if (
              ($('<div class="nx-menu-item">')
                .append(
                  $(
                    '<div class="nx-menu-icon i-32-24 i-light-grey i-field-string">'
                  )
                )
                .append($('<div class="nx-menu-label">').text(locale.text))
                .appendTo(u)
                .click(function () {
                  d.close(),
                    t.createAndSelectObject({
                      base: "text",
                      isAutoHeight: !1,
                      position: "page",
                      x: l - 30,
                      y: r - 20,
                      w: 60,
                      h: 40,
                    });
                }),
              database.sql)
            )
              $('<div class="nx-menu-item">')
                .append(
                  $(
                    '<div class="nx-menu-icon i-32-24 i-light-grey i-field-file">'
                  )
                )
                .append(
                  $('<div class="nx-menu-label">').text(locale.staticImage)
                )
                .appendTo(u),
                $(
                  '<input type="file" style="display:block;margin-top:-32px;z-index:1;opacity:0;height:32px;width:100%">'
                )
                  .appendTo(u)
                  .change(function (e) {
                    d.close(), t.fileChosen(e);
                  });
            else
              $('<div class="nx-menu-item">')
                .append(
                  $(
                    '<div class="nx-menu-icon i-32-24 i-light-grey i-field-file">'
                  )
                )
                .append(
                  $('<div class="nx-menu-label">').text(locale.staticImage)
                )
                .appendTo(u)
                .click(function () {
                  d.close(), t.chooseFile();
                });
            $('<div class="nx-menu-item">')
              .append(
                $('<div class="nx-menu-icon i-32-24 i-light-grey i-field-fn">')
              )
              .append($('<div class="nx-menu-label">').text(locale.function))
              .appendTo(u)
              .click(function () {
                d.close(),
                  new v.a({
                    schema: t.type.schema,
                    type: t.type,
                    okay: function (e, i) {
                      if (e && i)
                        if ("file" !== i.returnType.base || i.isMultiple())
                          if ("html" === i.returnType.base)
                            t.createAndSelectObject({
                              base: "html",
                              fn: e,
                              isAutoHeight: !1,
                              position: "page",
                              x: l - 30,
                              y: r - 20,
                              w: 60,
                              h: 40,
                            });
                          else {
                            var o = "{" + e + "}";
                            t.createAndSelectObject({
                              base: "text",
                              text: o,
                              isAutoHeight: !1,
                              position: "page",
                              x: l - 30,
                              y: r - 20,
                              w: 60,
                              h: 40,
                            });
                          }
                        else
                          t.createAndSelectObject({
                            base: "imagefield",
                            fid: i.toString(),
                            position: "page",
                            x: l - 20,
                            y: r - 20,
                            w: 40,
                            h: 40,
                          });
                    },
                    cancel: function () {},
                  });
              }),
              $("<hr>").appendTo(u),
              y.each(this.type.sorted, function (e) {
                "file" === e.base
                  ? $('<div class="nx-menu-item">')
                      .append(
                        $(
                          '<div class="nx-menu-icon i-32-24 i-light-grey i-field-' +
                            e.base +
                            '">'
                        )
                      )
                      .append($('<div class="nx-menu-label">').text(e.caption))
                      .appendTo(u)
                      .click(function () {
                        d.close(),
                          t.createAndSelectObject({
                            base: "imagefield",
                            fid: e.id,
                            position: "page",
                            x: l - 20,
                            y: r - 20,
                            w: 40,
                            h: 40,
                          });
                      })
                  : "html" === e.base
                  ? $('<div class="nx-menu-item">')
                      .append(
                        $(
                          '<div class="nx-menu-icon i-32-24 i-light-grey i-field-' +
                            e.base +
                            '">'
                        )
                      )
                      .append($('<div class="nx-menu-label">').text(e.caption))
                      .appendTo(u)
                      .click(function () {
                        d.close(),
                          t.createAndSelectObject({
                            base: "html",
                            isAutoHeight: !1,
                            fn: e.id,
                            position: "page",
                            x: l - 30,
                            y: r - 20,
                            w: 60,
                            h: 40,
                          });
                      })
                  : e.isField
                  ? $('<div class="nx-menu-item">')
                      .append(
                        $(
                          '<div class="nx-menu-icon i-32-24 i-light-grey i-field-' +
                            e.base +
                            '">'
                        )
                      )
                      .append($('<div class="nx-menu-label">').text(e.caption))
                      .appendTo(u)
                      .click(function () {
                        d.close(),
                          "fn" === e.base &&
                          e.exp &&
                          "file" === e.exp.returnType.base &&
                          !e.exp.isMultiple()
                            ? t.createAndSelectObject({
                                base: "imagefield",
                                fid: e.id,
                                position: "page",
                                x: l - 20,
                                y: r - 20,
                                w: 40,
                                h: 40,
                              })
                            : t.createAndSelectObject({
                                base: "text",
                                isAutoHeight: !1,
                                text: "{" + e.id + "}",
                                position: "page",
                                x: l - 30,
                                y: r - 20,
                                w: 60,
                                h: 40,
                              });
                      })
                  : e.isReference ||
                    (e.isReverse &&
                      $('<div class="nx-menu-item">')
                        .append(
                          $(
                            '<div class="nx-menu-icon i-32-24 i-light-grey i-field-list">'
                          )
                        )
                        .append(
                          $('<div class="nx-menu-label">').text(e.caption)
                        )
                        .appendTo(u)
                        .click(function () {
                          d.close(),
                            t.createAndSelectObject({
                              base: "rev",
                              expression: e.id,
                              position: "page",
                              x: i,
                              y: r,
                              w: n,
                              h: 1,
                            });
                        }));
              });
            var p = u.outerWidth(),
              h = u.outerHeight(),
              m = c.offset();
            (m.top += c.outerHeight()),
              m.left + p > window.getWidth() &&
                (m.left = window.getWidth() - p),
              m.top + h > window.getHeight() &&
                (m.top = window.getHeight() - h),
              u.offset(m);
          }
        }),
        (x.prototype.insertObject_PHONE = function (e) {
          if (this.isEnabled) {
            var t = this,
              i = t.marginL,
              o = t.marginR,
              a = t.paperWidth,
              n = a - i - o,
              s = a / t.$paper.width(),
              r = (t.$viewport.scrollTop() + t.$viewport.height() / 2) * s,
              l = Math.round(n / 2) + i,
              c = [];
            c.push({
              caption: locale.text,
              click: function () {
                t.createAndSelectObject({
                  base: "text",
                  isAutoHeight: !1,
                  position: "page",
                  x: l - 30,
                  y: r - 20,
                  w: 60,
                  h: 40,
                });
              },
            }),
              database.sql
                ? c.push({
                    caption: locale.staticImage,
                    fileChosen: function (e) {
                      t.fileChosen(e);
                    },
                  })
                : (c.push({
                    caption: locale.staticImage,
                    click: function (e) {
                      t.chooseFile();
                    },
                  }),
                  c.push({
                    caption: locale.staticImagePhoto,
                    fileChosen: function (e) {
                      t.choosePhoto(e);
                    },
                  })),
              c.push({
                caption: locale.function,
                icon: "type-symbol-fn",
                click: function () {
                  new Function({
                    schema: t.type.schema,
                    type: t.type,
                    okay: function (e) {
                      if (e)
                        if ("file" !== e.returnType.base || e.isMultiple())
                          if ("html" === e.returnType.base)
                            t.createAndSelectObject({
                              base: "html",
                              fn: e.toString(),
                              isAutoHeight: !1,
                              position: "page",
                              x: l - 30,
                              y: r - 20,
                              w: 60,
                              h: 40,
                            });
                          else {
                            var i = "{" + e.toString() + "}";
                            t.createAndSelectObject({
                              base: "text",
                              text: i,
                              isAutoHeight: !1,
                              position: "page",
                              x: l - 30,
                              y: r - 20,
                              w: 60,
                              h: 40,
                            });
                          }
                        else
                          t.createAndSelectObject({
                            base: "imagefield",
                            fid: e.toString(),
                            position: "page",
                            x: l - 20,
                            y: r - 20,
                            w: 40,
                            h: 40,
                          });
                    },
                    cancel: function () {},
                  });
                },
              }),
              y.each(this.type.sorted, function (e) {
                "file" === e.base
                  ? c.push({
                      caption: e.caption,
                      icon: "type-symbol-" + e.base,
                      click: function () {
                        t.createAndSelectObject({
                          base: "imagefield",
                          fid: e.id,
                          position: "page",
                          x: l - 20,
                          y: r - 20,
                          w: 40,
                          h: 40,
                        });
                      },
                    })
                  : "html" === e.base
                  ? c.push({
                      caption: e.caption,
                      icon: "type-symbol-" + e.base,
                      click: function () {
                        t.createAndSelectObject({
                          base: "html",
                          isAutoHeight: !1,
                          fn: e.id,
                          position: "page",
                          x: l - 30,
                          y: r - 20,
                          w: 60,
                          h: 40,
                        });
                      },
                    })
                  : e.isField
                  ? c.push({
                      caption: e.caption,
                      icon: "type-symbol-" + e.base,
                      click: function () {
                        "fn" === e.base &&
                        e.exp &&
                        "file" === e.exp.returnType.base &&
                        !e.exp.isMultiple()
                          ? t.createAndSelectObject({
                              base: "imagefield",
                              fid: e.id,
                              position: "page",
                              x: l - 20,
                              y: r - 20,
                              w: 40,
                              h: 40,
                            })
                          : t.createAndSelectObject({
                              base: "text",
                              isAutoHeight: !1,
                              text: "{" + e.id + "}",
                              position: "page",
                              x: l - 30,
                              y: r - 20,
                              w: 60,
                              h: 40,
                            });
                      },
                    })
                  : e.isReference ||
                    (e.isReverse &&
                      c.push({
                        caption: e.caption,
                        icon: "type-symbol-list",
                        click: function () {
                          $backplane.close(),
                            t.createAndSelectObject({
                              base: "rev",
                              expression: e.id,
                              position: "page",
                              x: i,
                              y: r,
                              w: n,
                              h: 1,
                            });
                        },
                      }));
              }),
              new Menu({ head: { caption: locale.createUI }, items: c });
          }
        }),
        (x.prototype.choosePhoto = function (e) {
          if (this.isEnabled) {
            var t = this,
              i = t.$viewport.scrollLeft() + t.$viewport.width() / 2,
              o = t.$viewport.scrollTop() + t.$viewport.height() / 2,
              a = t.paperWidth / t.$paper.width(),
              n = e.target.files;
            if (n && 1 === n.length) {
              var s = n[0].name,
                r = /\.([a-zA-Z0-9]+)$/.exec(s);
              if (!r) return;
              var l = r[1],
                c = util.createLowerUUID(12) + "." + l;
              database.saveReportFile(t.id, n[0], c, function (e) {
                if (e) return $.alert(e);
                t.createAndSelectObject({
                  base: "image",
                  file: c,
                  position: "page",
                  x: Math.round(i * a - 30),
                  y: Math.round(o * a - 20),
                  w: 60,
                  h: 40,
                });
              });
            }
          }
        }),
        (x.prototype.fileChosen = function (e) {
          if (this.isEnabled) {
            var t = this,
              i = t.$viewport.scrollLeft() + t.$viewport.width() / 2,
              o = t.$viewport.scrollTop() + t.$viewport.height() / 2,
              a = t.paperWidth / t.$paper.width(),
              n = e.target.files;
            n &&
              1 === n.length &&
              database.importReportFile(t.id, n[0], function (e, n) {
                if (e) return $.alert(e);
                t.createAndSelectObject({
                  base: "image",
                  file: n,
                  position: "page",
                  x: Math.round(i * a - 30),
                  y: Math.round(o * a - 20),
                  w: 60,
                  h: 40,
                });
              });
          }
        }),
        (x.prototype.chooseFile = function () {
          if (this.isEnabled) {
            var e = this,
              t = e.$viewport.scrollLeft() + e.$viewport.width() / 2,
              i = e.$viewport.scrollTop() + e.$viewport.height() / 2,
              o = e.paperWidth / e.$paper.width();
            NinoxDocumentInteraction.chooseFile(function (a, n) {
              if (a) return $.alert(a);
              n &&
                database.importReportFile(e.id, n, function (a, n) {
                  if (a) return $.alert(a);
                  e.createAndSelectObject({
                    base: "image",
                    file: n,
                    position: "page",
                    x: Math.round(t * o - 30),
                    y: Math.round(i * o - 20),
                    w: 60,
                    h: 40,
                  });
                });
            });
          }
        }),
        (x.prototype.rescale = function (e, t, i, o, a, n) {
          e.setRect(t, i, o, a, n);
        }),
        (x.prototype.getPosition = function () {
          var e = this.selection,
            t = this.multiSelection;
          if (e) return e.isHead() ? "head" : e.isFoot() ? "foot" : "page";
          if (t && t.length > 0) {
            for (
              var i = t[0].isHead() ? "head" : t[0].isFoot() ? "foot" : "page",
                o = 1;
              o < t.length;
              o++
            ) {
              (t[o].isHead() ? "head" : t[o].isFoot() ? "foot" : "page") !==
                i && (i = "");
            }
            return i;
          }
          return "";
        }),
        (x.prototype.setPosition = function (e) {
          var t = this.selection,
            i = this.multiSelection;
          if (t) t.position = e;
          else if (i && i.length > 0)
            for (var o = 0; o < i.length; o++) i[o].position = e;
          this.setDirty(), this.updatePaper();
        }),
        (x.prototype.setAutoHeight = function (e) {
          e = !0 === e;
          var t = this.selection,
            i = this.multiSelection;
          if (t) t.setAutoHeight(e);
          else for (var o = 0; o < i.length; o++) i[o].setAutoHeight(e);
          this.setDirty();
        }),
        (x.prototype.isAutoHeight = function () {
          var e = this.selection,
            t = this.multiSelection;
          if (e) return e.isAutoHeight;
          if (t && t.length > 0) {
            for (var i = t[0].isAutoHeight, o = 1; o < t.length; o++)
              t[o].isAutoHeight !== i && (i = void 0);
            return i;
          }
          return "";
        }),
        (x.prototype.getSelectedObjects = function () {
          return this.selection ? [this.selection] : this.multiSelection;
        }),
        (x.prototype.canSetPadding = function () {
          return C(this.getSelectedObjects(), "setPadding");
        }),
        (x.prototype.setPadding = function (e, t, i, o) {
          y.each(this.getSelectedObjects(), function (a) {
            a.setPadding && a.setPadding(e, t, i, o);
          }),
            this.setDirty(),
            this.updateObjectMenu();
        }),
        (x.prototype.getPaddingL = function () {
          return T(this.getSelectedObjects(), "paddingL");
        }),
        (x.prototype.getPaddingR = function () {
          return T(this.getSelectedObjects(), "paddingR");
        }),
        (x.prototype.getPaddingT = function () {
          return T(this.getSelectedObjects(), "paddingT");
        }),
        (x.prototype.getPaddingB = function () {
          return T(this.getSelectedObjects(), "paddingB");
        }),
        (x.prototype.setX = function (e) {
          if (!(e < 0)) {
            var t = this.selection,
              i = this.multiSelection;
            if (t) t.setRect(e, void 0, void 0, void 0, !0);
            else if (i && i.length > 0) {
              for (var o = i[0], a = 1; a < i.length; a++)
                (t = i[a]).x < o.x && (o = t);
              var n = e - o.x;
              for (let e = 0; e < i.length; e++)
                (t = i[e]).setRect(t.x + n, void 0, void 0, void 0, !0);
            }
            this.setDirty(), this.updateObjectMenu();
          }
        }),
        (x.prototype.getX = function () {
          var e = this.selection,
            t = this.multiSelection;
          if (e) return e.x;
          if (t && t.length > 0) {
            for (var i = t[0], o = 1; o < t.length; o++)
              (e = t[o]).x < i.x && (i = e);
            return i.x;
          }
        }),
        (x.prototype.setY = function (e) {
          if (!(e < 0)) {
            var t = this.selection,
              i = this.multiSelection;
            if (t) t.setRect(void 0, e, void 0, void 0, !0);
            else if (i && i.length > 0) {
              for (var o = i[0], a = 1; a < i.length; a++)
                (t = i[a]).y < o.y && (o = t);
              var n = e - o.y;
              for (let e = 0; e < i.length; e++)
                (t = i[e]).setRect(void 0, t.y + n, void 0, void 0, !0);
            }
            this.setDirty(), this.updateObjectMenu();
          }
        }),
        (x.prototype.getY = function () {
          let e = this.selection;
          var t = this.multiSelection;
          if (e) return e.y;
          if (t && t.length > 0) {
            for (var i = t[0], o = 1; o < t.length; o++)
              (e = t[o]), e.y < i.y && (i = e);
            return i.y;
          }
        }),
        (x.prototype.getW = function () {
          var e = this.selection,
            t = this.multiSelection;
          if (e) return e.w;
          if (t && t.length > 0) {
            e = t[0];
            for (var i = 1; i < t.length; i++) if (t[i].w !== e.w) return;
            return e.w;
          }
        }),
        (x.prototype.setW = function (e) {
          var t = this.selection,
            i = this.multiSelection;
          if (t) t.setRect(void 0, void 0, e, void 0, !0);
          else if (i && i.length > 0)
            for (let t = 0; t < i.length; t++) {
              i[t].setRect(void 0, void 0, e, void 0, !0);
            }
          this.setDirty(), this.updateObjectMenu();
        }),
        (x.prototype.getH = function () {
          var e = this.selection,
            t = this.multiSelection;
          if (e) return e.h;
          if (t && t.length > 0) {
            e = t[0];
            for (var i = 1; i < t.length; i++) if (t[i].h !== e.h) return;
            return e.h;
          }
        }),
        (x.prototype.setH = function (e) {
          var t = this.selection,
            i = this.multiSelection;
          if (t) t.setRect(void 0, void 0, void 0, e, !0);
          else if (i && i.length > 0)
            for (var o = 0; o < i.length; o++) {
              i[o].setRect(void 0, void 0, void 0, e, !0);
            }
          this.setDirty(), this.updateObjectMenu();
        }),
        (x.prototype.endEdit = function () {}),
        (x.prototype.moveToFront = function () {
          if (this.selection) {
            var e = this.objects.indexOf(this.selection);
            if (e < 0) throw new Error("Illegal state");
            this.objects.splice(e, 1),
              this.objects.push(this.selection),
              this.selection.$object.appendTo(this.$paper);
          } else if (this.multiSelection) {
            var t = this.objects,
              i = this.multiSelection.slice();
            i.sort(function (e, i) {
              return t.indexOf(e) - t.indexOf(i);
            });
            for (var o = 0; o < i.length; o++) {
              var a = i[o];
              const e = t.indexOf(a);
              t.splice(e, 1), t.push(a), a.$object.appendTo(this.$paper);
            }
          }
          this.setDirty();
        }),
        (x.prototype.moveToBack = function () {
          var e = this.objects,
            t = this.selection,
            i = this.multiSelection;
          if (t) {
            var o = e.indexOf(t);
            if (o < 0) throw new Error("Illegal state");
            o > 0 &&
              (e.splice(o, 1),
              e.unshift(t),
              t.$object.insertBefore(e[1].$object));
          } else if (i && i.length < e.length) {
            (i = i.slice()).sort(function (t, i) {
              return e.indexOf(i) - e.indexOf(t);
            });
            for (var a = 0; a < i.length; a++) {
              let t = i[a],
                o = e.indexOf(t);
              e.splice(o, 1),
                e.unshift(t),
                t.$object.insertBefore(e[1].$object);
            }
          }
          this.setDirty();
        }),
        (x.prototype.removeSelection = function () {
          if (this.selection) {
            var e = this.objects,
              t = this.selection;
            this.select(null);
            var i = e.indexOf(t);
            if (i < 0) throw new Error("Illegal state");
            e.splice(i, 1), t.destroy();
          } else if (this.multiSelection) {
            let e = this.objects;
            var o = this.multiSelection;
            this.select(null);
            for (var a = 0; a < o.length; a++) {
              let t = o[a],
                i = e.indexOf(t);
              if (i < 0) throw new Error("Illegal state");
              e.splice(i, 1), t.destroy();
            }
          }
          this.setDirty();
        }),
        (x.prototype.duplicate = function () {
          var e = this,
            t = this.selection ? [this.selection] : this.multiSelection;
          if (t && t.length) {
            var i = [];
            $.loading(!0), o();
          }
          function o() {
            for (var o = 0; o < t.length; o++) {
              var n = t[o].toJSON();
              (n.x += 5), (n.y += 5);
              var s = e.createObject(n);
              i.push(s);
            }
            a();
          }
          function a() {
            if (!i.length) return n();
            for (var e = 0, t = 0; t < i.length; t++)
              i[t].load(function () {
                ++e === i.length && n();
              });
          }
          function n() {
            for (var e = 0; e < i.length; e++) i[e].init();
            s();
          }
          function s() {
            e.updatePaper(), e.multiSelect(i), e.setDirty(), $.loading(!1);
          }
        }),
        (x.prototype.setBorder = function (e, t, i, o) {
          var a = this.selection ? [this.selection] : this.multiSelection;
          if (a) {
            for (var n = 0; n < a.length; n++) a[n].setBorder(e, t, i, o);
            this.setDirty();
          }
        }),
        (x.prototype.saveReportAs = function (e) {
          var t = this,
            i = $.popdown({ cls: "small" });
          $('<div class="nx-section-head">')
            .text(e ? locale.rename : locale.saveAs)
            .appendTo(i.$pane);
          var o = $('<div class="nx-section-pane">').appendTo(i.$pane),
            a = $(
              '<div class="component editor editor-string" style="width:100%">'
            ).appendTo(o);
          $("<label>").text(locale.name).appendTo(a);
          var n = $('<input type="text">')
            .val(this.caption)
            .appendTo($('<div class="stringeditor">').appendTo(a))
            .keydown(function (e) {
              13 === e.which && s(), 27 === e.which && r();
            });
          function s() {
            var i = n.val().trim();
            if (i) {
              r(), $.loading(!0);
              var o = t.toJSON();
              (o.caption = i),
                e
                  ? database.updateReport(o, function (e) {
                      if (($.loading(!1), e)) return $.alert(e);
                      t.destroy(),
                        reports.openDesigner({
                          nid: t.nid,
                          reportId: o.id,
                          nids: t.nids,
                        });
                    })
                  : ((o.id = util.createUUID(12)),
                    database.updateReport(o, function (e) {
                      if (e) return $.loading(!1), $.alert(e);
                      database.copyReportFiles(t.id, o.id, function () {
                        if (($.loading(!1), e)) return $.alert(e);
                        t.destroy(),
                          reports.openDesigner({
                            nid: t.nid,
                            reportId: o.id,
                            nids: t.nids,
                          });
                      });
                    }));
            } else n.focus();
          }
          function r() {
            i.close();
          }
          $('<div class="nx-button-bar">')
            .appendTo(o)
            .append(
              $('<div class="nx-button-text grey">')
                .text(locale.cancel)
                .touch(r)
            )
            .append($('<div class="nx-hspace-flex">'))
            .append(
              $('<div class="nx-button-text blue">').text(locale.okay).touch(s)
            ),
            setTimeout(function () {
              n.focus();
            }, 400);
        }),
        (x.prototype.renameReport = function () {
          this.saveReportAs(!0);
        }),
        (x.prototype.getReportFiles = function () {
          for (var e = this.objects, t = {}, i = 0; i < e.length; i++) {
            var o = e[i];
            "image" === o.base && (t[o.file] = !0);
          }
          return t;
        }),
        (x.prototype.saveReport = function (e) {
          if (!database.canSaveReport()) return e("Not authorized.");
          var t = this;
          $.loading(!0);
          var i = t.toJSON();
          database.cleanReportFiles(t.id, t.getReportFiles(), function (o) {
            o && console.log(o),
              database.updateReport(i, function (i) {
                $.loading(!1), t.setSaved(), e(i);
              });
          });
        }),
        (x.prototype.removeReport = function (e) {
          var t = this;
          $.loading(!0),
            database.removeReport(e, function (i) {
              if (($.loading(!1), i)) return $.alert(i);
              e === t.id
                ? (t.destroy(),
                  reports.openDesigner({ nid: t.nid, nids: t.nids }))
                : t.loadReports();
            });
        }),
        (x.prototype.renderPaper = function (e, t) {
          var i = this.type,
            o = schemas.ridOf(this.nid);
          e ||
            (e = {
              name: util.escapeFileName(i.caption + o) + ".pdf",
              orientation: "portrait",
              paperWidth: this.paperWidth * printer.MM,
              paperHeight: this.paperHeight * printer.MM,
              sections: [],
            });
          var a = {
            marginL: this.marginL * printer.MM,
            marginR: this.marginR * printer.MM,
            marginT: this.marginT * printer.MM,
            marginB: this.marginB * printer.MM,
            headHeight: this.headHeight * printer.MM,
            footHeight: this.footHeight * printer.MM,
            objects: [],
          };
          e.sections.push(a);
          for (var n = this.objects, s = 0; s < n.length; s++)
            a.objects.push(n[s].renderPaper());
          if (this.printAttachments) {
            var r = this.nid,
              l = Math.ceil(this.footY),
              c = this.marginL,
              d = Math.floor(
                (this.paperWidth - this.marginL - this.marginR) / 2
              ),
              u = d;
            database.loadNode(r, function (o, n) {
              if (o || !n) return t(void 0, e);
              for (var s = {}, p = i.sorted, h = 0; h < p.length; h++) {
                var m = p[h];
                if ("file" === m.base) {
                  var f = n[m.id];
                  f && (s[f] = !0);
                }
              }
              console.log("LOADING FILES!!"),
                database.loadFiles(r, function (i, o) {
                  if (o)
                    for (var n = 0, p = l, h = 0; h < o.length; h++) {
                      var m = o[h].name;
                      if (!s[m] && util.RE_IMAGE_FILE_EXT.test(m)) {
                        var f = database.downloadURL(r, m),
                          g = n % 2 == 0 ? c : c + d;
                        a.objects.push({
                          base: "image",
                          url: f,
                          x: g * printer.MM,
                          y: p * printer.MM,
                          w: d * printer.MM,
                          h: u * printer.MM,
                          position: "page",
                          borderWidth: 0.25,
                          borderRadius: 0,
                          borderColor: "rgb(0,0,0)",
                          backgroundColor: null,
                        }),
                          n % 2 == 1 && (p += u),
                          n++;
                      }
                    }
                  t(void 0, e);
                });
            });
          } else t(void 0, e);
          return e;
        }),
        (x.prototype.print = function (e) {
          if (
            (Object(w.f)("Form", "PrintConfirm"), this.nids && this.nids.length)
          ) {
            var t = this,
              i = $(e.target),
              o = i.offset();
            if (0 !== o.top || 0 !== o.left) {
              var a = $.backplane({ autoClose: !0 }),
                n = $('<div class="nx-menu-popup">').appendTo(a);
              $('<div class="nx-menu-item">')
                .append($('<div class="nx-menu-label">').text(locale.printOne))
                .appendTo(n)
                .touch(f),
                $('<div class="nx-menu-item">')
                  .append(
                    $('<div class="nx-menu-label">').text(
                      locale.printAll + " (" + t.nids.length + ")"
                    )
                  )
                  .appendTo(n)
                  .touch(g);
              var s,
                r,
                l = n.outerWidth(),
                c = n.outerHeight(),
                d = i.width(),
                u = i.height() + 8,
                p = Math.max(
                  0,
                  Math.min(
                    o.left + Math.round((d - l) / 2),
                    window.getWidth() - l
                  )
                ),
                h = o.top + u,
                m = o.left + Math.round(d / 2) - 12;
              h + c > window.getHeight()
                ? ((s = "down"), (r = (h = Math.max(0, o.top - c)) + c - 0.5))
                : ((s = "up"), (r = h - 23.5)),
                n.offset({ left: p, top: h }),
                $(
                  '<div class="marker-' +
                    s +
                    '" style="position:absolute;left:' +
                    m +
                    "px;top:" +
                    r +
                    'px">'
                ).appendTo(a);
            }
          } else this.printSingle();
          function f() {
            v(), t.printSingle();
          }
          function g() {
            v(), t.nids && t.nids.length && t.printAll();
          }
          function v() {
            a.remove();
          }
        }),
        (x.prototype.printSingle = function (e) {
          Object(w.f)("Form", "PrintConfirmSingle"),
            NinoxPrint.previewPDFDocument_PREPARE &&
              NinoxPrint.previewPDFDocument_PREPARE(),
            $.loading(!0),
            this.renderPaper(void 0, function (t, i) {
              if (($.loading(!1), t)) return $.alert(t);
              NinoxPrint.previewPDFDocumentRich(i), e && e();
            });
        }),
        (x.prototype.printSingleToFile = function (e) {
          this.renderPaper(void 0, function (t, i) {
            if (t) return $.alert(t);
            NinoxPrint.savePDFDocumentRich(i, e);
          });
        }),
        (x.prototype.printAll = function (t) {
          Object(w.f)("Form", "PrintConfirmAll");
          var i = this,
            o = this.nids;
          if (o && o.length) {
            NinoxPrint.previewPDFDocument_PREPARE &&
              NinoxPrint.previewPDFDocument_PREPARE();
            var a = void 0;
            $.loading(!0), e(n, 0);
          } else t && t();
          function n(t) {
            if (t >= o.length) return e(s);
            var r = o[t];
            i.loadNid(r, function (o) {
              if (o) return $.alert(o);
              i.renderPaper(a, function (i, o) {
                if (i) return $.alert(i);
                (a = o), e(n, t + 1);
              });
            });
          }
          function s() {
            $.loading(!1),
              a && (NinoxPrint.previewPDFDocumentRich(a), t && t());
          }
        }),
        (x.prototype.setDirty = function () {
          this.isEnabled && (this.isDirty = !0);
        }),
        (x.prototype.setSaved = function () {
          this.isDirty = !1;
        }),
        (x.prototype.keydown = function (e) {
          if (this.isEnabled && e.target === document.body)
            switch (e.which) {
              case 8:
                this.removeSelection(), e.preventDefault();
                break;
              case 37:
                this.setX(this.getX() - 1);
                break;
              case 38:
                this.setY(this.getY() - 1);
                break;
              case 39:
                this.setX(this.getX() + 1);
                break;
              case 40:
                this.setY(this.getY() + 1);
                break;
              case 27:
                this.select(null);
            }
        }),
        (x.prototype.startSelect = function (e) {
          this.mouseState
            ? e()
            : ((this.mouseState = "start-select"),
              (this.startSelectCallback = e));
        }),
        (x.prototype.createReport = function () {
          this.createReport_DESKTOP();
        }),
        (x.prototype.createReport_PHONE = function () {
          var e = this;
          e.saveIfUnsaved(function (t) {
            t &&
              new Popup({
                caption: locale.newReport,
                dismiss: !0,
                init: function () {
                  var e = this;
                  (e.$name = $('<input type="text" class="no-barcode">').attr(
                    "placeholder",
                    locale.name
                  )),
                    $('<div class="editor-block no-label">')
                      .append(e.$name)
                      .appendTo(e.$pane),
                    (e.autoLayout = "empty");
                  var t = $('<div class="switch-item">')
                      .text(locale.emptyLayout)
                      .click(function () {
                        (e.autoLayout = "empty"), a();
                      }),
                    i = $('<div class="switch-item">')
                      .text(locale.automatic)
                      .click(function () {
                        (e.autoLayout = "auto"), a();
                      }),
                    o = $('<div class="switch-item">')
                      .text(locale.duplicate)
                      .click(function () {
                        (e.autoLayout = "duplicate"), a();
                      });
                  function a() {
                    t.toggleClass("selected", "empty" === e.autoLayout),
                      i.toggleClass("selected", "auto" === e.autoLayout),
                      o.toggleClass("selected", "duplicate" === e.autoLayout);
                  }
                  $(
                    '<div class="editor-block" style="flex-wrap:wrap;-webkit-flex-wrap:wrap">'
                  )
                    .append($("<label>").text(locale.autoLayout))
                    .append(
                      $('<div class="switch">').append(t).append(i).append(o)
                    )
                    .appendTo(e.$pane),
                    a();
                },
                buttons: [
                  {
                    caption: locale.okay,
                    cls: "blue",
                    click: function () {
                      var t = this,
                        i = t.$name.val().trim();
                      if (i)
                        if ("duplicate" === t.autoLayout) {
                          var o = e.toJSON();
                          (o.caption = i),
                            (o.id = util.createUUID(12)),
                            database.updateReport(o, function (i) {
                              if (i) return $.loading(!1), $.alert(i);
                              database.copyReportFiles(e.id, o.id, function () {
                                if (($.loading(!1), i)) return $.alert(i);
                                t.dismiss(),
                                  e.destroy(),
                                  reports.openDesigner({
                                    nid: e.nid,
                                    reportId: o.id,
                                    nids: e.nids,
                                  });
                              });
                            });
                        } else
                          t.dismiss(),
                            e.destroy(),
                            reports.openDesigner({
                              nid: e.nid,
                              reportId: null,
                              empty: "empty" === t.autoLayout,
                              caption: i,
                              nids: e.nids,
                            });
                      else t.$name.focus();
                      return !1;
                    },
                  },
                ],
              });
          });
        }),
        (x.prototype.createReport_DESKTOP = function () {
          var e = this;
          e.saveIfUnsaved(function (t) {
            if (t) {
              var i = $.popdown({ cls: "small" });
              $('<div class="nx-section-head">')
                .text(locale.newReport)
                .appendTo(i.$pane);
              var o = $('<div class="nx-section-pane">').appendTo(i.$pane),
                a = $(
                  '<div class="component editor editor-string" style="width:100%">'
                ).appendTo(o);
              $("<label>").text(locale.name).appendTo(a);
              var n = $('<input type="text">')
                  .appendTo($('<div class="stringeditor">').appendTo(a))
                  .keydown(function (e) {
                    13 === e.which && l(), 27 === e.which && c();
                  }),
                s = new util.SimpleModel(
                  new schemas.TChoice(void 0, void 0, {
                    caption: locale.autoLayout,
                    required: !0,
                    formWidth: 1,
                    choiceRenderer: "switch",
                    values: {
                      empty: {
                        id: "empty",
                        caption: locale.emptyLayout,
                        order: 1,
                      },
                      auto: { id: "auto", caption: locale.automatic, order: 2 },
                      duplicate: {
                        id: "duplicate",
                        caption: locale.duplicate,
                        order: 3,
                      },
                    },
                  }),
                  "auto"
                ),
                r = new b.a(void 0, s, o);
              $('<div class="nx-button-bar">')
                .appendTo(o)
                .append(
                  $('<div class="nx-button-text grey">')
                    .text(locale.cancel)
                    .touch(c)
                )
                .append($('<div class="nx-hspace-flex">'))
                .append(
                  $('<div class="nx-button-text blue">')
                    .text(locale.okay)
                    .touch(l)
                ),
                setTimeout(function () {
                  n.focus();
                }, 400);
            }
            function l() {
              var t = n.val().trim();
              if (t)
                if ("duplicate" === s.value) {
                  var i = e.toJSON();
                  (i.caption = t),
                    (i.id = util.createUUID(12)),
                    database.updateReport(i, function (t) {
                      if (t) return $.loading(!1), $.alert(t);
                      database.copyReportFiles(e.id, i.id, function () {
                        if (($.loading(!1), t)) return $.alert(t);
                        c(),
                          e.destroy(),
                          reports.openDesigner({
                            nid: e.nid,
                            reportId: i.id,
                            nids: e.nids,
                          });
                      });
                    });
                } else
                  c(),
                    e.destroy(),
                    reports.openDesigner({
                      nid: e.nid,
                      reportId: null,
                      empty: "empty" === s.value,
                      caption: t,
                      nids: e.nids,
                    });
              else n.focus();
            }
            function c() {
              r.destroy(), i.close();
            }
          });
        }),
        (x.prototype.loadNid = function (e, t) {
          this.nid = e;
          for (var i = this.objects, o = -1, a = 0; a < i.length; a++) {
            i[a].reload(n);
          }
          function n() {
            ++o === i.length && t();
          }
          n();
        }),
        (x.prototype.cutEnabled = function () {
          return (
            !!this.selection ||
            (!!this.multiSelection && this.multiSelection.length > 0)
          );
        }),
        (x.prototype.cut = function () {
          var e = this.selection,
            t = this.multiSelection,
            i = this.objects;
          if (e) {
            var o = "[" + JSON.stringify(e.toJSON()) + "]";
            this.select(null);
            var a = i.indexOf(e);
            return a >= 0 && i.splice(a, 1), e.destroy(), this.setDirty(), o;
          }
          if (t && t.length > 0) {
            let o = "[";
            for (var n = 0; n < t.length; n++)
              (e = t[n]),
                (o += (n > 0 ? "," : "") + JSON.stringify(e.toJSON()));
            (o += "]"), this.select(null);
            for (let e = 0; e < t.length; e++) {
              let o = t[e],
                a = i.indexOf(o);
              a >= 0 && i.splice(a, 1), o.destroy();
            }
            return this.setDirty(), o;
          }
          return "";
        }),
        (x.prototype.copyEnabled = function () {
          return !!this.selection || !!this.multiSelection;
        }),
        (x.prototype.copy = function () {
          var e = this.selection,
            t = this.multiSelection;
          if (e) return "[" + JSON.stringify(e.toJSON()) + "]";
          if (t && t.length > 0) {
            for (var i = "[", o = 0; o < t.length; o++)
              (e = t[o]),
                (i += (o > 0 ? "," : "") + JSON.stringify(e.toJSON()));
            return (i += "]");
          }
          return "";
        }),
        (x.prototype.pasteEnabled = function () {
          return !0;
        }),
        (x.prototype.paste = function (e) {
          var t,
            i = this;
          try {
            t = JSON.parse(e);
          } catch (e) {}
          if (Array.isArray(t)) {
            var o = [];
            a();
          }
          function a() {
            for (var e = 0; e < t.length; e++) {
              var a = i.createObject(t[e]);
              a && ((a.x += 5), (a.y += 5), o.push(a));
            }
            n();
          }
          function n() {
            if (!o.length) return s();
            for (var e = 0, t = 0; t < o.length; t++)
              o[t].load(function () {
                ++e === o.length && s();
              });
          }
          function s() {
            for (var e = 0; e < o.length; e++)
              o[e].init(), o[e].patchAutoHeight();
            r();
          }
          function r() {
            i.updatePaper(), i.multiSelect(o), i.setDirty();
          }
        });
    }.call(
      this,
      i(
        "./node_modules/node-libs-browser/node_modules/timers-browserify/main.js"
      ).setImmediate
    ));
  },
  "./src/js/reports/ObjectMenu.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return a;
    });
    var o = i("./src/js/widgets/Field.js");
    function a(e) {
      var t = this;
      (this.designer = e),
        (this.$metrics = $('<div class="rd-menu-bar center">')
          .hide()
          .appendTo(e.$menu));
      var i = $("<div>").appendTo(this.$metrics);
      (this.height = new util.SimpleModel(
        new schemas.TChoice(void 0, void 0, {
          caption: "",
          required: !0,
          values: {
            fix: { caption: locale.fixedHeight, order: 1 },
            auto: { caption: locale.autoHeight, order: 2 },
          },
        })
      )),
        (this.height.withoutLabel = !0),
        (this.heightField = new o.a(this, this.height, i)),
        this.height.on("update", function () {
          e.setAutoHeight("auto" === t.height.value), t.updateUI();
        }),
        this.heightField.el.css({ width: 240 });
      var a = $("<div>").appendTo(this.$metrics);
      (this.position = new util.SimpleModel(
        new schemas.TChoice(void 0, void 0, {
          caption: "",
          required: !0,
          values: {
            head: { caption: locale.pageHead, order: 1 },
            page: { caption: locale.pageBody, order: 2 },
            foot: { caption: locale.pageFoot, order: 3 },
          },
        })
      )),
        (this.position.withoutLabel = !0),
        (this.positionField = new o.a(this, this.position, a)),
        this.position.on("update", function () {
          e.setPosition(t.position.value), t.updateUI();
        }),
        this.positionField.el.css({ width: 240 }),
        $('<div class="rd-menu-head">')
          .text(locale.position)
          .appendTo(this.$metrics),
        $('<div class="rd-metrics-label">').text("x").appendTo(this.$metrics);
      var n = (this.$x = $('<input type="number" class="rd-metrics">')
        .appendTo(this.$metrics)
        .change(function () {
          e.setX(n.val()), t.updateUI();
        }));
      $('<div class="rd-metrics-label">').text("y").appendTo(this.$metrics);
      var s = (this.$y = $('<input type="number" class="rd-metrics">')
        .appendTo(this.$metrics)
        .change(function () {
          e.setY(s.val()), t.updateUI();
        }));
      $('<div class="rd-metrics-label">').text("↔︎").appendTo(this.$metrics);
      var r = (this.$w = $('<input type="number" class="rd-metrics">')
        .appendTo(this.$metrics)
        .change(function () {
          e.setW(r.val()), t.updateUI();
        }));
      $('<div class="rd-metrics-label">').text("↕︎").appendTo(this.$metrics);
      var l = (this.$h = $('<input type="number" class="rd-metrics">')
        .appendTo(this.$metrics)
        .change(function () {
          e.setH(l.val()), t.updateUI();
        }));
      (this.$padding = $("<div>").hide().appendTo(this.$metrics)),
        $('<div class="rd-menu-head">')
          .text(locale.padding)
          .appendTo(this.$padding),
        $('<div class="rd-metrics-label">').text("↑").appendTo(this.$padding),
        (this.$pt = $('<input type="number" class="rd-metrics">')
          .appendTo(this.$padding)
          .change(function () {
            t.updatePaddingT();
          })),
        $('<div class="rd-metrics-label">').text("↓").appendTo(this.$padding),
        (this.$pb = $('<input type="number" class="rd-metrics">')
          .appendTo(this.$padding)
          .change(function () {
            t.updatePaddingB();
          })),
        $('<div class="rd-metrics-label">').text("←").appendTo(this.$padding),
        (this.$pl = $('<input type="number" class="rd-metrics">')
          .appendTo(this.$padding)
          .change(function () {
            t.updatePaddingL();
          })),
        $('<div class="rd-metrics-label">').text("→").appendTo(this.$padding),
        (this.$pr = $('<input type="number" class="rd-metrics">')
          .appendTo(this.$padding)
          .change(function () {
            t.updatePaddingR();
          })),
        this.updateUI();
    }
    function n(e) {
      return null == e || isNaN(e) ? null : Math.round(100 * e) / 100;
    }
    function s(e) {
      if (e) {
        var t = Number(e);
        return t > 0 ? t : 0;
      }
    }
    (a.prototype.updateUI = function () {
      var e = this.designer,
        t = e.selection,
        i = e.multiSelection;
      if (t || i) {
        var o = this.designer.isAutoHeight();
        (this.height.value = !0 === o ? "auto" : !1 === o ? "fix" : void 0),
          this.heightField.editor.load(),
          (this.position.value = this.designer.getPosition()),
          this.positionField.editor.load(),
          this.$x.val(n(this.designer.getX())),
          this.$y.val(n(this.designer.getY())),
          this.$w.val(n(this.designer.getW())),
          this.$h.val(n(this.designer.getH())),
          this.$metrics.show();
      } else this.$metrics.hide();
      e.canSetPadding()
        ? (this.$pl.val(e.getPaddingL() || ""),
          this.$pr.val(e.getPaddingR() || ""),
          this.$pt.val(e.getPaddingT() || ""),
          this.$pb.val(e.getPaddingB() || ""),
          this.$padding.show())
        : this.$padding.hide();
    }),
      (a.prototype.updatePaddingL = function () {
        this.designer.setPadding(s(this.$pl.val()));
      }),
      (a.prototype.updatePaddingR = function () {
        this.designer.setPadding(void 0, s(this.$pr.val()), void 0, void 0);
      }),
      (a.prototype.updatePaddingT = function () {
        this.designer.setPadding(void 0, void 0, s(this.$pt.val()), void 0);
      }),
      (a.prototype.updatePaddingB = function () {
        this.designer.setPadding(void 0, void 0, void 0, s(this.$pb.val()));
      });
  },
  "./src/js/reports/PaperMenu.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return a;
    });
    var o = i("./src/js/widgets/Field.js");
    function a(e) {
      var t = this;
      (this.designer = e),
        (this.$el = $('<div class="rd-menu-bar center">')
          .hide()
          .appendTo(e.$menu));
      var i = (this.format = new util.SimpleModel(
        new schemas.TChoice(void 0, void 0, {
          caption: locale.paperFormat,
          required: !0,
          values: {
            custom: { id: "custom", caption: locale.custom, order: 1 },
            "297x420": { id: "297x420", caption: "DIN A3 ↕︎", order: 2 },
            "210x297": { id: "210x297", caption: "DIN A4 ↕︎", order: 3 },
            "148x210": { id: "148x210", caption: "DIN A5 ↕︎", order: 4 },
            "420x297": { id: "420x297", caption: "DIN A3 ↔︎", order: 5 },
            "297x210": { id: "297x210", caption: "DIN A4 ↔︎", order: 6 },
            "210x148": { id: "210x148", caption: "DIN A5 ↔︎", order: 7 },
            "140x216": { id: "140x216", caption: "Invoice", order: 8 },
            "184x267": { id: "184x267", caption: "Executive", order: 9 },
            "216x356": { id: "216x356", caption: "Legal", order: 10 },
            "216x279": { id: "216x279", caption: "Letter", order: 11 },
          },
        })
      ));
      (i.value = "custom"),
        (this.formatField = new o.a(this, i, this.$el)).el.css({
          width: 240,
          margin: "0 0 8px 0",
          "vertical-align": "baseline",
        }),
        i.on("update", function () {
          var e = i.value;
          if ("custom" !== e) {
            var o = e.split("x"),
              a = Number(o[0]),
              n = Number(o[1]);
            t.$pw.val(a), t.$ph.val(n), t.updatePaper();
          }
        }),
        $("<br>").appendTo(this.$el),
        $('<div class="rd-metrics-label">︎').text("↔︎").appendTo(this.$el),
        (this.$pw = $('<input type="number" class="rd-metrics">')
          .appendTo(this.$el)
          .change(function () {
            t.updatePaper();
          })),
        $('<div class="rd-metrics-label">').text("↕︎").appendTo(this.$el),
        (this.$ph = $('<input type="number" class="rd-metrics">')
          .appendTo(this.$el)
          .change(function () {
            t.updatePaper();
          })),
        $('<div class="rd-menu-head">')
          .text(locale.headFoot)
          .appendTo(this.$el),
        $('<div class="rd-metrics-label">').text("↑").appendTo(this.$el),
        (this.$head = $('<input type="number" class="rd-metrics">')
          .appendTo(this.$el)
          .change(function () {
            t.updatePaper();
          })),
        $('<div class="rd-metrics-label">').text("↓").appendTo(this.$el),
        (this.$foot = $('<input type="number" class="rd-metrics">')
          .appendTo(this.$el)
          .change(function () {
            t.updatePaper();
          })),
        $('<div class="rd-menu-head">').text(locale.margins).appendTo(this.$el),
        $('<div class="rd-metrics-label">').text("↑").appendTo(this.$el),
        (this.$mt = $('<input type="number" class="rd-metrics">')
          .appendTo(this.$el)
          .change(function () {
            t.updatePaper();
          })),
        $('<div class="rd-metrics-label">').text("↓").appendTo(this.$el),
        (this.$mb = $('<input type="number" class="rd-metrics">')
          .appendTo(this.$el)
          .change(function () {
            t.updatePaper();
          })),
        $('<div class="rd-metrics-label">').text("←").appendTo(this.$el),
        (this.$ml = $('<input type="number" class="rd-metrics">')
          .appendTo(this.$el)
          .change(function () {
            t.updatePaper();
          })),
        $('<div class="rd-metrics-label">').text("→").appendTo(this.$el),
        (this.$mr = $('<input type="number" class="rd-metrics">')
          .appendTo(this.$el)
          .change(function () {
            t.updatePaper();
          }));
      var a = (this.printFiles = new util.SimpleModel(
        new schemas.TBoolean(void 0, void 0, {
          required: !0,
          caption: locale.printAttachments,
          booleanRenderer: "check",
        })
      ));
      (a.value = this.designer.printAttachments),
        (a.withoutLabel = !0),
        (this.printAttachmentsField = new o.a(this, a, this.$el)).el.css({
          width: 240,
          margin: "0 0 8px 0",
          "vertical-align": "baseline",
          "text-align": "left",
        }),
        a.on("update", function () {
          t.designer.printAttachments = a.value;
        });
    }
    (a.prototype.updateUI = function () {
      var e = this.designer;
      if (e.selection || e.multiSelection) this.$el.hide();
      else {
        var t = e.paperWidth + "x" + e.paperHeight,
          i = this.format.field.values[t];
        (this.format.value = i ? i.id : "custom"),
          this.formatField.editor.load(),
          this.$pw.val(e.paperWidth),
          this.$ph.val(e.paperHeight),
          this.$head.val(e.headHeight),
          this.$foot.val(e.footHeight),
          this.$mt.val(e.marginT),
          this.$mb.val(e.marginB),
          this.$ml.val(e.marginL),
          this.$mr.val(e.marginR),
          this.$el.show();
      }
    }),
      (a.prototype.updatePaper = function () {
        this.designer.setPaper(
          Number(this.$pw.val()),
          Number(this.$ph.val()),
          Number(this.$ml.val()),
          Number(this.$mr.val()),
          Number(this.$mt.val()),
          Number(this.$mb.val()),
          Number(this.$head.val()),
          Number(this.$foot.val())
        ),
          this.updateUI();
      });
  },
  "./src/js/reports/RDHTML.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return s;
    });
    i("./node_modules/core-js/modules/web.url.to-json.js");
    var o = i("./src/js/reports/RDObject.js"),
      a = i("./src/js/admin/FunctionEditor.js"),
      n = i("./src/js/localesEngine/localesManager.ts");
    function s(e, t) {
      o.a.call(this, e, t),
        (this.fn = t.fn),
        (this.verticalAlign = t.verticalAlign || null),
        (this.paddingL = t.paddingL || 0),
        (this.paddingR = t.paddingR || 0),
        (this.paddingT = t.paddingT || 0),
        (this.paddingB = t.paddingB || 0);
      var i = null;
      try {
        i = queries.parseSystem(e.type.schema, e.type, this.fn, {});
      } catch (e) {}
      (this.exp = i),
        (this.html = ""),
        (this.$wrap = null),
        (this.$text = null);
    }
    Object.assign(s.prototype, o.a.prototype),
      (s.prototype.base = "html"),
      (s.prototype.toJSON = function () {
        return Object.assign(o.a.prototype.toJSON.apply(this), {
          base: "html",
          isAutoHeight: this.isAutoHeight || !1,
          fn: this.fn,
          verticalAlign: this.verticalAlign,
          paddingL: this.paddingL,
          paddingR: this.paddingR,
          paddingT: this.paddingT,
          paddingB: this.paddingB,
        });
      }),
      (s.prototype.reload = function (e) {
        var t = this;
        t.load(function () {
          t.$text.html(t.html), e();
        });
      }),
      (s.prototype.load = function (e) {
        var t = this,
          i = this.exp;
        if (!i) return e();
        var o = this.designer.nid;
        if (!o) return e();
        var a = database.loadNodeSync(o);
        if (!a) return e();
        i.evaluate(database, a, function (i, o) {
          (t.html = o || ""), i && console.log("RDHTML.load err", i), e();
        });
      }),
      (s.prototype.init = function () {
        o.a.prototype.init.call(this),
          (this.$wrap = $('<div class="rd-object-html-wrap">')
            .css({
              "-webkit-align-items":
                "middle" === this.verticalAlign
                  ? "center"
                  : "bottom" === this.verticalAlign
                  ? "flex-end"
                  : "flex-start",
              "align-items":
                "middle" === this.verticalAlign
                  ? "center"
                  : "bottom" === this.verticalAlign
                  ? "flex-end"
                  : "flex-start",
            })
            .appendTo(this.$object)),
          (this.$text = $('<div class="rd-object-html-html">')
            .css({
              "padding-left": this.paddingL ? this.paddingL + "mm" : "",
              "padding-right": this.paddingR ? this.paddingR + "mm" : "",
              "padding-top": this.paddingT ? this.paddingT + "mm" : "",
              "padding-bottom": this.paddingB ? this.paddingB + "mm" : "",
            })
            .appendTo(this.$wrap)
            .html(this.html));
      }),
      (s.prototype.renderPaper = function () {
        return Object.assign(o.a.prototype.renderPaper.apply(this, arguments), {
          base: "text",
          text: this.html,
          verticalAlign: this.verticalAlign || "top",
          isHTML: !0,
          dynamicHeight: this.isAutoHeight || !1,
          paddingL: (this.paddingL || 0) * printer.MM,
          paddingR: (this.paddingR || 0) * printer.MM,
          paddingT: (this.paddingT || 0) * printer.MM,
          paddingB: (this.paddingB || 0) * printer.MM,
          textDecoration: "",
          fontStyle: "",
          fontWeight: "",
          lineHeight: 1,
        });
      }),
      (s.prototype.setPadding = function (e, t, i, o) {
        void 0 !== e && (this.paddingL = e || 0),
          void 0 !== t && (this.paddingR = t || 0),
          void 0 !== i && (this.paddingT = i || 0),
          void 0 !== o && (this.paddingB = o || 0),
          this.$text.css({
            "padding-left": this.paddingL ? this.paddingL + "mm" : "",
            "padding-right": this.paddingR ? this.paddingR + "mm" : "",
            "padding-top": this.paddingT ? this.paddingT + "mm" : "",
            "padding-bottom": this.paddingB ? this.paddingB + "mm" : "",
          });
      }),
      (s.prototype.setVerticalAlign = function (e) {
        (this.verticalAlign = e || null),
          this.$wrap.css({
            "-webkit-align-items":
              "middle" === this.verticalAlign
                ? "center"
                : "bottom" === this.verticalAlign
                ? "flex-end"
                : "flex-start",
            "align-items":
              "middle" === this.verticalAlign
                ? "center"
                : "bottom" === this.verticalAlign
                ? "flex-end"
                : "flex-start",
          }),
          this.designer.setDirty();
      }),
      (s.prototype.startEdit = function () {
        const e = this,
          t = e.designer;
        new a.a({
          value: e.exp.toHumanString(),
          schema: e.designer.type.schema,
          type: e.designer.type,
          okay: function (i, o) {
            if ("html" === o.returnType.base) {
              const i = {
                base: "html",
                position: e.position,
                x: e.x,
                y: e.y,
                w: e.w,
                h: e.h,
                fn: o.toString(),
              };
              t.removeSelection(), t.createAndSelectObject(i);
            } else $.alert(Object(n.a)().typeMissmatchHtml);
            t.mouseState = null;
          },
          cancel: function () {
            t.mouseState = null;
          },
        });
      });
  },
  "./src/js/reports/RDImage.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return a;
    });
    i("./node_modules/core-js/modules/web.url.to-json.js");
    var o = i("./src/js/reports/RDObject.js");
    function a(e, t) {
      (t.isAutoHeight = !1),
        o.a.call(this, e, t),
        (this.file = t.file || null),
        (this.printUrl = this.file
          ? database.reportFileURL(this.designer.id, this.file)
          : ""),
        (this.previewUrl = this.file
          ? database.reportFileURLProxy(this.designer.id, this.file)
          : ""),
        (this.img = null);
    }
    Object.assign(a.prototype, o.a.prototype),
      (a.prototype.base = "image"),
      (a.prototype.setAutoHeight = function () {}),
      (a.prototype.setFontFamily = void 0),
      (a.prototype.setFontSize = void 0),
      (a.prototype.setTextAlign = void 0),
      (a.prototype.setVerticalAlign = void 0),
      (a.prototype.setTextColor = void 0),
      (a.prototype.toJSON = function () {
        return Object.assign(o.a.prototype.toJSON.apply(this), {
          file: this.file,
        });
      }),
      (a.prototype.load = function (e) {
        var t = this;
        t.img = null;
        var i = new Image();
        (i.src = t.previewUrl),
          i.complete
            ? ((t.img = i), e())
            : ((i.onload = function () {
                (t.img = i), e();
              }),
              (i.onerror = function () {
                e();
              }));
      }),
      (a.prototype.init = function () {
        console.log("RDImage.init"),
          o.a.prototype.init.call(this),
          (this.$img = $('<img style="width:100%">').appendTo(this.$object)),
          (this.$img[0].src = this.img ? this.img.src : "");
      }),
      (a.prototype.renderPaper = function () {
        return Object.assign(o.a.prototype.renderPaper.apply(this, arguments), {
          base: "image",
          url: this.printUrl,
          verticalAlign: "top",
        });
      });
  },
  "./src/js/reports/RDImageField.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return s;
    });
    i("./node_modules/core-js/modules/web.url.to-json.js");
    var o = i("./src/js/reports/RDObject.js"),
      a = i("./src/js/admin/FunctionEditor.js"),
      n = i("./src/js/localesEngine/localesManager.ts");
    i("./src/js/reports/RDImage.js");
    function s(e, t) {
      (t.isAutoHeight = !1),
        o.a.call(this, e, t),
        (this.fid = t.fid),
        (this.exp = void 0);
      var i = e.type;
      try {
        var a = queries.parseSystem(i.schema, i, this.fid, {}, !1);
        a.isMultiple() ||
          a.isUpdating() ||
          "file" !== a.returnType.base ||
          (this.exp = a);
      } catch (e) {}
      (this.previewURL = ""),
        (this.renderURL = ""),
        (this.img = null),
        (this.$img = null);
    }
    Object.assign(s.prototype, o.a.prototype),
      (s.prototype.base = "imagefield"),
      (s.prototype.setAutoHeight = function () {}),
      (s.prototype.setTextAlign = void 0),
      (s.prototype.setTextColor = void 0),
      (s.prototype.load = function (e) {
        var t = this;
        if (!t.exp) return e();
        var i = t.designer.nid;
        if (!i) return e();
        database.loadNode(i, (i, o) => {
          if (!o) return e();
          (t.img = null),
            (t.previewURL = ""),
            (t.renderURL = ""),
            t.exp.evaluate(database, o, function (i, o) {
              (t.val = o),
                o &&
                  ((t.previewURL = database.fileURL1(o)),
                  (t.renderURL = database.downloadURL1(o)));
              var a = new Image();
              (a.src = t.previewURL),
                a.complete
                  ? ((t.img = a), e())
                  : ((a.onload = function () {
                      (t.img = a), e();
                    }),
                    (a.onerror = function () {
                      e();
                    }));
            });
        });
      }),
      (s.prototype.init = function () {
        o.a.prototype.init.call(this),
          (this.$img = $('<img style="width:100%">').appendTo(this.$object)),
          (this.$img[0].src = this.img ? this.img.src : "");
      }),
      (s.prototype.reload = function (e) {
        var t = this;
        t.load(function () {
          (t.$img[0].src = t.img ? t.img.src : ""), e();
        });
      }),
      (s.prototype.toJSON = function () {
        return Object.assign(o.a.prototype.toJSON.apply(this), {
          fid: this.fid,
        });
      }),
      (s.prototype.renderPaper = function () {
        return Object.assign(o.a.prototype.renderPaper.apply(this, arguments), {
          base: "image",
          url: this.renderURL,
        });
      }),
      (s.prototype.startEdit = function () {
        const e = this,
          t = e.designer;
        new a.a({
          value: e.exp.toHumanString(),
          schema: e.designer.type.schema,
          type: e.designer.type,
          okay: function (i, o) {
            if ("file" === o.returnType.base) {
              const i = {
                base: "imagefield",
                position: e.position,
                x: e.x,
                y: e.y,
                w: e.w,
                h: e.h,
                fid: o.toString(),
              };
              t.removeSelection(), t.createAndSelectObject(i);
            } else $.alert(Object(n.a)().typeMissmatchImage);
            t.mouseState = null;
          },
          cancel: function () {
            t.mouseState = null;
          },
        });
      });
  },
  "./src/js/reports/RDObject.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return o;
    });
    i("./node_modules/core-js/modules/web.url.to-json.js");
    function o(e, t) {
      (this.designer = e),
        (this.isAutoHeight = !0 === t.isAutoHeight),
        (this.x = t.x || 0),
        (this.y = t.y || 0),
        (this.w = t.w || 0),
        (this.h = t.h || 0),
        (this.position = t.position),
        this.position ||
          (this.y < e.marginT + e.headHeight
            ? (this.position = "head")
            : this.y >= e.paperHeight - e.footHeight - e.marginB
            ? (this.position = "foot")
            : (this.position = "page")),
        (this.backgroundColor = t.backgroundColor || null),
        (this.borderColor = t.borderColor || null),
        (this.borderWidth = t.borderWidth || null),
        (this.borderStyle = t.borderStyle || null),
        (this.borderRadius = t.borderRadius || null),
        (this.textColor = t.textColor || null),
        (this.textAlign = t.textAlign || null),
        (this.fontFamily = t.fontFamily || null),
        (this.fontSize = t.fontSize || null),
        (this.selected = !1),
        (this.multiSelected = !1);
    }
    (o.prototype.isAutoHeight = !1),
      (o.prototype.base = "object"),
      (o.prototype.toJSON = function () {
        return {
          base: this.base,
          x: this.x,
          y: this.y,
          w: this.w,
          h: this.h,
          position: this.position,
          backgroundColor: this.backgroundColor,
          borderColor: this.borderColor,
          borderWidth: this.borderWidth,
          borderStyle: this.borderStyle,
          borderRadius: this.borderRadius,
          textColor: this.textColor,
          textAlign: this.textAlign,
          fontFamily: this.fontFamily,
          fontSize: this.fontSize,
        };
      }),
      (o.prototype.reload = function (e) {
        e();
      }),
      (o.prototype.isHead = function () {
        return "head" === this.position;
      }),
      (o.prototype.isFoot = function () {
        return "foot" === this.position;
      }),
      (o.prototype.renderPaper = function () {
        var e = this.isHead() || this.isFoot() ? "head" : "page",
          t = this.isFoot()
            ? this.y -
              this.designer.footY +
              this.designer.paperHeight -
              this.designer.marginB -
              this.designer.footHeight
            : this.y;
        return {
          position: e,
          x: this.x * printer.MM,
          y: t * printer.MM,
          w: this.w * printer.MM,
          h: this.h * printer.MM,
          backgroundColor: this.backgroundColor,
          borderColor: this.borderColor,
          borderWidth: this.borderWidth || 0,
          borderStyle: this.borderStyle || 0,
          borderRadius: (this.borderRadius || 0) * printer.MM,
          textColor: this.textColor,
          textAlign: this.textAlign,
          fontFamily: this.getFontFamily(),
          fontSize: this.getFontSize(),
        };
      }),
      (o.prototype.destroy = function () {
        this.$object.remove();
      }),
      (o.prototype.load = function (e) {
        e();
      }),
      (o.prototype.init = function () {
        var e = this.designer;
        this.$object = $('<div class="rd-object rd-object-' + this.base + '">')
          .data("object", this)
          .appendTo(e.$paper)
          .css({
            "background-color": this.backgroundColor || "",
            "border-color": this.borderColor || "",
            color: this.textColor || "",
            "text-align": this.textAlign || "",
            "font-family": this.fontFamily || "",
            "font-size": this.fontSize ? this.fontSize + "pt" : "",
          });
        var t = this.$object[0];
        (t.style.left = this.x + "mm"),
          (t.style.top = this.y + "mm"),
          (t.style.width = this.w + "mm"),
          this.isAutoHeight
            ? ((t.style.height = "auto"), this.$object.addClass("auto"))
            : (t.style.height = this.h + "mm"),
          this.updateBorder();
      }),
      (o.prototype.setRect = function (e, t, i, o, a) {
        var n = this.$object[0];
        void 0 !== e &&
          ((e = Number(e)),
          (e = a ? e : Math.round(e)),
          (isNaN(e) || e < 0) && (e = 0),
          (this.x = e),
          (n.style.left = e + "mm")),
          void 0 !== t &&
            ((t = Number(t)),
            (t = a ? t : Math.round(t)),
            (isNaN(t) || t < 0) && (t = 0),
            (this.y = t),
            (n.style.top = t + "mm")),
          void 0 !== i &&
            ((i = Number(i)),
            (i = a ? i : Math.round(i)),
            (isNaN(i) || i < 1) && (i = 1),
            (this.w = i),
            this.widthChanged(a),
            (n.style.width = i + "mm"),
            this.isAutoHeight && this.updateAutoHeight()),
          this.isAutoHeight ||
            (void 0 !== o &&
              ((o = Number(o)),
              (o = a ? o : Math.round(o)),
              (isNaN(o) || o < 1) && (o = 1),
              (this.h = o),
              (n.style.height = o + "mm")));
      }),
      (o.prototype.widthChanged = function (e) {}),
      (o.prototype.patchAutoHeight = function () {
        if (this.isAutoHeight) {
          var e = this.h,
            t = this.$object[0].offsetHeight * this.designer.scale;
          e !== t && (this.h = t);
        }
      }),
      (o.prototype.updateAutoHeight = function () {
        if (this.isAutoHeight) {
          var e = this.h,
            t = this.$object[0].offsetHeight * this.designer.scale;
          e !== t &&
            (this.designer.autoHeightWillChange(this, e, t),
            (this.h = t),
            this.designer.updatePaper());
        }
      }),
      (o.prototype.setAutoHeight = function (e) {
        (e = !0 === e) !== this.isAutoHeight &&
          (e
            ? ((this.$object[0].style.height = "auto"),
              this.$object.addClass("auto"))
            : ((this.$object[0].style.height = this.h + "mm"),
              this.$object.removeClass("auto")),
          (this.isAutoHeight = e),
          this.updateAutoHeight(),
          this.designer.setDirty());
      }),
      (o.prototype.select = function () {
        this.selected ||
          ((this.selected = !0),
          this.$object.addClass("selected"),
          this.showResizers(),
          this._select());
      }),
      (o.prototype._select = function () {}),
      (o.prototype.unselect = function () {
        this.selected &&
          ((this.selected = !1),
          this.$object.removeClass("selected"),
          this.hideResizers(),
          this._unselect());
      }),
      (o.prototype._unselect = function () {}),
      (o.prototype.multiSelect = function () {
        this.multiSelected ||
          ((this.multiSelected = !0),
          this.$object.addClass("multi-selected"),
          this.showResizers());
      }),
      (o.prototype.multiUnselect = function () {
        this.multiSelected &&
          ((this.multiSelected = !1),
          this.$object.removeClass("multi-selected"),
          this.hideResizers());
      }),
      (o.prototype.showResizers = function () {
        $('<div class="rd-object-resizer top">')
          .data("dir", "t")
          .appendTo(this.$object),
          $('<div class="rd-object-resizer bottom">')
            .data("dir", "b")
            .appendTo(this.$object),
          $('<div class="rd-object-resizer left">')
            .data("dir", "l")
            .appendTo(this.$object),
          $('<div class="rd-object-resizer right">')
            .data("dir", "r")
            .appendTo(this.$object),
          $('<div class="rd-object-resizer top-left">')
            .data("dir", "tl")
            .appendTo(this.$object),
          $('<div class="rd-object-resizer top-right">')
            .data("dir", "tr")
            .appendTo(this.$object),
          $('<div class="rd-object-resizer bottom-left">')
            .data("dir", "bl")
            .appendTo(this.$object),
          $('<div class="rd-object-resizer bottom-right">')
            .data("dir", "br")
            .appendTo(this.$object);
      }),
      (o.prototype.hideResizers = function () {
        this.$object.children(".rd-object-resizer").remove();
      }),
      (o.prototype.setBackgroundColor = function (e) {
        (this.backgroundColor = e),
          this.$object.css("background-color", e || ""),
          this.designer.setDirty();
      }),
      (o.prototype.setBorderColor = function (e) {
        (this.borderColor = e), this.updateBorder(), this.designer.setDirty();
      }),
      (o.prototype.setTextColor = function (e) {
        (this.textColor = e),
          this.$object.css("color", e || ""),
          this.designer.setDirty();
      }),
      (o.prototype.setTextAlign = function (e) {
        (this.textAlign = e || null),
          this.$object.css("text-align", e || ""),
          this.updateAutoHeight(),
          this.designer.setDirty();
      }),
      (o.prototype.setFontFamily = function (e) {
        e === this.designer.fontFamily && (e = null),
          (this.fontFamily = e || null),
          this.$object.css("font-family", e || ""),
          this.updateAutoHeight(),
          this.designer.setDirty();
      }),
      (o.prototype.setFontSize = function (e) {
        e === this.designer.fontSize && (e = null),
          (this.fontSize = e || null),
          this.$object.css("font-size", e ? e + "pt" : ""),
          this.fontChanged(),
          this.updateAutoHeight(),
          this.designer.setDirty();
      }),
      (o.prototype.getFontFamily = function () {
        return this.fontFamily || this.designer.fontFamily;
      }),
      (o.prototype.getFontSize = function () {
        return this.fontSize || this.designer.fontSize;
      }),
      (o.prototype.setBorder = function (e, t, i, o) {
        void 0 !== e && (this.borderColor = e),
          void 0 !== t && (this.borderStyle = t),
          void 0 !== i && (this.borderWidth = i),
          void 0 !== o && (this.borderRadius = o),
          this.updateBorder(),
          this.boundsChanged(),
          this.updateAutoHeight(),
          this.designer.setDirty();
      }),
      (o.prototype.updateBorder = function () {
        this.borderColor
          ? (this.borderWidth || (this.borderWidth = 1),
            this.borderStyle || (this.borderStyle = "solid"),
            this.$object.css({
              "border-color": this.borderColor,
              "border-style": this.borderStyle,
              "border-width": this.borderWidth + "pt",
            }))
          : ((this.borderWidth = null),
            (this.borderStyle = null),
            this.$object.css({
              "border-color": "",
              "border-style": "",
              "border-width": "",
            })),
          this.$object.css({
            "border-radius": this.borderRadius ? this.borderRadius + "mm" : "",
          });
      }),
      (o.prototype.boundsChanged = function () {}),
      (o.prototype.fontChanged = function () {}),
      (o.prototype.startEdit = function () {}),
      (o.prototype.stopEdit = function () {});
  },
  "./src/js/reports/RDReverse.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return n;
    });
    i("./node_modules/core-js/modules/web.url.to-json.js");
    var o = i("./src/js/reports/RDObject.js"),
      a = i("./src/js/admin/ViewEditor.js");
    function n(e, t) {
      if (
        ((t.isAutoHeight = !0),
        (this.nid = e.nid),
        (this.expression = t.expression),
        (this.field = e.type.fields[t.expression]),
        !this.field)
      )
        throw new Error(
          "Field not found " + e.type.caption + "." + t.expression
        );
      (this.type = this.field.refType),
        (this.showHead = !1 !== t.showHead),
        (this.showFoot = !1 !== t.showFoot),
        (this.tableBorderStyle = t.tableBorderStyle || 0),
        (this.paddingL = void 0 === t.paddingL ? 2 : t.paddingL),
        (this.paddingR = void 0 === t.paddingR ? 2 : t.paddingR),
        (this.paddingT = void 0 === t.paddingT ? 2 : t.paddingT),
        (this.paddingB = void 0 === t.paddingB ? 2 : t.paddingB),
        (this.query = new queries.QueryReverse(
          database,
          this.field,
          this.nid,
          t.viewConfig
        )),
        o.a.call(this, e, t),
        (this.mode = null),
        (this.selectedColIndex = void 0),
        (this.tableMenu = null),
        (this.columnMenu = null);
    }
    function s(e) {
      var t = this;
      (this.reverse = e),
        (this.$el = $('<div class="rd-menu-bar">').appendTo(e.designer.$menu));
      var i = $('<div style="padding:8px">').appendTo(this.$el);
      (this.$showHead = $('<input type="checkbox">')
        .appendTo(i)
        .change(function () {
          (e.showHead = t.$showHead.is(":checked")), e.updateUI();
        })),
        $("<label>").text(locale.header).appendTo(i),
        $("<br>").appendTo(i),
        (this.$showFoot = $('<input type="checkbox">')
          .appendTo(i)
          .change(function () {
            (e.showFoot = t.$showFoot.is(":checked")), e.updateUI();
          })),
        $("<label>").text(locale.footer).appendTo(i),
        $('<div style="text-align:center;padding:4px 0">')
          .appendTo(this.$el)
          .button(
            void 0,
            locale.editColumns,
            "grey",
            $.proxy(this.editColumns, this)
          ),
        $('<div style="text-align:center;padding:4px 0">')
          .appendTo(this.$el)
          .button(
            void 0,
            locale.borderStyle + "...",
            "grey",
            $.proxy(this.editBorder, this)
          );
    }
    function r(e) {
      (this.reverse = e),
        (this.$el = $('<div class="rd-menu-bar center">')
          .hide()
          .appendTo(e.designer.$menu)),
        $('<div class="rd-metrics-label">').text("↔").appendTo(this.$el),
        (this.$width = $('<input type="number" class="rd-metrics">')
          .appendTo(this.$el)
          .change($.proxy(this.widthChanged, this)));
    }
    Object.assign(n.prototype, o.a.prototype),
      (n.prototype.base = "rev"),
      (n.prototype.isAutoHeight = !0),
      (n.prototype.setAutoHeight = function () {}),
      (n.prototype.setTextAlign = void 0),
      (n.prototype.setVerticalAlign = void 0),
      (n.prototype.setBorder = void 0),
      (n.prototype.toJSON = function () {
        return Object.assign(o.a.prototype.toJSON.call(this), {
          expression: this.expression,
          viewConfig: this.query.getConfig(),
          showHead: this.showHead,
          showFoot: this.showFoot,
          tableBorderStyle: this.tableBorderStyle,
          paddingL: this.paddingL,
          paddingR: this.paddingR,
          paddingT: this.paddingT,
          paddingB: this.paddingB,
        });
      }),
      (n.prototype.init = function () {
        o.a.prototype.init.call(this),
          (this.$wrap = $('<div class="rd-rev">').appendTo(this.$object)),
          this.$object.click($.proxy(this.click, this)),
          this.updateTable(),
          this._resize();
      }),
      (n.prototype.load = function (e) {
        this.query.load(function () {
          e();
        });
      }),
      (n.prototype.reload = function (e) {
        var t = this;
        (t.nid = t.designer.nid),
          (t.query.nid = t.nid),
          t.query.load(function () {
            t.updateTable(), t._resize(), e();
          });
      }),
      (n.prototype.renderPaper = function () {
        for (
          var e = [],
            t = [],
            i = [],
            a = [],
            n = this.query.cols,
            s = this.query.rows,
            r = this.query.models,
            l = this.query.groups,
            c = this.query.foot.values,
            d = 0;
          d < n.length;
          d++
        ) {
          var u = n[d];
          e.push({
            width: u.width * printer.MM,
            cellPaddingL: this.paddingL * printer.MM,
            cellPaddingR: this.paddingR * printer.MM,
            cellPaddingT: this.paddingT * printer.MM,
            cellPaddingB: this.paddingB * printer.MM,
            headAlign: "center",
            headIsHTML: !1,
            headFontFamily: this.getFontFamily(),
            headFontSize: this.getFontSize(),
            headFontBold: !0,
            headFontItalic: !1,
            headFontUnderline: !1,
            headTextColor: "rgb(0,0,0)",
            cellAlign: u.expression.returnType.columnAlign,
            cellIsHTML: "html" === u.expression.returnType.base,
            cellFontFamily: this.getFontFamily(),
            cellFontSize: this.getFontSize(),
            cellFontBold: !1,
            cellFontItalic: !1,
            cellFontUnderline: !1,
            cellTextColor: "rgb(0,0,0)",
            footAlign: u.aggType ? u.aggType.columnAlign : "left",
            footIsHTML: !1,
            footFontFamily: this.getFontFamily(),
            footFontSize: this.getFontSize(),
            footFontBold: !1,
            footFontItalic: !1,
            footFontUnderline: !1,
            footTextColor: "rgb(0,0,0)",
            base: u.expression.returnType.base,
          });
        }
        for (d = 0; d < n.length; d++) {
          u = n[d];
          t[d] = u.caption || u.expression.caption || "";
        }
        for (var p = 0; p < s.length; p++) {
          var h = s[p],
            m = (r[h] || l[h]).values,
            f = [];
          i.push(f);
          for (d = 0; d < n.length; d++) {
            if ((u = n[d]).isReadable) {
              var g = m[d],
                v = u.expression.returnType;
              "html" === v.base
                ? (f[d] = null != g ? String(g) : "")
                : "file" === v.base
                ? (f[d] = (g && database.downloadURL1(g)) || "")
                : (f[d] = v.format(g));
            } else f[d] = "";
          }
        }
        for (d = 0; d < n.length; d++) {
          (u = n[d]).isReadable
            ? (a[d] = u.agg ? u.aggType.format(c[d]) : "")
            : (a[d] = "");
        }
        return Object.assign(o.a.prototype.renderPaper.apply(this, arguments), {
          base: "table",
          showHead: this.showHead,
          showFoot: this.showFoot,
          borderStyle: this.tableBorderStyle,
          cols: e,
          head: t,
          rows: i,
          foot: a,
        });
      }),
      (n.prototype.setPadding = function (e, t, i, o) {
        void 0 !== e && (this.paddingL = e || 0),
          void 0 !== t && (this.paddingR = t || 0),
          void 0 !== i && (this.paddingT = i || 0),
          void 0 !== o && (this.paddingB = o || 0),
          this.updateUI();
      }),
      (n.prototype.widthChanged = function (e) {
        this.resize(e);
      }),
      (n.prototype.updateUI = function () {
        this.updateTable(), this.resize();
      }),
      (n.prototype.updateTable = function () {
        for (
          var e = this.$wrap,
            t = this.query.cols || [],
            i = this.query.rows || [],
            o = this.query.models || {},
            a = this.query.groups || {},
            n = this.query.foot.values,
            s =
              "padding:" +
              this.paddingT +
              "mm " +
              this.paddingR +
              "mm " +
              this.paddingB +
              "mm " +
              this.paddingL +
              "mm",
            r =
              '<table class="rd-rev-table rd-table-border-style' +
              this.tableBorderStyle +
              '"><colgroup>',
            l = 0;
          l < t.length;
          l++
        ) {
          var c = t[l];
          r += "<col>";
        }
        if (((r += "</colgroup>"), this.showHead)) {
          r += "<thead><tr>";
          for (l = 0; l < t.length; l++) {
            c = t[l];
            r +=
              '<th style="' +
              s +
              '">' +
              htmlEscape(c.caption || c.expression.caption) +
              "</th>";
          }
          r += "</tr></thead>";
        }
        r += "<tbody>";
        for (var d = 0; d < i.length && d < 6; d++) {
          var u = i[d],
            p = (o[u] || a[u]).values;
          r += "<tr>";
          for (l = 0; l < t.length; l++) {
            if ((c = t[l]).isReadable) {
              var h = p[l],
                m = c.expression.returnType;
              if ("html" === m.base)
                r +=
                  '<td class="html" style="' +
                  s +
                  '">' +
                  (g = h || "") +
                  "</td>";
              else if ("file" === m.base) {
                var f = h ? database.thumbURL1(h) : void 0;
                r += f
                  ? '<td style="background-image:url(&quot;' +
                    f +
                    '&quot;);background-repeat:no-repeat;background-position:center;background-size:contain"></td>'
                  : "<td></td>";
              } else {
                var g = m.format(h);
                r +=
                  '<td style="text-align:' +
                  m.columnAlign +
                  ";" +
                  s +
                  '">' +
                  htmlEscape(g) +
                  "</td>";
              }
            } else r += "<td></td>";
          }
          r += "</tr>";
        }
        if (((r += "</tbody>"), this.showFoot)) {
          r += "<tfoot><tr>";
          for (l = 0; l < t.length; l++) {
            if ((c = t[l]).isReadable) {
              g = "";
              if (c.agg) {
                var v = c.aggType;
                v.base;
                (g = v.format(n[l])),
                  (r +=
                    '<td style="text-align:' +
                    v.columnAlign +
                    ";" +
                    s +
                    '">' +
                    htmlEscape(g) +
                    "</td>");
              } else r += "<td></td>";
            } else r += "<td></td>";
          }
          r += "</tr></tfoot>";
        }
        e.html(r);
      }),
      (n.prototype._resize = function (e) {
        var t = this.$wrap,
          i = this.query.cols,
          o = this.w;
        if (i.length > 0) {
          for (var a = 0, n = 0; n < i.length; n++)
            i[n].width < 1 && (i[n].width = 1), (a += i[n].width);
          var s = o / a;
          a = 0;
          for (n = 0; n < i.length - 1; n++) {
            var r = e ? i[n].width * s : Math.round(i[n].width * s);
            (i[n].width = r), (a += r);
          }
          (i[i.length - 1].width = o - a), (a = 0);
          var l = t.children("table").children("colgroup").children();
          for (n = 0; n < i.length; n++) {
            var c = i[n];
            (l[n].style.width = c.width + "mm"),
              (a += c.width),
              c.$resize && (c.$resize[0].style.left = a + "mm");
          }
        }
        t.children()[0].style.width = o + "mm";
      }),
      (n.prototype.resize = function (e) {
        this._resize(e),
          this.updateAutoHeight(),
          this.tableMenu && this.tableMenu.updateUI(),
          this.columnMenu && this.columnMenu.updateUI();
      }),
      (n.prototype._select = function () {
        (this.tableMenu = new s(this)), this.tableMenu.updateUI();
      }),
      (n.prototype._unselect = function () {
        this.tableMenu.destroy(), (this.tableMenu = null);
      }),
      (n.prototype.startEdit = function () {
        null === this.mode &&
          ((this.mode = "edit"),
          this.selected && this.hideResizers(),
          this.showRulers(),
          (this.columnMenu = new r(this)));
      }),
      (n.prototype.stopEdit = function () {
        "edit" === this.mode &&
          ((this.mode = null),
          this.selected && this.showResizers(),
          this.hideRulers(),
          void 0 !== this.selectedColIndex &&
            (this.$col(this.selectedColIndex).removeClass("selected"),
            (this.selectedColIndex = void 0)),
          this.columnMenu.destroy(),
          (this.columnMenu = null));
      }),
      (n.prototype.$col = function (e) {
        return $(
          this.$wrap.children("table").children("colgroup").children()[e]
        );
      }),
      (n.prototype.showRulers = function () {
        for (
          var e = this, t = this.query.cols, i = 0, o = this.designer, a = 0;
          a < t.length;
          a++
        ) {
          var n = t[a];
          (i += n.width),
            (n.$resize = $('<div class="rd-rev-ctrl-resize">')
              .data("col", n)
              .css({ top: "-12px", left: i + "mm" })
              .appendTo(this.$object)),
            TOUCH
              ? n.$resize[0].addEventListener(EVENT_touchstart, s)
              : n.$resize.mousedown(s);
        }
        function s(t) {
          if (!TOUCH || 1 === t.touches.length) {
            var i = $(t.target).data("col"),
              a = TOUCH ? t.touches[0].clientX : t.clientX;
            return (
              TOUCH
                ? (document.addEventListener(EVENT_touchmove, n),
                  document.addEventListener(EVENT_touchend, s))
                : $(document).on("mousemove", n).on("mouseup", s),
              t.preventDefault(),
              !1
            );
          }
          function n(t) {
            if (!TOUCH || 1 === t.touches.length) {
              var n = TOUCH ? t.touches[0].clientX : t.clientX,
                s = (n - a) * o.scale;
              return (
                i.width + s >= 5 &&
                  ((i.width = i.width + s),
                  (e.w = e.w + s),
                  (e.$object[0].style.width = e.w + "mm")),
                e.resize(!0),
                (a = n),
                t.preventDefault(),
                !1
              );
            }
          }
          function s(t) {
            if (!TOUCH || 0 === t.touches.length)
              return (
                TOUCH
                  ? (document.removeEventListener(EVENT_touchmove, n),
                    document.removeEventListener(EVENT_touchend, s))
                  : $(document).off("mousemove", n).off("mouseup", s),
                (e.w = Math.round(e.w)),
                (e.$object[0].style.width = e.w + "mm"),
                e.resize(!1),
                e.designer.setDirty(),
                t.preventDefault(),
                !1
              );
          }
        }
      }),
      (n.prototype.hideRulers = function () {
        for (var e = this.query.cols, t = 0; t < e.length; t++) {
          var i = e[t];
          i.$resize.remove(), (i.$resize = void 0);
        }
      }),
      (n.prototype.click = function (e) {
        if ("edit" === this.mode) {
          var t = $(e.target).closest("th,td");
          if (t.length) {
            void 0 !== this.selectedColIndex &&
              this.$col(this.selectedColIndex).removeClass("selected");
            var i = t.index();
            this.query.cols[i];
            this.$col(i).addClass("selected"),
              (this.selectedColIndex = i),
              this.columnMenu.updateUI();
          }
        }
      }),
      (n.prototype.updateAutoHeight = function () {
        o.a.prototype.updateAutoHeight.apply(this, arguments);
      }),
      (n.prototype.fontChanged = function () {
        this.updateUI();
      }),
      (s.prototype.updateUI = function () {
        this.$showHead.prop("checked", this.reverse.showHead),
          this.$showFoot.prop("checked", this.reverse.showFoot);
      }),
      (s.prototype.editColumns = function () {
        var e = this.reverse;
        new a.a({
          config: e.query.getConfig(),
          save: function (t) {
            var i = t.config,
              o = "edit" === e.mode;
            o && e.stopEdit(),
              e.designer.setDirty(),
              e.query.setConfig(i),
              e.query.load(function () {
                e.updateTable(), e.resize(), o && e.startEdit();
              });
          },
        });
      }),
      (s.prototype.editBorder = function () {
        for (
          var e = this.reverse,
            t = $.backplane({ autoClose: !0 }),
            i = $('<div class="nx-menu-popup grey">').appendTo(t),
            o = 0;
          o < 6;
          o++
        )
          !(function (o) {
            $(
              '<div class="rd-table-border-option rd-table-border-style' +
                o +
                '"><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody><tfoot><tr><td></td><td></td><td></td></tr></tfoot></div>'
            )
              .appendTo(i)
              .click(function () {
                (e.tableBorderStyle = o),
                  e.updateUI(),
                  e.designer.setDirty(),
                  t.close();
              }),
              (o + 1) % 3 == 0 && $("<br>").appendTo(i);
          })(o);
        i.center();
      }),
      (s.prototype.destroy = function () {
        this.$el.remove();
      }),
      (r.prototype.updateUI = function () {
        var e = this.reverse.query.cols[this.reverse.selectedColIndex];
        e ? (this.$width.val(e.width), this.$el.show()) : this.$el.hide();
      }),
      (r.prototype.widthChanged = function () {
        var e = this.reverse.query.cols[this.reverse.selectedColIndex];
        if (e) {
          var t = Math.round(Number(this.$width.val()));
          if (t > 0) {
            var i = t - e.width;
            (e.width = t),
              this.reverse.setRect(
                void 0,
                void 0,
                this.reverse.w + i,
                void 0,
                !1
              ),
              this.reverse.designer.setDirty();
          }
        }
      }),
      (r.prototype.destroy = function () {
        this.$el.remove();
      });
  },
  "./src/js/reports/RDText.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return s;
    });
    i("./node_modules/core-js/modules/es.string.replace.js"),
      i("./node_modules/core-js/modules/web.url.to-json.js");
    var o = i("./src/js/reports/RDObject.js"),
      a = i("./src/js/admin/FunctionEditor.js");
    function n(e) {
      return e < 1 ? 1.25 : e + 0.25 / e;
    }
    function s(e, t) {
      o.a.call(this, e, t),
        (this.text = t.text || ""),
        (this.verticalAlign = t.verticalAlign || null),
        (this.paddingL = t.paddingL || 0),
        (this.paddingR = t.paddingR || 0),
        (this.paddingT = t.paddingT || 0),
        (this.paddingB = t.paddingB || 0),
        (this.lineHeight = t.lineHeight || 1),
        (this.textDecoration = t.textDecoration || null),
        (this.fontStyle = t.fontStyle || null),
        (this.fontWeight = t.fontWeight || null),
        (this.displayText = ""),
        (this.printableText = ""),
        (this.$wrap = null),
        (this.$text = null);
    }
    Object.assign(s.prototype, o.a.prototype),
      (s.prototype.base = "text"),
      (s.prototype.toJSON = function () {
        return Object.assign(o.a.prototype.toJSON.apply(this), {
          base: "text",
          isAutoHeight: this.isAutoHeight || !1,
          text: this.text,
          verticalAlign: this.verticalAlign,
          paddingL: this.paddingL,
          paddingR: this.paddingR,
          paddingT: this.paddingT,
          paddingB: this.paddingB,
          textDecoration: this.textDecoration,
          fontStyle: this.fontStyle,
          fontWeight: this.fontWeight,
          lineHeight: this.lineHeight,
        });
      }),
      (s.prototype.reload = function (e) {
        var t = this;
        t.load(function () {
          t.$text.text(t.displayText || " "), t.updateAutoHeight(), e();
        });
      }),
      (s.prototype.load = function (e) {
        var t = this,
          i = this.designer.type.schema,
          o = this.designer.type,
          a = this.designer.nid,
          n = t.text.replace(/\$pages/g, "99").replace(/\$page/g, "1"),
          s = t.text,
          r = null;
        try {
          r = queries.parseSystemStringTemplate(i, o, n, {});
        } catch (e) {
          console.warn(e);
        }
        var l = null;
        try {
          l = queries.parseSystemStringTemplate(i, o, s, {});
        } catch (e) {
          console.warn(e);
        }
        var c = database.loadNodeSync(a);
        r && l
          ? database.canRead(r)
            ? r.evaluate(database, c, function (i, o) {
                l.evaluate(database, c, function (i, a) {
                  (t.displayText = o), (t.printableText = a), e();
                });
              })
            : ((t.displayText = ""), (t.printableText = ""), e())
          : ((t.displayText = n), (t.printableText = s), e());
      }),
      (s.prototype.init = function () {
        o.a.prototype.init.call(this),
          (this.$wrap = $('<div class="rd-object-text-wrap">')
            .css({
              "-webkit-align-items":
                "middle" === this.verticalAlign
                  ? "center"
                  : "bottom" === this.verticalAlign
                  ? "flex-end"
                  : "flex-start",
              "align-items":
                "middle" === this.verticalAlign
                  ? "center"
                  : "bottom" === this.verticalAlign
                  ? "flex-end"
                  : "flex-start",
            })
            .appendTo(this.$object)),
          (this.$text = $('<div class="rd-object-text-text">')
            .css({
              "padding-left": this.paddingL ? this.paddingL + "mm" : "",
              "padding-right": this.paddingR ? this.paddingR + "mm" : "",
              "padding-top": this.paddingT ? this.paddingT + "mm" : "",
              "padding-bottom": this.paddingB ? this.paddingB + "mm" : "",
              "text-decoration": this.textDecoration || "",
              "font-weight": this.fontWeight || "",
              "font-style": this.fontStyle || "",
              "line-height": n(this.lineHeight),
            })
            .appendTo(this.$wrap)
            .text(this.displayText || " "));
      }),
      (s.prototype.renderPaper = function () {
        return Object.assign(o.a.prototype.renderPaper.apply(this, arguments), {
          base: "text",
          text: this.printableText || " ",
          verticalAlign: this.verticalAlign || "top",
          isHTML: !1,
          dynamicHeight: this.isAutoHeight || !1,
          paddingL: (this.paddingL || 0) * printer.MM,
          paddingR: (this.paddingR || 0) * printer.MM,
          paddingT: (this.paddingT || 0) * printer.MM,
          paddingB: (this.paddingB || 0) * printer.MM,
          textDecoration: this.textDecoration,
          fontStyle: this.fontStyle,
          fontWeight: this.fontWeight,
          lineHeight: this.lineHeight,
        });
      }),
      (s.prototype.setPadding = function (e, t, i, o) {
        void 0 !== e && (this.paddingL = e || 0),
          void 0 !== t && (this.paddingR = t || 0),
          void 0 !== i && (this.paddingT = i || 0),
          void 0 !== o && (this.paddingB = o || 0),
          this.$text.css({
            "padding-left": this.paddingL ? this.paddingL + "mm" : "",
            "padding-right": this.paddingR ? this.paddingR + "mm" : "",
            "padding-top": this.paddingT ? this.paddingT + "mm" : "",
            "padding-bottom": this.paddingB ? this.paddingB + "mm" : "",
          }),
          this.updateAutoHeight(),
          this.designer.setDirty();
      }),
      (s.prototype.startEdit = function () {
        TOUCH ? this.startEdit_TOUCH() : this.startEdit_DESKTOP();
      }),
      (s.prototype.startEdit_DESKTOP = function () {
        var e = this;
        this.$object.addClass("editing"),
          this.$text.remove(),
          (this.$text = $("<textarea>")
            .attr("autocomplete", "off")
            .attr("autocorrect", "off")
            .attr("autocapitalize", "off")
            .attr("spellcheck", "false")
            .css({
              "vertical-align": this.verticalAlign || "",
              "padding-left": this.paddingL ? this.paddingL + "mm" : "",
              "padding-right": this.paddingR ? this.paddingR + "mm" : "",
              "padding-top": this.paddingT ? this.paddingT + "mm" : "",
              "padding-bottom": this.paddingB ? this.paddingB + "mm" : "",
              "text-decoration": this.textDecoration || "",
              "font-weight": this.fontWeight || "",
              "font-style": this.fontStyle || "",
              "line-height": n(this.lineHeight),
              height: this.h + 6 + "mm",
              "background-color": "#fff",
              color: "#000",
            })
            .val(this.getEditableText() || "")
            .appendTo(this.$wrap)
            .focus());
        var t = this.$text.position();
        function i() {
          var t = e.$text[0].selectionStart;
          (!t || t < 0) && (t = 0);
          var i = e.$text.val(),
            o = i.substr(0, t),
            n = i.substr(t),
            s = /\{([^\}]*)$/.exec(o),
            r = /^([^\{]*)\}/.exec(n),
            l = "";
          s &&
            r &&
            ((o = o.substr(0, s.index)),
            (n = n.substr(r[0].length)),
            (l = s[1] + r[1])),
            new a.a({
              value: l,
              isHuman: !0,
              schema: e.designer.type.schema,
              type: e.designer.type,
              okay: function (t, i) {
                t && i
                  ? e.$text.val(o + "{" + i.toHumanString() + "}" + n).focus()
                  : e.$text.val(o + n).focus();
              },
              cancel: function () {
                e.$text.focus();
              },
            });
        }
        (t.top -= 32),
          (t.left += this.$text.width() - 16),
          (this.$button = $(
            '<div class="button blue icon i-32-24 i-white i-setting-settings" style="position:absolute;border-radius:2px;z-index:2">'
          )
            .offset(t)
            .appendTo(this.$object)
            .on(TOUCH ? EVENT_touchstart : "mousedown", i));
      }),
      (s.prototype.startEdit_TOUCH = function () {
        var e = this,
          t = $('<div class="nx-backplane nx-backplane-dark">').appendTo(
            $(document.body)
          ),
          i = $(
            '<div class="nx-menu-popup grey" style="left:64px;top:20px;right:64px;bottom:0px">'
          ).appendTo(t),
          o = $(
            '<div class="nx-button-bar" style="position:absolute;left:8px;top:-32px;right:8px">'
          ).appendTo(i);
        $('<div class="nx-button-text grey">')
          .text(locale.function + "...")
          .appendTo(o)
          .click(l),
          $('<div class="nx-hspace-flex">').appendTo(o),
          $('<div class="nx-button-text blue">')
            .text(locale.okay)
            .appendTo(o)
            .click(s);
        var n = $(
          '<textarea style="position:absolute;left:16px;right:16px;bottom:16px;top:64px;height:auto;padding:8px;border:none;border-radius:4px;margin:0;height:auto;font-size:inherit;font-family:inherit">'
        )
          .attr("autocomplete", "off")
          .attr("autocorrect", "off")
          .attr("autocapitalize", "off")
          .attr("spellcheck", "false")
          .val(this.getEditableText() || "")
          .appendTo(i)
          .focus();
        function s() {
          var t = e.text,
            i = queries.formatHumanStringTemplateSystem(
              n.val(),
              e.designer.type
            );
          t !== i
            ? ((e.text = i),
              $.loading(!0),
              e.load(function () {
                $.loading(!1),
                  e.$text.text(e.displayText || " "),
                  e.updateAutoHeight(),
                  e.designer.setDirty(),
                  r();
              }))
            : r();
        }
        function r() {
          t.remove();
        }
        function l() {
          var t = n[0].selectionStart;
          (!t || t < 0) && (t = 0);
          var i = n.val(),
            o = i.substr(0, t),
            s = i.substr(t),
            r = /\{([^\}]*)$/.exec(o),
            l = /^([^\{]*)\}/.exec(s),
            c = "";
          r &&
            l &&
            ((o = o.substr(0, r.index)),
            (s = s.substr(l[0].length)),
            (c = r[1] + l[1])),
            new a.a({
              value: c,
              schema: e.designer.type.schema,
              type: e.designer.type,
              okay: function (e, t) {
                e && t
                  ? n.val(o + "{" + t.toHumanString() + "}" + s).focus()
                  : n.val(o + s).focus();
              },
              cancel: function () {
                n.focus();
              },
            });
        }
      }),
      (s.prototype.stopEdit = function () {
        TOUCH ? this.stopEdit_TOUCH() : this.stopEdit_DESKTOP();
      }),
      (s.prototype.stopEdit_TOUCH = function () {}),
      (s.prototype.stopEdit_DESKTOP = function () {
        var e = this;
        this.$object.removeClass("editing");
        var t = this.text,
          i = queries.formatHumanStringTemplateSystem(
            this.$text.val(),
            this.designer.type
          );
        this.$text.remove(),
          this.$button && this.$button.remove(),
          (this.$text = $('<div class="rd-object-text-text">')
            .css({
              "vertical-align": this.verticalAlign || "",
              "padding-left": this.paddingL ? this.paddingL + "mm" : "",
              "padding-right": this.paddingR ? this.paddingR + "mm" : "",
              "padding-top": this.paddingT ? this.paddingT + "mm" : "",
              "padding-bottom": this.paddingB ? this.paddingB + "mm" : "",
              "text-decoration": this.textDecoration || "",
              "font-weight": this.fontWeight || "",
              "font-style": this.fontStyle || "",
              "line-height": n(this.lineHeight),
            })
            .text(this.displayText || " ")
            .appendTo(this.$wrap)),
          t !== i &&
            ((e.text = i),
            $.loading(!0),
            e.load(function () {
              $.loading(!1),
                e.$text.text(e.displayText || " "),
                e.updateAutoHeight(),
                e.designer.setDirty();
            }));
      }),
      (s.prototype.setVerticalAlign = function (e) {
        (this.verticalAlign = e || null),
          this.$wrap.css({
            "-webkit-align-items":
              "middle" === this.verticalAlign
                ? "center"
                : "bottom" === this.verticalAlign
                ? "flex-end"
                : "flex-start",
            "align-items":
              "middle" === this.verticalAlign
                ? "center"
                : "bottom" === this.verticalAlign
                ? "flex-end"
                : "flex-start",
          }),
          this.designer.setDirty();
      }),
      (s.prototype.setLineHeight = function (e) {
        (e = Number(e)) >= 1 &&
          ((this.lineHeight = e),
          this.$text.css("line-height", n(e)),
          this.updateAutoHeight(),
          this.designer.setDirty());
      }),
      (s.prototype.getEditableText = function () {
        var e = this.text;
        return queries.formatSystemStringTemplateHuman(e, this.designer.type);
      }),
      (s.prototype.setTextDecoration = function (e) {
        (this.textDecoration = e || null),
          this.$text.css("text-decoration", e || ""),
          this.updateAutoHeight(),
          this.designer.setDirty();
      }),
      (s.prototype.setFontStyle = function (e) {
        (this.fontStyle = e || null),
          this.$text.css("font-style", e || ""),
          this.updateAutoHeight(),
          this.designer.setDirty();
      }),
      (s.prototype.setFontWeight = function (e) {
        (this.fontWeight = e || null),
          this.$text.css("font-weight", e || ""),
          this.updateAutoHeight(),
          this.designer.setDirty();
      });
  },
  "./src/js/reports/TextMenu.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return n;
    });
    var o = i("./src/js/widgets/Field.js"),
      a = i("./node_modules/underscore/underscore.js");
    function n(e) {
      var t = this;
      (this.designer = e),
        (this.silent = !1),
        (this.$el = $('<div class="rd-menu-bar center">')
          .hide()
          .appendTo(e.$menu));
      var i = NinoxDocumentInteraction.availableFontFamilies(),
        n = {};
      a.each(util.localeSort(i), function (e) {
        n[e] = { id: e, caption: e, font: e };
      });
      var s = (this.font = new util.SimpleModel(
        new schemas.TChoice(void 0, void 0, { required: !0, values: n })
      ));
      (s.withoutLabel = !0),
        (this.fontField = new o.a(this, s, this.$el)).el.css({
          width: 140,
          margin: 0,
          "vertical-align": "baseline",
        }),
        s.on("update", function () {
          e.selection &&
            e.selection.setFontFamily &&
            e.selection.setFontFamily(s.value);
        });
      for (var r = {}, l = 1; l <= 36; l++) {
        var c = String(l);
        r[c] = { caption: c, id: c, order: l };
      }
      (this.sizeModel = new util.SimpleModel(
        new schemas.TNumber(void 0, void 0, {
          required: !0,
          numberMin: 1,
          numberMax: 256,
        })
      )),
        (this.sizeModel.withoutLabel = !0),
        (this.sizeField = new o.a(this, this.sizeModel, this.$el)),
        this.sizeField.el.css({
          width: 80,
          margin: 0,
          "vertical-align": "baseline",
        }),
        this.sizeModel.on("update", function () {
          if (!t.silent && e.selection && e.selection.setFontFamily) {
            var i = t.sizeModel.value;
            (isNaN(i) || i < 0) && (i = null), e.selection.setFontSize(i);
          }
        }),
        $("<br>").appendTo(this.$el),
        (this.$bold = $('<div class="rd-menu-button">')
          .append($('<div class="i-32-24 i-light-grey i-bold">'))
          .appendTo(this.$el)
          .click(function () {
            e.selection &&
              e.selection.setFontWeight &&
              e.selection.setFontWeight(e.selection.fontWeight ? null : "bold");
          })),
        (this.$italic = $('<div class="rd-menu-button">')
          .append($('<div class="i-32-24 i-light-grey i-italic">'))
          .appendTo(this.$el)
          .click(function () {
            e.selection &&
              e.selection.setFontStyle &&
              e.selection.setFontStyle(e.selection.fontStyle ? null : "italic");
          })),
        (this.$underline = $('<div class="rd-menu-button">')
          .append($('<div class="i-32-24 i-light-grey i-underline">'))
          .appendTo(this.$el)
          .click(function () {
            e.selection &&
              e.selection.setTextDecoration &&
              e.selection.setTextDecoration(
                e.selection.textDecoration ? null : "underline"
              );
          })),
        $("<br>").appendTo(this.$el),
        (this.$lhPane = $("<div>").appendTo(this.$el)),
        $("<span>")
          .text(locale.lineHeight + " ")
          .appendTo(this.$lhPane),
        (this.lhModel = new util.SimpleModel(
          new schemas.TNumber(void 0, void 0, { required: !0, numberMin: 1 })
        )),
        (this.lhModel.withoutLabel = !0),
        this.lhModel.on("update", function () {
          !t.silent &&
            e.selection &&
            e.selection.setFontFamily &&
            e.selection &&
            e.selection.setLineHeight &&
            e.selection.setLineHeight(t.lhModel.value || 1);
        }),
        (this.lhField = new o.a(this, this.lhModel, this.$lhPane)),
        this.lhField.el.css({
          width: 80,
          margin: 0,
          "vertical-align": "baseline",
        }),
        (this.$alignLeft = $('<div class="rd-menu-button">')
          .append($('<div class="i-32-24 i-light-grey i-h-align-left">'))
          .appendTo(this.$el)
          .click(function () {
            e.selection &&
              e.selection.setTextAlign &&
              e.selection.setTextAlign("left");
          })),
        (this.$alignCenter = $('<div class="rd-menu-button">')
          .append($('<div class="i-32-24 i-light-grey i-h-align-center">'))
          .appendTo(this.$el)
          .click(function () {
            e.selection &&
              e.selection.setTextAlign &&
              e.selection.setTextAlign("center");
          })),
        (this.$alignRight = $('<div class="rd-menu-button">')
          .append($('<div class="i-32-24 i-light-grey i-h-align-right">'))
          .appendTo(this.$el)
          .click(function () {
            e.selection &&
              e.selection.setTextAlign &&
              e.selection.setTextAlign("right");
          })),
        (this.$alignJustify = $('<div class="rd-menu-button">')
          .append($('<div class="i-32-24 i-light-grey i-h-align-justify">'))
          .appendTo(this.$el)
          .click(function () {
            e.selection &&
              e.selection.setTextAlign &&
              e.selection.setTextAlign("justify");
          })),
        $("<br>").appendTo(this.$el),
        (this.$valignTop = $(
          '<div class="button i-32-24 i-light-grey i-v-align-top">'
        )
          .appendTo(this.$el)
          .click(function () {
            e.selection &&
              e.selection.setVerticalAlign &&
              e.selection.setVerticalAlign(null);
          })),
        (this.$valignMiddle = $(
          '<div class="button i-32-24 i-light-grey i-v-align-middle">'
        )
          .appendTo(this.$el)
          .click(function () {
            e.selection &&
              e.selection.setVerticalAlign &&
              e.selection.setVerticalAlign("middle");
          })),
        (this.$valignBottom = $(
          '<div class="button i-32-24 i-light-grey i-v-align-bottom">'
        )
          .appendTo(this.$el)
          .click(function () {
            e.selection &&
              e.selection.setVerticalAlign &&
              e.selection.setVerticalAlign("bottom");
          }));
    }
    n.prototype.updateUI = function () {
      this.silent = !0;
      var e = this.designer.selection;
      e
        ? (e.setFontFamily
            ? ((this.font.value = e.getFontFamily()),
              this.fontField.editor.load(),
              this.fontField.el.css({ display: "" }))
            : this.fontField.el.css({ display: "none" }),
          e.setFontSize
            ? (this.sizeModel.setValue(e.getFontSize()),
              this.sizeField.el.css({ display: "" }))
            : this.sizeField.el.css({ display: "none" }),
          e.setFontWeight ? this.$bold.show() : this.$bold.hide(),
          e.setFontStyle ? this.$italic.show() : this.$italic.hide(),
          e.setTextDecoration ? this.$underline.show() : this.$underline.hide(),
          e.setLineHeight
            ? (this.$lhPane.show(), this.lhModel.setValue(e.lineHeight || 1))
            : this.$lhPane.hide(),
          e.setTextAlign
            ? (this.$alignLeft.show(),
              this.$alignCenter.show(),
              this.$alignRight.show(),
              this.$alignJustify.show())
            : (this.$alignLeft.hide(),
              this.$alignCenter.hide(),
              this.$alignRight.hide(),
              this.$alignJustify.hide()),
          e.setVerticalAlign
            ? (this.$valignTop.show(),
              this.$valignMiddle.show(),
              this.$valignBottom.show())
            : (this.$valignTop.hide(),
              this.$valignMiddle.hide(),
              this.$valignBottom.hide()),
          this.$el.show())
        : this.$el.hide(),
        (this.silent = !1);
    };
  },
  "./src/js/ui/ui-util.js": function (e, t, i) {
    "use strict";
    i.d(t, "b", function () {
      return a;
    }),
      i.d(t, "a", function () {
        return n;
      }),
      i.d(t, "h", function () {
        return s;
      }),
      i.d(t, "g", function () {
        return r;
      }),
      i.d(t, "e", function () {
        return l;
      }),
      i.d(t, "i", function () {
        return d;
      }),
      i.d(t, "j", function () {
        return u;
      }),
      i.d(t, "d", function () {
        return p;
      }),
      i.d(t, "c", function () {
        return h;
      }),
      i.d(t, "f", function () {
        return m;
      }),
      i.d(t, "k", function () {
        return f;
      });
    i("./node_modules/@babel/runtime/helpers/defineProperty.js");
    var o = i("./src/js/printer/printNode.js");
    const a = "nx.sso.logout.action",
      n = "button-click";
    function s(e, t, i) {
      database.loadFiles(e, function (e, o) {
        var a,
          n = {};
        if (o)
          for (var s = 0; s < o.length; s++) {
            var r = o[s].name,
              l = /\.[^\.]*$/.exec(r);
            l && (r = r.substr(0, l.index)), (n[r] = !0);
          }
        if (!n[t]) return i(void 0, t);
        var c = /\s*([0-9]+)$/.exec(t);
        for (
          c
            ? ((t = t.substr(0, c.index)), (a = parseInt(c[1]) + 1))
            : ((t += " "), (a = 2));
          n[t + a];

        )
          a++;
        i(void 0, t + a);
      });
    }
    function r() {
      return !!NinoxDocumentInteraction.getUserDefault("nx.server");
    }
    function l(e, t, i) {
      if (((i = i || function () {}), !e)) return i();
      var o;
      try {
        o = queries.parseSystem(
          database.schema,
          database.schema.typeOf(t),
          e,
          {}
        );
      } catch (e) {
        return $.alert(e), i();
      }
      return o
        ? o.hasErrors()
          ? ($.alert(o.errorMessage()), i())
          : void c(t, function (e) {
              $.loading(!0),
                database.evaluate
                  ? database.evaluate(o, e, function (e, t) {
                      return $.loading(!1), i(e, t);
                    })
                  : o.evaluate(database, e, function (e, t) {
                      return $.loading(!1), i(e, t);
                    });
            })
        : i();
    }
    function c(e, t) {
      return e
        ? "object" == typeof e
          ? t(e)
          : void database.loadNode(e, function (e, i) {
              t(i);
            })
        : t();
    }
    function d(e, t) {
      e &&
        (window.reports
          ? reports.openDesigner({ nid: e, nids: t })
          : Object(o.a)(e));
    }
    function u(e) {
      if (e) {
        var t = database.typeOf(e);
        if (t)
          return database.canDelete(t)
            ? void $.dialog({
                closable: !0,
                caption: locale.remove,
                message: locale.confirmRemove,
                buttons: [
                  {
                    color: "red",
                    caption: locale.remove,
                    callback: function () {
                      database.remove(e, function (e) {
                        e && $.alert(e);
                      });
                    },
                  },
                ],
              })
            : $.alert(locale.errorNotAuthorized);
      }
    }
    function p(e, t) {
      if (e) {
        var i = database.typeOf(e);
        if (i)
          return i.isNew
            ? $.alert(locale.schemaSaveRequired)
            : database.canCreate(i)
            ? void database.duplicate(e, function (e, i) {
                if (e) return $.alert(e);
                t && t(i);
              })
            : $.alert(locale.errorNotAuthorized);
      }
    }
    function h(e, t) {
      return e.isNew
        ? $.alert(locale.schemaSaveRequired)
        : database.canCreate(e)
        ? void database.create(e, {}, function (e, i) {
            if (e) return $.alert(e);
            i && t && t(i._id);
          })
        : $.alert(locale.errorNotAuthorized);
    }
    function m(e) {
      let t = null;
      const i =
        dbms.getRemoteConnection().getServerConfig("passwordPolicy") || {};
      function o() {
        NinoxDocumentInteraction.setUserDefault(
          "nx.lastActivityAt",
          Date.now()
        ),
          clearTimeout(t),
          (t = setTimeout(a, e));
      }
      function a() {
        var e = NinoxDocumentInteraction.getUserDefault("nx.lastActivityAt");
        e &&
          Date.now() - parseInt(e) >
            60 * parseInt(i.idleTimeoutInMinutes) * 1e3 &&
          "#NO-USER-ID#" !=
            dbms.getRemoteConnection().getSessionInfo().user.id &&
          dbms.getRemoteConnection().logout(function (e) {
            e && $.alert(e);
          });
      }
      o(),
        (window.onmousemove = o),
        (window.onmousedown = o),
        (window.onkeydown = o),
        (window.onwheel = o),
        (window.ontouchstart = o),
        (window.ontouchmove = o),
        (window.onclick = o),
        (window.onscroll = o);
    }
    function f() {
      0;
    }
  },
  "./src/js/widgets/Component.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return a;
    });
    var o = i("./src/js/admin/AdminField.js");
    function a() {}
    (a.prototype._isWritable = !1),
      (a.prototype.destroy = function () {
        this.el.remove();
      }),
      (a.prototype.isWidthAdjustable = function () {
        return !0;
      }),
      (a.prototype.updateElementWidth = function () {
        if (this.field) {
          var e = 4 / ((this.container && this.container.columns) || 4),
            t = Math.min(1, Math.max(0, e * this.field.formWidth));
          this.el.css("width", 100 * t + "%");
        }
      }),
      (a.prototype.setWidth = function (e, t) {
        this.field && ((this.field.formWidth = t), (this.field.width = e)),
          this.updateElementWidth(),
          this.widthChanged();
      }),
      (a.prototype.widthChanged = function () {}),
      (a.prototype.isHeightAdjustable = function () {
        return !1;
      }),
      (a.prototype.setHeight = function (e) {}),
      (a.prototype.updateStructure = function () {}),
      (a.prototype.next = function () {
        return (
          this.el.next(".component").data("component") ||
          this.el.siblings(".component").first().data("component")
        );
      }),
      (a.prototype.prev = function () {
        return (
          this.el.prev(".component").data("component") ||
          this.el.siblings(".component").last().data("component")
        );
      }),
      (a.prototype.blur = function () {}),
      (a.prototype.focus = function () {
        return !1;
      }),
      (a.prototype.focusNext = function () {
        this.blur();
        for (var e = this; ; ) {
          var t = e.next();
          if (!t) break;
          if (t === this) break;
          if (t.focus()) break;
          e = t;
        }
      }),
      (a.prototype.focusPrev = function () {
        this.blur();
        for (var e = this; ; ) {
          var t = e.prev();
          if (!t) break;
          if (t === this) break;
          if (t.focus()) break;
          e = t;
        }
      }),
      (a.prototype.nodeChanged = function () {
        this.updateIsWritable(), this.updateVisibility();
      }),
      (a.prototype.setVisible = function (e) {
        (this.visible = e),
          e
            ? (this.el[0].style.display = "")
            : (this.blur(), (this.el[0].style.display = "none"));
      }),
      (a.prototype.updateVisibility = function () {
        if (this.field.visibilityExp) {
          var e = this,
            t = (this._updateVisibilityId = Math.random());
          database.loadNode(e.container.nid, function (i, o) {
            o &&
              e.field.visibilityExp.evaluate(database, o, function (i, o) {
                t === e._updateVisibilityId && e.setVisible(!(!i && !o));
              });
          });
        } else this.visible || this.setVisible(!0);
      }),
      (a.prototype.isWritable = function () {
        return this._isWritable;
      }),
      (a.prototype.updateIsWritable = function () {
        this._isWritable =
          this.container.isWritable() &&
          database.canWriteNodeField(this.container.nid, this.field.id);
      }),
      (a.prototype.bind = function (e) {
        this.updateIsWritable(), this.updateVisibility();
      }),
      (a.prototype.popup = function (e) {
        new o.a(this, this.field, e);
      }),
      (a.prototype.setError = function (e) {
        (e = e || this.getError())
          ? (this.error ||
              (this.error = $('<div class="editor-error">').appendTo(this.el)),
            this.error.html(
              '<div class="editor-error-text"><div class="editor-error-icon i-red i-16-12 i-warning"></div>' +
                htmlEscape(e) +
                "</div>"
            ),
            this.el.addClass("error"))
          : (this.error && this.error.remove(),
            (this.error = void 0),
            this.el.removeClass("error"));
      }),
      (a.prototype.getError = function () {}),
      (a.prototype.isFullscreen = function () {
        return (
          this.container &&
          this.container.isFullscreen &&
          this.container.isFullscreen()
        );
      });
  },
  "./src/js/widgets/Field.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return n;
    });
    var o = i("./src/js/widgets/Component.js"),
      a = i("./src/js/widgets/widgets.js");
    function n(e, t, i, o) {
      (o = o || {}),
        (this.container = e),
        (this.model = t),
        (this.visible = !0);
      var n = t.field,
        s = n.getEditorClass();
      (this.el = $('<div class="component">')
        .data("component", this)
        .appendTo(i || e.containerEl || e.el)),
        o.cls && this.el.addClass(o.cls),
        this.el.toggleClass("label-left", "left" === n.labelPosition),
        (this.label = $("<label>")
          .text(t.caption || "")
          .css(
            "display",
            t.withoutLabel ||
              widgets.DONT_SHOW_LABEL[s] ||
              "placeholder" === n.labelPosition ||
              "none" === n.labelPosition
              ? "none"
              : ""
          )
          .appendTo(this.el)),
        this.el.addClass(Object(a.d)(t.field)),
        this.el.css("width", 100 * (o.formWidth || t.field.formWidth) + "%"),
        (this.editor = Object(a.c)(this, t)),
        this.editor.load(!0);
    }
    (n.prototype.next = o.a.prototype.next),
      (n.prototype.prev = o.a.prototype.prev),
      (n.prototype.focusNext = o.a.prototype.focusNext),
      (n.prototype.focusPrev = o.a.prototype.focusPrev),
      (n.prototype.setError = o.a.prototype.setError),
      (n.prototype.getError = o.a.prototype.getError),
      (n.prototype.focus = function () {
        if (!this.visible) return !1;
        if (!this.isWritable()) return !1;
        var e = this;
        if (e.editor.focus) {
          var t = (e.container && e.container.el) || e.el.parent(),
            i = t.offset().top,
            o = i + t.height(),
            a = t.scrollTop(),
            n = e.el.offset().top,
            s = e.el.height() + n + 8;
          return (
            n < i
              ? t.scrollTop(a - (i - n))
              : s > o && t.scrollTop(a + (s - o)),
            setTimeout(function () {
              e.editor.focus();
            }, 0),
            !0
          );
        }
        return !1;
      }),
      (n.prototype.blur = function () {
        this.editor.blur && this.editor.blur();
      }),
      (n.prototype.destroy = function () {
        this.editor.destroy(), this.el.remove();
      }),
      (n.prototype.getModel = function () {
        return this.model;
      }),
      (n.prototype.show = function () {
        this.el.css("display", "");
      }),
      (n.prototype.hide = function () {
        this.el.css("display", "none");
      }),
      (n.prototype.editorUp = function () {
        this.container.editorUp && this.container.editorUp();
      }),
      (n.prototype.editorDown = function () {
        console.log("Field.editorDown"),
          this.container.editorDown && this.container.editorDown();
      }),
      (n.prototype.widthChanged = function () {
        this.container.widthChanged && this.editor.widthChanged();
      }),
      (n.prototype.isWritable = function () {
        return !0;
      });
  },
  "./src/js/widgets/editors/ChoiceEditor.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return n;
    }),
      i.d(t, "b", function () {
        return r;
      });
    var o = i("./src/js/widgets/editors/StringEditor.js"),
      a = i("./node_modules/underscore/underscore.js");
    function n(e, t) {
      (this.orderedValues = []),
        (this.visibleValues = []),
        (this.selectedValueId = void 0),
        (this.filterString = ""),
        (this.currentString = ""),
        (this.index0 = 0),
        (this.index1 = 0),
        o.a.apply(this, arguments);
    }
    function s(e, t) {
      const i = Math.min(e.length, t.length);
      for (var o = 0; o < i; o++) if (e[o] !== t[o]) return o;
      return i;
    }
    function r() {
      n.apply(this, arguments);
    }
    function l(e, t) {
      for (var i = 0; i < e.length; i++) {
        if (e[i].id === t) return i;
      }
      return -1;
    }
    Object.assign(n.prototype, o.a.prototype),
      (n.prototype.editorClass = "choice"),
      (n.prototype.hideButtonOnEmpty = !1),
      (n.prototype.createRenderer = function () {
        (this.text = $('<div class="choice text-selectable">')
          .appendTo(this.el)
          .touch($.proxy(this.container.focus, this.container))),
          (this.button = $('<div class="choice-dropdown">')
            .appendTo(this.el)
            .touch($.proxy(this.container.focus, this.container)));
      }),
      (n.prototype.destroyRenderer = function () {
        this.text && (this.text.remove(), (this.text = void 0)),
          this.button && (this.button.remove(), (this.button = void 0));
      }),
      (n.prototype.showAux = function () {
        if (this.$aux) return;
        var e = this,
          t = this.model.field;
        (this.selectedValueId = null == this.value ? "###NULL###" : this.value),
          (this.orderedValues = []),
          (this.filterString = ""),
          (this.currentString = this.input.val()),
          (this.visibleValues = []);
        let i = !0;
        function o(t) {
          (e.updating = !0),
            e.updateModel(t, function (t) {
              (e.updating = !1), e.stopEdit();
            });
        }
        (this.$view = $(
          '<div style="position:relative;left:0;top:0;height:100%;min-width:' +
            this.el.outerWidth() +
            'px">'
        )),
          (this.$items = $(
            '<div style="position:relative;left:0;top:0;min-width:100%">'
          ).appendTo(this.$view)),
          (this.$aux = $(
            '<div class="choice-menu" style="min-width:' +
              this.el.outerWidth() +
              'px;overflow-y:auto;z-index:12">'
          )
            .append(this.$view)
            .appendTo($(document.body))
            .on("scroll", () => {
              this.updateView();
            })
            .on(EVENT_touchmove, () => {
              TOUCH && (i = !1);
            })
            .on(TOUCH ? EVENT_touchend : "mousedown", function (e) {
              if (!TOUCH || i) {
                var a = $(e.target)
                  .closest(".choice-menu-item")
                  .attr("data-id");
                null != a && o("###NULL###" === a ? null : t.convert(a));
              } else i = !0;
            })
            .on(TOUCH ? EVENT_touchend : "mousedown", function (e) {
              if (!TOUCH || i) {
                var t = $(e.target)
                  .closest(".choice-menu-item")
                  .attr("data-id");
                null != t && o("###NULL###" === t ? null : t);
              } else i = !0;
            })),
          this.reloadValues();
      }),
      (n.prototype.reloadValues = function () {
        if (!this.$aux) return;
        const e = Date.now();
        this.model.field.loadValuesSorted(this.getNid(), (t) => {
          const i = Date.now();
          console.log(
            "ChoiceEditor.reloadValues",
            i - e + "ms",
            JSON.stringify(t)
          ),
            (this.orderedValues = t),
            this.updateAux(!0);
        });
      }),
      (n.prototype.hideAux = function () {
        this.$aux &&
          (this.$aux.remove(),
          (this.$aux = null),
          (this.$view = null),
          (this.$items = null),
          (this.orderedValues = []),
          (this.visibleValues = []),
          (this.selectedValueId = void 0));
      }),
      (n.prototype.afterLoaded = function () {
        "dchoice" === this.model.field.base && this.reloadValues();
      }),
      (n.prototype.updateAux = function (e) {
        const t = Date.now();
        var i = this,
          o = this.$aux,
          n = this.model.field;
        if (!o) return;
        var s = 0,
          r = this.filterString,
          l = !r,
          c = (this.visibleValues = []);
        !n.required && l && (c.push({ id: "###NULL###" }), s++),
          a.each(this.orderedValues, function (e) {
            (l || (e.caption || "").toLocaleLowerCase().includes(r)) &&
              (c.push(e), s++);
          });
        const d = Date.now();
        this.$view[0].style.height = 32 * s + "px";
        const u = Date.now();
        function p() {
          var e = i.el.offset(),
            t = window.getWidth(),
            a = window.getHeight(),
            n = e.left,
            r = e.top + 36,
            l = o.outerWidth(),
            c = 32 * s;
          c > a - r &&
            (a - r >= e.top - 4
              ? (c = a - r)
              : ((c = Math.min(e.top - 4, c)), (r = e.top - 4 - c))),
            n + l > t && (n = t - l),
            o.css({ left: n, top: r, height: c });
          var d = o.children(".selected");
          if (d.length) {
            var u = d.offset().top,
              p = u + 32;
            u < r
              ? o.scrollTop(o.scrollTop() + u - r)
              : p > r + c && o.scrollTop(o.scrollTop() + p - r - c);
          }
        }
        console.log("ChoiceEditor.update", d - t + "ms", u - d + "ms"),
          p(),
          (this.index0 = 0),
          (this.index1 = 0),
          this.updateView(),
          e && (this.$items[0].style.width = this.$items.width() + "px");
      }),
      (n.prototype.updateView = function () {
        if (this.$view) {
          const t = this.$aux[0].scrollTop,
            i = this.$aux.height(),
            o = Math.max(0, Math.floor(t / 32)),
            a = Math.min(this.visibleValues.length, Math.floor((t + i) / 32));
          if (o < this.index0 || a > this.index1) {
            const t = Math.max(0, o - 16),
              i = Math.min(this.visibleValues.length, a + 16);
            (this.index0 = t), (this.index1 = i);
            let n = "";
            for (var e = t; e < i; e++) {
              const t = this.visibleValues[e];
              if (t) {
                const e = t.id === this.selectedValueId;
                "###NULL###" === t.id
                  ? (n +=
                      '<div class="choice-menu-item" data-id="###NULL###"><div class="choice-indicator' +
                      (e ? " selected" : "") +
                      '"></div><div class="choice-label">' +
                      htmlEscape(locale.empty) +
                      "</div></div>")
                  : (n +=
                      '<div data-id="' +
                      t.id +
                      '" class="choice-menu-item" style="' +
                      (t.color
                        ? "background-color:" +
                          t.color +
                          ";color:" +
                          t.textColor
                        : "") +
                      '"><div class="choice-indicator' +
                      (e ? " selected" : "") +
                      '"></div><div class="multicombo-item" style="background-color:transparent;color:' +
                      t.textColor +
                      '">' +
                      (t.icon
                        ? '<div class="choice-symbol ic ic-' +
                          t.icon +
                          '"></div>'
                        : "") +
                      "<span>" +
                      htmlEscape(t.caption || "") +
                      "</span></div></div>");
              }
            }
            (this.$items[0].style.top = 32 * t + "px"),
              (this.$items[0].innerHTML = n);
          }
        }
      }),
      (n.prototype.keyupCallback = function (e) {
        switch (e.which) {
          case 38:
          case 40:
            return (
              e.preventDefault(), e.stopPropagation(), this.updateAux(), !1
            );
          default:
            var t = this.input.val();
            return (
              t !== this.currentString &&
                ((this.filterString = t.toLocaleLowerCase()),
                (this.currentString = t),
                this.updateAux()),
              !0
            );
        }
      }),
      (n.prototype.keydownCallback = function (e) {
        switch (e.which) {
          case 38:
            if ((i = this.visibleValues) && i.length) {
              if (-1 === (o = l(i, this.selectedValueId))) {
                var t = i[i.length - 1];
                (this.selectedValueId = t.id), this.input.val(t.caption);
              } else if (o > 0) {
                t = i[o - 1];
                (this.selectedValueId = t.id), this.input.val(t.caption);
              }
            } else this.selectedValueId = void 0;
            return (
              this.updateAux(), e.preventDefault(), e.stopPropagation(), !1
            );
          case 40:
            var i, o;
            if ((i = this.visibleValues) && i.length) {
              if (-1 === (o = l(i, this.selectedValueId))) {
                t = i[0];
                (this.selectedValueId = t.id), this.input.val(t.caption);
              } else if (o < i.length - 1) {
                t = i[o + 1];
                (this.selectedValueId = t.id), this.input.val(t.caption);
              }
            } else this.selectedValueId = void 0;
            return (
              this.updateAux(), e.preventDefault(), e.stopPropagation(), !1
            );
        }
      }),
      (n.prototype.parseEditorValue = function (e) {
        if (
          "dchoice" === this.model.field.base ||
          "ref" === this.model.field.base
        ) {
          const t = e.toLocaleLowerCase();
          let i = 0,
            o = void 0;
          for (const a of this.orderedValues) {
            if (e === a.caption) return a.id;
            let n = s(t, (a.caption || "").toLocaleLowerCase());
            n > i && ((i = n), (o = a));
          }
          return o ? o.id : void 0;
        }
        return this.model.field.parseEditor(e);
      }),
      Object.assign(r.prototype, n.prototype),
      (r.prototype.editorClass = "user");
  },
  "./src/js/widgets/editors/ColorSelector.js": function (e, t, i) {
    "use strict";
    i.d(t, "b", function () {
      return c;
    }),
      i.d(t, "a", function () {
        return d;
      });
    var o = i("./src/js/widgets/editors/Editor.js");
    let a = "presets";
    const n = 8,
      s = 8,
      r = n * s,
      l = [
        "#FF7F66",
        "#FFB450",
        "#FADA33",
        "#52CC74",
        "#64C1FA",
        "#6691FF",
        "#9485F2",
        "#EC87E2",
        "#B7C0DB",
        "#8594C2",
        "#5E6E9C",
        "#37405B",
      ];
    function c(e, t) {
      o.a.apply(this, arguments),
        (this.el = $('<div class="stringeditor">')
          .appendTo(e.el)
          .touch($.proxy(this.popup, this))),
        (this.text = $('<div class="input-text">').appendTo(this.el));
    }
    function d(e) {
      var t = e.value ? util.parseColor(e.value) : [255, 255, 255],
        i = $.backplane({}),
        o = $('<div class="cs-menu">').appendTo(i),
        c = $('<div class="cs-tabs">').appendTo(o).touch(M),
        d = $('<div class="cs-tabs-selected-indicator">'),
        p = $('<div class="cs-tab" data-mode="presets">')
          .text(locale.presets)
          .appendTo(c),
        h = $('<div class="cs-tab" data-mode="palette">')
          .text(locale.palette)
          .appendTo(c),
        m = $('<div class="cs-tab" data-mode="custom">')
          .text("RGB")
          .appendTo(c),
        f = $('<div class="cs-pane cs-presets">').appendTo(o).touch(I),
        g = $('<div class="cs-pane cs-palette">').appendTo(o).touch(I),
        v = $('<div class="cs-pane cs-custom">').appendTo(o),
        b = $('<div class="cs-controls">').appendTo(o);
      e.required ||
        $('<div class="nx-button-text-small blue">')
          .text(locale.transparent)
          .appendTo(b)
          .touch(function () {
            R(null);
          });
      var y = $('<div class="cs-custom-left">').appendTo(v),
        w = $('<div class="cs-custom-right">').appendTo(v),
        x = $('<div class="cs-color">').appendTo(y).touch(N),
        T = new u({
          $parent: w,
          min: 0,
          max: 255,
          val: t[0],
          round: !0,
          label: "R",
          update: D,
        }),
        C = new u({
          $parent: w,
          min: 0,
          max: 255,
          val: t[1],
          round: !0,
          label: "G",
          update: D,
        }),
        k = new u({
          $parent: w,
          min: 0,
          max: 255,
          val: t[2],
          round: !0,
          label: "B",
          update: D,
        });
      function S() {
        d.detach(),
          "presets" === a
            ? d.appendTo(p)
            : "palette" === a
            ? d.appendTo(h)
            : d.appendTo(m),
          p.toggleClass("selected", "presets" === a),
          h.toggleClass("selected", "palette" === a),
          m.toggleClass("selected", "custom" === a),
          f.css("display", "presets" === a ? "" : "none"),
          g.css("display", "palette" === a ? "" : "none"),
          v.css("display", "custom" === a ? "" : "none");
        var t = o.outerWidth(),
          i = o.outerHeight(),
          n = e.$el.offset();
        (n.top += 32),
          n.left + t > window.getWidth() && (n.left = window.getWidth() - t),
          n.top + i > window.getHeight() && (n.top = window.getHeight() - i),
          o.offset(n);
      }
      function _() {
        for (var e = 0; e < l.length; e++) {
          var t = l[e];
          $(
            '<div class="cs-color' +
              ("#FFFFFF" === t ? " cs-color-bordered" : "") +
              '">'
          )
            .css("background-color", t)
            .attr("data-color", t)
            .appendTo(f);
        }
      }
      function E() {
        for (var e = 0; e < r; e++) {
          var t = util.indexedColor(e, n, s);
          $(
            '<div class="cs-color' +
              ("#FFFFFF" === t ? " cs-color-bordered" : "") +
              '">'
          )
            .css("background-color", t)
            .attr("data-color", t)
            .appendTo(g);
        }
      }
      function D() {
        x.css(
          "background-color",
          util.formatColor([T.getVal(), C.getVal(), k.getVal()])
        );
      }
      function N() {
        R(util.formatColor([T.getVal(), C.getVal(), k.getVal()]));
      }
      function M(e) {
        var t = $(e.target);
        t.is(".cs-tab") && ((a = t.attr("data-mode")), S());
      }
      function I(e) {
        var t = $(e.target);
        t.is(".cs-color") && R(t.attr("data-color"));
      }
      function R(t) {
        e.update(t), F();
      }
      function F() {
        i.close();
      }
      _(), E(), D(), S();
    }
    function u(e) {
      var t = $('<div class="cs-slider">').appendTo(e.$parent),
        i =
          ($('<div class="cs-slider-label">').text(e.label).appendTo(t),
          $('<div class="cs-slider-pane">').appendTo(t)),
        o =
          ($('<div class="cs-slider-bar">').appendTo(i),
          $('<div class="cs-slider-knob">').appendTo(i)),
        a = $('<div class="cs-slider-text">').appendTo(t),
        n = $('<input type="number">').appendTo(a).change(d).blur(d);
      o[0].addEventListener(TOUCH ? EVENT_touchstart : "mousedown", u);
      var s = e.min,
        r = e.max,
        l = e.val;
      function c() {
        var e = ((l - s) / (r - s)) * (i.width() - 24);
        o.css("left", e + "px"), n.val(l);
      }
      function d() {
        var t = l,
          i = Number(n.val());
        isNaN(i) ||
          ((l = Math.max(s, Math.min(r, i))), e.round && (l = Math.round(l))),
          c(),
          t !== l && e.update && e.update(l);
      }
      function u(t) {
        if (TOUCH) {
          if (1 !== t.touches.length) return;
          EVENT_target(t).addEventListener(EVENT_touchmove, n, !1),
            EVENT_target(t).addEventListener(EVENT_touchend, d, !1);
        } else
          window.addEventListener("mousemove", n, !1),
            window.addEventListener("mouseup", d, !1);
        var o = TOUCH ? t.touches[0].clientX : t.clientX,
          a = l;
        function n(t) {
          if (!TOUCH || 1 === t.touches.length) {
            var n = TOUCH ? t.touches[0].clientX : t.clientX,
              d = a + ((n - o) / (i.width() - 24)) * (r - s);
            (l = Math.max(s, Math.min(r, d))),
              e.round && (l = Math.round(l)),
              c(),
              e.update(l),
              t.preventDefault();
          }
        }
        function d(e) {
          if (TOUCH) {
            if (0 !== e.touches.length) return;
            EVENT_target(e).removeEventListener(EVENT_touchmove, n, !1),
              EVENT_target(e).removeEventListener(EVENT_touchend, d, !1);
          } else
            window.removeEventListener("mousemove", n, !1),
              window.removeEventListener("mouseup", d, !1);
          e.preventDefault();
        }
        t.preventDefault();
      }
      c(),
        (this.getVal = function () {
          return l;
        });
    }
    Object.assign(c.prototype, o.a.prototype),
      (c.prototype.editorClass = "color"),
      (c.prototype.destroy = function () {
        this.el.remove();
      }),
      (c.prototype.updateUI = function () {
        this.text.css({ backgroundColor: this.value || "#fff" });
      }),
      (c.prototype.popup = function () {
        var e = this;
        new d({
          value: e.value,
          $el: e.el,
          required: e.model.field.required,
          update: function (t) {
            e.updateModel(t);
          },
        });
      });
  },
  "./src/js/widgets/editors/Editor.js": function (e, t, i) {
    "use strict";
    function o(e, t) {
      (this.container = e), (this.model = t), t.onUpdate(this.onUpdate, this);
    }
    i.d(t, "a", function () {
      return o;
    }),
      (o.prototype.destroy = function () {
        this.model.offUpdate(this.updateUI, this);
      }),
      (o.prototype.isHeightAdjustable = function () {
        return !1;
      }),
      (o.prototype.setHeight = function () {}),
      (o.prototype.updateStructure = function () {}),
      (o.prototype.load = function (e) {
        console.log("Editor.load", this.model.field.caption);
        var t = this;
        this.model.getValue(function (i, o) {
          i
            ? t.setError(i)
            : ((!e && util.equals(t.value, o)) ||
                ((t.value = o), t.validate(o), t.updateUI()),
              t.afterLoaded());
        });
      }),
      (o.prototype.afterLoaded = function () {}),
      (o.prototype.onUpdate = function (e, t, i, o) {
        this.load(!1);
      }),
      (o.prototype.updateUI = function () {}),
      (o.prototype.updateModel = function (e, t) {
        var i = this;
        i.model.isWritable()
          ? util.equals(e, i.value)
            ? t && t()
            : i.model.setValue(e, function (e) {
                e ? (i.setError(e), t && t(e)) : t && t();
              })
          : t && t();
      }),
      (o.prototype.validate = function (e) {
        var t = this.model.field.validate(e);
        return t ? (this.setError(t), !1) : (this.setError(void 0), !0);
      }),
      (o.prototype.setError = function (e) {
        this.container.setError(e);
      }),
      (o.prototype.createField = function (e) {
        log("Cannot create field");
      }),
      (o.prototype.editorUp = function () {
        this.container.editorUp && this.container.editorUp();
      }),
      (o.prototype.editorDown = function () {
        console.log("Editor.editorDown"),
          this.container.editorDown && this.container.editorDown();
      }),
      (o.prototype.getNid = function () {
        return this.container.getNid
          ? this.container.getNid()
          : this.container.nid;
      });
  },
  "./src/js/widgets/editors/IconSelector.js": function (e, t, i) {
    "use strict";
    i.d(t, "b", function () {
      return n;
    }),
      i.d(t, "a", function () {
        return s;
      });
    var o = i("./src/js/widgets/editors/Editor.js");
    const a = {
      ic: {
        prefix: "ic",
        columns: 16,
        width: 24,
        height: 24,
        margin: 4,
        background: "#fff",
      },
      dbicon: {
        prefix: "dbicon",
        columns: 8,
        width: 48,
        height: 48,
        margin: 0,
        background: "#3df",
      },
    };
    function n(e, t) {
      o.a.apply(this, arguments),
        (this.el = $('<div class="stringeditor">')
          .appendTo(e.el)
          .touch($.proxy(this.popup, this))),
        (this.text = $('<div class="input-text">').appendTo(this.el));
      var i = t.field.iconset || "ic";
      (this.iconset = a[i] || a.ic),
        "ic" !== i &&
          (this.text[0].style.height =
            this.iconset.height + 2 * this.iconset.margin + 4 + "px");
    }
    function s(e) {
      var t = e.iconset || a.ic,
        i = $.backplane({}),
        o = $(
          '<div class="iconselector-menu" style="width:' +
            (t.width + 2 * t.margin + 8) * t.columns +
            "px;background-color:" +
            (e.background || t.background) +
            '">'
        )
          .appendTo(i)
          .touch(h),
        n =
          'style="width:' +
          t.width +
          "px;height:" +
          t.height +
          "px;margin:" +
          t.margin +
          'px"',
        s = "";
      s +=
        '<div class="iconselector-item" data-id="###NULL###" ' + n + "></div>";
      for (var r = t.icons, l = 0; l < r.length; l++) {
        var c = r[l];
        s +=
          '<div class="iconselector-item" data-id="' +
          c +
          '" ' +
          n +
          '><div class="' +
          t.prefix +
          " " +
          t.prefix +
          "-" +
          c +
          '"></div></div>';
      }
      o.html(s);
      var d = o.outerWidth(),
        u = o.outerHeight(),
        p = e.$el.offset();
      function h(t) {
        var o = $(t.target).closest(".iconselector-item").attr("data-id");
        o && (i.close(), e.update("###NULL###" === o ? void 0 : o));
      }
      (p.top += 32),
        p.left + d > window.getWidth() && (p.left = window.getWidth() - d),
        p.top + u > window.getHeight() && (p.top = window.getHeight() - u),
        o.offset(p);
    }
    (a.ic.icons = [
      "check",
      "x",
      "question2",
      "stop",
      "go",
      "power",
      "info",
      "heart",
      "location",
      "idea",
      "filter",
      "sun",
      "star",
      "forbidden",
      "reload",
      "recycle",
      "option",
      "gear",
      "warn2",
      "percent",
      "piechart",
      "barchart",
      "question3",
      "dialog",
      "star2",
      "pencil",
      "pencil-ruler",
      "tools",
      "hammer",
      "waterdrop",
      "goal",
      "disclosed",
      "home",
      "cart",
      "key",
      "money",
      "moneybag",
      "trash",
      "world",
      "lock",
      "lock2",
      "key2",
      "cart2",
      "add-to-cart",
      "present",
      "binoculars",
      "palette",
      "camera",
      "facebook",
      "linkedin",
      "twitter",
      "apple",
      "paypal",
      "googleplus",
      "instagram",
      "youtube",
      "dropbox",
      "playstation",
      "messenger",
      "appstore",
      "google",
      "photos",
      "phone",
      "calendar",
      "calendar2",
      "letter",
      "phone2",
      "smartphone",
      "display",
      "heartbeat",
      "download",
      "headset",
      "printer",
      "sdcard",
      "gamepad",
      "cube",
      "cardgame",
      "tentacle",
      "music",
      "bell",
      "books",
      "book",
      "clock",
      "instrument",
      "speaker",
      "microphone",
      "megaphone",
      "record",
      "guitar",
      "sound",
      "reel",
      "flap",
      "movie",
      "iso",
      "bookmark",
      "landscape",
      "at",
      "html",
      "calendar3",
      "note",
      "glider",
      "document",
      "checklist",
      "checklist2",
      "list",
      "video",
      "call-accept",
      "call-end",
      "battery",
      "face",
      "face2",
      "person-paper",
      "man",
      "man2",
      "woman1",
      "man3",
      "person",
      "people",
      "graduate",
      "discussion",
      "face-idea",
      "bball",
      "whistle",
      "thumb-up",
      "thumb-down",
      "point-up",
      "point-down",
      "point-left",
      "calculate",
      "shake-hands",
      "get-money",
      "pay-money",
      "pay-card",
      "sign",
      "creditcard",
      "banknotes",
      "qna",
      "delivery",
      "plane",
      "truck",
      "digger",
      "car",
      "light",
      "rack",
      "factory",
      "robot",
      "forklift",
      "football",
      "tennis",
      "basketball",
      "bike",
      "running",
      "holiday",
      "burger",
      "pizza",
      "grocery",
      "coffee",
      "cherry",
      "raspberry",
      "banana",
      "whine-cheese",
      "plate",
      "balloon",
      "highheel",
      "shoe",
      "shirt",
      "tie",
      "umbrella",
      "tube",
      "emergency",
      "stroke",
      "brain",
      "lunges",
      "shot",
      "cancer",
      "male",
      "female",
      "dog",
      "bird",
      "fish",
      "horse",
      "pig",
      "chicken",
      "elephant",
      "fish2",
      "butterfly",
      "cat",
      "plant",
      "arrow1",
      "arrow2",
      "arrow3",
      "arrow4",
      "arrow5",
      "arrow6",
      "arrow7",
      "arrow8",
      "percent0",
      "percent25",
      "percent50",
      "percent75",
      "percent100",
      "yinyang",
      "happy",
      "unhappy",
      "loughing",
      "astounded",
      "irritated",
      "cool",
      "silent",
      "joking",
      "sad",
      "crying",
      "loving",
      "evil",
      "attachment",
      "linked",
      "quote",
      "mailbox",
      "folder",
      "folder-documents",
      "folder-downloads",
      "folder-pictures",
      "folder-people",
      "folder-music",
      "folder-world",
      "folder-burning",
      "folder-heart",
      "folder-tile",
      "play",
      "play2",
      "pause",
      "stop2",
      "rec",
      "arrow-n",
      "arrow-ne",
      "arrow-e",
      "arrow-se",
      "arrow-s",
      "arrow-sw",
      "arrow-w",
      "arrow-nw",
      "ball-0",
      "ball-25",
      "ball-50",
      "ball-75",
      "ball-100",
      "warn",
      "question",
      "done",
      "smile-happy",
      "smile-not-amused",
      "smile-unhappy",
      "smile-astonished",
      "smile-blink",
    ]),
      (a.dbicon.icons = [
        "database",
        "person",
        "team",
        "location",
        "info",
        "document",
        "chart",
        "folder",
        "clipboard",
      ]),
      Object.assign(n.prototype, o.a.prototype),
      (n.prototype.editorClass = "icon"),
      (n.prototype.destroy = function () {
        this.el.remove(), o.a.prototype.destroy.apply(this, arguments);
      }),
      (n.prototype.updateUI = function () {
        var e = this.iconset;
        this.value
          ? (this.text[0].innerHTML =
              '<div class="choice-icon ' +
              e.prefix +
              " " +
              e.prefix +
              "-" +
              this.value +
              '"></div>')
          : (this.text[0].innerHTML = ""),
          (this.text[0].style.backgroundColor =
            this.model.field.background || "");
      }),
      (n.prototype.popup = function () {
        var e = this;
        new s({
          iconset: e.iconset,
          background: e.model.field.background,
          $el: e.el,
          update: function (t) {
            e.updateModel(t);
          },
        });
      });
  },
  "./src/js/widgets/editors/StringEditor.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return a;
    });
    var o = i("./src/js/widgets/editors/Editor.js");
    function a(e, t) {
      o.a.apply(this, arguments),
        (this.updating = !1),
        (this.editing = !1),
        (this.isBarcode = !1),
        (this.el = $('<div class="stringeditor">').appendTo(e.el)),
        (this.originalString = null),
        (this.input = null),
        (this.$aux = null),
        (this.button = null),
        (this._showAuxTimer = null),
        this.createRenderer();
    }
    Object.assign(a.prototype, o.a.prototype),
      (a.prototype.editorClass = "string"),
      (a.prototype.hideButtonOnEmpty = !0),
      (a.prototype.inputType = "text"),
      (a.prototype.inputStyle = null),
      (a.prototype.destroy = function () {
        this.stopEdit(),
          this.el.remove(),
          o.a.prototype.destroy.apply(this, arguments);
      }),
      (a.prototype.focus = function () {
        console.log("string editor -> focus"), this.startEdit();
      }),
      (a.prototype.blur = function () {
        if ((console.log("string editor -> blur"), this.editing))
          try {
            this.input.blur();
          } catch (e) {
            console.log("StringEditor failed to blur", e);
          }
      }),
      (a.prototype.startEdit = function () {
        if (
          (console.log("string editor -> startEdit"),
          !this.editing && this.model.isWritable())
        ) {
          var e = this.model.field;
          (this.editing = !0),
            this.createEditor(),
            this.updateUI(),
            this.input.focus(),
            e.stringMultiline || TOUCH || this.input.select();
        }
      }),
      (a.prototype.stopEdit = function () {
        console.log("string editor -> stopEdit"),
          this.editing &&
            ((this.editing = !1), this.destroyEditor(), this.updateUI());
      }),
      (a.prototype.updateStructure = function () {
        var e = this.model.field;
        (e.base === this.base && e.stringMultiline === this.stringMultiline) ||
          (this.destroyRenderer(), this.createRenderer());
      }),
      (a.prototype.createRenderer = function () {
        if (!this.text) {
          var e = this.model.field,
            t = e.base;
          (this.base = t),
            (this.editorClass = t),
            (this.stringMultiline = e.stringMultiline),
            e.stringMultiline
              ? (this.text = $(
                  '<div class="input-text text-selectable multiline" style="height:' +
                    (24 * e.height + 8) +
                    'px">'
                )
                  .appendTo(this.el)
                  .touch($.proxy(this.container.focus, this.container)))
              : (this.text = $('<div class="input-text text-selectable">')
                  .appendTo(this.el)
                  .touch($.proxy(this.container.focus, this.container))),
            this.createButton();
        }
      }),
      (a.prototype.destroyRenderer = function () {
        this.text && (this.text.remove(), (this.text = void 0)),
          this.destroyButton();
      }),
      (a.prototype.createButton = function () {}),
      (a.prototype.destroyButton = function () {
        this.button && (this.button.remove(), (this.button = void 0));
      }),
      (a.prototype.isHeightAdjustable = function () {
        return "string" === this.model.field.base;
      }),
      (a.prototype.setHeight = function (e) {
        var t = this.model.field;
        if ("string" === t.base) {
          var i = t.height,
            o = t.stringMultiline,
            a = Math.max(1, Math.round((e - 42) / 24)),
            n = 1 !== a;
          n !== o
            ? ((t.stringMultiline = n),
              (t.height = a),
              this.destroyRenderer(),
              this.createRenderer(),
              this.updateUI())
            : a !== i && (this.text.css("height", 24 * a + 8), (t.height = a));
        }
      }),
      (a.prototype.createEditor = function () {
        var e = this.model.field,
          t = e.base;
        if ((this.text.css("display", "none"), e.stringMultiline))
          (this.input = $('<textarea rows="' + e.height + '">')
            .insertAfter(this.text)
            .keydown($.proxy(this.keydown, this))
            .keyup($.proxy(this.keyup, this))
            .change($.proxy(this.onChange, this))),
            this.input.focusout($.proxy(this.onBlur, this)),
            e.stringAutocorrect ||
              this.input
                .attr("autocomplete", "off")
                .attr("autocorrect", "off")
                .attr("spellcheck", "false");
        else {
          var i = this.inputType,
            o = this.inputStyle ? ' style="' + this.inputStyle + '"' : "",
            a =
              e.stringAutocorrect && "string" === t
                ? ""
                : ' autocomplete="off" autocorrect="off" spellcheck="false"';
          (this.input = $('<input type="' + i + '"' + o + a + ">")
            .insertAfter(this.text)
            .keydown($.proxy(this.keydown, this))
            .keyup($.proxy(this.keyup, this))
            .change($.proxy(this.onChange, this))),
            this.input.focusin($.proxy(this.onFocus, this)),
            this.input.focusout($.proxy(this.onBlur, this));
        }
        $.pushInputHandler(this);
      }),
      (a.prototype.keydown = function (e) {
        if (!1 !== this.keydownCallback(e))
          switch (e.which) {
            case 9:
              e.shiftKey
                ? this.container.focusPrev()
                : this.container.focusNext(),
                e.preventDefault();
              break;
            case 13:
              this.stringMultiline ||
                (this.blur(), this.model.onReturn && this.model.onReturn());
              break;
            case 27:
              this.stopEdit(), this.model.onReturn && this.model.onEscape();
              break;
            case 38:
              this.stringMultiline || (this.editorUp(), e.preventDefault());
              break;
            case 40:
              this.stringMultiline || (this.editorDown(), e.preventDefault());
          }
      }),
      (a.prototype.keydownCallback = function (e) {}),
      (a.prototype.keyup = function (e) {
        this.keyupCallback(e);
      }),
      (a.prototype.keyupCallback = function (e) {}),
      (a.prototype.destroyEditor = function () {
        this.model.field.base;
        this.input && this.input.remove(),
          (this.input = null),
          $.popInputHandler(this),
          this.text.css("display", ""),
          this.stopShowAux();
      }),
      (a.prototype.showAux = function () {}),
      (a.prototype.startShowAux = function () {
        var e = this;
        e.$aux || e.showAux();
      }),
      (a.prototype.stopShowAux = function () {
        this.$aux && this.hideAux();
      }),
      (a.prototype.hideAux = function () {}),
      (a.prototype.updateUI = function () {
        var e = this.model.field,
          t = e.base;
        if (!this.updating)
          if (this.editing)
            if (
              "choice" === t ||
              "boolean" === t ||
              "user" === t ||
              "dchoice" === t ||
              "ref" === t
            )
              e.loadValue(this.getNid(), this.value, (e) => {
                var t = e ? e.caption || String(e.id) : "";
                (this.originalString = t),
                  this.input.val(t),
                  this.button && (this.button[0].style.display = "none"),
                  this.startShowAux();
              });
            else {
              var i = this.formatEditorValue(this.value);
              (this.originalString = i),
                this.input.val(i),
                this.button && (this.button[0].style.display = "none"),
                this.startShowAux();
            }
          else {
            var o = this.el[0],
              a = this.text[0];
            if (
              "choice" === t ||
              "boolean" === t ||
              "user" === t ||
              "dchoice" === t ||
              "ref" === t
            )
              e.loadValue(this.getNid(), this.value, (e) => {
                var t = "",
                  i = "",
                  n = "";
                void 0 !== e
                  ? (e.icon &&
                      (t +=
                        '<div class="choice-icon ic ic-' + e.icon + '"></div>'),
                    (t += "<span>" + htmlEscape(e.caption) + "</span>"),
                    (i = e.color || ""),
                    (n = e.textColor || ""))
                  : "placeholder" === this.model.field.labelPosition &&
                    ((t = htmlEscape(this.model.field.caption)), (n = "#999")),
                  (a.innerHTML = t),
                  (o.style.backgroundColor = i),
                  (o.style.color = n);
              });
            else
              (i = this.model.field.format(this.value))
                ? ((a.innerHTML = htmlEscape(i)), (a.style.color = ""))
                : "placeholder" === this.model.field.labelPosition
                ? ((a.innerHTML = htmlEscape(this.model.field.caption)),
                  (a.style.color = "#999"))
                : ((a.innerHTML = ""), (a.style.color = ""));
            this.button &&
              (this.value || !this.hideButtonOnEmpty
                ? (this.button[0].style.display = "")
                : (this.button[0].style.display = "none"));
          }
      }),
      (a.prototype.onChange = function () {
        this.isBarcode && ((this.isBarcode = !1), this._onBlur());
      }),
      (a.prototype.onFocus = function () {}),
      (a.prototype.onBlur = async function () {
        (await NinoxViewController.isBarcodeScannerActive())
          ? (this.isBarcode = !0)
          : this._onBlur();
      }),
      (a.prototype._onBlur = function () {
        if (!this.updating && this.editing) {
          var e = this.input.val();
          if (e === this.originalString) this.stopEdit();
          else {
            this.updating = !0;
            var t = this.parseEditorValue(e),
              i = this;
            i.updateModel(t, function (e) {
              (i.updating = !1), i.stopEdit();
            });
          }
        }
      }),
      (a.prototype.save = function () {
        if (!this.updating && this.editing && this.input.is(":focus")) {
          var e = this.input.val();
          if (e !== this.originalString) {
            var t = this.parseEditorValue(e);
            this.updateModel(t, function (e) {});
          }
        }
      }),
      (a.prototype.parseEditorValue = function (e) {
        return this.model.field.parseEditor(e);
      }),
      (a.prototype.formatEditorValue = function (e) {
        return this.model.field.formatEditor(e);
      }),
      (a.prototype.resizeAux = function () {
        var e = this.$aux;
        if (e) {
          var t = this.el.offset(),
            i = window.getWidth(),
            o = window.getHeight(),
            a = t.left,
            n = t.top + 36,
            s = e.outerWidth(),
            r = e.outerHeight();
          r > o - n &&
            (o - n >= t.top - 4
              ? (r = o - n)
              : ((r = Math.min(t.top - 4, r)), (n = t.top - 4 - r))),
            a + s > i && (a = i - s),
            e.css({ left: a, top: n, height: r });
        }
      });
  },
  "./src/js/widgets/widgets.js": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return ne;
    }),
      i.d(t, "b", function () {
        return se;
      }),
      i.d(t, "c", function () {
        return re;
      }),
      i.d(t, "d", function () {
        return le;
      });
    var o = i("./src/js/widgets/editors/StringEditor.js"),
      a = i("./node_modules/react-dom/index.js"),
      n = i("./node_modules/react/index.js"),
      s = i.n(n),
      r = i("./node_modules/@ninox/ninox-core/dist/ninox-core.es5.js"),
      l = i("./src/react/NXSwitch.tsx"),
      c =
        (i("./src/react/editors/NXTimePicker.scss"),
        i("./src/react/util/FastClickContainer.tsx"));
    const d = 5,
      u = 15,
      p = (e) => {
        const t = s.a.useRef(0),
          i = (i) => {
            const o = i.touches[0].clientY;
            o > t.current + d
              ? (e.onChange(e.currInput, -1), (t.current = o))
              : o < t.current - d &&
                (e.onChange(e.currInput, 1), (t.current = o));
          },
          o = (e) => (e < 10 ? "0" + e : "" + e),
          a = (i) => {
            (t.current += i.nativeEvent.wheelDelta),
              t.current > u
                ? (e.onChange(e.currInput, 1), (t.current = 0))
                : t.current < -u &&
                  (e.onChange(e.currInput, -1), (t.current = 0));
          };
        return s.a.createElement(
          "div",
          { onWheel: a, className: "NXTimePicker_inputContainer" },
          s.a.createElement(c.a, {
            onFastClick: () => e.onChange(e.currInput, e.step),
            className: "i-32-32 i-light-grey i-arrow-solid-up",
          }),
          s.a.createElement(
            "div",
            { className: "NXTimePicker_value", onTouchMove: i },
            o(e.currInput)
          ),
          s.a.createElement(c.a, {
            onFastClick: () => e.onChange(e.currInput, -e.step),
            className: "i-32-32 i-light-grey i-arrow-solid-down",
          })
        );
      },
      h = (e) => {
        const t = Math.floor(e.timestamp / 36e5) % 24,
          i = Math.floor((e.timestamp % 36e5) / 6e4),
          o = new Date();
        o.setHours(t);
        const a = r.util.formatLocaleTime(o).split(":")[1].split(" "),
          n = 1 === a.length,
          c = n ? (t < 12 ? "AM" : "PM") : a[1],
          d = (o, a) => {
            const s = t + a;
            let r;
            return (
              (r = n
                ? (s + 24) % 24
                : "AM" === c
                ? (s + 12) % 12
                : ((s + 12) % 12) + 12),
              e.onChange(36e5 * r + 6e4 * i)
            );
          },
          u = (o, a) => {
            const n = (60 + Math.floor((i + a) / a) * a) % 60;
            e.onChange(36e5 * t + 6e4 * n);
          },
          h = () => {
            t >= 12 && e.onChange(36e5 * (t - 12) + 6e4 * i);
          },
          m = () => {
            t < 12 && e.onChange(36e5 * (t + 12) + 6e4 * i);
          },
          f = n ? t : t % 12 || 12;
        return s.a.createElement(
          "div",
          { className: "NXTimePicker_root" },
          s.a.createElement(p, { currInput: f, onChange: d, step: 1 }),
          s.a.createElement("div", { className: "NXTimePicker_divider" }, ":"),
          s.a.createElement(p, { currInput: i, onChange: u, step: 5 }),
          s.a.createElement(l.a, {
            selectedIndex: "AM" === c ? 0 : 1,
            texts: ["AM", "PM"],
            onSelect: (e) => (0 === e ? h() : m()),
            itemClassName: "NXTimePicker_switchItem",
            containerClassName: "NXTimePicker_switchContainer",
          })
        );
      };
    function m(e, t) {
      o.a.apply(this, arguments);
    }
    function f(e, t) {
      o.a.apply(this, arguments);
    }
    function g(e, t) {
      o.a.apply(this, arguments);
    }
    function v(e, t) {
      o.a.apply(this, arguments);
    }
    Object.assign(m.prototype, o.a.prototype),
      (m.prototype.editorClass = "appointment"),
      (m.prototype.showAux = function () {
        if (!this.$aux) {
          var e = this,
            t = this.model.field,
            i = t.base,
            o = this.input;
          this.$backplane = $.backplane({
            close: () => o.blur(),
            closeImmediately: !0,
            cls: "aux-container",
          });
          var s = (this.$aux = $(
              '<div class="stringeditor-aux appointment-picker">'
            )
              .on(TOUCH ? EVENT_touchstart : "mousedown", function (e) {
                e.preventDefault();
              })
              .appendTo(this.$backplane)),
            r = $('<div class="appointment-start-end-container">').appendTo(s),
            l = $('<div class="appointment-picker-start">')
              .appendTo(r)
              .on(TOUCH ? EVENT_touchstart : "mousedown", function (e) {
                (T = !0), S(), e.preventDefault();
              }),
            c = $('<div class="appointment-picker-end">')
              .appendTo(r)
              .on(TOUCH ? EVENT_touchstart : "mousedown", function (e) {
                (T = !1), S(), e.preventDefault();
              }),
            d = $('<div class="dp date appointment-picker-dp">').appendTo(s),
            u = $('<div class="dp-head">').appendTo(d),
            p = $('<div class="dp-days">').appendTo(d),
            m = $('<div class="dp-month dp-month-short">')
              .appendTo(d)
              .on(TOUCH ? EVENT_touchstart : "mousedown", D);
          $('<div class="i-48-24 i-light-grey i-arrow-solid-left dp-prev">')
            .appendTo(u)
            .on(TOUCH ? EVENT_touchstart : "mousedown", I);
          var f = $('<div class="dp-title">Oktober 2015</div>').appendTo(u);
          $('<div class="i-48-24 i-light-grey i-arrow-solid-right dp-next">')
            .appendTo(u)
            .on(TOUCH ? EVENT_touchstart : "mousedown", M);
          for (var g = 0; g < 7; g++) {
            var v = (locale.firstDayOfWeek + g) % 7;
            $(
              '<div class="dp-days-day">' +
                htmlEscape(locale.dayNamesShort[v]) +
                "</div>"
            ).appendTo(p);
          }
          this.$time = $('<div class="dp-time">').appendTo(d);
          var b = new Date(),
            y = new Date(),
            w = null,
            x = null,
            T = !0;
          (this.resizeAux = C),
            window.addEventListener("resize", this.resizeAux, !1),
            (this.$scrollPane = e.el.closest(".object")[0]),
            this.$scrollPane &&
              this.$scrollPane.addEventListener("scroll", this.resizeAux, !1),
            C(),
            k(),
            o.keyup(k).change(k);
        }
        function C() {
          window.getWidth() <= 640 && o.prop("disabled", !0);
          const t = s.height(),
            i = s.width();
          var a,
            n,
            r = e.el.offset(),
            l = window.getWidth(),
            c = window.getHeight(),
            d = i;
          r.top + 36 + t > c
            ? r.top - t < 20
              ? ((n = 0),
                (a =
                  r.left - d - 8 >= 0
                    ? r.left - d - 8
                    : r.left + e.el.width() + 8))
              : ((n = r.top - t), (a = r.left + d > l ? l - d : r.left))
            : ((n = r.top + 36), (a = r.left + d > l ? l - d : r.left)),
            s.css({ left: a, top: n });
        }
        function k() {
          var e = o.val(),
            i = e ? t.parseEditor(e) : void 0;
          if (((w = null), (x = null), i)) {
            var a = i.split("/");
            if (2 === a.length) {
              var n = Number(a[0]),
                s = n + Number(a[1]);
              (w = new Date(n)), (x = new Date(s));
            }
          }
          S();
        }
        function S() {
          T
            ? (l.addClass("selected"), c.removeClass("selected"))
            : (l.removeClass("selected"), c.addClass("selected")),
            l.text(w ? util.formatLocaleDateTime(w) : locale.appointmentBegin),
            c.text(x ? util.formatLocaleDateTime(x) : locale.appointmentEnd),
            _(),
            E();
        }
        function _() {
          var e = T ? w : x,
            t = y.getFullYear(),
            o = y.getMonth(),
            a = (y.getDate(), new Date(t, o, 1)),
            n = (util.getWeek(a), a.getDay()),
            s = locale.firstDayOfWeek,
            r = n > s ? s - n + 1 : s - n - 6,
            l = new Date(a.getFullYear(), a.getMonth(), r);
          f.text(locale.monthNames[o] + " " + t);
          for (var c = "", d = 0; d < 6; d++) {
            c += '<div class="dp-month-week">';
            for (var u = 0; u < 7; u++) {
              var p = new Date(
                l.getFullYear(),
                l.getMonth(),
                l.getDate() + 7 * d + u
              );
              c +=
                '<div class="dp-month-week-day' +
                (p.getMonth() === o ? " current-month" : " other-month") +
                (p.getFullYear() === b.getFullYear() &&
                p.getMonth() === b.getMonth() &&
                p.getDate() === b.getDate()
                  ? " today"
                  : "") +
                (e &&
                p.getFullYear() === e.getFullYear() &&
                p.getMonth() === e.getMonth() &&
                p.getDate() === e.getDate()
                  ? " selected"
                  : "") +
                '" data-date="' +
                util.formatISODate(p) +
                '">' +
                p.getDate() +
                "</div>";
            }
            c += "</div>";
          }
          m.html(c), "timestamp" === i && updateTime();
        }
        function E() {
          const t = T ? w : x,
            i = new Date(),
            o = 6e4 * i.getTimezoneOffset(),
            s = null == t ? i.getTime() - o : t.getTime() - o;
          a.render(
            n.createElement(h, {
              timestamp: s,
              onChange: (e) => {
                const t = Math.floor(e / 36e5),
                  i = Math.floor((e % 36e5) / 6e4);
                if (T) {
                  null === w && (w = new Date());
                  let e = 36e5;
                  x && (e = x.getTime() - w.getTime()),
                    w.setHours(t % 24),
                    w.setMinutes(i),
                    N(w.getTime(), e);
                } else
                  null === x && (x = new Date()),
                    x.setHours(t % 24),
                    x.setMinutes(i),
                    N(x.getTime());
              },
            }),
            e.$time[0]
          );
        }
        function D(e) {
          var t = $(e.target).attr("data-date");
          if (t) {
            var i = T ? w : x,
              o = util.parseISODate(t),
              a = new Date(o),
              n = i ? new Date(i) : new Date();
            N(
              new Date(
                a.getFullYear(),
                a.getMonth(),
                a.getDate(),
                n.getHours(),
                n.getMinutes(),
                n.getSeconds(),
                n.getMilliseconds()
              ).getTime()
            ),
              e.preventDefault();
          }
        }
        function N(e, i = 36e5) {
          if (T) {
            const a = e + "/" + i;
            o.val(t.formatEditor(a)), k();
          } else {
            var a = e,
              n = null != w ? w.getTime() : a;
            a < n && (a = n);
            var s = n + "/" + (a - n);
            o.val(t.formatEditor(s)), k();
          }
        }
        function M(e) {
          (y = new Date(y.getFullYear(), y.getMonth() + 1, y.getDate())),
            S(),
            e.preventDefault();
        }
        function I(e) {
          (y = new Date(y.getFullYear(), y.getMonth() - 1, y.getDate())),
            S(),
            e.preventDefault();
        }
      }),
      (m.prototype.hideAux = function () {
        this.$aux &&
          (a.unmountComponentAtNode(this.$time[0]),
          window.removeEventListener("resize", this.resizeAux, !1),
          this.$scrollPane &&
            this.$scrollPane.removeEventListener("scroll", this.resizeAux, !1),
          (this.$scrollPane = void 0),
          (this.resizeAux = void 0),
          this.$aux.remove(),
          (this.$aux = null),
          this.$backplane.close());
      }),
      Object.assign(f.prototype, o.a.prototype),
      (f.prototype.inputType = "number"),
      (f.prototype.editorClass = "number"),
      (f.prototype.parseEditorValue = function (e) {
        return e ? Number(e) : null;
      }),
      (f.prototype.formatEditorValue = function (e) {
        return null != e ? String(e) : "";
      }),
      Object.assign(g.prototype, o.a.prototype),
      (g.prototype.editorClass = "number"),
      Object.assign(v.prototype, o.a.prototype),
      (v.prototype.inputType = "email"),
      (v.prototype.editorClass = "email"),
      (v.prototype.createButton = function () {
        this.button = $(
          '<div class="stringeditor-button"><div class="i-32-18 i-light-grey i-field-email"></div></div>'
        )
          .css("display", "none")
          .click($.proxy(this.sendMail, this))
          .appendTo(this.el);
      }),
      (v.prototype.sendMail = async function () {
        if (this.value) {
          var e = database.loadNodeSync(this.model.container.nid);
          if (e) {
            var t = this.model.field,
              i = "",
              o = "";
            if (t.emailSubject)
              try {
                var a = queries.parseSystemStringTemplate(
                  t.type.schema,
                  t.type,
                  t.emailSubject,
                  {}
                );
                i = await a.promise(database, e);
              } catch (e) {
                return $.alert(e);
              }
            if (t.emailBody)
              try {
                a = queries.parseSystemStringTemplate(
                  t.type.schema,
                  t.type,
                  t.emailBody,
                  {}
                );
                o = await a.promise(database, e);
              } catch (e) {
                return $.alert(e);
              }
            var n = "mailto:" + encodeURIComponent(this.value);
            (i || o) &&
              ((n += "?"),
              i &&
                ((n += "subject=" + encodeURIComponent(String(i))),
                o && (n += "&")),
              o && (n += "body=" + encodeURIComponent(String(o)))),
              NinoxDocumentInteraction.openBrowser(n);
          }
        }
      });
    i("./node_modules/core-js/modules/es.string.replace.js");
    function b(e, t) {
      o.a.apply(this, arguments);
    }
    function y(e, t) {
      o.a.apply(this, arguments);
    }
    function w(e, t) {
      o.a.apply(this, arguments);
    }
    Object.assign(b.prototype, o.a.prototype),
      (b.prototype.editorClass = "phone"),
      (b.prototype.inputType = "tel"),
      (b.prototype.createButton = function () {
        this.button = $(
          '<div class="stringeditor-button"><div class="i-32-18 i-light-grey i-field-phone"></div></div>'
        )
          .css("display", "none")
          .click($.proxy(this.openPhone, this))
          .appendTo(this.el);
      }),
      (b.prototype.openPhone = function () {
        if (this.value) {
          var e = String(this.value).replace(/[\/]/g, "-");
          NinoxDocumentInteraction.openBrowser(
            "tel://" + encodeURIComponent(e)
          );
        }
      }),
      Object.assign(y.prototype, o.a.prototype),
      (y.prototype.editorClass = "date"),
      (y.prototype.showAux = function () {
        if (this.$aux) return;
        var e = this,
          t = this.model.field,
          i = t.base,
          o = "datx" === i ? "date" : i;
        this.$time = null;
        var s = this.input;
        this.$backplane = $.backplane({
          close: () => s.blur(),
          closeImmediately: !0,
          cls: "aux-container",
        });
        var r = (this.$aux = $('<div class="stringeditor-aux dp ' + o + '">')
            .on(TOUCH ? EVENT_touchstart : "mousedown", function (e) {
              e.preventDefault();
            })
            .appendTo(this.$backplane)),
          l = $('<div class="dp-head">').appendTo(r),
          c = $('<div class="dp-days">').appendTo(r),
          d = $(
            `<div class="dp-month ${
              "timestamp" === i ? "dp-month-short" : ""
            }">`
          )
            .appendTo(r)
            .on(TOUCH ? EVENT_touchstart : "mousedown", C);
        "timestamp" === i &&
          (this.$time = $('<div class="dp-time">').appendTo(r));
        var u = $('<div class="dp-foot">').appendTo(r);
        $('<div class="nx-button-text grey">')
          .text(locale.reset)
          .appendTo(u)
          .on(TOUCH ? EVENT_touchstart : "mousedown", k),
          $('<div class="nx-hspace-flex">').appendTo(u),
          $('<div class="nx-button-text blue">')
            .text("timestamp" === i ? locale.op_now : locale.op_today)
            .appendTo(u)
            .on(TOUCH ? EVENT_touchstart : "mousedown", S),
          $('<div class="i-48-24 i-light-grey i-arrow-solid-left dp-prev">')
            .appendTo(l)
            .on(TOUCH ? EVENT_touchstart : "mousedown", E);
        var p = $('<div class="dp-title">Oktober 2015</div>').appendTo(l);
        $('<div class="i-48-24 i-light-grey i-arrow-solid-right dp-next">')
          .appendTo(l)
          .on(TOUCH ? EVENT_touchstart : "mousedown", _);
        for (var m = 0; m < 7; m++) {
          var f = (locale.firstDayOfWeek + m) % 7;
          $(
            '<div class="dp-days-day">' +
              htmlEscape(locale.dayNamesShort[f]) +
              "</div>"
          ).appendTo(c);
        }
        const g = new Date();
        let v = new Date(),
          b = null;
        function y() {
          const i = new Date(),
            o = 6e4 * i.getTimezoneOffset(),
            r = null == b ? i.getTime() - o : b.getTime() - o;
          a.render(
            n.createElement(h, {
              timestamp: r,
              onChange: (e) => {
                const i = e,
                  o = Math.floor(i / 36e5),
                  a = Math.floor((i % 36e5) / 6e4);
                v.setHours(o % 24),
                  v.setMinutes(a),
                  s.val(t.formatEditor(v.getTime())),
                  x();
              },
            }),
            e.$time[0]
          );
        }
        function w() {
          window.getWidth() <= 640 && s.prop("disabled", !0);
          const t = r.height(),
            i = r.width();
          var o,
            a,
            n = e.el.offset(),
            l = window.getWidth(),
            c = window.getHeight(),
            d = i;
          n.top + 36 + t > c
            ? n.top - t < 20
              ? ((a = n.top + t + 20 > c ? 0 : 20),
                (o =
                  n.left - d - 8 >= 0
                    ? n.left - d - 8
                    : n.left + e.el.width() + 8 + d <= l
                    ? n.left + e.el.width() + 8
                    : n.left))
              : ((a = n.top - t), (o = n.left + d > l ? l - d : n.left))
            : ((a = n.top + 36), (o = n.left + d > l ? l - d : n.left)),
            r.css({ left: o, top: a });
        }
        function x() {
          var e = s.val(),
            i = e ? t.parseEditor(e) : void 0;
          if (null != i) {
            var o = new Date(i);
            isNaN(o.getTime()) || ((v = o), (b = o));
          }
          T();
        }
        function T() {
          var e = v.getFullYear(),
            t = v.getMonth(),
            o = (v.getDate(), new Date(e, t, 1)),
            a = (util.getWeek(o), o.getDay()),
            n = locale.firstDayOfWeek,
            s = a > n ? n - a + 1 : n - a - 6,
            r = new Date(o.getFullYear(), o.getMonth(), s);
          p.text(locale.monthNames[t] + " " + e);
          for (var l = "", c = 0; c < 6; c++) {
            l += '<div class="dp-month-week">';
            for (var u = 0; u < 7; u++) {
              var h = new Date(
                r.getFullYear(),
                r.getMonth(),
                r.getDate() + 7 * c + u
              );
              l +=
                '<div class="dp-month-week-day' +
                (h.getMonth() === t ? " current-month" : " other-month") +
                (h.getFullYear() === g.getFullYear() &&
                h.getMonth() === g.getMonth() &&
                h.getDate() === g.getDate()
                  ? " today"
                  : "") +
                (b &&
                h.getFullYear() === b.getFullYear() &&
                h.getMonth() === b.getMonth() &&
                h.getDate() === b.getDate()
                  ? " selected"
                  : "") +
                '" data-date="' +
                util.formatISODate(h) +
                '">' +
                h.getDate() +
                "</div>";
            }
            l += "</div>";
          }
          d.html(l), "timestamp" === i && y();
        }
        function C(e) {
          var o = $(e.target).attr("data-date");
          if (o)
            if ("datx" === i) {
              var a = util.parseISODatx(o);
              s.val(t.formatEditor(a)), s.blur();
            } else if ("date" === i) {
              a = util.parseISODate(o);
              s.val(t.formatEditor(a)), s.blur();
            } else if ("timestamp" === i) {
              a = util.parseISODate(o);
              var n = new Date(a),
                r = b ? new Date(b) : new Date(),
                l = new Date(
                  n.getFullYear(),
                  n.getMonth(),
                  n.getDate(),
                  r.getHours(),
                  r.getMinutes(),
                  r.getSeconds(),
                  r.getMilliseconds()
                );
              s.val(t.formatEditor(l.getTime())), x(), e.preventDefault();
            }
        }
        function k(e) {
          s.val(""), s.blur();
        }
        function S(e) {
          var o = new Date();
          if ("datx" === i)
            s.val(
              t.formatEditor(
                Date.UTC(o.getFullYear(), o.getMonth(), o.getDate(), 0, 0, 0, 0)
              )
            );
          else {
            var a =
              "timestamp" === i
                ? o
                : new Date(o.getFullYear(), o.getMonth(), o.getDate());
            s.val(t.formatEditor(a.getTime()));
          }
          s.blur();
        }
        function _() {
          (v = new Date(v.getFullYear(), v.getMonth() + 1, v.getDate())), T();
        }
        function E() {
          (v = new Date(v.getFullYear(), v.getMonth() - 1, v.getDate())), T();
        }
        (this.resizeAux = w),
          window.addEventListener("resize", this.resizeAux, !1),
          (this.$scrollPane = e.el.closest(".object")[0]),
          this.$scrollPane &&
            this.$scrollPane.addEventListener("scroll", this.resizeAux, !1),
          w(),
          x(),
          s.keyup(x).change(x);
      }),
      (y.prototype.hideAux = function () {
        this.$aux &&
          (this.$time && a.unmountComponentAtNode(this.$time[0]),
          window.removeEventListener("resize", this.resizeAux, !1),
          this.$scrollPane &&
            this.$scrollPane.removeEventListener("scroll", this.resizeAux, !1),
          (this.$scrollPane = void 0),
          (this.resizeAux = void 0),
          this.$aux.remove(),
          (this.$aux = null),
          this.$backplane.close());
      }),
      Object.assign(w.prototype, o.a.prototype),
      (w.prototype.editorClass = "time"),
      (w.prototype.showAux = function () {
        if (this.$aux) return;
        var e = this,
          t = this.model.field,
          i = t.base,
          o = this.input,
          s = (this.$aux = $('<div class="stringeditor-aux dp ' + i + '">')
            .on(TOUCH ? EVENT_touchstart : "mousedown", function (e) {
              e.preventDefault();
            })
            .appendTo($(document.body)));
        let r = 0;
        function l() {
          a.render(
            n.createElement(h, {
              onChange: (e) => {
                o.val(t.formatEditor(e)), d();
              },
              timestamp: r,
            }),
            e.$time[0]
          );
        }
        function c() {
          const t = 220,
            i = 122;
          var o,
            a,
            n = e.el.offset(),
            r = window.getWidth(),
            l = window.getHeight(),
            c = t;
          n.top + 36 + i > l
            ? n.top - i < 20
              ? ((a = 20),
                (o =
                  n.left - c - 8 >= 0
                    ? n.left - c - 8
                    : n.left + e.el.width() + 8))
              : ((a = n.top - i), (o = n.left + c > r ? r - c : n.left))
            : ((a = n.top + 36), (o = n.left + c > r ? r - c : n.left)),
            s.css({ left: o, top: a });
        }
        function d() {
          const e = o.val(),
            i = e ? t.parseEditor(e) : void 0;
          (r = void 0 !== i ? i : null), l();
        }
        (this.$time = $('<div class="dp-time">').appendTo(s)),
          (this.resizeAux = c),
          window.addEventListener("resize", this.resizeAux, !1),
          (this.$scrollPane = e.el.closest(".object")[0]),
          this.$scrollPane &&
            this.$scrollPane.addEventListener("scroll", this.resizeAux, !1),
          c(),
          d(),
          o.keyup(d).change(d);
      }),
      (w.prototype.hideAux = function () {
        this.$aux &&
          (a.unmountComponentAtNode(this.$time[0]),
          window.removeEventListener("resize", this.resizeAux, !1),
          this.$scrollPane &&
            this.$scrollPane.removeEventListener("scroll", this.resizeAux, !1),
          (this.$scrollPane = void 0),
          (this.resizeAux = void 0),
          this.$aux.remove(),
          (this.$aux = null));
      });
    var x = i("./src/react/LightboxComponent.tsx"),
      T = i("./src/react/PdfRenderer.tsx"),
      C = i("./src/js/widgets/editors/Editor.js"),
      k = i("./node_modules/underscore/underscore.js"),
      S = i("./src/js/ui/ui-util.js");
    function _(e, t) {
      var i = t.field;
      switch (
        ((this.base = i.exp ? i.exp.returnType.base : "string"), this.base)
      ) {
        case "color":
        case "icon":
          (this.el = $('<div class="stringeditor">').appendTo(e.el)),
            (this.text = $('<div class="input-text">').appendTo(this.el));
          break;
        case "choice":
        case "styled":
          (this.el = $('<div class="stringeditor">').appendTo(e.el)),
            (this.text = $('<div class="choice text-selectable">').appendTo(
              this.el
            ));
          break;
        case "multi":
          (this.el = $('<div class="stringeditor">').appendTo(e.el)),
            (this.text = $(
              '<div class="input-text multicombo text-selectable">'
            ).appendTo(this.el));
          break;
        case "html":
          (this.el = $('<div class="stringeditor">').appendTo(e.el)),
            (this.text = $('<div class="html text-selectable">').appendTo(
              this.el
            ));
          break;
        case "file":
          var o = e.el.width();
          this.el = $(
            '<div class="editor-file-file" style="text-align:center;display:table-cell;vertical-align:middle;width:' +
              o +
              "px;max-width:" +
              o +
              'px">'
          ).appendTo(e.el);
          break;
        case "email":
          (this.el = $('<div class="stringeditor stringeditor-fn">').appendTo(
            e.el
          )),
            (this.text = $('<div class="input-text text-selectable">').appendTo(
              this.el
            )),
            (this.button = $(
              '<div class="stringeditor-button"><div class="i-32-18 i-light-grey i-field-email"></div></div>'
            )
              .appendTo(this.el)
              .touch($.proxy(this.sendEmail, this)));
          break;
        case "phone":
          (this.el = $('<div class="stringeditor stringeditor-fn">').appendTo(
            e.el
          )),
            (this.text = $('<div class="input-text text-selectable">').appendTo(
              this.el
            )),
            (this.button = $(
              '<div class="stringeditor-button"><div class="i-32-18 i-light-grey i-field-phone"></div></div>'
            )
              .appendTo(this.el)
              .touch($.proxy(this.openPhone, this)));
          break;
        case "link":
          (this.el = $('<div class="stringeditor stringeditor-fn">').appendTo(
            e.el
          )),
            (this.text = $('<div class="input-text text-selectable">').appendTo(
              this.el
            )),
            (this.button = $(
              '<div class="stringeditor-button"><div class="i-32-18 i-light-grey i-field-link"></div></div>'
            )
              .appendTo(this.el)
              .touch($.proxy(this.openURL, this)));
          break;
        default:
          (this.el = $('<div class="stringeditor stringeditor-fn">').appendTo(
            e.el
          )),
            (this.text = $('<div class="input-text text-selectable">').appendTo(
              this.el
            ));
      }
      this.el.touch($.proxy(this.onClick, this)),
        this.text
          ? (i.height > 1
              ? this.text.addClass("multiline")
              : this.text.removeClass("multiline"),
            this.text.css({ height: 24 * i.height + 8 }))
          : this.el.css({ height: 24 * i.height + 10 }),
        C.a.apply(this, arguments);
    }
    function E(e, t) {
      o.a.apply(this, arguments);
    }
    Object.assign(_.prototype, C.a.prototype),
      (_.prototype.editorClass = "fn"),
      (_.prototype.destroy = function () {
        this.el && this.el.remove(),
          C.a.prototype.destroy.apply(this, arguments);
      }),
      (_.prototype.updateUI = function () {
        switch ((this.updateUIStyle(), this.base)) {
          case "color":
            this.el.css({ backgroundColor: this.value || "" });
            break;
          case "icon":
            this.value
              ? this.text.html(
                  '<div class="iconselector-icon ic ic-' +
                    htmlEscape(this.value) +
                    '">'
                )
              : this.text.html("");
            break;
          case "choice":
          case "dchoice":
            this.model.field.exp.returnType.loadValue(
              this.getNid(),
              this.value,
              (e) => {
                let t = "",
                  i = "";
                void 0 !== e &&
                  (e.icon &&
                    (t +=
                      '<div class="choice-icon ic ic-' + e.icon + '"></div>'),
                  (t +=
                    '<span style="color:' +
                    (e.textColor || "") +
                    '">' +
                    htmlEscape(e.caption) +
                    "</span>"),
                  e.color && (i = e.color)),
                  this.el.css({ "background-color": i }),
                  this.text.html(t);
              }
            );
            break;
          case "styled": {
            let e = "",
              t = "";
            this.value &&
              (this.value.icon &&
                (e +=
                  '<div class="choice-icon ic ic-' +
                  this.value.icon +
                  '"></div>'),
              (e +=
                '<span style="color:' +
                (this.value.color || "") +
                '">' +
                htmlEscape(this.value.text) +
                "</span>"),
              this.value.background && (t = this.value.background)),
              this.el.css({ "background-color": t }),
              this.text.html(e);
            break;
          }
          case "multi":
          case "dmulti":
            this.model.field.exp.returnType.loadValuesSorted(
              this.getNid(),
              (e) => {
                const t = util.multiDecode(this.value);
                let i = "";
                for (var o = 0; o < e.length; o++) {
                  const a = e[o],
                    n = -1 !== t.indexOf(parseInt(a.id, 10));
                  n &&
                    (i +=
                      '<div class="multicombo-item" style="' +
                      (n && a.color
                        ? "background-color:" +
                          a.color +
                          ";color:" +
                          a.textColor
                        : "") +
                      '" data-id="' +
                      a.id +
                      '">' +
                      (a.icon
                        ? '<div class="choice-symbol ic ic-' +
                          a.icon +
                          '"></div>'
                        : "") +
                      "<span>" +
                      htmlEscape(a.caption || "") +
                      "</span></div>");
                }
                this.text.html(i);
              }
            );
            break;
          case "html":
            try {
              this.text.html(this.value || "");
            } catch (e) {
              this.text.html("INVALID HTML: " + htmlEscape(this.value));
            }
            break;
          case "file": {
            if (this.value) {
              const e = database.thumb2URL1(this.value);
              e ? this.el.html('<img src="' + e + '">') : this.el.html("");
            } else this.el.html("");
            const e = this.container.el.width();
            this.el.css({ width: e, "max-width": e });
            break;
          }
          default:
            this.text.text(this.model.field.format(this.value));
        }
      }),
      (_.prototype.updateUIStyle = function () {
        var e = this.model.field.style && JSON.parse(this.model.field.style);
        this.text &&
          this.text.css({
            "text-align": (e && e.textAlign) || "",
            "font-size": (e && e.fontSize) || "",
            "font-weight":
              e && util.multiHasOne(e.fontStyle, [1]) ? "bold" : "",
            "font-style":
              e && util.multiHasOne(e.fontStyle, [2]) ? "italic" : "",
            color: (e && e.color) || "",
            "background-color": (e && e.backgroundColor) || "",
          }),
          this.el &&
            this.el.css({
              "background-color": (e && e.backgroundColor) || "",
              "border-width": (e && e.borderWidth) || "",
              "border-color": (e && e.borderColor) || "",
              "border-left-style":
                (e &&
                  (util.multiHasOne(e.borderSides, [1])
                    ? e.borderStyle
                    : "none")) ||
                "",
              "border-top-style":
                (e &&
                  (util.multiHasOne(e.borderSides, [2])
                    ? e.borderStyle
                    : "none")) ||
                "",
              "border-bottom-style":
                (e &&
                  (util.multiHasOne(e.borderSides, [3])
                    ? e.borderStyle
                    : "none")) ||
                "",
              "border-right-style":
                (e &&
                  (util.multiHasOne(e.borderSides, [4])
                    ? e.borderStyle
                    : "none")) ||
                "",
            });
      }),
      (_.prototype.isHeightAdjustable = function () {
        return !0;
      }),
      (_.prototype.setHeight = function (e) {
        var t = this.model.field,
          i = t.height,
          o = Math.max(1, Math.round((e - 42) / 24));
        o !== i
          ? (this.text &&
              (o > 1
                ? this.text.addClass("multiline")
                : this.text.removeClass("multiline"),
              this.text.css({ height: 24 * o + 8 }),
              this.el.css({ height: "" })),
            (t.height = o))
          : this.el.css({ height: 24 * t.height + 10 });
      }),
      (_.prototype.widthChanged = function () {
        this.updateUI();
      }),
      (_.prototype.openURL = function () {
        this.value &&
          NinoxDocumentInteraction.previewDocument(this.value, function () {});
      }),
      (_.prototype.sendEmail = function () {
        if (this.value) {
          var e = "mailto:" + encodeURIComponent(this.value);
          NinoxDocumentInteraction.openBrowser(e);
        }
      }),
      (_.prototype.openPhone = function () {
        if (this.value) {
          var e = String(this.value).replace(/[\/]/g, "-");
          NinoxDocumentInteraction.openBrowser(
            "tel://" + encodeURIComponent(e)
          );
        }
      }),
      (_.prototype.openFile = function () {
        if (this.value) {
          var e = database.fileURL1(this.value);
          if (!e) return;
          const s = r.schemas.RE_FILE_REF.exec(this.value);
          if (!s) return;
          const l = s[1] + s[2],
            c = s[3];
          function t() {
            database.previewFile(l, c);
          }
          if (
            /\.(png|jpg|jpeg|gif)$/i.test(this.value) ||
            (/\.(png|jpg|jpeg|gif)$/i.test(this.value), 0)
          ) {
            var i = $("<div>").appendTo(document.body);
            a.render(
              n.createElement(x.a, {
                images: [{ file: e, name: c }],
                initialImageIndex: 0,
                closeLightBox: () => {
                  a.unmountComponentAtNode(i[0]), i.remove();
                },
                downloadUrl: t,
              }),
              i[0]
            );
          } else if (/\.(pdf)$/i.test(this.value)) {
            var o = $.backplane({
              cls: "nx-backplane-lightbox",
              beforeClose: () => a.unmountComponentAtNode(o[0]),
            });
            a.render(
              n.createElement(T.a, {
                pdfUrl: e,
                fileName: c,
                onDownloadClick: t,
                onCloseClick: () => o.close(),
              }),
              o[0]
            );
          } else t();
        }
      }),
      (_.prototype.onClick = function (e) {
        var t = this.model.field;
        if (t.onClick) {
          var i = this.container.getNid();
          this.el.addClass("clicked"),
            Object(S.e)(t.onClick, i, (e) => {
              this.el.removeClass("clicked"), e && $.alert(e);
            });
        } else "file" === this.base && this.openFile(e);
      }),
      Object.assign(E.prototype, o.a.prototype),
      (E.prototype.inputType = "url"),
      (E.prototype.editorClass = "link"),
      (E.prototype.createButton = function () {
        this.button = $(
          '<div class="stringeditor-button"><div class="i-32-18 i-light-grey i-field-link"></div></div>'
        )
          .css("display", "none")
          .click($.proxy(this.openURL, this))
          .appendTo(this.el);
      }),
      (E.prototype.openURL = function () {
        this.value &&
          NinoxDocumentInteraction.previewDocument(this.value, function () {});
      });
    var D = i("./src/js/widgets/editors/ChoiceEditor.js");
    function N(e, t) {
      C.a.apply(this, arguments),
        (this.el = $('<div class="stringeditor">')
          .appendTo(e.el)
          .touch($.proxy(this.popup, this))),
        (this.text = $('<div class="choice">').appendTo(this.el)),
        (this.button = $('<div class="choice-dropdown">').appendTo(this.el));
    }
    function M() {
      N.apply(this, arguments);
    }
    function I(e, t) {
      C.a.apply(this, arguments),
        (this.el = $('<div class="choiceswitch">')
          .appendTo(e.el)
          .touch($.proxy(this.clicked, this)));
    }
    function R() {
      I.apply(this, arguments);
    }
    function F(e, t) {
      C.a.apply(this, arguments),
        (this.el = $('<div class="choiceradio">')
          .appendTo(e.el)
          .touch($.proxy(this.clicked, this))),
        this.updateHeight();
    }
    function A() {
      F.apply(this, arguments);
    }
    function O(e, t) {
      C.a.apply(this, arguments),
        (this.el = $('<div class="stringeditor">').appendTo(e.el)),
        (this.text = $('<div class="input-text multicombo">')
          .appendTo(this.el)
          .click($.proxy(e.focus, e))),
        (this.button = $('<div class="choice-dropdown">')
          .appendTo(this.el)
          .touch($.proxy(this.container.focus, this.container))),
        (this.$backplane = null);
    }
    function z(e, t) {
      C.a.apply(this, arguments),
        (this.el = $('<div class="multiradio">')
          .appendTo(e.el)
          .touch($.proxy(this.clicked, this))),
        this.updateHeight();
    }
    function L(e, t) {
      C.a.apply(this, arguments),
        (this.el = $('<div class="choiceswitch">')
          .appendTo(e.el)
          .touch($.proxy(this.clicked, this)));
    }
    function j(e, t) {
      C.a.apply(this, arguments),
        (this.el = $('<div class="choiceswitch">')
          .appendTo(e.el)
          .touch($.proxy(this.clicked, this)));
    }
    function P(e, t) {
      C.a.apply(this, arguments),
        (this.el = $('<div class="booleancheck">')
          .appendTo(e.el)
          .touch($.proxy(this.clicked, this)));
    }
    function H(e, t) {
      C.a.apply(this, arguments),
        (this.el = $(
          '<div class="booleanslide"><div class="booleanslide-text"></div><div class="booleanslide-slide"><div class="booleanslide-knob"></div></div></div>'
        )
          .appendTo(e.el)
          .touch($.proxy(this.clicked, this)));
    }
    Object.assign(N.prototype, C.a.prototype),
      (N.prototype.editorClass = "choice"),
      (N.prototype.destroy = function () {
        this.el.remove(), C.a.prototype.destroy.apply(this, arguments);
      }),
      (N.prototype.updateUI = function () {
        this.model.field.loadValue(this.getNid(), this.value, (e) => {
          void 0 !== e
            ? ((this.text[0].innerHTML =
                (e.icon
                  ? '<div class="choice-icon ic ic-' + e.icon + '"></div>'
                  : "") +
                '<span style="color:' +
                e.textColor +
                '">' +
                htmlEscape(e.caption) +
                "</span>"),
              (this.el[0].style.backgroundColor = e.color || ""))
            : ((this.text[0].innerHTML = ""),
              (this.el[0].style.backgroundColor = ""));
        });
      }),
      (N.prototype.popup = function () {
        var e = this,
          t = this.model;
        t.field.loadValuesSorted(this.getNid(), (i) => {
          var o = $.backplane({}),
            a = $(
              '<div class="choice-menu" style="min-width:' +
                this.el.outerWidth() +
                "px;max-height:" +
                (window.getHeight() - 64) +
                'px;overflow:auto">'
            )
              .appendTo(o)
              .touch(d),
            n = "";
          if (!t.field.required) {
            var s = null == this.value;
            n +=
              '<div class="choice-menu-item" data-id="###NULL###"><div class="choice-indicator' +
              (s ? " selected" : "") +
              '"></div><div class="choice-label">' +
              htmlEscape(locale.empty) +
              "</div></div>";
          }
          k.each(i, function (t) {
            var i = t.id === e.value;
            n +=
              '<div data-id="' +
              t.id +
              '" class="choice-menu-item" style="' +
              (t.color
                ? "background-color:" + t.color + ";color:" + t.textColor
                : "") +
              '"><div class="choice-indicator' +
              (i ? " selected" : "") +
              '"></div><div class="multicombo-item" style="background-color:transparent;color:' +
              t.textColor +
              '">' +
              (t.icon
                ? '<div class="choice-symbol ic ic-' + t.icon + '"></div>'
                : "") +
              "<span>" +
              htmlEscape(t.caption || "") +
              "</span></div></div>";
          }),
            a.html(n);
          var r = a.outerWidth(),
            l = a.outerHeight(),
            c = this.el.offset();
          function d(t) {
            var i = $(t.target).closest(".choice-menu-item").attr("data-id");
            i &&
              ("###NULL###" === i
                ? (e.updateModel(null), o.close())
                : (e.updateModel(i), o.close()));
          }
          (c.top += 32),
            c.left + r > window.getWidth() && (c.left = window.getWidth() - r),
            c.top + l > window.getHeight() - 32 &&
              (c.top = window.getHeight() - l - 32),
            a.offset(c);
        });
      }),
      Object.assign(M.prototype, N.prototype),
      (M.prototype.editorClass = "user"),
      Object.assign(I.prototype, C.a.prototype),
      (I.prototype.editorClass = "choice-switch"),
      (I.prototype.destroy = function () {
        this.el && this.el.remove(),
          C.a.prototype.destroy.apply(this, arguments);
      }),
      (I.prototype.updateUI = function () {
        var e = this.value;
        this.model.field.loadValuesSorted(this.getNid(), (t) => {
          for (var i = "", o = 0; o < t.length; o++) {
            var a = t[o],
              n = e === a.id;
            i +=
              '<div class="choiceswitch-item' +
              (n ? " selected" : "") +
              '" style="' +
              (n && a.color
                ? "background-color:" + a.color + ";color:" + a.textColor
                : "") +
              '" data-id="' +
              a.id +
              '">' +
              (a.icon
                ? '<div class="choice-symbol ic ic-' + a.icon + '"></div>'
                : "") +
              "<span>" +
              htmlEscape(a.caption || "") +
              "</span></div>";
          }
          this.el.html(i);
        });
      }),
      (I.prototype.clicked = function (e) {
        var t = $(e.target).closest(".choiceswitch-item").attr("data-id");
        if (t) {
          var i = this.model.field;
          t === this.value
            ? i.required || this.updateModel(null)
            : this.updateModel(t);
        }
      }),
      (I.prototype.afterLoaded = function () {
        "dchoice" === this.model.field.base && this.updateUI();
      }),
      Object.assign(R.prototype, I.prototype),
      (R.prototype.editorClass = "user-switch"),
      Object.assign(F.prototype, C.a.prototype),
      (F.prototype.editorClass = "choice-radio"),
      (F.prototype.destroy = function () {
        this.el && this.el.remove(),
          C.a.prototype.destroy.apply(this, arguments);
      }),
      (F.prototype.updateStructure = function () {
        this.updateHeight();
      }),
      (F.prototype.updateUI = function () {
        var e = this.value;
        this.model.field.loadValuesSorted(this.getNid(), (t) => {
          for (var i = "", o = 0; o < t.length; o++) {
            var a = t[o],
              n = e === a.id;
            i += `<div \n                    class="choiceradio-item ${
              n ? "selected" : ""
            }"\n                    style="${
              n && a.color
                ? "background-color:" + a.color + ";color:" + a.textColor
                : ""
            }" \n                    data-id="${
              a.id
            }"\n                >\n                <div class="choiceradio-item-radio-container">\n                    <div class="choiceradio-item-radio"/>\n                </div>\n                ${
              a.icon ? `<div class="choice-symbol ic ic-${a.icon}"></div>` : ""
            }\n                <div class="choiceradio-item-text">\n                    ${htmlEscape(
              a.caption || ""
            )}\n                </div>\n                </div>`;
          }
          this.el.html(i), this.updateHeightWithCount(t.length);
        });
      }),
      (F.prototype.clicked = function (e) {
        var t = $(e.target);
        if (t.closest(".choiceradio-item-radio-container").length) {
          var i = t.closest(".choiceradio-item").attr("data-id");
          if (i) {
            var o = this.model.field;
            i === this.value
              ? o.required || this.updateModel(null)
              : this.updateModel(i);
          }
        }
      }),
      (F.prototype.isHeightAdjustable = function () {
        return !0;
      }),
      (F.prototype.setHeight = function (e) {
        const t = this.model.field;
        t.loadValuesSorted(this.getNid(), (i) => {
          const o = i.length,
            a = Math.ceil(o / 4),
            n = o,
            s = t.height,
            r = Math.min(n, Math.max(a, Math.round((e - 42) / 24)));
          s !== r && (t.height = r === o ? void 0 : r),
            this.updateHeightWithCount(i.length);
        });
      }),
      (F.prototype.updateHeight = function () {
        this.model.field.loadValuesSorted(this.getNid(), (e) => {
          this.updateHeightWithCount(e.length);
        });
      }),
      (F.prototype.updateHeightWithCount = function (e) {
        const t = this.model.field,
          i = Math.ceil(e / 4),
          o = e,
          a = t.height,
          n = null == a ? e : Math.min(o, Math.max(i, a)),
          s = Math.ceil(e / n);
        this.el.css({ "column-count": s, height: 24 * n + "px" });
      }),
      (F.prototype.afterLoaded = function () {
        "dchoice" === this.model.field.base && this.updateUI();
      }),
      Object.assign(A.prototype, F.prototype),
      (A.prototype.editorClass = "user-radio"),
      Object.assign(O.prototype, C.a.prototype),
      (O.prototype.editorClass = "multi-combo"),
      (O.prototype.destroy = function () {
        this.el && (this.el.remove(), (this.el = null)),
          this.$backplane &&
            (this.$backplane.remove(), (this.$backplane = null)),
          C.a.prototype.destroy.apply(this, arguments);
      }),
      (O.prototype.updateUI = function () {
        var e = util.multiDecode(this.value);
        this.model.field.loadValuesSorted(this.getNid(), (t) => {
          for (var i = "", o = 0; o < t.length; o++) {
            var a = t[o],
              n = -1 !== e.indexOf(parseInt(a.id));
            n &&
              (i += `<div class="multicombo-item" \n                          style="${
                n && a.color
                  ? "background-color:" + a.color + ";color:" + a.textColor
                  : ""
              }" \n                          data-id="${
                a.id
              }"\n                    >\n                        ${
                a.icon
                  ? '<div class="choice-symbol ic ic-' + a.icon + '"></div>'
                  : ""
              }\n                        <span>${htmlEscape(
                a.caption || ""
              )}</span>\n                    </div>`);
          }
          this.text.html(i);
        });
      }),
      (O.prototype.focus = function () {
        if (!this.$backplane) {
          this.$backplane = $.backplane({
            close: () => {
              this.$backplane = null;
            },
          });
          var e = this;
          this.model.field.loadValuesSorted(this.getNid(), (t) => {
            if (this.$backplane) {
              var i = $(
                `<div class="choice-menu" style="min-width: ${this.el.outerWidth()}px; overflow:auto; z-index:12">`
              )
                .appendTo(this.$backplane)
                .touch(a);
              o(), n();
            }
            function o() {
              for (
                var o = util.multiDecode(e.value),
                  a = `<div class="choice-menu-head">\n                    <div data-id="#all" class="choice-menu-item">\n                        <div class="choice-label">${htmlEscape(
                    locale.all
                  )}</div>\n                    </div>\n                    <div data-id="#none" class="choice-menu-item">\n                        <div class="choice-label">${htmlEscape(
                    locale.none
                  )}</div>\n                    </div>\n                </div>`,
                  n = 0;
                n < t.length;
                n++
              ) {
                var s = t[n],
                  r = -1 !== o.indexOf(parseInt(s.id));
                a += `<div data-id="${
                  s.id
                }" class="choice-menu-item">\n                        <div class="choice-indicator${
                  r ? " selected" : ""
                }"></div>\n                        <div class="multicombo-item" \n                             style="${
                  s.color
                    ? "background-color:" + s.color + ";color:" + s.textColor
                    : ""
                }" \n                             data-id="${
                  s.id
                }"\n                        >\n                            ${
                  s.icon
                    ? '<div class="choice-symbol ic ic-' + s.icon + '"></div>'
                    : ""
                }\n                            <span>${htmlEscape(
                  s.caption || ""
                )}</span>\n                        </div>\n                    </div>`;
              }
              i.html(a);
            }
            function a(i) {
              var a = util.multiDecode(e.value),
                n = $(i.target).closest(".choice-menu-item").attr("data-id");
              if (n) {
                if ("#all" === n) {
                  a = [];
                  for (var s = 0; s < t.length; s++) a.push(t[s].id);
                } else if ("#none" === n) a = [];
                else {
                  var r = parseInt(n),
                    l = a.indexOf(r);
                  -1 === l ? a.push(r) : a.splice(l, 1);
                }
                e.updateModel(util.multiEncode(a) || null, function () {
                  o();
                });
              }
            }
            function n() {
              var o = e.el.offset(),
                a = window.getWidth(),
                n = window.getHeight(),
                s = o.left,
                r = o.top + 36,
                l = i.outerWidth(),
                c = 32 * (t.length + 1);
              c > n - r &&
                (n - r >= o.top - 4
                  ? (c = n - r)
                  : ((c = Math.min(o.top - 4, c)), (r = o.top - 4 - c))),
                s + l > a && (s = a - l),
                i.css({ left: s, top: r, height: c });
            }
          });
        }
      }),
      Object.assign(z.prototype, C.a.prototype),
      (z.prototype.editorClass = "multi-radio"),
      (z.prototype.destroy = function () {
        this.el && this.el.remove(),
          C.a.prototype.destroy.apply(this, arguments);
      }),
      (z.prototype.updateStructure = function () {
        this.updateHeight();
      }),
      (z.prototype.updateUI = function () {
        var e = util.multiDecode(this.value);
        this.model.field.loadValuesSorted(this.getNid(), (t) => {
          for (var i = "", o = 0; o < t.length; o++) {
            var a = t[o],
              n = -1 !== e.indexOf(parseInt(a.id));
            i += `\n                <div \n                    class="multiradio-item ${
              n ? "selected" : ""
            }"\n                    style="${
              n && a.color ? "background-color:" + a.color : ""
            }" \n                    data-id="${
              a.id
            }"\n                >\n                    <div class="multiradio-item-box ${
              n ? "selected i-16-12 i-white i-check" : ""
            }"></div>\n                    ${
              a.icon ? `<div class="choice-symbol ic ic-${a.icon}"></div>` : ""
            }\n                    <div class="multiradio-item-text" style="color:${
              n ? a.textColor : ""
            }">\n                        ${htmlEscape(
              a.caption || ""
            )}\n                    </div>\n            </div>`;
          }
          this.el.html(i), this.updateHeightWithCount(t.length);
        });
      }),
      (z.prototype.clicked = function (e) {
        var t = util.multiDecode(this.value),
          i = $(e.target).closest(".multiradio-item").attr("data-id");
        if (i) {
          var o = parseInt(i),
            a = (this.model.field, t.indexOf(o));
          -1 === a ? t.push(o) : t.splice(a, 1),
            this.updateModel(util.multiEncode(t) || null);
        }
      }),
      (z.prototype.isHeightAdjustable = function () {
        return !0;
      }),
      (z.prototype.setHeight = function (e) {
        const t = this.model.field;
        t.loadValuesSorted(this.getNid(), (i) => {
          const o = i.length,
            a = Math.ceil(o / 4),
            n = o,
            s = t.height,
            r = Math.min(n, Math.max(a, Math.round((e - 42) / 24)));
          s !== r && (t.height = r === o ? void 0 : r),
            this.updateHeightWithCount(i.length);
        });
      }),
      (z.prototype.updateHeight = function () {
        this.model.field.loadValuesSorted(this.getNid(), (e) => {
          this.updateHeightWithCount(e.length);
        });
      }),
      (z.prototype.updateHeightWithCount = function (e) {
        const t = this.model.field,
          i = Math.ceil(e / 4),
          o = e,
          a = t.height,
          n = null == a ? e : Math.min(o, Math.max(i, a)),
          s = Math.ceil(e / n);
        this.el.css({ "column-count": s, height: 24 * n + "px" });
      }),
      Object.assign(L.prototype, C.a.prototype),
      (L.prototype.editorClass = "multi-switch"),
      (L.prototype.destroy = function () {
        this.el && this.el.remove(),
          C.a.prototype.destroy.apply(this, arguments);
      }),
      (L.prototype.updateUI = function () {
        var e = util.multiDecode(this.value);
        this.model.field.loadValuesSorted(this.getNid(), (t) => {
          for (var i = "", o = 0; o < t.length; o++) {
            var a = t[o],
              n = -1 !== e.indexOf(parseInt(a.id));
            i +=
              '<div class="choiceswitch-item' +
              (n ? " selected" : "") +
              '" style="' +
              (n && a.color
                ? "background-color:" + a.color + ";color:" + a.textColor
                : "") +
              '" data-id="' +
              a.id +
              '">' +
              (a.icon
                ? '<div class="choice-symbol ic ic-' + a.icon + '"></div>'
                : "") +
              "<span>" +
              htmlEscape(a.caption || "") +
              "</span></div>";
          }
          this.el.html(i);
        });
      }),
      (L.prototype.clicked = function (e) {
        var t = util.multiDecode(this.value),
          i = $(e.target).closest(".choiceswitch-item").attr("data-id");
        if (i) {
          var o = parseInt(i),
            a = t.indexOf(o);
          -1 === a ? t.push(o) : t.splice(a, 1),
            this.updateModel(util.multiEncode(t) || null);
        }
      }),
      Object.assign(j.prototype, C.a.prototype),
      (j.prototype.editorClass = "boolean-switch"),
      (j.prototype.destroy = function () {
        this.el && this.el.remove(),
          C.a.prototype.destroy.apply(this, arguments);
      }),
      (j.prototype.updateUI = function () {
        var e = this.value,
          t =
            (this.model.field,
            '<div class="choiceswitch-item' +
              (!1 === e ? " selected" : "") +
              '" style="width:50%" data-id="false">' +
              htmlEscape(locale.no) +
              '</div><div class="choiceswitch-item' +
              (!0 === e ? " selected" : "") +
              '" style="width:50%" data-id="true">' +
              htmlEscape(locale.yes) +
              "</div>");
        this.el.html(t);
      }),
      (j.prototype.clicked = function (e) {
        var t = $(e.target).closest(".choiceswitch-item").attr("data-id");
        if (t) {
          var i = "false" !== t && ("true" === t || null),
            o = this.model.field;
          i === this.value
            ? o.required || this.updateModel(null)
            : this.updateModel(i);
        }
      }),
      Object.assign(P.prototype, C.a.prototype),
      (P.prototype.editorClass = "boolean-check"),
      (P.prototype.destroy = function () {
        this.el && this.el.remove(),
          C.a.prototype.destroy.apply(this, arguments);
      }),
      (P.prototype.updateUI = function () {
        var e = this.value,
          t = this.model.field,
          i =
            '<div class="booleancheck-box' +
            (e ? " selected i-16-12 i-white i-check" : "") +
            '"></div><div class="booleancheck-text" style="display:' +
            ("none" === this.model.field.labelPosition ? "none" : "") +
            '">' +
            htmlEscape(t.caption) +
            "</div>";
        this.el.html(i);
      }),
      (P.prototype.clicked = function (e) {
        var t = !this.value;
        this.updateModel(t);
      }),
      Object.assign(H.prototype, C.a.prototype),
      (H.prototype.editorClass = "boolean-slide"),
      (H.prototype.destroy = function () {
        this.el && this.el.remove(),
          C.a.prototype.destroy.apply(this, arguments);
      }),
      (H.prototype.updateUI = function () {
        this.el.toggleClass("active", !!this.value),
          this.el
            .find(".booleanslide-text")
            .text(this.model.field.caption)
            .css(
              "display",
              "none" === this.model.field.labelPosition ? "none" : ""
            );
      }),
      (H.prototype.clicked = function (e) {
        $(e.target).closest(".booleanslide-slide").length &&
          this.updateModel(!this.value);
      });
    var U = i("./src/js/widgets/editors/IconSelector.js"),
      V = i("./src/js/widgets/editors/ColorSelector.js");
    function W(e) {
      return util.localeSortBy(
        k.map(e, function (e) {
          return { id: e.id, caption: e.caption };
        }),
        "caption"
      );
    }
    function B(e, t) {
      C.a.apply(this, arguments),
        (this.el = $('<div class="stringeditor">')
          .appendTo(e.el)
          .click($.proxy(this.popup, this))),
        (this.text = $('<div class="input-text">').appendTo(this.el)),
        (this.button = $('<div class="choice-dropdown">').appendTo(this.el));
    }
    function q(e, t) {
      (this.editing = !1),
        (this.el = $('<div class="html">')
          .appendTo(e.containerEl || e.el)
          .click($.proxy(this.startEdit, this))),
        this.el.css({ height: 24 * t.field.height }),
        C.a.apply(this, arguments);
    }
    Object.assign(B.prototype, C.a.prototype),
      (B.prototype.editorClass = "roles"),
      (B.prototype.destroy = function () {
        this.el.remove(), C.a.prototype.destroy.apply(this, arguments);
      }),
      (B.prototype.updateUI = function () {
        var e = W(this.model.roles || database.roles),
          t = this.value || [],
          i = [];
        k.each(e, function (e) {
          -1 !== t.indexOf(e.id) && i.push(e.caption);
        });
        var o = 0 === i.length ? locale.everybody : i.join(", ");
        this.text.text(o);
      }),
      (B.prototype.popup = function () {
        var e = this,
          t = (this.model, {});
        $.pushInputHandler(t);
        var i = $('<div class="nx-backplane nx-backplane-dark">')
            .appendTo($(document.body))
            .touch(function (e) {
              $(e.target).is(".nx-backplane") && c();
            }),
          o = $('<div class="choice-menu">')
            .css({ "min-width": this.el.width() })
            .appendTo(i),
          a = this.value || [],
          n = W(this.model.roles || database.roles);
        k.each(n, function (e) {
          e.selected = -1 !== a.indexOf(e.id);
          var t = $('<div class="choice-menu-item">')
              .data("role", e)
              .appendTo(o),
            i = $('<div class="placeholder">').appendTo(t),
            n = $('<div class="type-symbol">').appendTo(i);
          function s() {
            e.selected
              ? n.attr(
                  "class",
                  "booleancheck-box selected i-16-12 i-white i-check"
                )
              : n.attr("class", "booleancheck-box");
          }
          $('<div class="booleancheck-text">').text(e.caption).appendTo(t),
            t.click(function () {
              (e.selected = !e.selected), s();
            }),
            s();
        });
        var s = o.outerWidth(),
          r = o.outerHeight(),
          l = this.el.offset();
        function c() {
          (a = []),
            k.each(n, function (e) {
              e.selected && a.push(e.id);
            }),
            e.updateModel(0 === a.length ? void 0 : a),
            e.updateUI(),
            i.remove(),
            $.popInputHandler(t);
        }
        (l.top += 32),
          l.left + s > window.getWidth() && (l.left = window.getWidth() - s),
          l.top + r > window.getHeight() && (l.top = window.getHeight() - r),
          o.offset(l);
      }),
      Object.assign(q.prototype, C.a.prototype),
      (q.prototype.editorClass = "html"),
      (q.prototype.isHeightAdjustable = function () {
        return !0;
      }),
      (q.prototype.setHeight = function (e) {
        var t = this.model.field,
          i = t.height,
          o = Math.max(1, Math.round((e - 40) / 24));
        i !== o && ((t.height = o), this.el.css({ height: 24 * o }));
      }),
      (q.prototype.updateStructur = function () {
        this.model.field;
        this.el.css({ height: 24 * newHeight });
      }),
      (q.prototype.destroy = function () {
        this.el.remove(), C.a.prototype.destroy.apply(this, arguments);
      }),
      (q.prototype.updateUI = function () {
        this.el[0].innerHTML = this.value || "";
      }),
      (q.prototype.startEdit = function () {
        if (this.editing) return;
        if (!this.model.isWritable()) return;
        this.editing = !0;
        var e = this;
        window.registerSaveListener(g);
        var t = { keydown: b };
        $.pushInputHandler(t);
        var i = $('<div class="nx-backplane nx-backplane-dark">')
            .appendTo($(document.body))
            .click(function (e) {
              $(e.target).is(".nx-backplane") && v();
            }),
          o = $('<div class="html-pane">').appendTo(i);
        $('<div class="html-caption nx-section-head">')
          .text(e.model.field.caption)
          .appendTo(o);
        var a = $('<div class="html-controls">').appendTo(o);
        $('<div class="button i-32-18 i-light-grey i-head-1">')
          .appendTo(a)
          .on(TOUCH ? EVENT_touchstart : "mousedown", r),
          $('<div class="button i-32-18 i-light-grey i-head-2">')
            .appendTo(a)
            .on(TOUCH ? EVENT_touchstart : "mousedown", l),
          $('<div class="button i-32-18 i-light-grey i-head-3">')
            .appendTo(a)
            .on(TOUCH ? EVENT_touchstart : "mousedown", c),
          $('<div class="button i-32-18 i-light-grey i-ul">')
            .appendTo(a)
            .on(TOUCH ? EVENT_touchstart : "mousedown", m),
          $('<div class="button i-32-18 i-light-grey i-one-two-three">')
            .appendTo(a)
            .on(TOUCH ? EVENT_touchstart : "mousedown", f),
          $('<div class="button i-32-18 i-light-grey i-field-br">')
            .appendTo(a)
            .on(TOUCH ? EVENT_touchstart : "mousedown", d),
          $('<div class="button i-32-18 i-light-grey i-bold">')
            .appendTo(a)
            .on(TOUCH ? EVENT_touchstart : "mousedown", u),
          $('<div class="button i-32-18 i-light-grey i-italic">')
            .appendTo(a)
            .on(TOUCH ? EVENT_touchstart : "mousedown", p),
          $('<div class="button i-32-18 i-light-grey i-underline">')
            .appendTo(a)
            .on(TOUCH ? EVENT_touchstart : "mousedown", h);
        var n = $(
          '<div class="contenteditable html-editor no-richtexteditor needsfocus" contenteditable="true">'
        ).appendTo(o);
        const s = $('<div class="nx-button-bar html-button-bar">').appendTo(o);
        function r() {
          return (
            document.execCommand("formatBlock", !1, NINOX_IE ? "<H1>" : "H1"),
            !1
          );
        }
        function l() {
          return (
            document.execCommand("formatBlock", !1, NINOX_IE ? "<H2>" : "H2"),
            !1
          );
        }
        function c() {
          return (
            document.execCommand("formatBlock", !1, NINOX_IE ? "<H3>" : "H3"),
            !1
          );
        }
        function d() {
          return (
            document.execCommand("formatBlock", !1, NINOX_IE ? "<P>" : "P"), !1
          );
        }
        function u() {
          return document.execCommand("bold", !1, null), !1;
        }
        function p() {
          return document.execCommand("italic", !1, null), !1;
        }
        function h() {
          return document.execCommand("underline", !1, null), !1;
        }
        function m() {
          return document.execCommand("insertUnorderedList", !1, null), !1;
        }
        function f() {
          return document.execCommand("insertOrderedList", !1, null), !1;
        }
        function g() {
          e.updateModel(n.html());
        }
        function v() {
          g(), y();
        }
        function b(e) {
          if (27 === e.which) return v(), !1;
        }
        function y() {
          $.popInputHandler(t),
            window.unregisterSaveListener(g),
            (e.editing = !1),
            i.remove();
        }
        $(
          '<div class="nx-button-text grey" style="float:right"><span>' +
            htmlEscape(locale.cancel) +
            "</span></div>"
        )
          .appendTo(s)
          .click(y),
          $('<div class="nx-hspace-flex">').appendTo(s),
          $(
            '<div class="nx-button-text blue" style="float:right"><span>' +
              htmlEscape(locale.okay) +
              "</span></div>"
          )
            .appendTo(s)
            .click(v),
          n.keydown(b),
          n.html(e.value),
          n.focus();
      }),
      (q.prototype.endEdit = function () {});
    var Y = i("./src/js/widgets/Field.js");
    function G(e, t) {
      (this.el = $('<div class="stringeditor">')
        .appendTo(e.el)
        .click($.proxy(this.popup, this))),
        (this.text = $('<div class="input-text">').appendTo(this.el)),
        C.a.apply(this, arguments);
    }
    Object.assign(G.prototype, C.a.prototype),
      (G.prototype.editorClass = "numberformat"),
      (G.prototype.destroy = function () {
        this.model.off("update", this.update, this), this.el.remove();
      }),
      (G.prototype.updateUI = function () {
        this.text.text(this.value || "");
      }),
      (G.prototype.focus = function () {
        this.popup();
      }),
      (G.prototype.popup = function () {
        var e = this,
          t = {};
        $.pushInputHandler(t);
        var i = $('<div class="nx-backplane nx-backplane-dark">').touch(
            function (e) {
              $(e.target).is(".nx-backplane") && S();
            }
          ),
          o = $(
            '<div class="nx-menu-popup grey width-3col" style="padding:16px;">'
          ).appendTo(i),
          a = util.parseNumberFormat(this.value),
          n = new util.SimpleModel(
            new schemas.TChoice(void 0, void 0, {
              caption: locale.numberFormatDigits,
              required: !1,
              formWidth: 2 / 3,
              choiceRenderer: "switch",
              values: {
                0: { caption: "0", order: 0 },
                1: { caption: "1", order: 1 },
                2: { caption: "2", order: 2 },
                3: { caption: "3", order: 3 },
                4: { caption: "4", order: 4 },
                5: { caption: "5", order: 5 },
                6: { caption: "6", order: 6 },
                7: { caption: "7", order: 7 },
                8: { caption: "8", order: 8 },
              },
            }),
            a.allDigits ? void 0 : String(a.trailingZeros)
          ),
          s = new util.SimpleModel(
            new schemas.TBoolean(void 0, void 0, {
              caption: locale.numberFormatGroup,
              required: !0,
              booleanDefault: !1,
              formWidth: 1 / 3,
              booleanRenderer: "switch",
            }),
            a.group
          ),
          r = new util.SimpleModel(
            new schemas.TString(void 0, void 0, {
              caption: locale.numberFormatPrefix,
              required: !1,
              formWidth: 0.5,
            }),
            a.prefix
          ),
          l = new util.SimpleModel(
            new schemas.TString(void 0, void 0, {
              caption: locale.numberFormatUnit,
              required: !1,
              formWidth: 0.5,
            }),
            a.suffix
          );
        function c(e, t) {
          if (t) return "a";
          const i = { '"': "q", " ": "w" }[e];
          return void 0 === i ? e : i;
        }
        var d = new util.SimpleModel(
            new schemas.TChoice(void 0, void 0, {
              caption: locale.decimalSeparatorLabel,
              required: !0,
              formWidth: 0.5,
              choiceRenderer: "switch",
              values: {
                a: { caption: "auto", order: 1 },
                ".": { caption: ".", order: 2 },
                ",": { caption: ",", order: 3 },
                "'": { caption: "'", order: 4 },
                q: { caption: '"', order: 5 },
              },
            }),
            c(a.decimalSeparator, a.decimalSeparatorAuto)
          ),
          u = new util.SimpleModel(
            new schemas.TChoice(void 0, void 0, {
              caption: locale.groupingSeparatorLabel,
              required: !0,
              formWidth: 0.5,
              choiceRenderer: "switch",
              values: {
                a: { caption: "auto", order: 1 },
                ".": { caption: ".", order: 2 },
                ",": { caption: ",", order: 3 },
                "'": { caption: "'", order: 4 },
                q: { caption: '"', order: 5 },
                w: { caption: "␣", order: 6 },
              },
            }),
            c(a.groupingSeparator, a.groupingSeparatorAuto)
          );
        s.on("update", C),
          n.on("update", C),
          r.on("update", C),
          l.on("update", C),
          d.on("update", C),
          u.on("update", C);
        var p = new Y.a(this, n, o),
          h = new Y.a(this, s, o),
          m = new Y.a(this, r, o),
          f = new Y.a(this, l, o),
          g = new Y.a(this, d, o),
          v = new Y.a(this, u, o),
          b = $('<div class="component editor">').appendTo(o);
        $("<label>Group separator</label>").appendTo(b);
        var y = $('<div style="margin: -4px">').appendTo(b);
        k.each(
          [
            { fmt: void 0, caption: locale.empty },
            { fmt: "0", caption: util.formatNumber("0", 1023.42) },
            { fmt: "0.00", caption: util.formatNumber("0.00", 1023.42) },
            {
              fmt: "#,##0.00",
              caption: util.formatNumber("#,##0.00", 1023.42),
            },
            { fmt: "0 %", caption: util.formatNumber("0 %", 23.42) },
            { fmt: "0.00 %", caption: util.formatNumber("0.00 %", 23.42) },
            {
              fmt: "$#,##0.00",
              caption: util.formatNumber("$#,##0.00", 1023.42),
            },
            {
              fmt: "#,##0.00 €",
              caption: util.formatNumber("#,##0.00 €", 1023.42),
            },
            {
              fmt: "¥#,##0.00",
              caption: util.formatNumber("¥#,##0.00", 1023.42),
            },
            {
              fmt: "£#,##0.00",
              caption: util.formatNumber("£#,##0.00", 1023.42),
            },
          ],
          function (t) {
            $('<div class="button text grey" style="width:73px;margin:4px">')
              .text(t.caption)
              .appendTo(y)
              .click(function () {
                S(), e.updateModel(t.fmt);
              });
          }
        ),
          i.appendTo($(document.body));
        var w = o.outerWidth(),
          x = o.outerHeight(),
          T = this.el.offset();
        function C() {
          function t(e) {
            const t = { q: '"', w: " ", a: "" }[e];
            return void 0 === t ? e : t;
          }
          var i = {
            group: !!s.value,
            groupLength: 3,
            leadingZeros: 1,
            trailingZeros: n.value ? parseInt(n.value, 10) : 0,
            allDigits: !n.value,
            prefix: r.value || "",
            suffix: l.value || "",
            decimalSeparator: t(d.value),
            groupingSeparator: t(u.value),
          };
          e.updateModel(util.formatNumberFormat(i));
        }
        function S() {
          C(),
            h.destroy(),
            p.destroy(),
            m.destroy(),
            f.destroy(),
            g.destroy(),
            v.destroy(),
            i.remove(),
            $.popInputHandler(t);
        }
        (T.top += this.el.outerHeight()),
          T.left + w > window.getWidth() && (T.left = window.getWidth() - w),
          T.top + x > window.getHeight() && (T.top = window.getHeight() - x),
          o.offset(T);
      });
    var X = i("./src/js/admin/FunctionEditor.js");
    function K(e, t) {
      C.a.apply(this, arguments),
        (this.el = $('<div class="stringeditor">')
          .appendTo(e.el)
          .touch($.proxy(this.startEdit, this))),
        (this.text = $('<div class="input-text">').appendTo(this.el)),
        this.createButton();
    }
    function J(e, t) {
      var i,
        o = this;
      (i = t.field.stringMultiline
        ? (this.input = $('<textarea rows="4">'))
        : (this.input = $('<input type="text">')))
        .appendTo($('<div class="stringeditor">').appendTo(e.el))
        .attr("autocomplete", "off")
        .attr("autocorrect", "off")
        .attr("autocapitalize", "off")
        .attr("spellcheck", "false")
        .focus(r)
        .change(s)
        .blur(l);
      var a = !1;
      function n() {
        a = !0;
        var e = i[0].selectionStart;
        (!e || e < 0) && (e = 0);
        var n = i.val(),
          s = n.substr(0, e),
          r = n.substr(e),
          l = /\{([^\}]*)$/.exec(s),
          c = /^([^\{]*)\}/.exec(r),
          d = "";
        l &&
          c &&
          ((s = s.substr(0, l.index)),
          (r = r.substr(c[0].length)),
          (d = l[1] + c[1])),
          new X.a({
            value: d,
            schema: t.type.schema,
            type: t.type,
            okay: function (e, t) {
              var n;
              (a = !1),
                (n = t ? s + "{" + t.toHumanString() + "}" + r : s + r),
                o.updateModel(n, function (e) {
                  i.focus();
                });
            },
            cancel: function () {
              i.focus(), (a = !1);
            },
          });
      }
      function s() {
        if (!a) {
          a = !0;
          var e = i.val();
          o.updateModel(e, function (e) {
            a = !1;
          });
        }
      }
      function r() {
        if (!o.$button) {
          var t = i.position();
          (t.top -= 32),
            (t.left += i.width() - 32),
            (o.$button = $(
              '<div class="button icon i-32-24 i-grey i-setting-settings" style="position:absolute">'
            )
              .offset(t)
              .appendTo(e.el)
              .on(TOUCH ? EVENT_touchstart : "mousedown", n));
        }
      }
      function l() {
        o.$button && (o.$button.remove(), (o.$button = void 0));
      }
      C.a.apply(this, arguments);
    }
    function Z(e, t) {
      (this.el = $('<div class="stringeditor">').appendTo(e.el)),
        (this.text = $('<div class="input-text">')
          .click($.proxy(this.openMap, this))
          .appendTo(this.el)),
        (this.button = $(
          '<div class="stringeditor-button"><div class="i-32-18 i-light-grey i-field-location"></div></div>'
        )
          .click($.proxy(this.openMap, this))
          .appendTo(this.el)),
        (this.mapLoadErrors = !1),
        (this.editing = !1),
        (this.updating = !1),
        (this.updateEditor = null),
        (this.saveEditor = null),
        (this.applyEditor = null),
        (this.destroyEditor = null),
        C.a.apply(this, arguments);
    }
    function Q(e, t) {
      C.a.apply(this, arguments),
        (this.el = $('<div class="stringeditor">').appendTo(e.el)),
        (this.text = $('<div class="input-text multicombo">')
          .appendTo(this.el)
          .click($.proxy(e.focus, e))),
        (this.button = $('<div class="choice-dropdown">')
          .appendTo(this.el)
          .touch($.proxy(this.container.focus, this.container)));
    }
    function ee(e, t) {
      C.a.apply(this, arguments),
        (this.el = $('<div class="stringeditor">')
          .appendTo(e.el)
          .touch($.proxy(this.popup, this))),
        (this.text = $('<div class="input-text">').appendTo(this.el));
    }
    Object.assign(K.prototype, C.a.prototype),
      (K.prototype.editorClass = "exp"),
      (K.prototype.destroy = function () {
        this.el.remove(), C.a.prototype.destroy.apply(this, arguments);
      }),
      (K.prototype.updateUI = function () {
        this.text.text(this.model.field.format(this.value));
      }),
      (K.prototype.startEdit = function () {
        var e = this;
        new X.a({
          schema: e.model.schema,
          type: e.model.type,
          variables: e.model.field.getVariables
            ? e.model.field.getVariables()
            : {},
          supportsCommands: e.model.field.supportsCommands,
          ownerField: e.model.field,
          value: e.value,
          okay: function (t) {
            e.updateModel(t);
          },
          cancel: function () {},
        });
      }),
      (K.prototype.createButton = function () {
        this.button = $(
          '<div class="stringeditor-button"><div class="i-32-18 i-light-grey i-field-fn"></div></div>'
        )
          .click($.proxy(this.openURL, this))
          .appendTo(this.el);
      }),
      Object.assign(J.prototype, C.a.prototype),
      (J.prototype.editorClass = "stringtemplate"),
      (J.prototype.destroy = function () {
        this.input && this.input.remove(),
          this.$button && this.$button.remove(),
          C.a.prototype.destroy.apply(this, arguments);
      }),
      (J.prototype.updateUI = function () {
        var e = this.model,
          t = this.value,
          i = queries.formatSystemStringTemplateHuman(t, e.type);
        this.input.val(i);
      }),
      (J.prototype.updateModel = function (e, t) {
        var i = this.model,
          o = queries.formatHumanStringTemplateSystem(e, i.type);
        C.a.prototype.updateModel.call(this, o, t);
      }),
      Object.assign(Z.prototype, C.a.prototype),
      (Z.prototype.editorClass = "location"),
      (Z.prototype.destroy = function () {
        this.el.remove(),
          this.editing && this.destroyEditor(),
          C.a.prototype.destroy.apply(this, arguments);
      }),
      (Z.prototype.save = function () {
        this.editing && this.saveEditor();
      }),
      (Z.prototype.updateUI = function () {
        this.value
          ? (this.text.text(this.model.field.format(this.value)),
            (this.text[0].style.color = ""))
          : "placeholder" === this.model.field.labelPosition
          ? (this.text.text(this.model.field.caption),
            (this.text[0].style.color = "#999"))
          : (this.text.text(""), (this.text[0].style.color = "")),
          this.editing && this.updateEditor();
      }),
      (Z.prototype.focus = function () {
        var e = this;
        if (!e.editing && !e.updating) {
          (e.editing = !0),
            (e.updateEditor = m),
            (e.saveEditor = y),
            (e.applyEditor = b),
            (e.destroyEditor = w);
          var t = "",
            i = "",
            o = "",
            a = {};
          $.pushInputHandler(a);
          var n = $('<div class="nx-backplane">')
            .appendTo($(document.body))
            .touch(function (e) {
              $(e.target).is(".nx-backplane") && b();
            });
          e.$focusedBackPlane = n;
          var s = $(
              '<div class="nx-menu-popup grey" style="width:432px">'
            ).appendTo(n),
            r = e.text.offset(),
            l = e.el.width(),
            c = $(
              '<input type="text" class="input-location" style="z-index: 0;position:absolute;left:' +
                r.left +
                "px;top:" +
                r.top +
                "px;width:" +
                l +
                'px">'
            )
              .appendTo(n)
              .keydown(f);
          this.$title = c;
          var d = $(
            '<div class="editor" style="width:180px;display:inline-block">'
          ).appendTo(s);
          $("<label>").text(locale.latitude).appendTo(d);
          var u = $('<input type="text" class= "lat" >').appendTo(d).keydown(f);
          this.$latitude = u;
          var p = $(
            '<div class="editor" style="width:180px;display:inline-block">'
          ).appendTo(s);
          $("<label>").text(locale.longitude).appendTo(p);
          var h = $('<input type="text" class="lng">').appendTo(p).keydown(f);
          (this.$longitude = h),
            $(
              '<div class="icon-big-grey icon-big-search" style="position:absolute;left:368px;top:26px">'
            )
              .appendTo(s)
              .on(TOUCH ? EVENT_touchstart : "mousedown", function (e) {
                e.preventDefault(), v(function () {});
              }),
            $(
              '<div class="icon-big-grey icon-big-location" style="position:absolute;left:400px;top:26px">'
            )
              .appendTo(s)
              .touch(function () {
                b(function () {
                  e.openMap();
                });
              }),
            c.focus(),
            c.select(),
            m(),
            g();
        }
        function m() {
          var a = util.parseLocation(e.value);
          (t = a ? a.title : ""),
            (i = a ? util.formatNumber(null, a.longitude) : ""),
            (o = a ? util.formatNumber(null, a.latitude) : ""),
            c.val(t),
            h.val(i),
            u.val(o);
        }
        function f(t) {
          9 === t.which
            ? t.shiftKey
              ? t.target === c[0] &&
                (t.preventDefault(),
                b(function () {
                  setTimeout(function () {
                    e.container.focusPrev();
                  }, 0);
                }))
              : t.target === c[0] &&
                (t.preventDefault(),
                b(function () {
                  setTimeout(function () {
                    e.container.focusNext();
                  }, 0);
                }))
            : 13 === t.which
            ? (t.preventDefault(), b())
            : 27 === t.which && (t.preventDefault(), w());
        }
        function g() {
          var t = e.el.offset(),
            i = window.getWidth(),
            o = window.getHeight(),
            a = s.outerWidth(),
            n = s.outerHeight(),
            r = t.left + a > i ? i - a : t.left,
            l = t.top + 36 + n > o ? t.top - n - 4 : t.top + 36;
          s.css({ left: r, top: l });
        }
        function v(e) {
          if (!c.val()) return h.val(""), u.val(""), e();
          $.loading(!0),
            NinoxDocumentInteraction.coordinatesForAddress(
              c.val(),
              function (t, i) {
                $.loading(!1),
                  i &&
                    (c.val(i.title || c.val() || ""),
                    h.val(util.formatNumber(null, i.longitude)),
                    u.val(util.formatNumber(null, i.latitude))),
                  e();
              }
            );
        }
        function b(e) {
          w(), y(e);
        }
        function y(a) {
          var n = c.val(),
            s = h.val(),
            r = u.val();
          if (n != t || s != i || r != o) {
            var l = util.formatLocation({
              title: n,
              longitude: util.parseNumber(s),
              latitude: util.parseNumber(r),
            });
            (e.updating = !0),
              e.updateModel(l, function (t) {
                (e.updating = !1), a && a();
              });
          } else a && a();
        }
        function w() {
          n.remove(),
            $.popInputHandler(a),
            (e.editing = !1),
            (e.updateEditor = null),
            (e.saveEditor = null),
            (e.applyEditor = null),
            (e.destroyEditor = null),
            (e.$focusedBackPlane = null);
        }
      }),
      (Z.prototype.blur = function () {
        this.editing && this.applyEditor();
      }),
      (Z.prototype.openMap = function () {
        var e = this,
          t = util.parseLocation(this.value);
        NinoxDocumentInteraction.openMap(t, function (t, i) {
          var o = util.formatLocation(i);
          e.updateModel(o);
        });
      }),
      Object.assign(Q.prototype, C.a.prototype),
      (Q.prototype.editorClass = "choice"),
      (Q.prototype.destroy = function () {
        this.el.remove(), C.a.prototype.destroy.apply(this, arguments);
      }),
      (Q.prototype.updateUI = function () {
        for (
          var e = this.model.field,
            t = k.sortBy(e.getValues(), "order"),
            i = "",
            o = 0;
          o < t.length;
          o++
        ) {
          var a = t[o],
            n = this.value && this.value[a.id];
          n &&
            (i +=
              '<div class="multicombo-item" style="' +
              (n && a.color
                ? "background-color:" + a.color + ";color:" + a.textColor
                : "") +
              '" data-id="' +
              a.id +
              '">' +
              (a.icon
                ? '<div class="choice-symbol ic ic-' + a.icon + '"></div>'
                : "") +
              "<span>" +
              htmlEscape(a.caption || "") +
              "</span></div>");
        }
        this.text.html(i);
      }),
      (Q.prototype.focus = function () {
        var e = this,
          t = k.sortBy(e.model.field.getValues(), "order"),
          i = $.backplane({}),
          o = $(
            '<div class="choice-menu" style="min-width:' +
              this.el.outerWidth() +
              'px;overflow:auto;z-index:12">'
          )
            .appendTo(i)
            .touch(n);
        function a() {
          for (
            var i =
                '<div class="choice-menu-head"><div data-id="#all" class="choice-menu-item"><div class="choice-label">' +
                htmlEscape(locale.all) +
                '</div></div><div data-id="#none" class="choice-menu-item"><div class="choice-label">' +
                htmlEscape(locale.none) +
                '</div></div><div data-id="#new" class="choice-menu-item"><div class="choice-label">' +
                htmlEscape(locale.addRole) +
                "</div></div></div>",
              a = 0;
            a < t.length;
            a++
          ) {
            var n = t[a],
              s = e.value && e.value[n.id];
            i +=
              '<div data-id="' +
              n.id +
              '" class="choice-menu-item"><div class="choice-indicator' +
              (s ? " selected" : "") +
              '"></div><div class="multicombo-item" style="' +
              (n.color
                ? "background-color:" + n.color + ";color:" + n.textColor
                : "") +
              '" data-id="' +
              n.id +
              '">' +
              (n.icon
                ? '<div class="choice-symbol ic ic-' + n.icon + '"></div>'
                : "") +
              "<span>" +
              htmlEscape(n.caption || "") +
              "</span></div></div>";
          }
          o.html(i);
        }
        function n(o) {
          $(o.target);
          var n,
            s = $(o.target).closest(".choice-menu-item").attr("data-id");
          if (s) {
            if (("#new" === s && (e.addValue(), i.close()), "#all" === s)) {
              n = {};
              for (var r = 0; r < t.length; r++) n[t[r].id] = !0;
            } else
              "#none" === s
                ? (n = {})
                : (n = Object.assign({}, e.value))[s]
                ? delete n[s]
                : (n[s] = !0);
            e.updateModel(n), a();
          }
        }
        function s() {
          var i = e.el.offset(),
            a = window.getWidth(),
            n = window.getHeight(),
            s = i.left,
            r = i.top + 36,
            l = o.outerWidth(),
            c = 32 * (t.length + 1);
          c > n - r &&
            (n - r >= i.top - 4
              ? (c = n - r)
              : ((c = Math.min(i.top - 4, c)), (r = i.top - 4 - c))),
            s + l > a && (s = a - l),
            o.css({ left: s, top: r, height: c });
        }
        a(), s();
      }),
      (Q.prototype.addValue = function () {
        var e = this,
          t = this.model,
          i = $.popdown({
            cls: "small",
            head: locale.addRole,
            buttons: [
              "cancel",
              "-",
              { caption: locale.okay, cls: "blue", click: a },
            ],
          }),
          o = $.input({
            caption: locale.roleCaption,
            $container: i.$content,
            focus: !0,
          });
        function a() {
          var a = o.val().trim();
          a &&
            t.field.createValue(a, function (t, o) {
              if (t) return $.alert(t);
              var a = {};
              (a[o.id] = !0), e.updateModel(a), e.updateUI(), i.close();
            });
        }
      }),
      Object.assign(ee.prototype, C.a.prototype),
      (ee.prototype.editorClass = "color"),
      (ee.prototype.destroy = function () {
        this.el.remove();
      }),
      (ee.prototype.updateUI = function () {
        var e;
        try {
          this.value && (e = JSON.parse(this.value));
        } catch (e) {}
        this.el.css({
          color: (e && e.color) || "",
          "background-color": (e && e.backgroundColor) || "",
          "text-align": (e && e.textAlign) || "",
          "font-size": (e && e.fontSize) || "",
          "font-weight": e && util.multiHasOne(e.fontStyle, [1]) ? "bold" : "",
          "font-style": e && util.multiHasOne(e.fontStyle, [2]) ? "italic" : "",
        }),
          this.text.text(e ? locale.text : locale.none);
      }),
      (ee.prototype.popup = function () {
        var e = this,
          t = {};
        try {
          this.value && (t = JSON.parse(this.value));
        } catch (e) {}
        var i = $.backplane({}),
          o = $('<div class="styleeditor-menu">').appendTo(i),
          a = o,
          n = new util.SimpleModel(
            new schemas.TColor(void 0, void 0, {
              caption: locale.color,
              width: 2,
            }),
            t.color
          );
        n.on("update", g);
        var s = new util.SimpleModel(
          new schemas.TColor(void 0, void 0, {
            caption: locale.backgroundColor,
            width: 2,
          }),
          t.backgroundColor
        );
        s.on("update", g);
        var r = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.printFontSize,
            required: !0,
            choiceDefault: "1em",
            width: 2,
            values: {
              ".9em": { id: ".9em", caption: locale.fontSmall, order: 1 },
              "1em": { id: "1em", caption: locale.fontNormal, order: 2 },
              "1.2em": { id: "1.2em", caption: locale.fontLarge, order: 3 },
              "1.5em": { id: "1.5em", caption: locale.fontVeryLarge, order: 4 },
            },
          }),
          t.fontSize || "1em"
        );
        r.on("update", g);
        var l = new util.SimpleModel(
          new schemas.TMulti(void 0, void 0, {
            caption: locale.fontStyle,
            width: 2,
            values: {
              1: { id: "1", caption: locale.bold, order: 1 },
              2: { id: "2", caption: locale.italic, order: 2 },
            },
          }),
          t.fontStyle
        );
        l.on("update", g);
        var c = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.textAlign,
            required: !0,
            choiceDefault: "left",
            choiceRenderer: "switch",
            width: 4,
            values: {
              left: { id: "left", caption: locale.left, order: 1 },
              center: { id: "center", caption: locale.center, order: 2 },
              right: { id: "right", caption: locale.right, order: 3 },
            },
          }),
          t.textAlign || "left"
        );
        c.on("update", g);
        var d = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.borderStyle,
            required: !0,
            choiceDefault: "none",
            formWidth: 0.35,
            values: {
              none: { id: "none", caption: locale.none, order: 1 },
              solid: { id: "solid", caption: locale.solid, order: 2 },
              double: { id: "double", caption: locale.double, order: 3 },
              dotted: { id: "dotted", caption: locale.dotted, order: 4 },
              dashed: { id: "dashed", caption: locale.dashed, order: 5 },
            },
          }),
          t.borderStyle || "none"
        );
        d.on("update", g);
        var u = new util.SimpleModel(
          new schemas.TChoice(void 0, void 0, {
            caption: locale.borderWidth,
            required: !0,
            choiceDefault: "none",
            formWidth: 0.35,
            values: {
              thin: { id: "thin", caption: locale.thin, order: 1 },
              medium: { id: "medium", caption: locale.medium, order: 2 },
              thick: { id: "thick", caption: locale.thick, order: 3 },
            },
          }),
          t.borderWidth || "thin"
        );
        u.on("update", g);
        var p = new util.SimpleModel(
          new schemas.TColor(void 0, void 0, {
            caption: locale.borderColor,
            formWidth: 0.3,
          }),
          t.borderColor || "#000"
        );
        p.on("update", g);
        var h = new util.SimpleModel(
          new schemas.TMulti(void 0, void 0, {
            caption: locale.borderSides,
            width: 4,
            values: {
              1: { id: "1", caption: locale.left, order: 1 },
              2: { id: "2", caption: locale.top, order: 2 },
              3: { id: "3", caption: locale.bottom, order: 3 },
              4: { id: "4", caption: locale.right, order: 4 },
            },
          }),
          t.borderSides || util.multiEncode([1, 2, 3, 4])
        );
        h.on("update", g);
        new Y.a(void 0, n, a),
          new Y.a(void 0, s, a),
          new Y.a(void 0, r, a),
          new Y.a(void 0, l, a),
          new Y.a(void 0, c, a),
          new Y.a(void 0, d, a),
          new Y.a(void 0, u, a),
          new Y.a(void 0, p, a),
          new Y.a(void 0, h, a);
        var m = $('<div class="styleeditor-controls">').appendTo(a);
        function f() {
          var t = o.outerWidth(),
            i = o.outerHeight(),
            a = e.el.offset();
          (a.top += 32),
            a.left + t > window.getWidth() && (a.left = window.getWidth() - t),
            a.top + i > window.getHeight() && (a.top = window.getHeight() - i),
            o.offset(a);
        }
        function g() {
          e.updateModel(
            JSON.stringify({
              color: n.value,
              backgroundColor: s.value,
              fontSize: r.value,
              fontStyle: l.value,
              textAlign: c.value,
              borderStyle: d.value,
              borderWidth: u.value,
              borderColor: p.value,
              borderSides: h.value,
            })
          );
        }
        function v() {
          e.updateModel(null);
        }
        function b() {
          i.close();
        }
        $('<div class="nx-button-text grey">')
          .text(locale.clear)
          .appendTo(m)
          .touch(function () {
            v(), b();
          }),
          $('<div class="nx-hspace-flex">').appendTo(m),
          $('<div class="nx-button-text blue">')
            .text(locale.okay)
            .appendTo(m)
            .touch(function () {
              g(), b();
            }),
          f();
      });
    const te = window.NINOX_IOS || window.NINOX_ANDROID ? N : D.a,
      ie = window.NINOX_IOS || window.NINOX_ANDROID ? f : g,
      oe = window.NINOX_IOS || window.NINOX_ANDROID ? M : D.b,
      ae = {
        choice: te,
        "choice-combo": te,
        boolean: te,
        "boolean-combo": te,
        appointment: m,
        string: o.a,
        timeinterval: o.a,
        email: v,
        phone: b,
        link: E,
        fn: _,
        date: y,
        datx: y,
        time: w,
        timestamp: y,
        dchoice: te,
        "dchoice-combo": te,
        "choice-switch": I,
        "dchoice-switch": I,
        "user-switch": R,
        "choice-radio": F,
        "dchoice-radio": F,
        "user-radio": A,
        dmulti: O,
        "multi-combo": O,
        "dmulti-combo": O,
        "multi-radio": z,
        "multi-switch": L,
        "dmulti-switch": L,
        "dmulti-radio": z,
        "boolean-switch": j,
        "boolean-check": P,
        "boolean-slide": H,
        icon: U.b,
        color: V.b,
        roles: B,
        html: q,
        number: ie,
        numberformat: G,
        exp: K,
        stringtemplate: J,
        location: Z,
        extchoice: Q,
        style: ee,
        user: oe,
        "user-combo": oe,
      };
    function ne() {
      const e = {
        popupEditorStack: [],
        DONT_SHOW_LABEL: { "boolean-check": !0, "boolean-slide": !0 },
      };
      return e;
    }
    function se() {
      return database.adminMode && database.isAdminEnabled();
    }
    function re(e, t) {
      var i = t.field;
      return new (ae[i.getEditorClass()] || ae.string)(e, t);
    }
    function le(e) {
      return (
        "editor editor-" +
        ("fn" === e.base ? (e.exp ? e.exp.returnType.base : "fn") : e.base)
      );
    }
  },
  "./src/lib/excel/jszip.js": function (e, t, i) {
    "use strict";
    (function (e, t) {
      var o;
      i("./node_modules/core-js/modules/es.string.replace.js"),
        i("./node_modules/core-js/modules/es.typed-array.int32-array.js"),
        i("./node_modules/core-js/modules/es.typed-array.uint8-array.js"),
        i("./node_modules/core-js/modules/es.typed-array.uint16-array.js"),
        i("./node_modules/core-js/modules/es.typed-array.uint32-array.js"),
        i("./node_modules/core-js/modules/web.immediate.js");
      !(function (o) {
        if ("object" == typeof exports && void 0 !== e) e.exports = o();
        else if (
          "function" == typeof define &&
          i("./node_modules/webpack/buildin/amd-options.js")
        )
          define([], o);
        else {
          var a;
          "undefined" != typeof window
            ? (a = window)
            : void 0 !== t
            ? (a = t)
            : "undefined" != typeof self && (a = self),
            (a.JSZip = o());
        }
      })(function () {
        return (function e(t, i, a) {
          function n(r, l) {
            if (!i[r]) {
              if (!t[r]) {
                if (!l && "function" == typeof o && o) return o(r, !0);
                if (s) return s(r, !0);
                throw new Error("Cannot find module '" + r + "'");
              }
              var c = (i[r] = { exports: {} });
              t[r][0].call(
                c.exports,
                function (e) {
                  var i = t[r][1][e];
                  return n(i || e);
                },
                c,
                c.exports,
                e,
                t,
                i,
                a
              );
            }
            return i[r].exports;
          }
          for (var s = "function" == typeof o && o, r = 0; r < a.length; r++)
            n(a[r]);
          return n;
        })(
          {
            1: [
              function (e, t, i) {
                var o =
                  "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
                (i.encode = function (e, t) {
                  for (var i, a, n, s, r, l, c, d = "", u = 0; u < e.length; )
                    (s = (i = e.charCodeAt(u++)) >> 2),
                      (r = ((3 & i) << 4) | ((a = e.charCodeAt(u++)) >> 4)),
                      (l = ((15 & a) << 2) | ((n = e.charCodeAt(u++)) >> 6)),
                      (c = 63 & n),
                      isNaN(a) ? (l = c = 64) : isNaN(n) && (c = 64),
                      (d =
                        d +
                        o.charAt(s) +
                        o.charAt(r) +
                        o.charAt(l) +
                        o.charAt(c));
                  return d;
                }),
                  (i.decode = function (e, t) {
                    var i,
                      a,
                      n,
                      s,
                      r,
                      l,
                      c = "",
                      d = 0;
                    for (
                      e = e.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                      d < e.length;

                    )
                      (i =
                        (o.indexOf(e.charAt(d++)) << 2) |
                        ((s = o.indexOf(e.charAt(d++))) >> 4)),
                        (a =
                          ((15 & s) << 4) |
                          ((r = o.indexOf(e.charAt(d++))) >> 2)),
                        (n = ((3 & r) << 6) | (l = o.indexOf(e.charAt(d++)))),
                        (c += String.fromCharCode(i)),
                        64 != r && (c += String.fromCharCode(a)),
                        64 != l && (c += String.fromCharCode(n));
                    return c;
                  });
              },
              {},
            ],
            2: [
              function (e, t, i) {
                function o() {
                  (this.compressedSize = 0),
                    (this.uncompressedSize = 0),
                    (this.crc32 = 0),
                    (this.compressionMethod = null),
                    (this.compressedContent = null);
                }
                (o.prototype = {
                  getContent: function () {
                    return null;
                  },
                  getCompressedContent: function () {
                    return null;
                  },
                }),
                  (t.exports = o);
              },
              {},
            ],
            3: [
              function (e, t, i) {
                (i.STORE = {
                  magic: "\0\0",
                  compress: function (e) {
                    return e;
                  },
                  uncompress: function (e) {
                    return e;
                  },
                  compressInputType: null,
                  uncompressInputType: null,
                }),
                  (i.DEFLATE = e("./flate"));
              },
              { "./flate": 8 },
            ],
            4: [
              function (e, t, i) {
                var o = e("./utils"),
                  a = [
                    0, 1996959894, 3993919788, 2567524794, 124634137,
                    1886057615, 3915621685, 2657392035, 249268274, 2044508324,
                    3772115230, 2547177864, 162941995, 2125561021, 3887607047,
                    2428444049, 498536548, 1789927666, 4089016648, 2227061214,
                    450548861, 1843258603, 4107580753, 2211677639, 325883990,
                    1684777152, 4251122042, 2321926636, 335633487, 1661365465,
                    4195302755, 2366115317, 997073096, 1281953886, 3579855332,
                    2724688242, 1006888145, 1258607687, 3524101629, 2768942443,
                    901097722, 1119000684, 3686517206, 2898065728, 853044451,
                    1172266101, 3705015759, 2882616665, 651767980, 1373503546,
                    3369554304, 3218104598, 565507253, 1454621731, 3485111705,
                    3099436303, 671266974, 1594198024, 3322730930, 2970347812,
                    795835527, 1483230225, 3244367275, 3060149565, 1994146192,
                    31158534, 2563907772, 4023717930, 1907459465, 112637215,
                    2680153253, 3904427059, 2013776290, 251722036, 2517215374,
                    3775830040, 2137656763, 141376813, 2439277719, 3865271297,
                    1802195444, 476864866, 2238001368, 4066508878, 1812370925,
                    453092731, 2181625025, 4111451223, 1706088902, 314042704,
                    2344532202, 4240017532, 1658658271, 366619977, 2362670323,
                    4224994405, 1303535960, 984961486, 2747007092, 3569037538,
                    1256170817, 1037604311, 2765210733, 3554079995, 1131014506,
                    879679996, 2909243462, 3663771856, 1141124467, 855842277,
                    2852801631, 3708648649, 1342533948, 654459306, 3188396048,
                    3373015174, 1466479909, 544179635, 3110523913, 3462522015,
                    1591671054, 702138776, 2966460450, 3352799412, 1504918807,
                    783551873, 3082640443, 3233442989, 3988292384, 2596254646,
                    62317068, 1957810842, 3939845945, 2647816111, 81470997,
                    1943803523, 3814918930, 2489596804, 225274430, 2053790376,
                    3826175755, 2466906013, 167816743, 2097651377, 4027552580,
                    2265490386, 503444072, 1762050814, 4150417245, 2154129355,
                    426522225, 1852507879, 4275313526, 2312317920, 282753626,
                    1742555852, 4189708143, 2394877945, 397917763, 1622183637,
                    3604390888, 2714866558, 953729732, 1340076626, 3518719985,
                    2797360999, 1068828381, 1219638859, 3624741850, 2936675148,
                    906185462, 1090812512, 3747672003, 2825379669, 829329135,
                    1181335161, 3412177804, 3160834842, 628085408, 1382605366,
                    3423369109, 3138078467, 570562233, 1426400815, 3317316542,
                    2998733608, 733239954, 1555261956, 3268935591, 3050360625,
                    752459403, 1541320221, 2607071920, 3965973030, 1969922972,
                    40735498, 2617837225, 3943577151, 1913087877, 83908371,
                    2512341634, 3803740692, 2075208622, 213261112, 2463272603,
                    3855990285, 2094854071, 198958881, 2262029012, 4057260610,
                    1759359992, 534414190, 2176718541, 4139329115, 1873836001,
                    414664567, 2282248934, 4279200368, 1711684554, 285281116,
                    2405801727, 4167216745, 1634467795, 376229701, 2685067896,
                    3608007406, 1308918612, 956543938, 2808555105, 3495958263,
                    1231636301, 1047427035, 2932959818, 3654703836, 1088359270,
                    936918e3, 2847714899, 3736837829, 1202900863, 817233897,
                    3183342108, 3401237130, 1404277552, 615818150, 3134207493,
                    3453421203, 1423857449, 601450431, 3009837614, 3294710456,
                    1567103746, 711928724, 3020668471, 3272380065, 1510334235,
                    755167117,
                  ];
                t.exports = function (e, t) {
                  if (void 0 === e || !e.length) return 0;
                  var i = "string" !== o.getTypeOf(e);
                  void 0 === t && (t = 0);
                  var n = 0;
                  t ^= -1;
                  for (var s = 0, r = e.length; s < r; s++)
                    (n = i ? e[s] : e.charCodeAt(s)),
                      (t = (t >>> 8) ^ a[255 & (t ^ n)]);
                  return -1 ^ t;
                };
              },
              { "./utils": 19 },
            ],
            5: [
              function (e, t, i) {
                var o = e("./utils");
                function a(e) {
                  (this.data = null), (this.length = 0), (this.index = 0);
                }
                (a.prototype = {
                  checkOffset: function (e) {
                    this.checkIndex(this.index + e);
                  },
                  checkIndex: function (e) {
                    if (this.length < e || e < 0)
                      throw new Error(
                        "End of data reached (data length = " +
                          this.length +
                          ", asked index = " +
                          e +
                          "). Corrupted zip ?"
                      );
                  },
                  setIndex: function (e) {
                    this.checkIndex(e), (this.index = e);
                  },
                  skip: function (e) {
                    this.setIndex(this.index + e);
                  },
                  byteAt: function (e) {},
                  readInt: function (e) {
                    var t,
                      i = 0;
                    for (
                      this.checkOffset(e), t = this.index + e - 1;
                      t >= this.index;
                      t--
                    )
                      i = (i << 8) + this.byteAt(t);
                    return (this.index += e), i;
                  },
                  readString: function (e) {
                    return o.transformTo("string", this.readData(e));
                  },
                  readData: function (e) {},
                  lastIndexOfSignature: function (e) {},
                  readDate: function () {
                    var e = this.readInt(4);
                    return new Date(
                      1980 + ((e >> 25) & 127),
                      ((e >> 21) & 15) - 1,
                      (e >> 16) & 31,
                      (e >> 11) & 31,
                      (e >> 5) & 63,
                      (31 & e) << 1
                    );
                  },
                }),
                  (t.exports = a);
              },
              { "./utils": 19 },
            ],
            6: [
              function (e, t, i) {
                (i.base64 = !1),
                  (i.binary = !1),
                  (i.dir = !1),
                  (i.date = null),
                  (i.compression = null),
                  (i.comment = null);
              },
              {},
            ],
            7: [
              function (e, t, i) {
                var o = e("./utils");
                (i.string2binary = function (e) {
                  return o.string2binary(e);
                }),
                  (i.string2Uint8Array = function (e) {
                    return o.transformTo("uint8array", e);
                  }),
                  (i.uint8Array2String = function (e) {
                    return o.transformTo("string", e);
                  }),
                  (i.string2Blob = function (e) {
                    var t = o.transformTo("arraybuffer", e);
                    return o.arrayBuffer2Blob(t);
                  }),
                  (i.arrayBuffer2Blob = function (e) {
                    return o.arrayBuffer2Blob(e);
                  }),
                  (i.transformTo = function (e, t) {
                    return o.transformTo(e, t);
                  }),
                  (i.getTypeOf = function (e) {
                    return o.getTypeOf(e);
                  }),
                  (i.checkSupport = function (e) {
                    return o.checkSupport(e);
                  }),
                  (i.MAX_VALUE_16BITS = o.MAX_VALUE_16BITS),
                  (i.MAX_VALUE_32BITS = o.MAX_VALUE_32BITS),
                  (i.pretty = function (e) {
                    return o.pretty(e);
                  }),
                  (i.findCompression = function (e) {
                    return o.findCompression(e);
                  }),
                  (i.isRegExp = function (e) {
                    return o.isRegExp(e);
                  });
              },
              { "./utils": 19 },
            ],
            8: [
              function (e, t, i) {
                var o =
                    "undefined" != typeof Uint8Array &&
                    "undefined" != typeof Uint16Array &&
                    "undefined" != typeof Uint32Array,
                  a = e("pako");
                (i.uncompressInputType = o ? "uint8array" : "array"),
                  (i.compressInputType = o ? "uint8array" : "array"),
                  (i.magic = "\b\0"),
                  (i.compress = function (e) {
                    return a.deflateRaw(e);
                  }),
                  (i.uncompress = function (e) {
                    return a.inflateRaw(e);
                  });
              },
              { pako: 24 },
            ],
            9: [
              function (e, t, i) {
                var o = e("./base64");
                function a(e, t) {
                  if (!(this instanceof a)) return new a(e, t);
                  (this.files = {}),
                    (this.comment = null),
                    (this.root = ""),
                    e && this.load(e, t),
                    (this.clone = function () {
                      var e = new a();
                      for (var t in this)
                        "function" != typeof this[t] && (e[t] = this[t]);
                      return e;
                    });
                }
                (a.prototype = e("./object")),
                  (a.prototype.load = e("./load")),
                  (a.support = e("./support")),
                  (a.defaults = e("./defaults")),
                  (a.utils = e("./deprecatedPublicUtils")),
                  (a.base64 = {
                    encode: function (e) {
                      return o.encode(e);
                    },
                    decode: function (e) {
                      return o.decode(e);
                    },
                  }),
                  (a.compressions = e("./compressions")),
                  (t.exports = a);
              },
              {
                "./base64": 1,
                "./compressions": 3,
                "./defaults": 6,
                "./deprecatedPublicUtils": 7,
                "./load": 10,
                "./object": 11,
                "./support": 15,
              },
            ],
            10: [
              function (e, t, i) {
                var o = e("./base64"),
                  a = e("./zipEntries");
                t.exports = function (e, t) {
                  var i, n, s, r;
                  for (
                    (t = t || {}).base64 && (e = o.decode(e)),
                      i = (n = new a(e, t)).files,
                      s = 0;
                    s < i.length;
                    s++
                  )
                    (r = i[s]),
                      this.file(r.fileName, r.decompressed, {
                        binary: !0,
                        optimizedBinaryString: !0,
                        date: r.date,
                        dir: r.dir,
                        comment: r.fileComment.length ? r.fileComment : null,
                      });
                  return (
                    n.zipComment.length && (this.comment = n.zipComment), this
                  );
                };
              },
              { "./base64": 1, "./zipEntries": 20 },
            ],
            11: [
              function (e, t, i) {
                var o,
                  a = e("./support"),
                  n = e("./utils"),
                  s = e("./crc32"),
                  r = e("./signature"),
                  l = e("./defaults"),
                  c = e("./base64"),
                  d = e("./compressions"),
                  u = e("./compressedObject"),
                  p = e("./nodeBuffer"),
                  h = e("./utf8"),
                  m = e("./stringWriter"),
                  f = e("./uint8ArrayWriter");
                a.uint8array &&
                  "function" == typeof TextEncoder &&
                  (o = new TextEncoder("utf-8"));
                var g = function (e) {
                    if (
                      e._data instanceof u &&
                      ((e._data = e._data.getContent()),
                      (e.options.binary = !0),
                      (e.options.base64 = !1),
                      "uint8array" === n.getTypeOf(e._data))
                    ) {
                      var t = e._data;
                      (e._data = new Uint8Array(t.length)),
                        0 !== t.length && e._data.set(t, 0);
                    }
                    return e._data;
                  },
                  v = function (e) {
                    var t = g(e);
                    if ("string" === n.getTypeOf(t)) {
                      if (!e.options.binary) {
                        if (o) return o.encode(t);
                        if (a.nodebuffer) return p(t, "utf-8");
                      }
                      return e.asBinary();
                    }
                    return t;
                  },
                  b = function (e) {
                    var t = g(this);
                    return null == t
                      ? ""
                      : (this.options.base64 && (t = c.decode(t)),
                        (t =
                          e && this.options.binary
                            ? _.utf8decode(t)
                            : n.transformTo("string", t)),
                        e ||
                          this.options.binary ||
                          (t = n.transformTo("string", _.utf8encode(t))),
                        t);
                  },
                  y = function (e, t, i) {
                    (this.name = e),
                      (this.dir = i.dir),
                      (this.date = i.date),
                      (this.comment = i.comment),
                      (this._data = t),
                      (this.options = i),
                      (this._initialMetadata = { dir: i.dir, date: i.date });
                  };
                y.prototype = {
                  asText: function () {
                    return b.call(this, !0);
                  },
                  asBinary: function () {
                    return b.call(this, !1);
                  },
                  asNodeBuffer: function () {
                    var e = v(this);
                    return n.transformTo("nodebuffer", e);
                  },
                  asUint8Array: function () {
                    var e = v(this);
                    return n.transformTo("uint8array", e);
                  },
                  asArrayBuffer: function () {
                    return this.asUint8Array().buffer;
                  },
                };
                var w = function (e, t) {
                    var i,
                      o = "";
                    for (i = 0; i < t; i++)
                      (o += String.fromCharCode(255 & e)), (e >>>= 8);
                    return o;
                  },
                  x = function () {
                    var e,
                      t,
                      i = {};
                    for (e = 0; e < arguments.length; e++)
                      for (t in arguments[e])
                        arguments[e].hasOwnProperty(t) &&
                          void 0 === i[t] &&
                          (i[t] = arguments[e][t]);
                    return i;
                  },
                  T = function (e) {
                    return (
                      !0 !== (e = e || {}).base64 ||
                        (null !== e.binary && void 0 !== e.binary) ||
                        (e.binary = !0),
                      ((e = x(e, l)).date = e.date || new Date()),
                      null !== e.compression &&
                        (e.compression = e.compression.toUpperCase()),
                      e
                    );
                  },
                  C = function (e, t, i) {
                    var o = n.getTypeOf(t);
                    if ((i = T(i)).dir || null == t)
                      (i.base64 = !1), (i.binary = !1), (t = null);
                    else if ("string" === o)
                      i.binary &&
                        !i.base64 &&
                        !0 !== i.optimizedBinaryString &&
                        (t = n.string2binary(t));
                    else {
                      if (
                        ((i.base64 = !1),
                        (i.binary = !0),
                        !(o || t instanceof u))
                      )
                        throw new Error(
                          "The data of '" +
                            e +
                            "' is in an unsupported format !"
                        );
                      "arraybuffer" === o &&
                        (t = n.transformTo("uint8array", t));
                    }
                    var a = new y(e, t, i);
                    return (this.files[e] = a), a;
                  },
                  k = function (e) {
                    return (
                      "/" != e.slice(-1) && (e += "/"),
                      this.files[e] || C.call(this, e, null, { dir: !0 }),
                      this.files[e]
                    );
                  },
                  S = function (e, t) {
                    var i,
                      o = new u();
                    return (
                      e._data instanceof u
                        ? ((o.uncompressedSize = e._data.uncompressedSize),
                          (o.crc32 = e._data.crc32),
                          0 === o.uncompressedSize || e.dir
                            ? ((t = d.STORE),
                              (o.compressedContent = ""),
                              (o.crc32 = 0))
                            : e._data.compressionMethod === t.magic
                            ? (o.compressedContent =
                                e._data.getCompressedContent())
                            : ((i = e._data.getContent()),
                              (o.compressedContent = t.compress(
                                n.transformTo(t.compressInputType, i)
                              ))))
                        : (((i = v(e)) && 0 !== i.length && !e.dir) ||
                            ((t = d.STORE), (i = "")),
                          (o.uncompressedSize = i.length),
                          (o.crc32 = s(i)),
                          (o.compressedContent = t.compress(
                            n.transformTo(t.compressInputType, i)
                          ))),
                      (o.compressedSize = o.compressedContent.length),
                      (o.compressionMethod = t.magic),
                      o
                    );
                  },
                  $ = function (e, t, i, o) {
                    i.compressedContent;
                    var a,
                      l,
                      c,
                      d,
                      u = n.transformTo("string", h.utf8encode(t.name)),
                      p = t.comment || "",
                      m = n.transformTo("string", h.utf8encode(p)),
                      f = u.length !== t.name.length,
                      g = m.length !== p.length,
                      v = t.options,
                      b = "",
                      y = "",
                      x = "";
                    (c = t._initialMetadata.dir !== t.dir ? t.dir : v.dir),
                      (a = (d =
                        t._initialMetadata.date !== t.date
                          ? t.date
                          : v.date).getHours()),
                      (a <<= 6),
                      (a |= d.getMinutes()),
                      (a <<= 5),
                      (a |= d.getSeconds() / 2),
                      (l = d.getFullYear() - 1980),
                      (l <<= 4),
                      (l |= d.getMonth() + 1),
                      (l <<= 5),
                      (l |= d.getDate()),
                      f &&
                        ((y = w(1, 1) + w(s(u), 4) + u),
                        (b += "up" + w(y.length, 2) + y)),
                      g &&
                        ((x = w(1, 1) + w(this.crc32(m), 4) + m),
                        (b += "uc" + w(x.length, 2) + x));
                    var T = "";
                    return (
                      (T += "\n\0"),
                      (T += f || g ? "\0\b" : "\0\0"),
                      (T += i.compressionMethod),
                      (T += w(a, 2)),
                      (T += w(l, 2)),
                      (T += w(i.crc32, 4)),
                      (T += w(i.compressedSize, 4)),
                      (T += w(i.uncompressedSize, 4)),
                      (T += w(u.length, 2)),
                      (T += w(b.length, 2)),
                      {
                        fileRecord: r.LOCAL_FILE_HEADER + T + u + b,
                        dirRecord:
                          r.CENTRAL_FILE_HEADER +
                          "\0" +
                          T +
                          w(m.length, 2) +
                          "\0\0\0\0" +
                          (!0 === c ? "\0\0\0" : "\0\0\0\0") +
                          w(o, 4) +
                          u +
                          b +
                          m,
                        compressedObject: i,
                      }
                    );
                  },
                  _ = {
                    load: function (e, t) {
                      throw new Error(
                        "Load method is not defined. Is the file jszip-load.js included ?"
                      );
                    },
                    filter: function (e) {
                      var t,
                        i,
                        o,
                        a,
                        n = [];
                      for (t in this.files)
                        this.files.hasOwnProperty(t) &&
                          ((o = this.files[t]),
                          (a = new y(o.name, o._data, x(o.options))),
                          (i = t.slice(this.root.length, t.length)),
                          t.slice(0, this.root.length) === this.root &&
                            e(i, a) &&
                            n.push(a));
                      return n;
                    },
                    file: function (e, t, i) {
                      if (1 === arguments.length) {
                        if (n.isRegExp(e)) {
                          var o = e;
                          return this.filter(function (e, t) {
                            return !t.dir && o.test(e);
                          });
                        }
                        return (
                          this.filter(function (t, i) {
                            return !i.dir && t === e;
                          })[0] || null
                        );
                      }
                      return (e = this.root + e), C.call(this, e, t, i), this;
                    },
                    folder: function (e) {
                      if (!e) return this;
                      if (n.isRegExp(e))
                        return this.filter(function (t, i) {
                          return i.dir && e.test(t);
                        });
                      var t = this.root + e,
                        i = k.call(this, t),
                        o = this.clone();
                      return (o.root = i.name), o;
                    },
                    remove: function (e) {
                      e = this.root + e;
                      var t = this.files[e];
                      if (
                        (t ||
                          ("/" != e.slice(-1) && (e += "/"),
                          (t = this.files[e])),
                        t && !t.dir)
                      )
                        delete this.files[e];
                      else
                        for (
                          var i = this.filter(function (t, i) {
                              return i.name.slice(0, e.length) === e;
                            }),
                            o = 0;
                          o < i.length;
                          o++
                        )
                          delete this.files[i[o].name];
                      return this;
                    },
                    generate: function (e) {
                      (e = x(e || {}, {
                        base64: !0,
                        compression: "STORE",
                        type: "base64",
                        comment: null,
                      })),
                        n.checkSupport(e.type);
                      var t,
                        i,
                        o = [],
                        a = 0,
                        s = 0,
                        l = n.transformTo(
                          "string",
                          this.utf8encode(e.comment || this.comment || "")
                        );
                      for (var u in this.files)
                        if (this.files.hasOwnProperty(u)) {
                          var p = this.files[u],
                            h =
                              p.options.compression ||
                              e.compression.toUpperCase(),
                            g = d[h];
                          if (!g)
                            throw new Error(
                              h + " is not a valid compression method !"
                            );
                          var v = S.call(this, p, g),
                            b = $.call(this, u, p, v, a);
                          (a += b.fileRecord.length + v.compressedSize),
                            (s += b.dirRecord.length),
                            o.push(b);
                        }
                      var y = "";
                      y =
                        r.CENTRAL_DIRECTORY_END +
                        "\0\0\0\0" +
                        w(o.length, 2) +
                        w(o.length, 2) +
                        w(s, 4) +
                        w(a, 4) +
                        w(l.length, 2) +
                        l;
                      var T = e.type.toLowerCase();
                      for (
                        t =
                          "uint8array" === T ||
                          "arraybuffer" === T ||
                          "blob" === T ||
                          "nodebuffer" === T
                            ? new f(a + s + y.length)
                            : new m(a + s + y.length),
                          i = 0;
                        i < o.length;
                        i++
                      )
                        t.append(o[i].fileRecord),
                          t.append(o[i].compressedObject.compressedContent);
                      for (i = 0; i < o.length; i++) t.append(o[i].dirRecord);
                      t.append(y);
                      var C = t.finalize();
                      switch (e.type.toLowerCase()) {
                        case "uint8array":
                        case "arraybuffer":
                        case "nodebuffer":
                          return n.transformTo(e.type.toLowerCase(), C);
                        case "blob":
                          return n.arrayBuffer2Blob(
                            n.transformTo("arraybuffer", C)
                          );
                        case "base64":
                          return e.base64 ? c.encode(C) : C;
                        default:
                          return C;
                      }
                    },
                    crc32: function (e, t) {
                      return s(e, t);
                    },
                    utf8encode: function (e) {
                      return n.transformTo("string", h.utf8encode(e));
                    },
                    utf8decode: function (e) {
                      return h.utf8decode(e);
                    },
                  };
                t.exports = _;
              },
              {
                "./base64": 1,
                "./compressedObject": 2,
                "./compressions": 3,
                "./crc32": 4,
                "./defaults": 6,
                "./nodeBuffer": 22,
                "./signature": 12,
                "./stringWriter": 14,
                "./support": 15,
                "./uint8ArrayWriter": 17,
                "./utf8": 18,
                "./utils": 19,
              },
            ],
            12: [
              function (e, t, i) {
                (i.LOCAL_FILE_HEADER = "PK"),
                  (i.CENTRAL_FILE_HEADER = "PK"),
                  (i.CENTRAL_DIRECTORY_END = "PK"),
                  (i.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK"),
                  (i.ZIP64_CENTRAL_DIRECTORY_END = "PK"),
                  (i.DATA_DESCRIPTOR = "PK\b");
              },
              {},
            ],
            13: [
              function (e, t, i) {
                var o = e("./dataReader"),
                  a = e("./utils");
                function n(e, t) {
                  (this.data = e),
                    t || (this.data = a.string2binary(this.data)),
                    (this.length = this.data.length),
                    (this.index = 0);
                }
                (n.prototype = new o()),
                  (n.prototype.byteAt = function (e) {
                    return this.data.charCodeAt(e);
                  }),
                  (n.prototype.lastIndexOfSignature = function (e) {
                    return this.data.lastIndexOf(e);
                  }),
                  (n.prototype.readData = function (e) {
                    this.checkOffset(e);
                    var t = this.data.slice(this.index, this.index + e);
                    return (this.index += e), t;
                  }),
                  (t.exports = n);
              },
              { "./dataReader": 5, "./utils": 19 },
            ],
            14: [
              function (e, t, i) {
                var o = e("./utils"),
                  a = function () {
                    this.data = [];
                  };
                (a.prototype = {
                  append: function (e) {
                    (e = o.transformTo("string", e)), this.data.push(e);
                  },
                  finalize: function () {
                    return this.data.join("");
                  },
                }),
                  (t.exports = a);
              },
              { "./utils": 19 },
            ],
            15: [
              function (e, t, i) {
                (function (e) {
                  if (
                    ((i.base64 = !0),
                    (i.array = !0),
                    (i.string = !0),
                    (i.arraybuffer =
                      "undefined" != typeof ArrayBuffer &&
                      "undefined" != typeof Uint8Array),
                    (i.nodebuffer = !e.browser),
                    (i.uint8array = "undefined" != typeof Uint8Array),
                    "undefined" == typeof ArrayBuffer)
                  )
                    i.blob = !1;
                  else {
                    var t = new ArrayBuffer(0);
                    try {
                      i.blob =
                        0 === new Blob([t], { type: "application/zip" }).size;
                    } catch (e) {
                      try {
                        var o = new (window.BlobBuilder ||
                          window.WebKitBlobBuilder ||
                          window.MozBlobBuilder ||
                          window.MSBlobBuilder)();
                        o.append(t),
                          (i.blob = 0 === o.getBlob("application/zip").size);
                      } catch (e) {
                        i.blob = !1;
                      }
                    }
                  }
                }.call(this, e("FWaASH")));
              },
              { FWaASH: 23 },
            ],
            16: [
              function (e, t, i) {
                var o = e("./dataReader");
                function a(e) {
                  e &&
                    ((this.data = e),
                    (this.length = this.data.length),
                    (this.index = 0));
                }
                (a.prototype = new o()),
                  (a.prototype.byteAt = function (e) {
                    return this.data[e];
                  }),
                  (a.prototype.lastIndexOfSignature = function (e) {
                    for (
                      var t = e.charCodeAt(0),
                        i = e.charCodeAt(1),
                        o = e.charCodeAt(2),
                        a = e.charCodeAt(3),
                        n = this.length - 4;
                      n >= 0;
                      --n
                    )
                      if (
                        this.data[n] === t &&
                        this.data[n + 1] === i &&
                        this.data[n + 2] === o &&
                        this.data[n + 3] === a
                      )
                        return n;
                    return -1;
                  }),
                  (a.prototype.readData = function (e) {
                    if ((this.checkOffset(e), 0 === e))
                      return new Uint8Array(0);
                    var t = this.data.subarray(this.index, this.index + e);
                    return (this.index += e), t;
                  }),
                  (t.exports = a);
              },
              { "./dataReader": 5 },
            ],
            17: [
              function (e, t, i) {
                var o = e("./utils"),
                  a = function (e) {
                    (this.data = new Uint8Array(e)), (this.index = 0);
                  };
                (a.prototype = {
                  append: function (e) {
                    0 !== e.length &&
                      ((e = o.transformTo("uint8array", e)),
                      this.data.set(e, this.index),
                      (this.index += e.length));
                  },
                  finalize: function () {
                    return this.data;
                  },
                }),
                  (t.exports = a);
              },
              { "./utils": 19 },
            ],
            18: [
              function (e, t, i) {
                var o,
                  a,
                  n = e("./utils"),
                  s = e("./support"),
                  r = e("./nodeBuffer");
                s.uint8array &&
                  "function" == typeof TextEncoder &&
                  "function" == typeof TextDecoder &&
                  ((o = new TextEncoder("utf-8")),
                  (a = new TextDecoder("utf-8")));
                for (var l = new Array(256), c = 0; c < 256; c++)
                  l[c] =
                    c >= 252
                      ? 6
                      : c >= 248
                      ? 5
                      : c >= 240
                      ? 4
                      : c >= 224
                      ? 3
                      : c >= 192
                      ? 2
                      : 1;
                l[254] = l[254] = 1;
                var d = function (e) {
                    var t,
                      i,
                      o,
                      a,
                      n,
                      r = e.length,
                      l = 0;
                    for (a = 0; a < r; a++)
                      55296 == (64512 & (i = e.charCodeAt(a))) &&
                        a + 1 < r &&
                        56320 == (64512 & (o = e.charCodeAt(a + 1))) &&
                        ((i = 65536 + ((i - 55296) << 10) + (o - 56320)), a++),
                        (l += i < 128 ? 1 : i < 2048 ? 2 : i < 65536 ? 3 : 4);
                    for (
                      t = s.uint8array ? new Uint8Array(l) : new Array(l),
                        n = 0,
                        a = 0;
                      n < l;
                      a++
                    )
                      55296 == (64512 & (i = e.charCodeAt(a))) &&
                        a + 1 < r &&
                        56320 == (64512 & (o = e.charCodeAt(a + 1))) &&
                        ((i = 65536 + ((i - 55296) << 10) + (o - 56320)), a++),
                        i < 128
                          ? (t[n++] = i)
                          : i < 2048
                          ? ((t[n++] = 192 | (i >>> 6)),
                            (t[n++] = 128 | (63 & i)))
                          : i < 65536
                          ? ((t[n++] = 224 | (i >>> 12)),
                            (t[n++] = 128 | ((i >>> 6) & 63)),
                            (t[n++] = 128 | (63 & i)))
                          : ((t[n++] = 240 | (i >>> 18)),
                            (t[n++] = 128 | ((i >>> 12) & 63)),
                            (t[n++] = 128 | ((i >>> 6) & 63)),
                            (t[n++] = 128 | (63 & i)));
                    return t;
                  },
                  u = function (e, t) {
                    var i;
                    for (
                      (t = t || e.length) > e.length && (t = e.length),
                        i = t - 1;
                      i >= 0 && 128 == (192 & e[i]);

                    )
                      i--;
                    return i < 0 || 0 === i ? t : i + l[e[i]] > t ? i : t;
                  },
                  p = function (e) {
                    var t,
                      i,
                      o,
                      a,
                      s = e.length,
                      r = new Array(2 * s);
                    for (i = 0, t = 0; t < s; )
                      if ((o = e[t++]) < 128) r[i++] = o;
                      else if ((a = l[o]) > 4) (r[i++] = 65533), (t += a - 1);
                      else {
                        for (
                          o &= 2 === a ? 31 : 3 === a ? 15 : 7;
                          a > 1 && t < s;

                        )
                          (o = (o << 6) | (63 & e[t++])), a--;
                        a > 1
                          ? (r[i++] = 65533)
                          : o < 65536
                          ? (r[i++] = o)
                          : ((o -= 65536),
                            (r[i++] = 55296 | ((o >> 10) & 1023)),
                            (r[i++] = 56320 | (1023 & o)));
                      }
                    return (
                      r.length !== i &&
                        (r.subarray ? (r = r.subarray(0, i)) : (r.length = i)),
                      n.applyFromCharCode(r)
                    );
                  };
                (i.utf8encode = function (e) {
                  return o ? o.encode(e) : s.nodebuffer ? r(e, "utf-8") : d(e);
                }),
                  (i.utf8decode = function (e) {
                    if (a) return a.decode(n.transformTo("uint8array", e));
                    if (s.nodebuffer)
                      return n.transformTo("nodebuffer", e).toString("utf-8");
                    for (
                      var t = [],
                        i = 0,
                        o = (e = n.transformTo(
                          s.uint8array ? "uint8array" : "array",
                          e
                        )).length,
                        r = 65536;
                      i < o;

                    ) {
                      var l = u(e, Math.min(i + r, o));
                      s.uint8array
                        ? t.push(p(e.subarray(i, l)))
                        : t.push(p(e.slice(i, l))),
                        (i = l);
                    }
                    return t.join("");
                  });
              },
              { "./nodeBuffer": 22, "./support": 15, "./utils": 19 },
            ],
            19: [
              function (e, t, i) {
                var o = e("./support"),
                  a = e("./compressions"),
                  n = e("./nodeBuffer");
                function s(e) {
                  return e;
                }
                function r(e, t) {
                  for (var i = 0; i < e.length; ++i)
                    t[i] = 255 & e.charCodeAt(i);
                  return t;
                }
                function l(e) {
                  var t = 65536,
                    o = [],
                    a = e.length,
                    s = i.getTypeOf(e),
                    r = 0,
                    l = !0;
                  try {
                    switch (s) {
                      case "uint8array":
                        String.fromCharCode.apply(null, new Uint8Array(0));
                        break;
                      case "nodebuffer":
                        String.fromCharCode.apply(null, n(0));
                    }
                  } catch (e) {
                    l = !1;
                  }
                  if (!l) {
                    for (var c = "", d = 0; d < e.length; d++)
                      c += String.fromCharCode(e[d]);
                    return c;
                  }
                  for (; r < a && t > 1; )
                    try {
                      "array" === s || "nodebuffer" === s
                        ? o.push(
                            String.fromCharCode.apply(
                              null,
                              e.slice(r, Math.min(r + t, a))
                            )
                          )
                        : o.push(
                            String.fromCharCode.apply(
                              null,
                              e.subarray(r, Math.min(r + t, a))
                            )
                          ),
                        (r += t);
                    } catch (e) {
                      t = Math.floor(t / 2);
                    }
                  return o.join("");
                }
                function c(e, t) {
                  for (var i = 0; i < e.length; i++) t[i] = e[i];
                  return t;
                }
                (i.string2binary = function (e) {
                  for (var t = "", i = 0; i < e.length; i++)
                    t += String.fromCharCode(255 & e.charCodeAt(i));
                  return t;
                }),
                  (i.arrayBuffer2Blob = function (e) {
                    i.checkSupport("blob");
                    try {
                      return new Blob([e], { type: "application/zip" });
                    } catch (i) {
                      try {
                        var t = new (window.BlobBuilder ||
                          window.WebKitBlobBuilder ||
                          window.MozBlobBuilder ||
                          window.MSBlobBuilder)();
                        return t.append(e), t.getBlob("application/zip");
                      } catch (e) {
                        throw new Error("Bug : can't construct the Blob.");
                      }
                    }
                  }),
                  (i.applyFromCharCode = l);
                var d = {};
                (d.string = {
                  string: s,
                  array: function (e) {
                    return r(e, new Array(e.length));
                  },
                  arraybuffer: function (e) {
                    return d.string.uint8array(e).buffer;
                  },
                  uint8array: function (e) {
                    return r(e, new Uint8Array(e.length));
                  },
                  nodebuffer: function (e) {
                    return r(e, n(e.length));
                  },
                }),
                  (d.array = {
                    string: l,
                    array: s,
                    arraybuffer: function (e) {
                      return new Uint8Array(e).buffer;
                    },
                    uint8array: function (e) {
                      return new Uint8Array(e);
                    },
                    nodebuffer: function (e) {
                      return n(e);
                    },
                  }),
                  (d.arraybuffer = {
                    string: function (e) {
                      return l(new Uint8Array(e));
                    },
                    array: function (e) {
                      return c(new Uint8Array(e), new Array(e.byteLength));
                    },
                    arraybuffer: s,
                    uint8array: function (e) {
                      return new Uint8Array(e);
                    },
                    nodebuffer: function (e) {
                      return n(new Uint8Array(e));
                    },
                  }),
                  (d.uint8array = {
                    string: l,
                    array: function (e) {
                      return c(e, new Array(e.length));
                    },
                    arraybuffer: function (e) {
                      return e.buffer;
                    },
                    uint8array: s,
                    nodebuffer: function (e) {
                      return n(e);
                    },
                  }),
                  (d.nodebuffer = {
                    string: l,
                    array: function (e) {
                      return c(e, new Array(e.length));
                    },
                    arraybuffer: function (e) {
                      return d.nodebuffer.uint8array(e).buffer;
                    },
                    uint8array: function (e) {
                      return c(e, new Uint8Array(e.length));
                    },
                    nodebuffer: s,
                  }),
                  (i.transformTo = function (e, t) {
                    if ((t || (t = ""), !e)) return t;
                    i.checkSupport(e);
                    var o = i.getTypeOf(t);
                    return d[o][e](t);
                  }),
                  (i.getTypeOf = function (e) {
                    return "string" == typeof e
                      ? "string"
                      : "[object Array]" === Object.prototype.toString.call(e)
                      ? "array"
                      : o.nodebuffer && n.test(e)
                      ? "nodebuffer"
                      : o.uint8array && e instanceof Uint8Array
                      ? "uint8array"
                      : o.arraybuffer && e instanceof ArrayBuffer
                      ? "arraybuffer"
                      : void 0;
                  }),
                  (i.checkSupport = function (e) {
                    if (!o[e.toLowerCase()])
                      throw new Error(e + " is not supported by this browser");
                  }),
                  (i.MAX_VALUE_16BITS = 65535),
                  (i.MAX_VALUE_32BITS = -1),
                  (i.pretty = function (e) {
                    var t,
                      i,
                      o = "";
                    for (i = 0; i < (e || "").length; i++)
                      o +=
                        "\\x" +
                        ((t = e.charCodeAt(i)) < 16 ? "0" : "") +
                        t.toString(16).toUpperCase();
                    return o;
                  }),
                  (i.findCompression = function (e) {
                    for (var t in a)
                      if (a.hasOwnProperty(t) && a[t].magic === e) return a[t];
                    return null;
                  }),
                  (i.isRegExp = function (e) {
                    return (
                      "[object RegExp]" === Object.prototype.toString.call(e)
                    );
                  });
              },
              { "./compressions": 3, "./nodeBuffer": 22, "./support": 15 },
            ],
            20: [
              function (e, t, i) {
                var o = e("./stringReader"),
                  a = e("./nodeBufferReader"),
                  n = e("./uint8ArrayReader"),
                  s = e("./utils"),
                  r = e("./signature"),
                  l = e("./zipEntry"),
                  c = e("./support"),
                  d = e("./object");
                function u(e, t) {
                  (this.files = []), (this.loadOptions = t), e && this.load(e);
                }
                (u.prototype = {
                  checkSignature: function (e) {
                    var t = this.reader.readString(4);
                    if (t !== e)
                      throw new Error(
                        "Corrupted zip or bug : unexpected signature (" +
                          s.pretty(t) +
                          ", expected " +
                          s.pretty(e) +
                          ")"
                      );
                  },
                  readBlockEndOfCentral: function () {
                    (this.diskNumber = this.reader.readInt(2)),
                      (this.diskWithCentralDirStart = this.reader.readInt(2)),
                      (this.centralDirRecordsOnThisDisk =
                        this.reader.readInt(2)),
                      (this.centralDirRecords = this.reader.readInt(2)),
                      (this.centralDirSize = this.reader.readInt(4)),
                      (this.centralDirOffset = this.reader.readInt(4)),
                      (this.zipCommentLength = this.reader.readInt(2)),
                      (this.zipComment = this.reader.readString(
                        this.zipCommentLength
                      )),
                      (this.zipComment = d.utf8decode(this.zipComment));
                  },
                  readBlockZip64EndOfCentral: function () {
                    (this.zip64EndOfCentralSize = this.reader.readInt(8)),
                      (this.versionMadeBy = this.reader.readString(2)),
                      (this.versionNeeded = this.reader.readInt(2)),
                      (this.diskNumber = this.reader.readInt(4)),
                      (this.diskWithCentralDirStart = this.reader.readInt(4)),
                      (this.centralDirRecordsOnThisDisk =
                        this.reader.readInt(8)),
                      (this.centralDirRecords = this.reader.readInt(8)),
                      (this.centralDirSize = this.reader.readInt(8)),
                      (this.centralDirOffset = this.reader.readInt(8)),
                      (this.zip64ExtensibleData = {});
                    for (
                      var e, t, i, o = this.zip64EndOfCentralSize - 44, a = 0;
                      a < o;

                    )
                      (e = this.reader.readInt(2)),
                        (t = this.reader.readInt(4)),
                        (i = this.reader.readString(t)),
                        (this.zip64ExtensibleData[e] = {
                          id: e,
                          length: t,
                          value: i,
                        });
                  },
                  readBlockZip64EndOfCentralLocator: function () {
                    if (
                      ((this.diskWithZip64CentralDirStart =
                        this.reader.readInt(4)),
                      (this.relativeOffsetEndOfZip64CentralDir =
                        this.reader.readInt(8)),
                      (this.disksCount = this.reader.readInt(4)),
                      this.disksCount > 1)
                    )
                      throw new Error("Multi-volumes zip are not supported");
                  },
                  readLocalFiles: function () {
                    var e, t;
                    for (e = 0; e < this.files.length; e++)
                      (t = this.files[e]),
                        this.reader.setIndex(t.localHeaderOffset),
                        this.checkSignature(r.LOCAL_FILE_HEADER),
                        t.readLocalPart(this.reader),
                        t.handleUTF8();
                  },
                  readCentralDir: function () {
                    var e;
                    for (
                      this.reader.setIndex(this.centralDirOffset);
                      this.reader.readString(4) === r.CENTRAL_FILE_HEADER;

                    )
                      (e = new l(
                        { zip64: this.zip64 },
                        this.loadOptions
                      )).readCentralPart(this.reader),
                        this.files.push(e);
                  },
                  readEndOfCentral: function () {
                    var e = this.reader.lastIndexOfSignature(
                      r.CENTRAL_DIRECTORY_END
                    );
                    if (-1 === e)
                      throw new Error(
                        "Corrupted zip : can't find end of central directory"
                      );
                    if (
                      (this.reader.setIndex(e),
                      this.checkSignature(r.CENTRAL_DIRECTORY_END),
                      this.readBlockEndOfCentral(),
                      this.diskNumber === s.MAX_VALUE_16BITS ||
                        this.diskWithCentralDirStart === s.MAX_VALUE_16BITS ||
                        this.centralDirRecordsOnThisDisk ===
                          s.MAX_VALUE_16BITS ||
                        this.centralDirRecords === s.MAX_VALUE_16BITS ||
                        this.centralDirSize === s.MAX_VALUE_32BITS ||
                        this.centralDirOffset === s.MAX_VALUE_32BITS)
                    ) {
                      if (
                        ((this.zip64 = !0),
                        -1 ===
                          (e = this.reader.lastIndexOfSignature(
                            r.ZIP64_CENTRAL_DIRECTORY_LOCATOR
                          )))
                      )
                        throw new Error(
                          "Corrupted zip : can't find the ZIP64 end of central directory locator"
                        );
                      this.reader.setIndex(e),
                        this.checkSignature(r.ZIP64_CENTRAL_DIRECTORY_LOCATOR),
                        this.readBlockZip64EndOfCentralLocator(),
                        this.reader.setIndex(
                          this.relativeOffsetEndOfZip64CentralDir
                        ),
                        this.checkSignature(r.ZIP64_CENTRAL_DIRECTORY_END),
                        this.readBlockZip64EndOfCentral();
                    }
                  },
                  prepareReader: function (e) {
                    var t = s.getTypeOf(e);
                    "string" !== t || c.uint8array
                      ? (this.reader =
                          "nodebuffer" === t
                            ? new a(e)
                            : new n(s.transformTo("uint8array", e)))
                      : (this.reader = new o(
                          e,
                          this.loadOptions.optimizedBinaryString
                        ));
                  },
                  load: function (e) {
                    this.prepareReader(e),
                      this.readEndOfCentral(),
                      this.readCentralDir(),
                      this.readLocalFiles();
                  },
                }),
                  (t.exports = u);
              },
              {
                "./nodeBufferReader": 22,
                "./object": 11,
                "./signature": 12,
                "./stringReader": 13,
                "./support": 15,
                "./uint8ArrayReader": 16,
                "./utils": 19,
                "./zipEntry": 21,
              },
            ],
            21: [
              function (e, t, i) {
                var o = e("./stringReader"),
                  a = e("./utils"),
                  n = e("./compressedObject"),
                  s = e("./object");
                function r(e, t) {
                  (this.options = e), (this.loadOptions = t);
                }
                (r.prototype = {
                  isEncrypted: function () {
                    return 1 == (1 & this.bitFlag);
                  },
                  useUTF8: function () {
                    return 2048 == (2048 & this.bitFlag);
                  },
                  prepareCompressedContent: function (e, t, i) {
                    return function () {
                      var o = e.index;
                      e.setIndex(t);
                      var a = e.readData(i);
                      return e.setIndex(o), a;
                    };
                  },
                  prepareContent: function (e, t, i, o, n) {
                    return function () {
                      var e = a.transformTo(
                          o.uncompressInputType,
                          this.getCompressedContent()
                        ),
                        t = o.uncompress(e);
                      if (t.length !== n)
                        throw new Error(
                          "Bug : uncompressed data size mismatch"
                        );
                      return t;
                    };
                  },
                  readLocalPart: function (e) {
                    var t, i;
                    if (
                      (e.skip(22),
                      (this.fileNameLength = e.readInt(2)),
                      (i = e.readInt(2)),
                      (this.fileName = e.readString(this.fileNameLength)),
                      e.skip(i),
                      -1 == this.compressedSize || -1 == this.uncompressedSize)
                    )
                      throw new Error(
                        "Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)"
                      );
                    if (
                      null === (t = a.findCompression(this.compressionMethod))
                    )
                      throw new Error(
                        "Corrupted zip : compression " +
                          a.pretty(this.compressionMethod) +
                          " unknown (inner file : " +
                          this.fileName +
                          ")"
                      );
                    if (
                      ((this.decompressed = new n()),
                      (this.decompressed.compressedSize = this.compressedSize),
                      (this.decompressed.uncompressedSize =
                        this.uncompressedSize),
                      (this.decompressed.crc32 = this.crc32),
                      (this.decompressed.compressionMethod =
                        this.compressionMethod),
                      (this.decompressed.getCompressedContent =
                        this.prepareCompressedContent(
                          e,
                          e.index,
                          this.compressedSize,
                          t
                        )),
                      (this.decompressed.getContent = this.prepareContent(
                        e,
                        e.index,
                        this.compressedSize,
                        t,
                        this.uncompressedSize
                      )),
                      this.loadOptions.checkCRC32 &&
                        ((this.decompressed = a.transformTo(
                          "string",
                          this.decompressed.getContent()
                        )),
                        s.crc32(this.decompressed) !== this.crc32))
                    )
                      throw new Error("Corrupted zip : CRC32 mismatch");
                  },
                  readCentralPart: function (e) {
                    if (
                      ((this.versionMadeBy = e.readString(2)),
                      (this.versionNeeded = e.readInt(2)),
                      (this.bitFlag = e.readInt(2)),
                      (this.compressionMethod = e.readString(2)),
                      (this.date = e.readDate()),
                      (this.crc32 = e.readInt(4)),
                      (this.compressedSize = e.readInt(4)),
                      (this.uncompressedSize = e.readInt(4)),
                      (this.fileNameLength = e.readInt(2)),
                      (this.extraFieldsLength = e.readInt(2)),
                      (this.fileCommentLength = e.readInt(2)),
                      (this.diskNumberStart = e.readInt(2)),
                      (this.internalFileAttributes = e.readInt(2)),
                      (this.externalFileAttributes = e.readInt(4)),
                      (this.localHeaderOffset = e.readInt(4)),
                      this.isEncrypted())
                    )
                      throw new Error("Encrypted zip are not supported");
                    (this.fileName = e.readString(this.fileNameLength)),
                      this.readExtraFields(e),
                      this.parseZIP64ExtraField(e),
                      (this.fileComment = e.readString(this.fileCommentLength)),
                      (this.dir = !!(16 & this.externalFileAttributes));
                  },
                  parseZIP64ExtraField: function (e) {
                    if (this.extraFields[1]) {
                      var t = new o(this.extraFields[1].value);
                      this.uncompressedSize === a.MAX_VALUE_32BITS &&
                        (this.uncompressedSize = t.readInt(8)),
                        this.compressedSize === a.MAX_VALUE_32BITS &&
                          (this.compressedSize = t.readInt(8)),
                        this.localHeaderOffset === a.MAX_VALUE_32BITS &&
                          (this.localHeaderOffset = t.readInt(8)),
                        this.diskNumberStart === a.MAX_VALUE_32BITS &&
                          (this.diskNumberStart = t.readInt(4));
                    }
                  },
                  readExtraFields: function (e) {
                    var t,
                      i,
                      o,
                      a = e.index;
                    for (
                      this.extraFields = this.extraFields || {};
                      e.index < a + this.extraFieldsLength;

                    )
                      (t = e.readInt(2)),
                        (i = e.readInt(2)),
                        (o = e.readString(i)),
                        (this.extraFields[t] = { id: t, length: i, value: o });
                  },
                  handleUTF8: function () {
                    if (this.useUTF8())
                      (this.fileName = s.utf8decode(this.fileName)),
                        (this.fileComment = s.utf8decode(this.fileComment));
                    else {
                      var e = this.findExtraFieldUnicodePath();
                      null !== e && (this.fileName = e);
                      var t = this.findExtraFieldUnicodeComment();
                      null !== t && (this.fileComment = t);
                    }
                  },
                  findExtraFieldUnicodePath: function () {
                    var e = this.extraFields[28789];
                    if (e) {
                      var t = new o(e.value);
                      return 1 !== t.readInt(1) ||
                        s.crc32(this.fileName) !== t.readInt(4)
                        ? null
                        : s.utf8decode(t.readString(e.length - 5));
                    }
                    return null;
                  },
                  findExtraFieldUnicodeComment: function () {
                    var e = this.extraFields[25461];
                    if (e) {
                      var t = new o(e.value);
                      return 1 !== t.readInt(1) ||
                        s.crc32(this.fileComment) !== t.readInt(4)
                        ? null
                        : s.utf8decode(t.readString(e.length - 5));
                    }
                    return null;
                  },
                }),
                  (t.exports = r);
              },
              {
                "./compressedObject": 2,
                "./object": 11,
                "./stringReader": 13,
                "./utils": 19,
              },
            ],
            22: [function (e, t, i) {}, {}],
            23: [
              function (e, t, i) {
                var o = (t.exports = {});
                function a() {}
                (o.nextTick = (function () {
                  var e = "undefined" != typeof window && window.setImmediate,
                    t =
                      "undefined" != typeof window &&
                      window.postMessage &&
                      window.addEventListener;
                  if (e)
                    return function (e) {
                      return window.setImmediate(e);
                    };
                  if (t) {
                    var i = [];
                    return (
                      window.addEventListener(
                        "message",
                        function (e) {
                          var t = e.source;
                          (t !== window && null !== t) ||
                            "process-tick" !== e.data ||
                            (e.stopPropagation(), i.length > 0 && i.shift()());
                        },
                        !0
                      ),
                      function (e) {
                        i.push(e), window.postMessage("process-tick", "*");
                      }
                    );
                  }
                  return function (e) {
                    setTimeout(e, 0);
                  };
                })()),
                  (o.title = "browser"),
                  (o.browser = !0),
                  (o.env = {}),
                  (o.argv = []),
                  (o.on = a),
                  (o.addListener = a),
                  (o.once = a),
                  (o.off = a),
                  (o.removeListener = a),
                  (o.removeAllListeners = a),
                  (o.emit = a),
                  (o.binding = function (e) {
                    throw new Error("process.binding is not supported");
                  }),
                  (o.cwd = function () {
                    return "/";
                  }),
                  (o.chdir = function (e) {
                    throw new Error("process.chdir is not supported");
                  });
              },
              {},
            ],
            24: [
              function (e, t, i) {
                var o = {};
                (0, e("./lib/utils/common").assign)(
                  o,
                  e("./lib/deflate"),
                  e("./lib/inflate"),
                  e("./lib/zlib/constants")
                ),
                  (t.exports = o);
              },
              {
                "./lib/deflate": 25,
                "./lib/inflate": 26,
                "./lib/utils/common": 27,
                "./lib/zlib/constants": 30,
              },
            ],
            25: [
              function (e, t, i) {
                var o = e("./zlib/deflate.js"),
                  a = e("./utils/common"),
                  n = e("./utils/strings"),
                  s = e("./zlib/messages"),
                  r = e("./zlib/zstream"),
                  l = 0,
                  c = 4,
                  d = 0,
                  u = 1,
                  p = -1,
                  h = 0,
                  m = 8,
                  f = function (e) {
                    this.options = a.assign(
                      {
                        level: p,
                        method: m,
                        chunkSize: 16384,
                        windowBits: 15,
                        memLevel: 8,
                        strategy: h,
                        to: "",
                      },
                      e || {}
                    );
                    var t = this.options;
                    t.raw && t.windowBits > 0
                      ? (t.windowBits = -t.windowBits)
                      : t.gzip &&
                        t.windowBits > 0 &&
                        t.windowBits < 16 &&
                        (t.windowBits += 16),
                      (this.err = 0),
                      (this.msg = ""),
                      (this.ended = !1),
                      (this.chunks = []),
                      (this.strm = new r()),
                      (this.strm.avail_out = 0);
                    var i = o.deflateInit2(
                      this.strm,
                      t.level,
                      t.method,
                      t.windowBits,
                      t.memLevel,
                      t.strategy
                    );
                    if (i !== d) throw new Error(s[i]);
                    t.header && o.deflateSetHeader(this.strm, t.header);
                  };
                function g(e, t) {
                  var i = new f(t);
                  if ((i.push(e, !0), i.err)) throw i.msg;
                  return i.result;
                }
                function v(e, t) {
                  return ((t = t || {}).raw = !0), g(e, t);
                }
                function b(e, t) {
                  return ((t = t || {}).gzip = !0), g(e, t);
                }
                (f.prototype.push = function (e, t) {
                  var i,
                    s,
                    r = this.strm,
                    p = this.options.chunkSize;
                  if (this.ended) return !1;
                  (s = t === ~~t ? t : !0 === t ? c : l),
                    (r.input = "string" == typeof e ? n.string2buf(e) : e),
                    (r.next_in = 0),
                    (r.avail_in = r.input.length);
                  do {
                    if (
                      (0 === r.avail_out &&
                        ((r.output = new a.Buf8(p)),
                        (r.next_out = 0),
                        (r.avail_out = p)),
                      (i = o.deflate(r, s)) !== u && i !== d)
                    )
                      return this.onEnd(i), (this.ended = !0), !1;
                    (0 === r.avail_out || (0 === r.avail_in && s === c)) &&
                      ("string" === this.options.to
                        ? this.onData(
                            n.buf2binstring(a.shrinkBuf(r.output, r.next_out))
                          )
                        : this.onData(a.shrinkBuf(r.output, r.next_out)));
                  } while ((r.avail_in > 0 || 0 === r.avail_out) && i !== u);
                  return (
                    s !== c ||
                    ((i = o.deflateEnd(this.strm)),
                    this.onEnd(i),
                    (this.ended = !0),
                    i === d)
                  );
                }),
                  (f.prototype.onData = function (e) {
                    this.chunks.push(e);
                  }),
                  (f.prototype.onEnd = function (e) {
                    e === d &&
                      ("string" === this.options.to
                        ? (this.result = this.chunks.join(""))
                        : (this.result = a.flattenChunks(this.chunks))),
                      (this.chunks = []),
                      (this.err = e),
                      (this.msg = this.strm.msg);
                  }),
                  (i.Deflate = f),
                  (i.deflate = g),
                  (i.deflateRaw = v),
                  (i.gzip = b);
              },
              {
                "./utils/common": 27,
                "./utils/strings": 28,
                "./zlib/deflate.js": 32,
                "./zlib/messages": 37,
                "./zlib/zstream": 39,
              },
            ],
            26: [
              function (e, t, i) {
                var o = e("./zlib/inflate.js"),
                  a = e("./utils/common"),
                  n = e("./utils/strings"),
                  s = e("./zlib/constants"),
                  r = e("./zlib/messages"),
                  l = e("./zlib/zstream"),
                  c = e("./zlib/gzheader"),
                  d = function (e) {
                    this.options = a.assign(
                      { chunkSize: 16384, windowBits: 0, to: "" },
                      e || {}
                    );
                    var t = this.options;
                    t.raw &&
                      t.windowBits >= 0 &&
                      t.windowBits < 16 &&
                      ((t.windowBits = -t.windowBits),
                      0 === t.windowBits && (t.windowBits = -15)),
                      !(t.windowBits >= 0 && t.windowBits < 16) ||
                        (e && e.windowBits) ||
                        (t.windowBits += 32),
                      t.windowBits > 15 &&
                        t.windowBits < 48 &&
                        0 == (15 & t.windowBits) &&
                        (t.windowBits |= 15),
                      (this.err = 0),
                      (this.msg = ""),
                      (this.ended = !1),
                      (this.chunks = []),
                      (this.strm = new l()),
                      (this.strm.avail_out = 0);
                    var i = o.inflateInit2(this.strm, t.windowBits);
                    if (i !== s.Z_OK) throw new Error(r[i]);
                    (this.header = new c()),
                      o.inflateGetHeader(this.strm, this.header);
                  };
                function u(e, t) {
                  var i = new d(t);
                  if ((i.push(e, !0), i.err)) throw i.msg;
                  return i.result;
                }
                function p(e, t) {
                  return ((t = t || {}).raw = !0), u(e, t);
                }
                (d.prototype.push = function (e, t) {
                  var i,
                    r,
                    l,
                    c,
                    d,
                    u = this.strm,
                    p = this.options.chunkSize;
                  if (this.ended) return !1;
                  (r = t === ~~t ? t : !0 === t ? s.Z_FINISH : s.Z_NO_FLUSH),
                    (u.input = "string" == typeof e ? n.binstring2buf(e) : e),
                    (u.next_in = 0),
                    (u.avail_in = u.input.length);
                  do {
                    if (
                      (0 === u.avail_out &&
                        ((u.output = new a.Buf8(p)),
                        (u.next_out = 0),
                        (u.avail_out = p)),
                      (i = o.inflate(u, s.Z_NO_FLUSH)) !== s.Z_STREAM_END &&
                        i !== s.Z_OK)
                    )
                      return this.onEnd(i), (this.ended = !0), !1;
                    u.next_out &&
                      (0 === u.avail_out ||
                        i === s.Z_STREAM_END ||
                        (0 === u.avail_in && r === s.Z_FINISH)) &&
                      ("string" === this.options.to
                        ? ((l = n.utf8border(u.output, u.next_out)),
                          (c = u.next_out - l),
                          (d = n.buf2string(u.output, l)),
                          (u.next_out = c),
                          (u.avail_out = p - c),
                          c && a.arraySet(u.output, u.output, l, c, 0),
                          this.onData(d))
                        : this.onData(a.shrinkBuf(u.output, u.next_out)));
                  } while (
                    (u.avail_in > 0 || 0 === u.avail_out) &&
                    i !== s.Z_STREAM_END
                  );
                  return (
                    i === s.Z_STREAM_END && (r = s.Z_FINISH),
                    r !== s.Z_FINISH ||
                      ((i = o.inflateEnd(this.strm)),
                      this.onEnd(i),
                      (this.ended = !0),
                      i === s.Z_OK)
                  );
                }),
                  (d.prototype.onData = function (e) {
                    this.chunks.push(e);
                  }),
                  (d.prototype.onEnd = function (e) {
                    e === s.Z_OK &&
                      ("string" === this.options.to
                        ? (this.result = this.chunks.join(""))
                        : (this.result = a.flattenChunks(this.chunks))),
                      (this.chunks = []),
                      (this.err = e),
                      (this.msg = this.strm.msg);
                  }),
                  (i.Inflate = d),
                  (i.inflate = u),
                  (i.inflateRaw = p),
                  (i.ungzip = u);
              },
              {
                "./utils/common": 27,
                "./utils/strings": 28,
                "./zlib/constants": 30,
                "./zlib/gzheader": 33,
                "./zlib/inflate.js": 35,
                "./zlib/messages": 37,
                "./zlib/zstream": 39,
              },
            ],
            27: [
              function (e, t, i) {
                var o =
                  "undefined" != typeof Uint8Array &&
                  "undefined" != typeof Uint16Array &&
                  "undefined" != typeof Int32Array;
                (i.assign = function (e) {
                  for (
                    var t = Array.prototype.slice.call(arguments, 1);
                    t.length;

                  ) {
                    var i = t.shift();
                    if (i) {
                      if ("object" != typeof i)
                        throw new TypeError(i + "must be non-object");
                      for (var o in i) i.hasOwnProperty(o) && (e[o] = i[o]);
                    }
                  }
                  return e;
                }),
                  (i.shrinkBuf = function (e, t) {
                    return e.length === t
                      ? e
                      : e.subarray
                      ? e.subarray(0, t)
                      : ((e.length = t), e);
                  });
                var a = {
                    arraySet: function (e, t, i, o, a) {
                      if (t.subarray && e.subarray)
                        e.set(t.subarray(i, i + o), a);
                      else for (var n = 0; n < o; n++) e[a + n] = t[i + n];
                    },
                    flattenChunks: function (e) {
                      var t, i, o, a, n, s;
                      for (o = 0, t = 0, i = e.length; t < i; t++)
                        o += e[t].length;
                      for (
                        s = new Uint8Array(o), a = 0, t = 0, i = e.length;
                        t < i;
                        t++
                      )
                        (n = e[t]), s.set(n, a), (a += n.length);
                      return s;
                    },
                  },
                  n = {
                    arraySet: function (e, t, i, o, a) {
                      for (var n = 0; n < o; n++) e[a + n] = t[i + n];
                    },
                    flattenChunks: function (e) {
                      return [].concat.apply([], e);
                    },
                  };
                (i.setTyped = function (e) {
                  e
                    ? ((i.Buf8 = Uint8Array),
                      (i.Buf16 = Uint16Array),
                      (i.Buf32 = Int32Array),
                      i.assign(i, a))
                    : ((i.Buf8 = Array),
                      (i.Buf16 = Array),
                      (i.Buf32 = Array),
                      i.assign(i, n));
                }),
                  i.setTyped(o);
              },
              {},
            ],
            28: [
              function (e, t, i) {
                var o = e("./common"),
                  a = !0,
                  n = !0;
                try {
                  String.fromCharCode.apply(null, [0]);
                } catch (e) {
                  a = !1;
                }
                try {
                  String.fromCharCode.apply(null, new Uint8Array(1));
                } catch (e) {
                  n = !1;
                }
                for (var s = new o.Buf8(256), r = 0; r < 256; r++)
                  s[r] =
                    r >= 252
                      ? 6
                      : r >= 248
                      ? 5
                      : r >= 240
                      ? 4
                      : r >= 224
                      ? 3
                      : r >= 192
                      ? 2
                      : 1;
                function l(e, t) {
                  if (t < 65537 && ((e.subarray && n) || (!e.subarray && a)))
                    return String.fromCharCode.apply(null, o.shrinkBuf(e, t));
                  for (var i = "", s = 0; s < t; s++)
                    i += String.fromCharCode(e[s]);
                  return i;
                }
                (s[254] = s[254] = 1),
                  (i.string2buf = function (e) {
                    var t,
                      i,
                      a,
                      n,
                      s,
                      r = e.length,
                      l = 0;
                    for (n = 0; n < r; n++)
                      55296 == (64512 & (i = e.charCodeAt(n))) &&
                        n + 1 < r &&
                        56320 == (64512 & (a = e.charCodeAt(n + 1))) &&
                        ((i = 65536 + ((i - 55296) << 10) + (a - 56320)), n++),
                        (l += i < 128 ? 1 : i < 2048 ? 2 : i < 65536 ? 3 : 4);
                    for (t = new o.Buf8(l), s = 0, n = 0; s < l; n++)
                      55296 == (64512 & (i = e.charCodeAt(n))) &&
                        n + 1 < r &&
                        56320 == (64512 & (a = e.charCodeAt(n + 1))) &&
                        ((i = 65536 + ((i - 55296) << 10) + (a - 56320)), n++),
                        i < 128
                          ? (t[s++] = i)
                          : i < 2048
                          ? ((t[s++] = 192 | (i >>> 6)),
                            (t[s++] = 128 | (63 & i)))
                          : i < 65536
                          ? ((t[s++] = 224 | (i >>> 12)),
                            (t[s++] = 128 | ((i >>> 6) & 63)),
                            (t[s++] = 128 | (63 & i)))
                          : ((t[s++] = 240 | (i >>> 18)),
                            (t[s++] = 128 | ((i >>> 12) & 63)),
                            (t[s++] = 128 | ((i >>> 6) & 63)),
                            (t[s++] = 128 | (63 & i)));
                    return t;
                  }),
                  (i.buf2binstring = function (e) {
                    return l(e, e.length);
                  }),
                  (i.binstring2buf = function (e) {
                    for (
                      var t = new o.Buf8(e.length), i = 0, a = t.length;
                      i < a;
                      i++
                    )
                      t[i] = e.charCodeAt(i);
                    return t;
                  }),
                  (i.buf2string = function (e, t) {
                    var i,
                      o,
                      a,
                      n,
                      r = t || e.length,
                      c = new Array(2 * r);
                    for (o = 0, i = 0; i < r; )
                      if ((a = e[i++]) < 128) c[o++] = a;
                      else if ((n = s[a]) > 4) (c[o++] = 65533), (i += n - 1);
                      else {
                        for (
                          a &= 2 === n ? 31 : 3 === n ? 15 : 7;
                          n > 1 && i < r;

                        )
                          (a = (a << 6) | (63 & e[i++])), n--;
                        n > 1
                          ? (c[o++] = 65533)
                          : a < 65536
                          ? (c[o++] = a)
                          : ((a -= 65536),
                            (c[o++] = 55296 | ((a >> 10) & 1023)),
                            (c[o++] = 56320 | (1023 & a)));
                      }
                    return l(c, o);
                  }),
                  (i.utf8border = function (e, t) {
                    var i;
                    for (
                      (t = t || e.length) > e.length && (t = e.length),
                        i = t - 1;
                      i >= 0 && 128 == (192 & e[i]);

                    )
                      i--;
                    return i < 0 || 0 === i ? t : i + s[e[i]] > t ? i : t;
                  });
              },
              { "./common": 27 },
            ],
            29: [
              function (e, t, i) {
                function o(e, t, i, o) {
                  for (
                    var a = (65535 & e) | 0,
                      n = ((e >>> 16) & 65535) | 0,
                      s = 0;
                    0 !== i;

                  ) {
                    i -= s = i > 2e3 ? 2e3 : i;
                    do {
                      n = (n + (a = (a + t[o++]) | 0)) | 0;
                    } while (--s);
                    (a %= 65521), (n %= 65521);
                  }
                  return a | (n << 16) | 0;
                }
                t.exports = o;
              },
              {},
            ],
            30: [
              function (e, t, i) {
                t.exports = {
                  Z_NO_FLUSH: 0,
                  Z_PARTIAL_FLUSH: 1,
                  Z_SYNC_FLUSH: 2,
                  Z_FULL_FLUSH: 3,
                  Z_FINISH: 4,
                  Z_BLOCK: 5,
                  Z_TREES: 6,
                  Z_OK: 0,
                  Z_STREAM_END: 1,
                  Z_NEED_DICT: 2,
                  Z_ERRNO: -1,
                  Z_STREAM_ERROR: -2,
                  Z_DATA_ERROR: -3,
                  Z_BUF_ERROR: -5,
                  Z_NO_COMPRESSION: 0,
                  Z_BEST_SPEED: 1,
                  Z_BEST_COMPRESSION: 9,
                  Z_DEFAULT_COMPRESSION: -1,
                  Z_FILTERED: 1,
                  Z_HUFFMAN_ONLY: 2,
                  Z_RLE: 3,
                  Z_FIXED: 4,
                  Z_DEFAULT_STRATEGY: 0,
                  Z_BINARY: 0,
                  Z_TEXT: 1,
                  Z_UNKNOWN: 2,
                  Z_DEFLATED: 8,
                };
              },
              {},
            ],
            31: [
              function (e, t, i) {
                function o() {
                  for (var e, t = [], i = 0; i < 256; i++) {
                    e = i;
                    for (var o = 0; o < 8; o++)
                      e = 1 & e ? 3988292384 ^ (e >>> 1) : e >>> 1;
                    t[i] = e;
                  }
                  return t;
                }
                var a = o();
                function n(e, t, i, o) {
                  var n = a,
                    s = o + i;
                  e ^= -1;
                  for (var r = o; r < s; r++)
                    e = (e >>> 8) ^ n[255 & (e ^ t[r])];
                  return -1 ^ e;
                }
                t.exports = n;
              },
              {},
            ],
            32: [
              function (e, t, i) {
                var o = e("../utils/common"),
                  a = e("./trees"),
                  n = e("./adler32"),
                  s = e("./crc32"),
                  r = e("./messages"),
                  l = 0,
                  c = 1,
                  d = 3,
                  u = 4,
                  p = 5,
                  h = 0,
                  m = 1,
                  f = -2,
                  g = -3,
                  v = -5,
                  b = -1,
                  y = 1,
                  w = 2,
                  x = 3,
                  T = 4,
                  C = 0,
                  k = 2,
                  S = 8,
                  $ = 9,
                  _ = 15,
                  E = 8,
                  D = 256 + 1 + 29,
                  N = 30,
                  M = 19,
                  I = 2 * D + 1,
                  R = 15,
                  F = 3,
                  A = 258,
                  O = A + F + 1,
                  z = 32,
                  L = 42,
                  j = 69,
                  P = 73,
                  H = 91,
                  U = 103,
                  V = 113,
                  W = 666,
                  B = 1,
                  q = 2,
                  Y = 3,
                  G = 4,
                  X = 3;
                function K(e, t) {
                  return (e.msg = r[t]), t;
                }
                function J(e) {
                  return (e << 1) - (e > 4 ? 9 : 0);
                }
                function Z(e) {
                  for (var t = e.length; --t >= 0; ) e[t] = 0;
                }
                function Q(e) {
                  var t = e.state,
                    i = t.pending;
                  i > e.avail_out && (i = e.avail_out),
                    0 !== i &&
                      (o.arraySet(
                        e.output,
                        t.pending_buf,
                        t.pending_out,
                        i,
                        e.next_out
                      ),
                      (e.next_out += i),
                      (t.pending_out += i),
                      (e.total_out += i),
                      (e.avail_out -= i),
                      (t.pending -= i),
                      0 === t.pending && (t.pending_out = 0));
                }
                function ee(e, t) {
                  a._tr_flush_block(
                    e,
                    e.block_start >= 0 ? e.block_start : -1,
                    e.strstart - e.block_start,
                    t
                  ),
                    (e.block_start = e.strstart),
                    Q(e.strm);
                }
                function te(e, t) {
                  e.pending_buf[e.pending++] = t;
                }
                function ie(e, t) {
                  (e.pending_buf[e.pending++] = (t >>> 8) & 255),
                    (e.pending_buf[e.pending++] = 255 & t);
                }
                function oe(e, t, i, a) {
                  var r = e.avail_in;
                  return (
                    r > a && (r = a),
                    0 === r
                      ? 0
                      : ((e.avail_in -= r),
                        o.arraySet(t, e.input, e.next_in, r, i),
                        1 === e.state.wrap
                          ? (e.adler = n(e.adler, t, r, i))
                          : 2 === e.state.wrap &&
                            (e.adler = s(e.adler, t, r, i)),
                        (e.next_in += r),
                        (e.total_in += r),
                        r)
                  );
                }
                function ae(e, t) {
                  var i,
                    o,
                    a = e.max_chain_length,
                    n = e.strstart,
                    s = e.prev_length,
                    r = e.nice_match,
                    l =
                      e.strstart > e.w_size - O
                        ? e.strstart - (e.w_size - O)
                        : 0,
                    c = e.window,
                    d = e.w_mask,
                    u = e.prev,
                    p = e.strstart + A,
                    h = c[n + s - 1],
                    m = c[n + s];
                  e.prev_length >= e.good_match && (a >>= 2),
                    r > e.lookahead && (r = e.lookahead);
                  do {
                    if (
                      c[(i = t) + s] === m &&
                      c[i + s - 1] === h &&
                      c[i] === c[n] &&
                      c[++i] === c[n + 1]
                    ) {
                      (n += 2), i++;
                      do {} while (
                        c[++n] === c[++i] &&
                        c[++n] === c[++i] &&
                        c[++n] === c[++i] &&
                        c[++n] === c[++i] &&
                        c[++n] === c[++i] &&
                        c[++n] === c[++i] &&
                        c[++n] === c[++i] &&
                        c[++n] === c[++i] &&
                        n < p
                      );
                      if (((o = A - (p - n)), (n = p - A), o > s)) {
                        if (((e.match_start = t), (s = o), o >= r)) break;
                        (h = c[n + s - 1]), (m = c[n + s]);
                      }
                    }
                  } while ((t = u[t & d]) > l && 0 != --a);
                  return s <= e.lookahead ? s : e.lookahead;
                }
                function ne(e) {
                  var t,
                    i,
                    a,
                    n,
                    s,
                    r = e.w_size;
                  do {
                    if (
                      ((n = e.window_size - e.lookahead - e.strstart),
                      e.strstart >= r + (r - O))
                    ) {
                      o.arraySet(e.window, e.window, r, r, 0),
                        (e.match_start -= r),
                        (e.strstart -= r),
                        (e.block_start -= r),
                        (t = i = e.hash_size);
                      do {
                        (a = e.head[--t]), (e.head[t] = a >= r ? a - r : 0);
                      } while (--i);
                      t = i = r;
                      do {
                        (a = e.prev[--t]), (e.prev[t] = a >= r ? a - r : 0);
                      } while (--i);
                      n += r;
                    }
                    if (0 === e.strm.avail_in) break;
                    if (
                      ((i = oe(e.strm, e.window, e.strstart + e.lookahead, n)),
                      (e.lookahead += i),
                      e.lookahead + e.insert >= F)
                    )
                      for (
                        s = e.strstart - e.insert,
                          e.ins_h = e.window[s],
                          e.ins_h =
                            ((e.ins_h << e.hash_shift) ^ e.window[s + 1]) &
                            e.hash_mask;
                        e.insert &&
                        ((e.ins_h =
                          ((e.ins_h << e.hash_shift) ^ e.window[s + F - 1]) &
                          e.hash_mask),
                        (e.prev[s & e.w_mask] = e.head[e.ins_h]),
                        (e.head[e.ins_h] = s),
                        s++,
                        e.insert--,
                        !(e.lookahead + e.insert < F));

                      );
                  } while (e.lookahead < O && 0 !== e.strm.avail_in);
                }
                function se(e, t) {
                  var i = 65535;
                  for (
                    i > e.pending_buf_size - 5 && (i = e.pending_buf_size - 5);
                    ;

                  ) {
                    if (e.lookahead <= 1) {
                      if ((ne(e), 0 === e.lookahead && t === l)) return B;
                      if (0 === e.lookahead) break;
                    }
                    (e.strstart += e.lookahead), (e.lookahead = 0);
                    var o = e.block_start + i;
                    if (
                      (0 === e.strstart || e.strstart >= o) &&
                      ((e.lookahead = e.strstart - o),
                      (e.strstart = o),
                      ee(e, !1),
                      0 === e.strm.avail_out)
                    )
                      return B;
                    if (
                      e.strstart - e.block_start >= e.w_size - O &&
                      (ee(e, !1), 0 === e.strm.avail_out)
                    )
                      return B;
                  }
                  return (
                    (e.insert = 0),
                    t === u
                      ? (ee(e, !0), 0 === e.strm.avail_out ? Y : G)
                      : (e.strstart > e.block_start &&
                          (ee(e, !1), e.strm.avail_out),
                        B)
                  );
                }
                function re(e, t) {
                  for (var i, o; ; ) {
                    if (e.lookahead < O) {
                      if ((ne(e), e.lookahead < O && t === l)) return B;
                      if (0 === e.lookahead) break;
                    }
                    if (
                      ((i = 0),
                      e.lookahead >= F &&
                        ((e.ins_h =
                          ((e.ins_h << e.hash_shift) ^
                            e.window[e.strstart + F - 1]) &
                          e.hash_mask),
                        (i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
                        (e.head[e.ins_h] = e.strstart)),
                      0 !== i &&
                        e.strstart - i <= e.w_size - O &&
                        (e.match_length = ae(e, i)),
                      e.match_length >= F)
                    )
                      if (
                        ((o = a._tr_tally(
                          e,
                          e.strstart - e.match_start,
                          e.match_length - F
                        )),
                        (e.lookahead -= e.match_length),
                        e.match_length <= e.max_lazy_match && e.lookahead >= F)
                      ) {
                        e.match_length--;
                        do {
                          e.strstart++,
                            (e.ins_h =
                              ((e.ins_h << e.hash_shift) ^
                                e.window[e.strstart + F - 1]) &
                              e.hash_mask),
                            (i = e.prev[e.strstart & e.w_mask] =
                              e.head[e.ins_h]),
                            (e.head[e.ins_h] = e.strstart);
                        } while (0 != --e.match_length);
                        e.strstart++;
                      } else
                        (e.strstart += e.match_length),
                          (e.match_length = 0),
                          (e.ins_h = e.window[e.strstart]),
                          (e.ins_h =
                            ((e.ins_h << e.hash_shift) ^
                              e.window[e.strstart + 1]) &
                            e.hash_mask);
                    else
                      (o = a._tr_tally(e, 0, e.window[e.strstart])),
                        e.lookahead--,
                        e.strstart++;
                    if (o && (ee(e, !1), 0 === e.strm.avail_out)) return B;
                  }
                  return (
                    (e.insert = e.strstart < F - 1 ? e.strstart : F - 1),
                    t === u
                      ? (ee(e, !0), 0 === e.strm.avail_out ? Y : G)
                      : e.last_lit && (ee(e, !1), 0 === e.strm.avail_out)
                      ? B
                      : q
                  );
                }
                function le(e, t) {
                  for (var i, o, n; ; ) {
                    if (e.lookahead < O) {
                      if ((ne(e), e.lookahead < O && t === l)) return B;
                      if (0 === e.lookahead) break;
                    }
                    if (
                      ((i = 0),
                      e.lookahead >= F &&
                        ((e.ins_h =
                          ((e.ins_h << e.hash_shift) ^
                            e.window[e.strstart + F - 1]) &
                          e.hash_mask),
                        (i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
                        (e.head[e.ins_h] = e.strstart)),
                      (e.prev_length = e.match_length),
                      (e.prev_match = e.match_start),
                      (e.match_length = F - 1),
                      0 !== i &&
                        e.prev_length < e.max_lazy_match &&
                        e.strstart - i <= e.w_size - O &&
                        ((e.match_length = ae(e, i)),
                        e.match_length <= 5 &&
                          (e.strategy === y ||
                            (e.match_length === F &&
                              e.strstart - e.match_start > 4096)) &&
                          (e.match_length = F - 1)),
                      e.prev_length >= F && e.match_length <= e.prev_length)
                    ) {
                      (n = e.strstart + e.lookahead - F),
                        (o = a._tr_tally(
                          e,
                          e.strstart - 1 - e.prev_match,
                          e.prev_length - F
                        )),
                        (e.lookahead -= e.prev_length - 1),
                        (e.prev_length -= 2);
                      do {
                        ++e.strstart <= n &&
                          ((e.ins_h =
                            ((e.ins_h << e.hash_shift) ^
                              e.window[e.strstart + F - 1]) &
                            e.hash_mask),
                          (i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h]),
                          (e.head[e.ins_h] = e.strstart));
                      } while (0 != --e.prev_length);
                      if (
                        ((e.match_available = 0),
                        (e.match_length = F - 1),
                        e.strstart++,
                        o && (ee(e, !1), 0 === e.strm.avail_out))
                      )
                        return B;
                    } else if (e.match_available) {
                      if (
                        ((o = a._tr_tally(e, 0, e.window[e.strstart - 1])) &&
                          ee(e, !1),
                        e.strstart++,
                        e.lookahead--,
                        0 === e.strm.avail_out)
                      )
                        return B;
                    } else (e.match_available = 1), e.strstart++, e.lookahead--;
                  }
                  return (
                    e.match_available &&
                      ((o = a._tr_tally(e, 0, e.window[e.strstart - 1])),
                      (e.match_available = 0)),
                    (e.insert = e.strstart < F - 1 ? e.strstart : F - 1),
                    t === u
                      ? (ee(e, !0), 0 === e.strm.avail_out ? Y : G)
                      : e.last_lit && (ee(e, !1), 0 === e.strm.avail_out)
                      ? B
                      : q
                  );
                }
                function ce(e, t) {
                  for (var i, o, n, s, r = e.window; ; ) {
                    if (e.lookahead <= A) {
                      if ((ne(e), e.lookahead <= A && t === l)) return B;
                      if (0 === e.lookahead) break;
                    }
                    if (
                      ((e.match_length = 0),
                      e.lookahead >= F &&
                        e.strstart > 0 &&
                        (o = r[(n = e.strstart - 1)]) === r[++n] &&
                        o === r[++n] &&
                        o === r[++n])
                    ) {
                      s = e.strstart + A;
                      do {} while (
                        o === r[++n] &&
                        o === r[++n] &&
                        o === r[++n] &&
                        o === r[++n] &&
                        o === r[++n] &&
                        o === r[++n] &&
                        o === r[++n] &&
                        o === r[++n] &&
                        n < s
                      );
                      (e.match_length = A - (s - n)),
                        e.match_length > e.lookahead &&
                          (e.match_length = e.lookahead);
                    }
                    if (
                      (e.match_length >= F
                        ? ((i = a._tr_tally(e, 1, e.match_length - F)),
                          (e.lookahead -= e.match_length),
                          (e.strstart += e.match_length),
                          (e.match_length = 0))
                        : ((i = a._tr_tally(e, 0, e.window[e.strstart])),
                          e.lookahead--,
                          e.strstart++),
                      i && (ee(e, !1), 0 === e.strm.avail_out))
                    )
                      return B;
                  }
                  return (
                    (e.insert = 0),
                    t === u
                      ? (ee(e, !0), 0 === e.strm.avail_out ? Y : G)
                      : e.last_lit && (ee(e, !1), 0 === e.strm.avail_out)
                      ? B
                      : q
                  );
                }
                function de(e, t) {
                  for (var i; ; ) {
                    if (0 === e.lookahead && (ne(e), 0 === e.lookahead)) {
                      if (t === l) return B;
                      break;
                    }
                    if (
                      ((e.match_length = 0),
                      (i = a._tr_tally(e, 0, e.window[e.strstart])),
                      e.lookahead--,
                      e.strstart++,
                      i && (ee(e, !1), 0 === e.strm.avail_out))
                    )
                      return B;
                  }
                  return (
                    (e.insert = 0),
                    t === u
                      ? (ee(e, !0), 0 === e.strm.avail_out ? Y : G)
                      : e.last_lit && (ee(e, !1), 0 === e.strm.avail_out)
                      ? B
                      : q
                  );
                }
                var ue,
                  pe = function (e, t, i, o, a) {
                    (this.good_length = e),
                      (this.max_lazy = t),
                      (this.nice_length = i),
                      (this.max_chain = o),
                      (this.func = a);
                  };
                function he(e) {
                  (e.window_size = 2 * e.w_size),
                    Z(e.head),
                    (e.max_lazy_match = ue[e.level].max_lazy),
                    (e.good_match = ue[e.level].good_length),
                    (e.nice_match = ue[e.level].nice_length),
                    (e.max_chain_length = ue[e.level].max_chain),
                    (e.strstart = 0),
                    (e.block_start = 0),
                    (e.lookahead = 0),
                    (e.insert = 0),
                    (e.match_length = e.prev_length = F - 1),
                    (e.match_available = 0),
                    (e.ins_h = 0);
                }
                function me() {
                  (this.strm = null),
                    (this.status = 0),
                    (this.pending_buf = null),
                    (this.pending_buf_size = 0),
                    (this.pending_out = 0),
                    (this.pending = 0),
                    (this.wrap = 0),
                    (this.gzhead = null),
                    (this.gzindex = 0),
                    (this.method = S),
                    (this.last_flush = -1),
                    (this.w_size = 0),
                    (this.w_bits = 0),
                    (this.w_mask = 0),
                    (this.window = null),
                    (this.window_size = 0),
                    (this.prev = null),
                    (this.head = null),
                    (this.ins_h = 0),
                    (this.hash_size = 0),
                    (this.hash_bits = 0),
                    (this.hash_mask = 0),
                    (this.hash_shift = 0),
                    (this.block_start = 0),
                    (this.match_length = 0),
                    (this.prev_match = 0),
                    (this.match_available = 0),
                    (this.strstart = 0),
                    (this.match_start = 0),
                    (this.lookahead = 0),
                    (this.prev_length = 0),
                    (this.max_chain_length = 0),
                    (this.max_lazy_match = 0),
                    (this.level = 0),
                    (this.strategy = 0),
                    (this.good_match = 0),
                    (this.nice_match = 0),
                    (this.dyn_ltree = new o.Buf16(2 * I)),
                    (this.dyn_dtree = new o.Buf16(2 * (2 * N + 1))),
                    (this.bl_tree = new o.Buf16(2 * (2 * M + 1))),
                    Z(this.dyn_ltree),
                    Z(this.dyn_dtree),
                    Z(this.bl_tree),
                    (this.l_desc = null),
                    (this.d_desc = null),
                    (this.bl_desc = null),
                    (this.bl_count = new o.Buf16(R + 1)),
                    (this.heap = new o.Buf16(2 * D + 1)),
                    Z(this.heap),
                    (this.heap_len = 0),
                    (this.heap_max = 0),
                    (this.depth = new o.Buf16(2 * D + 1)),
                    Z(this.depth),
                    (this.l_buf = 0),
                    (this.lit_bufsize = 0),
                    (this.last_lit = 0),
                    (this.d_buf = 0),
                    (this.opt_len = 0),
                    (this.static_len = 0),
                    (this.matches = 0),
                    (this.insert = 0),
                    (this.bi_buf = 0),
                    (this.bi_valid = 0);
                }
                function fe(e) {
                  var t;
                  return e && e.state
                    ? ((e.total_in = e.total_out = 0),
                      (e.data_type = k),
                      ((t = e.state).pending = 0),
                      (t.pending_out = 0),
                      t.wrap < 0 && (t.wrap = -t.wrap),
                      (t.status = t.wrap ? L : V),
                      (e.adler = 2 === t.wrap ? 0 : 1),
                      (t.last_flush = l),
                      a._tr_init(t),
                      h)
                    : K(e, f);
                }
                function ge(e) {
                  var t = fe(e);
                  return t === h && he(e.state), t;
                }
                function ve(e, t) {
                  return e && e.state
                    ? 2 !== e.state.wrap
                      ? f
                      : ((e.state.gzhead = t), h)
                    : f;
                }
                function be(e, t, i, a, n, s) {
                  if (!e) return f;
                  var r = 1;
                  if (
                    (t === b && (t = 6),
                    a < 0
                      ? ((r = 0), (a = -a))
                      : a > 15 && ((r = 2), (a -= 16)),
                    n < 1 ||
                      n > $ ||
                      i !== S ||
                      a < 8 ||
                      a > 15 ||
                      t < 0 ||
                      t > 9 ||
                      s < 0 ||
                      s > T)
                  )
                    return K(e, f);
                  8 === a && (a = 9);
                  var l = new me();
                  return (
                    (e.state = l),
                    (l.strm = e),
                    (l.wrap = r),
                    (l.gzhead = null),
                    (l.w_bits = a),
                    (l.w_size = 1 << l.w_bits),
                    (l.w_mask = l.w_size - 1),
                    (l.hash_bits = n + 7),
                    (l.hash_size = 1 << l.hash_bits),
                    (l.hash_mask = l.hash_size - 1),
                    (l.hash_shift = ~~((l.hash_bits + F - 1) / F)),
                    (l.window = new o.Buf8(2 * l.w_size)),
                    (l.head = new o.Buf16(l.hash_size)),
                    (l.prev = new o.Buf16(l.w_size)),
                    (l.lit_bufsize = 1 << (n + 6)),
                    (l.pending_buf_size = 4 * l.lit_bufsize),
                    (l.pending_buf = new o.Buf8(l.pending_buf_size)),
                    (l.d_buf = l.lit_bufsize >> 1),
                    (l.l_buf = 3 * l.lit_bufsize),
                    (l.level = t),
                    (l.strategy = s),
                    (l.method = i),
                    ge(e)
                  );
                }
                function ye(e, t) {
                  return be(e, t, S, _, E, C);
                }
                function we(e, t) {
                  var i, o, n, r;
                  if (!e || !e.state || t > p || t < 0) return e ? K(e, f) : f;
                  if (
                    ((o = e.state),
                    !e.output ||
                      (!e.input && 0 !== e.avail_in) ||
                      (o.status === W && t !== u))
                  )
                    return K(e, 0 === e.avail_out ? v : f);
                  if (
                    ((o.strm = e),
                    (i = o.last_flush),
                    (o.last_flush = t),
                    o.status === L)
                  )
                    if (2 === o.wrap)
                      (e.adler = 0),
                        te(o, 31),
                        te(o, 139),
                        te(o, 8),
                        o.gzhead
                          ? (te(
                              o,
                              (o.gzhead.text ? 1 : 0) +
                                (o.gzhead.hcrc ? 2 : 0) +
                                (o.gzhead.extra ? 4 : 0) +
                                (o.gzhead.name ? 8 : 0) +
                                (o.gzhead.comment ? 16 : 0)
                            ),
                            te(o, 255 & o.gzhead.time),
                            te(o, (o.gzhead.time >> 8) & 255),
                            te(o, (o.gzhead.time >> 16) & 255),
                            te(o, (o.gzhead.time >> 24) & 255),
                            te(
                              o,
                              9 === o.level
                                ? 2
                                : o.strategy >= w || o.level < 2
                                ? 4
                                : 0
                            ),
                            te(o, 255 & o.gzhead.os),
                            o.gzhead.extra &&
                              o.gzhead.extra.length &&
                              (te(o, 255 & o.gzhead.extra.length),
                              te(o, (o.gzhead.extra.length >> 8) & 255)),
                            o.gzhead.hcrc &&
                              (e.adler = s(
                                e.adler,
                                o.pending_buf,
                                o.pending,
                                0
                              )),
                            (o.gzindex = 0),
                            (o.status = j))
                          : (te(o, 0),
                            te(o, 0),
                            te(o, 0),
                            te(o, 0),
                            te(o, 0),
                            te(
                              o,
                              9 === o.level
                                ? 2
                                : o.strategy >= w || o.level < 2
                                ? 4
                                : 0
                            ),
                            te(o, X),
                            (o.status = V));
                    else {
                      var g = (S + ((o.w_bits - 8) << 4)) << 8;
                      (g |=
                        (o.strategy >= w || o.level < 2
                          ? 0
                          : o.level < 6
                          ? 1
                          : 6 === o.level
                          ? 2
                          : 3) << 6),
                        0 !== o.strstart && (g |= z),
                        (g += 31 - (g % 31)),
                        (o.status = V),
                        ie(o, g),
                        0 !== o.strstart &&
                          (ie(o, e.adler >>> 16), ie(o, 65535 & e.adler)),
                        (e.adler = 1);
                    }
                  if (o.status === j)
                    if (o.gzhead.extra) {
                      for (
                        n = o.pending;
                        o.gzindex < (65535 & o.gzhead.extra.length) &&
                        (o.pending !== o.pending_buf_size ||
                          (o.gzhead.hcrc &&
                            o.pending > n &&
                            (e.adler = s(
                              e.adler,
                              o.pending_buf,
                              o.pending - n,
                              n
                            )),
                          Q(e),
                          (n = o.pending),
                          o.pending !== o.pending_buf_size));

                      )
                        te(o, 255 & o.gzhead.extra[o.gzindex]), o.gzindex++;
                      o.gzhead.hcrc &&
                        o.pending > n &&
                        (e.adler = s(e.adler, o.pending_buf, o.pending - n, n)),
                        o.gzindex === o.gzhead.extra.length &&
                          ((o.gzindex = 0), (o.status = P));
                    } else o.status = P;
                  if (o.status === P)
                    if (o.gzhead.name) {
                      n = o.pending;
                      do {
                        if (
                          o.pending === o.pending_buf_size &&
                          (o.gzhead.hcrc &&
                            o.pending > n &&
                            (e.adler = s(
                              e.adler,
                              o.pending_buf,
                              o.pending - n,
                              n
                            )),
                          Q(e),
                          (n = o.pending),
                          o.pending === o.pending_buf_size)
                        ) {
                          r = 1;
                          break;
                        }
                        (r =
                          o.gzindex < o.gzhead.name.length
                            ? 255 & o.gzhead.name.charCodeAt(o.gzindex++)
                            : 0),
                          te(o, r);
                      } while (0 !== r);
                      o.gzhead.hcrc &&
                        o.pending > n &&
                        (e.adler = s(e.adler, o.pending_buf, o.pending - n, n)),
                        0 === r && ((o.gzindex = 0), (o.status = H));
                    } else o.status = H;
                  if (o.status === H)
                    if (o.gzhead.comment) {
                      n = o.pending;
                      do {
                        if (
                          o.pending === o.pending_buf_size &&
                          (o.gzhead.hcrc &&
                            o.pending > n &&
                            (e.adler = s(
                              e.adler,
                              o.pending_buf,
                              o.pending - n,
                              n
                            )),
                          Q(e),
                          (n = o.pending),
                          o.pending === o.pending_buf_size)
                        ) {
                          r = 1;
                          break;
                        }
                        (r =
                          o.gzindex < o.gzhead.comment.length
                            ? 255 & o.gzhead.comment.charCodeAt(o.gzindex++)
                            : 0),
                          te(o, r);
                      } while (0 !== r);
                      o.gzhead.hcrc &&
                        o.pending > n &&
                        (e.adler = s(e.adler, o.pending_buf, o.pending - n, n)),
                        0 === r && (o.status = U);
                    } else o.status = U;
                  if (
                    (o.status === U &&
                      (o.gzhead.hcrc
                        ? (o.pending + 2 > o.pending_buf_size && Q(e),
                          o.pending + 2 <= o.pending_buf_size &&
                            (te(o, 255 & e.adler),
                            te(o, (e.adler >> 8) & 255),
                            (e.adler = 0),
                            (o.status = V)))
                        : (o.status = V)),
                    0 !== o.pending)
                  ) {
                    if ((Q(e), 0 === e.avail_out))
                      return (o.last_flush = -1), h;
                  } else if (0 === e.avail_in && J(t) <= J(i) && t !== u)
                    return K(e, v);
                  if (o.status === W && 0 !== e.avail_in) return K(e, v);
                  if (
                    0 !== e.avail_in ||
                    0 !== o.lookahead ||
                    (t !== l && o.status !== W)
                  ) {
                    var b =
                      o.strategy === w
                        ? de(o, t)
                        : o.strategy === x
                        ? ce(o, t)
                        : ue[o.level].func(o, t);
                    if (
                      ((b !== Y && b !== G) || (o.status = W),
                      b === B || b === Y)
                    )
                      return 0 === e.avail_out && (o.last_flush = -1), h;
                    if (
                      b === q &&
                      (t === c
                        ? a._tr_align(o)
                        : t !== p &&
                          (a._tr_stored_block(o, 0, 0, !1),
                          t === d &&
                            (Z(o.head),
                            0 === o.lookahead &&
                              ((o.strstart = 0),
                              (o.block_start = 0),
                              (o.insert = 0)))),
                      Q(e),
                      0 === e.avail_out)
                    )
                      return (o.last_flush = -1), h;
                  }
                  return t !== u
                    ? h
                    : o.wrap <= 0
                    ? m
                    : (2 === o.wrap
                        ? (te(o, 255 & e.adler),
                          te(o, (e.adler >> 8) & 255),
                          te(o, (e.adler >> 16) & 255),
                          te(o, (e.adler >> 24) & 255),
                          te(o, 255 & e.total_in),
                          te(o, (e.total_in >> 8) & 255),
                          te(o, (e.total_in >> 16) & 255),
                          te(o, (e.total_in >> 24) & 255))
                        : (ie(o, e.adler >>> 16), ie(o, 65535 & e.adler)),
                      Q(e),
                      o.wrap > 0 && (o.wrap = -o.wrap),
                      0 !== o.pending ? h : m);
                }
                function xe(e) {
                  var t;
                  return e && e.state
                    ? (t = e.state.status) !== L &&
                      t !== j &&
                      t !== P &&
                      t !== H &&
                      t !== U &&
                      t !== V &&
                      t !== W
                      ? K(e, f)
                      : ((e.state = null), t === V ? K(e, g) : h)
                    : f;
                }
                (ue = [
                  new pe(0, 0, 0, 0, se),
                  new pe(4, 4, 8, 4, re),
                  new pe(4, 5, 16, 8, re),
                  new pe(4, 6, 32, 32, re),
                  new pe(4, 4, 16, 16, le),
                  new pe(8, 16, 32, 32, le),
                  new pe(8, 16, 128, 128, le),
                  new pe(8, 32, 128, 256, le),
                  new pe(32, 128, 258, 1024, le),
                  new pe(32, 258, 258, 4096, le),
                ]),
                  (i.deflateInit = ye),
                  (i.deflateInit2 = be),
                  (i.deflateReset = ge),
                  (i.deflateResetKeep = fe),
                  (i.deflateSetHeader = ve),
                  (i.deflate = we),
                  (i.deflateEnd = xe),
                  (i.deflateInfo = "pako deflate (from Nodeca project)");
              },
              {
                "../utils/common": 27,
                "./adler32": 29,
                "./crc32": 31,
                "./messages": 37,
                "./trees": 38,
              },
            ],
            33: [
              function (e, t, i) {
                function o() {
                  (this.text = 0),
                    (this.time = 0),
                    (this.xflags = 0),
                    (this.os = 0),
                    (this.extra = null),
                    (this.extra_len = 0),
                    (this.name = ""),
                    (this.comment = ""),
                    (this.hcrc = 0),
                    (this.done = !1);
                }
                t.exports = o;
              },
              {},
            ],
            34: [
              function (e, t, i) {
                var o = 30,
                  a = 12;
                t.exports = function (e, t) {
                  var i,
                    n,
                    s,
                    r,
                    l,
                    c,
                    d,
                    u,
                    p,
                    h,
                    m,
                    f,
                    g,
                    v,
                    b,
                    y,
                    w,
                    x,
                    T,
                    C,
                    k,
                    S,
                    $,
                    _,
                    E;
                  (i = e.state),
                    (n = e.next_in),
                    (_ = e.input),
                    (s = n + (e.avail_in - 5)),
                    (r = e.next_out),
                    (E = e.output),
                    (l = r - (t - e.avail_out)),
                    (c = r + (e.avail_out - 257)),
                    (d = i.dmax),
                    (u = i.wsize),
                    (p = i.whave),
                    (h = i.wnext),
                    (m = i.window),
                    (f = i.hold),
                    (g = i.bits),
                    (v = i.lencode),
                    (b = i.distcode),
                    (y = (1 << i.lenbits) - 1),
                    (w = (1 << i.distbits) - 1);
                  e: do {
                    g < 15 &&
                      ((f += _[n++] << g),
                      (g += 8),
                      (f += _[n++] << g),
                      (g += 8)),
                      (x = v[f & y]);
                    t: for (;;) {
                      if (
                        ((f >>>= T = x >>> 24),
                        (g -= T),
                        0 === (T = (x >>> 16) & 255))
                      )
                        E[r++] = 65535 & x;
                      else {
                        if (!(16 & T)) {
                          if (0 == (64 & T)) {
                            x = v[(65535 & x) + (f & ((1 << T) - 1))];
                            continue t;
                          }
                          if (32 & T) {
                            i.mode = a;
                            break e;
                          }
                          (e.msg = "invalid literal/length code"), (i.mode = o);
                          break e;
                        }
                        (C = 65535 & x),
                          (T &= 15) &&
                            (g < T && ((f += _[n++] << g), (g += 8)),
                            (C += f & ((1 << T) - 1)),
                            (f >>>= T),
                            (g -= T)),
                          g < 15 &&
                            ((f += _[n++] << g),
                            (g += 8),
                            (f += _[n++] << g),
                            (g += 8)),
                          (x = b[f & w]);
                        i: for (;;) {
                          if (
                            ((f >>>= T = x >>> 24),
                            (g -= T),
                            !(16 & (T = (x >>> 16) & 255)))
                          ) {
                            if (0 == (64 & T)) {
                              x = b[(65535 & x) + (f & ((1 << T) - 1))];
                              continue i;
                            }
                            (e.msg = "invalid distance code"), (i.mode = o);
                            break e;
                          }
                          if (
                            ((k = 65535 & x),
                            g < (T &= 15) &&
                              ((f += _[n++] << g),
                              (g += 8) < T && ((f += _[n++] << g), (g += 8))),
                            (k += f & ((1 << T) - 1)) > d)
                          ) {
                            (e.msg = "invalid distance too far back"),
                              (i.mode = o);
                            break e;
                          }
                          if (((f >>>= T), (g -= T), k > (T = r - l))) {
                            if ((T = k - T) > p && i.sane) {
                              (e.msg = "invalid distance too far back"),
                                (i.mode = o);
                              break e;
                            }
                            if (((S = 0), ($ = m), 0 === h)) {
                              if (((S += u - T), T < C)) {
                                C -= T;
                                do {
                                  E[r++] = m[S++];
                                } while (--T);
                                (S = r - k), ($ = E);
                              }
                            } else if (h < T) {
                              if (((S += u + h - T), (T -= h) < C)) {
                                C -= T;
                                do {
                                  E[r++] = m[S++];
                                } while (--T);
                                if (((S = 0), h < C)) {
                                  C -= T = h;
                                  do {
                                    E[r++] = m[S++];
                                  } while (--T);
                                  (S = r - k), ($ = E);
                                }
                              }
                            } else if (((S += h - T), T < C)) {
                              C -= T;
                              do {
                                E[r++] = m[S++];
                              } while (--T);
                              (S = r - k), ($ = E);
                            }
                            for (; C > 2; )
                              (E[r++] = $[S++]),
                                (E[r++] = $[S++]),
                                (E[r++] = $[S++]),
                                (C -= 3);
                            C &&
                              ((E[r++] = $[S++]), C > 1 && (E[r++] = $[S++]));
                          } else {
                            S = r - k;
                            do {
                              (E[r++] = E[S++]),
                                (E[r++] = E[S++]),
                                (E[r++] = E[S++]),
                                (C -= 3);
                            } while (C > 2);
                            C &&
                              ((E[r++] = E[S++]), C > 1 && (E[r++] = E[S++]));
                          }
                          break;
                        }
                      }
                      break;
                    }
                  } while (n < s && r < c);
                  (n -= C = g >> 3),
                    (f &= (1 << (g -= C << 3)) - 1),
                    (e.next_in = n),
                    (e.next_out = r),
                    (e.avail_in = n < s ? s - n + 5 : 5 - (n - s)),
                    (e.avail_out = r < c ? c - r + 257 : 257 - (r - c)),
                    (i.hold = f),
                    (i.bits = g);
                };
              },
              {},
            ],
            35: [
              function (e, t, i) {
                var o = e("../utils/common"),
                  a = e("./adler32"),
                  n = e("./crc32"),
                  s = e("./inffast"),
                  r = e("./inftrees"),
                  l = 0,
                  c = 1,
                  d = 2,
                  u = 4,
                  p = 5,
                  h = 6,
                  m = 0,
                  f = 1,
                  g = 2,
                  v = -2,
                  b = -3,
                  y = -4,
                  w = -5,
                  x = 8,
                  T = 1,
                  C = 2,
                  k = 3,
                  S = 4,
                  $ = 5,
                  _ = 6,
                  E = 7,
                  D = 8,
                  N = 9,
                  M = 10,
                  I = 11,
                  R = 12,
                  F = 13,
                  A = 14,
                  O = 15,
                  z = 16,
                  L = 17,
                  j = 18,
                  P = 19,
                  H = 20,
                  U = 21,
                  V = 22,
                  W = 23,
                  B = 24,
                  q = 25,
                  Y = 26,
                  G = 27,
                  X = 28,
                  K = 29,
                  J = 30,
                  Z = 31,
                  Q = 32,
                  ee = 852,
                  te = 592,
                  ie = 15;
                function oe(e) {
                  return (
                    ((e >>> 24) & 255) +
                    ((e >>> 8) & 65280) +
                    ((65280 & e) << 8) +
                    ((255 & e) << 24)
                  );
                }
                function ae() {
                  (this.mode = 0),
                    (this.last = !1),
                    (this.wrap = 0),
                    (this.havedict = !1),
                    (this.flags = 0),
                    (this.dmax = 0),
                    (this.check = 0),
                    (this.total = 0),
                    (this.head = null),
                    (this.wbits = 0),
                    (this.wsize = 0),
                    (this.whave = 0),
                    (this.wnext = 0),
                    (this.window = null),
                    (this.hold = 0),
                    (this.bits = 0),
                    (this.length = 0),
                    (this.offset = 0),
                    (this.extra = 0),
                    (this.lencode = null),
                    (this.distcode = null),
                    (this.lenbits = 0),
                    (this.distbits = 0),
                    (this.ncode = 0),
                    (this.nlen = 0),
                    (this.ndist = 0),
                    (this.have = 0),
                    (this.next = null),
                    (this.lens = new o.Buf16(320)),
                    (this.work = new o.Buf16(288)),
                    (this.lendyn = null),
                    (this.distdyn = null),
                    (this.sane = 0),
                    (this.back = 0),
                    (this.was = 0);
                }
                function ne(e) {
                  var t;
                  return e && e.state
                    ? ((t = e.state),
                      (e.total_in = e.total_out = t.total = 0),
                      (e.msg = ""),
                      t.wrap && (e.adler = 1 & t.wrap),
                      (t.mode = T),
                      (t.last = 0),
                      (t.havedict = 0),
                      (t.dmax = 32768),
                      (t.head = null),
                      (t.hold = 0),
                      (t.bits = 0),
                      (t.lencode = t.lendyn = new o.Buf32(ee)),
                      (t.distcode = t.distdyn = new o.Buf32(te)),
                      (t.sane = 1),
                      (t.back = -1),
                      m)
                    : v;
                }
                function se(e) {
                  var t;
                  return e && e.state
                    ? (((t = e.state).wsize = 0),
                      (t.whave = 0),
                      (t.wnext = 0),
                      ne(e))
                    : v;
                }
                function re(e, t) {
                  var i, o;
                  return e && e.state
                    ? ((o = e.state),
                      t < 0
                        ? ((i = 0), (t = -t))
                        : ((i = 1 + (t >> 4)), t < 48 && (t &= 15)),
                      t && (t < 8 || t > 15)
                        ? v
                        : (null !== o.window &&
                            o.wbits !== t &&
                            (o.window = null),
                          (o.wrap = i),
                          (o.wbits = t),
                          se(e)))
                    : v;
                }
                function le(e, t) {
                  var i, o;
                  return e
                    ? ((o = new ae()),
                      (e.state = o),
                      (o.window = null),
                      (i = re(e, t)) !== m && (e.state = null),
                      i)
                    : v;
                }
                function ce(e) {
                  return le(e, ie);
                }
                var de,
                  ue,
                  pe = !0;
                function he(e) {
                  if (pe) {
                    var t;
                    for (
                      de = new o.Buf32(512), ue = new o.Buf32(32), t = 0;
                      t < 144;

                    )
                      e.lens[t++] = 8;
                    for (; t < 256; ) e.lens[t++] = 9;
                    for (; t < 280; ) e.lens[t++] = 7;
                    for (; t < 288; ) e.lens[t++] = 8;
                    for (
                      r(c, e.lens, 0, 288, de, 0, e.work, { bits: 9 }), t = 0;
                      t < 32;

                    )
                      e.lens[t++] = 5;
                    r(d, e.lens, 0, 32, ue, 0, e.work, { bits: 5 }), (pe = !1);
                  }
                  (e.lencode = de),
                    (e.lenbits = 9),
                    (e.distcode = ue),
                    (e.distbits = 5);
                }
                function me(e, t, i, a) {
                  var n,
                    s = e.state;
                  return (
                    null === s.window &&
                      ((s.wsize = 1 << s.wbits),
                      (s.wnext = 0),
                      (s.whave = 0),
                      (s.window = new o.Buf8(s.wsize))),
                    a >= s.wsize
                      ? (o.arraySet(s.window, t, i - s.wsize, s.wsize, 0),
                        (s.wnext = 0),
                        (s.whave = s.wsize))
                      : ((n = s.wsize - s.wnext) > a && (n = a),
                        o.arraySet(s.window, t, i - a, n, s.wnext),
                        (a -= n)
                          ? (o.arraySet(s.window, t, i - a, a, 0),
                            (s.wnext = a),
                            (s.whave = s.wsize))
                          : ((s.wnext += n),
                            s.wnext === s.wsize && (s.wnext = 0),
                            s.whave < s.wsize && (s.whave += n))),
                    0
                  );
                }
                function fe(e, t) {
                  var i,
                    ee,
                    te,
                    ie,
                    ae,
                    ne,
                    se,
                    re,
                    le,
                    ce,
                    de,
                    ue,
                    pe,
                    fe,
                    ge,
                    ve,
                    be,
                    ye,
                    we,
                    xe,
                    Te,
                    Ce,
                    ke,
                    Se,
                    $e = 0,
                    _e = new o.Buf8(4),
                    Ee = [
                      16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14,
                      1, 15,
                    ];
                  if (
                    !e ||
                    !e.state ||
                    !e.output ||
                    (!e.input && 0 !== e.avail_in)
                  )
                    return v;
                  (i = e.state).mode === R && (i.mode = F),
                    (ae = e.next_out),
                    (te = e.output),
                    (se = e.avail_out),
                    (ie = e.next_in),
                    (ee = e.input),
                    (ne = e.avail_in),
                    (re = i.hold),
                    (le = i.bits),
                    (ce = ne),
                    (de = se),
                    (Ce = m);
                  e: for (;;)
                    switch (i.mode) {
                      case T:
                        if (0 === i.wrap) {
                          i.mode = F;
                          break;
                        }
                        for (; le < 16; ) {
                          if (0 === ne) break e;
                          ne--, (re += ee[ie++] << le), (le += 8);
                        }
                        if (2 & i.wrap && 35615 === re) {
                          (i.check = 0),
                            (_e[0] = 255 & re),
                            (_e[1] = (re >>> 8) & 255),
                            (i.check = n(i.check, _e, 2, 0)),
                            (re = 0),
                            (le = 0),
                            (i.mode = C);
                          break;
                        }
                        if (
                          ((i.flags = 0),
                          i.head && (i.head.done = !1),
                          !(1 & i.wrap) || (((255 & re) << 8) + (re >> 8)) % 31)
                        ) {
                          (e.msg = "incorrect header check"), (i.mode = J);
                          break;
                        }
                        if ((15 & re) !== x) {
                          (e.msg = "unknown compression method"), (i.mode = J);
                          break;
                        }
                        if (
                          ((le -= 4),
                          (Te = 8 + (15 & (re >>>= 4))),
                          0 === i.wbits)
                        )
                          i.wbits = Te;
                        else if (Te > i.wbits) {
                          (e.msg = "invalid window size"), (i.mode = J);
                          break;
                        }
                        (i.dmax = 1 << Te),
                          (e.adler = i.check = 1),
                          (i.mode = 512 & re ? M : R),
                          (re = 0),
                          (le = 0);
                        break;
                      case C:
                        for (; le < 16; ) {
                          if (0 === ne) break e;
                          ne--, (re += ee[ie++] << le), (le += 8);
                        }
                        if (((i.flags = re), (255 & i.flags) !== x)) {
                          (e.msg = "unknown compression method"), (i.mode = J);
                          break;
                        }
                        if (57344 & i.flags) {
                          (e.msg = "unknown header flags set"), (i.mode = J);
                          break;
                        }
                        i.head && (i.head.text = (re >> 8) & 1),
                          512 & i.flags &&
                            ((_e[0] = 255 & re),
                            (_e[1] = (re >>> 8) & 255),
                            (i.check = n(i.check, _e, 2, 0))),
                          (re = 0),
                          (le = 0),
                          (i.mode = k);
                      case k:
                        for (; le < 32; ) {
                          if (0 === ne) break e;
                          ne--, (re += ee[ie++] << le), (le += 8);
                        }
                        i.head && (i.head.time = re),
                          512 & i.flags &&
                            ((_e[0] = 255 & re),
                            (_e[1] = (re >>> 8) & 255),
                            (_e[2] = (re >>> 16) & 255),
                            (_e[3] = (re >>> 24) & 255),
                            (i.check = n(i.check, _e, 4, 0))),
                          (re = 0),
                          (le = 0),
                          (i.mode = S);
                      case S:
                        for (; le < 16; ) {
                          if (0 === ne) break e;
                          ne--, (re += ee[ie++] << le), (le += 8);
                        }
                        i.head &&
                          ((i.head.xflags = 255 & re), (i.head.os = re >> 8)),
                          512 & i.flags &&
                            ((_e[0] = 255 & re),
                            (_e[1] = (re >>> 8) & 255),
                            (i.check = n(i.check, _e, 2, 0))),
                          (re = 0),
                          (le = 0),
                          (i.mode = $);
                      case $:
                        if (1024 & i.flags) {
                          for (; le < 16; ) {
                            if (0 === ne) break e;
                            ne--, (re += ee[ie++] << le), (le += 8);
                          }
                          (i.length = re),
                            i.head && (i.head.extra_len = re),
                            512 & i.flags &&
                              ((_e[0] = 255 & re),
                              (_e[1] = (re >>> 8) & 255),
                              (i.check = n(i.check, _e, 2, 0))),
                            (re = 0),
                            (le = 0);
                        } else i.head && (i.head.extra = null);
                        i.mode = _;
                      case _:
                        if (
                          1024 & i.flags &&
                          ((ue = i.length) > ne && (ue = ne),
                          ue &&
                            (i.head &&
                              ((Te = i.head.extra_len - i.length),
                              i.head.extra ||
                                (i.head.extra = new Array(i.head.extra_len)),
                              o.arraySet(i.head.extra, ee, ie, ue, Te)),
                            512 & i.flags && (i.check = n(i.check, ee, ue, ie)),
                            (ne -= ue),
                            (ie += ue),
                            (i.length -= ue)),
                          i.length)
                        )
                          break e;
                        (i.length = 0), (i.mode = E);
                      case E:
                        if (2048 & i.flags) {
                          if (0 === ne) break e;
                          ue = 0;
                          do {
                            (Te = ee[ie + ue++]),
                              i.head &&
                                Te &&
                                i.length < 65536 &&
                                (i.head.name += String.fromCharCode(Te));
                          } while (Te && ue < ne);
                          if (
                            (512 & i.flags &&
                              (i.check = n(i.check, ee, ue, ie)),
                            (ne -= ue),
                            (ie += ue),
                            Te)
                          )
                            break e;
                        } else i.head && (i.head.name = null);
                        (i.length = 0), (i.mode = D);
                      case D:
                        if (4096 & i.flags) {
                          if (0 === ne) break e;
                          ue = 0;
                          do {
                            (Te = ee[ie + ue++]),
                              i.head &&
                                Te &&
                                i.length < 65536 &&
                                (i.head.comment += String.fromCharCode(Te));
                          } while (Te && ue < ne);
                          if (
                            (512 & i.flags &&
                              (i.check = n(i.check, ee, ue, ie)),
                            (ne -= ue),
                            (ie += ue),
                            Te)
                          )
                            break e;
                        } else i.head && (i.head.comment = null);
                        i.mode = N;
                      case N:
                        if (512 & i.flags) {
                          for (; le < 16; ) {
                            if (0 === ne) break e;
                            ne--, (re += ee[ie++] << le), (le += 8);
                          }
                          if (re !== (65535 & i.check)) {
                            (e.msg = "header crc mismatch"), (i.mode = J);
                            break;
                          }
                          (re = 0), (le = 0);
                        }
                        i.head &&
                          ((i.head.hcrc = (i.flags >> 9) & 1),
                          (i.head.done = !0)),
                          (e.adler = i.check = 0),
                          (i.mode = R);
                        break;
                      case M:
                        for (; le < 32; ) {
                          if (0 === ne) break e;
                          ne--, (re += ee[ie++] << le), (le += 8);
                        }
                        (e.adler = i.check = oe(re)),
                          (re = 0),
                          (le = 0),
                          (i.mode = I);
                      case I:
                        if (0 === i.havedict)
                          return (
                            (e.next_out = ae),
                            (e.avail_out = se),
                            (e.next_in = ie),
                            (e.avail_in = ne),
                            (i.hold = re),
                            (i.bits = le),
                            g
                          );
                        (e.adler = i.check = 1), (i.mode = R);
                      case R:
                        if (t === p || t === h) break e;
                      case F:
                        if (i.last) {
                          (re >>>= 7 & le), (le -= 7 & le), (i.mode = G);
                          break;
                        }
                        for (; le < 3; ) {
                          if (0 === ne) break e;
                          ne--, (re += ee[ie++] << le), (le += 8);
                        }
                        switch (
                          ((i.last = 1 & re), (le -= 1), 3 & (re >>>= 1))
                        ) {
                          case 0:
                            i.mode = A;
                            break;
                          case 1:
                            if ((he(i), (i.mode = H), t === h)) {
                              (re >>>= 2), (le -= 2);
                              break e;
                            }
                            break;
                          case 2:
                            i.mode = L;
                            break;
                          case 3:
                            (e.msg = "invalid block type"), (i.mode = J);
                        }
                        (re >>>= 2), (le -= 2);
                        break;
                      case A:
                        for (re >>>= 7 & le, le -= 7 & le; le < 32; ) {
                          if (0 === ne) break e;
                          ne--, (re += ee[ie++] << le), (le += 8);
                        }
                        if ((65535 & re) != ((re >>> 16) ^ 65535)) {
                          (e.msg = "invalid stored block lengths"),
                            (i.mode = J);
                          break;
                        }
                        if (
                          ((i.length = 65535 & re),
                          (re = 0),
                          (le = 0),
                          (i.mode = O),
                          t === h)
                        )
                          break e;
                      case O:
                        i.mode = z;
                      case z:
                        if ((ue = i.length)) {
                          if (
                            (ue > ne && (ue = ne),
                            ue > se && (ue = se),
                            0 === ue)
                          )
                            break e;
                          o.arraySet(te, ee, ie, ue, ae),
                            (ne -= ue),
                            (ie += ue),
                            (se -= ue),
                            (ae += ue),
                            (i.length -= ue);
                          break;
                        }
                        i.mode = R;
                        break;
                      case L:
                        for (; le < 14; ) {
                          if (0 === ne) break e;
                          ne--, (re += ee[ie++] << le), (le += 8);
                        }
                        if (
                          ((i.nlen = 257 + (31 & re)),
                          (re >>>= 5),
                          (le -= 5),
                          (i.ndist = 1 + (31 & re)),
                          (re >>>= 5),
                          (le -= 5),
                          (i.ncode = 4 + (15 & re)),
                          (re >>>= 4),
                          (le -= 4),
                          i.nlen > 286 || i.ndist > 30)
                        ) {
                          (e.msg = "too many length or distance symbols"),
                            (i.mode = J);
                          break;
                        }
                        (i.have = 0), (i.mode = j);
                      case j:
                        for (; i.have < i.ncode; ) {
                          for (; le < 3; ) {
                            if (0 === ne) break e;
                            ne--, (re += ee[ie++] << le), (le += 8);
                          }
                          (i.lens[Ee[i.have++]] = 7 & re),
                            (re >>>= 3),
                            (le -= 3);
                        }
                        for (; i.have < 19; ) i.lens[Ee[i.have++]] = 0;
                        if (
                          ((i.lencode = i.lendyn),
                          (i.lenbits = 7),
                          (ke = { bits: i.lenbits }),
                          (Ce = r(l, i.lens, 0, 19, i.lencode, 0, i.work, ke)),
                          (i.lenbits = ke.bits),
                          Ce)
                        ) {
                          (e.msg = "invalid code lengths set"), (i.mode = J);
                          break;
                        }
                        (i.have = 0), (i.mode = P);
                      case P:
                        for (; i.have < i.nlen + i.ndist; ) {
                          for (
                            ;
                            (ve =
                              (($e = i.lencode[re & ((1 << i.lenbits) - 1)]) >>>
                                16) &
                              255),
                              (be = 65535 & $e),
                              !((ge = $e >>> 24) <= le);

                          ) {
                            if (0 === ne) break e;
                            ne--, (re += ee[ie++] << le), (le += 8);
                          }
                          if (be < 16)
                            (re >>>= ge), (le -= ge), (i.lens[i.have++] = be);
                          else {
                            if (16 === be) {
                              for (Se = ge + 2; le < Se; ) {
                                if (0 === ne) break e;
                                ne--, (re += ee[ie++] << le), (le += 8);
                              }
                              if (((re >>>= ge), (le -= ge), 0 === i.have)) {
                                (e.msg = "invalid bit length repeat"),
                                  (i.mode = J);
                                break;
                              }
                              (Te = i.lens[i.have - 1]),
                                (ue = 3 + (3 & re)),
                                (re >>>= 2),
                                (le -= 2);
                            } else if (17 === be) {
                              for (Se = ge + 3; le < Se; ) {
                                if (0 === ne) break e;
                                ne--, (re += ee[ie++] << le), (le += 8);
                              }
                              (le -= ge),
                                (Te = 0),
                                (ue = 3 + (7 & (re >>>= ge))),
                                (re >>>= 3),
                                (le -= 3);
                            } else {
                              for (Se = ge + 7; le < Se; ) {
                                if (0 === ne) break e;
                                ne--, (re += ee[ie++] << le), (le += 8);
                              }
                              (le -= ge),
                                (Te = 0),
                                (ue = 11 + (127 & (re >>>= ge))),
                                (re >>>= 7),
                                (le -= 7);
                            }
                            if (i.have + ue > i.nlen + i.ndist) {
                              (e.msg = "invalid bit length repeat"),
                                (i.mode = J);
                              break;
                            }
                            for (; ue--; ) i.lens[i.have++] = Te;
                          }
                        }
                        if (i.mode === J) break;
                        if (0 === i.lens[256]) {
                          (e.msg = "invalid code -- missing end-of-block"),
                            (i.mode = J);
                          break;
                        }
                        if (
                          ((i.lenbits = 9),
                          (ke = { bits: i.lenbits }),
                          (Ce = r(
                            c,
                            i.lens,
                            0,
                            i.nlen,
                            i.lencode,
                            0,
                            i.work,
                            ke
                          )),
                          (i.lenbits = ke.bits),
                          Ce)
                        ) {
                          (e.msg = "invalid literal/lengths set"), (i.mode = J);
                          break;
                        }
                        if (
                          ((i.distbits = 6),
                          (i.distcode = i.distdyn),
                          (ke = { bits: i.distbits }),
                          (Ce = r(
                            d,
                            i.lens,
                            i.nlen,
                            i.ndist,
                            i.distcode,
                            0,
                            i.work,
                            ke
                          )),
                          (i.distbits = ke.bits),
                          Ce)
                        ) {
                          (e.msg = "invalid distances set"), (i.mode = J);
                          break;
                        }
                        if (((i.mode = H), t === h)) break e;
                      case H:
                        i.mode = U;
                      case U:
                        if (ne >= 6 && se >= 258) {
                          (e.next_out = ae),
                            (e.avail_out = se),
                            (e.next_in = ie),
                            (e.avail_in = ne),
                            (i.hold = re),
                            (i.bits = le),
                            s(e, de),
                            (ae = e.next_out),
                            (te = e.output),
                            (se = e.avail_out),
                            (ie = e.next_in),
                            (ee = e.input),
                            (ne = e.avail_in),
                            (re = i.hold),
                            (le = i.bits),
                            i.mode === R && (i.back = -1);
                          break;
                        }
                        for (
                          i.back = 0;
                          (ve =
                            (($e = i.lencode[re & ((1 << i.lenbits) - 1)]) >>>
                              16) &
                            255),
                            (be = 65535 & $e),
                            !((ge = $e >>> 24) <= le);

                        ) {
                          if (0 === ne) break e;
                          ne--, (re += ee[ie++] << le), (le += 8);
                        }
                        if (ve && 0 == (240 & ve)) {
                          for (
                            ye = ge, we = ve, xe = be;
                            (ve =
                              (($e =
                                i.lencode[
                                  xe + ((re & ((1 << (ye + we)) - 1)) >> ye)
                                ]) >>>
                                16) &
                              255),
                              (be = 65535 & $e),
                              !(ye + (ge = $e >>> 24) <= le);

                          ) {
                            if (0 === ne) break e;
                            ne--, (re += ee[ie++] << le), (le += 8);
                          }
                          (re >>>= ye), (le -= ye), (i.back += ye);
                        }
                        if (
                          ((re >>>= ge),
                          (le -= ge),
                          (i.back += ge),
                          (i.length = be),
                          0 === ve)
                        ) {
                          i.mode = Y;
                          break;
                        }
                        if (32 & ve) {
                          (i.back = -1), (i.mode = R);
                          break;
                        }
                        if (64 & ve) {
                          (e.msg = "invalid literal/length code"), (i.mode = J);
                          break;
                        }
                        (i.extra = 15 & ve), (i.mode = V);
                      case V:
                        if (i.extra) {
                          for (Se = i.extra; le < Se; ) {
                            if (0 === ne) break e;
                            ne--, (re += ee[ie++] << le), (le += 8);
                          }
                          (i.length += re & ((1 << i.extra) - 1)),
                            (re >>>= i.extra),
                            (le -= i.extra),
                            (i.back += i.extra);
                        }
                        (i.was = i.length), (i.mode = W);
                      case W:
                        for (
                          ;
                          (ve =
                            (($e = i.distcode[re & ((1 << i.distbits) - 1)]) >>>
                              16) &
                            255),
                            (be = 65535 & $e),
                            !((ge = $e >>> 24) <= le);

                        ) {
                          if (0 === ne) break e;
                          ne--, (re += ee[ie++] << le), (le += 8);
                        }
                        if (0 == (240 & ve)) {
                          for (
                            ye = ge, we = ve, xe = be;
                            (ve =
                              (($e =
                                i.distcode[
                                  xe + ((re & ((1 << (ye + we)) - 1)) >> ye)
                                ]) >>>
                                16) &
                              255),
                              (be = 65535 & $e),
                              !(ye + (ge = $e >>> 24) <= le);

                          ) {
                            if (0 === ne) break e;
                            ne--, (re += ee[ie++] << le), (le += 8);
                          }
                          (re >>>= ye), (le -= ye), (i.back += ye);
                        }
                        if (
                          ((re >>>= ge), (le -= ge), (i.back += ge), 64 & ve)
                        ) {
                          (e.msg = "invalid distance code"), (i.mode = J);
                          break;
                        }
                        (i.offset = be), (i.extra = 15 & ve), (i.mode = B);
                      case B:
                        if (i.extra) {
                          for (Se = i.extra; le < Se; ) {
                            if (0 === ne) break e;
                            ne--, (re += ee[ie++] << le), (le += 8);
                          }
                          (i.offset += re & ((1 << i.extra) - 1)),
                            (re >>>= i.extra),
                            (le -= i.extra),
                            (i.back += i.extra);
                        }
                        if (i.offset > i.dmax) {
                          (e.msg = "invalid distance too far back"),
                            (i.mode = J);
                          break;
                        }
                        i.mode = q;
                      case q:
                        if (0 === se) break e;
                        if (((ue = de - se), i.offset > ue)) {
                          if ((ue = i.offset - ue) > i.whave && i.sane) {
                            (e.msg = "invalid distance too far back"),
                              (i.mode = J);
                            break;
                          }
                          ue > i.wnext
                            ? ((ue -= i.wnext), (pe = i.wsize - ue))
                            : (pe = i.wnext - ue),
                            ue > i.length && (ue = i.length),
                            (fe = i.window);
                        } else (fe = te), (pe = ae - i.offset), (ue = i.length);
                        ue > se && (ue = se), (se -= ue), (i.length -= ue);
                        do {
                          te[ae++] = fe[pe++];
                        } while (--ue);
                        0 === i.length && (i.mode = U);
                        break;
                      case Y:
                        if (0 === se) break e;
                        (te[ae++] = i.length), se--, (i.mode = U);
                        break;
                      case G:
                        if (i.wrap) {
                          for (; le < 32; ) {
                            if (0 === ne) break e;
                            ne--, (re |= ee[ie++] << le), (le += 8);
                          }
                          if (
                            ((de -= se),
                            (e.total_out += de),
                            (i.total += de),
                            de &&
                              (e.adler = i.check =
                                i.flags
                                  ? n(i.check, te, de, ae - de)
                                  : a(i.check, te, de, ae - de)),
                            (de = se),
                            (i.flags ? re : oe(re)) !== i.check)
                          ) {
                            (e.msg = "incorrect data check"), (i.mode = J);
                            break;
                          }
                          (re = 0), (le = 0);
                        }
                        i.mode = X;
                      case X:
                        if (i.wrap && i.flags) {
                          for (; le < 32; ) {
                            if (0 === ne) break e;
                            ne--, (re += ee[ie++] << le), (le += 8);
                          }
                          if (re !== (4294967295 & i.total)) {
                            (e.msg = "incorrect length check"), (i.mode = J);
                            break;
                          }
                          (re = 0), (le = 0);
                        }
                        i.mode = K;
                      case K:
                        Ce = f;
                        break e;
                      case J:
                        Ce = b;
                        break e;
                      case Z:
                        return y;
                      case Q:
                      default:
                        return v;
                    }
                  return (
                    (e.next_out = ae),
                    (e.avail_out = se),
                    (e.next_in = ie),
                    (e.avail_in = ne),
                    (i.hold = re),
                    (i.bits = le),
                    (i.wsize ||
                      (de !== e.avail_out &&
                        i.mode < J &&
                        (i.mode < G || t !== u))) &&
                    me(e, e.output, e.next_out, de - e.avail_out)
                      ? ((i.mode = Z), y)
                      : ((ce -= e.avail_in),
                        (de -= e.avail_out),
                        (e.total_in += ce),
                        (e.total_out += de),
                        (i.total += de),
                        i.wrap &&
                          de &&
                          (e.adler = i.check =
                            i.flags
                              ? n(i.check, te, de, e.next_out - de)
                              : a(i.check, te, de, e.next_out - de)),
                        (e.data_type =
                          i.bits +
                          (i.last ? 64 : 0) +
                          (i.mode === R ? 128 : 0) +
                          (i.mode === H || i.mode === O ? 256 : 0)),
                        ((0 === ce && 0 === de) || t === u) &&
                          Ce === m &&
                          (Ce = w),
                        Ce)
                  );
                }
                function ge(e) {
                  if (!e || !e.state) return v;
                  var t = e.state;
                  return t.window && (t.window = null), (e.state = null), m;
                }
                function ve(e, t) {
                  var i;
                  return e && e.state
                    ? 0 == (2 & (i = e.state).wrap)
                      ? v
                      : ((i.head = t), (t.done = !1), m)
                    : v;
                }
                (i.inflateReset = se),
                  (i.inflateReset2 = re),
                  (i.inflateResetKeep = ne),
                  (i.inflateInit = ce),
                  (i.inflateInit2 = le),
                  (i.inflate = fe),
                  (i.inflateEnd = ge),
                  (i.inflateGetHeader = ve),
                  (i.inflateInfo = "pako inflate (from Nodeca project)");
              },
              {
                "../utils/common": 27,
                "./adler32": 29,
                "./crc32": 31,
                "./inffast": 34,
                "./inftrees": 36,
              },
            ],
            36: [
              function (e, t, i) {
                var o = e("../utils/common"),
                  a = 15,
                  n = 852,
                  s = 592,
                  r = 0,
                  l = 1,
                  c = 2,
                  d = [
                    3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35,
                    43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0,
                  ],
                  u = [
                    16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18,
                    18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72,
                    78,
                  ],
                  p = [
                    1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,
                    257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,
                    8193, 12289, 16385, 24577, 0, 0,
                  ],
                  h = [
                    16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22,
                    22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29,
                    64, 64,
                  ];
                t.exports = function (e, t, i, m, f, g, v, b) {
                  var y,
                    w,
                    x,
                    T,
                    C,
                    k,
                    S,
                    $,
                    _,
                    E = b.bits,
                    D = 0,
                    N = 0,
                    M = 0,
                    I = 0,
                    R = 0,
                    F = 0,
                    A = 0,
                    O = 0,
                    z = 0,
                    L = 0,
                    j = null,
                    P = 0,
                    H = new o.Buf16(a + 1),
                    U = new o.Buf16(a + 1),
                    V = null,
                    W = 0;
                  for (D = 0; D <= a; D++) H[D] = 0;
                  for (N = 0; N < m; N++) H[t[i + N]]++;
                  for (R = E, I = a; I >= 1 && 0 === H[I]; I--);
                  if ((R > I && (R = I), 0 === I))
                    return (
                      (f[g++] = 20971520), (f[g++] = 20971520), (b.bits = 1), 0
                    );
                  for (M = 1; M < I && 0 === H[M]; M++);
                  for (R < M && (R = M), O = 1, D = 1; D <= a; D++)
                    if (((O <<= 1), (O -= H[D]) < 0)) return -1;
                  if (O > 0 && (e === r || 1 !== I)) return -1;
                  for (U[1] = 0, D = 1; D < a; D++) U[D + 1] = U[D] + H[D];
                  for (N = 0; N < m; N++)
                    0 !== t[i + N] && (v[U[t[i + N]]++] = N);
                  switch (e) {
                    case r:
                      (j = V = v), (k = 19);
                      break;
                    case l:
                      (j = d), (P -= 257), (V = u), (W -= 257), (k = 256);
                      break;
                    default:
                      (j = p), (V = h), (k = -1);
                  }
                  if (
                    ((L = 0),
                    (N = 0),
                    (D = M),
                    (C = g),
                    (F = R),
                    (A = 0),
                    (x = -1),
                    (T = (z = 1 << R) - 1),
                    (e === l && z > n) || (e === c && z > s))
                  )
                    return 1;
                  for (;;) {
                    (S = D - A),
                      v[N] < k
                        ? (($ = 0), (_ = v[N]))
                        : v[N] > k
                        ? (($ = V[W + v[N]]), (_ = j[P + v[N]]))
                        : (($ = 96), (_ = 0)),
                      (y = 1 << (D - A)),
                      (M = w = 1 << F);
                    do {
                      f[C + (L >> A) + (w -= y)] =
                        (S << 24) | ($ << 16) | _ | 0;
                    } while (0 !== w);
                    for (y = 1 << (D - 1); L & y; ) y >>= 1;
                    if (
                      (0 !== y ? ((L &= y - 1), (L += y)) : (L = 0),
                      N++,
                      0 == --H[D])
                    ) {
                      if (D === I) break;
                      D = t[i + v[N]];
                    }
                    if (D > R && (L & T) !== x) {
                      for (
                        0 === A && (A = R), C += M, O = 1 << (F = D - A);
                        F + A < I && !((O -= H[F + A]) <= 0);

                      )
                        F++, (O <<= 1);
                      if (
                        ((z += 1 << F),
                        (e === l && z > n) || (e === c && z > s))
                      )
                        return 1;
                      f[(x = L & T)] = (R << 24) | (F << 16) | (C - g) | 0;
                    }
                  }
                  return (
                    0 !== L && (f[C + L] = ((D - A) << 24) | (64 << 16) | 0),
                    (b.bits = R),
                    0
                  );
                };
              },
              { "../utils/common": 27 },
            ],
            37: [
              function (e, t, i) {
                t.exports = {
                  2: "need dictionary",
                  1: "stream end",
                  0: "",
                  "-1": "file error",
                  "-2": "stream error",
                  "-3": "data error",
                  "-4": "insufficient memory",
                  "-5": "buffer error",
                  "-6": "incompatible version",
                };
              },
              {},
            ],
            38: [
              function (e, t, i) {
                var o = e("../utils/common"),
                  a = 4,
                  n = 0,
                  s = 1,
                  r = 2;
                function l(e) {
                  for (var t = e.length; --t >= 0; ) e[t] = 0;
                }
                var c = 0,
                  d = 1,
                  u = 2,
                  p = 3,
                  h = 258,
                  m = 29,
                  f = 256,
                  g = f + 1 + m,
                  v = 30,
                  b = 19,
                  y = 2 * g + 1,
                  w = 15,
                  x = 16,
                  T = 7,
                  C = 256,
                  k = 16,
                  S = 17,
                  $ = 18,
                  _ = [
                    0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3,
                    4, 4, 4, 4, 5, 5, 5, 5, 0,
                  ],
                  E = [
                    0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
                    9, 9, 10, 10, 11, 11, 12, 12, 13, 13,
                  ],
                  D = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
                  N = [
                    16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14,
                    1, 15,
                  ],
                  M = 512,
                  I = new Array(2 * (g + 2));
                l(I);
                var R = new Array(2 * v);
                l(R);
                var F = new Array(M);
                l(F);
                var A = new Array(h - p + 1);
                l(A);
                var O = new Array(m);
                l(O);
                var z = new Array(v);
                l(z);
                var L,
                  j,
                  P,
                  H = function (e, t, i, o, a) {
                    (this.static_tree = e),
                      (this.extra_bits = t),
                      (this.extra_base = i),
                      (this.elems = o),
                      (this.max_length = a),
                      (this.has_stree = e && e.length);
                  },
                  U = function (e, t) {
                    (this.dyn_tree = e),
                      (this.max_code = 0),
                      (this.stat_desc = t);
                  };
                function V(e) {
                  return e < 256 ? F[e] : F[256 + (e >>> 7)];
                }
                function W(e, t) {
                  (e.pending_buf[e.pending++] = 255 & t),
                    (e.pending_buf[e.pending++] = (t >>> 8) & 255);
                }
                function B(e, t, i) {
                  e.bi_valid > x - i
                    ? ((e.bi_buf |= (t << e.bi_valid) & 65535),
                      W(e, e.bi_buf),
                      (e.bi_buf = t >> (x - e.bi_valid)),
                      (e.bi_valid += i - x))
                    : ((e.bi_buf |= (t << e.bi_valid) & 65535),
                      (e.bi_valid += i));
                }
                function q(e, t, i) {
                  B(e, i[2 * t], i[2 * t + 1]);
                }
                function Y(e, t) {
                  var i = 0;
                  do {
                    (i |= 1 & e), (e >>>= 1), (i <<= 1);
                  } while (--t > 0);
                  return i >>> 1;
                }
                function G(e) {
                  16 === e.bi_valid
                    ? (W(e, e.bi_buf), (e.bi_buf = 0), (e.bi_valid = 0))
                    : e.bi_valid >= 8 &&
                      ((e.pending_buf[e.pending++] = 255 & e.bi_buf),
                      (e.bi_buf >>= 8),
                      (e.bi_valid -= 8));
                }
                function X(e, t) {
                  var i,
                    o,
                    a,
                    n,
                    s,
                    r,
                    l = t.dyn_tree,
                    c = t.max_code,
                    d = t.stat_desc.static_tree,
                    u = t.stat_desc.has_stree,
                    p = t.stat_desc.extra_bits,
                    h = t.stat_desc.extra_base,
                    m = t.stat_desc.max_length,
                    f = 0;
                  for (n = 0; n <= w; n++) e.bl_count[n] = 0;
                  for (
                    l[2 * e.heap[e.heap_max] + 1] = 0, i = e.heap_max + 1;
                    i < y;
                    i++
                  )
                    (n = l[2 * l[2 * (o = e.heap[i]) + 1] + 1] + 1) > m &&
                      ((n = m), f++),
                      (l[2 * o + 1] = n),
                      o > c ||
                        (e.bl_count[n]++,
                        (s = 0),
                        o >= h && (s = p[o - h]),
                        (r = l[2 * o]),
                        (e.opt_len += r * (n + s)),
                        u && (e.static_len += r * (d[2 * o + 1] + s)));
                  if (0 !== f) {
                    do {
                      for (n = m - 1; 0 === e.bl_count[n]; ) n--;
                      e.bl_count[n]--,
                        (e.bl_count[n + 1] += 2),
                        e.bl_count[m]--,
                        (f -= 2);
                    } while (f > 0);
                    for (n = m; 0 !== n; n--)
                      for (o = e.bl_count[n]; 0 !== o; )
                        (a = e.heap[--i]) > c ||
                          (l[2 * a + 1] !== n &&
                            ((e.opt_len += (n - l[2 * a + 1]) * l[2 * a]),
                            (l[2 * a + 1] = n)),
                          o--);
                  }
                }
                function K(e, t, i) {
                  var o,
                    a,
                    n = new Array(w + 1),
                    s = 0;
                  for (o = 1; o <= w; o++) n[o] = s = (s + i[o - 1]) << 1;
                  for (a = 0; a <= t; a++) {
                    var r = e[2 * a + 1];
                    0 !== r && (e[2 * a] = Y(n[r]++, r));
                  }
                }
                function J() {
                  var e,
                    t,
                    i,
                    o,
                    a,
                    n = new Array(w + 1);
                  for (i = 0, o = 0; o < m - 1; o++)
                    for (O[o] = i, e = 0; e < 1 << _[o]; e++) A[i++] = o;
                  for (A[i - 1] = o, a = 0, o = 0; o < 16; o++)
                    for (z[o] = a, e = 0; e < 1 << E[o]; e++) F[a++] = o;
                  for (a >>= 7; o < v; o++)
                    for (z[o] = a << 7, e = 0; e < 1 << (E[o] - 7); e++)
                      F[256 + a++] = o;
                  for (t = 0; t <= w; t++) n[t] = 0;
                  for (e = 0; e <= 143; ) (I[2 * e + 1] = 8), e++, n[8]++;
                  for (; e <= 255; ) (I[2 * e + 1] = 9), e++, n[9]++;
                  for (; e <= 279; ) (I[2 * e + 1] = 7), e++, n[7]++;
                  for (; e <= 287; ) (I[2 * e + 1] = 8), e++, n[8]++;
                  for (K(I, g + 1, n), e = 0; e < v; e++)
                    (R[2 * e + 1] = 5), (R[2 * e] = Y(e, 5));
                  (L = new H(I, _, f + 1, g, w)),
                    (j = new H(R, E, 0, v, w)),
                    (P = new H(new Array(0), D, 0, b, T));
                }
                function Z(e) {
                  var t;
                  for (t = 0; t < g; t++) e.dyn_ltree[2 * t] = 0;
                  for (t = 0; t < v; t++) e.dyn_dtree[2 * t] = 0;
                  for (t = 0; t < b; t++) e.bl_tree[2 * t] = 0;
                  (e.dyn_ltree[2 * C] = 1),
                    (e.opt_len = e.static_len = 0),
                    (e.last_lit = e.matches = 0);
                }
                function Q(e) {
                  e.bi_valid > 8
                    ? W(e, e.bi_buf)
                    : e.bi_valid > 0 && (e.pending_buf[e.pending++] = e.bi_buf),
                    (e.bi_buf = 0),
                    (e.bi_valid = 0);
                }
                function ee(e, t, i, a) {
                  Q(e),
                    a && (W(e, i), W(e, ~i)),
                    o.arraySet(e.pending_buf, e.window, t, i, e.pending),
                    (e.pending += i);
                }
                function te(e, t, i, o) {
                  var a = 2 * t,
                    n = 2 * i;
                  return e[a] < e[n] || (e[a] === e[n] && o[t] <= o[i]);
                }
                function ie(e, t, i) {
                  for (
                    var o = e.heap[i], a = i << 1;
                    a <= e.heap_len &&
                    (a < e.heap_len &&
                      te(t, e.heap[a + 1], e.heap[a], e.depth) &&
                      a++,
                    !te(t, o, e.heap[a], e.depth));

                  )
                    (e.heap[i] = e.heap[a]), (i = a), (a <<= 1);
                  e.heap[i] = o;
                }
                function oe(e, t, i) {
                  var o,
                    a,
                    n,
                    s,
                    r = 0;
                  if (0 !== e.last_lit)
                    do {
                      (o =
                        (e.pending_buf[e.d_buf + 2 * r] << 8) |
                        e.pending_buf[e.d_buf + 2 * r + 1]),
                        (a = e.pending_buf[e.l_buf + r]),
                        r++,
                        0 === o
                          ? q(e, a, t)
                          : (q(e, (n = A[a]) + f + 1, t),
                            0 !== (s = _[n]) && B(e, (a -= O[n]), s),
                            q(e, (n = V(--o)), i),
                            0 !== (s = E[n]) && B(e, (o -= z[n]), s));
                    } while (r < e.last_lit);
                  q(e, C, t);
                }
                function ae(e, t) {
                  var i,
                    o,
                    a,
                    n = t.dyn_tree,
                    s = t.stat_desc.static_tree,
                    r = t.stat_desc.has_stree,
                    l = t.stat_desc.elems,
                    c = -1;
                  for (e.heap_len = 0, e.heap_max = y, i = 0; i < l; i++)
                    0 !== n[2 * i]
                      ? ((e.heap[++e.heap_len] = c = i), (e.depth[i] = 0))
                      : (n[2 * i + 1] = 0);
                  for (; e.heap_len < 2; )
                    (n[2 * (a = e.heap[++e.heap_len] = c < 2 ? ++c : 0)] = 1),
                      (e.depth[a] = 0),
                      e.opt_len--,
                      r && (e.static_len -= s[2 * a + 1]);
                  for (t.max_code = c, i = e.heap_len >> 1; i >= 1; i--)
                    ie(e, n, i);
                  a = l;
                  do {
                    (i = e.heap[1]),
                      (e.heap[1] = e.heap[e.heap_len--]),
                      ie(e, n, 1),
                      (o = e.heap[1]),
                      (e.heap[--e.heap_max] = i),
                      (e.heap[--e.heap_max] = o),
                      (n[2 * a] = n[2 * i] + n[2 * o]),
                      (e.depth[a] =
                        (e.depth[i] >= e.depth[o] ? e.depth[i] : e.depth[o]) +
                        1),
                      (n[2 * i + 1] = n[2 * o + 1] = a),
                      (e.heap[1] = a++),
                      ie(e, n, 1);
                  } while (e.heap_len >= 2);
                  (e.heap[--e.heap_max] = e.heap[1]),
                    X(e, t),
                    K(n, c, e.bl_count);
                }
                function ne(e, t, i) {
                  var o,
                    a,
                    n = -1,
                    s = t[1],
                    r = 0,
                    l = 7,
                    c = 4;
                  for (
                    0 === s && ((l = 138), (c = 3)),
                      t[2 * (i + 1) + 1] = 65535,
                      o = 0;
                    o <= i;
                    o++
                  )
                    (a = s),
                      (s = t[2 * (o + 1) + 1]),
                      (++r < l && a === s) ||
                        (r < c
                          ? (e.bl_tree[2 * a] += r)
                          : 0 !== a
                          ? (a !== n && e.bl_tree[2 * a]++, e.bl_tree[2 * k]++)
                          : r <= 10
                          ? e.bl_tree[2 * S]++
                          : e.bl_tree[2 * $]++,
                        (r = 0),
                        (n = a),
                        0 === s
                          ? ((l = 138), (c = 3))
                          : a === s
                          ? ((l = 6), (c = 3))
                          : ((l = 7), (c = 4)));
                }
                function se(e, t, i) {
                  var o,
                    a,
                    n = -1,
                    s = t[1],
                    r = 0,
                    l = 7,
                    c = 4;
                  for (0 === s && ((l = 138), (c = 3)), o = 0; o <= i; o++)
                    if (
                      ((a = s), (s = t[2 * (o + 1) + 1]), !(++r < l && a === s))
                    ) {
                      if (r < c)
                        do {
                          q(e, a, e.bl_tree);
                        } while (0 != --r);
                      else
                        0 !== a
                          ? (a !== n && (q(e, a, e.bl_tree), r--),
                            q(e, k, e.bl_tree),
                            B(e, r - 3, 2))
                          : r <= 10
                          ? (q(e, S, e.bl_tree), B(e, r - 3, 3))
                          : (q(e, $, e.bl_tree), B(e, r - 11, 7));
                      (r = 0),
                        (n = a),
                        0 === s
                          ? ((l = 138), (c = 3))
                          : a === s
                          ? ((l = 6), (c = 3))
                          : ((l = 7), (c = 4));
                    }
                }
                function re(e) {
                  var t;
                  for (
                    ne(e, e.dyn_ltree, e.l_desc.max_code),
                      ne(e, e.dyn_dtree, e.d_desc.max_code),
                      ae(e, e.bl_desc),
                      t = b - 1;
                    t >= 3 && 0 === e.bl_tree[2 * N[t] + 1];
                    t--
                  );
                  return (e.opt_len += 3 * (t + 1) + 5 + 5 + 4), t;
                }
                function le(e, t, i, o) {
                  var a;
                  for (
                    B(e, t - 257, 5), B(e, i - 1, 5), B(e, o - 4, 4), a = 0;
                    a < o;
                    a++
                  )
                    B(e, e.bl_tree[2 * N[a] + 1], 3);
                  se(e, e.dyn_ltree, t - 1), se(e, e.dyn_dtree, i - 1);
                }
                function ce(e) {
                  var t,
                    i = 4093624447;
                  for (t = 0; t <= 31; t++, i >>>= 1)
                    if (1 & i && 0 !== e.dyn_ltree[2 * t]) return n;
                  if (
                    0 !== e.dyn_ltree[18] ||
                    0 !== e.dyn_ltree[20] ||
                    0 !== e.dyn_ltree[26]
                  )
                    return s;
                  for (t = 32; t < f; t++)
                    if (0 !== e.dyn_ltree[2 * t]) return s;
                  return n;
                }
                var de = !1;
                function ue(e) {
                  de || (J(), (de = !0)),
                    (e.l_desc = new U(e.dyn_ltree, L)),
                    (e.d_desc = new U(e.dyn_dtree, j)),
                    (e.bl_desc = new U(e.bl_tree, P)),
                    (e.bi_buf = 0),
                    (e.bi_valid = 0),
                    Z(e);
                }
                function pe(e, t, i, o) {
                  B(e, (c << 1) + (o ? 1 : 0), 3), ee(e, t, i, !0);
                }
                function he(e) {
                  B(e, d << 1, 3), q(e, C, I), G(e);
                }
                function me(e, t, i, o) {
                  var n,
                    s,
                    l = 0;
                  e.level > 0
                    ? (e.strm.data_type === r && (e.strm.data_type = ce(e)),
                      ae(e, e.l_desc),
                      ae(e, e.d_desc),
                      (l = re(e)),
                      (n = (e.opt_len + 3 + 7) >>> 3),
                      (s = (e.static_len + 3 + 7) >>> 3) <= n && (n = s))
                    : (n = s = i + 5),
                    i + 4 <= n && -1 !== t
                      ? pe(e, t, i, o)
                      : e.strategy === a || s === n
                      ? (B(e, (d << 1) + (o ? 1 : 0), 3), oe(e, I, R))
                      : (B(e, (u << 1) + (o ? 1 : 0), 3),
                        le(
                          e,
                          e.l_desc.max_code + 1,
                          e.d_desc.max_code + 1,
                          l + 1
                        ),
                        oe(e, e.dyn_ltree, e.dyn_dtree)),
                    Z(e),
                    o && Q(e);
                }
                function fe(e, t, i) {
                  return (
                    (e.pending_buf[e.d_buf + 2 * e.last_lit] = (t >>> 8) & 255),
                    (e.pending_buf[e.d_buf + 2 * e.last_lit + 1] = 255 & t),
                    (e.pending_buf[e.l_buf + e.last_lit] = 255 & i),
                    e.last_lit++,
                    0 === t
                      ? e.dyn_ltree[2 * i]++
                      : (e.matches++,
                        t--,
                        e.dyn_ltree[2 * (A[i] + f + 1)]++,
                        e.dyn_dtree[2 * V(t)]++),
                    e.last_lit === e.lit_bufsize - 1
                  );
                }
                (i._tr_init = ue),
                  (i._tr_stored_block = pe),
                  (i._tr_flush_block = me),
                  (i._tr_tally = fe),
                  (i._tr_align = he);
              },
              { "../utils/common": 27 },
            ],
            39: [
              function (e, t, i) {
                function o() {
                  (this.input = null),
                    (this.next_in = 0),
                    (this.avail_in = 0),
                    (this.total_in = 0),
                    (this.output = null),
                    (this.next_out = 0),
                    (this.avail_out = 0),
                    (this.total_out = 0),
                    (this.msg = ""),
                    (this.state = null),
                    (this.data_type = 2),
                    (this.adler = 0);
                }
                t.exports = o;
              },
              {},
            ],
          },
          {},
          [9]
        )(9);
      });
    }.call(
      this,
      i("./node_modules/webpack/buildin/harmony-module.js")(e),
      i("./node_modules/webpack/buildin/global.js")
    ));
  },
  "./src/lib/jqueryui/ui-lightness/jquery-ui-1.10.4.custom.min.css": function (
    e,
    t,
    i
  ) {},
  "./src/react/DatabaseList.scss": function (e, t, i) {},
  "./src/react/HomeHistory.scss": function (e, t, i) {},
  "./src/react/LightboxComponent.tsx": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return l;
    });
    var o = i("./node_modules/@zhyabs1314/react-image-lightbox/dist/main.js"),
      a = i.n(o),
      n = i("./node_modules/react/index.js"),
      s = i("./src/js/localesEngine/localesManager.ts"),
      r =
        (i("./src/react/LightboxComponent.css"),
        i("./src/react/util/FastClickContainer.tsx"));
    class l extends n.Component {
      constructor(e) {
        super(e),
          (this.state = {
            photoIndex: this.props.initialImageIndex,
            className: "LightboxComponent_initial",
          });
      }
      render() {
        const e = this.state.photoIndex;
        let t, i;
        return (
          this.props.images.length > 1 &&
            ((t = this.props.images[(e + 1) % this.props.images.length].file),
            (i =
              this.props.images[
                (e + this.props.images.length - 1) % this.props.images.length
              ].file)),
          n.createElement(a.a, {
            wrapperClassName: this.state.className,
            onImageLoad: () => this.setState({ className: void 0 }),
            mainSrc: this.props.images[e].file,
            nextSrc: t,
            prevSrc: i,
            imageTitle: this.props.images[e].name,
            onCloseRequest: this.props.closeLightBox,
            toolbarButtons: [
              n.createElement(
                r.a,
                {
                  key: e,
                  className: "lightbox-download",
                  onFastClick: () =>
                    this.props.downloadUrl(this.props.images[e]),
                },
                Object(s.a)().download
              ),
            ],
            onMovePrevRequest: () =>
              this.setState({
                photoIndex:
                  (e + this.props.images.length - 1) % this.props.images.length,
              }),
            onMoveNextRequest: () =>
              this.setState({ photoIndex: (e + 1) % this.props.images.length }),
          })
        );
      }
    }
  },
  "./src/react/NXSwitch.scss": function (e, t, i) {},
  "./src/react/NXSwitch.tsx": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return r;
    });
    var o = i("./node_modules/react/index.js"),
      a = i.n(o),
      n =
        (i("./src/react/NXSwitch.scss"),
        i("./src/react/util/FastClickContainer.tsx")),
      s = i("./src/react/util/general.ts");
    const r = (e) => {
      var t;
      return a.a.createElement(
        "div",
        {
          className: `NXSwitch_container ${
            null !== (t = e.containerClassName) && void 0 !== t ? t : ""
          }`,
        },
        e.texts.map((t, i) => {
          var o;
          return a.a.createElement(
            n.a,
            {
              key: i,
              className: Object(s.a)(
                "NXSwitch_item",
                { NXSwitch_itemSelected: i === e.selectedIndex },
                null !== (o = e.itemClassName) && void 0 !== o ? o : ""
              ),
              onFastClick: () => e.onSelect(i),
            },
            t
          );
        })
      );
    };
  },
  "./src/react/PdfRenderer.tsx": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return f;
    });
    var o = i("./node_modules/@babel/runtime/helpers/defineProperty.js"),
      a = i.n(o),
      n = i("./node_modules/react/index.js"),
      s = i("./node_modules/react-pdf/dist/entry.js"),
      r = i("./src/js/localesEngine/localesManager.ts"),
      l =
        (i("./src/react/PdfRenderer.css"),
        i("./src/react/util/FastClickContainer.tsx"));
    class c {
      constructor() {
        a()(this, "dummy", void 0);
      }
    }
    const d = new c();
    function u() {
      return d;
    }
    function p(e) {
      return e === d;
    }
    function h(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function m(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? h(Object(i), !0).forEach(function (t) {
              a()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : h(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    s.pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${s.pdfjs.version}/pdf.worker.js`;
    class f extends n.Component {
      constructor(e) {
        super(e),
          a()(this, "HEADER_HEIGHT", 50),
          a()(this, "ZOOM_STEP", 0.3),
          a()(this, "MAX_ZOOM", 2.8),
          a()(this, "MIN_ZOOM", 0.7),
          a()(this, "resize", () => {
            this.setState({
              width: 0.9 * window.getWidth(),
              height: window.getHeight(),
            });
          }),
          a()(this, "onZoomInClick", () => {
            this.setState((e) =>
              m({}, e, {
                scale: Math.min(e.scale + this.ZOOM_STEP, this.MAX_ZOOM),
              })
            );
          }),
          a()(this, "onZoomOutClick", () => {
            this.setState((e) =>
              m({}, e, {
                scale: Math.max(e.scale - this.ZOOM_STEP, this.MIN_ZOOM),
              })
            );
          }),
          a()(this, "onDocumentLoad", ({ numPages: e }) => {
            this.setState({ numPages: e });
          }),
          (this.state = {
            numLoadedPages: 0,
            numPages: u(),
            height: 0,
            width: 0,
            scale: 1,
          });
      }
      componentWillMount() {
        window.addEventListener("resize", this.resize), this.resize();
      }
      componentWillUnmount() {
        window.removeEventListener("resize", this.resize);
      }
      render() {
        return n.createElement(
          "div",
          {
            className: p(this.state.numPages) ? "PdfRenderer_rootLoading" : "",
          },
          n.createElement(
            s.Document,
            {
              className: "PdfRenderer_document",
              file: this.props.pdfUrl,
              loading: "Loading...",
              onLoadSuccess: this.onDocumentLoad,
            },
            p(this.state.numPages)
              ? "Loading..."
              : this.renderPages(this.state.numPages)
          ),
          n.createElement(
            "div",
            {
              className: "PdfRenderer_header",
              style: { height: this.HEADER_HEIGHT },
            },
            n.createElement(
              "div",
              { className: "PdfRenderer_headerNameContainer" },
              n.createElement(
                "div",
                { className: "PdfRenderer_headerItem" },
                this.props.fileName
              )
            ),
            n.createElement(
              "div",
              { className: "PdfRenderer_headerButtonContainer" },
              n.createElement(
                l.a,
                {
                  onFastClick: this.props.onDownloadClick,
                  className: "PdfRenderer_headerItem PdfRenderer_headerButton",
                },
                Object(r.a)().download
              ),
              n.createElement(l.a, {
                className:
                  "ril__zoomInButton ril__builtinButton" +
                  (this.state.scale === this.MAX_ZOOM
                    ? " ril__builtinButtonDisabled"
                    : ""),
                onFastClick: this.onZoomInClick,
              }),
              n.createElement(l.a, {
                className:
                  "ril__zoomOutButton ril__builtinButton" +
                  (this.state.scale === this.MIN_ZOOM
                    ? " ril__builtinButtonDisabled"
                    : ""),
                onFastClick: this.onZoomOutClick,
              }),
              n.createElement(l.a, {
                className: "ril__closeButton ril__builtinButton",
                onFastClick: this.props.onCloseClick,
              })
            )
          )
        );
      }
      renderPages(e) {
        const t = [];
        for (let i = 0; i <= this.state.numLoadedPages; i++)
          t.push(
            n.createElement(
              "div",
              {
                className: "PdfRenderer_page",
                style: {
                  paddingTop: 0 === i ? this.HEADER_HEIGHT + 10 : 10,
                  alignItems: this.state.scale <= 1 ? "center" : "flex-start",
                },
                key: i,
              },
              n.createElement(
                "div",
                {
                  style: {
                    width: this.state.width * this.state.scale,
                    fontSize: 16 * this.state.scale,
                  },
                },
                i + 1,
                " / ",
                e
              ),
              n.createElement(s.Page, {
                scale: this.state.scale,
                height: this.state.height,
                renderTextLayer: !1,
                pageNumber: i + 1,
                width: this.state.width,
                loading: "Loading...",
                onRenderSuccess: () => {
                  this.state.numLoadedPages < e - 1 &&
                    this.setState((e) => ({
                      numLoadedPages: e.numLoadedPages + 1,
                    }));
                },
              })
            )
          );
        return n.createElement(
          "div",
          { style: { height: this.state.height, overflow: "auto" } },
          t.map((e) => e)
        );
      }
    }
  },
  "./src/react/SSO.scss": function (e, t, i) {},
  "./src/react/SimpleTabSelectionRow.tsx": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return p;
    });
    var o = i("./node_modules/@babel/runtime/helpers/defineProperty.js"),
      a = i.n(o),
      n = i("./node_modules/react/index.js"),
      s = i("./src/js/localesEngine/localesManager.ts"),
      r =
        (i("./src/react/SimpleTablSelectionRow.css"),
        i("./src/react/tableView/PopupMenu.tsx")),
      l = i("./src/react/util/FastClickContainer.tsx"),
      c = i("./src/react/util/general.ts"),
      d = i(
        "./src/react/util/HorizontalScrollContainer/HorizontalScrollContainer.tsx"
      ),
      u = i(
        "./src/react/util/HorizontalScrollContainer/HorizontalScrollItem.tsx"
      );
    class p extends n.Component {
      constructor(e) {
        super(e),
          a()(this, "handleScrollStateChange", (e) => {
            this.setState({ isScrollable: e, isOpen: !1 });
          }),
          a()(this, "handleShowAllItems", (e) => {
            this.setState({ isOpen: !0, clickTarget: l.b.getTarget(e) });
          }),
          (this.state = { isScrollable: !1, isOpen: !1, clickTarget: null });
      }
      render() {
        return n.createElement(
          "div",
          { className: "SimpleTablSelectionRow_root" },
          n.createElement(
            d.a,
            {
              controlsConfig: {
                left: {
                  visibility: window.TOUCH ? "NONE" : "AUTO",
                  innerElement: this.getElementBeforeControls(),
                },
                right: { visibility: window.TOUCH ? "NONE" : "AUTO" },
                position: "AFTER_CHILD",
              },
              selectedItemId: this.props.currentItemId,
              onScrollStateChange: this.handleScrollStateChange,
            },
            this.props.items.map((e, t) =>
              n.createElement(
                u.a,
                {
                  className: "SimpleTabSelectionRow_itemContainer",
                  id: "" + e.id,
                  key: e.id,
                },
                n.createElement(
                  l.a,
                  {
                    className: Object(c.a)(
                      "SimpleTabSelectionRow_view ",
                      this.props.currentItemId === e.id
                        ? "SimpleTabSelectionRow_viewSelected"
                        : ""
                    ),
                    onFastClick: (t) => this.props.onItemSelect(e.id, t),
                    onFastContextMenu: (t) => {
                      this.props.onContextMenuClick(e.id);
                    },
                  },
                  this.props.currentItemId === e.id
                    ? n.createElement("div", {
                        className: "SimpleTabSelectionRow_selectionIndicator",
                      })
                    : null,
                  this.getItemName(e)
                )
              )
            ),
            this.props.onNewItemClick && !this.state.isScrollable
              ? this.newItemButton()
              : null
          ),
          this.state.isScrollable
            ? n.createElement(
                n.Fragment,
                null,
                n.createElement(
                  "div",
                  { className: "SimpleTabSelectionRow_showAllButtonContainer" },
                  n.createElement(l.a, {
                    className: "i-32-16 i-white i-items",
                    onFastClick: this.handleShowAllItems,
                  })
                ),
                this.state.isOpen
                  ? n.createElement(r.a, {
                      itemBackground: this.props.popupItemBackground,
                      clickTarget: this.state.clickTarget,
                      items: this.props.items,
                      onClick: (e) => {
                        null !== e &&
                          this.props.onItemSelect(this.props.items[e].id),
                          this.setState({ isOpen: !1 });
                      },
                    })
                  : null
              )
            : null
        );
      }
      getItemName(e) {
        return "" === e.text ? Object(s.a)().unknown : e.text;
      }
      getElementBeforeControls() {
        return this.props.onNewItemClick && this.state.isScrollable
          ? this.newItemButton()
          : null;
      }
      newItemButton() {
        return null === this.props.onNewItemClick
          ? null
          : this.props.newButtonText
          ? n.createElement(
              l.a,
              {
                className: "secondary-tab",
                onFastClick: this.props.onNewItemClick,
              },
              this.props.newButtonText
            )
          : n.createElement(
              l.a,
              {
                onFastClick: this.props.onNewItemClick,
                className: "SimpleTabSelectionRow_newItemButton",
              },
              n.createElement("div", {
                className: "i-32-16 i-light-grey i-plus",
              })
            );
      }
    }
  },
  "./src/react/components/NinoxPopup.tsx": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return c;
    });
    var o = i("./node_modules/react/index.js"),
      a = i("./node_modules/react-dom/index.js"),
      n = i.n(a),
      s = i("./node_modules/react-transition-group/esm/CSSTransition.js"),
      r = i("./src/react/util/general.ts");
    i("./src/react/components/NinoxPopup.css");
    const l = 300;
    function c(e) {
      var t, i, a, c, d;
      const u = null !== (t = e.animationDuration) && void 0 !== t ? t : l,
        p =
          null !== (i = e.animationClass) && void 0 !== i
            ? i
            : "popup-default-animation",
        h = null === (a = e.unmountOnExit) || void 0 === a || a,
        m = null === (c = e.appear) || void 0 === c || c,
        f = null === (d = e.isVisible) || void 0 === d || d,
        g = o.useRef(),
        [v, b] = o.useState(!1);
      function y() {
        return o.createElement(
          "div",
          {
            className: Object(r.a)("popup-root", e.className),
            ref: e.innerRef,
          },
          o.createElement("div", {
            onMouseDown: e.handleClose,
            onTouchStart: e.handleClose,
            className: "popup-catcher",
          }),
          e.children
        );
      }
      return (
        o.useLayoutEffect(() => {
          const e = document.createElement("div");
          return (
            document.body.appendChild(e),
            (g.current = e),
            b(!0),
            () => {
              document.body.removeChild(e);
            }
          );
        }, []),
        v && g.current
          ? u > 0 && p
            ? n.a.createPortal(
                o.createElement(
                  s.a,
                  {
                    appear: m,
                    in: f,
                    timeout: u,
                    classNames: p,
                    unmountOnExit: h,
                    onEntered: e.onEntered,
                    onEnter: e.onEnter,
                    onEntering: e.onEntering,
                    onExited: e.onExited,
                    onExit: e.onExit,
                    onExiting: e.onExiting,
                  },
                  y()
                ),
                g.current
              )
            : f
            ? n.a.createPortal(y(), g.current)
            : null
          : null
      );
    }
  },
  "./src/react/credentials/Credentials.scss": function (e, t, i) {},
  "./src/react/editors/NXTimePicker.scss": function (e, t, i) {},
  "./src/react/root/RootHeader.scss": function (e, t, i) {},
  "./src/react/root/TeamInfo.scss": function (e, t, i) {},
  "./src/react/root/TeamPanel.scss": function (e, t, i) {},
  "./src/react/tableView/PopupMenu.tsx": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return x;
    });
    var o = i("./node_modules/@babel/runtime/helpers/defineProperty.js"),
      a = i.n(o),
      n = i("./node_modules/react/index.js"),
      s = i("./node_modules/react-sortable-hoc/dist/react-sortable-hoc.umd.js"),
      r = i("./src/js/localesEngine/localesManager.ts"),
      l = i("./src/react/util/commons.ts"),
      c = i("./src/react/util/hooks.ts"),
      d = i("./src/react/util/PositionedBackplane.tsx"),
      u = i("./src/react/util/SearchBarWithX.tsx"),
      p =
        (i("./src/react/tableView/PopupMenu.css"),
        i("./src/react/util/FastClickContainer.tsx")),
      h = i("./src/react/util/general.ts");
    i("./src/react/tableView/PopupMenuTab.css");
    function m(e) {
      return n.createElement(
        p.a,
        {
          className: Object(h.a)("PopupMenuTab", {
            PopupMenuTab_Selected: !!e.item.isSelected,
            PopupMenuTab_Sorting: e.isSorting,
            PopupMenuTab_small: e.isSmall,
            PopupMenuTab_sortable:
              void 0 !== e.onReorder || "OFF_WHITE" === e.background,
          }),
          onFastClick: (t) => e.handleClick(t),
        },
        n.createElement(
          "div",
          { className: "PopupMenuTab_container" },
          e.item.iconClass
            ? n.createElement(
                "div",
                { className: "PopupMenuTab_iconContainer" },
                n.createElement("div", { className: e.item.iconClass })
              )
            : null,
          n.createElement(
            "div",
            { className: "PopupMenuTab_Text" },
            e.item.text ? e.item.text : Object(r.a)().unnamed
          )
        ),
        void 0 !== e.onReorder ? n.createElement(f, null) : null
      );
    }
    const f = Object(s.SortableHandle)(() =>
      n.createElement(
        "span",
        { className: "PopupMenuTab_sortingHandleContainer" },
        n.createElement("span", {
          className: "i-32-24 i-lighter-grey i-drag-handle",
        })
      )
    );
    function g(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function v(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? g(Object(i), !0).forEach(function (t) {
              a()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : g(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    const b = 640,
      y = Object(s.SortableElement)(({ children: e }) => e),
      w = Object(s.SortableContainer)(
        ({ style: e, className: t, children: i }) =>
          n.createElement("div", { style: e, className: t }, i)
      );
    function x(e) {
      const [t, i] = n.useState({ isSorting: !1, filterBy: "", show: !0 }),
        [o, a] = Object(c.c)(),
        [s, p] = n.useState(null),
        h = o <= b,
        f = h ? 100 : 164,
        g = h ? 4 : 16,
        x = (e) => {
          i(v({}, t, { filterBy: e }));
        },
        T = () => {
          const t = Math.max(1, Math.floor((o - g) / f));
          let i;
          i = void 0 !== e.maxColumns ? Math.min(e.maxColumns, t) : t;
          const a = Math.ceil(Math.sqrt(e.items.length));
          return Math.min(a, i) * f;
        };
      function C(...e) {
        i(v({}, t, { show: !1 })), p(e);
      }
      return n.createElement(
        d.a,
        {
          clickTarget: e.clickTarget,
          show: t.show,
          settings: { style: "tooltip", arrowColor: "white" },
          onDidHide: () => s && e.onClick(...s),
          onClick: (e) => C(null, e),
        },
        n.createElement(
          "div",
          { className: "PopupMenu_root" },
          !1 !== e.renderSearch
            ? n.createElement(u.a, {
                onFilterChange: x,
                placeholder: Object(r.a)().search,
                className: "PopupMenu_searchBar",
              })
            : null,
          n.createElement(
            w,
            {
              style: { maxHeight: a - 250, width: T() },
              onSortStart: () => i(v({}, t, { isSorting: !0 })),
              onSortEnd: (o) => {
                i(v({}, t, { isSorting: !1 })),
                  Object(l.a)(e.onReorder),
                  e.onReorder(o.oldIndex, o.newIndex);
              },
              axis: "xy",
              useDragHandle: !0,
              className: "PopupMenu_body",
              helperClass: "PopupMenu_helperClass",
            },
            e.items.reduce(
              (i, o, a) => (
                ("" === t.filterBy ||
                  (o.text || "")
                    .toLowerCase()
                    .includes(t.filterBy.toLowerCase())) &&
                  i.push(
                    n.createElement(
                      y,
                      { index: a, key: o.id },
                      n.createElement(m, {
                        background: e.itemBackground,
                        isSmall: h,
                        item: o,
                        handleClick: (e) => C(a, e),
                        isSorting: t.isSorting,
                        onReorder: e.onReorder,
                      })
                    )
                  ),
                i
              ),
              []
            )
          )
        )
      );
    }
  },
  "./src/react/util/FastClickContainer.tsx": function (e, t, i) {
    "use strict";
    i.d(t, "b", function () {
      return m;
    }),
      i.d(t, "a", function () {
        return f;
      });
    var o = i("./node_modules/@babel/runtime/helpers/extends.js"),
      a = i.n(o),
      n = i("./node_modules/@babel/runtime/helpers/objectWithoutProperties.js"),
      s = i.n(n),
      r = i("./node_modules/@babel/runtime/helpers/defineProperty.js"),
      l = i.n(r),
      c = i("./node_modules/assert-never/index.js"),
      d = i.n(c),
      u = i("./node_modules/react/index.js");
    i("./src/react/util/FastClickContainer.css");
    function p(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function h(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? p(Object(i), !0).forEach(function (t) {
              l()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : p(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    let m;
    !(function (e) {
      function t(e) {
        switch (e.kind) {
          case "MouseDown":
          case "MouseUp":
            return { x: e.event.clientX, y: e.event.clientY };
          case "TouchEnd":
            return {
              x: e.event.changedTouches[0].clientX,
              y: e.event.changedTouches[0].clientY,
            };
          case "TouchStart":
            return {
              x: e.event.touches[0].clientX,
              y: e.event.touches[0].clientY,
            };
          default:
            return d()(e);
        }
      }
      function i(e) {
        switch (e.kind) {
          case "MouseDown":
          case "MouseUp":
            return e.event.target;
          case "TouchEnd":
            return e.event.changedTouches[0].target;
          case "TouchStart":
            return e.event.touches[0].target;
          default:
            return d()(e);
        }
      }
      (e.getPosition = t), (e.getTarget = i);
    })(m || (m = {}));
    class f extends u.Component {
      constructor(e) {
        super(e),
          l()(this, "shouldCountAsClick", void 0),
          l()(this, "rippleTimeoutId", void 0),
          l()(this, "longPressTimeoutId", void 0),
          l()(this, "initialCoords", void 0),
          l()(this, "longPressOccurred", !1),
          l()(this, "handleContextMenu", (e) => {
            void 0 !== this.props.onFastContextMenu &&
              (e.preventDefault(),
              e.stopPropagation(),
              this.props.onFastContextMenu({ event: e, kind: "MouseDown" })),
              (this.shouldCountAsClick = !1);
          }),
          l()(this, "handleTouchEnd", (e) => {
            clearTimeout(this.longPressTimeoutId),
              this.longPressOccurred
                ? this.handleLongPressOccurred(e)
                : this.shouldCountAsClick &&
                  0 === e.touches.length &&
                  1 === e.changedTouches.length &&
                  (e.stopPropagation(),
                  e.preventDefault(),
                  this.props.onFastClick({ kind: "TouchEnd", event: e })),
              (this.shouldCountAsClick = !1);
          }),
          l()(this, "handleMouseUp", (e) => {
            clearTimeout(this.longPressTimeoutId),
              this.longPressOccurred
                ? this.handleLongPressOccurred(e)
                : this.shouldCountAsClick &&
                  (e.stopPropagation(),
                  e.preventDefault(),
                  this.props.onFastClick({ kind: "MouseUp", event: e })),
              (this.shouldCountAsClick = !1);
          }),
          l()(this, "handleTouchMove", (e) => {
            if (!this.shouldCountAsClick) return;
            const t = e.touches[0].clientX,
              i = e.touches[0].clientY,
              o = 100,
              a = t - this.initialCoords.x,
              n = i - this.initialCoords.y;
            a * a + n * n > o &&
              (this.cleanUp(), (this.shouldCountAsClick = !1));
          }),
          l()(this, "handleMouseLeave", () => {
            this.shouldCountAsClick &&
              (this.cleanUp(), (this.shouldCountAsClick = !1));
          }),
          l()(this, "handleTouchStart", (e) => {
            if (e.touches.length > 1) return;
            const t = { event: e, kind: "TouchStart" };
            this.setInitialCoords(t),
              this.startClick(t),
              "PREVENT_RIPPLE" !== this.props.behaviour && this.showRipple(t),
              void 0 !== this.props.onTouchStart && this.props.onTouchStart(e);
          }),
          l()(this, "handleMouseDown", (e) => {
            if (0 !== e.button) return;
            const t = { event: e, kind: "MouseDown" };
            this.startClick(t),
              "FORCE_RIPPLE" === this.props.behaviour && this.showRipple(t),
              void 0 !== this.props.onMouseDown && this.props.onMouseDown(e);
          }),
          l()(this, "showRipple", (e) => {
            this.callCleanUp(500);
            const t = e.event.currentTarget,
              i = t.offsetWidth,
              o = t.getBoundingClientRect();
            let { x: a, y: n } = m.getPosition(e);
            (n = n - o.y - i / 2), (a = a - o.x - i / 2);
            const s = {
              top: n + "px",
              left: a + "px",
              height: i + "px",
              width: i + "px",
            };
            this.setState({ spanStyles: this.state.spanStyles.concat(s) });
          }),
          l()(this, "renderRippleSpan", () =>
            this.state.spanStyles.length > 0
              ? this.state.spanStyles.map((e, t) =>
                  u.createElement("span", {
                    key: "spanCount_" + t,
                    style: e,
                    className:
                      "FastClickContainer_ripple " +
                      ("LIGHT" === this.props.rippleStyle
                        ? "FastClickContainer_rippleLight"
                        : "FastClickContainer_rippleDark"),
                  })
                )
              : null
          ),
          l()(this, "cleanUp", () => {
            this.setState({ spanStyles: [] });
          }),
          l()(this, "callCleanUp", (e) => {
            "PREVENT_RIPPLE" !== this.props.behaviour &&
              (clearTimeout(this.rippleTimeoutId),
              (this.rippleTimeoutId = window.setTimeout(this.cleanUp, e)));
          }),
          (this.shouldCountAsClick = !1),
          (this.initialCoords = { x: 0, y: 0 }),
          (this.state = { spanStyles: [] });
      }
      componentWillUnmount() {
        clearTimeout(this.rippleTimeoutId),
          clearTimeout(this.longPressTimeoutId);
      }
      render() {
        const e = h({}, this.props),
          {
            onFastClick: t,
            innerRef: i,
            rippleStyle: o,
            behaviour: n,
            preventLongPress: r,
            onFastContextMenu: l,
          } = e,
          c = s()(e, [
            "onFastClick",
            "innerRef",
            "rippleStyle",
            "behaviour",
            "preventLongPress",
            "onFastContextMenu",
          ]),
          d =
            void 0 !== this.props.className
              ? this.props.className + " FastClickContainer_root"
              : "FastClickContainer_root";
        return u.createElement(
          "div",
          a()({}, c, {
            className: d,
            ref: this.props.innerRef,
            onTouchStart: this.handleTouchStart,
            onContextMenu: this.handleContextMenu,
            onTouchEnd: this.handleTouchEnd,
            onTouchMove: this.handleTouchMove,
            onMouseDown: this.handleMouseDown,
            onMouseLeave: this.handleMouseLeave,
            onMouseUp: this.handleMouseUp,
          }),
          u.createElement(
            "div",
            { className: "FastClickContainer_rippleContainer" },
            this.renderRippleSpan()
          ),
          this.props.children
        );
      }
      setInitialCoords(e) {
        const t = m.getPosition(e);
        this.initialCoords = { x: t.x, y: t.y };
      }
      startClick(e) {
        (this.shouldCountAsClick = !0),
          e.event.persist(),
          this.longPressTimer(e),
          e.event.stopPropagation();
      }
      longPressTimer(e) {
        clearTimeout(this.longPressTimeoutId),
          (this.longPressTimeoutId = window.setTimeout(() => {
            this.shouldCountAsClick &&
              void 0 !== this.props.onFastContextMenu &&
              !0 !== this.props.preventLongPress &&
              (e.event.cancelable
                ? e.event.preventDefault()
                : (this.longPressOccurred = !0),
              e.event.stopPropagation(),
              this.props.onFastContextMenu(e),
              (this.shouldCountAsClick = !1));
          }, 200));
      }
      handleLongPressOccurred(e) {
        e.stopPropagation(), e.preventDefault(), (this.longPressOccurred = !1);
      }
    }
  },
  "./src/react/util/HorizontalScrollContainer/HorizontalScrollContainer.tsx":
    function (e, t, i) {
      "use strict";
      i.d(t, "a", function () {
        return f;
      });
      var o = i("./node_modules/@babel/runtime/helpers/extends.js"),
        a = i.n(o),
        n = i("./node_modules/@babel/runtime/helpers/defineProperty.js"),
        s = i.n(n),
        r = i("./node_modules/assert-never/index.js"),
        l = i.n(r),
        c = i("./node_modules/react/index.js"),
        d = i("./node_modules/seamless-scroll-polyfill/dist/es5/seamless.js"),
        u = i("./src/react/util/commons.ts"),
        p =
          (i(
            "./src/react/util/HorizontalScrollContainer/HorizontalScrollContainer.css"
          ),
          i(
            "./src/react/util/HorizontalScrollContainer/HorizontalScrollItem.tsx"
          ));
      function h(e, t) {
        var i = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var o = Object.getOwnPropertySymbols(e);
          t &&
            (o = o.filter(function (t) {
              return Object.getOwnPropertyDescriptor(e, t).enumerable;
            })),
            i.push.apply(i, o);
        }
        return i;
      }
      function m(e) {
        for (var t = 1; t < arguments.length; t++) {
          var i = null != arguments[t] ? arguments[t] : {};
          t % 2
            ? h(Object(i), !0).forEach(function (t) {
                s()(e, t, i[t]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
            : h(Object(i)).forEach(function (t) {
                Object.defineProperty(
                  e,
                  t,
                  Object.getOwnPropertyDescriptor(i, t)
                );
              });
        }
        return e;
      }
      class f extends c.Component {
        constructor(e) {
          super(e),
            s()(this, "SCROLL_TIMEOUT_INTO_VIEW", 50),
            s()(this, "SCROLL_TIMEOUT_WHEEL", 100),
            s()(this, "SCROLL_TIMEOUT_ARROWS", 30),
            s()(this, "scrollableContainer", c.createRef()),
            s()(this, "selectedItem", c.createRef()),
            s()(this, "wasScrollable", void 0),
            s()(this, "scrollTimeoutId", void 0),
            s()(this, "resizeTimeoutId", void 0),
            s()(this, "scrollTimeoutTimer", void 0),
            s()(this, "isScrolling", void 0),
            s()(this, "lastSelectedItemId", void 0),
            s()(this, "handleWheel", (e) => {
              if (
                0 === e.deltaY ||
                0 !== e.deltaX ||
                !0 === this.props.removeMouseWheelOverride
              )
                return;
              const t = this.scrollableContainer.current,
                i = e.deltaY > 0 ? "RIGHT" : "LEFT";
              this.canScrollToSide(t, i) &&
                ((this.scrollTimeoutTimer = this.SCROLL_TIMEOUT_WHEEL),
                d.elementScrollBy(t, { top: 0, left: e.deltaY }));
            }),
            s()(this, "handleScrollEnd", () => {
              if (((this.isScrolling = !1), void 0 === this.props.onScrollEnd))
                return;
              const e = this.scrollableContainer.current;
              let t = null;
              this.canScrollToSide(e, "LEFT")
                ? this.canScrollToSide(e, "RIGHT") || (t = "RIGHT")
                : (t = "LEFT"),
                this.props.onScrollEnd(t);
            }),
            s()(this, "handleScroll", () => {
              clearTimeout(this.scrollTimeoutId),
                this.scrollStart(),
                (this.scrollTimeoutId = window.setTimeout(
                  this.handleScrollEnd,
                  this.scrollTimeoutTimer
                ));
            }),
            s()(this, "resize", () => {
              clearTimeout(this.resizeTimeoutId),
                (this.resizeTimeoutId = window.setTimeout(
                  this.resizeListener,
                  50
                ));
            }),
            s()(this, "resizeListener", () => {
              const e = this.scrollableContainer.current;
              if (null === e) return;
              const t =
                Math.floor(e.scrollWidth) >
                Math.ceil(e.getBoundingClientRect().width) + 1;
              this.wasScrollable !== t &&
                ((this.wasScrollable = t),
                this.setState({ isScrollable: t }),
                this.handleScrollStateChange(t)),
                this.scrollIntoViewIfNeeded();
            }),
            (this.isScrolling = !1),
            (this.scrollTimeoutTimer = this.SCROLL_TIMEOUT_INTO_VIEW),
            (this.state = { shaking: null, isScrollable: !1 });
        }
        componentDidMount() {
          !0 !== this.props.useExternalResizeListener &&
            window.addEventListener("resize", this.resize),
            this.resize();
        }
        componentWillUnmount() {
          window.removeEventListener("resize", this.resize);
        }
        componentDidUpdate(e, t) {
          this.resize();
        }
        render() {
          const e =
              "BEFORE_CHILD" === this.props.controlsConfig.position ||
              "SEPARATED" === this.props.controlsConfig.position,
            t =
              "AFTER_CHILD" === this.props.controlsConfig.position ||
              "SEPARATED" === this.props.controlsConfig.position;
          return c.createElement(
            "div",
            {
              onWheel: this.handleWheel,
              onScroll: this.handleScroll,
              className: "HorizontalScrollContainer_root",
            },
            this.state.isScrollable && e
              ? this.renderControls("BEFORE_CHILD")
              : null,
            c.createElement(
              "div",
              {
                className: this.getChildrenContainerClass(),
                ref: this.scrollableContainer,
                onAnimationEnd: () => this.setState({ shaking: null }),
              },
              !this.state.isScrollable && e
                ? this.renderControls("BEFORE_CHILD")
                : null,
              this.renderChildren(),
              !this.state.isScrollable && t
                ? this.renderControls("AFTER_CHILD")
                : null
            ),
            this.state.isScrollable && t
              ? this.renderControls("AFTER_CHILD")
              : null
          );
        }
        renderControls(e) {
          if (!this.isControlVisible()) return null;
          let t = null;
          const i = m({}, this.props.controlsConfig.right, {
              direction: "RIGHT",
            }),
            o = m({}, this.props.controlsConfig.left, { direction: "LEFT" });
          switch (this.props.controlsConfig.position) {
            case "BEFORE_CHILD":
              "BEFORE_CHILD" === e &&
                (t = c.createElement(
                  c.Fragment,
                  null,
                  this.isMovementControlsVisible(o)
                    ? this.renderMovementControl(o)
                    : null,
                  o.innerElement,
                  this.isMovementControlsVisible(i)
                    ? this.renderMovementControl(i)
                    : null,
                  i.innerElement
                ));
              break;
            case "AFTER_CHILD":
              "AFTER_CHILD" === e &&
                (t = c.createElement(
                  c.Fragment,
                  null,
                  o.innerElement,
                  this.isMovementControlsVisible(o)
                    ? this.renderMovementControl(o)
                    : null,
                  i.innerElement,
                  this.isMovementControlsVisible(i)
                    ? this.renderMovementControl(i)
                    : null
                ));
              break;
            case "SEPARATED":
              "BEFORE_CHILD" === e &&
                (t = c.createElement(
                  c.Fragment,
                  null,
                  this.isMovementControlsVisible(o)
                    ? this.renderMovementControl(o)
                    : null,
                  i.innerElement
                )),
                "AFTER_CHILD" === e &&
                  (t = c.createElement(
                    c.Fragment,
                    null,
                    o.innerElement,
                    this.isMovementControlsVisible(i)
                      ? this.renderMovementControl(i)
                      : null
                  ));
              break;
            default:
              l()(this.props.controlsConfig.position);
          }
          return c.createElement(
            "div",
            {
              className:
                "HorizontalScrollContainer_buttonsContainer" +
                (null !== this.state.shaking
                  ? " HorizontalScrollContainer_buttonsContainerShaking"
                  : ""),
            },
            t
          );
        }
        scrollIntoViewIfNeeded() {
          null !== this.selectedItem.current &&
            this.lastSelectedItemId !== this.props.selectedItemId &&
            ((this.lastSelectedItemId = this.props.selectedItemId),
            (this.scrollTimeoutTimer = this.SCROLL_TIMEOUT_INTO_VIEW),
            d.elementScrollIntoView(this.selectedItem.current, {
              behavior: "smooth",
            }));
        }
        scrollStart() {
          this.isScrolling ||
            ((this.isScrolling = !0),
            void 0 !== this.props.onScrollStart && this.props.onScrollStart());
        }
        renderMovementControl(e) {
          const t =
            void 0 !== e.iconClassName
              ? e.iconClassName
              : "LEFT" === e.direction
              ? "i-32-16 i-white i-line-left-medium"
              : "i-32-16 i-white i-line-right-medium";
          return c.createElement(
            "div",
            {
              onClick: () => this.scrollStep(e.direction),
              className: e.containerClassName,
            },
            c.createElement("div", { className: t })
          );
        }
        renderChildren() {
          let e = this.props.children;
          return (
            void 0 !== this.props.selectedItemId && (e = this.getChildren(e)), e
          );
        }
        getChildren(e) {
          return c.Children.map(e, (e) =>
            Object(u.b)(e, p.a)
              ? c.createElement(
                  "div",
                  a()({}, e.props, {
                    ref:
                      this.props.selectedItemId === e.props.id
                        ? this.selectedItem
                        : null,
                  })
                )
              : c.isValidElement(e)
              ? c.cloneElement(e, {
                  children: this.getChildren(e.props.children),
                })
              : e
          );
        }
        isControlVisible() {
          const e = this.props.controlsConfig.right,
            t = this.props.controlsConfig.left;
          return (
            void 0 === t ||
            void 0 === e ||
            this.isMovementControlsVisible(e) ||
            this.isMovementControlsVisible(t) ||
            t.innerElement ||
            e.innerElement
          );
        }
        isMovementControlsVisible(e) {
          return (
            void 0 === e ||
            "ALWAYS" === e.visibility ||
            (this.state.isScrollable && "NONE" !== e.visibility)
          );
        }
        handleScrollStateChange(e) {
          void 0 !== this.props.onScrollStateChange &&
            this.props.onScrollStateChange(e);
        }
        getChildrenContainerClass() {
          let e = "HorizontalScrollContainer_itemsContainer";
          return (
            this.state.isScrollable &&
              (e +=
                " HorizontalScrollContainer_tabsContainerIESupportWhenScrolling"),
            "LEFT" === this.state.shaking
              ? (e += " HorizontalScrollContainer_shakeLeft")
              : "RIGHT" === this.state.shaking &&
                (e += " HorizontalScrollContainer_shakeRight"),
            e
          );
        }
        canScrollToSide(e, t) {
          return "LEFT" === t
            ? e.scrollLeft > 0
            : Math.ceil(e.scrollLeft) <
                Math.floor(e.scrollWidth - e.clientWidth);
        }
        getScrollBy(e, t) {
          const i = "LEFT" === t ? -1 : 1;
          if (void 0 !== this.props.customScrollBy)
            return i * this.props.customScrollBy(e.clientWidth);
          {
            const t = 208;
            return i * Math.max(e.clientWidth / 2, t);
          }
        }
        scrollStep(e) {
          const t = this.scrollableContainer.current;
          !this.state.isScrollable ||
          (!this.canScrollToSide(t, e) && null === this.state.shaking)
            ? this.setState({ shaking: e })
            : this.isScrolling ||
              ((this.scrollTimeoutTimer = this.SCROLL_TIMEOUT_ARROWS),
              d.elementScrollBy(t, {
                top: 0,
                left: this.getScrollBy(t, e),
                behavior: "smooth",
              }));
        }
      }
    },
  "./src/react/util/HorizontalScrollContainer/HorizontalScrollItem.tsx":
    function (e, t, i) {
      "use strict";
      i.d(t, "a", function () {
        return s;
      });
      var o = i("./node_modules/@babel/runtime/helpers/defineProperty.js"),
        a = i.n(o),
        n = i("./node_modules/react/index.js");
      class s extends n.PureComponent {
        constructor(e) {
          super(e);
        }
        render() {
          return n.createElement("div", this.props);
        }
      }
      a()(s, "displayName", "NinoxHorizontalScrollItem");
    },
  "./src/react/util/PositionedBackplane.tsx": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return S;
    });
    var o = i("./node_modules/assert-never/index.js"),
      a = i("./node_modules/react/index.js"),
      n = i("./node_modules/seamless-scroll-polyfill/dist/es5/seamless.js"),
      s = i("./src/react/components/NinoxPopup.tsx"),
      r = i("./src/react/util/hooks.ts"),
      l =
        (i("./src/react/util/PositionedBackplane.css"),
        i("./node_modules/@babel/runtime/helpers/extends.js")),
      c = i.n(l),
      d = i("./node_modules/@babel/runtime/helpers/defineProperty.js"),
      u = i.n(d),
      p = i("./node_modules/react-popper/lib/esm/usePopper.js"),
      h = i("./src/react/util/general.ts");
    function m(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function f(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? m(Object(i), !0).forEach(function (t) {
              u()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : m(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    const g = 15,
      v = "#ddd";
    function b(e) {
      var t, i;
      const o =
          null !== (t = e.positionAdjustment) && void 0 !== t
            ? t
            : { left: 0, top: 0 },
        [n, s] = a.useState(null),
        [r, l] = a.useState(null),
        {
          styles: d,
          attributes: u,
          state: m,
        } = Object(p.a)(e.target, n, {
          placement: e.customPlacement,
          modifiers: [
            { name: "arrow", options: { element: r } },
            { name: "offset", options: { offset: [o.left, o.top] } },
            {
              name: "preventOverflow",
              options: {
                boundary:
                  null === e.boundariesElement
                    ? "scrollParent"
                    : e.boundariesElement,
              },
            },
          ],
        });
      return a.createElement(
        "div",
        c()(
          {
            className: Object(h.a)("PositionedWithArrow_root", e.className),
            ref: s,
            style: f({}, d.popper),
          },
          u.popper
        ),
        e.children,
        a.createElement("div", {
          className: "PositionedBackplane_arrow",
          ref: l,
          style: f({}, d.arrow, {
            borderWidth: `${g}px`,
            borderColor: null !== (i = e.arrowColor) && void 0 !== i ? i : v,
          }),
        })
      );
    }
    function y(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function w(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? y(Object(i), !0).forEach(function (t) {
              u()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : y(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    function x(e) {
      var t;
      const [i, o] = Object(r.c)(),
        [n, s] = a.useState(null),
        [l, d] = a.useState({}),
        u =
          null !== (t = e.positionAdjustment) && void 0 !== t
            ? t
            : { top: 0, left: 0 },
        { styles: h, attributes: m } = Object(p.a)(e.target, n, {
          modifiers: [{ name: "offset", options: { offset: [u.left, u.top] } }],
        });
      return (
        a.useLayoutEffect(() => {
          const t = e.target.getBoundingClientRect(),
            i = Math.max(o - t.bottom, t.top);
          d({
            minWidth: t.width,
            maxHeight: `${i - 2 * u.top}px`,
            overflow: "auto",
          });
        }, [i, o]),
        a.createElement(
          "div",
          c()(
            {
              className: `positioned-dropdown ${e.className}`,
              ref: s,
              style: w({}, l, {}, h.popper),
            },
            m.popper
          ),
          e.children
        )
      );
    }
    function T(e, t) {
      var i = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        t &&
          (o = o.filter(function (t) {
            return Object.getOwnPropertyDescriptor(e, t).enumerable;
          })),
          i.push.apply(i, o);
      }
      return i;
    }
    function C(e) {
      for (var t = 1; t < arguments.length; t++) {
        var i = null != arguments[t] ? arguments[t] : {};
        t % 2
          ? T(Object(i), !0).forEach(function (t) {
              u()(e, t, i[t]);
            })
          : Object.getOwnPropertyDescriptors
          ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i))
          : T(Object(i)).forEach(function (t) {
              Object.defineProperty(
                e,
                t,
                Object.getOwnPropertyDescriptor(i, t)
              );
            });
      }
      return e;
    }
    function k(e) {
      var t;
      const i = e.target.getBoundingClientRect(),
        o =
          null !== (t = e.positionAdjustment) && void 0 !== t
            ? t
            : { top: 0, left: 0 },
        n = C(
          {
            position: "absolute",
            width: i.width,
            height: i.height,
            transform: `translate(${i.left}px,${i.top}px)`,
          },
          o
        );
      return a.createElement(
        a.Fragment,
        null,
        a.createElement("div", { style: n }, e.children)
      );
    }
    function S(e) {
      const t = Object(r.b)(),
        i = a.useRef(null),
        l = a.useRef(e.clickTarget),
        c = a.useRef(e.settings);
      function d(t) {
        switch (c.current.style) {
          case "overlay":
            return a.createElement(
              k,
              { positionAdjustment: e.positionAdjustment, target: t },
              e.children
            );
          case "tooltip":
            return a.createElement(
              b,
              {
                positionAdjustment: e.positionAdjustment,
                boundariesElement: i.current,
                arrowColor: c.current.arrowColor,
                target: t,
                className: e.className,
                customPlacement: c.current.customPlacement,
              },
              e.children
            );
          case "dropdown":
            return a.createElement(
              x,
              {
                className: e.className,
                positionAdjustment: e.positionAdjustment,
                target: t,
              },
              e.children
            );
          default:
            return Object(o.assertNever)(c.current);
        }
      }
      function u() {
        null !== e.clickTarget &&
          e.show &&
          n.elementScrollIntoView(e.clickTarget, {
            block: "nearest",
            behavior: "auto",
          });
      }
      function p() {
        t(u, 50);
      }
      return (
        Object(r.c)(p),
        e.show
          ? ((c.current = e.settings), (l.current = e.clickTarget))
          : !0 === e.killWhenTargetIsNull && (l.current = e.clickTarget),
        null !== l.current
          ? a.createElement(
              s.a,
              {
                className: "PositionedBackplanePopup",
                innerRef: i,
                onEntered: e.onDidShow,
                onExited: e.onDidHide,
                isVisible: e.show,
                appear: !0,
                handleClose: e.onClick,
              },
              d(l.current)
            )
          : null
      );
    }
  },
  "./src/react/util/SearchBarWithX.tsx": function (e, t, i) {
    "use strict";
    i.d(t, "a", function () {
      return s;
    });
    var o = i("./node_modules/react/index.js"),
      a = i("./src/react/util/FastClickContainer.tsx"),
      n = i("./src/react/util/general.ts");
    i("./src/react/util/SearchBarWithX.css");
    class s extends o.Component {
      constructor(e) {
        super(e),
          (this.state = {
            filterBy: void 0 === e.defaultFilter ? "" : e.defaultFilter,
            isSelected: !1,
          });
      }
      onInputChange(e) {
        this.setState({ filterBy: e }), this.props.onFilterChange(e.trim());
      }
      render() {
        var e;
        return o.createElement(
          "div",
          {
            className:
              null !== (e = "SearchBarWithX_root " + this.props.className) &&
              void 0 !== e
                ? e
                : "",
          },
          o.createElement("div", {
            className: "i-32-16 i-light-grey i-search SearchBarWithX_icon",
          }),
          o.createElement("input", {
            type: "text",
            value: this.state.filterBy,
            onChange: (e) => this.onInputChange(e.target.value),
            placeholder: this.props.placeholder,
            onFocus: () => this.setState({ isSelected: !0 }),
            onBlur: () => this.setState({ isSelected: !1 }),
            autoFocus: !window.TOUCH,
            className: Object(n.a)(
              "SearchBarWithX_input",
              this.state.isSelected ? "SearchBarWithX_inputSelected" : ""
            ),
          }),
          "" !== this.state.filterBy
            ? o.createElement(a.a, {
                onFastClick: () => this.onInputChange(""),
                className:
                  "i-32-16 i-light-grey i-close SearchWithX_resetSearch",
              })
            : null
        );
      }
    }
  },
  "./src/react/util/Track.ts": function (e, t, i) {
    "use strict";
    i.d(t, "d", function () {
      return r;
    }),
      i.d(t, "c", function () {
        return l;
      }),
      i.d(t, "a", function () {
        return c;
      }),
      i.d(t, "e", function () {
        return u;
      }),
      i.d(t, "f", function () {
        return p;
      }),
      i.d(t, "b", function () {
        return h;
      });
    var o = i("./node_modules/mixpanel-browser/build/mixpanel.cjs.js"),
      a = i("./src/js/ui/ui-util.js");
    let n = "qs" === window.NINOX_ENV;
    function s(e) {
      return (
        !n &&
        e.journey.showUserLane &&
        "en" === window.LOCALE &&
        window.Userlane &&
        window.NINOX_WEB
      );
    }
    function r() {
      if (m())
        try {
          "prod" === window.NINOX_ENV
            ? o.init("6a0067315a2bfdbf3b1c30dc02b72bc0")
            : o.init("8eff22a6476c6715d6e44be8d9e81e70");
        } catch (e) {
          console.warn(e);
        }
    }
    function l(e) {
      d(e);
      try {
        (window.NinoxTracking || {}).trackLogin &&
          window.NinoxTracking.trackLogin(e.id, e.email);
      } catch (e) {
        console.warn(e);
      }
      if (m()) {
        try {
          o.identify(e.id),
            o.people.set({
              userId: e.id,
              userCreatedAt: new Date(e.createdAt),
              userVerified: e.verified,
              userPlanName: e.plan && e.plan.name ? e.plan.name : "null",
              userLanguage: e.language,
            });
        } catch (e) {
          console.warn(e);
        }
        try {
          window.Appcues && window.Appcues.identify(e.id, {});
        } catch (e) {
          console.warn(e);
        }
        try {
          window.Userlane && window.Userlane("user", e.id);
        } catch (e) {
          console.warn(e);
        }
      }
    }
    function c(e) {
      d(e);
      try {
        (window.NinoxTracking || {}).trackSignup &&
          window.NinoxTracking.trackSignup(e.id, e.email);
      } catch (e) {
        console.warn(e);
      }
      if (m()) {
        try {
          o.alias(e.id);
        } catch (e) {
          console.warn(e);
        }
        try {
          window.Appcues && window.Appcues.identify(e.id, {});
        } catch (e) {
          console.warn(e);
        }
        try {
          window.Userlane && window.Userlane("user", e.id);
        } catch (e) {
          console.warn(e);
        }
      }
    }
    function d(e) {
      if (s(e) && window.Userlane) {
        n = !0;
        const t = window.Userlane;
        t("init", "m6we5"),
          t("lang", window.LOCALE),
          t("identify", e.id, { email: e.email }),
          t("onStart", (e) => {
            switch (e) {
              case "36630":
              case "36627":
                window.ui.isInitialized && window.ui.backToRoot();
            }
          });
      }
    }
    function u(e) {
      if (m())
        try {
          o.register(e);
        } catch (e) {
          console.warn(e);
        }
    }
    function p(e, t, i) {
      if (m())
        try {
          o.track("App " + e + " " + t, i);
        } catch (e) {
          console.warn(e);
        }
    }
    function h(e) {
      if (!(window.NinoxTracking || {}).getIadAttributionDetails)
        return e("", null);
      window.NinoxTracking.getIadAttributionDetails(e);
    }
    function m() {
      const e = window.NINOX_APP_IPHONE
        ? window.ui && window.ui.account && "local" !== window.ui.account.id
        : window.root && "local" !== window.root.accountId;
      return !Object(a.g)() && e;
    }
  },
  "./src/react/util/commons.ts": function (e, t, i) {
    "use strict";
    i.d(t, "b", function () {
      return a;
    }),
      i.d(t, "c", function () {
        return n;
      }),
      i.d(t, "d", function () {
        return s;
      }),
      i.d(t, "a", function () {
        return r;
      });
    var o = i("./node_modules/assert/assert.js");
    function a(e, t) {
      return (
        null != e &&
        null != e.type &&
        null != e.type.displayName &&
        e.type.displayName === t.displayName
      );
    }
    function n(e, t) {
      const i = e.nextElementSibling;
      return null === i ? null : i.id === t ? i : n(i, t);
    }
    function s(e, t) {
      const i = e.previousElementSibling;
      return null === i ? null : i.id === t ? i : s(i, t);
    }
    function r(e) {
      l(null != e, `Expected 'val' to be defined, but received ${e}`);
    }
    function l(e, t) {
      if (!e) throw new o.AssertionError({ message: t });
    }
  },
  "./src/react/util/general.ts": function (e, t, i) {
    "use strict";
    function o(...e) {
      const t = [];
      for (const i of e)
        if ("string" == typeof i) t.push(i);
        else if ("object" == typeof i) for (const e in i) i[e] && t.push(e);
      return t.join(" ");
    }
    i.d(t, "a", function () {
      return o;
    });
  },
  "./src/react/util/hooks.ts": function (e, t, i) {
    "use strict";
    i.d(t, "c", function () {
      return a;
    }),
      i.d(t, "b", function () {
        return n;
      }),
      i.d(t, "a", function () {
        return s;
      });
    var o = i("./node_modules/react/index.js");
    function a(e) {
      const [t, i] = Object(o.useState)([
        window.getWidth(),
        window.getHeight(),
      ]);
      return (
        Object(o.useLayoutEffect)(() => {
          function t() {
            const t = window.getWidth(),
              o = window.getHeight();
            i([t, o]), e && e({ width: t, height: o });
          }
          return (
            window.addEventListener("resize", t),
            t(),
            () => {
              window.removeEventListener("resize", t);
            }
          );
        }, []),
        t
      );
    }
    function n() {
      const e = Object(o.useRef)();
      return (t, i, ...o) => {
        clearTimeout(e.current), (e.current = setTimeout(t, i, ...o));
      };
    }
    function s() {
      const [e] = a();
      return e <= 640;
    }
  },
  "./src/react/verification/ResendButton.scss": function (e, t, i) {},
  "./src/react/views/BrowserNotSupportedView.scss": function (e, t, i) {},
  0: function (e, t, i) {
    i("./src/init_styles.js"), (e.exports = i("./src/init_lib.js"));
  },
  1: function (e, t) {},
  2: function (e, t) {},
  3: function (e, t) {},
  4: function (e, t) {},
  5: function (e, t) {},
  6: function (e, t) {},
  7: function (e, t) {},
  8: function (e, t) {},
});
